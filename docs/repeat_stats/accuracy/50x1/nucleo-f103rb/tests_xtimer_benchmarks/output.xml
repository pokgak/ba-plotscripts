<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201115 23:01:48.371" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.620" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:49.636" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:51.571" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:49.616" endtime="20201115 23:01:51.572"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.578" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:51.574" endtime="20201115 23:01:51.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.613" endtime="20201115 23:01:51.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.585" endtime="20201115 23:01:51.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.582" endtime="20201115 23:01:51.921"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.952" endtime="20201115 23:01:51.976"></status>
</kw>
<msg timestamp="20201115 23:01:51.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 23:01:51.948" endtime="20201115 23:01:51.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201115 23:01:51.980" endtime="20201115 23:01:51.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.992" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:51.987" endtime="20201115 23:01:51.993"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:51.942" endtime="20201115 23:01:51.995"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:51.936" endtime="20201115 23:01:51.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.933" endtime="20201115 23:01:51.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:52.006" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:52.004" endtime="20201115 23:01:52.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.999" endtime="20201115 23:01:52.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.931" endtime="20201115 23:01:52.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.929" endtime="20201115 23:01:52.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.010" endtime="20201115 23:01:52.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.926" endtime="20201115 23:01:52.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.017" endtime="20201115 23:01:52.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.923" endtime="20201115 23:01:52.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.609" endtime="20201115 23:01:52.023"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.041" endtime="20201115 23:01:52.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.037" endtime="20201115 23:01:52.065"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.102" endtime="20201115 23:01:52.121"></status>
</kw>
<msg timestamp="20201115 23:01:52.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.098" endtime="20201115 23:01:52.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.125" endtime="20201115 23:01:52.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.136" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:52.132" endtime="20201115 23:01:52.137"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:52.090" endtime="20201115 23:01:52.139"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:52.083" endtime="20201115 23:01:52.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.079" endtime="20201115 23:01:52.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:52.150" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:52.148" endtime="20201115 23:01:52.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.144" endtime="20201115 23:01:52.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.077" endtime="20201115 23:01:52.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.076" endtime="20201115 23:01:52.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.154" endtime="20201115 23:01:52.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.071" endtime="20201115 23:01:52.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.067" endtime="20201115 23:01:52.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.034" endtime="20201115 23:01:52.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.181" endtime="20201115 23:01:52.196"></status>
</kw>
<msg timestamp="20201115 23:01:52.197" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.177" endtime="20201115 23:01:52.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.204" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.200" endtime="20201115 23:01:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.206" endtime="20201115 23:01:52.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.169" endtime="20201115 23:01:52.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.164" endtime="20201115 23:01:52.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.226" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:01:52.224" endtime="20201115 23:01:52.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.230" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:01:52.228" endtime="20201115 23:01:52.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.217" endtime="20201115 23:01:52.233"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:52.024" endtime="20201115 23:01:52.236" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:48.631" endtime="20201115 23:01:52.246"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.388" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:52.404" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:54.223" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:52.384" endtime="20201115 23:01:54.225"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.230" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:54.227" endtime="20201115 23:01:54.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.381" endtime="20201115 23:01:54.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.237" endtime="20201115 23:01:54.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.234" endtime="20201115 23:01:54.574"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.604" endtime="20201115 23:01:54.623"></status>
</kw>
<msg timestamp="20201115 23:01:54.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.600" endtime="20201115 23:01:54.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.626" endtime="20201115 23:01:54.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.637" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:54.633" endtime="20201115 23:01:54.638"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:54.594" endtime="20201115 23:01:54.640"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:54.588" endtime="20201115 23:01:54.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.586" endtime="20201115 23:01:54.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:54.650" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:54.649" endtime="20201115 23:01:54.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.644" endtime="20201115 23:01:54.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.584" endtime="20201115 23:01:54.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.582" endtime="20201115 23:01:54.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.656" endtime="20201115 23:01:54.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.579" endtime="20201115 23:01:54.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.663" endtime="20201115 23:01:54.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.575" endtime="20201115 23:01:54.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.378" endtime="20201115 23:01:54.669"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.683" endtime="20201115 23:01:54.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.679" endtime="20201115 23:01:54.707"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.741" endtime="20201115 23:01:54.759"></status>
</kw>
<msg timestamp="20201115 23:01:54.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.738" endtime="20201115 23:01:54.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.768" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.764" endtime="20201115 23:01:54.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.775" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:54.771" endtime="20201115 23:01:54.776"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:54.730" endtime="20201115 23:01:54.778"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:54.724" endtime="20201115 23:01:54.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.721" endtime="20201115 23:01:54.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:54.788" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:54.786" endtime="20201115 23:01:54.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.782" endtime="20201115 23:01:54.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.719" endtime="20201115 23:01:54.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.717" endtime="20201115 23:01:54.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.791" endtime="20201115 23:01:54.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.713" endtime="20201115 23:01:54.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.708" endtime="20201115 23:01:54.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.677" endtime="20201115 23:01:54.799"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.807" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.891" endtime="20201115 23:01:54.908"></status>
</kw>
<msg timestamp="20201115 23:01:54.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.888" endtime="20201115 23:01:54.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.912" endtime="20201115 23:01:54.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.918" endtime="20201115 23:01:54.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.880" endtime="20201115 23:01:54.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.812" endtime="20201115 23:01:54.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.942" endtime="20201115 23:01:55.312"></status>
</kw>
<msg timestamp="20201115 23:01:55.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.201437444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.201441389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.938" endtime="20201115 23:01:55.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.201437444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.201441389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.322" endtime="20201115 23:01:55.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.341" endtime="20201115 23:01:55.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.931" endtime="20201115 23:01:55.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.927" endtime="20201115 23:01:55.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.359" level="INFO">${RESULT} = [{'time': 0.201441389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000005194e-06, 'source_diff': 3.945000000005194e-06}, {'time': 0.201457361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.350" endtime="20201115 23:01:55.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.391" level="INFO">${ACCURACY} = {'time': [0.201441389, 0.201457361, 0.201468, 0.201479403, 0.201489111, 0.201497028, 0.201515389, 0.201530208, 0.201536236, 0.201554333, 0.201567958, 0.201582125, 0.201599222, 0.201607139, 0.201618403...</msg>
<status status="PASS" starttime="20201115 23:01:55.362" endtime="20201115 23:01:55.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.402" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.400" endtime="20201115 23:01:55.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.407" level="INFO">VALUE: [3.945000000005194e-06, 3.4580000000117295e-06, 2.9170000000189322e-06, 3.459000000011203e-06, 3.4580000000117295e-06, 2.9029999999985456e-06, 3.971999999990983e-06, 2.929999999984334e-06, 3.52800000000264e-06, 2.9300000000120896e-06, 3.4159999999783253e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.9169999999911767e-06, 3.916999999992177e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 2.915999999991703e-06, 3.4720000000043605e-06, 3.402999999985168e-06, 2.9029999999985456e-06, 3.486000000024747e-06, 3.4589999999834475e-06, 2.901999999999072e-06, 2.915999999991703e-06, 2.8890000000059146e-06, 3.4580000000117295e-06, 3.443999999991343e-06, 3.416000000006081e-06, 3.5139999999822535e-06, 2.9719999999899827e-06, 3.4170000000055545e-06, 2.9300000000120896e-06, 2.901999999999072e-06, 3.4729999999760786e-06, 3.4019999999856942e-06, 3.4440000000190985e-06, 2.8890000000059146e-06, 2.915999999991703e-06, 3.4170000000055545e-06, 2.9310000000115632e-06, 3.4580000000117295e-06, 2.8610000000206526e-06, 2.901999999999072e-06, 3.4859999999969915e-06, 3.4170000000055545e-06, 2.9169999999911767e-06, 3.459000000011203e-06, 3.457999999983974e-06, 2.929999999984334e-06]</msg>
<status status="PASS" starttime="20201115 23:01:55.404" endtime="20201115 23:01:55.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.393" endtime="20201115 23:01:55.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.416" endtime="20201115 23:01:55.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.425" endtime="20201115 23:01:55.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.420" endtime="20201115 23:01:55.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.412" endtime="20201115 23:01:55.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.808" endtime="20201115 23:01:55.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.804" endtime="20201115 23:01:55.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.802" endtime="20201115 23:01:55.452"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.457" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.479" endtime="20201115 23:01:55.496"></status>
</kw>
<msg timestamp="20201115 23:01:55.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.475" endtime="20201115 23:01:55.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.500" endtime="20201115 23:01:55.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.506" endtime="20201115 23:01:55.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.468" endtime="20201115 23:01:55.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.462" endtime="20201115 23:01:55.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.530" endtime="20201115 23:01:55.842"></status>
</kw>
<msg timestamp="20201115 23:01:55.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047208292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047212764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.526" endtime="20201115 23:01:55.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047208292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047212764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.846" endtime="20201115 23:01:55.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.855" endtime="20201115 23:01:55.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.519" endtime="20201115 23:01:55.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.514" endtime="20201115 23:01:55.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.863" level="INFO">${RESULT} = [{'time': 0.047212764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.047228611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.859" endtime="20201115 23:01:55.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.877" level="INFO">${ACCURACY} = {'time': [0.047212764, 0.047228611, 0.047246375, 0.047253542, 0.04727075, 0.047279708, 0.047286736, 0.047298625, 0.0473065, 0.047317681, 0.047336653, 0.047345764, 0.047359542, 0.047375611, 0.047393556...</msg>
<status status="PASS" starttime="20201115 23:01:55.864" endtime="20201115 23:01:55.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.882" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.881" endtime="20201115 23:01:55.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.885" level="INFO">VALUE: [4.471999999998422e-06, 3.971999999997922e-06, 3.9859999999974915e-06, 4.473000000004834e-06, 4.485999999997992e-06, 3.957999999998352e-06, 4.51400000000407e-06, 3.916999999999116e-06, 4.52800000000364e-06, 4.513999999997131e-06, 3.958999999997825e-06, 4.513999999997131e-06, 3.972999999997395e-06, 3.957999999998352e-06, 3.973000000004334e-06, 4.485999999997992e-06, 3.959000000004764e-06, 4.0410000000032364e-06, 4.4720000000053606e-06, 4.457999999998852e-06, 4.471999999998422e-06, 4.5000000000045e-06, 4.527999999996701e-06, 4.459000000005264e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.513999999997131e-06, 4.541999999996271e-06, 4.471999999998422e-06, 3.971999999997922e-06, 4.458999999998325e-06, 3.945000000005194e-06, 4.569000000002876e-06, 4.527999999996701e-06, 4.4999999999975615e-06, 4.4860000000049305e-06, 3.972999999997395e-06, 4.4860000000049305e-06, 4.000000000004e-06, 4.540999999996798e-06, 3.957999999998352e-06, 4.51400000000407e-06, 4.527999999996701e-06, 3.957999999998352e-06, 4.471999999998422e-06, 4.527999999996701e-06, 4.471999999998422e-06, 4.55600000000278e-06, 4.51400000000407e-06, 4.471999999998422e-06]</msg>
<status status="PASS" starttime="20201115 23:01:55.883" endtime="20201115 23:01:55.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.878" endtime="20201115 23:01:55.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.889" endtime="20201115 23:01:55.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.893" endtime="20201115 23:01:55.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.891" endtime="20201115 23:01:55.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.887" endtime="20201115 23:01:55.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.458" endtime="20201115 23:01:55.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.454" endtime="20201115 23:01:55.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.452" endtime="20201115 23:01:55.915"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.917" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.927" endtime="20201115 23:01:55.942"></status>
</kw>
<msg timestamp="20201115 23:01:55.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.926" endtime="20201115 23:01:55.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.944" endtime="20201115 23:01:55.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.947" endtime="20201115 23:01:55.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.922" endtime="20201115 23:01:55.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.920" endtime="20201115 23:01:55.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.958" endtime="20201115 23:01:56.245"></status>
</kw>
<msg timestamp="20201115 23:01:56.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026853139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026858139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.957" endtime="20201115 23:01:56.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026853139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026858139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.249" endtime="20201115 23:01:56.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.258" endtime="20201115 23:01:56.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.953" endtime="20201115 23:01:56.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.951" endtime="20201115 23:01:56.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.266" level="INFO">${RESULT} = [{'time': 0.026858139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.026874403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:56.262" endtime="20201115 23:01:56.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.279" level="INFO">${ACCURACY} = {'time': [0.026858139, 0.026874403, 0.026887347, 0.026901125, 0.026916375, 0.026934153, 0.026945222, 0.026963306, 0.026971153, 0.026991389, 0.027001222, 0.027014181, 0.027033556, 0.027047431, 0.027058...</msg>
<status status="PASS" starttime="20201115 23:01:56.267" endtime="20201115 23:01:56.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.285" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.284" endtime="20201115 23:01:56.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.287" level="INFO">VALUE: [4.9999999999980616e-06, 5.014000000001101e-06, 5.0139999999976315e-06, 5.000000000001531e-06, 5.0139999999976315e-06, 5.042000000000241e-06, 5.028000000000671e-06, 5.556000000000311e-06, 5.528000000001171e-06, 5.014000000001101e-06, 5.027999999997201e-06, 5.028000000000671e-06, 5.5839999999994505e-06, 5.569999999999881e-06, 5.541000000001267e-06, 5.569999999999881e-06, 5.028000000000671e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.526999999998228e-06, 4.986000000001961e-06, 5.0139999999976315e-06, 5.0139999999976315e-06, 5.055000000000337e-06, 5.569000000000407e-06, 5.569000000000407e-06, 5.527999999997701e-06, 5.514000000001601e-06, 4.9999999999980616e-06, 5.041000000000767e-06, 5.096999999999047e-06, 5.569000000000407e-06, 5.499999999998562e-06, 5.028000000000671e-06, 5.569000000000407e-06, 5.512999999998658e-06, 5.0139999999976315e-06, 5.042000000000241e-06, 5.485999999998992e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.514000000001601e-06, 5.555000000000837e-06, 5.014000000001101e-06, 5.000000000001531e-06, 5.014000000001101e-06, 5.082999999999477e-06, 5.528000000001171e-06, 5.014000000001101e-06, 5.014000000001101e-06]</msg>
<status status="PASS" starttime="20201115 23:01:56.286" endtime="20201115 23:01:56.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.280" endtime="20201115 23:01:56.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.292" endtime="20201115 23:01:56.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.296" endtime="20201115 23:01:56.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.293" endtime="20201115 23:01:56.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.289" endtime="20201115 23:01:56.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.918" endtime="20201115 23:01:56.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.916" endtime="20201115 23:01:56.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.915" endtime="20201115 23:01:56.317"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.320" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.330" endtime="20201115 23:01:56.344"></status>
</kw>
<msg timestamp="20201115 23:01:56.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.328" endtime="20201115 23:01:56.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.347" endtime="20201115 23:01:56.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.350" endtime="20201115 23:01:56.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.325" endtime="20201115 23:01:56.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.322" endtime="20201115 23:01:56.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.361" endtime="20201115 23:01:56.647"></status>
</kw>
<msg timestamp="20201115 23:01:56.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026996639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02700275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:56.359" endtime="20201115 23:01:56.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026996639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02700275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:56.651" endtime="20201115 23:01:56.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.660" endtime="20201115 23:01:56.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.356" endtime="20201115 23:01:56.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.354" endtime="20201115 23:01:56.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.668" level="INFO">${RESULT} = [{'time': 0.02700275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.027017778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:56.664" endtime="20201115 23:01:56.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.696" level="INFO">${ACCURACY} = {'time': [0.02700275, 0.027017778, 0.027028556, 0.027049625, 0.027061764, 0.027080764, 0.027101736, 0.027116569, 0.027137875, 0.027149694, 0.027164944, 0.027174778, 0.027196833, 0.027212597, 0.0272226...</msg>
<status status="PASS" starttime="20201115 23:01:56.669" endtime="20201115 23:01:56.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.707" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.705" endtime="20201115 23:01:56.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.713" level="INFO">VALUE: [6.110999999999617e-06, 6.0839999999999506e-06, 5.541999999997271e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.569000000001407e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.568999999997938e-06, 5.985999999999492e-06, 6.070000000000381e-06, 6.624999999999687e-06, 5.541000000001267e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.584000000000451e-06, 6.584000000000451e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.624999999999687e-06, 6.569999999997411e-06, 6.0979999999995205e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.638999999999257e-06, 6.499999999999562e-06, 6.110999999999617e-06, 6.6529999999988265e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.624999999999687e-06, 6.055999999997341e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.624999999999687e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.584000000000451e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.583000000000977e-06, 6.083000000000477e-06, 6.584000000000451e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201115 23:01:56.709" endtime="20201115 23:01:56.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.698" endtime="20201115 23:01:56.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.722" endtime="20201115 23:01:56.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.730" endtime="20201115 23:01:56.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.726" endtime="20201115 23:01:56.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.717" endtime="20201115 23:01:56.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.321" endtime="20201115 23:01:56.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.318" endtime="20201115 23:01:56.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.318" endtime="20201115 23:01:56.757"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.763" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.785" endtime="20201115 23:01:56.804"></status>
</kw>
<msg timestamp="20201115 23:01:56.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.782" endtime="20201115 23:01:56.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.807" endtime="20201115 23:01:56.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.814" endtime="20201115 23:01:56.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.775" endtime="20201115 23:01:56.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.769" endtime="20201115 23:01:56.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.837" endtime="20201115 23:01:57.201"></status>
</kw>
<msg timestamp="20201115 23:01:57.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048272292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048279458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.834" endtime="20201115 23:01:57.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048272292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048279458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.211" endtime="20201115 23:01:57.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.229" endtime="20201115 23:01:57.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.827" endtime="20201115 23:01:57.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.822" endtime="20201115 23:01:57.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.249" level="INFO">${RESULT} = [{'time': 0.048279458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.165999999995953e-06, 'source_diff': 7.165999999995953e-06}, {'time': 0.048292208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.240" endtime="20201115 23:01:57.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.279" level="INFO">${ACCURACY} = {'time': [0.048279458, 0.048292208, 0.04830725, 0.048325458, 0.048341222, 0.048363264, 0.048381542, 0.048393264, 0.048403458, 0.048423347, 0.048434528, 0.048454167, 0.048472542, 0.0484925, 0.048507278...</msg>
<status status="PASS" starttime="20201115 23:01:57.251" endtime="20201115 23:01:57.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.290" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.288" endtime="20201115 23:01:57.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.296" level="INFO">VALUE: [7.165999999995953e-06, 7.139000000003226e-06, 7.111000000004086e-06, 7.152000000003322e-06, 7.625000000004156e-06, 7.625000000004156e-06, 7.638999999996787e-06, 7.124999999996717e-06, 7.666000000003392e-06, 7.0969999999975775e-06, 7.652999999996357e-06, 7.138999999996287e-06, 7.110999999997147e-06, 7.639000000003726e-06, 7.681000000002436e-06, 7.124999999996717e-06, 6.625000000003156e-06, 7.152000000003322e-06, 7.624999999997217e-06, 7.721999999994733e-06, 7.0969999999975775e-06, 7.624999999997217e-06, 7.638000000004252e-06, 7.153000000002796e-06, 7.124999999996717e-06, 7.679999999996023e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.638999999996787e-06, 7.653000000003296e-06, 7.694000000002532e-06, 7.124999999996717e-06, 6.639000000002726e-06, 7.667000000002866e-06, 6.610999999996647e-06, 7.124999999996717e-06, 7.152999999995857e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.667000000002866e-06, 6.638999999995787e-06, 7.639000000003726e-06, 7.138999999996287e-06, 7.681000000002436e-06, 7.124999999996717e-06, 7.680000000002962e-06, 7.666000000003392e-06, 7.125000000003656e-06]</msg>
<status status="PASS" starttime="20201115 23:01:57.292" endtime="20201115 23:01:57.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.281" endtime="20201115 23:01:57.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.305" endtime="20201115 23:01:57.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.314" endtime="20201115 23:01:57.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.309" endtime="20201115 23:01:57.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.300" endtime="20201115 23:01:57.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.765" endtime="20201115 23:01:57.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.760" endtime="20201115 23:01:57.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.758" endtime="20201115 23:01:57.341"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.346" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.368" endtime="20201115 23:01:57.386"></status>
</kw>
<msg timestamp="20201115 23:01:57.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.365" endtime="20201115 23:01:57.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.389" endtime="20201115 23:01:57.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.396" endtime="20201115 23:01:57.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.357" endtime="20201115 23:01:57.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.352" endtime="20201115 23:01:57.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.419" endtime="20201115 23:01:57.778"></status>
</kw>
<msg timestamp="20201115 23:01:57.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047744167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047752417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.416" endtime="20201115 23:01:57.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047744167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047752417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.787" endtime="20201115 23:01:57.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.806" endtime="20201115 23:01:57.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.409" endtime="20201115 23:01:57.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.404" endtime="20201115 23:01:57.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.824" level="INFO">${RESULT} = [{'time': 0.047752417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.047764514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.815" endtime="20201115 23:01:57.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.854" level="INFO">${ACCURACY} = {'time': [0.047752417, 0.047764514, 0.047778208, 0.047796417, 0.047808347, 0.047827514, 0.047840611, 0.047851208, 0.047863583, 0.047880528, 0.047899556, 0.047910333, 0.047926361, 0.047946528, 0.047966...</msg>
<status status="PASS" starttime="20201115 23:01:57.826" endtime="20201115 23:01:57.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.865" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.863" endtime="20201115 23:01:57.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.871" level="INFO">VALUE: [8.250000000001312e-06, 8.195000000002506e-06, 7.625000000004156e-06, 8.181000000002936e-06, 8.180000000003462e-06, 8.708000000003102e-06, 8.707999999996163e-06, 7.651999999996884e-06, 8.166000000003892e-06, 8.180999999995997e-06, 8.181000000002936e-06, 7.638999999996787e-06, 7.680000000002962e-06, 8.681000000003436e-06, 8.693999999996593e-06, 8.750000000001812e-06, 8.193999999996093e-06, 8.721999999995733e-06, 7.624999999997217e-06, 8.152999999996857e-06, 8.221999999995233e-06, 8.193999999996093e-06, 8.665999999997454e-06, 8.694999999996067e-06, 8.679999999997023e-06, 8.125000000004656e-06, 7.638999999996787e-06, 8.695000000003006e-06, 8.681000000003436e-06, 8.208000000002602e-06, 7.680999999995497e-06, 8.193999999996093e-06, 7.709000000001576e-06, 8.193999999996093e-06, 8.693999999996593e-06, 8.707999999996163e-06, 8.166000000003892e-06, 7.5830000000054465e-06, 8.721999999995733e-06, 7.624999999997217e-06, 8.181000000002936e-06, 8.250000000001312e-06, 8.680999999996497e-06, 8.194000000003032e-06, 8.165999999996953e-06, 8.166999999996427e-06, 8.693999999996593e-06, 8.694999999996067e-06, 8.222000000002172e-06, 8.679999999997023e-06]</msg>
<status status="PASS" starttime="20201115 23:01:57.868" endtime="20201115 23:01:57.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.856" endtime="20201115 23:01:57.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.889" endtime="20201115 23:01:57.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.898" endtime="20201115 23:01:57.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.893" endtime="20201115 23:01:57.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.885" endtime="20201115 23:01:57.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.347" endtime="20201115 23:01:57.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.343" endtime="20201115 23:01:57.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.342" endtime="20201115 23:01:57.924"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.930" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.952" endtime="20201115 23:01:57.970"></status>
</kw>
<msg timestamp="20201115 23:01:57.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.948" endtime="20201115 23:01:57.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.973" endtime="20201115 23:01:57.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.979" endtime="20201115 23:01:57.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.941" endtime="20201115 23:01:57.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.935" endtime="20201115 23:01:57.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.003" endtime="20201115 23:01:58.355"></status>
</kw>
<msg timestamp="20201115 23:01:58.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047372139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.000" endtime="20201115 23:01:58.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047372139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.365" endtime="20201115 23:01:58.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.384" endtime="20201115 23:01:58.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.993" endtime="20201115 23:01:58.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.988" endtime="20201115 23:01:58.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.403" level="INFO">${RESULT} = [{'time': 0.047372139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.047396306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.394" endtime="20201115 23:01:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.433" level="INFO">${ACCURACY} = {'time': [0.047372139, 0.047396306, 0.047413528, 0.047429528, 0.047450458, 0.047462431, 0.047483583, 0.047502417, 0.047523125, 0.047542181, 0.047557181, 0.047569153, 0.047583472, 0.04759925, 0.0476172...</msg>
<status status="PASS" starttime="20201115 23:01:58.405" endtime="20201115 23:01:58.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.445" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.442" endtime="20201115 23:01:58.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.451" level="INFO">VALUE: [8.695000000003006e-06, 8.737000000001716e-06, 9.278000000001452e-06, 9.792000000001522e-06, 9.236000000002742e-06, 9.250000000002312e-06, 9.180000000004462e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.181000000003936e-06, 8.736999999994777e-06, 9.250000000002312e-06, 9.278000000001452e-06, 8.736000000002242e-06, 9.236000000002742e-06, 9.237000000002216e-06, 9.750000000002812e-06, 9.792000000001522e-06, 9.749999999995873e-06, 9.236000000002742e-06, 8.721999999995733e-06, 9.235999999995803e-06, 9.749999999995873e-06, 9.222000000003172e-06, 9.237000000002216e-06, 9.235999999995803e-06, 9.736000000003242e-06, 9.250000000002312e-06, 9.778000000001952e-06, 9.819000000001188e-06, 9.235999999995803e-06, 8.723000000002146e-06, 8.694000000003532e-06, 9.250000000002312e-06, 8.694999999996067e-06, 9.792000000001522e-06, 9.791000000002048e-06, 9.222000000003172e-06, 9.250000000002312e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.750000000002812e-06, 9.221999999996233e-06, 9.250000000002312e-06, 8.693999999996593e-06, 9.666999999997927e-06, 8.693999999996593e-06, 9.250000000002312e-06, 9.750000000002812e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201115 23:01:58.447" endtime="20201115 23:01:58.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.435" endtime="20201115 23:01:58.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.460" endtime="20201115 23:01:58.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.468" endtime="20201115 23:01:58.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.464" endtime="20201115 23:01:58.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.455" endtime="20201115 23:01:58.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.931" endtime="20201115 23:01:58.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.927" endtime="20201115 23:01:58.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.925" endtime="20201115 23:01:58.495"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.522" endtime="20201115 23:01:58.542"></status>
</kw>
<msg timestamp="20201115 23:01:58.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.519" endtime="20201115 23:01:58.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.545" endtime="20201115 23:01:58.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.552" endtime="20201115 23:01:58.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.511" endtime="20201115 23:01:58.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.506" endtime="20201115 23:01:58.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.576" endtime="20201115 23:01:58.931"></status>
</kw>
<msg timestamp="20201115 23:01:58.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047684847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047695153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.572" endtime="20201115 23:01:58.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047684847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047695153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.941" endtime="20201115 23:01:58.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.959" endtime="20201115 23:01:58.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.565" endtime="20201115 23:01:58.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.560" endtime="20201115 23:01:58.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.977" level="INFO">${RESULT} = [{'time': 0.047695153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0305999999994653e-05, 'source_diff': 1.0305999999994653e-05}, {'time': 0.04771325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:58.968" endtime="20201115 23:01:58.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.010" level="INFO">${ACCURACY} = {'time': [0.047695153, 0.04771325, 0.047732139, 0.047757833, 0.047775236, 0.047792833, 0.047806125, 0.047827347, 0.047853208, 0.047874986, 0.047893847, 0.047916056, 0.047933333, 0.047958931, 0.0479739...</msg>
<status status="PASS" starttime="20201115 23:01:58.979" endtime="20201115 23:01:59.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.021" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.019" endtime="20201115 23:01:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.027" level="INFO">VALUE: [1.0305999999994653e-05, 1.0791999999995583e-05, 1.0306000000001592e-05, 1.0291000000002548e-05, 1.0305000000002118e-05, 1.0305000000002118e-05, 1.0347000000000828e-05, 1.0847000000001328e-05, 1.0847000000001328e-05, 1.0305000000002118e-05, 1.0305000000002118e-05, 1.0320000000001162e-05, 1.0805000000002618e-05, 1.0374999999999968e-05, 1.029099999999561e-05, 1.0819000000002188e-05, 9.750000000002812e-06, 1.029099999999561e-05, 1.0847000000001328e-05, 1.0902999999999607e-05, 9.818999999994249e-06, 1.0805999999995153e-05, 9.806000000001092e-06, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0777000000003478e-05, 1.0304999999995179e-05, 1.026299999999647e-05, 1.0305999999994653e-05, 1.0306000000001592e-05, 1.0292000000002022e-05, 9.791000000002048e-06, 9.764000000002382e-06, 9.777000000002478e-06, 1.0264000000002882e-05, 9.749999999995873e-06, 1.0305999999994653e-05, 1.0291999999995083e-05, 1.0834000000001232e-05, 1.0847000000001328e-05, 9.749999999995873e-06, 1.0292000000002022e-05, 9.792000000001522e-06, 1.0278000000002452e-05, 9.750000000002812e-06, 1.0862000000000371e-05, 9.778000000001952e-06, 1.0306000000001592e-05, 1.0235999999996803e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.024" endtime="20201115 23:01:59.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.012" endtime="20201115 23:01:59.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.035" endtime="20201115 23:01:59.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.044" endtime="20201115 23:01:59.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.039" endtime="20201115 23:01:59.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.031" endtime="20201115 23:01:59.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.502" endtime="20201115 23:01:59.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.498" endtime="20201115 23:01:59.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.496" endtime="20201115 23:01:59.070"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.097" endtime="20201115 23:01:59.115"></status>
</kw>
<msg timestamp="20201115 23:01:59.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.094" endtime="20201115 23:01:59.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.118" endtime="20201115 23:01:59.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.125" endtime="20201115 23:01:59.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.086" endtime="20201115 23:01:59.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.081" endtime="20201115 23:01:59.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.148" endtime="20201115 23:01:59.493"></status>
</kw>
<msg timestamp="20201115 23:01:59.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046561014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046571833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.144" endtime="20201115 23:01:59.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046561014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046571833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.503" endtime="20201115 23:01:59.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.522" endtime="20201115 23:01:59.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.137" endtime="20201115 23:01:59.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.133" endtime="20201115 23:01:59.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.541" level="INFO">${RESULT} = [{'time': 0.046571833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.046584931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:59.532" endtime="20201115 23:01:59.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.571" level="INFO">${ACCURACY} = {'time': [0.046571833, 0.046584931, 0.046612278, 0.046629292, 0.046651972, 0.046672917, 0.046692194, 0.046717139, 0.046743069, 0.046767986, 0.046783319, 0.046798986, 0.046819306, 0.046835056, 0.046857...</msg>
<status status="PASS" starttime="20201115 23:01:59.543" endtime="20201115 23:01:59.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.582" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.580" endtime="20201115 23:01:59.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.588" level="INFO">VALUE: [1.0819000000002188e-05, 1.0723000000004146e-05, 1.1903000000000608e-05, 1.1375000000000968e-05, 1.0805000000002618e-05, 1.1348000000001301e-05, 1.1333000000002258e-05, 1.1389000000000538e-05, 1.1346999999994889e-05, 1.1360999999994459e-05, 1.1360999999994459e-05, 1.0861000000000898e-05, 1.1403000000000107e-05, 1.1403000000000107e-05, 1.0860999999993959e-05, 1.080499999999568e-05, 1.1861000000001898e-05, 1.1402000000000634e-05, 1.1916000000000704e-05, 1.0847000000001328e-05, 1.1875000000001468e-05, 1.1334000000001732e-05, 1.1375000000000968e-05, 1.1916000000000704e-05, 1.1902000000001134e-05, 1.1334000000001732e-05, 1.1348000000001301e-05, 1.1903000000000608e-05, 1.0847000000001328e-05, 1.1403000000000107e-05, 1.1848000000001802e-05, 1.1848000000001802e-05, 1.1360999999994459e-05, 1.1875000000001468e-05, 1.077699999999654e-05, 1.1362000000000871e-05, 1.1347000000001828e-05, 1.0847000000001328e-05, 1.1389000000000538e-05, 1.0848000000000801e-05, 1.0764000000003382e-05, 1.1348000000001301e-05, 1.1333999999994793e-05, 1.1360999999994459e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.1903000000000608e-05, 1.0848000000000801e-05, 1.0847000000001328e-05, 1.0889000000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.585" endtime="20201115 23:01:59.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.573" endtime="20201115 23:01:59.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.596" endtime="20201115 23:01:59.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.605" endtime="20201115 23:01:59.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.600" endtime="20201115 23:01:59.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.592" endtime="20201115 23:01:59.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.077" endtime="20201115 23:01:59.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.073" endtime="20201115 23:01:59.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.071" endtime="20201115 23:01:59.632"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.638" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.660" endtime="20201115 23:01:59.678"></status>
</kw>
<msg timestamp="20201115 23:01:59.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.657" endtime="20201115 23:01:59.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.682" endtime="20201115 23:01:59.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.688" endtime="20201115 23:01:59.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.649" endtime="20201115 23:01:59.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.643" endtime="20201115 23:01:59.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.713" endtime="20201115 23:02:00.031"></status>
</kw>
<msg timestamp="20201115 23:02:00.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048616278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048628708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.708" endtime="20201115 23:02:00.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048616278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048628708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.035" endtime="20201115 23:02:00.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.043" endtime="20201115 23:02:00.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.701" endtime="20201115 23:02:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.696" endtime="20201115 23:02:00.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.052" level="INFO">${RESULT} = [{'time': 0.048628708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2430000000000774e-05, 'source_diff': 1.2430000000000774e-05}, {'time': 0.048644792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.047" endtime="20201115 23:02:00.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.065" level="INFO">${ACCURACY} = {'time': [0.048628708, 0.048644792, 0.048664944, 0.048683681, 0.048703681, 0.048719847, 0.04874375, 0.048762431, 0.048783514, 0.048805514, 0.048833903, 0.048849861, 0.048871528, 0.048887708, 0.0489088...</msg>
<status status="PASS" starttime="20201115 23:02:00.053" endtime="20201115 23:02:00.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.070" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.069" endtime="20201115 23:02:00.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.073" level="INFO">VALUE: [1.2430000000000774e-05, 1.1848000000001802e-05, 1.2430000000000774e-05, 1.1834000000002232e-05, 1.1848000000001802e-05, 1.2402999999994169e-05, 1.2431000000000247e-05, 1.2375000000001968e-05, 1.1917000000000177e-05, 1.2417000000000677e-05, 1.2971999999999984e-05, 1.2417000000000677e-05, 1.1860999999994959e-05, 1.2402000000001634e-05, 1.1903000000000608e-05, 1.2431000000000247e-05, 1.1848000000001802e-05, 1.1861000000001898e-05, 1.2402000000001634e-05, 1.2403000000001108e-05, 1.2972999999999457e-05, 1.1860999999994959e-05, 1.1860999999994959e-05, 1.1861000000001898e-05, 1.2471999999999483e-05, 1.2416000000001204e-05, 1.1888000000001564e-05, 1.2388999999994599e-05, 1.2403000000001108e-05, 1.1889000000001038e-05, 1.2416000000001204e-05, 1.2403000000001108e-05, 1.1944999999999317e-05, 1.1875000000001468e-05, 1.2903000000001608e-05, 1.2417000000000677e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.1957999999999414e-05, 1.1903000000000608e-05, 1.181899999999625e-05, 1.1861000000001898e-05, 1.1860999999994959e-05, 1.180499999999668e-05, 1.2389000000001538e-05, 1.2402000000001634e-05, 1.2986999999999027e-05, 1.1860999999994959e-05, 1.2403000000001108e-05, 1.2402999999994169e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.071" endtime="20201115 23:02:00.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.066" endtime="20201115 23:02:00.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.077" endtime="20201115 23:02:00.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.081" endtime="20201115 23:02:00.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.079" endtime="20201115 23:02:00.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.075" endtime="20201115 23:02:00.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.639" endtime="20201115 23:02:00.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.635" endtime="20201115 23:02:00.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.633" endtime="20201115 23:02:00.102"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.105" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.117" endtime="20201115 23:02:00.135"></status>
</kw>
<msg timestamp="20201115 23:02:00.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.114" endtime="20201115 23:02:00.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.139" endtime="20201115 23:02:00.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.146" endtime="20201115 23:02:00.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.110" endtime="20201115 23:02:00.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.108" endtime="20201115 23:02:00.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.169" endtime="20201115 23:02:00.518"></status>
</kw>
<msg timestamp="20201115 23:02:00.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030149472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030162444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.166" endtime="20201115 23:02:00.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030149472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030162444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.527" endtime="20201115 23:02:00.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.546" endtime="20201115 23:02:00.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.159" endtime="20201115 23:02:00.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.154" endtime="20201115 23:02:00.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.565" level="INFO">${RESULT} = [{'time': 0.030162444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.030189458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.556" endtime="20201115 23:02:00.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.595" level="INFO">${ACCURACY} = {'time': [0.030162444, 0.030189458, 0.030213597, 0.030231306, 0.030249167, 0.030269236, 0.030289403, 0.030316583, 0.030343486, 0.030360375, 0.030380319, 0.030403431, 0.030424431, 0.030444375, 0.030460...</msg>
<status status="PASS" starttime="20201115 23:02:00.567" endtime="20201115 23:02:00.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.606" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.604" endtime="20201115 23:02:00.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.612" level="INFO">VALUE: [1.2971999999999984e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.2917000000001178e-05, 1.3445000000000817e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.3444000000001344e-05, 1.2902999999998138e-05, 1.2916999999997708e-05, 1.3458000000000914e-05, 1.3514000000002663e-05, 1.2916999999997708e-05, 1.3472000000000484e-05, 1.2971999999999984e-05, 1.2931000000000747e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.3486000000000054e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.3417000000001678e-05, 1.2944000000000844e-05, 1.3472000000000484e-05, 1.3443999999997874e-05, 1.2958999999999887e-05, 1.3528000000002233e-05, 1.3486000000000054e-05, 1.3444000000001344e-05, 1.3472999999999957e-05, 1.3972000000000984e-05, 1.3472000000000484e-05, 1.3472999999999957e-05, 1.3486000000000054e-05, 1.2889000000002038e-05, 1.3472999999999957e-05, 1.2903000000001608e-05, 1.3443999999997874e-05, 1.2958000000000414e-05, 1.3429999999998304e-05, 1.2915999999998234e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.2945000000000317e-05, 1.4013999999999693e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.608" endtime="20201115 23:02:00.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.597" endtime="20201115 23:02:00.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.620" endtime="20201115 23:02:00.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.628" endtime="20201115 23:02:00.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.624" endtime="20201115 23:02:00.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.616" endtime="20201115 23:02:00.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.106" endtime="20201115 23:02:00.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.104" endtime="20201115 23:02:00.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.103" endtime="20201115 23:02:00.655"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.683" endtime="20201115 23:02:00.702"></status>
</kw>
<msg timestamp="20201115 23:02:00.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.680" endtime="20201115 23:02:00.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.705" endtime="20201115 23:02:00.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.711" endtime="20201115 23:02:00.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.673" endtime="20201115 23:02:00.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.666" endtime="20201115 23:02:00.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.735" endtime="20201115 23:02:01.086"></status>
</kw>
<msg timestamp="20201115 23:02:01.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047912, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047926028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:00.731" endtime="20201115 23:02:01.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047912, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047926028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:01.096" endtime="20201115 23:02:01.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.115" endtime="20201115 23:02:01.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.724" endtime="20201115 23:02:01.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.719" endtime="20201115 23:02:01.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.132" level="INFO">${RESULT} = [{'time': 0.047926028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.047951042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:01.123" endtime="20201115 23:02:01.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.165" level="INFO">${ACCURACY} = {'time': [0.047926028, 0.047951042, 0.047976819, 0.048002931, 0.048028625, 0.048048917, 0.048078875, 0.048101944, 0.048122, 0.048148819, 0.048172097, 0.048195708, 0.048216111, 0.048245097, 0.048273722...</msg>
<status status="PASS" starttime="20201115 23:02:01.134" endtime="20201115 23:02:01.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.176" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.173" endtime="20201115 23:02:01.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.181" level="INFO">VALUE: [1.4027999999999263e-05, 1.3959000000000887e-05, 1.4512999999993781e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3985999999993615e-05, 1.4527999999999763e-05, 1.451300000000072e-05, 1.4000000000000123e-05, 1.454099999999986e-05, 1.4527999999999763e-05, 1.3985999999993615e-05, 1.455499999999943e-05, 1.3944000000001844e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3958000000001414e-05, 1.4556000000005842e-05, 1.4514000000000193e-05, 1.3931000000001748e-05, 1.4514000000000193e-05, 1.4541999999999333e-05, 1.452700000000029e-05, 1.455499999999943e-05, 1.4500000000000624e-05, 1.4013999999999693e-05, 1.3930000000002274e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.4514000000000193e-05, 1.4514000000000193e-05, 1.3972000000000984e-05, 1.404099999999936e-05, 1.3986000000000554e-05, 1.4014000000006632e-05, 1.4527999999999763e-05, 1.4514000000000193e-05, 1.3972000000000984e-05, 1.3944999999994379e-05, 1.4013999999999693e-05, 1.3987000000000027e-05, 1.3972000000000984e-05, 1.4027999999999263e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.4000000000000123e-05, 1.4541999999999333e-05, 1.4443999999995405e-05, 1.4500000000000624e-05, 1.401300000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.178" endtime="20201115 23:02:01.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.167" endtime="20201115 23:02:01.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.190" endtime="20201115 23:02:01.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.199" endtime="20201115 23:02:01.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.194" endtime="20201115 23:02:01.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.185" endtime="20201115 23:02:01.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.662" endtime="20201115 23:02:01.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.658" endtime="20201115 23:02:01.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.656" endtime="20201115 23:02:01.226"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.252" endtime="20201115 23:02:01.270"></status>
</kw>
<msg timestamp="20201115 23:02:01.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.249" endtime="20201115 23:02:01.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.274" endtime="20201115 23:02:01.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.280" endtime="20201115 23:02:01.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.242" endtime="20201115 23:02:01.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.236" endtime="20201115 23:02:01.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.303" endtime="20201115 23:02:01.662"></status>
</kw>
<msg timestamp="20201115 23:02:01.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046585944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046601, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:01.300" endtime="20201115 23:02:01.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046585944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046601, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:01.672" endtime="20201115 23:02:01.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.690" endtime="20201115 23:02:01.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.293" endtime="20201115 23:02:01.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.288" endtime="20201115 23:02:01.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.709" level="INFO">${RESULT} = [{'time': 0.046601, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5055999999999403e-05, 'source_diff': 1.5055999999999403e-05}, {'time': 0.046619819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:01.700" endtime="20201115 23:02:01.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.739" level="INFO">${ACCURACY} = {'time': [0.046601, 0.046619819, 0.046644069, 0.046663861, 0.046688069, 0.04671825, 0.046740167, 0.046758764, 0.046778, 0.046801083, 0.046825917, 0.046856167, 0.046881153, 0.046900319, 0.046926944, 0....</msg>
<status status="PASS" starttime="20201115 23:02:01.711" endtime="20201115 23:02:01.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.750" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.748" endtime="20201115 23:02:01.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.756" level="INFO">VALUE: [1.5055999999999403e-05, 1.502700000000079e-05, 1.5069000000006438e-05, 1.561099999999871e-05, 1.502700000000079e-05, 1.558299999999957e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.50689999999995e-05, 1.554100000000086e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5569999999999473e-05, 1.5597000000006078e-05, 1.559699999999914e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.505499999999993e-05, 1.5569e-05, 1.5083000000006008e-05, 1.5569e-05, 1.558299999999957e-05, 1.5028000000000263e-05, 1.559699999999914e-05, 1.5569999999999473e-05, 1.558299999999957e-05, 1.5583999999999043e-05, 1.5014000000000693e-05, 1.5098000000005052e-05, 1.558299999999957e-05, 1.5069000000006438e-05, 1.5583999999999043e-05, 1.5569e-05, 1.504100000000036e-05, 1.5097999999998113e-05, 1.50689999999995e-05, 1.5583999999999043e-05, 1.505499999999993e-05, 1.558299999999957e-05, 1.505499999999993e-05, 1.5041999999999833e-05, 1.558299999999957e-05, 1.5083000000006008e-05, 1.5597000000006078e-05, 1.5569e-05, 1.5014000000000693e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.753" endtime="20201115 23:02:01.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.741" endtime="20201115 23:02:01.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.765" endtime="20201115 23:02:01.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.774" endtime="20201115 23:02:01.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.770" endtime="20201115 23:02:01.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.761" endtime="20201115 23:02:01.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.232" endtime="20201115 23:02:01.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.228" endtime="20201115 23:02:01.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.226" endtime="20201115 23:02:01.802"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.807" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.828" endtime="20201115 23:02:01.847"></status>
</kw>
<msg timestamp="20201115 23:02:01.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.825" endtime="20201115 23:02:01.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.850" endtime="20201115 23:02:01.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.856" endtime="20201115 23:02:01.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.818" endtime="20201115 23:02:01.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.812" endtime="20201115 23:02:01.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.880" endtime="20201115 23:02:02.228"></status>
</kw>
<msg timestamp="20201115 23:02:02.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047583431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047599514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.877" endtime="20201115 23:02:02.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047583431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047599514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.238" endtime="20201115 23:02:02.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.257" endtime="20201115 23:02:02.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.869" endtime="20201115 23:02:02.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.865" endtime="20201115 23:02:02.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.274" level="INFO">${RESULT} = [{'time': 0.047599514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.608300000000007e-05, 'source_diff': 1.608300000000007e-05}, {'time': 0.047628486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.265" endtime="20201115 23:02:02.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.304" level="INFO">${ACCURACY} = {'time': [0.047599514, 0.047628486, 0.047652625, 0.047678194, 0.047700472, 0.047731611, 0.047759347, 0.047787347, 0.047808319, 0.047830292, 0.047859444, 0.047881417, 0.047900222, 0.047931444, 0.047952...</msg>
<status status="PASS" starttime="20201115 23:02:02.276" endtime="20201115 23:02:02.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.315" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.313" endtime="20201115 23:02:02.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.321" level="INFO">VALUE: [1.608300000000007e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.5569e-05, 1.662499999999928e-05, 1.611099999999921e-05, 1.6665999999998515e-05, 1.613899999999835e-05, 1.662499999999928e-05, 1.6125000000005718e-05, 1.659700000000014e-05, 1.6139000000005288e-05, 1.60690000000005e-05, 1.662499999999928e-05, 1.559699999999914e-05, 1.662499999999928e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.558299999999957e-05, 1.612499999999878e-05, 1.6151999999998445e-05, 1.611099999999921e-05, 1.6639000000005788e-05, 1.611099999999921e-05, 1.658300000000057e-05, 1.6639000000005788e-05, 1.662499999999928e-05, 1.6069999999999973e-05, 1.613899999999835e-05, 1.6069999999999973e-05, 1.663899999999885e-05, 1.6097999999999113e-05, 1.668099999999756e-05, 1.558299999999957e-05, 1.6083999999999543e-05, 1.6069999999999973e-05, 1.6097000000006578e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.663899999999885e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.6639000000005788e-05, 1.661099999999971e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.611099999999921e-05, 1.615299999999792e-05, 1.611099999999921e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.317" endtime="20201115 23:02:02.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.306" endtime="20201115 23:02:02.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.330" endtime="20201115 23:02:02.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.339" endtime="20201115 23:02:02.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.334" endtime="20201115 23:02:02.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.326" endtime="20201115 23:02:02.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.808" endtime="20201115 23:02:02.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.804" endtime="20201115 23:02:02.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.802" endtime="20201115 23:02:02.365"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.392" endtime="20201115 23:02:02.411"></status>
</kw>
<msg timestamp="20201115 23:02:02.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.388" endtime="20201115 23:02:02.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.414" endtime="20201115 23:02:02.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.420" endtime="20201115 23:02:02.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.381" endtime="20201115 23:02:02.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.376" endtime="20201115 23:02:02.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.443" endtime="20201115 23:02:02.792"></status>
</kw>
<msg timestamp="20201115 23:02:02.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046832917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.440" endtime="20201115 23:02:02.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046832917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.802" endtime="20201115 23:02:02.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.821" endtime="20201115 23:02:02.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.433" endtime="20201115 23:02:02.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.428" endtime="20201115 23:02:02.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.841" level="INFO">${RESULT} = [{'time': 0.046832917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7209000000004138e-05, 'source_diff': 1.7209000000004138e-05}, {'time': 0.046855917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:02.832" endtime="20201115 23:02:02.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.872" level="INFO">${ACCURACY} = {'time': [0.046832917, 0.046855917, 0.046883542, 0.046908722, 0.046929667, 0.046951778, 0.046975806, 0.047002653, 0.047034514, 0.047056486, 0.047088667, 0.047115528, 0.047142736, 0.047169819, 0.047197...</msg>
<status status="PASS" starttime="20201115 23:02:02.844" endtime="20201115 23:02:02.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.883" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.880" endtime="20201115 23:02:02.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.888" level="INFO">VALUE: [1.7209000000004138e-05, 1.718099999999806e-05, 1.719499999999763e-05, 1.7665999999999515e-05, 1.718099999999806e-05, 1.768099999999856e-05, 1.715299999999892e-05, 1.768099999999856e-05, 1.663899999999885e-05, 1.716699999999849e-05, 1.718099999999806e-05, 1.663899999999885e-05, 1.7193999999998155e-05, 1.7708000000005164e-05, 1.7679999999999085e-05, 1.7165999999999015e-05, 1.7693999999998655e-05, 1.719499999999763e-05, 1.718099999999806e-05, 1.718099999999806e-05, 1.7694000000005594e-05, 1.7153000000005858e-05, 1.713899999999935e-05, 1.662499999999928e-05, 1.7679999999999085e-05, 1.7207999999997725e-05, 1.7179999999998585e-05, 1.7693999999998655e-05, 1.7235999999996865e-05, 1.768099999999856e-05, 1.719499999999763e-05, 1.6569999999993534e-05, 1.713899999999935e-05, 1.7153000000005858e-05, 1.713899999999935e-05, 1.7681000000005498e-05, 1.7195000000004568e-05, 1.766699999999899e-05, 1.662499999999928e-05, 1.712499999999978e-05, 1.718099999999806e-05, 1.7221999999997295e-05, 1.713899999999935e-05, 1.7193999999998155e-05, 1.715299999999892e-05, 1.763899999999985e-05, 1.713899999999935e-05, 1.7693999999998655e-05, 1.6651999999998945e-05, 1.663899999999885e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.885" endtime="20201115 23:02:02.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.874" endtime="20201115 23:02:02.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.897" endtime="20201115 23:02:02.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.905" endtime="20201115 23:02:02.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.901" endtime="20201115 23:02:02.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.893" endtime="20201115 23:02:02.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.372" endtime="20201115 23:02:02.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.368" endtime="20201115 23:02:02.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.366" endtime="20201115 23:02:02.932"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.959" endtime="20201115 23:02:02.978"></status>
</kw>
<msg timestamp="20201115 23:02:02.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.955" endtime="20201115 23:02:02.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.981" endtime="20201115 23:02:02.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.987" endtime="20201115 23:02:02.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.948" endtime="20201115 23:02:02.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.942" endtime="20201115 23:02:02.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.011" endtime="20201115 23:02:03.363"></status>
</kw>
<msg timestamp="20201115 23:02:03.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046860653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046878847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.007" endtime="20201115 23:02:03.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046860653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046878847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.367" endtime="20201115 23:02:03.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.376" endtime="20201115 23:02:03.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.000" endtime="20201115 23:02:03.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.995" endtime="20201115 23:02:03.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.384" level="INFO">${RESULT} = [{'time': 0.046878847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.046900736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:03.380" endtime="20201115 23:02:03.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.399" level="INFO">${ACCURACY} = {'time': [0.046878847, 0.046900736, 0.046927583, 0.046958931, 0.046989681, 0.047015847, 0.047044597, 0.047071472, 0.047100861, 0.047133861, 0.047157694, 0.047185833, 0.047207514, 0.047231903, 0.047258...</msg>
<status status="PASS" starttime="20201115 23:02:03.385" endtime="20201115 23:02:03.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.404" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.403" endtime="20201115 23:02:03.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.407" level="INFO">VALUE: [1.8193999999999155e-05, 1.8763999999997505e-05, 1.7679999999999085e-05, 1.8195000000005568e-05, 1.822299999999777e-05, 1.8235999999997865e-05, 1.7693999999998655e-05, 1.7694000000005594e-05, 1.8749999999997935e-05, 1.8193999999999155e-05, 1.8166000000000015e-05, 1.8750000000004874e-05, 1.769499999999813e-05, 1.8749999999997935e-05, 1.8250000000004374e-05, 1.7695000000005068e-05, 1.8736000000005304e-05, 1.8222000000005234e-05, 1.8680000000000085e-05, 1.8167000000006428e-05, 1.8749999999997935e-05, 1.8764000000004444e-05, 1.8236000000004804e-05, 1.8750000000004874e-05, 1.8750000000004874e-05, 1.8221999999998295e-05, 1.8764000000004444e-05, 1.818099999999906e-05, 1.8222000000005234e-05, 1.8250000000004374e-05, 1.768099999999856e-05, 1.8735999999998365e-05, 1.8194000000006094e-05, 1.8249999999997435e-05, 1.816699999999949e-05, 1.8693999999999655e-05, 1.8222000000005234e-05, 1.8181000000005998e-05, 1.8152000000000446e-05, 1.8722000000005734e-05, 1.7693999999998655e-05, 1.8207999999998725e-05, 1.8236000000004804e-05, 1.8193999999999155e-05, 1.8179999999999585e-05, 1.8207999999998725e-05, 1.8179999999999585e-05, 1.812500000000078e-05, 1.8249999999997435e-05, 1.8763999999997505e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.406" endtime="20201115 23:02:03.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.400" endtime="20201115 23:02:03.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.411" endtime="20201115 23:02:03.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.415" endtime="20201115 23:02:03.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.413" endtime="20201115 23:02:03.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.409" endtime="20201115 23:02:03.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.938" endtime="20201115 23:02:03.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.935" endtime="20201115 23:02:03.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.933" endtime="20201115 23:02:03.437"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.450" endtime="20201115 23:02:03.464"></status>
</kw>
<msg timestamp="20201115 23:02:03.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.448" endtime="20201115 23:02:03.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.466" endtime="20201115 23:02:03.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.469" endtime="20201115 23:02:03.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.445" endtime="20201115 23:02:03.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.442" endtime="20201115 23:02:03.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.480" endtime="20201115 23:02:03.797"></status>
</kw>
<msg timestamp="20201115 23:02:03.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026862556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026882347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.478" endtime="20201115 23:02:03.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026862556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026882347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.807" endtime="20201115 23:02:03.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.825" endtime="20201115 23:02:03.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.475" endtime="20201115 23:02:03.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.473" endtime="20201115 23:02:03.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.845" level="INFO">${RESULT} = [{'time': 0.026882347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.979100000000164e-05, 'source_diff': 1.979100000000164e-05}, {'time': 0.026910333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.835" endtime="20201115 23:02:03.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.876" level="INFO">${ACCURACY} = {'time': [0.026882347, 0.026910333, 0.026944056, 0.026972111, 0.02700025, 0.027032444, 0.027056264, 0.027087319, 0.027112958, 0.027136389, 0.027163319, 0.027195958, 0.027226389, 0.027253361, 0.0272799...</msg>
<status status="PASS" starttime="20201115 23:02:03.847" endtime="20201115 23:02:03.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.887" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.884" endtime="20201115 23:02:03.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.892" level="INFO">VALUE: [1.979100000000164e-05, 1.984699999999992e-05, 1.8737000000001308e-05, 1.9292000000000614e-05, 1.9792000000001114e-05, 1.9887999999999156e-05, 1.9292000000000614e-05, 1.97769999999986e-05, 1.8735999999998365e-05, 1.987499999999906e-05, 1.926299999999853e-05, 1.929099999999767e-05, 1.9792000000001114e-05, 1.9221999999999295e-05, 1.9250000000001904e-05, 1.9833999999999824e-05, 1.9791999999997645e-05, 1.9792000000001114e-05, 1.8736000000001835e-05, 1.9292000000000614e-05, 1.9264000000001474e-05, 1.937499999999856e-05, 1.984699999999992e-05, 1.931900000000028e-05, 1.977700000000207e-05, 1.92769999999981e-05, 1.9263999999998005e-05, 1.8721999999998795e-05, 1.9292000000000614e-05, 1.930500000000071e-05, 1.8735999999998365e-05, 1.983300000000035e-05, 1.8763999999997505e-05, 1.8735999999998365e-05, 1.929100000000114e-05, 1.8749999999997935e-05, 1.9264000000001474e-05, 1.8778000000000544e-05, 1.9236000000002335e-05, 1.983300000000035e-05, 1.9277999999997575e-05, 1.8722000000002265e-05, 1.9778000000001544e-05, 1.8735999999998365e-05, 1.9806000000000684e-05, 1.9249999999998435e-05, 1.8723000000001738e-05, 1.9250000000001904e-05, 1.929099999999767e-05, 1.9806000000000684e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.889" endtime="20201115 23:02:03.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.878" endtime="20201115 23:02:03.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.901" endtime="20201115 23:02:03.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.909" endtime="20201115 23:02:03.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.905" endtime="20201115 23:02:03.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.896" endtime="20201115 23:02:03.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.440" endtime="20201115 23:02:03.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.438" endtime="20201115 23:02:03.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.437" endtime="20201115 23:02:03.936"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.941" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.963" endtime="20201115 23:02:03.981"></status>
</kw>
<msg timestamp="20201115 23:02:03.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.959" endtime="20201115 23:02:03.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.984" endtime="20201115 23:02:03.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.991" endtime="20201115 23:02:03.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.952" endtime="20201115 23:02:03.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.946" endtime="20201115 23:02:03.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.015" endtime="20201115 23:02:04.375"></status>
</kw>
<msg timestamp="20201115 23:02:04.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04687125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046891528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:04.011" endtime="20201115 23:02:04.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04687125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046891528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:04.384" endtime="20201115 23:02:04.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.403" endtime="20201115 23:02:04.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.004" endtime="20201115 23:02:04.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.999" endtime="20201115 23:02:04.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.421" level="INFO">${RESULT} = [{'time': 0.046891528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0277999999998575e-05, 'source_diff': 2.0277999999998575e-05}, {'time': 0.046919472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:04.411" endtime="20201115 23:02:04.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.451" level="INFO">${ACCURACY} = {'time': [0.046891528, 0.046919472, 0.04694925, 0.046982319, 0.047010278, 0.047045514, 0.047074625, 0.047103431, 0.047128361, 0.047156306, 0.04718725, 0.047212292, 0.047241403, 0.047270375, 0.04729618...</msg>
<status status="PASS" starttime="20201115 23:02:04.423" endtime="20201115 23:02:04.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.462" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.459" endtime="20201115 23:02:04.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.467" level="INFO">VALUE: [2.0277999999998575e-05, 2.084699999999745e-05, 2.038899999999566e-05, 1.97769999999986e-05, 1.9820000000003724e-05, 2.086099999999702e-05, 2.033300000000432e-05, 1.9806000000004154e-05, 2.034700000000389e-05, 1.9749999999998935e-05, 2.0291999999998145e-05, 1.9820000000003724e-05, 2.034700000000389e-05, 1.9736000000006304e-05, 2.037500000000303e-05, 1.984700000000339e-05, 2.0305999999997715e-05, 2.0291999999998145e-05, 1.987500000000253e-05, 2.0333999999996855e-05, 2.086100000000396e-05, 1.979099999999817e-05, 2.086100000000396e-05, 2.0291999999998145e-05, 2.0249999999999435e-05, 2.0291999999998145e-05, 2.0291999999998145e-05, 2.034700000000389e-05, 1.9791999999997645e-05, 2.037500000000303e-05, 2.087500000000353e-05, 1.980499999999774e-05, 2.0277999999998575e-05, 2.086099999999702e-05, 1.9791999999997645e-05, 2.0362000000002933e-05, 2.034699999999695e-05, 1.980499999999774e-05, 1.9708000000000225e-05, 2.0291999999998145e-05, 2.036099999999652e-05, 2.0305999999997715e-05, 2.034699999999695e-05, 2.033300000000432e-05, 2.0347999999996425e-05, 2.0847999999996925e-05, 1.9735999999999365e-05, 1.980499999999774e-05, 1.980499999999774e-05, 2.084699999999745e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.464" endtime="20201115 23:02:04.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.453" endtime="20201115 23:02:04.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.476" endtime="20201115 23:02:04.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.484" endtime="20201115 23:02:04.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.480" endtime="20201115 23:02:04.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.472" endtime="20201115 23:02:04.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.943" endtime="20201115 23:02:04.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.939" endtime="20201115 23:02:04.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.937" endtime="20201115 23:02:04.511"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.516" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.539" endtime="20201115 23:02:04.558"></status>
</kw>
<msg timestamp="20201115 23:02:04.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.535" endtime="20201115 23:02:04.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.561" endtime="20201115 23:02:04.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.567" endtime="20201115 23:02:04.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.528" endtime="20201115 23:02:04.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.522" endtime="20201115 23:02:04.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.591" endtime="20201115 23:02:04.951"></status>
</kw>
<msg timestamp="20201115 23:02:04.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047714694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047739639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.587" endtime="20201115 23:02:04.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047714694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047739639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.961" endtime="20201115 23:02:04.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.980" endtime="20201115 23:02:04.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.580" endtime="20201115 23:02:04.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.575" endtime="20201115 23:02:04.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.999" level="INFO">${RESULT} = [{'time': 0.047739639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.494499999999844e-05, 'source_diff': 2.494499999999844e-05}, {'time': 0.047784694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.990" endtime="20201115 23:02:04.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.029" level="INFO">${ACCURACY} = {'time': [0.047739639, 0.047784694, 0.047825653, 0.047870667, 0.047909667, 0.047947736, 0.047992667, 0.048031764, 0.048066722, 0.048098708, 0.048136708, 0.048175694, 0.048209708, 0.048250722, 0.048293...</msg>
<status status="PASS" starttime="20201115 23:02:05.001" endtime="20201115 23:02:05.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.040" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.038" endtime="20201115 23:02:05.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.045" level="INFO">VALUE: [2.494499999999844e-05, 2.511100000000127e-05, 2.4584000000001105e-05, 2.4598000000000675e-05, 2.462500000000034e-05, 2.4568999999995123e-05, 2.4848000000000925e-05, 2.4499999999996747e-05, 2.4693999999998717e-05, 2.4360999999993582e-05, 2.4471999999997607e-05, 2.5096999999994762e-05, 2.4471999999997607e-05, 2.5264000000004005e-05, 2.486100000000102e-05, 2.4500000000003685e-05, 2.5193999999999217e-05, 2.4513999999996317e-05, 2.512500000000084e-05, 2.479100000000317e-05, 2.45970000000012e-05, 2.4792000000002645e-05, 2.4929999999999397e-05, 2.4957999999998537e-05, 2.493100000000581e-05, 2.4485999999997177e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4485999999997177e-05, 2.493099999999887e-05, 2.515299999999998e-05, 2.4791999999995706e-05, 2.4791999999995706e-05, 2.430500000000224e-05, 2.4888000000000687e-05, 2.480500000000274e-05, 2.436100000000052e-05, 2.4915999999999827e-05, 2.4570000000001535e-05, 2.4693999999998717e-05, 2.5235999999997927e-05, 2.45970000000012e-05, 2.4514000000003255e-05, 2.4290999999995733e-05, 2.45970000000012e-05, 2.4763999999996567e-05, 2.4943999999998967e-05, 2.4694000000005656e-05, 2.434700000000095e-05, 2.4736000000004366e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.042" endtime="20201115 23:02:05.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.031" endtime="20201115 23:02:05.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.054" endtime="20201115 23:02:05.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.063" endtime="20201115 23:02:05.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.058" endtime="20201115 23:02:05.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.050" endtime="20201115 23:02:05.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.518" endtime="20201115 23:02:05.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.514" endtime="20201115 23:02:05.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.512" endtime="20201115 23:02:05.090"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.116" endtime="20201115 23:02:05.135"></status>
</kw>
<msg timestamp="20201115 23:02:05.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.113" endtime="20201115 23:02:05.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.138" endtime="20201115 23:02:05.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.145" endtime="20201115 23:02:05.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.106" endtime="20201115 23:02:05.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.100" endtime="20201115 23:02:05.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.168" endtime="20201115 23:02:05.516"></status>
</kw>
<msg timestamp="20201115 23:02:05.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046556889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046582833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.165" endtime="20201115 23:02:05.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046556889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046582833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.526" endtime="20201115 23:02:05.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.544" endtime="20201115 23:02:05.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.158" endtime="20201115 23:02:05.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.153" endtime="20201115 23:02:05.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.562" level="INFO">${RESULT} = [{'time': 0.046582833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5943999999999967e-05, 'source_diff': 2.5943999999999967e-05}, {'time': 0.046623833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.553" endtime="20201115 23:02:05.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.595" level="INFO">${ACCURACY} = {'time': [0.046582833, 0.046623833, 0.046668847, 0.046710847, 0.046750847, 0.046786861, 0.046831861, 0.046877889, 0.046913889, 0.046946889, 0.046981875, 0.047026875, 0.047063889, 0.047107931, 0.047146...</msg>
<status status="PASS" starttime="20201115 23:02:05.564" endtime="20201115 23:02:05.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.606" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.604" endtime="20201115 23:02:05.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.612" level="INFO">VALUE: [2.5943999999999967e-05, 2.5444000000006406e-05, 2.6082999999996193e-05, 2.558300000000263e-05, 2.6235999999998927e-05, 2.540300000000023e-05, 2.5693999999999717e-05, 2.6082999999996193e-05, 2.6070000000003035e-05, 2.536100000000152e-05, 2.5457999999999037e-05, 2.5693999999999717e-05, 2.6013999999997817e-05, 2.619499999999969e-05, 2.6138999999994472e-05, 2.565300000000048e-05, 2.548699999999765e-05, 2.5598000000001675e-05, 2.5542000000003395e-05, 2.5527999999996887e-05, 2.561100000000177e-05, 2.5819999999995846e-05, 2.572299999999833e-05, 2.5457999999999037e-05, 2.5582999999995693e-05, 2.60970000000027e-05, 2.5652000000001007e-05, 2.6124999999994902e-05, 2.5860999999995082e-05, 2.6110999999995332e-05, 2.5666000000000577e-05, 2.5735999999998427e-05, 2.5472000000005546e-05, 2.6235999999998927e-05, 2.563900000000091e-05, 2.566700000000005e-05, 2.5888999999994222e-05, 2.5916999999993362e-05, 2.586100000000202e-05, 2.587500000000159e-05, 2.6207999999999787e-05, 2.5693999999999717e-05, 2.5735999999998427e-05, 2.5305999999995776e-05, 2.611100000000227e-05, 2.5721999999998857e-05, 2.5792000000003645e-05, 2.5598000000001675e-05, 2.5735999999998427e-05, 2.6235999999998927e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.608" endtime="20201115 23:02:05.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.597" endtime="20201115 23:02:05.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.621" endtime="20201115 23:02:05.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.629" endtime="20201115 23:02:05.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.625" endtime="20201115 23:02:05.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.616" endtime="20201115 23:02:05.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.096" endtime="20201115 23:02:05.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.092" endtime="20201115 23:02:05.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.091" endtime="20201115 23:02:05.656"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.683" endtime="20201115 23:02:05.701"></status>
</kw>
<msg timestamp="20201115 23:02:05.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.679" endtime="20201115 23:02:05.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.705" endtime="20201115 23:02:05.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.711" endtime="20201115 23:02:05.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.672" endtime="20201115 23:02:05.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.667" endtime="20201115 23:02:05.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.734" endtime="20201115 23:02:06.082"></status>
</kw>
<msg timestamp="20201115 23:02:06.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046578319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046604903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.731" endtime="20201115 23:02:06.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046578319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046604903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.091" endtime="20201115 23:02:06.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.110" endtime="20201115 23:02:06.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.724" endtime="20201115 23:02:06.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.719" endtime="20201115 23:02:06.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.129" level="INFO">${RESULT} = [{'time': 0.046604903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6584000000003105e-05, 'source_diff': 2.6584000000003105e-05}, {'time': 0.046639889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.120" endtime="20201115 23:02:06.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.159" level="INFO">${ACCURACY} = {'time': [0.046604903, 0.046639889, 0.046675903, 0.046714917, 0.046750917, 0.046791917, 0.046826931, 0.046872944, 0.046915931, 0.046962931, 0.047004931, 0.047043931, 0.047088958, 0.047126958, 0.047164...</msg>
<status status="PASS" starttime="20201115 23:02:06.131" endtime="20201115 23:02:06.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.170" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.168" endtime="20201115 23:02:06.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.176" level="INFO">VALUE: [2.6584000000003105e-05, 2.6874999999995652e-05, 2.6846999999996513e-05, 2.6485999999999177e-05, 2.712500000000284e-05, 2.666700000000105e-05, 2.695900000000001e-05, 2.6930000000001397e-05, 2.6584000000003105e-05, 2.698699999999915e-05, 2.6862000000002495e-05, 2.694500000000044e-05, 2.6930000000001397e-05, 2.7040999999998483e-05, 2.7027999999998387e-05, 2.6666999999994112e-05, 2.7040999999998483e-05, 2.6513999999998317e-05, 2.6999999999999247e-05, 2.644499999999994e-05, 2.6610999999995832e-05, 2.666599999999464e-05, 2.636100000000252e-05, 2.686100000000302e-05, 2.6542000000004395e-05, 2.718100000000112e-05, 2.6512999999998843e-05, 2.6541999999997457e-05, 2.6791999999997707e-05, 2.6513999999998317e-05, 2.7096999999996763e-05, 2.6334000000002855e-05, 2.6902999999994792e-05, 2.6735999999999427e-05, 2.6305999999996776e-05, 2.6582999999996693e-05, 2.716700000000155e-05, 2.6624999999995402e-05, 2.6999999999999247e-05, 2.693100000000087e-05, 2.717999999999471e-05, 2.6624999999995402e-05, 2.7110999999996332e-05, 2.7152000000002507e-05, 2.6596999999996263e-05, 2.6458000000000037e-05, 2.7249999999999497e-05, 2.666700000000105e-05, 2.640300000000123e-05, 2.6528000000004825e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.172" endtime="20201115 23:02:06.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.161" endtime="20201115 23:02:06.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.185" endtime="20201115 23:02:06.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.193" endtime="20201115 23:02:06.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.189" endtime="20201115 23:02:06.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.181" endtime="20201115 23:02:06.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.663" endtime="20201115 23:02:06.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.659" endtime="20201115 23:02:06.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.657" endtime="20201115 23:02:06.220"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.247" endtime="20201115 23:02:06.266"></status>
</kw>
<msg timestamp="20201115 23:02:06.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.243" endtime="20201115 23:02:06.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.269" endtime="20201115 23:02:06.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.275" endtime="20201115 23:02:06.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.236" endtime="20201115 23:02:06.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.231" endtime="20201115 23:02:06.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.299" endtime="20201115 23:02:06.645"></status>
</kw>
<msg timestamp="20201115 23:02:06.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0465675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046595292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:06.295" endtime="20201115 23:02:06.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0465675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046595292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:06.654" endtime="20201115 23:02:06.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.673" endtime="20201115 23:02:06.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.288" endtime="20201115 23:02:06.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.283" endtime="20201115 23:02:06.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.691" level="INFO">${RESULT} = [{'time': 0.046595292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7792000000005646e-05, 'source_diff': 2.7792000000005646e-05}, {'time': 0.046640292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.682" endtime="20201115 23:02:06.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.722" level="INFO">${ACCURACY} = {'time': [0.046595292, 0.046640292, 0.046676319, 0.046711417, 0.046756319, 0.046800389, 0.046845319, 0.046890319, 0.046925333, 0.046960333, 0.047008333, 0.047049333, 0.047092389, 0.047135347, 0.047175...</msg>
<status status="PASS" starttime="20201115 23:02:06.693" endtime="20201115 23:02:06.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.733" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.731" endtime="20201115 23:02:06.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.738" level="INFO">VALUE: [2.7792000000005646e-05, 2.7777999999999137e-05, 2.7540999999998983e-05, 2.7680999999994682e-05, 2.7971999999994168e-05, 2.7888999999996222e-05, 2.7749999999999997e-05, 2.8166000000003077e-05, 2.737500000000309e-05, 2.7526999999999413e-05, 2.7846999999997513e-05, 2.7874999999996652e-05, 2.7624999999996402e-05, 2.761100000000377e-05, 2.816599999999614e-05, 2.761100000000377e-05, 2.762500000000334e-05, 2.816700000000255e-05, 2.811100000000427e-05, 2.8152999999996042e-05, 2.738900000000266e-05, 2.7624999999996402e-05, 2.8110999999997333e-05, 2.740300000000223e-05, 2.794500000000144e-05, 2.7944999999994502e-05, 2.7527999999998887e-05, 2.762500000000334e-05, 2.7749999999999997e-05, 2.7430999999994432e-05, 2.795900000000101e-05, 2.737500000000309e-05, 2.740199999999582e-05, 2.7776999999999663e-05, 2.808300000000513e-05, 2.816599999999614e-05, 2.7972000000001107e-05, 2.7902000000003258e-05, 2.8110999999997333e-05, 2.7958000000001537e-05, 2.734700000000395e-05, 2.7819000000005312e-05, 2.7402999999995292e-05, 2.7680000000002147e-05, 2.7986000000000677e-05, 2.75970000000042e-05, 2.7541999999998457e-05, 2.8042000000005896e-05, 2.7527999999998887e-05, 2.8264000000000067e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.735" endtime="20201115 23:02:06.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.724" endtime="20201115 23:02:06.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.747" endtime="20201115 23:02:06.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.756" endtime="20201115 23:02:06.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.751" endtime="20201115 23:02:06.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.743" endtime="20201115 23:02:06.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.227" endtime="20201115 23:02:06.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.223" endtime="20201115 23:02:06.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.221" endtime="20201115 23:02:06.782"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.787" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.809" endtime="20201115 23:02:06.829"></status>
</kw>
<msg timestamp="20201115 23:02:06.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.806" endtime="20201115 23:02:06.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.832" endtime="20201115 23:02:06.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.838" endtime="20201115 23:02:06.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.798" endtime="20201115 23:02:06.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.793" endtime="20201115 23:02:06.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.862" endtime="20201115 23:02:07.188"></status>
</kw>
<msg timestamp="20201115 23:02:07.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046875097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046903653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.858" endtime="20201115 23:02:07.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046875097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046903653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.198" endtime="20201115 23:02:07.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.217" endtime="20201115 23:02:07.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.851" endtime="20201115 23:02:07.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.846" endtime="20201115 23:02:07.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.236" level="INFO">${RESULT} = [{'time': 0.046903653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8555999999999027e-05, 'source_diff': 2.8555999999999027e-05}, {'time': 0.046952736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:07.227" endtime="20201115 23:02:07.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.266" level="INFO">${ACCURACY} = {'time': [0.046903653, 0.046952736, 0.047001681, 0.047043681, 0.047080667, 0.047118667, 0.047164667, 0.047211708, 0.047257681, 0.047294708, 0.047337708, 0.047375694, 0.04741675, 0.047461708, 0.0475037...</msg>
<status status="PASS" starttime="20201115 23:02:07.238" endtime="20201115 23:02:07.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.277" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.275" endtime="20201115 23:02:07.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.283" level="INFO">VALUE: [2.8555999999999027e-05, 2.9082999999999193e-05, 2.9277999999993698e-05, 2.9180999999996182e-05, 2.872300000000133e-05, 2.869500000000219e-05, 2.916700000000355e-05, 2.8332999999998443e-05, 2.915300000000398e-05, 2.917999999999671e-05, 2.8888999999997222e-05, 2.8458000000002037e-05, 2.918100000000312e-05, 2.9250000000001497e-05, 2.8472000000001607e-05, 2.8930000000003397e-05, 2.9138999999997472e-05, 2.8596999999998263e-05, 2.8402999999996292e-05, 2.89579999999956e-05, 2.8791999999999707e-05, 2.8694000000002717e-05, 2.837500000000409e-05, 2.9124999999997903e-05, 2.9069999999999097e-05, 2.8264000000000067e-05, 2.918100000000312e-05, 2.913900000000441e-05, 2.8916999999996362e-05, 2.868100000000262e-05, 2.870900000000176e-05, 2.845900000000151e-05, 2.847300000000108e-05, 2.886100000000502e-05, 2.862500000000434e-05, 2.8624999999997403e-05, 2.8541999999999457e-05, 2.8541999999999457e-05, 2.8694000000002717e-05, 2.8500000000000747e-05, 2.863900000000391e-05, 2.8264000000000067e-05, 2.9056000000006466e-05, 2.8304999999999303e-05, 2.837500000000409e-05, 2.9041000000000483e-05, 2.9028000000000387e-05, 2.8610999999997833e-05, 2.8874999999997653e-05, 2.9083999999998666e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.280" endtime="20201115 23:02:07.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.268" endtime="20201115 23:02:07.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.292" endtime="20201115 23:02:07.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.300" endtime="20201115 23:02:07.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.295" endtime="20201115 23:02:07.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.287" endtime="20201115 23:02:07.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.789" endtime="20201115 23:02:07.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.785" endtime="20201115 23:02:07.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.783" endtime="20201115 23:02:07.326"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.353" endtime="20201115 23:02:07.373"></status>
</kw>
<msg timestamp="20201115 23:02:07.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.350" endtime="20201115 23:02:07.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.376" endtime="20201115 23:02:07.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.382" endtime="20201115 23:02:07.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.343" endtime="20201115 23:02:07.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.337" endtime="20201115 23:02:07.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.406" endtime="20201115 23:02:07.756"></status>
</kw>
<msg timestamp="20201115 23:02:07.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046603764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046633097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.402" endtime="20201115 23:02:07.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046603764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046633097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.765" endtime="20201115 23:02:07.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.784" endtime="20201115 23:02:07.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.395" endtime="20201115 23:02:07.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.390" endtime="20201115 23:02:07.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.802" level="INFO">${RESULT} = [{'time': 0.046633097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.046670111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:07.793" endtime="20201115 23:02:07.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.835" level="INFO">${ACCURACY} = {'time': [0.046633097, 0.046670111, 0.046707167, 0.046753181, 0.046796139, 0.046842139, 0.046881125, 0.046929139, 0.046972139, 0.047020153, 0.047067153, 0.047110194, 0.047155153, 0.047193208, 0.047242...</msg>
<status status="PASS" starttime="20201115 23:02:07.804" endtime="20201115 23:02:07.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.846" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.844" endtime="20201115 23:02:07.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.851" level="INFO">VALUE: [2.9332999999999443e-05, 2.9514000000001317e-05, 2.9624999999998403e-05, 3.0277999999994698e-05, 2.9972000000003107e-05, 3.0042000000000957e-05, 3.0110999999999333e-05, 2.9722000000002857e-05, 2.9514000000001317e-05, 2.993100000000387e-05, 2.9792000000000707e-05, 2.9360999999998583e-05, 2.9610999999998833e-05, 2.9486000000002177e-05, 2.9278000000000637e-05, 2.9528000000000887e-05, 2.9362000000004995e-05, 2.934700000000595e-05, 2.969500000000319e-05, 2.966599999999764e-05, 2.9541000000000983e-05, 2.9485999999995238e-05, 2.9958000000003537e-05, 2.9486000000002177e-05, 2.9500000000001747e-05, 2.9292000000000207e-05, 2.963900000000491e-05, 2.9610999999998833e-05, 2.9846999999999513e-05, 2.9832999999999943e-05, 2.969500000000319e-05, 2.9833999999999417e-05, 2.940300000000423e-05, 3.018100000000412e-05, 3.0096999999999763e-05, 2.9792000000000707e-05, 2.9874999999998653e-05, 2.9792000000000707e-05, 3.0222000000003357e-05, 2.9444999999996002e-05, 2.9860999999999083e-05, 3.0250000000002497e-05, 2.9278000000000637e-05, 2.9708000000003287e-05, 2.970900000000276e-05, 2.9610999999998833e-05, 2.9596999999999263e-05, 2.9360999999998583e-05, 2.9805000000000803e-05, 2.9346999999999013e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.848" endtime="20201115 23:02:07.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.837" endtime="20201115 23:02:07.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.860" endtime="20201115 23:02:07.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.868" endtime="20201115 23:02:07.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.864" endtime="20201115 23:02:07.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.856" endtime="20201115 23:02:07.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.333" endtime="20201115 23:02:07.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.329" endtime="20201115 23:02:07.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.327" endtime="20201115 23:02:07.895"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.900" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.922" endtime="20201115 23:02:07.941"></status>
</kw>
<msg timestamp="20201115 23:02:07.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.918" endtime="20201115 23:02:07.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.944" endtime="20201115 23:02:07.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.951" endtime="20201115 23:02:07.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.911" endtime="20201115 23:02:07.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.905" endtime="20201115 23:02:07.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.976" endtime="20201115 23:02:08.323"></status>
</kw>
<msg timestamp="20201115 23:02:08.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046683472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046714222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.972" endtime="20201115 23:02:08.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046683472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046714222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.333" endtime="20201115 23:02:08.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.352" endtime="20201115 23:02:08.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.965" endtime="20201115 23:02:08.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.959" endtime="20201115 23:02:08.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.371" level="INFO">${RESULT} = [{'time': 0.046714222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0750000000003e-05, 'source_diff': 3.0750000000003e-05}, {'time': 0.046757222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201115 23:02:08.362" endtime="20201115 23:02:08.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.401" level="INFO">${ACCURACY} = {'time': [0.046714222, 0.046757222, 0.04680725, 0.046855236, 0.046906222, 0.046956236, 0.046998292, 0.047036264, 0.04708525, 0.04713425, 0.047181264, 0.047232292, 0.047279264, 0.047323278, 0.047364278...</msg>
<status status="PASS" starttime="20201115 23:02:08.373" endtime="20201115 23:02:08.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.412" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.410" endtime="20201115 23:02:08.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.417" level="INFO">VALUE: [3.0750000000003e-05, 3.120799999999785e-05, 3.0292000000001207e-05, 3.079200000000171e-05, 3.086100000000008e-05, 3.04579999999971e-05, 3.0444999999997002e-05, 3.05700000000006e-05, 3.073600000000343e-05, 3.066700000000505e-05, 3.102800000000239e-05, 3.068100000000462e-05, 3.098600000000368e-05, 3.073600000000343e-05, 3.098600000000368e-05, 3.069499999999725e-05, 3.0500000000002747e-05, 3.079200000000171e-05, 3.094500000000444e-05, 3.0362000000005995e-05, 3.058300000000069e-05, 3.090300000000573e-05, 3.058300000000069e-05, 3.0332999999993504e-05, 3.077800000000214e-05, 3.086100000000008e-05, 3.0790999999995294e-05, 3.1040999999995544e-05, 3.091599999999889e-05, 3.11249999999999e-05, 3.0305000000001303e-05, 3.0486000000003177e-05, 3.0374999999999153e-05, 3.083300000000094e-05, 3.0319000000000873e-05, 3.118099999999818e-05, 3.073599999999649e-05, 3.083300000000094e-05, 3.061099999999983e-05, 3.0360999999999583e-05, 3.104200000000196e-05, 3.120799999999785e-05, 3.055600000000103e-05, 3.0750000000003e-05, 3.0847999999999987e-05, 3.037500000000609e-05, 3.0790999999995294e-05, 3.093099999999793e-05, 3.088899999999922e-05, 3.115199999999957e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.414" endtime="20201115 23:02:08.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.403" endtime="20201115 23:02:08.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.426" endtime="20201115 23:02:08.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.434" endtime="20201115 23:02:08.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.430" endtime="20201115 23:02:08.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.422" endtime="20201115 23:02:08.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.902" endtime="20201115 23:02:08.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.897" endtime="20201115 23:02:08.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.896" endtime="20201115 23:02:08.461"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.466" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.494" endtime="20201115 23:02:08.514"></status>
</kw>
<msg timestamp="20201115 23:02:08.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.491" endtime="20201115 23:02:08.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.518" endtime="20201115 23:02:08.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.524" endtime="20201115 23:02:08.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.484" endtime="20201115 23:02:08.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.472" endtime="20201115 23:02:08.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.547" endtime="20201115 23:02:08.896"></status>
</kw>
<msg timestamp="20201115 23:02:08.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053589944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053622, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:08.544" endtime="20201115 23:02:08.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053589944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053622, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:08.905" endtime="20201115 23:02:08.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.924" endtime="20201115 23:02:08.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.537" endtime="20201115 23:02:08.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.532" endtime="20201115 23:02:08.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.942" level="INFO">${RESULT} = [{'time': 0.053622, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.205600000000253e-05, 'source_diff': 3.205600000000253e-05}, {'time': 0.053672069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:08.933" endtime="20201115 23:02:08.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.972" level="INFO">${ACCURACY} = {'time': [0.053622, 0.053672069, 0.053722014, 0.053768042, 0.053810014, 0.053856056, 0.053904028, 0.053956056, 0.054002111, 0.054051069, 0.054098042, 0.054146042, 0.054196069, 0.054241083, 0.054280056...</msg>
<status status="PASS" starttime="20201115 23:02:08.944" endtime="20201115 23:02:08.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.983" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.981" endtime="20201115 23:02:08.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.988" level="INFO">VALUE: [3.205600000000253e-05, 3.223600000000493e-05, 3.130600000000178e-05, 3.193099999999893e-05, 3.22500000000045e-05, 3.191699999999936e-05, 3.179200000000271e-05, 3.204200000000296e-05, 3.174999999999706e-05, 3.161100000000083e-05, 3.223599999999799e-05, 3.158400000000117e-05, 3.13050000000023e-05, 3.217999999999971e-05, 3.152800000000289e-05, 3.21250000000009e-05, 3.21250000000009e-05, 3.2082999999995254e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.173599999999749e-05, 3.223599999999799e-05, 3.167999999999921e-05, 3.183400000000142e-05, 3.187500000000065e-05, 3.198599999999774e-05, 3.21250000000009e-05, 3.176399999999663e-05, 3.1763000000004094e-05, 3.129200000000221e-05, 3.219499999999875e-05, 3.2112000000000807e-05, 3.152799999999595e-05, 3.219499999999875e-05, 3.22500000000045e-05, 3.223600000000493e-05, 3.142999999999896e-05, 3.222300000000483e-05, 3.169399999999878e-05, 3.169499999999825e-05, 3.169399999999878e-05, 3.169399999999878e-05, 3.204100000000348e-05, 3.161100000000083e-05, 3.223599999999799e-05, 3.201399999999688e-05, 3.165299999999954e-05, 3.201400000000382e-05, 3.14579999999981e-05, 3.219399999999928e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.985" endtime="20201115 23:02:08.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.974" endtime="20201115 23:02:08.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.998" endtime="20201115 23:02:09.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.007" endtime="20201115 23:02:09.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.002" endtime="20201115 23:02:09.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.993" endtime="20201115 23:02:09.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.468" endtime="20201115 23:02:09.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.464" endtime="20201115 23:02:09.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.462" endtime="20201115 23:02:09.034"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.061" endtime="20201115 23:02:09.081"></status>
</kw>
<msg timestamp="20201115 23:02:09.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.058" endtime="20201115 23:02:09.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.084" endtime="20201115 23:02:09.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.090" endtime="20201115 23:02:09.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.051" endtime="20201115 23:02:09.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.045" endtime="20201115 23:02:09.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.113" endtime="20201115 23:02:09.458"></status>
</kw>
<msg timestamp="20201115 23:02:09.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047107833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047140667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.110" endtime="20201115 23:02:09.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047107833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047140667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.468" endtime="20201115 23:02:09.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.486" endtime="20201115 23:02:09.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.103" endtime="20201115 23:02:09.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.098" endtime="20201115 23:02:09.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.505" level="INFO">${RESULT} = [{'time': 0.047140667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.283399999999548e-05, 'source_diff': 3.283399999999548e-05}, {'time': 0.047180694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.496" endtime="20201115 23:02:09.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.535" level="INFO">${ACCURACY} = {'time': [0.047140667, 0.047180694, 0.047233681, 0.047281722, 0.047322694, 0.047366736, 0.047417694, 0.04746075, 0.047501708, 0.047553708, 0.047606764, 0.047654722, 0.047701736, 0.04774275, 0.04778277...</msg>
<status status="PASS" starttime="20201115 23:02:09.507" endtime="20201115 23:02:09.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.546" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.544" endtime="20201115 23:02:09.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.552" level="INFO">VALUE: [3.283399999999548e-05, 3.231900000000287e-05, 3.284800000000199e-05, 3.266600000000064e-05, 3.2512999999997905e-05, 3.242999999999996e-05, 3.248600000000518e-05, 3.311100000000233e-05, 3.2290999999996794e-05, 3.269399999999978e-05, 3.311100000000233e-05, 3.324999999999856e-05, 3.22500000000045e-05, 3.294400000000003e-05, 3.256999999999566e-05, 3.258400000000217e-05, 3.3110999999995394e-05, 3.270800000000629e-05, 3.226400000000407e-05, 3.237500000000115e-05, 3.245899999999857e-05, 3.29449999999995e-05, 3.268099999999968e-05, 3.25700000000026e-05, 3.248600000000518e-05, 3.22779999999967e-05, 3.236100000000158e-05, 3.270899999999882e-05, 3.236100000000158e-05, 3.308300000000319e-05, 3.242999999999996e-05, 3.293000000000046e-05, 3.251400000000432e-05, 3.309700000000276e-05, 3.316700000000061e-05, 3.324999999999856e-05, 3.281999999999591e-05, 3.291700000000036e-05, 3.270799999999935e-05, 3.302800000000439e-05, 3.266600000000064e-05, 3.243099999999943e-05, 3.236100000000158e-05, 3.298599999999874e-05, 3.294400000000003e-05, 3.270899999999882e-05, 3.319499999999975e-05, 3.3180999999993244e-05, 3.2874999999994714e-05, 3.324999999999856e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.548" endtime="20201115 23:02:09.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.537" endtime="20201115 23:02:09.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.561" endtime="20201115 23:02:09.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.569" endtime="20201115 23:02:09.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.565" endtime="20201115 23:02:09.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.556" endtime="20201115 23:02:09.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.041" endtime="20201115 23:02:09.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.037" endtime="20201115 23:02:09.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.035" endtime="20201115 23:02:09.596"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.623" endtime="20201115 23:02:09.642"></status>
</kw>
<msg timestamp="20201115 23:02:09.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.619" endtime="20201115 23:02:09.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.645" endtime="20201115 23:02:09.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.651" endtime="20201115 23:02:09.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.612" endtime="20201115 23:02:09.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.606" endtime="20201115 23:02:09.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.675" endtime="20201115 23:02:10.024"></status>
</kw>
<msg timestamp="20201115 23:02:10.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046628931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046662597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.671" endtime="20201115 23:02:10.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046628931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046662597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.033" endtime="20201115 23:02:10.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.053" endtime="20201115 23:02:10.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.664" endtime="20201115 23:02:10.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.660" endtime="20201115 23:02:10.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.071" level="INFO">${RESULT} = [{'time': 0.046662597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.366600000000164e-05, 'source_diff': 3.366600000000164e-05}, {'time': 0.046704611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.062" endtime="20201115 23:02:10.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.104" level="INFO">${ACCURACY} = {'time': [0.046662597, 0.046704611, 0.046752611, 0.046803611, 0.046857625, 0.046906625, 0.046954639, 0.046998694, 0.047045694, 0.047088653, 0.047133653, 0.047178667, 0.047221667, 0.047272722, 0.047314...</msg>
<status status="PASS" starttime="20201115 23:02:10.073" endtime="20201115 23:02:10.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.115" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.113" endtime="20201115 23:02:10.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.121" level="INFO">VALUE: [3.366600000000164e-05, 3.373599999999949e-05, 3.3832999999997004e-05, 3.411100000000333e-05, 3.3832999999997004e-05, 3.399999999999931e-05, 3.370800000000035e-05, 3.41250000000029e-05, 3.3540999999998045e-05, 3.329200000000421e-05, 3.423599999999999e-05, 3.397299999999964e-05, 3.411100000000333e-05, 3.338900000000172e-05, 3.408399999999673e-05, 3.36250000000024e-05, 3.349999999999881e-05, 3.3402999999994354e-05, 3.423599999999999e-05, 3.344400000000053e-05, 3.3374999999995214e-05, 3.4040999999998545e-05, 3.376399999999863e-05, 3.4110999999996394e-05, 3.3610999999995894e-05, 3.3540999999998045e-05, 3.383300000000394e-05, 3.352799999999795e-05, 3.398599999999974e-05, 3.3360999999995644e-05, 3.3624999999995464e-05, 3.404200000000496e-05, 3.331999999999641e-05, 3.369500000000025e-05, 3.39580000000006e-05, 3.409800000000324e-05, 3.426399999999913e-05, 3.329199999999727e-05, 3.341700000000086e-05, 3.374999999999906e-05, 3.4096999999996824e-05, 3.386100000000308e-05, 3.3445e-05, 3.39580000000006e-05, 3.399999999999931e-05, 3.358300000000369e-05, 3.365300000000154e-05, 3.404199999999802e-05, 3.331900000000387e-05, 3.4068999999997684e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.117" endtime="20201115 23:02:10.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.106" endtime="20201115 23:02:10.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.130" endtime="20201115 23:02:10.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.138" endtime="20201115 23:02:10.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.134" endtime="20201115 23:02:10.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.125" endtime="20201115 23:02:10.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.603" endtime="20201115 23:02:10.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.599" endtime="20201115 23:02:10.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.597" endtime="20201115 23:02:10.165"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.170" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.192" endtime="20201115 23:02:10.212"></status>
</kw>
<msg timestamp="20201115 23:02:10.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.188" endtime="20201115 23:02:10.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.215" endtime="20201115 23:02:10.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.221" endtime="20201115 23:02:10.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.181" endtime="20201115 23:02:10.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.175" endtime="20201115 23:02:10.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.239" endtime="20201115 23:02:10.525"></status>
</kw>
<msg timestamp="20201115 23:02:10.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047308653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047342931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.238" endtime="20201115 23:02:10.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047308653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047342931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.529" endtime="20201115 23:02:10.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.538" endtime="20201115 23:02:10.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.234" endtime="20201115 23:02:10.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.229" endtime="20201115 23:02:10.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.547" level="INFO">${RESULT} = [{'time': 0.047342931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.42779999999987e-05, 'source_diff': 3.42779999999987e-05}, {'time': 0.047388931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:10.543" endtime="20201115 23:02:10.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.561" level="INFO">${ACCURACY} = {'time': [0.047342931, 0.047388931, 0.047435958, 0.047482958, 0.047529958, 0.047573986, 0.047622958, 0.047671958, 0.047720972, 0.047769042, 0.047819014, 0.047869986, 0.047912014, 0.047956014, 0.048005...</msg>
<status status="PASS" starttime="20201115 23:02:10.548" endtime="20201115 23:02:10.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.566" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.565" endtime="20201115 23:02:10.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.569" level="INFO">VALUE: [3.42779999999987e-05, 3.502799999999945e-05, 3.4790999999999295e-05, 3.4790999999999295e-05, 3.5138999999996534e-05, 3.494400000000203e-05, 3.4832999999998004e-05, 3.5082999999998254e-05, 3.5054999999999115e-05, 3.501399999999988e-05, 3.469500000000125e-05, 3.497200000000117e-05, 3.438900000000272e-05, 3.469500000000125e-05, 3.423599999999999e-05, 3.4846999999997574e-05, 3.5110999999997394e-05, 3.468100000000168e-05, 3.437500000000315e-05, 3.5138999999996534e-05, 3.448600000000024e-05, 3.495900000000107e-05, 3.5152999999996104e-05, 3.449999999999981e-05, 3.49580000000016e-05, 3.4332999999997504e-05, 3.502799999999945e-05, 3.5082999999998254e-05, 3.438900000000272e-05, 3.4290999999998795e-05, 3.523600000000099e-05, 3.475000000000006e-05, 3.5040999999999545e-05, 3.526400000000013e-05, 3.5054999999999115e-05, 3.5096999999997824e-05, 3.491700000000236e-05, 3.483300000000494e-05, 3.470800000000135e-05, 3.426399999999913e-05, 3.475000000000006e-05, 3.4445000000001e-05, 3.477800000000614e-05, 3.466700000000211e-05, 3.4374999999996214e-05, 3.436200000000306e-05, 3.475000000000006e-05, 3.473600000000049e-05, 3.451399999999938e-05, 3.486200000000356e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.567" endtime="20201115 23:02:10.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.562" endtime="20201115 23:02:10.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.573" endtime="20201115 23:02:10.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.577" endtime="20201115 23:02:10.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.575" endtime="20201115 23:02:10.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.571" endtime="20201115 23:02:10.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.171" endtime="20201115 23:02:10.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.167" endtime="20201115 23:02:10.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.166" endtime="20201115 23:02:10.598"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.611" endtime="20201115 23:02:10.628"></status>
</kw>
<msg timestamp="20201115 23:02:10.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.609" endtime="20201115 23:02:10.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.629" endtime="20201115 23:02:10.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.632" endtime="20201115 23:02:10.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.606" endtime="20201115 23:02:10.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.603" endtime="20201115 23:02:10.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.643" endtime="20201115 23:02:10.972"></status>
</kw>
<msg timestamp="20201115 23:02:10.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026824042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026859514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.642" endtime="20201115 23:02:10.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026824042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026859514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.982" endtime="20201115 23:02:11.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.002" endtime="20201115 23:02:11.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.639" endtime="20201115 23:02:11.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.636" endtime="20201115 23:02:11.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.019" level="INFO">${RESULT} = [{'time': 0.026859514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.547200000000167e-05, 'source_diff': 3.547200000000167e-05}, {'time': 0.026904514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:11.010" endtime="20201115 23:02:11.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.049" level="INFO">${ACCURACY} = {'time': [0.026859514, 0.026904514, 0.026955528, 0.027004583, 0.027049528, 0.027103556, 0.027156542, 0.027202625, 0.027246569, 0.027297597, 0.027351556, 0.027402569, 0.027455583, 0.027508583, 0.027562...</msg>
<status status="PASS" starttime="20201115 23:02:11.021" endtime="20201115 23:02:11.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.061" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.058" endtime="20201115 23:02:11.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.066" level="INFO">VALUE: [3.547200000000167e-05, 3.6111000000001864e-05, 3.5625000000000934e-05, 3.5554999999999615e-05, 3.569499999999878e-05, 3.555600000000256e-05, 3.572299999999792e-05, 3.6139000000001004e-05, 3.5513000000000905e-05, 3.6110999999998394e-05, 3.529199999999927e-05, 3.538800000000078e-05, 3.594399999999956e-05, 3.6124999999997964e-05, 3.570800000000235e-05, 3.544399999999906e-05, 3.566600000000017e-05, 3.568099999999921e-05, 3.5666999999999643e-05, 3.573600000000149e-05, 3.601400000000088e-05, 3.576399999999716e-05, 3.598599999999827e-05, 3.569400000000278e-05, 3.543099999999896e-05, 3.5375000000000684e-05, 3.6318999999999935e-05, 3.593099999999946e-05, 3.605599999999959e-05, 3.57780000000002e-05, 3.619499999999928e-05, 3.538800000000078e-05, 3.5347000000001544e-05, 3.6110999999998394e-05, 3.618000000000024e-05, 3.592999999999999e-05, 3.6055000000000115e-05, 3.552799999999995e-05, 3.572199999999845e-05, 3.5375000000000684e-05, 3.5903000000000324e-05, 3.591600000000042e-05, 3.5861000000001614e-05, 3.520800000000185e-05, 3.598600000000174e-05, 3.547200000000167e-05, 3.5653000000000074e-05, 3.593099999999946e-05, 3.593099999999946e-05, 3.623600000000199e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.063" endtime="20201115 23:02:11.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.051" endtime="20201115 23:02:11.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.076" endtime="20201115 23:02:11.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.084" endtime="20201115 23:02:11.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.080" endtime="20201115 23:02:11.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.071" endtime="20201115 23:02:11.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.602" endtime="20201115 23:02:11.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.600" endtime="20201115 23:02:11.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.599" endtime="20201115 23:02:11.111"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.117" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.138" endtime="20201115 23:02:11.158"></status>
</kw>
<msg timestamp="20201115 23:02:11.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.135" endtime="20201115 23:02:11.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.162" endtime="20201115 23:02:11.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.168" endtime="20201115 23:02:11.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.128" endtime="20201115 23:02:11.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.122" endtime="20201115 23:02:11.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.192" endtime="20201115 23:02:11.539"></status>
</kw>
<msg timestamp="20201115 23:02:11.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047004153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047040667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.188" endtime="20201115 23:02:11.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047004153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047040667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.548" endtime="20201115 23:02:11.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.567" endtime="20201115 23:02:11.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.181" endtime="20201115 23:02:11.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.176" endtime="20201115 23:02:11.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.586" level="INFO">${RESULT} = [{'time': 0.047040667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.651400000000138e-05, 'source_diff': 3.651400000000138e-05}, {'time': 0.047089681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:11.577" endtime="20201115 23:02:11.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.616" level="INFO">${ACCURACY} = {'time': [0.047040667, 0.047089681, 0.047145722, 0.047200681, 0.047251708, 0.047295694, 0.047345708, 0.047398694, 0.047451708, 0.047506722, 0.047551736, 0.047605722, 0.047659722, 0.047716736, 0.047766...</msg>
<status status="PASS" starttime="20201115 23:02:11.588" endtime="20201115 23:02:11.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.627" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.625" endtime="20201115 23:02:11.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.633" level="INFO">VALUE: [3.651400000000138e-05, 3.720900000000332e-05, 3.69580000000036e-05, 3.650000000000181e-05, 3.693000000000446e-05, 3.6541000000001045e-05, 3.69580000000036e-05, 3.7012999999995466e-05, 3.6610999999998894e-05, 3.7096999999999825e-05, 3.6318999999999935e-05, 3.697200000000317e-05, 3.7124999999998964e-05, 3.725000000000256e-05, 3.637500000000515e-05, 3.6680999999996744e-05, 3.644400000000353e-05, 3.6694999999996314e-05, 3.679200000000077e-05, 3.636199999999812e-05, 3.629200000000027e-05, 3.709800000000624e-05, 3.690300000000479e-05, 3.715300000000504e-05, 3.7083000000000255e-05, 3.684799999999905e-05, 3.650000000000181e-05, 3.6986999999995274e-05, 3.688799999999881e-05, 3.6818999999993496e-05, 3.722199999999648e-05, 3.6291000000000795e-05, 3.686100000000608e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.7166999999997674e-05, 3.647199999999573e-05, 3.705600000000059e-05, 3.727799999999476e-05, 3.6569000000000185e-05, 3.6846999999999575e-05, 3.645799999999616e-05, 3.695900000000307e-05, 3.718100000000418e-05, 3.6930999999996994e-05, 3.6430999999996494e-05, 3.708399999999973e-05, 3.6360999999998644e-05, 3.640199999999788e-05, 3.673600000000249e-05]</msg>
<status status="PASS" starttime="20201115 23:02:11.629" endtime="20201115 23:02:11.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.618" endtime="20201115 23:02:11.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.641" endtime="20201115 23:02:11.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.650" endtime="20201115 23:02:11.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.645" endtime="20201115 23:02:11.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.637" endtime="20201115 23:02:11.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.118" endtime="20201115 23:02:11.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.114" endtime="20201115 23:02:11.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.112" endtime="20201115 23:02:11.676"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.682" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.703" endtime="20201115 23:02:11.723"></status>
</kw>
<msg timestamp="20201115 23:02:11.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.700" endtime="20201115 23:02:11.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.726" endtime="20201115 23:02:11.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.733" endtime="20201115 23:02:11.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.693" endtime="20201115 23:02:11.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.687" endtime="20201115 23:02:11.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.756" endtime="20201115 23:02:12.106"></status>
</kw>
<msg timestamp="20201115 23:02:12.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046691306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.753" endtime="20201115 23:02:12.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046653403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046691306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.116" endtime="20201115 23:02:12.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.135" endtime="20201115 23:02:12.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.746" endtime="20201115 23:02:12.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.741" endtime="20201115 23:02:12.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.153" level="INFO">${RESULT} = [{'time': 0.046691306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7902999999998854e-05, 'source_diff': 3.7902999999998854e-05}, {'time': 0.046746375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:12.144" endtime="20201115 23:02:12.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.186" level="INFO">${ACCURACY} = {'time': [0.046691306, 0.046746375, 0.046800319, 0.046850319, 0.046905333, 0.046952333, 0.047009333, 0.047060361, 0.047115375, 0.047163375, 0.047219403, 0.047267375, 0.047322403, 0.047372389, 0.047425...</msg>
<status status="PASS" starttime="20201115 23:02:12.155" endtime="20201115 23:02:12.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.197" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.195" endtime="20201115 23:02:12.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.202" level="INFO">VALUE: [3.7902999999998854e-05, 3.826400000000313e-05, 3.8013000000003405e-05, 3.7347000000000075e-05, 3.7347000000000075e-05, 3.776399999999569e-05, 3.825000000000356e-05, 3.794400000000503e-05, 3.7597000000000325e-05, 3.805600000000159e-05, 3.7360999999999644e-05, 3.826400000000313e-05, 3.7597000000000325e-05, 3.797200000000417e-05, 3.749999999999587e-05, 3.804200000000202e-05, 3.7666999999998174e-05, 3.8124999999999964e-05, 3.761199999999937e-05, 3.7430999999997494e-05, 3.751400000000238e-05, 3.819399999999834e-05, 3.729200000000127e-05, 3.7638999999999034e-05, 3.824999999999662e-05, 3.822199999999748e-05, 3.7583000000000755e-05, 3.8097000000000825e-05, 3.7583000000000755e-05, 3.7874999999999714e-05, 3.782000000000091e-05, 3.77780000000022e-05, 3.768100000000468e-05, 3.7360999999999644e-05, 3.7583000000000755e-05, 3.79859999999968e-05, 3.7874999999999714e-05, 3.8263000000003655e-05, 3.799999999999637e-05, 3.7624999999999464e-05, 3.807000000000116e-05, 3.7374999999999214e-05, 3.757000000000066e-05, 3.773600000000349e-05, 3.7624999999999464e-05, 3.729200000000127e-05, 3.79450000000045e-05, 3.8124999999999964e-05, 3.8083000000001255e-05, 3.776400000000263e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.199" endtime="20201115 23:02:12.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.188" endtime="20201115 23:02:12.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.211" endtime="20201115 23:02:12.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.219" endtime="20201115 23:02:12.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.215" endtime="20201115 23:02:12.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.206" endtime="20201115 23:02:12.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.683" endtime="20201115 23:02:12.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.679" endtime="20201115 23:02:12.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.677" endtime="20201115 23:02:12.246"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.274" endtime="20201115 23:02:12.293"></status>
</kw>
<msg timestamp="20201115 23:02:12.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.270" endtime="20201115 23:02:12.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.296" endtime="20201115 23:02:12.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.302" endtime="20201115 23:02:12.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.262" endtime="20201115 23:02:12.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.256" endtime="20201115 23:02:12.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.326" endtime="20201115 23:02:12.671"></status>
</kw>
<msg timestamp="20201115 23:02:12.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047343347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047382125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.322" endtime="20201115 23:02:12.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047343347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047382125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.680" endtime="20201115 23:02:12.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.699" endtime="20201115 23:02:12.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.315" endtime="20201115 23:02:12.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.311" endtime="20201115 23:02:12.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.718" level="INFO">${RESULT} = [{'time': 0.047382125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.877799999999626e-05, 'source_diff': 3.877799999999626e-05}, {'time': 0.047430139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.709" endtime="20201115 23:02:12.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.748" level="INFO">${ACCURACY} = {'time': [0.047382125, 0.047430139, 0.047481153, 0.047534153, 0.047581153, 0.047627153, 0.047681167, 0.047734181, 0.047792181, 0.047840181, 0.047894181, 0.047948208, 0.048005208, 0.048064222, 0.048117...</msg>
<status status="PASS" starttime="20201115 23:02:12.720" endtime="20201115 23:02:12.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.759" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.757" endtime="20201115 23:02:12.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.764" level="INFO">VALUE: [3.877799999999626e-05, 3.869500000000525e-05, 3.8375000000000214e-05, 3.8875000000000715e-05, 3.850000000000381e-05, 3.829199999999533e-05, 3.926400000000413e-05, 3.848700000000371e-05, 3.8625000000000465e-05, 3.908400000000173e-05, 3.858400000000123e-05, 3.8388999999999784e-05, 3.8305000000002365e-05, 3.8888999999993346e-05, 3.9083000000002255e-05, 3.9097000000001825e-05, 3.899999999999737e-05, 3.852800000000295e-05, 3.920799999999891e-05, 3.8597000000001325e-05, 3.879200000000277e-05, 3.8361000000000645e-05, 3.8652999999999604e-05, 3.9194999999998814e-05, 3.8430999999998494e-05, 3.8708999999997884e-05, 3.8958999999998134e-05, 3.902800000000345e-05, 3.9153000000000104e-05, 3.904200000000302e-05, 3.8762999999997216e-05, 3.908400000000173e-05, 3.8986999999997274e-05, 3.8833000000002005e-05, 3.8875000000000715e-05, 3.8555000000002615e-05, 3.8527000000003475e-05, 3.870799999999841e-05, 3.902799999999651e-05, 3.8625000000000465e-05, 3.926399999999719e-05, 3.8680999999998744e-05, 3.8388999999999784e-05, 3.844399999999859e-05, 3.8597000000001325e-05, 3.8375000000000214e-05, 3.923599999999805e-05, 3.922199999999848e-05, 3.8625000000000465e-05, 3.8445000000005e-05]</msg>
<status status="PASS" starttime="20201115 23:02:12.761" endtime="20201115 23:02:12.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.750" endtime="20201115 23:02:12.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.773" endtime="20201115 23:02:12.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.782" endtime="20201115 23:02:12.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.777" endtime="20201115 23:02:12.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.769" endtime="20201115 23:02:12.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.253" endtime="20201115 23:02:12.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.249" endtime="20201115 23:02:12.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.247" endtime="20201115 23:02:12.809"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.814" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.836" endtime="20201115 23:02:12.856"></status>
</kw>
<msg timestamp="20201115 23:02:12.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.833" endtime="20201115 23:02:12.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.859" endtime="20201115 23:02:12.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.865" endtime="20201115 23:02:12.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.825" endtime="20201115 23:02:12.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.819" endtime="20201115 23:02:12.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.889" endtime="20201115 23:02:13.237"></status>
</kw>
<msg timestamp="20201115 23:02:13.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047617875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.886" endtime="20201115 23:02:13.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047617875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.247" endtime="20201115 23:02:13.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.266" endtime="20201115 23:02:13.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.878" endtime="20201115 23:02:13.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.874" endtime="20201115 23:02:13.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.283" level="INFO">${RESULT} = [{'time': 0.047617875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9902999999993916e-05, 'source_diff': 3.9902999999993916e-05}, {'time': 0.047664903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.274" endtime="20201115 23:02:13.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.313" level="INFO">${ACCURACY} = {'time': [0.047617875, 0.047664903, 0.047714889, 0.047772903, 0.047831903, 0.047884917, 0.047937917, 0.047985917, 0.048037917, 0.048086931, 0.048135944, 0.048191944, 0.048248944, 0.048305944, 0.048353...</msg>
<status status="PASS" starttime="20201115 23:02:13.285" endtime="20201115 23:02:13.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.324" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.322" endtime="20201115 23:02:13.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.330" level="INFO">VALUE: [3.9902999999993916e-05, 3.958400000000223e-05, 3.9611000000001895e-05, 3.949999999999787e-05, 4.004200000000402e-05, 3.9472999999998204e-05, 3.973599999999855e-05, 4.007000000000316e-05, 3.949999999999787e-05, 3.9486999999997774e-05, 3.9625000000001465e-05, 3.9805000000003865e-05, 3.9361000000001645e-05, 3.9333000000002505e-05, 4.0083000000003255e-05, 3.9375000000001215e-05, 3.9639000000001035e-05, 3.9667000000000174e-05, 3.95980000000018e-05, 3.9847000000002575e-05, 3.974999999999812e-05, 3.970799999999941e-05, 4.001399999999794e-05, 4.020799999999991e-05, 3.9653000000000604e-05, 4.008400000000273e-05, 3.999999999999837e-05, 3.933400000000198e-05, 3.982000000000291e-05, 3.958399999999529e-05, 3.9416999999999924e-05, 3.968000000000027e-05, 3.936200000000112e-05, 3.9875000000001715e-05, 3.945799999999916e-05, 3.9875000000001715e-05, 4.01660000000012e-05, 3.9667000000000174e-05, 3.9333000000002505e-05, 3.9833000000003005e-05, 4.0083000000003255e-05, 3.9875000000001715e-05, 3.972199999999898e-05, 4.0167000000000674e-05, 3.9917000000000424e-05, 3.9944999999999564e-05, 3.94859999999983e-05, 3.952799999999701e-05, 3.9930999999999994e-05, 3.9625000000001465e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.327" endtime="20201115 23:02:13.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.315" endtime="20201115 23:02:13.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.339" endtime="20201115 23:02:13.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.348" endtime="20201115 23:02:13.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.343" endtime="20201115 23:02:13.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.335" endtime="20201115 23:02:13.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.816" endtime="20201115 23:02:13.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.812" endtime="20201115 23:02:13.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.810" endtime="20201115 23:02:13.374"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.380" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.401" endtime="20201115 23:02:13.421"></status>
</kw>
<msg timestamp="20201115 23:02:13.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.398" endtime="20201115 23:02:13.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.425" endtime="20201115 23:02:13.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.431" endtime="20201115 23:02:13.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.391" endtime="20201115 23:02:13.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.385" endtime="20201115 23:02:13.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.454" endtime="20201115 23:02:13.801"></status>
</kw>
<msg timestamp="20201115 23:02:13.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046887375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046928556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.451" endtime="20201115 23:02:13.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046887375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046928556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.810" endtime="20201115 23:02:13.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.829" endtime="20201115 23:02:13.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.444" endtime="20201115 23:02:13.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.439" endtime="20201115 23:02:13.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.848" level="INFO">${RESULT} = [{'time': 0.046928556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1181000000001244e-05, 'source_diff': 4.1181000000001244e-05}, {'time': 0.046986542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.839" endtime="20201115 23:02:13.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.878" level="INFO">${ACCURACY} = {'time': [0.046928556, 0.046986542, 0.047037556, 0.047092569, 0.047151597, 0.047203569, 0.047261597, 0.047315611, 0.047376583, 0.047435611, 0.047493597, 0.047544625, 0.047602625, 0.047660653, 0.047718...</msg>
<status status="PASS" starttime="20201115 23:02:13.850" endtime="20201115 23:02:13.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.888" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.886" endtime="20201115 23:02:13.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.901" level="INFO">VALUE: [4.1181000000001244e-05, 4.0972999999999704e-05, 4.058400000000323e-05, 4.0847000000003575e-05, 4.06660000000017e-05, 4.1026999999999036e-05, 4.120800000000091e-05, 4.118000000000177e-05, 4.1040999999998606e-05, 4.074999999999912e-05, 4.1124999999996026e-05, 4.0861000000003145e-05, 4.072199999999998e-05, 4.0610999999995956e-05, 4.0333000000003505e-05, 4.0318999999996996e-05, 4.0945000000000564e-05, 4.026400000000513e-05, 4.0917000000001424e-05, 4.052800000000495e-05, 4.0597000000003325e-05, 4.0639000000002035e-05, 4.1125000000002965e-05, 4.0667000000001174e-05, 4.093000000000152e-05, 4.043000000000102e-05, 4.0762999999999217e-05, 4.101399999999894e-05, 4.120800000000091e-05, 4.070800000000041e-05, 4.09859999999998e-05, 4.1111000000003395e-05, 4.0638999999995096e-05, 4.03059999999969e-05, 4.0625000000002465e-05, 4.1083000000004255e-05, 4.070800000000041e-05, 4.1111000000003395e-05, 4.074999999999912e-05, 4.079199999999783e-05, 4.084799999999611e-05, 4.054199999999758e-05, 4.034800000000255e-05, 4.049999999999887e-05, 4.123599999999311e-05, 4.0540999999998106e-05, 4.052799999999801e-05, 4.04859999999993e-05, 4.0832999999997066e-05, 4.102799999999851e-05]</msg>
<status status="PASS" starttime="20201115 23:02:13.891" endtime="20201115 23:02:13.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.879" endtime="20201115 23:02:13.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.911" endtime="20201115 23:02:13.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.920" endtime="20201115 23:02:13.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.915" endtime="20201115 23:02:13.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.906" endtime="20201115 23:02:13.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.381" endtime="20201115 23:02:13.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.377" endtime="20201115 23:02:13.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.375" endtime="20201115 23:02:13.948"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.953" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.977" endtime="20201115 23:02:13.995"></status>
</kw>
<msg timestamp="20201115 23:02:13.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.973" endtime="20201115 23:02:13.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.996" endtime="20201115 23:02:13.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.999" endtime="20201115 23:02:14.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.965" endtime="20201115 23:02:14.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.959" endtime="20201115 23:02:14.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.011" endtime="20201115 23:02:14.339"></status>
</kw>
<msg timestamp="20201115 23:02:14.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049363972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049405569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.009" endtime="20201115 23:02:14.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049363972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049405569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.349" endtime="20201115 23:02:14.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.369" endtime="20201115 23:02:14.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.006" endtime="20201115 23:02:14.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.004" endtime="20201115 23:02:14.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.388" level="INFO">${RESULT} = [{'time': 0.049405569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1597000000004325e-05, 'source_diff': 4.1597000000004325e-05}, {'time': 0.049459597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.379" endtime="20201115 23:02:14.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.424" level="INFO">${ACCURACY} = {'time': [0.049405569, 0.049459597, 0.049516569, 0.049566583, 0.049615583, 0.049670583, 0.049731625, 0.049791597, 0.049847625, 0.049896611, 0.049948611, 0.050000611, 0.050059625, 0.050111625, 0.050161...</msg>
<status status="PASS" starttime="20201115 23:02:14.391" endtime="20201115 23:02:14.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.436" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.433" endtime="20201115 23:02:14.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.442" level="INFO">VALUE: [4.1597000000004325e-05, 4.1361000000003645e-05, 4.1597000000004325e-05, 4.147200000000073e-05, 4.1360999999996706e-05, 4.170799999999447e-05, 4.194400000000209e-05, 4.169400000000184e-05, 4.1917000000002425e-05, 4.1332999999997566e-05, 4.1568999999998246e-05, 4.175000000000012e-05, 4.17780000000062e-05, 4.1860999999997206e-05, 4.149999999999987e-05, 4.2181000000002244e-05, 4.2209000000001384e-05, 4.159799999999686e-05, 4.157000000000466e-05, 4.1431000000001494e-05, 4.14860000000003e-05, 4.2194999999994875e-05, 4.1347000000004075e-05, 4.1790999999999356e-05, 4.149999999999987e-05, 4.1347000000004075e-05, 4.2027000000000037e-05, 4.194399999999515e-05, 4.177799999999926e-05, 4.169400000000184e-05, 4.19860000000008e-05, 4.1624999999996526e-05, 4.226400000000019e-05, 4.195799999999472e-05, 4.127799999999876e-05, 4.1473000000000204e-05, 4.1695000000001314e-05, 4.1930999999995056e-05, 4.225000000000062e-05, 4.219400000000234e-05, 4.158399999999729e-05, 4.219400000000234e-05, 4.2097000000004825e-05, 4.172200000000098e-05, 4.1290999999998856e-05, 4.1389000000002785e-05, 4.2110999999997456e-05, 4.2082999999998316e-05, 4.202799999999951e-05, 4.192999999999558e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.438" endtime="20201115 23:02:14.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.426" endtime="20201115 23:02:14.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.451" endtime="20201115 23:02:14.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.460" endtime="20201115 23:02:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.455" endtime="20201115 23:02:14.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.446" endtime="20201115 23:02:14.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.955" endtime="20201115 23:02:14.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.950" endtime="20201115 23:02:14.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.949" endtime="20201115 23:02:14.487"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.516" endtime="20201115 23:02:14.538"></status>
</kw>
<msg timestamp="20201115 23:02:14.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.513" endtime="20201115 23:02:14.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.541" endtime="20201115 23:02:14.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.548" endtime="20201115 23:02:14.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.505" endtime="20201115 23:02:14.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.499" endtime="20201115 23:02:14.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.573" endtime="20201115 23:02:14.945"></status>
</kw>
<msg timestamp="20201115 23:02:14.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049555042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049598264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.569" endtime="20201115 23:02:14.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049555042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049598264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.955" endtime="20201115 23:02:14.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.976" endtime="20201115 23:02:14.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.562" endtime="20201115 23:02:14.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.556" endtime="20201115 23:02:14.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.996" level="INFO">${RESULT} = [{'time': 0.049598264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.322200000000248e-05, 'source_diff': 4.322200000000248e-05}, {'time': 0.049650264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.986" endtime="20201115 23:02:14.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.028" level="INFO">${ACCURACY} = {'time': [0.049598264, 0.049650264, 0.049702264, 0.049753278, 0.049813278, 0.049873306, 0.049931292, 0.049988292, 0.050044319, 0.050106306, 0.050166361, 0.050226319, 0.050281333, 0.050340347, 0.050393...</msg>
<status status="PASS" starttime="20201115 23:02:14.998" endtime="20201115 23:02:15.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.040" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.038" endtime="20201115 23:02:15.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.046" level="INFO">VALUE: [4.322200000000248e-05, 4.270800000000241e-05, 4.227799999999976e-05, 4.250000000000087e-05, 4.277800000000026e-05, 4.2374999999997276e-05, 4.2403000000003355e-05, 4.248599999999436e-05, 4.3110999999998456e-05, 4.2417000000002925e-05, 4.2624999999997526e-05, 4.2527000000000537e-05, 4.299999999999443e-05, 4.24860000000013e-05, 4.267999999999633e-05, 4.2333000000005505e-05, 4.247200000000173e-05, 4.2694999999995376e-05, 4.225000000000062e-05, 4.252800000000001e-05, 4.2667000000003175e-05, 4.251400000000044e-05, 4.284799999999811e-05, 4.2360999999997706e-05, 4.227799999999976e-05, 4.2374999999997276e-05, 4.284800000000505e-05, 4.324999999999468e-05, 4.3082999999999316e-05, 4.2916999999996486e-05, 4.2666999999996236e-05, 4.2818999999999496e-05, 4.319400000000334e-05, 4.2554999999999676e-05, 4.3124999999998026e-05, 4.291600000000395e-05, 4.24860000000013e-05, 4.2333000000005505e-05, 4.28059999999994e-05, 4.3208999999995445e-05, 4.308399999999879e-05, 4.2860999999998206e-05, 4.326399999999425e-05, 4.3096999999998886e-05, 4.259799999999786e-05, 4.2403000000003355e-05, 4.2624999999997526e-05, 4.2737000000001024e-05, 4.2695000000002314e-05, 4.2694999999995376e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.043" endtime="20201115 23:02:15.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.031" endtime="20201115 23:02:15.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.055" endtime="20201115 23:02:15.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.065" endtime="20201115 23:02:15.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.060" endtime="20201115 23:02:15.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.051" endtime="20201115 23:02:15.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.495" endtime="20201115 23:02:15.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.490" endtime="20201115 23:02:15.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.488" endtime="20201115 23:02:15.092"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.098" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.121" endtime="20201115 23:02:15.142"></status>
</kw>
<msg timestamp="20201115 23:02:15.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.117" endtime="20201115 23:02:15.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.145" endtime="20201115 23:02:15.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.152" endtime="20201115 23:02:15.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.110" endtime="20201115 23:02:15.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.104" endtime="20201115 23:02:15.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.178" endtime="20201115 23:02:15.556"></status>
</kw>
<msg timestamp="20201115 23:02:15.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049768819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049812778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.173" endtime="20201115 23:02:15.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049768819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049812778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.566" endtime="20201115 23:02:15.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.586" endtime="20201115 23:02:15.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.166" endtime="20201115 23:02:15.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.161" endtime="20201115 23:02:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.605" level="INFO">${RESULT} = [{'time': 0.049812778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3959000000003134e-05, 'source_diff': 4.3959000000003134e-05}, {'time': 0.049868778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.595" endtime="20201115 23:02:15.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.637" level="INFO">${ACCURACY} = {'time': [0.049812778, 0.049868778, 0.049927764, 0.049989778, 0.050044792, 0.050107778, 0.050166847, 0.050228792, 0.050281819, 0.050345792, 0.050398819, 0.050459806, 0.050515861, 0.050578819, 0.050630...</msg>
<status status="PASS" starttime="20201115 23:02:15.607" endtime="20201115 23:02:15.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.649" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.647" endtime="20201115 23:02:15.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.655" level="INFO">VALUE: [4.3959000000003134e-05, 4.3611000000005895e-05, 4.3638999999998096e-05, 4.351400000000144e-05, 4.383399999999954e-05, 4.3458999999995696e-05, 4.345800000000316e-05, 4.3959000000003134e-05, 4.392999999999758e-05, 4.3624999999998526e-05, 4.388799999999887e-05, 4.3709000000002884e-05, 4.404200000000108e-05, 4.340199999999794e-05, 4.3555000000000677e-05, 4.4124999999999026e-05, 4.3639000000005035e-05, 4.367999999999733e-05, 4.4124999999999026e-05, 4.401400000000194e-05, 4.392999999999758e-05, 4.4181000000004245e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3930999999997056e-05, 4.375000000000212e-05, 4.402700000000204e-05, 4.420799999999697e-05, 4.3638999999998096e-05, 4.334799999999861e-05, 4.383399999999954e-05, 4.391600000000495e-05, 4.34860000000023e-05, 4.377800000000126e-05, 4.345799999999622e-05, 4.394400000000409e-05, 4.383399999999954e-05, 4.3833000000000066e-05, 4.425000000000262e-05, 4.33059999999999e-05, 4.422199999999654e-05, 4.3332999999999566e-05, 4.3596999999999386e-05, 4.3680999999996806e-05, 4.3737000000002024e-05, 4.3624999999998526e-05, 4.39860000000028e-05, 4.3416999999996986e-05, 4.423599999999611e-05, 4.358399999999929e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.652" endtime="20201115 23:02:15.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.639" endtime="20201115 23:02:15.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.664" endtime="20201115 23:02:15.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.673" endtime="20201115 23:02:15.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.669" endtime="20201115 23:02:15.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.659" endtime="20201115 23:02:15.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.099" endtime="20201115 23:02:15.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.095" endtime="20201115 23:02:15.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.093" endtime="20201115 23:02:15.701"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.706" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.730" endtime="20201115 23:02:15.750"></status>
</kw>
<msg timestamp="20201115 23:02:15.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.726" endtime="20201115 23:02:15.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.753" endtime="20201115 23:02:15.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.761" endtime="20201115 23:02:15.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.718" endtime="20201115 23:02:15.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.712" endtime="20201115 23:02:15.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.786" endtime="20201115 23:02:16.158"></status>
</kw>
<msg timestamp="20201115 23:02:16.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049756125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049801181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.783" endtime="20201115 23:02:16.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049756125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049801181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.168" endtime="20201115 23:02:16.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.188" endtime="20201115 23:02:16.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.775" endtime="20201115 23:02:16.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.770" endtime="20201115 23:02:16.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.208" level="INFO">${RESULT} = [{'time': 0.049801181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.505600000000165e-05, 'source_diff': 4.505600000000165e-05}, {'time': 0.049859194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.199" endtime="20201115 23:02:16.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.241" level="INFO">${ACCURACY} = {'time': [0.049801181, 0.049859194, 0.049913278, 0.049971208, 0.050032222, 0.050089236, 0.05015425, 0.050218236, 0.050278264, 0.050334264, 0.050389333, 0.050447278, 0.050505278, 0.050566361, 0.0506212...</msg>
<status status="PASS" starttime="20201115 23:02:16.210" endtime="20201115 23:02:16.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.253" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.250" endtime="20201115 23:02:16.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.259" level="INFO">VALUE: [4.505600000000165e-05, 4.468000000000527e-05, 4.477799999999532e-05, 4.495800000000466e-05, 4.516599999999926e-05, 4.473600000000355e-05, 4.4680999999997806e-05, 4.4638999999999096e-05, 4.5083000000001316e-05, 4.4402999999998416e-05, 4.447200000000373e-05, 4.4958999999997196e-05, 4.452800000000201e-05, 4.4916999999998486e-05, 4.504199999999514e-05, 4.4861000000000206e-05, 4.4667000000005175e-05, 4.443000000000502e-05, 4.490199999999944e-05, 4.5083000000001316e-05, 4.480499999999499e-05, 4.444400000000459e-05, 4.44860000000033e-05, 4.4374999999999276e-05, 4.504100000000261e-05, 4.4319000000000996e-05, 4.526400000000319e-05, 4.4695000000004315e-05, 4.431899999999406e-05, 4.447199999999679e-05, 4.502800000000251e-05, 4.475000000000312e-05, 4.4944999999997626e-05, 4.4874999999999776e-05, 4.5097000000000886e-05, 4.5125000000000026e-05, 4.5138999999999596e-05, 4.502799999999557e-05, 4.476400000000269e-05, 4.472200000000398e-05, 4.46939999999979e-05, 4.51939999999984e-05, 4.442999999999808e-05, 4.444399999999765e-05, 4.511099999999352e-05, 4.472199999999704e-05, 4.479199999999489e-05, 4.4374999999999276e-05, 4.5125000000000026e-05, 4.4388999999998846e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.255" endtime="20201115 23:02:16.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.243" endtime="20201115 23:02:16.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.268" endtime="20201115 23:02:16.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.277" endtime="20201115 23:02:16.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.273" endtime="20201115 23:02:16.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.263" endtime="20201115 23:02:16.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.708" endtime="20201115 23:02:16.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.704" endtime="20201115 23:02:16.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.702" endtime="20201115 23:02:16.305"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.310" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.334" endtime="20201115 23:02:16.355"></status>
</kw>
<msg timestamp="20201115 23:02:16.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.331" endtime="20201115 23:02:16.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.358" endtime="20201115 23:02:16.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.365" endtime="20201115 23:02:16.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.323" endtime="20201115 23:02:16.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.316" endtime="20201115 23:02:16.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.390" endtime="20201115 23:02:16.764"></status>
</kw>
<msg timestamp="20201115 23:02:16.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05065875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050704569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:16.387" endtime="20201115 23:02:16.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05065875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050704569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:16.774" endtime="20201115 23:02:16.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.794" endtime="20201115 23:02:16.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.379" endtime="20201115 23:02:16.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.374" endtime="20201115 23:02:16.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.813" level="INFO">${RESULT} = [{'time': 0.050704569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.581899999999556e-05, 'source_diff': 4.581899999999556e-05}, {'time': 0.050765556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.803" endtime="20201115 23:02:16.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.848" level="INFO">${ACCURACY} = {'time': [0.050704569, 0.050765556, 0.050822542, 0.050878583, 0.050941556, 0.051000597, 0.051065569, 0.051120569, 0.051175597, 0.051233625, 0.051290597, 0.051344653, 0.051410597, 0.051474611, 0.051530...</msg>
<status status="PASS" starttime="20201115 23:02:16.815" endtime="20201115 23:02:16.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.859" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.857" endtime="20201115 23:02:16.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.865" level="INFO">VALUE: [4.581899999999556e-05, 4.609800000000136e-05, 4.6208999999998446e-05, 4.56939999999989e-05, 4.552799999999607e-05, 4.5361000000000706e-05, 4.5875000000000776e-05, 4.566599999999976e-05, 4.572200000000498e-05, 4.623599999999811e-05, 4.624999999999768e-05, 4.55139999999965e-05, 4.5861000000001206e-05, 4.529200000000233e-05, 4.5639000000000096e-05, 4.574999999999718e-05, 4.5611000000000956e-05, 4.5666999999999236e-05, 4.5445000000005065e-05, 4.6194999999998876e-05, 4.5709000000004885e-05, 4.536099999999377e-05, 4.5431000000005495e-05, 4.5958999999998196e-05, 4.591600000000001e-05, 4.6097000000001886e-05, 4.5583000000001817e-05, 4.5375000000000276e-05, 4.5875000000000776e-05, 4.6139000000000596e-05, 4.5347000000001136e-05, 4.624999999999768e-05, 4.531999999999453e-05, 4.5347000000001136e-05, 4.5597000000001386e-05, 4.626400000000419e-05, 4.5445000000005065e-05, 4.572200000000498e-05, 4.577799999999632e-05, 4.559800000000086e-05, 4.551400000000344e-05, 4.5861000000001206e-05, 4.5459000000004635e-05, 4.600000000000437e-05, 4.5597000000001386e-05, 4.606900000000275e-05, 4.572199999999804e-05, 4.6111000000001456e-05, 4.549999999999693e-05, 4.572200000000498e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.862" endtime="20201115 23:02:16.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.850" endtime="20201115 23:02:16.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.875" endtime="20201115 23:02:16.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.884" endtime="20201115 23:02:16.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.879" endtime="20201115 23:02:16.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.870" endtime="20201115 23:02:16.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.312" endtime="20201115 23:02:16.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.308" endtime="20201115 23:02:16.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.306" endtime="20201115 23:02:16.912"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.917" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.940" endtime="20201115 23:02:16.962"></status>
</kw>
<msg timestamp="20201115 23:02:16.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.937" endtime="20201115 23:02:16.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.966" endtime="20201115 23:02:16.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.972" endtime="20201115 23:02:16.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.929" endtime="20201115 23:02:16.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.923" endtime="20201115 23:02:16.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.997" endtime="20201115 23:02:17.370"></status>
</kw>
<msg timestamp="20201115 23:02:17.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049799458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049846569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.994" endtime="20201115 23:02:17.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049799458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049846569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.380" endtime="20201115 23:02:17.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.400" endtime="20201115 23:02:17.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.986" endtime="20201115 23:02:17.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.981" endtime="20201115 23:02:17.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.420" level="INFO">${RESULT} = [{'time': 0.049846569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7111000000002456e-05, 'source_diff': 4.7111000000002456e-05}, {'time': 0.0499115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.411" endtime="20201115 23:02:17.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.434" level="INFO">${ACCURACY} = {'time': [0.049846569, 0.0499115, 0.049971528, 0.050026528, 0.050090528, 0.050156528, 0.050214556, 0.050269569, 0.050336556, 0.050403569, 0.050461625, 0.050527639, 0.050581583, 0.050641583, 0.05070062...</msg>
<status status="PASS" starttime="20201115 23:02:17.421" endtime="20201115 23:02:17.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.439" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.438" endtime="20201115 23:02:17.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.442" level="INFO">VALUE: [4.7111000000002456e-05, 4.652799999999707e-05, 4.654200000000358e-05, 4.673599999999861e-05, 4.6931000000000056e-05, 4.6694999999999376e-05, 4.705600000000365e-05, 4.6347000000002136e-05, 4.7222999999999016e-05, 4.6875000000001776e-05, 4.706900000000375e-05, 4.655599999999621e-05, 4.672199999999904e-05, 4.694400000000015e-05, 4.681899999999656e-05, 4.708299999999638e-05, 4.6375000000001276e-05, 4.668000000000033e-05, 4.71940000000004e-05, 4.661099999999502e-05, 4.6917000000000486e-05, 4.723599999999911e-05, 4.643000000000008e-05, 4.704199999999714e-05, 4.6430999999999556e-05, 4.684800000000211e-05, 4.6444999999999126e-05, 4.6987000000005275e-05, 4.701299999999853e-05, 4.674999999999818e-05, 4.6375000000001276e-05, 4.715299999999423e-05, 4.630500000000343e-05, 4.672200000000598e-05, 4.720799999999997e-05, 4.677799999999732e-05, 4.658400000000229e-05, 4.6958999999999196e-05, 4.6611000000001956e-05, 4.6583000000002817e-05, 4.682000000000297e-05, 4.626400000000419e-05, 4.7181000000000306e-05, 4.6931000000000056e-05, 4.63060000000029e-05, 4.7181000000000306e-05, 4.6389000000000846e-05, 4.7167000000000736e-05, 4.7097000000002887e-05, 4.668000000000033e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.441" endtime="20201115 23:02:17.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.435" endtime="20201115 23:02:17.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.447" endtime="20201115 23:02:17.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.451" endtime="20201115 23:02:17.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.449" endtime="20201115 23:02:17.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.445" endtime="20201115 23:02:17.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.919" endtime="20201115 23:02:17.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.914" endtime="20201115 23:02:17.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.913" endtime="20201115 23:02:17.473"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.476" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.486" endtime="20201115 23:02:17.504"></status>
</kw>
<msg timestamp="20201115 23:02:17.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.485" endtime="20201115 23:02:17.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.506" endtime="20201115 23:02:17.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.509" endtime="20201115 23:02:17.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.481" endtime="20201115 23:02:17.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.478" endtime="20201115 23:02:17.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.520" endtime="20201115 23:02:17.807"></status>
</kw>
<msg timestamp="20201115 23:02:17.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028044514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028092014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.519" endtime="20201115 23:02:17.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028044514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028092014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.811" endtime="20201115 23:02:17.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.820" endtime="20201115 23:02:17.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.515" endtime="20201115 23:02:17.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.513" endtime="20201115 23:02:17.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.829" level="INFO">${RESULT} = [{'time': 0.028092014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.749999999999893e-05, 'source_diff': 4.749999999999893e-05}, {'time': 0.028158097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.824" endtime="20201115 23:02:17.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.843" level="INFO">${ACCURACY} = {'time': [0.028092014, 0.028158097, 0.028217014, 0.028272028, 0.028334042, 0.028400042, 0.028457083, 0.028522069, 0.028590056, 0.028651181, 0.028715069, 0.028775111, 0.028838153, 0.028903097, 0.028962...</msg>
<status status="PASS" starttime="20201115 23:02:17.830" endtime="20201115 23:02:17.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.848" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.847" endtime="20201115 23:02:17.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.852" level="INFO">VALUE: [4.749999999999893e-05, 4.776399999999875e-05, 4.795799999999725e-05, 4.7375000000002276e-05, 4.809799999999989e-05, 4.7667000000001236e-05, 4.7889000000002346e-05, 4.736099999999924e-05, 4.779199999999789e-05, 4.7403000000001416e-05, 4.816599999999879e-05, 4.761099999999949e-05, 4.747199999999979e-05, 4.799999999999943e-05, 4.73330000000001e-05, 4.820800000000097e-05, 4.823600000000011e-05, 4.758300000000035e-05, 4.729199999999739e-05, 4.798599999999986e-05, 4.8181000000001306e-05, 4.748599999999936e-05, 4.779199999999789e-05, 4.8139000000002596e-05, 4.811099999999999e-05, 4.7417000000000986e-05, 4.75269999999986e-05, 4.811099999999999e-05, 4.804099999999867e-05, 4.777699999999885e-05, 4.809700000000042e-05, 4.823600000000011e-05, 4.748600000000283e-05, 4.811099999999999e-05, 4.790299999999845e-05, 4.7917000000001486e-05, 4.759699999999992e-05, 4.773599999999961e-05, 4.729200000000086e-05, 4.761199999999896e-05, 4.808300000000085e-05, 4.7695000000000376e-05, 4.805499999999824e-05, 4.779199999999789e-05, 4.784799999999964e-05, 4.826399999999925e-05, 4.827799999999882e-05, 4.779099999999842e-05, 4.76940000000009e-05, 4.761099999999949e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.849" endtime="20201115 23:02:17.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.844" endtime="20201115 23:02:17.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.856" endtime="20201115 23:02:17.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.860" endtime="20201115 23:02:17.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.858" endtime="20201115 23:02:17.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.854" endtime="20201115 23:02:17.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.476" endtime="20201115 23:02:17.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.474" endtime="20201115 23:02:17.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.473" endtime="20201115 23:02:17.882"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.885" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.895" endtime="20201115 23:02:17.912"></status>
</kw>
<msg timestamp="20201115 23:02:17.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.893" endtime="20201115 23:02:17.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.914" endtime="20201115 23:02:17.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.917" endtime="20201115 23:02:17.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.890" endtime="20201115 23:02:17.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.887" endtime="20201115 23:02:17.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.928" endtime="20201115 23:02:18.215"></status>
</kw>
<msg timestamp="20201115 23:02:18.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027636389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027685236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.927" endtime="20201115 23:02:18.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027636389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027685236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.219" endtime="20201115 23:02:18.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.228" endtime="20201115 23:02:18.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.923" endtime="20201115 23:02:18.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.921" endtime="20201115 23:02:18.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.237" level="INFO">${RESULT} = [{'time': 0.027685236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.88469999999977e-05, 'source_diff': 4.88469999999977e-05}, {'time': 0.027742236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:18.233" endtime="20201115 23:02:18.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.252" level="INFO">${ACCURACY} = {'time': [0.027685236, 0.027742236, 0.02780125, 0.02786025, 0.02792425, 0.027986306, 0.028050278, 0.028119306, 0.028176347, 0.028243306, 0.028302319, 0.028363306, 0.028423333, 0.028481319, 0.028538319...</msg>
<status status="PASS" starttime="20201115 23:02:18.239" endtime="20201115 23:02:18.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.257" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.256" endtime="20201115 23:02:18.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.260" level="INFO">VALUE: [4.88469999999977e-05, 4.844400000000165e-05, 4.844399999999818e-05, 4.883299999999813e-05, 4.904200000000261e-05, 4.918099999999884e-05, 4.905600000000218e-05, 4.908400000000132e-05, 4.836100000000024e-05, 4.852799999999907e-05, 4.908299999999838e-05, 4.9167000000002736e-05, 4.88469999999977e-05, 4.868000000000233e-05, 4.894399999999868e-05, 4.854099999999917e-05, 4.912500000000056e-05, 4.870800000000147e-05, 4.844400000000165e-05, 4.852799999999907e-05, 4.854200000000211e-05, 4.854199999999864e-05, 4.911099999999752e-05, 4.83330000000011e-05, 4.916699999999927e-05, 4.888899999999988e-05, 4.908400000000132e-05, 4.900000000000043e-05, 4.911099999999752e-05, 4.904199999999914e-05, 4.827799999999882e-05, 4.85269999999996e-05, 4.842999999999861e-05, 4.86940000000019e-05, 4.884700000000117e-05, 4.85269999999996e-05, 4.85139999999995e-05, 4.862500000000006e-05, 4.8972999999997296e-05, 4.877799999999932e-05, 4.887500000000031e-05, 4.913900000000013e-05, 4.868099999999834e-05, 4.847200000000079e-05, 4.834800000000014e-05, 4.876399999999975e-05, 4.918000000000283e-05, 4.876400000000322e-05, 4.88469999999977e-05, 4.904199999999914e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.258" endtime="20201115 23:02:18.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.253" endtime="20201115 23:02:18.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.264" endtime="20201115 23:02:18.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.268" endtime="20201115 23:02:18.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.266" endtime="20201115 23:02:18.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.262" endtime="20201115 23:02:18.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.885" endtime="20201115 23:02:18.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.883" endtime="20201115 23:02:18.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.882" endtime="20201115 23:02:18.291"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.305" endtime="20201115 23:02:18.322"></status>
</kw>
<msg timestamp="20201115 23:02:18.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.303" endtime="20201115 23:02:18.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.324" endtime="20201115 23:02:18.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.327" endtime="20201115 23:02:18.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.300" endtime="20201115 23:02:18.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.297" endtime="20201115 23:02:18.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.351" endtime="20201115 23:02:18.726"></status>
</kw>
<msg timestamp="20201115 23:02:18.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029103319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029152875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.348" endtime="20201115 23:02:18.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029103319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029152875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.736" endtime="20201115 23:02:18.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.755" endtime="20201115 23:02:18.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.340" endtime="20201115 23:02:18.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.335" endtime="20201115 23:02:18.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.774" level="INFO">${RESULT} = [{'time': 0.029152875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.955600000000268e-05, 'source_diff': 4.955600000000268e-05}, {'time': 0.029212889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.765" endtime="20201115 23:02:18.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.807" level="INFO">${ACCURACY} = {'time': [0.029152875, 0.029212889, 0.029275889, 0.029334889, 0.029399903, 0.029462903, 0.029529917, 0.029593917, 0.029655986, 0.029721931, 0.029785931, 0.029854944, 0.029911986, 0.029980958, 0.030040...</msg>
<status status="PASS" starttime="20201115 23:02:18.776" endtime="20201115 23:02:18.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.818" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.816" endtime="20201115 23:02:18.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.823" level="INFO">VALUE: [4.955600000000268e-05, 4.945799999999875e-05, 4.952800000000007e-05, 5.011099999999852e-05, 5.005600000000318e-05, 4.972199999999857e-05, 4.970899999999848e-05, 5.011100000000199e-05, 4.959699999999845e-05, 5.002800000000057e-05, 5.011200000000146e-05, 4.937500000000081e-05, 4.961100000000149e-05, 4.987499999999784e-05, 5.006899999999981e-05, 4.959699999999845e-05, 4.93469999999982e-05, 4.979199999999989e-05, 4.983299999999913e-05, 5.009699999999895e-05, 4.943099999999909e-05, 4.973599999999814e-05, 4.970899999999848e-05, 4.968099999999934e-05, 4.968099999999934e-05, 5.001399999999753e-05, 5.012499999999809e-05, 5.005500000000024e-05, 4.961099999999802e-05, 4.958299999999888e-05, 4.954100000000017e-05, 4.936100000000124e-05, 4.936200000000071e-05, 5.011099999999852e-05, 4.9917000000003486e-05, 4.959699999999845e-05, 4.9667000000003236e-05, 5.009699999999895e-05, 4.972200000000204e-05, 4.936099999999777e-05, 5.025000000000168e-05, 4.96669999999963e-05, 4.977799999999338e-05, 4.983299999999913e-05, 5.020899999999551e-05, 5.015299999999723e-05, 4.9487000000000836e-05, 4.948600000000136e-05, 5.024999999999474e-05, 4.9653000000003666e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.820" endtime="20201115 23:02:18.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.809" endtime="20201115 23:02:18.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.832" endtime="20201115 23:02:18.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.840" endtime="20201115 23:02:18.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.836" endtime="20201115 23:02:18.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.827" endtime="20201115 23:02:18.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.294" endtime="20201115 23:02:18.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.292" endtime="20201115 23:02:18.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.291" endtime="20201115 23:02:18.867"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.872" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.896" endtime="20201115 23:02:18.918"></status>
</kw>
<msg timestamp="20201115 23:02:18.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.892" endtime="20201115 23:02:18.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.921" endtime="20201115 23:02:18.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.927" endtime="20201115 23:02:18.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.884" endtime="20201115 23:02:18.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.877" endtime="20201115 23:02:18.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.958" endtime="20201115 23:02:19.306"></status>
</kw>
<msg timestamp="20201115 23:02:19.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049787222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049837903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.947" endtime="20201115 23:02:19.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049787222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049837903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.316" endtime="20201115 23:02:19.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.336" endtime="20201115 23:02:19.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.940" endtime="20201115 23:02:19.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.936" endtime="20201115 23:02:19.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.355" level="INFO">${RESULT} = [{'time': 0.049837903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0681000000003806e-05, 'source_diff': 5.0681000000003806e-05}, {'time': 0.049897875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:19.346" endtime="20201115 23:02:19.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.385" level="INFO">${ACCURACY} = {'time': [0.049837903, 0.049897875, 0.049968875, 0.050027875, 0.050090903, 0.050159889, 0.050220903, 0.050286944, 0.050349917, 0.050420917, 0.050480931, 0.050551958, 0.050618958, 0.050686986, 0.050758...</msg>
<status status="PASS" starttime="20201115 23:02:19.357" endtime="20201115 23:02:19.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.396" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.394" endtime="20201115 23:02:19.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.402" level="INFO">VALUE: [5.0681000000003806e-05, 5.0681000000003806e-05, 5.086100000000621e-05, 5.029200000000039e-05, 5.037499999999834e-05, 5.109699999999995e-05, 5.1235999999996173e-05, 5.0693999999996964e-05, 5.0709000000002946e-05, 5.086099999999927e-05, 5.06669999999973e-05, 5.068000000000433e-05, 5.038899999999791e-05, 5.079200000000089e-05, 5.069499999999644e-05, 5.087499999999884e-05, 5.0693999999996964e-05, 5.1193999999997464e-05, 5.0943999999997214e-05, 5.029200000000039e-05, 5.0985999999995923e-05, 5.082000000000003e-05, 5.119499999999694e-05, 5.054200000000064e-05, 5.104200000000114e-05, 5.030599999999996e-05, 5.108300000000038e-05, 5.079200000000089e-05, 5.045800000000322e-05, 5.079100000000142e-05, 5.1207999999997034e-05, 5.106900000000081e-05, 5.079100000000142e-05, 5.036099999999877e-05, 5.037499999999834e-05, 5.05419999999937e-05, 5.130600000000096e-05, 5.037499999999834e-05, 5.058299999999988e-05, 5.0735999999995673e-05, 5.036099999999877e-05, 5.088899999999841e-05, 5.034800000000561e-05, 5.059799999999892e-05, 5.051399999999456e-05, 5.102799999999463e-05, 5.044400000000365e-05, 5.049999999999499e-05, 5.1165999999998324e-05, 5.11669999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.398" endtime="20201115 23:02:19.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.387" endtime="20201115 23:02:19.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.411" endtime="20201115 23:02:19.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.419" endtime="20201115 23:02:19.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.415" endtime="20201115 23:02:19.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.406" endtime="20201115 23:02:19.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.873" endtime="20201115 23:02:19.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.869" endtime="20201115 23:02:19.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.868" endtime="20201115 23:02:19.446"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.451" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.473" endtime="20201115 23:02:19.493"></status>
</kw>
<msg timestamp="20201115 23:02:19.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.469" endtime="20201115 23:02:19.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.497" endtime="20201115 23:02:19.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.506" endtime="20201115 23:02:19.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.462" endtime="20201115 23:02:19.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.456" endtime="20201115 23:02:19.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.530" endtime="20201115 23:02:19.885"></status>
</kw>
<msg timestamp="20201115 23:02:19.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047068347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047120069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.527" endtime="20201115 23:02:19.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047068347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047120069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.894" endtime="20201115 23:02:19.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.913" endtime="20201115 23:02:19.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.520" endtime="20201115 23:02:19.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.515" endtime="20201115 23:02:19.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.931" level="INFO">${RESULT} = [{'time': 0.047120069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1721999999997104e-05, 'source_diff': 5.1721999999997104e-05}, {'time': 0.047183097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:19.922" endtime="20201115 23:02:19.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.961" level="INFO">${ACCURACY} = {'time': [0.047120069, 0.047183097, 0.047248083, 0.047313097, 0.047378111, 0.047439097, 0.047509111, 0.047573111, 0.047635125, 0.047703125, 0.047769167, 0.047831194, 0.047891153, 0.047961181, 0.048033...</msg>
<status status="PASS" starttime="20201115 23:02:19.933" endtime="20201115 23:02:19.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.972" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.970" endtime="20201115 23:02:19.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.978" level="INFO">VALUE: [5.1721999999997104e-05, 5.18470000000007e-05, 5.130500000000149e-05, 5.1957999999997784e-05, 5.175000000000318e-05, 5.204100000000267e-05, 5.1749999999996243e-05, 5.127800000000182e-05, 5.187499999999984e-05, 5.2207999999998034e-05, 5.193099999999812e-05, 5.206900000000181e-05, 5.154200000000164e-05, 5.134799999999967e-05, 5.227800000000282e-05, 5.209800000000042e-05, 5.129200000000139e-05, 5.1943999999998214e-05, 5.211100000000052e-05, 5.21940000000054e-05, 5.140299999999848e-05, 5.213899999999966e-05, 5.127800000000182e-05, 5.191699999999855e-05, 5.133300000000063e-05, 5.1999999999996493e-05, 5.15140000000025e-05, 5.127800000000182e-05, 5.225000000000368e-05, 5.1249999999995743e-05, 5.209800000000042e-05, 5.168099999999787e-05, 5.155500000000174e-05, 5.1943999999998214e-05, 5.207000000000128e-05, 5.1693999999997964e-05, 5.1471999999996854e-05, 5.137499999999934e-05, 5.130500000000149e-05, 5.130500000000149e-05, 5.18470000000007e-05, 5.16669999999983e-05, 5.202800000000257e-05, 5.155600000000121e-05, 5.141699999999805e-05, 5.205599999999477e-05, 5.193099999999812e-05, 5.137499999999934e-05, 5.134799999999967e-05, 5.1931000000005056e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.975" endtime="20201115 23:02:19.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.963" endtime="20201115 23:02:19.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.986" endtime="20201115 23:02:19.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.995" endtime="20201115 23:02:20.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.990" endtime="20201115 23:02:20.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.982" endtime="20201115 23:02:20.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.452" endtime="20201115 23:02:20.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.448" endtime="20201115 23:02:20.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.446" endtime="20201115 23:02:20.021"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.027" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.049" endtime="20201115 23:02:20.071"></status>
</kw>
<msg timestamp="20201115 23:02:20.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.046" endtime="20201115 23:02:20.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.074" endtime="20201115 23:02:20.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.080" endtime="20201115 23:02:20.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.038" endtime="20201115 23:02:20.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.032" endtime="20201115 23:02:20.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.104" endtime="20201115 23:02:20.452"></status>
</kw>
<msg timestamp="20201115 23:02:20.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047817181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.100" endtime="20201115 23:02:20.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047764542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047817181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.462" endtime="20201115 23:02:20.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.480" endtime="20201115 23:02:20.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.093" endtime="20201115 23:02:20.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.088" endtime="20201115 23:02:20.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.499" level="INFO">${RESULT} = [{'time': 0.047817181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.263900000000016e-05, 'source_diff': 5.263900000000016e-05}, {'time': 0.047884167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.490" endtime="20201115 23:02:20.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.530" level="INFO">${ACCURACY} = {'time': [0.047817181, 0.047884167, 0.047944194, 0.048008181, 0.048071208, 0.048142194, 0.048203222, 0.048276236, 0.048338222, 0.048406222, 0.048477236, 0.04854025, 0.04860125, 0.048667278, 0.04873426...</msg>
<status status="PASS" starttime="20201115 23:02:20.501" endtime="20201115 23:02:20.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.541" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.538" endtime="20201115 23:02:20.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.546" level="INFO">VALUE: [5.263900000000016e-05, 5.308399999999491e-05, 5.272200000000504e-05, 5.323699999999765e-05, 5.25549999999958e-05, 5.287500000000084e-05, 5.2735999999997674e-05, 5.305500000000324e-05, 5.2679999999999394e-05, 5.2443999999998714e-05, 5.2693999999998964e-05, 5.3207999999999034e-05, 5.2957999999998784e-05, 5.230600000000196e-05, 5.2457999999998284e-05, 5.236100000000077e-05, 5.284800000000117e-05, 5.240299999999948e-05, 5.286100000000127e-05, 5.302800000000357e-05, 5.279099999999648e-05, 5.247299999999733e-05, 5.2499999999996994e-05, 5.2929999999999644e-05, 5.252699999999666e-05, 5.250000000000393e-05, 5.3179999999999894e-05, 5.3166000000000324e-05, 5.2721999999998104e-05, 5.325000000000468e-05, 5.252800000000307e-05, 5.263900000000016e-05, 5.3249999999997744e-05, 5.320899999999851e-05, 5.293099999999912e-05, 5.2735999999997674e-05, 5.2985999999997924e-05, 5.25549999999958e-05, 5.277799999999638e-05, 5.265299999999973e-05, 5.287500000000084e-05, 5.283300000000213e-05, 5.305500000000324e-05, 5.236100000000077e-05, 5.325000000000468e-05, 5.291699999999955e-05, 5.280500000000299e-05, 5.275000000000418e-05, 5.240299999999948e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.543" endtime="20201115 23:02:20.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.532" endtime="20201115 23:02:20.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.555" endtime="20201115 23:02:20.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.564" endtime="20201115 23:02:20.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.559" endtime="20201115 23:02:20.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.550" endtime="20201115 23:02:20.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.028" endtime="20201115 23:02:20.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.024" endtime="20201115 23:02:20.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.022" endtime="20201115 23:02:20.591"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.596" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.618" endtime="20201115 23:02:20.639"></status>
</kw>
<msg timestamp="20201115 23:02:20.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.615" endtime="20201115 23:02:20.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.642" endtime="20201115 23:02:20.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.649" endtime="20201115 23:02:20.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.607" endtime="20201115 23:02:20.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.602" endtime="20201115 23:02:20.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.672" endtime="20201115 23:02:21.022"></status>
</kw>
<msg timestamp="20201115 23:02:21.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047954764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048008431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.669" endtime="20201115 23:02:21.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047954764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048008431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.032" endtime="20201115 23:02:21.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.050" endtime="20201115 23:02:21.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.662" endtime="20201115 23:02:21.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.657" endtime="20201115 23:02:21.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.068" level="INFO">${RESULT} = [{'time': 0.048008431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.36670000000003e-05, 'source_diff': 5.36670000000003e-05}, {'time': 0.048080458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:21.059" endtime="20201115 23:02:21.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.101" level="INFO">${ACCURACY} = {'time': [0.048008431, 0.048080458, 0.048152444, 0.048220458, 0.048285458, 0.048357486, 0.0484285, 0.0484915, 0.048558486, 0.048622514, 0.0486935, 0.048765514, 0.048836514, 0.048898583, 0.048967528, 0...</msg>
<status status="PASS" starttime="20201115 23:02:21.070" endtime="20201115 23:02:21.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.112" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.110" endtime="20201115 23:02:21.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.118" level="INFO">VALUE: [5.36670000000003e-05, 5.4166000000001324e-05, 5.4138000000002184e-05, 5.388900000000141e-05, 5.398600000000586e-05, 5.4180000000000894e-05, 5.4208000000000034e-05, 5.393100000000012e-05, 5.38749999999949e-05, 5.3471999999998854e-05, 5.4194000000000464e-05, 5.368099999999987e-05, 5.3277999999996883e-05, 5.338900000000091e-05, 5.425000000000568e-05, 5.388899999999447e-05, 5.408299999999644e-05, 5.394499999999969e-05, 5.362499999999465e-05, 5.4166000000001324e-05, 5.3457999999999284e-05, 5.3707999999999534e-05, 5.386100000000227e-05, 5.4221999999999604e-05, 5.380599999999652e-05, 5.337500000000134e-05, 5.4013999999998064e-05, 5.3457999999999284e-05, 5.35549999999968e-05, 5.387500000000184e-05, 5.361099999999508e-05, 5.415300000000123e-05, 5.3985999999998924e-05, 5.334699999999526e-05, 5.359700000000245e-05, 5.412500000000209e-05, 5.397200000000629e-05, 5.3944000000000214e-05, 5.329099999999698e-05, 5.3457999999999284e-05, 5.3971999999999354e-05, 5.3985999999998924e-05, 5.379199999999695e-05, 5.3777999999997383e-05, 5.33470000000022e-05, 5.333299999999569e-05, 5.3527999999997133e-05, 5.4249999999998744e-05, 5.390300000000098e-05, 5.38470000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.115" endtime="20201115 23:02:21.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.103" endtime="20201115 23:02:21.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.127" endtime="20201115 23:02:21.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.136" endtime="20201115 23:02:21.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.131" endtime="20201115 23:02:21.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.123" endtime="20201115 23:02:21.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.597" endtime="20201115 23:02:21.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.593" endtime="20201115 23:02:21.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.592" endtime="20201115 23:02:21.162"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.168" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.189" endtime="20201115 23:02:21.210"></status>
</kw>
<msg timestamp="20201115 23:02:21.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.186" endtime="20201115 23:02:21.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.214" endtime="20201115 23:02:21.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.220" endtime="20201115 23:02:21.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.179" endtime="20201115 23:02:21.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.173" endtime="20201115 23:02:21.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.243" endtime="20201115 23:02:21.588"></status>
</kw>
<msg timestamp="20201115 23:02:21.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046991458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.240" endtime="20201115 23:02:21.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046936653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046991458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.592" endtime="20201115 23:02:21.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.601" endtime="20201115 23:02:21.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.233" endtime="20201115 23:02:21.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.228" endtime="20201115 23:02:21.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.610" level="INFO">${RESULT} = [{'time': 0.046991458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.480499999999805e-05, 'source_diff': 5.480499999999805e-05}, {'time': 0.047061458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:21.606" endtime="20201115 23:02:21.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.623" level="INFO">${ACCURACY} = {'time': [0.046991458, 0.047061458, 0.0471245, 0.047192486, 0.047263486, 0.047332486, 0.047402514, 0.047470514, 0.047535542, 0.047605528, 0.047668542, 0.047733528, 0.047808583, 0.047876583, 0.04794355...</msg>
<status status="PASS" starttime="20201115 23:02:21.611" endtime="20201115 23:02:21.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.629" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.628" endtime="20201115 23:02:21.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.632" level="INFO">VALUE: [5.480499999999805e-05, 5.4444000000000714e-05, 5.5194000000001464e-05, 5.4513999999998564e-05, 5.5027999999998634e-05, 5.511099999999658e-05, 5.5041999999998203e-05, 5.4541999999997703e-05, 5.509800000000342e-05, 5.5263999999999314e-05, 5.4735999999999674e-05, 5.4541999999997703e-05, 5.504099999999873e-05, 5.436100000000277e-05, 5.494500000000069e-05, 5.4999999999999494e-05, 5.456900000000431e-05, 5.476400000000575e-05, 5.4999999999999494e-05, 5.4722000000000104e-05, 5.46670000000013e-05, 5.51670000000018e-05, 5.515300000000223e-05, 5.508300000000438e-05, 5.462500000000259e-05, 5.511100000000352e-05, 5.437500000000234e-05, 5.469500000000044e-05, 5.5180000000001894e-05, 5.482000000000403e-05, 5.511100000000352e-05, 5.526299999999984e-05, 5.4444000000000714e-05, 5.436099999999583e-05, 5.508299999999744e-05, 5.50549999999983e-05, 5.470900000000001e-05, 5.458300000000388e-05, 5.512500000000309e-05, 5.456999999999684e-05, 5.4735999999999674e-05, 5.4763999999998814e-05, 5.518100000000137e-05, 5.468100000000087e-05, 5.459699999999651e-05, 5.468100000000087e-05, 5.511099999999658e-05, 5.462500000000259e-05, 5.4416000000001574e-05, 5.4944000000001214e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.630" endtime="20201115 23:02:21.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.624" endtime="20201115 23:02:21.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.636" endtime="20201115 23:02:21.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.640" endtime="20201115 23:02:21.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.638" endtime="20201115 23:02:21.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.634" endtime="20201115 23:02:21.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.169" endtime="20201115 23:02:21.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.165" endtime="20201115 23:02:21.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.163" endtime="20201115 23:02:21.662"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.674" endtime="20201115 23:02:21.692"></status>
</kw>
<msg timestamp="20201115 23:02:21.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.673" endtime="20201115 23:02:21.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.693" endtime="20201115 23:02:21.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.696" endtime="20201115 23:02:21.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.669" endtime="20201115 23:02:21.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.667" endtime="20201115 23:02:21.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.707" endtime="20201115 23:02:22.052"></status>
</kw>
<msg timestamp="20201115 23:02:22.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027020708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.706" endtime="20201115 23:02:22.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027020708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027076583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.062" endtime="20201115 23:02:22.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.081" endtime="20201115 23:02:22.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.702" endtime="20201115 23:02:22.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.700" endtime="20201115 23:02:22.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.098" level="INFO">${RESULT} = [{'time': 0.027076583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.587500000000037e-05, 'source_diff': 5.587500000000037e-05}, {'time': 0.027151583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.089" endtime="20201115 23:02:22.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.129" level="INFO">${ACCURACY} = {'time': [0.027076583, 0.027151583, 0.027221625, 0.027286625, 0.027355611, 0.027424708, 0.027492639, 0.027557667, 0.027630653, 0.027694653, 0.027760694, 0.027835667, 0.027907667, 0.027981681, 0.028051...</msg>
<status status="PASS" starttime="20201115 23:02:22.101" endtime="20201115 23:02:22.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.140" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.138" endtime="20201115 23:02:22.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.146" level="INFO">VALUE: [5.587500000000037e-05, 5.587500000000037e-05, 5.5472000000000854e-05, 5.611099999999758e-05, 5.5707999999998065e-05, 5.6250000000000744e-05, 5.61809999999989e-05, 5.594500000000169e-05, 5.5750000000000244e-05, 5.5499999999999994e-05, 5.611099999999758e-05, 5.547300000000033e-05, 5.6014000000000064e-05, 5.544500000000119e-05, 5.5930000000002644e-05, 5.5943999999998745e-05, 5.6222000000001604e-05, 5.5999999999997024e-05, 5.5971999999997885e-05, 5.5472000000000854e-05, 5.5430000000002144e-05, 5.6264000000000314e-05, 5.5665999999999355e-05, 5.6250000000000744e-05, 5.580499999999905e-05, 5.6250000000000744e-05, 5.5971999999997885e-05, 5.5915999999999605e-05, 5.6055999999998773e-05, 5.586200000000027e-05, 5.604099999999973e-05, 5.5943999999998745e-05, 5.609700000000148e-05, 5.5958000000001784e-05, 5.527699999999941e-05, 5.540299999999901e-05, 5.591700000000255e-05, 5.554200000000217e-05, 5.5736000000000674e-05, 5.566699999999883e-05, 5.581999999999809e-05, 5.561100000000055e-05, 5.6264000000000314e-05, 5.5402000000003004e-05, 5.588899999999994e-05, 5.568100000000187e-05, 5.5513999999999564e-05, 5.556900000000184e-05, 5.5972000000001354e-05, 5.555500000000227e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.143" endtime="20201115 23:02:22.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.131" endtime="20201115 23:02:22.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.155" endtime="20201115 23:02:22.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.163" endtime="20201115 23:02:22.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.159" endtime="20201115 23:02:22.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.150" endtime="20201115 23:02:22.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.665" endtime="20201115 23:02:22.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.663" endtime="20201115 23:02:22.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.662" endtime="20201115 23:02:22.190"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.195" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.217" endtime="20201115 23:02:22.238"></status>
</kw>
<msg timestamp="20201115 23:02:22.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.214" endtime="20201115 23:02:22.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.241" endtime="20201115 23:02:22.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.248" endtime="20201115 23:02:22.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.206" endtime="20201115 23:02:22.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.201" endtime="20201115 23:02:22.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.271" endtime="20201115 23:02:22.632"></status>
</kw>
<msg timestamp="20201115 23:02:22.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047351819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.268" endtime="20201115 23:02:22.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047294806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047351819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.642" endtime="20201115 23:02:22.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.661" endtime="20201115 23:02:22.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.261" endtime="20201115 23:02:22.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.256" endtime="20201115 23:02:22.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.680" level="INFO">${RESULT} = [{'time': 0.047351819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.701300000000159e-05, 'source_diff': 5.701300000000159e-05}, {'time': 0.047427819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.671" endtime="20201115 23:02:22.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.710" level="INFO">${ACCURACY} = {'time': [0.047351819, 0.047427819, 0.047499833, 0.047571833, 0.047646847, 0.047715861, 0.047791861, 0.047859903, 0.047934875, 0.048005889, 0.048076931, 0.048142917, 0.048211903, 0.048277944, 0.048354...</msg>
<status status="PASS" starttime="20201115 23:02:22.682" endtime="20201115 23:02:22.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.721" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.719" endtime="20201115 23:02:22.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.727" level="INFO">VALUE: [5.701300000000159e-05, 5.6472000000001854e-05, 5.7014000000001064e-05, 5.6444000000002714e-05, 5.654100000000023e-05, 5.7207999999996095e-05, 5.6693999999996025e-05, 5.6805999999999524e-05, 5.712500000000509e-05, 5.66670000000033e-05, 5.672300000000158e-05, 5.713899999999772e-05, 5.694500000000269e-05, 5.6930000000003644e-05, 5.7249999999994805e-05, 5.7000000000001494e-05, 5.7207999999996095e-05, 5.709699999999901e-05, 5.7250000000001744e-05, 5.6693999999996025e-05, 5.6750000000001244e-05, 5.7235999999995235e-05, 5.6791999999999954e-05, 5.640299999999654e-05, 5.7194999999996e-05, 5.668100000000287e-05, 5.658299999999894e-05, 5.6791999999999954e-05, 5.634699999999826e-05, 5.6305999999999023e-05, 5.683299999999919e-05, 5.7166000000004324e-05, 5.629099999999998e-05, 5.6708000000002534e-05, 5.663899999999722e-05, 5.712500000000509e-05, 5.686100000000527e-05, 5.687500000000484e-05, 5.640299999999654e-05, 5.7027999999993695e-05, 5.63749999999974e-05, 5.680600000000646e-05, 5.686099999999833e-05, 5.711099999999858e-05, 5.7042000000000204e-05, 5.7055999999999774e-05, 5.6305999999999023e-05, 5.712500000000509e-05, 5.69870000000014e-05, 5.6736000000001674e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.723" endtime="20201115 23:02:22.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.712" endtime="20201115 23:02:22.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.735" endtime="20201115 23:02:22.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.744" endtime="20201115 23:02:22.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.739" endtime="20201115 23:02:22.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.731" endtime="20201115 23:02:22.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.197" endtime="20201115 23:02:22.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.193" endtime="20201115 23:02:22.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.191" endtime="20201115 23:02:22.771"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.776" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.798" endtime="20201115 23:02:22.819"></status>
</kw>
<msg timestamp="20201115 23:02:22.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.794" endtime="20201115 23:02:22.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.822" endtime="20201115 23:02:22.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.828" endtime="20201115 23:02:22.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.787" endtime="20201115 23:02:22.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.781" endtime="20201115 23:02:22.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.852" endtime="20201115 23:02:23.203"></status>
</kw>
<msg timestamp="20201115 23:02:23.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047308069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047366292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.848" endtime="20201115 23:02:23.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047308069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047366292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.213" endtime="20201115 23:02:23.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.232" endtime="20201115 23:02:23.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.841" endtime="20201115 23:02:23.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.836" endtime="20201115 23:02:23.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.249" level="INFO">${RESULT} = [{'time': 0.047366292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.822299999999614e-05, 'source_diff': 5.822299999999614e-05}, {'time': 0.047444319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.240" endtime="20201115 23:02:23.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.282" level="INFO">${ACCURACY} = {'time': [0.047366292, 0.047444319, 0.047515306, 0.047592333, 0.047658333, 0.047732361, 0.047803333, 0.047872333, 0.047948389, 0.048026375, 0.048098375, 0.048172375, 0.048240375, 0.048318389, 0.048387...</msg>
<status status="PASS" starttime="20201115 23:02:23.251" endtime="20201115 23:02:23.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.293" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.291" endtime="20201115 23:02:23.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.299" level="INFO">VALUE: [5.822299999999614e-05, 5.809700000000001e-05, 5.772300000000258e-05, 5.7929999999997706e-05, 5.7499999999995055e-05, 5.7430000000004144e-05, 5.812500000000609e-05, 5.8000000000002494e-05, 5.734699999999926e-05, 5.765300000000473e-05, 5.809700000000001e-05, 5.7972000000003354e-05, 5.783300000000019e-05, 5.762500000000559e-05, 5.737500000000534e-05, 5.7583999999999413e-05, 5.741699999999711e-05, 5.809700000000001e-05, 5.7306000000000024e-05, 5.7486000000002424e-05, 5.779100000000148e-05, 5.7915999999998136e-05, 5.7486000000002424e-05, 5.738900000000491e-05, 5.729099999999404e-05, 5.766699999999736e-05, 5.7556000000000274e-05, 5.740300000000448e-05, 5.759699999999951e-05, 5.813899999999872e-05, 5.8070000000000344e-05, 5.762499999999865e-05, 5.7333999999999163e-05, 5.7486000000002424e-05, 5.8000000000002494e-05, 5.730499999999361e-05, 5.791699999999761e-05, 5.779100000000148e-05, 5.804100000000173e-05, 5.759699999999951e-05, 5.730500000000055e-05, 5.7486000000002424e-05, 5.811099999999958e-05, 5.7528000000001134e-05, 5.761099999999908e-05, 5.784699999999976e-05, 5.7306000000000024e-05, 5.78749999999989e-05, 5.763899999999822e-05, 5.811099999999958e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.296" endtime="20201115 23:02:23.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.284" endtime="20201115 23:02:23.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.308" endtime="20201115 23:02:23.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.316" endtime="20201115 23:02:23.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.312" endtime="20201115 23:02:23.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.303" endtime="20201115 23:02:23.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.777" endtime="20201115 23:02:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.773" endtime="20201115 23:02:23.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.772" endtime="20201115 23:02:23.343"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.348" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.370" endtime="20201115 23:02:23.390"></status>
</kw>
<msg timestamp="20201115 23:02:23.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.366" endtime="20201115 23:02:23.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.394" endtime="20201115 23:02:23.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.401" endtime="20201115 23:02:23.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.359" endtime="20201115 23:02:23.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.353" endtime="20201115 23:02:23.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.424" endtime="20201115 23:02:23.772"></status>
</kw>
<msg timestamp="20201115 23:02:23.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047011333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047070556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.421" endtime="20201115 23:02:23.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047011333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047070556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.782" endtime="20201115 23:02:23.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.800" endtime="20201115 23:02:23.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.414" endtime="20201115 23:02:23.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.409" endtime="20201115 23:02:23.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.820" level="INFO">${RESULT} = [{'time': 0.047070556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.922299999999714e-05, 'source_diff': 5.922299999999714e-05}, {'time': 0.047138556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.811" endtime="20201115 23:02:23.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.850" level="INFO">${ACCURACY} = {'time': [0.047070556, 0.047138556, 0.047213569, 0.047287569, 0.047364625, 0.047439597, 0.047509597, 0.047584667, 0.047650611, 0.047720639, 0.047794639, 0.047863639, 0.047937639, 0.048014639, 0.048082...</msg>
<status status="PASS" starttime="20201115 23:02:23.822" endtime="20201115 23:02:23.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.861" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.859" endtime="20201115 23:02:23.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.867" level="INFO">VALUE: [5.922299999999714e-05, 5.912500000000015e-05, 5.880499999999511e-05, 5.8458000000004284e-05, 5.8778000000002384e-05, 5.833300000000069e-05, 5.85550000000018e-05, 5.9305999999995085e-05, 5.8722000000004104e-05, 5.883300000000119e-05, 5.865299999999879e-05, 5.841699999999811e-05, 5.8457999999997345e-05, 5.8513999999995625e-05, 5.9042000000002204e-05, 5.8749999999996305e-05, 5.8542000000001704e-05, 5.8500000000002994e-05, 5.8750000000003244e-05, 5.888899999999947e-05, 5.904100000000273e-05, 5.9263999999996375e-05, 5.8485999999996485e-05, 5.8457999999997345e-05, 5.834700000000026e-05, 5.9221999999997665e-05, 5.8597999999999983e-05, 5.868099999999793e-05, 5.891699999999861e-05, 5.8347999999999733e-05, 5.8943999999998276e-05, 5.9249999999996805e-05, 5.872300000000358e-05, 5.8528000000002134e-05, 5.9112000000000053e-05, 5.9138000000000246e-05, 5.8943999999998276e-05, 5.836099999999983e-05, 5.884700000000076e-05, 5.8707999999997595e-05, 5.911100000000058e-05, 5.863899999999922e-05, 5.915299999999929e-05, 5.834700000000026e-05, 5.9014000000003064e-05, 5.845900000000376e-05, 5.865299999999879e-05, 5.8972000000004354e-05, 5.8556000000001274e-05, 5.861100000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.863" endtime="20201115 23:02:23.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.852" endtime="20201115 23:02:23.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.875" endtime="20201115 23:02:23.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.884" endtime="20201115 23:02:23.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.879" endtime="20201115 23:02:23.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.871" endtime="20201115 23:02:23.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.349" endtime="20201115 23:02:23.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.345" endtime="20201115 23:02:23.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.343" endtime="20201115 23:02:23.910"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.916" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.938" endtime="20201115 23:02:23.960"></status>
</kw>
<msg timestamp="20201115 23:02:23.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.935" endtime="20201115 23:02:23.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.963" endtime="20201115 23:02:23.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.970" endtime="20201115 23:02:23.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.928" endtime="20201115 23:02:23.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.921" endtime="20201115 23:02:23.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.993" endtime="20201115 23:02:24.341"></status>
</kw>
<msg timestamp="20201115 23:02:24.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047830486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.990" endtime="20201115 23:02:24.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047830486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.351" endtime="20201115 23:02:24.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.371" endtime="20201115 23:02:24.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.982" endtime="20201115 23:02:24.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.978" endtime="20201115 23:02:24.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.388" level="INFO">${RESULT} = [{'time': 0.047890181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.96949999999985e-05, 'source_diff': 5.96949999999985e-05}, {'time': 0.047965181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:24.379" endtime="20201115 23:02:24.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.418" level="INFO">${ACCURACY} = {'time': [0.047890181, 0.047965181, 0.048045194, 0.048124194, 0.048192194, 0.048266208, 0.04834525, 0.048417222, 0.048486236, 0.048562236, 0.04864025, 0.04871825, 0.048787264, 0.048861264, 0.048930306...</msg>
<status status="PASS" starttime="20201115 23:02:24.390" endtime="20201115 23:02:24.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.429" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.427" endtime="20201115 23:02:24.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.435" level="INFO">VALUE: [5.96949999999985e-05, 5.945900000000476e-05, 5.98750000000009e-05, 5.9888000000000996e-05, 6.012500000000115e-05, 5.988900000000047e-05, 5.9499999999997055e-05, 5.93750000000004e-05, 5.966699999999936e-05, 6.015300000000029e-05, 5.9472000000004854e-05, 5.9527999999996195e-05, 5.9707999999998596e-05, 5.96949999999985e-05, 5.994499999999875e-05, 5.9986000000004924e-05, 6.0028000000003634e-05, 5.9943999999999276e-05, 5.959700000000151e-05, 5.9721999999998165e-05, 5.9735999999997735e-05, 6.0221999999998665e-05, 5.936099999999389e-05, 5.931900000000212e-05, 6.008300000000244e-05, 5.954100000000323e-05, 5.9957999999998846e-05, 6.0193999999999526e-05, 5.9291999999995515e-05, 6.0055999999995835e-05, 5.9708000000005534e-05, 5.9693999999999026e-05, 6.0194999999999e-05, 6.0249999999997805e-05, 6.0070000000002344e-05, 5.981900000000262e-05, 5.984700000000176e-05, 5.952699999999672e-05, 5.9485999999997485e-05, 5.979099999999654e-05, 6.012500000000115e-05, 5.986100000000133e-05, 5.9542000000002704e-05, 6.0028000000003634e-05, 5.965299999999979e-05, 6.0041999999996265e-05, 6.0098000000001484e-05, 5.9528000000003134e-05, 5.9848000000001234e-05, 5.9971999999998415e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.432" endtime="20201115 23:02:24.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.420" endtime="20201115 23:02:24.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.443" endtime="20201115 23:02:24.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.452" endtime="20201115 23:02:24.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.447" endtime="20201115 23:02:24.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.439" endtime="20201115 23:02:24.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.917" endtime="20201115 23:02:24.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.913" endtime="20201115 23:02:24.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.911" endtime="20201115 23:02:24.479"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.485" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.508" endtime="20201115 23:02:24.529"></status>
</kw>
<msg timestamp="20201115 23:02:24.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.504" endtime="20201115 23:02:24.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.533" endtime="20201115 23:02:24.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.539" endtime="20201115 23:02:24.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.497" endtime="20201115 23:02:24.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.491" endtime="20201115 23:02:24.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.563" endtime="20201115 23:02:24.910"></status>
</kw>
<msg timestamp="20201115 23:02:24.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048896958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048957528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.559" endtime="20201115 23:02:24.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048896958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048957528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.920" endtime="20201115 23:02:24.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.939" endtime="20201115 23:02:24.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.552" endtime="20201115 23:02:24.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.547" endtime="20201115 23:02:24.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.958" level="INFO">${RESULT} = [{'time': 0.048957528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0570000000002844e-05, 'source_diff': 6.0570000000002844e-05}, {'time': 0.049034542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:24.949" endtime="20201115 23:02:24.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.988" level="INFO">${ACCURACY} = {'time': [0.048957528, 0.049034542, 0.049107542, 0.049178583, 0.049248556, 0.049329583, 0.049402583, 0.049477583, 0.049556611, 0.049631597, 0.049709611, 0.049779625, 0.049853625, 0.049921639, 0.049991...</msg>
<status status="PASS" starttime="20201115 23:02:24.960" endtime="20201115 23:02:24.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.999" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.997" endtime="20201115 23:02:24.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.004" level="INFO">VALUE: [6.0570000000002844e-05, 6.0348000000001734e-05, 6.070899999999907e-05, 6.0694000000000026e-05, 6.0862000000001804e-05, 6.126400000000531e-05, 6.0985999999998985e-05, 6.062500000000165e-05, 6.115300000000129e-05, 6.105499999999736e-05, 6.090300000000104e-05, 6.112500000000215e-05, 6.090300000000104e-05, 6.0791999999997015e-05, 6.093099999999324e-05, 6.045899999999882e-05, 6.06949999999995e-05, 6.05550000000038e-05, 6.063900000000122e-05, 6.0971999999999416e-05, 6.029099999999704e-05, 6.036100000000183e-05, 6.0430000000000206e-05, 6.102699999999822e-05, 6.109699999999607e-05, 6.0707999999999596e-05, 6.111099999999564e-05, 6.0806000000003524e-05, 6.0707999999999596e-05, 6.088900000000147e-05, 6.0999999999998555e-05, 6.045899999999882e-05, 6.068099999999993e-05, 6.061100000000208e-05, 6.068099999999993e-05, 6.048699999999796e-05, 6.106900000000387e-05, 6.088900000000147e-05, 6.033299999999575e-05, 6.0278000000003884e-05, 6.111099999999564e-05, 6.090300000000104e-05, 6.1195e-05, 6.111100000000258e-05, 6.0569999999995905e-05, 6.044499999999925e-05, 6.0362000000001304e-05, 6.0486000000005424e-05, 6.058300000000294e-05, 6.0902000000001566e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.001" endtime="20201115 23:02:25.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.990" endtime="20201115 23:02:25.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.010" endtime="20201115 23:02:25.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.014" endtime="20201115 23:02:25.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.012" endtime="20201115 23:02:25.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.008" endtime="20201115 23:02:25.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.487" endtime="20201115 23:02:25.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.482" endtime="20201115 23:02:25.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.481" endtime="20201115 23:02:25.036"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.039" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.049" endtime="20201115 23:02:25.066"></status>
</kw>
<msg timestamp="20201115 23:02:25.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.047" endtime="20201115 23:02:25.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.067" endtime="20201115 23:02:25.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.070" endtime="20201115 23:02:25.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.044" endtime="20201115 23:02:25.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.041" endtime="20201115 23:02:25.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.082" endtime="20201115 23:02:25.404"></status>
</kw>
<msg timestamp="20201115 23:02:25.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026863042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026924958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.080" endtime="20201115 23:02:25.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026863042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026924958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.413" endtime="20201115 23:02:25.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.432" endtime="20201115 23:02:25.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.077" endtime="20201115 23:02:25.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.074" endtime="20201115 23:02:25.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.450" level="INFO">${RESULT} = [{'time': 0.026924958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.191599999999867e-05, 'source_diff': 6.191599999999867e-05}, {'time': 0.027000958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.441" endtime="20201115 23:02:25.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.483" level="INFO">${ACCURACY} = {'time': [0.026924958, 0.027000958, 0.027079, 0.027157986, 0.027228, 0.027301986, 0.027378042, 0.027450056, 0.027526028, 0.027602056, 0.027682028, 0.027754069, 0.027833056, 0.027914056, 0.027983097, 0...</msg>
<status status="PASS" starttime="20201115 23:02:25.452" endtime="20201115 23:02:25.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.494" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.492" endtime="20201115 23:02:25.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.500" level="INFO">VALUE: [6.191599999999867e-05, 6.123599999999924e-05, 6.159700000000004e-05, 6.212499999999968e-05, 6.197200000000042e-05, 6.177800000000191e-05, 6.190299999999857e-05, 6.187499999999943e-05, 6.20560000000013e-05, 6.193100000000118e-05, 6.129200000000098e-05, 6.209700000000054e-05, 6.13339999999997e-05, 6.223699999999971e-05, 6.161099999999961e-05, 6.19439999999978e-05, 6.209700000000054e-05, 6.14300000000012e-05, 6.143100000000068e-05, 6.159700000000004e-05, 6.166699999999789e-05, 6.144500000000025e-05, 6.20560000000013e-05, 6.193100000000118e-05, 6.168100000000093e-05, 6.184799999999976e-05, 6.204199999999827e-05, 6.204200000000173e-05, 6.158300000000047e-05, 6.181900000000115e-05, 6.130500000000108e-05, 6.201399999999913e-05, 6.198599999999999e-05, 6.130500000000108e-05, 6.223699999999971e-05, 6.213899999999925e-05, 6.186099999999986e-05, 6.141700000000111e-05, 6.211199999999958e-05, 6.134799999999926e-05, 6.211100000000011e-05, 6.193099999999771e-05, 6.172299999999964e-05, 6.219399999999806e-05, 6.220799999999763e-05, 6.217999999999849e-05, 6.155499999999786e-05, 6.17499999999993e-05, 6.1888999999999e-05, 6.219400000000153e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.496" endtime="20201115 23:02:25.501"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.485" endtime="20201115 23:02:25.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.509" endtime="20201115 23:02:25.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.518" endtime="20201115 23:02:25.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.513" endtime="20201115 23:02:25.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.504" endtime="20201115 23:02:25.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.039" endtime="20201115 23:02:25.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.037" endtime="20201115 23:02:25.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.037" endtime="20201115 23:02:25.545"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.550" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.572" endtime="20201115 23:02:25.594"></status>
</kw>
<msg timestamp="20201115 23:02:25.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.569" endtime="20201115 23:02:25.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.597" endtime="20201115 23:02:25.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.604" endtime="20201115 23:02:25.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.561" endtime="20201115 23:02:25.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.556" endtime="20201115 23:02:25.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.627" endtime="20201115 23:02:25.976"></status>
</kw>
<msg timestamp="20201115 23:02:25.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047730111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047793, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:25.624" endtime="20201115 23:02:25.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047730111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047793, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:25.985" endtime="20201115 23:02:26.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.004" endtime="20201115 23:02:26.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.617" endtime="20201115 23:02:26.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.612" endtime="20201115 23:02:26.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.024" level="INFO">${RESULT} = [{'time': 0.047793, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.288900000000347e-05, 'source_diff': 6.288900000000347e-05}, {'time': 0.047876014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:26.014" endtime="20201115 23:02:26.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.054" level="INFO">${ACCURACY} = {'time': [0.047793, 0.047876014, 0.047950042, 0.048023069, 0.048103028, 0.048182056, 0.048255056, 0.048338125, 0.048421083, 0.048492083, 0.048565097, 0.048647097, 0.048723111, 0.048797111, 0.048875125...</msg>
<status status="PASS" starttime="20201115 23:02:26.026" endtime="20201115 23:02:26.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.065" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.063" endtime="20201115 23:02:26.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.071" level="INFO">VALUE: [6.288900000000347e-05, 6.284700000000476e-05, 6.298600000000099e-05, 6.27080000000016e-05, 6.233399999999722e-05, 6.23620000000033e-05, 6.280599999999859e-05, 6.268100000000193e-05, 6.284699999999782e-05, 6.267999999999552e-05, 6.283299999999825e-05, 6.288900000000347e-05, 6.27080000000016e-05, 6.324999999999387e-05, 6.301400000000013e-05, 6.236099999999689e-05, 6.304199999999927e-05, 6.268100000000193e-05, 6.255600000000527e-05, 6.273600000000074e-05, 6.279199999999902e-05, 6.272200000000117e-05, 6.311200000000405e-05, 6.238900000000297e-05, 6.243100000000168e-05, 6.2582999999998e-05, 6.316600000000339e-05, 6.284699999999782e-05, 6.323600000000124e-05, 6.259699999999757e-05, 6.281899999999868e-05, 6.247200000000092e-05, 6.294500000000175e-05, 6.27500000000003e-05, 6.279199999999902e-05, 6.236099999999689e-05, 6.27500000000003e-05, 6.279099999999954e-05, 6.261099999999714e-05, 6.32080000000021e-05, 6.248600000000049e-05, 6.247199999999398e-05, 6.245800000000135e-05, 6.279199999999902e-05, 6.236099999999689e-05, 6.258399999999747e-05, 6.318100000000243e-05, 6.279199999999902e-05, 6.227800000000588e-05, 6.26950000000015e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.067" endtime="20201115 23:02:26.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.056" endtime="20201115 23:02:26.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.080" endtime="20201115 23:02:26.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.088" endtime="20201115 23:02:26.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.084" endtime="20201115 23:02:26.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.075" endtime="20201115 23:02:26.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.552" endtime="20201115 23:02:26.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.548" endtime="20201115 23:02:26.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.546" endtime="20201115 23:02:26.114"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.120" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.141" endtime="20201115 23:02:26.163"></status>
</kw>
<msg timestamp="20201115 23:02:26.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.138" endtime="20201115 23:02:26.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.166" endtime="20201115 23:02:26.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.173" endtime="20201115 23:02:26.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.131" endtime="20201115 23:02:26.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.125" endtime="20201115 23:02:26.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.196" endtime="20201115 23:02:26.542"></status>
</kw>
<msg timestamp="20201115 23:02:26.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047223167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.192" endtime="20201115 23:02:26.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047223167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.552" endtime="20201115 23:02:26.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.572" endtime="20201115 23:02:26.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.185" endtime="20201115 23:02:26.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.181" endtime="20201115 23:02:26.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.590" level="INFO">${RESULT} = [{'time': 0.047223167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.329200000000645e-05, 'source_diff': 6.329200000000645e-05}, {'time': 0.047304181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:26.581" endtime="20201115 23:02:26.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.620" level="INFO">${ACCURACY} = {'time': [0.047223167, 0.047304181, 0.047376181, 0.047455194, 0.047532208, 0.047611222, 0.04769125, 0.047762236, 0.047834236, 0.047917264, 0.047993264, 0.048066278, 0.048147264, 0.048231306, 0.0483092...</msg>
<status status="PASS" starttime="20201115 23:02:26.592" endtime="20201115 23:02:26.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.631" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.629" endtime="20201115 23:02:26.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.637" level="INFO">VALUE: [6.329200000000645e-05, 6.377800000000045e-05, 6.372300000000164e-05, 6.422199999999573e-05, 6.373600000000174e-05, 6.380500000000011e-05, 6.384699999999882e-05, 6.355499999999986e-05, 6.354199999999977e-05, 6.393100000000318e-05, 6.37500000000013e-05, 6.372199999999523e-05, 6.377800000000045e-05, 6.36950000000025e-05, 6.387499999999796e-05, 6.344400000000278e-05, 6.361099999999814e-05, 6.377800000000045e-05, 6.345800000000235e-05, 6.361100000000508e-05, 6.361099999999814e-05, 6.409699999999907e-05, 6.405500000000036e-05, 6.336099999999789e-05, 6.394499999999581e-05, 6.377800000000045e-05, 6.345800000000235e-05, 6.329199999999952e-05, 6.326400000000038e-05, 6.409800000000548e-05, 6.372300000000164e-05, 6.355599999999934e-05, 6.333299999999875e-05, 6.386099999999839e-05, 6.40829999999995e-05, 6.334699999999832e-05, 6.381899999999968e-05, 6.416699999999692e-05, 6.350000000000106e-05, 6.384699999999882e-05, 6.415299999999735e-05, 6.337499999999746e-05, 6.345800000000235e-05, 6.388899999999753e-05, 6.409799999999855e-05, 6.405500000000036e-05, 6.409800000000548e-05, 6.351400000000063e-05, 6.387499999999796e-05, 6.387499999999796e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.634" endtime="20201115 23:02:26.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.622" endtime="20201115 23:02:26.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.646" endtime="20201115 23:02:26.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.654" endtime="20201115 23:02:26.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.649" endtime="20201115 23:02:26.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.641" endtime="20201115 23:02:26.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.121" endtime="20201115 23:02:26.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.117" endtime="20201115 23:02:26.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.115" endtime="20201115 23:02:26.681"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.686" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.707" endtime="20201115 23:02:26.728"></status>
</kw>
<msg timestamp="20201115 23:02:26.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.704" endtime="20201115 23:02:26.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.732" endtime="20201115 23:02:26.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.738" endtime="20201115 23:02:26.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.697" endtime="20201115 23:02:26.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.691" endtime="20201115 23:02:26.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.762" endtime="20201115 23:02:27.111"></status>
</kw>
<msg timestamp="20201115 23:02:27.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046849264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.758" endtime="20201115 23:02:27.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046849264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.120" endtime="20201115 23:02:27.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.139" endtime="20201115 23:02:27.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.751" endtime="20201115 23:02:27.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.746" endtime="20201115 23:02:27.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.158" level="INFO">${RESULT} = [{'time': 0.046913778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.451400000000163e-05, 'source_diff': 6.451400000000163e-05}, {'time': 0.046989806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.149" endtime="20201115 23:02:27.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.188" level="INFO">${ACCURACY} = {'time': [0.046913778, 0.046989806, 0.047072806, 0.047152806, 0.047235875, 0.047314889, 0.047386847, 0.047459847, 0.047538847, 0.047611847, 0.047695903, 0.047767875, 0.047845875, 0.047930903, 0.048008...</msg>
<status status="PASS" starttime="20201115 23:02:27.160" endtime="20201115 23:02:27.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.199" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.197" endtime="20201115 23:02:27.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.205" level="INFO">VALUE: [6.451400000000163e-05, 6.462499999999871e-05, 6.513899999999878e-05, 6.44029999999976e-05, 6.459699999999957e-05, 6.497199999999648e-05, 6.477800000000145e-05, 6.495799999999691e-05, 6.512499999999921e-05, 6.448599999999555e-05, 6.494499999999681e-05, 6.434699999999932e-05, 6.50830000000005e-05, 6.479199999999408e-05, 6.455600000000034e-05, 6.433399999999923e-05, 6.487499999999896e-05, 6.491699999999767e-05, 6.462499999999871e-05, 6.434699999999932e-05, 6.450000000000206e-05, 6.479100000000154e-05, 6.512499999999921e-05, 6.469400000000403e-05, 6.512499999999921e-05, 6.523600000000324e-05, 6.447200000000292e-05, 6.520899999999663e-05, 6.497200000000342e-05, 6.437499999999846e-05, 6.512499999999921e-05, 6.500000000000256e-05, 6.486099999999939e-05, 6.492999999999777e-05, 6.436099999999889e-05, 6.436099999999889e-05, 6.520799999999716e-05, 6.442999999999727e-05, 6.443100000000368e-05, 6.512499999999921e-05, 6.466700000000436e-05, 6.518100000000443e-05, 6.476400000000188e-05, 6.48479999999993e-05, 6.511099999999964e-05, 6.465299999999785e-05, 6.47359999999958e-05, 6.470899999999613e-05, 6.444499999999631e-05, 6.494400000000428e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.202" endtime="20201115 23:02:27.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.190" endtime="20201115 23:02:27.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.213" endtime="20201115 23:02:27.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.222" endtime="20201115 23:02:27.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.217" endtime="20201115 23:02:27.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.209" endtime="20201115 23:02:27.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.687" endtime="20201115 23:02:27.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.683" endtime="20201115 23:02:27.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.681" endtime="20201115 23:02:27.248"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.254" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.275" endtime="20201115 23:02:27.297"></status>
</kw>
<msg timestamp="20201115 23:02:27.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.272" endtime="20201115 23:02:27.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.300" endtime="20201115 23:02:27.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.307" endtime="20201115 23:02:27.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.265" endtime="20201115 23:02:27.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.259" endtime="20201115 23:02:27.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.331" endtime="20201115 23:02:27.681"></status>
</kw>
<msg timestamp="20201115 23:02:27.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046704069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046769431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.327" endtime="20201115 23:02:27.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046704069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046769431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.691" endtime="20201115 23:02:27.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.709" endtime="20201115 23:02:27.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.320" endtime="20201115 23:02:27.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.315" endtime="20201115 23:02:27.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.727" level="INFO">${RESULT} = [{'time': 0.046769431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.536199999999937e-05, 'source_diff': 6.536199999999937e-05}, {'time': 0.046845375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.718" endtime="20201115 23:02:27.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.760" level="INFO">${ACCURACY} = {'time': [0.046769431, 0.046845375, 0.046930389, 0.047006417, 0.047090403, 0.047165417, 0.047250458, 0.047333431, 0.047406444, 0.047480486, 0.047563458, 0.047636472, 0.047712556, 0.047790486, 0.047870...</msg>
<status status="PASS" starttime="20201115 23:02:27.729" endtime="20201115 23:02:27.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.771" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.768" endtime="20201115 23:02:27.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.776" level="INFO">VALUE: [6.536199999999937e-05, 6.600000000000356e-05, 6.547200000000392e-05, 6.561100000000014e-05, 6.566700000000536e-05, 6.548600000000349e-05, 6.629100000000304e-05, 6.536199999999937e-05, 6.576299999999646e-05, 6.536099999999989e-05, 6.554100000000229e-05, 6.572199999999723e-05, 6.612500000000021e-05, 6.555500000000186e-05, 6.548599999999655e-05, 6.580600000000159e-05, 6.536099999999989e-05, 6.53750000000064e-05, 6.538899999999903e-05, 6.545899999999688e-05, 6.533299999999381e-05, 6.600000000000356e-05, 6.598699999999652e-05, 6.570799999999766e-05, 6.531900000000118e-05, 6.570799999999766e-05, 6.562499999999971e-05, 6.618000000000596e-05, 6.536099999999989e-05, 6.554200000000177e-05, 6.561100000000014e-05, 6.538899999999903e-05, 6.619499999999806e-05, 6.543099999999774e-05, 6.555600000000134e-05, 6.611100000000064e-05, 6.572300000000364e-05, 6.592999999999877e-05, 6.616599999999945e-05, 6.593100000000518e-05, 6.551399999999569e-05, 6.555500000000186e-05, 6.529200000000152e-05, 6.611100000000064e-05, 6.568100000000493e-05, 6.591699999999867e-05, 6.587499999999996e-05, 6.547200000000392e-05, 6.569399999999809e-05, 6.548599999999655e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.773" endtime="20201115 23:02:27.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.762" endtime="20201115 23:02:27.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.785" endtime="20201115 23:02:27.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.793" endtime="20201115 23:02:27.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.789" endtime="20201115 23:02:27.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.781" endtime="20201115 23:02:27.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.255" endtime="20201115 23:02:27.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.251" endtime="20201115 23:02:27.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.249" endtime="20201115 23:02:27.820"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.825" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.847" endtime="20201115 23:02:27.869"></status>
</kw>
<msg timestamp="20201115 23:02:27.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.844" endtime="20201115 23:02:27.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.872" endtime="20201115 23:02:27.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.879" endtime="20201115 23:02:27.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.836" endtime="20201115 23:02:27.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.831" endtime="20201115 23:02:27.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.902" endtime="20201115 23:02:28.249"></status>
</kw>
<msg timestamp="20201115 23:02:28.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047611792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047678736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.899" endtime="20201115 23:02:28.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047611792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047678736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.259" endtime="20201115 23:02:28.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.277" endtime="20201115 23:02:28.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.892" endtime="20201115 23:02:28.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.887" endtime="20201115 23:02:28.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.296" level="INFO">${RESULT} = [{'time': 0.047678736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694399999999934e-05, 'source_diff': 6.694399999999934e-05}, {'time': 0.047753778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.287" endtime="20201115 23:02:28.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.327" level="INFO">${ACCURACY} = {'time': [0.047678736, 0.047753778, 0.047833736, 0.04791475, 0.048000806, 0.048075778, 0.048155792, 0.048234819, 0.048321819, 0.048398792, 0.048482806, 0.048567819, 0.048647833, 0.048732847, 0.0488198...</msg>
<status status="PASS" starttime="20201115 23:02:28.298" endtime="20201115 23:02:28.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.337" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.335" endtime="20201115 23:02:28.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.343" level="INFO">VALUE: [6.694399999999934e-05, 6.634699999999438e-05, 6.712500000000121e-05, 6.709700000000207e-05, 6.668099999999899e-05, 6.67359999999978e-05, 6.718099999999949e-05, 6.659700000000157e-05, 6.669399999999909e-05, 6.682000000000216e-05, 6.629200000000252e-05, 6.670799999999866e-05, 6.688900000000053e-05, 6.631900000000218e-05, 6.668099999999899e-05, 6.634700000000132e-05, 6.719399999999959e-05, 6.694399999999934e-05, 6.726400000000438e-05, 6.662499999999377e-05, 6.654200000000277e-05, 6.720799999999916e-05, 6.663900000000028e-05, 6.638900000000003e-05, 6.68480000000013e-05, 6.711200000000112e-05, 6.72500000000048e-05, 6.681899999999574e-05, 6.686099999999445e-05, 6.695799999999891e-05, 6.634700000000132e-05, 6.716699999999992e-05, 6.645799999999841e-05, 6.676399999999694e-05, 6.673699999999727e-05, 6.659800000000105e-05, 6.670899999999813e-05, 6.694399999999934e-05, 6.630500000000261e-05, 6.718000000000002e-05, 6.684700000000182e-05, 6.649999999999712e-05, 6.694399999999934e-05, 6.672199999999823e-05, 6.712500000000121e-05, 6.672199999999823e-05, 6.631900000000218e-05, 6.698600000000499e-05, 6.72359999999983e-05, 6.719499999999906e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.340" endtime="20201115 23:02:28.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.328" endtime="20201115 23:02:28.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.352" endtime="20201115 23:02:28.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.360" endtime="20201115 23:02:28.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.356" endtime="20201115 23:02:28.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.347" endtime="20201115 23:02:28.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.827" endtime="20201115 23:02:28.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.823" endtime="20201115 23:02:28.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.821" endtime="20201115 23:02:28.387"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.393" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.414" endtime="20201115 23:02:28.436"></status>
</kw>
<msg timestamp="20201115 23:02:28.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.411" endtime="20201115 23:02:28.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.439" endtime="20201115 23:02:28.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.446" endtime="20201115 23:02:28.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.404" endtime="20201115 23:02:28.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.398" endtime="20201115 23:02:28.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.458" endtime="20201115 23:02:28.766"></status>
</kw>
<msg timestamp="20201115 23:02:28.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047395792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047463542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.457" endtime="20201115 23:02:28.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047395792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047463542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.776" endtime="20201115 23:02:28.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.795" endtime="20201115 23:02:28.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.453" endtime="20201115 23:02:28.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.451" endtime="20201115 23:02:28.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.813" level="INFO">${RESULT} = [{'time': 0.047463542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.774999999999837e-05, 'source_diff': 6.774999999999837e-05}, {'time': 0.047540569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.804" endtime="20201115 23:02:28.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.843" level="INFO">${ACCURACY} = {'time': [0.047463542, 0.047540569, 0.047625556, 0.047711583, 0.047795583, 0.047880639, 0.047967597, 0.048047625, 0.048132611, 0.048210667, 0.048289625, 0.048364653, 0.048450639, 0.048537653, 0.048617...</msg>
<status status="PASS" starttime="20201115 23:02:28.815" endtime="20201115 23:02:28.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.854" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.851" endtime="20201115 23:02:28.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.859" level="INFO">VALUE: [6.774999999999837e-05, 6.79160000000012e-05, 6.816700000000092e-05, 6.77359999999988e-05, 6.797199999999948e-05, 6.82359999999993e-05, 6.729100000000404e-05, 6.759699999999563e-05, 6.818000000000102e-05, 6.81109999999957e-05, 6.779200000000402e-05, 6.780600000000359e-05, 6.77359999999988e-05, 6.782000000000316e-05, 6.793100000000024e-05, 6.738900000000103e-05, 6.733400000000223e-05, 6.786100000000239e-05, 6.797199999999948e-05, 6.819400000000059e-05, 6.751400000000463e-05, 6.795799999999991e-05, 6.738899999999409e-05, 6.793100000000024e-05, 6.766699999999348e-05, 6.826399999999844e-05, 6.798599999999905e-05, 6.766700000000042e-05, 6.761200000000162e-05, 6.811100000000264e-05, 6.749999999999812e-05, 6.777700000000497e-05, 6.79030000000011e-05, 6.748599999999855e-05, 6.762500000000171e-05, 6.795799999999991e-05, 6.793100000000024e-05, 6.794499999999981e-05, 6.762500000000171e-05, 6.751399999999769e-05, 6.780600000000359e-05, 6.761100000000214e-05, 6.819500000000006e-05, 6.80830000000035e-05, 6.816699999999398e-05, 6.77359999999988e-05, 6.783300000000325e-05, 6.786100000000239e-05, 6.72909999999971e-05, 6.743099999999974e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.856" endtime="20201115 23:02:28.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.844" endtime="20201115 23:02:28.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.868" endtime="20201115 23:02:28.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.877" endtime="20201115 23:02:28.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.872" endtime="20201115 23:02:28.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.864" endtime="20201115 23:02:28.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.394" endtime="20201115 23:02:28.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.390" endtime="20201115 23:02:28.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.388" endtime="20201115 23:02:28.903"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.930" endtime="20201115 23:02:28.952"></status>
</kw>
<msg timestamp="20201115 23:02:28.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.927" endtime="20201115 23:02:28.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.955" endtime="20201115 23:02:28.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.961" endtime="20201115 23:02:28.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.920" endtime="20201115 23:02:28.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.914" endtime="20201115 23:02:28.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.985" endtime="20201115 23:02:29.333"></status>
</kw>
<msg timestamp="20201115 23:02:29.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046911931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046980931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.981" endtime="20201115 23:02:29.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046911931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046980931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.343" endtime="20201115 23:02:29.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.361" endtime="20201115 23:02:29.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.974" endtime="20201115 23:02:29.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.969" endtime="20201115 23:02:29.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.380" level="INFO">${RESULT} = [{'time': 0.046980931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.899999999999962e-05, 'source_diff': 6.899999999999962e-05}, {'time': 0.047057958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.371" endtime="20201115 23:02:29.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.410" level="INFO">${ACCURACY} = {'time': [0.046980931, 0.047057958, 0.047136944, 0.047225958, 0.047303, 0.047385014, 0.047469986, 0.047555986, 0.047637, 0.047722042, 0.047807014, 0.047896042, 0.047975069, 0.048052069, 0.048138069, 0...</msg>
<status status="PASS" starttime="20201115 23:02:29.382" endtime="20201115 23:02:29.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.421" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.419" endtime="20201115 23:02:29.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.427" level="INFO">VALUE: [6.899999999999962e-05, 6.897199999999354e-05, 6.886100000000339e-05, 6.884699999999688e-05, 6.870800000000066e-05, 6.834700000000332e-05, 6.920800000000116e-05, 6.898600000000005e-05, 6.891700000000167e-05, 6.843100000000074e-05, 6.8583000000004e-05, 6.898600000000005e-05, 6.869400000000109e-05, 6.906900000000493e-05, 6.854099999999835e-05, 6.874999999999937e-05, 6.87909999999986e-05, 6.838900000000203e-05, 6.870800000000066e-05, 6.897200000000048e-05, 6.906999999999747e-05, 6.920800000000116e-05, 6.865199999999544e-05, 6.888899999999559e-05, 6.91109999999967e-05, 6.85979999999961e-05, 6.905500000000536e-05, 6.873699999999927e-05, 6.874999999999937e-05, 6.877699999999903e-05, 6.869499999999362e-05, 6.926399999999944e-05, 6.82909999999981e-05, 6.855600000000434e-05, 6.899999999999962e-05, 6.843100000000074e-05, 6.844500000000031e-05, 6.837500000000246e-05, 6.926399999999944e-05, 6.894500000000081e-05, 6.849999999999912e-05, 6.894400000000134e-05, 6.843000000000127e-05, 6.91109999999967e-05, 6.922199999999379e-05, 6.863900000000228e-05, 6.872200000000023e-05, 6.858299999999706e-05, 6.869400000000109e-05, 6.868100000000099e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.424" endtime="20201115 23:02:29.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.412" endtime="20201115 23:02:29.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.436" endtime="20201115 23:02:29.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.445" endtime="20201115 23:02:29.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.440" endtime="20201115 23:02:29.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.432" endtime="20201115 23:02:29.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.910" endtime="20201115 23:02:29.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.906" endtime="20201115 23:02:29.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.904" endtime="20201115 23:02:29.471"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.477" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.498" endtime="20201115 23:02:29.519"></status>
</kw>
<msg timestamp="20201115 23:02:29.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.495" endtime="20201115 23:02:29.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.523" endtime="20201115 23:02:29.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.529" endtime="20201115 23:02:29.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.488" endtime="20201115 23:02:29.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.482" endtime="20201115 23:02:29.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.552" endtime="20201115 23:02:29.901"></status>
</kw>
<msg timestamp="20201115 23:02:29.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047001403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04707075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:29.549" endtime="20201115 23:02:29.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047001403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04707075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:29.911" endtime="20201115 23:02:29.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.929" endtime="20201115 23:02:29.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.542" endtime="20201115 23:02:29.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.537" endtime="20201115 23:02:29.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.947" level="INFO">${RESULT} = [{'time': 0.04707075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.934700000000432e-05, 'source_diff': 6.934700000000432e-05}, {'time': 0.047149764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:29.938" endtime="20201115 23:02:29.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.986" level="INFO">${ACCURACY} = {'time': [0.04707075, 0.047149764, 0.047235792, 0.047323778, 0.047406806, 0.047486833, 0.047564819, 0.047644806, 0.047729875, 0.047813847, 0.047893833, 0.047983875, 0.048065875, 0.048153875, 0.0482348...</msg>
<status status="PASS" starttime="20201115 23:02:29.955" endtime="20201115 23:02:29.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.997" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.995" endtime="20201115 23:02:29.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.003" level="INFO">VALUE: [6.934700000000432e-05, 6.941699999999523e-05, 6.983399999999779e-05, 6.970899999999419e-05, 6.997300000000095e-05, 6.990199999999669e-05, 7.011100000000464e-05, 6.983399999999779e-05, 6.941699999999523e-05, 7.009699999999813e-05, 7.019399999999565e-05, 6.987500000000396e-05, 7.018100000000249e-05, 6.975000000000037e-05, 6.933300000000475e-05, 6.952799999999926e-05, 6.983400000000473e-05, 6.96109999999972e-05, 7.002799999999976e-05, 6.968000000000252e-05, 7.011100000000464e-05, 6.937500000000346e-05, 6.954099999999935e-05, 6.980499999999917e-05, 6.96109999999972e-05, 7.025000000000087e-05, 6.929199999999858e-05, 7.01109999999977e-05, 6.991700000000267e-05, 7.020900000000163e-05, 7.020900000000163e-05, 6.96109999999972e-05, 7.013900000000378e-05, 6.951399999999969e-05, 7.018100000000249e-05, 6.962500000000371e-05, 6.92909999999991e-05, 6.927799999999901e-05, 6.98480000000043e-05, 6.962499999999677e-05, 6.930599999999815e-05, 6.944400000000184e-05, 6.969400000000209e-05, 6.975000000000037e-05, 6.988899999999659e-05, 6.933399999999729e-05, 6.966699999999548e-05, 7.026300000000096e-05, 7.026400000000044e-05, 6.993000000000277e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.000" endtime="20201115 23:02:30.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.988" endtime="20201115 23:02:30.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.012" endtime="20201115 23:02:30.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.020" endtime="20201115 23:02:30.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.016" endtime="20201115 23:02:30.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.007" endtime="20201115 23:02:30.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.478" endtime="20201115 23:02:30.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.474" endtime="20201115 23:02:30.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.472" endtime="20201115 23:02:30.047"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.052" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.073" endtime="20201115 23:02:30.094"></status>
</kw>
<msg timestamp="20201115 23:02:30.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.070" endtime="20201115 23:02:30.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.098" endtime="20201115 23:02:30.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.104" endtime="20201115 23:02:30.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.063" endtime="20201115 23:02:30.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.057" endtime="20201115 23:02:30.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.127" endtime="20201115 23:02:30.476"></status>
</kw>
<msg timestamp="20201115 23:02:30.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046632222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046702736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.124" endtime="20201115 23:02:30.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046632222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046702736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.485" endtime="20201115 23:02:30.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.504" endtime="20201115 23:02:30.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.117" endtime="20201115 23:02:30.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.112" endtime="20201115 23:02:30.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.523" level="INFO">${RESULT} = [{'time': 0.046702736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.051400000000069e-05, 'source_diff': 7.051400000000069e-05}, {'time': 0.046787736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.515" endtime="20201115 23:02:30.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.553" level="INFO">${ACCURACY} = {'time': [0.046702736, 0.046787736, 0.046866736, 0.046949778, 0.047037764, 0.047119764, 0.047205833, 0.047295806, 0.047377861, 0.047456806, 0.047537847, 0.047617833, 0.047699833, 0.047782833, 0.047866...</msg>
<status status="PASS" starttime="20201115 23:02:30.525" endtime="20201115 23:02:30.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.564" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.562" endtime="20201115 23:02:30.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.570" level="INFO">VALUE: [7.051400000000069e-05, 7.070800000000266e-05, 7.052800000000026e-05, 7.06109999999982e-05, 7.118100000000349e-05, 7.06109999999982e-05, 7.111100000000564e-05, 7.07230000000017e-05, 7.088899999999759e-05, 7.030599999999915e-05, 7.068000000000352e-05, 7.067999999999658e-05, 7.05689999999995e-05, 7.073599999999486e-05, 7.037500000000446e-05, 7.048600000000155e-05, 7.068099999999605e-05, 7.045800000000241e-05, 7.094500000000281e-05, 7.097300000000195e-05, 7.094499999999587e-05, 7.07230000000017e-05, 7.11109999999987e-05, 7.033399999999829e-05, 7.11109999999987e-05, 7.037499999999752e-05, 7.062500000000471e-05, 7.086099999999845e-05, 7.044400000000284e-05, 7.097200000000248e-05, 7.111100000000564e-05, 7.038899999999709e-05, 7.030599999999915e-05, 7.062499999999777e-05, 7.112499999999827e-05, 7.058400000000548e-05, 7.05979999999981e-05, 7.075000000000137e-05, 7.100000000000162e-05, 7.109699999999913e-05, 7.092999999999683e-05, 7.087499999999802e-05, 7.031899999999924e-05, 7.065300000000385e-05, 7.070799999999572e-05, 7.068099999999605e-05, 7.102800000000076e-05, 7.070900000000213e-05, 7.119500000000306e-05, 7.055499999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.567" endtime="20201115 23:02:30.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.555" endtime="20201115 23:02:30.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.579" endtime="20201115 23:02:30.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.587" endtime="20201115 23:02:30.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.583" endtime="20201115 23:02:30.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.574" endtime="20201115 23:02:30.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.053" endtime="20201115 23:02:30.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.049" endtime="20201115 23:02:30.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.047" endtime="20201115 23:02:30.614"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.640" endtime="20201115 23:02:30.662"></status>
</kw>
<msg timestamp="20201115 23:02:30.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.637" endtime="20201115 23:02:30.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.665" endtime="20201115 23:02:30.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.672" endtime="20201115 23:02:30.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.630" endtime="20201115 23:02:30.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.624" endtime="20201115 23:02:30.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.697" endtime="20201115 23:02:31.047"></status>
</kw>
<msg timestamp="20201115 23:02:31.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046782403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046853861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.693" endtime="20201115 23:02:31.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046782403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046853861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.056" endtime="20201115 23:02:31.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.075" endtime="20201115 23:02:31.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.685" endtime="20201115 23:02:31.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.680" endtime="20201115 23:02:31.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.093" level="INFO">${RESULT} = [{'time': 0.046853861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.145799999999647e-05, 'source_diff': 7.145799999999647e-05}, {'time': 0.046934917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.084" endtime="20201115 23:02:31.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.123" level="INFO">${ACCURACY} = {'time': [0.046853861, 0.046934917, 0.047025889, 0.047109903, 0.047191944, 0.047279972, 0.047371931, 0.047454931, 0.047538944, 0.047622944, 0.047707986, 0.047789986, 0.047877, 0.047963, 0.048047069, 0...</msg>
<status status="PASS" starttime="20201115 23:02:31.095" endtime="20201115 23:02:31.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.134" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.132" endtime="20201115 23:02:31.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.139" level="INFO">VALUE: [7.145799999999647e-05, 7.131999999999972e-05, 7.127800000000101e-05, 7.179200000000108e-05, 7.212499999999927e-05, 7.184700000000682e-05, 7.186199999999893e-05, 7.131999999999972e-05, 7.134699999999938e-05, 7.148600000000255e-05, 7.136099999999895e-05, 7.186099999999945e-05, 7.161100000000614e-05, 7.180600000000065e-05, 7.199999999999568e-05, 7.152800000000126e-05, 7.129200000000058e-05, 7.204200000000133e-05, 7.134699999999938e-05, 7.227800000000201e-05, 7.195799999999697e-05, 7.176299999999552e-05, 7.186099999999945e-05, 7.141599999999776e-05, 7.217999999999808e-05, 7.181900000000074e-05, 7.167999999999758e-05, 7.168100000000399e-05, 7.212499999999927e-05, 7.176400000000194e-05, 7.131999999999972e-05, 7.184799999999936e-05, 7.199999999999568e-05, 7.21109999999997e-05, 7.165199999999844e-05, 7.22910000000021e-05, 7.149999999999518e-05, 7.129099999999416e-05, 7.220900000000363e-05, 7.222200000000373e-05, 7.186099999999945e-05, 7.175000000000237e-05, 7.169399999999715e-05, 7.168099999999705e-05, 7.218099999999755e-05, 7.193100000000424e-05, 7.19309999999973e-05, 7.204200000000133e-05, 7.122199999999579e-05, 7.220800000000416e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.136" endtime="20201115 23:02:31.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.125" endtime="20201115 23:02:31.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.148" endtime="20201115 23:02:31.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.156" endtime="20201115 23:02:31.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.152" endtime="20201115 23:02:31.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.144" endtime="20201115 23:02:31.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.620" endtime="20201115 23:02:31.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.616" endtime="20201115 23:02:31.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.615" endtime="20201115 23:02:31.183"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.188" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.210" endtime="20201115 23:02:31.232"></status>
</kw>
<msg timestamp="20201115 23:02:31.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.207" endtime="20201115 23:02:31.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.235" endtime="20201115 23:02:31.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.242" endtime="20201115 23:02:31.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.199" endtime="20201115 23:02:31.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.194" endtime="20201115 23:02:31.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.265" endtime="20201115 23:02:31.613"></status>
</kw>
<msg timestamp="20201115 23:02:31.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046800597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046873736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.262" endtime="20201115 23:02:31.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046800597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046873736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.623" endtime="20201115 23:02:31.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.642" endtime="20201115 23:02:31.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.255" endtime="20201115 23:02:31.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.250" endtime="20201115 23:02:31.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.661" level="INFO">${RESULT} = [{'time': 0.046873736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.313899999999984e-05, 'source_diff': 7.313899999999984e-05}, {'time': 0.04696575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:31.652" endtime="20201115 23:02:31.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.691" level="INFO">${ACCURACY} = {'time': [0.046873736, 0.04696575, 0.047051764, 0.047139764, 0.047229778, 0.047317778, 0.047407792, 0.047489819, 0.047577847, 0.047667875, 0.047747861, 0.047830847, 0.047914847, 0.048002875, 0.0480938...</msg>
<status status="PASS" starttime="20201115 23:02:31.663" endtime="20201115 23:02:31.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.702" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.699" endtime="20201115 23:02:31.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.708" level="INFO">VALUE: [7.313899999999984e-05, 7.245799999999747e-05, 7.275000000000337e-05, 7.237499999999952e-05, 7.318099999999855e-05, 7.286100000000045e-05, 7.233400000000029e-05, 7.244400000000484e-05, 7.269399999999815e-05, 7.280600000000165e-05, 7.26110000000002e-05, 7.243000000000527e-05, 7.322200000000473e-05, 7.323599999999736e-05, 7.275000000000337e-05, 7.24030000000056e-05, 7.277800000000251e-05, 7.237499999999952e-05, 7.291699999999873e-05, 7.304199999999539e-05, 7.248700000000302e-05, 7.262499999999977e-05, 7.275000000000337e-05, 7.295799999999797e-05, 7.250000000000312e-05, 7.269399999999815e-05, 7.312500000000027e-05, 7.241699999999823e-05, 7.280599999999471e-05, 7.279199999999514e-05, 7.244500000000431e-05, 7.227800000000201e-05, 7.27230000000037e-05, 7.22639999999955e-05, 7.269399999999815e-05, 7.248600000000355e-05, 7.22910000000021e-05, 7.243000000000527e-05, 7.294400000000534e-05, 7.26110000000002e-05, 7.318099999999855e-05, 7.31110000000007e-05, 7.286100000000045e-05, 7.277799999999557e-05, 7.297299999999701e-05, 7.319399999999865e-05, 7.309700000000113e-05, 7.237499999999952e-05, 7.284700000000088e-05, 7.292999999999883e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.704" endtime="20201115 23:02:31.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.692" endtime="20201115 23:02:31.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.717" endtime="20201115 23:02:31.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.726" endtime="20201115 23:02:31.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.721" endtime="20201115 23:02:31.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.712" endtime="20201115 23:02:31.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.190" endtime="20201115 23:02:31.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.186" endtime="20201115 23:02:31.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.184" endtime="20201115 23:02:31.753"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.758" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.781" endtime="20201115 23:02:31.803"></status>
</kw>
<msg timestamp="20201115 23:02:31.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.777" endtime="20201115 23:02:31.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.806" endtime="20201115 23:02:31.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.813" endtime="20201115 23:02:31.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.769" endtime="20201115 23:02:31.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.764" endtime="20201115 23:02:31.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.836" endtime="20201115 23:02:32.161"></status>
</kw>
<msg timestamp="20201115 23:02:32.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048156792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048230389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.833" endtime="20201115 23:02:32.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048156792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048230389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.170" endtime="20201115 23:02:32.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.189" endtime="20201115 23:02:32.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.825" endtime="20201115 23:02:32.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.821" endtime="20201115 23:02:32.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.206" level="INFO">${RESULT} = [{'time': 0.048230389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.359700000000163e-05, 'source_diff': 7.359700000000163e-05}, {'time': 0.048323389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.197" endtime="20201115 23:02:32.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.239" level="INFO">${ACCURACY} = {'time': [0.048230389, 0.048323389, 0.048405389, 0.048489403, 0.048572431, 0.048660444, 0.048747431, 0.048832444, 0.048913472, 0.048999458, 0.049082472, 0.0491655, 0.049251486, 0.049342514, 0.0494345,...</msg>
<status status="PASS" starttime="20201115 23:02:32.208" endtime="20201115 23:02:32.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.250" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.248" endtime="20201115 23:02:32.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.255" level="INFO">VALUE: [7.359700000000163e-05, 7.426400000000444e-05, 7.39309999999993e-05, 7.384700000000188e-05, 7.369499999999862e-05, 7.351299999999727e-05, 7.387500000000102e-05, 7.400000000000462e-05, 7.358300000000206e-05, 7.333300000000181e-05, 7.42360000000053e-05, 7.370799999999872e-05, 7.334699999999444e-05, 7.356999999999503e-05, 7.39439999999994e-05, 7.332000000000172e-05, 7.388900000000059e-05, 7.426400000000444e-05, 7.344499999999837e-05, 7.423599999999836e-05, 7.406899999999605e-05, 7.408300000000256e-05, 7.337500000000052e-05, 7.338900000000009e-05, 7.3763999999997e-05, 7.386100000000145e-05, 7.388900000000059e-05, 7.377800000000351e-05, 7.423700000000477e-05, 7.338900000000009e-05, 7.351400000000369e-05, 7.386100000000145e-05, 7.392999999999983e-05, 7.333299999999487e-05, 7.334700000000138e-05, 7.355500000000292e-05, 7.326400000000344e-05, 7.337500000000052e-05, 7.363900000000034e-05, 7.418099999999955e-05, 7.354199999999589e-05, 7.349999999999718e-05, 7.361199999999374e-05, 7.380599999999571e-05, 7.425000000000487e-05, 7.409800000000161e-05, 7.332000000000172e-05, 7.383299999999537e-05, 7.338900000000009e-05, 7.404100000000385e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.252" endtime="20201115 23:02:32.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.241" endtime="20201115 23:02:32.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.264" endtime="20201115 23:02:32.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.272" endtime="20201115 23:02:32.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.268" endtime="20201115 23:02:32.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.259" endtime="20201115 23:02:32.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.759" endtime="20201115 23:02:32.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.755" endtime="20201115 23:02:32.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.754" endtime="20201115 23:02:32.300"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.326" endtime="20201115 23:02:32.347"></status>
</kw>
<msg timestamp="20201115 23:02:32.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.323" endtime="20201115 23:02:32.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.351" endtime="20201115 23:02:32.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.357" endtime="20201115 23:02:32.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.316" endtime="20201115 23:02:32.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.310" endtime="20201115 23:02:32.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.380" endtime="20201115 23:02:32.728"></status>
</kw>
<msg timestamp="20201115 23:02:32.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047407597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047482389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.377" endtime="20201115 23:02:32.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047407597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047482389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.737" endtime="20201115 23:02:32.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.757" endtime="20201115 23:02:32.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.370" endtime="20201115 23:02:32.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.365" endtime="20201115 23:02:32.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.777" level="INFO">${RESULT} = [{'time': 0.047482389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.479199999999714e-05, 'source_diff': 7.479199999999714e-05}, {'time': 0.047573444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.768" endtime="20201115 23:02:32.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.807" level="INFO">${ACCURACY} = {'time': [0.047482389, 0.047573444, 0.047661403, 0.047747417, 0.047837444, 0.047931431, 0.048018458, 0.048105458, 0.048200458, 0.048285486, 0.048370514, 0.0484645, 0.048557597, 0.048645528, 0.04872859...</msg>
<status status="PASS" starttime="20201115 23:02:32.779" endtime="20201115 23:02:32.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.818" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.816" endtime="20201115 23:02:32.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.823" level="INFO">VALUE: [7.479199999999714e-05, 7.487500000000202e-05, 7.42639999999975e-05, 7.46110000000022e-05, 7.506899999999705e-05, 7.448699999999808e-05, 7.491600000000126e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.44439999999999e-05, 7.468100000000005e-05, 7.468100000000005e-05, 7.437500000000152e-05, 7.494499999999987e-05, 7.440300000000066e-05, 7.52639999999985e-05, 7.497299999999901e-05, 7.523599999999936e-05, 7.479199999999714e-05, 7.448600000000555e-05, 7.468000000000058e-05, 7.456899999999655e-05, 7.470799999999972e-05, 7.459700000000263e-05, 7.437499999999458e-05, 7.515300000000141e-05, 7.487500000000202e-05, 7.519500000000012e-05, 7.486100000000245e-05, 7.506899999999705e-05, 7.454200000000383e-05, 7.469499999999962e-05, 7.490300000000116e-05, 7.516600000000151e-05, 7.436099999999501e-05, 7.462500000000177e-05, 7.504200000000433e-05, 7.463900000000134e-05, 7.509700000000313e-05, 7.472199999999929e-05, 7.479199999999714e-05, 7.509800000000261e-05, 7.472199999999929e-05, 7.473699999999833e-05, 7.483400000000279e-05, 7.483300000000331e-05, 7.505499999999748e-05, 7.430499999999673e-05, 7.469400000000015e-05, 7.50560000000039e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.820" endtime="20201115 23:02:32.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.809" endtime="20201115 23:02:32.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.833" endtime="20201115 23:02:32.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.841" endtime="20201115 23:02:32.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.837" endtime="20201115 23:02:32.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.828" endtime="20201115 23:02:32.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.306" endtime="20201115 23:02:32.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.302" endtime="20201115 23:02:32.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.301" endtime="20201115 23:02:32.868"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.895" endtime="20201115 23:02:32.916"></status>
</kw>
<msg timestamp="20201115 23:02:32.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.891" endtime="20201115 23:02:32.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.920" endtime="20201115 23:02:32.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.926" endtime="20201115 23:02:32.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.884" endtime="20201115 23:02:32.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.878" endtime="20201115 23:02:32.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.950" endtime="20201115 23:02:33.297"></status>
</kw>
<msg timestamp="20201115 23:02:33.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04709575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047171694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:32.946" endtime="20201115 23:02:33.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04709575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047171694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:33.307" endtime="20201115 23:02:33.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.326" endtime="20201115 23:02:33.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.939" endtime="20201115 23:02:33.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.934" endtime="20201115 23:02:33.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.343" level="INFO">${RESULT} = [{'time': 0.047171694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.59440000000014e-05, 'source_diff': 7.59440000000014e-05}, {'time': 0.047260708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:33.334" endtime="20201115 23:02:33.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.373" level="INFO">${ACCURACY} = {'time': [0.047171694, 0.047260708, 0.047352708, 0.047438708, 0.04752875, 0.047611722, 0.047698736, 0.047787778, 0.04787375, 0.047965806, 0.048049778, 0.048134792, 0.048219833, 0.048315833, 0.04840581...</msg>
<status status="PASS" starttime="20201115 23:02:33.345" endtime="20201115 23:02:33.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.384" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.382" endtime="20201115 23:02:33.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.390" level="INFO">VALUE: [7.59440000000014e-05, 7.529099999999816e-05, 7.558299999999712e-05, 7.580500000000517e-05, 7.59440000000014e-05, 7.533300000000381e-05, 7.617999999999514e-05, 7.536100000000295e-05, 7.599999999999968e-05, 7.545899999999994e-05, 7.551399999999875e-05, 7.529200000000458e-05, 7.595799999999403e-05, 7.587500000000302e-05, 7.543000000000133e-05, 7.536099999999601e-05, 7.52639999999985e-05, 7.595800000000097e-05, 7.598600000000011e-05, 7.574999999999943e-05, 7.572199999999335e-05, 7.562499999999583e-05, 7.618100000000155e-05, 7.537499999999558e-05, 7.599999999999968e-05, 7.624999999999993e-05, 7.551399999999875e-05, 7.619400000000165e-05, 7.587500000000302e-05, 7.597200000000054e-05, 7.605499999999848e-05, 7.570799999999378e-05, 7.555500000000492e-05, 7.579199999999814e-05, 7.529200000000458e-05, 7.597200000000054e-05, 7.537500000000252e-05, 7.533400000000329e-05, 7.602799999999882e-05, 7.568000000000158e-05, 7.554199999999789e-05, 7.59440000000014e-05, 7.627799999999907e-05, 7.615300000000241e-05, 7.551399999999875e-05, 7.59440000000014e-05, 7.622200000000079e-05, 7.520800000000022e-05, 7.569500000000062e-05, 7.62639999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.386" endtime="20201115 23:02:33.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.375" endtime="20201115 23:02:33.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.399" endtime="20201115 23:02:33.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.408" endtime="20201115 23:02:33.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.403" endtime="20201115 23:02:33.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.395" endtime="20201115 23:02:33.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.874" endtime="20201115 23:02:33.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.870" endtime="20201115 23:02:33.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.869" endtime="20201115 23:02:33.434"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.461" endtime="20201115 23:02:33.484"></status>
</kw>
<msg timestamp="20201115 23:02:33.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.458" endtime="20201115 23:02:33.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.487" endtime="20201115 23:02:33.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.493" endtime="20201115 23:02:33.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.451" endtime="20201115 23:02:33.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.445" endtime="20201115 23:02:33.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.517" endtime="20201115 23:02:33.864"></status>
</kw>
<msg timestamp="20201115 23:02:33.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047348806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047425236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.513" endtime="20201115 23:02:33.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047348806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047425236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.874" endtime="20201115 23:02:33.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.893" endtime="20201115 23:02:33.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.506" endtime="20201115 23:02:33.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.501" endtime="20201115 23:02:33.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.912" level="INFO">${RESULT} = [{'time': 0.047425236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.643000000000233e-05, 'source_diff': 7.643000000000233e-05}, {'time': 0.047513292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.903" endtime="20201115 23:02:33.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.942" level="INFO">${ACCURACY} = {'time': [0.047425236, 0.047513292, 0.04760825, 0.047702278, 0.047787319, 0.047871292, 0.047957306, 0.048051306, 0.048138306, 0.048232389, 0.048317333, 0.048410389, 0.048503389, 0.048598375, 0.0486923...</msg>
<status status="PASS" starttime="20201115 23:02:33.914" endtime="20201115 23:02:33.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.953" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.951" endtime="20201115 23:02:33.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.959" level="INFO">VALUE: [7.643000000000233e-05, 7.640299999999572e-05, 7.648600000000061e-05, 7.679199999999914e-05, 7.679099999999967e-05, 7.630600000000515e-05, 7.712499999999733e-05, 7.633400000000429e-05, 7.698700000000058e-05, 7.662500000000377e-05, 7.651399999999975e-05, 7.638899999999615e-05, 7.636100000000395e-05, 7.670800000000172e-05, 7.720800000000222e-05, 7.674999999999349e-05, 7.659800000000411e-05, 7.722200000000179e-05, 7.655599999999846e-05, 7.702799999999982e-05, 7.669400000000215e-05, 7.726299999999409e-05, 7.723600000000136e-05, 7.666599999999607e-05, 7.695800000000197e-05, 7.711099999999776e-05, 7.708299999999862e-05, 7.668099999999511e-05, 7.669500000000162e-05, 7.687500000000402e-05, 7.704199999999939e-05, 7.719399999999571e-05, 7.648600000000061e-05, 7.648700000000008e-05, 7.699999999999374e-05, 7.645800000000147e-05, 7.650000000000018e-05, 7.717999999999614e-05, 7.702799999999982e-05, 7.677799999999957e-05, 7.630599999999821e-05, 7.668100000000205e-05, 7.627799999999907e-05, 7.70969999999982e-05, 7.636099999999701e-05, 7.70839999999981e-05, 7.720900000000169e-05, 7.670800000000172e-05, 7.700000000000068e-05, 7.717999999999614e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.956" endtime="20201115 23:02:33.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.944" endtime="20201115 23:02:33.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.968" endtime="20201115 23:02:33.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.976" endtime="20201115 23:02:33.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.972" endtime="20201115 23:02:34.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.963" endtime="20201115 23:02:34.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.441" endtime="20201115 23:02:34.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.437" endtime="20201115 23:02:34.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.435" endtime="20201115 23:02:34.003"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.008" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.030" endtime="20201115 23:02:34.052"></status>
</kw>
<msg timestamp="20201115 23:02:34.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.026" endtime="20201115 23:02:34.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.055" endtime="20201115 23:02:34.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.061" endtime="20201115 23:02:34.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.019" endtime="20201115 23:02:34.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.013" endtime="20201115 23:02:34.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.084" endtime="20201115 23:02:34.434"></status>
</kw>
<msg timestamp="20201115 23:02:34.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047057694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047135208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.081" endtime="20201115 23:02:34.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047057694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047135208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.444" endtime="20201115 23:02:34.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.463" endtime="20201115 23:02:34.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.074" endtime="20201115 23:02:34.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.069" endtime="20201115 23:02:34.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.480" level="INFO">${RESULT} = [{'time': 0.047135208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.751400000000075e-05, 'source_diff': 7.751400000000075e-05}, {'time': 0.04723125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:34.471" endtime="20201115 23:02:34.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.513" level="INFO">${ACCURACY} = {'time': [0.047135208, 0.04723125, 0.047324236, 0.047419236, 0.047511292, 0.04760425, 0.047697306, 0.047792278, 0.047880292, 0.047966333, 0.048055306, 0.048143319, 0.048235361, 0.048329361, 0.04841734...</msg>
<status status="PASS" starttime="20201115 23:02:34.482" endtime="20201115 23:02:34.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.524" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.522" endtime="20201115 23:02:34.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.530" level="INFO">VALUE: [7.751400000000075e-05, 7.819400000000365e-05, 7.827800000000107e-05, 7.77919999999932e-05, 7.752799999999338e-05, 7.779200000000014e-05, 7.791700000000373e-05, 7.816700000000398e-05, 7.7458999999995e-05, 7.736099999999801e-05, 7.759799999999817e-05, 7.801299999999484e-05, 7.73189999999993e-05, 7.765300000000391e-05, 7.76389999999974e-05, 7.804200000000039e-05, 7.759799999999817e-05, 7.729199999999964e-05, 7.822200000000279e-05, 7.793099999999636e-05, 7.81389999999979e-05, 7.750000000000118e-05, 7.787499999999808e-05, 7.819500000000312e-05, 7.755499999999999e-05, 7.775000000000143e-05, 7.751400000000075e-05, 7.822199999999585e-05, 7.811099999999876e-05, 7.787499999999808e-05, 7.80839999999991e-05, 7.811099999999876e-05, 7.82640000000015e-05, 7.772299999999482e-05, 7.797200000000254e-05, 7.770899999999525e-05, 7.72640000000005e-05, 7.787499999999808e-05, 7.75969999999987e-05, 7.740199999999725e-05, 7.75969999999987e-05, 7.752800000000032e-05, 7.800000000000168e-05, 7.768100000000305e-05, 7.801300000000178e-05, 7.812499999999833e-05, 7.762500000000477e-05, 7.806999999999953e-05, 7.784799999999842e-05, 7.78189999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.526" endtime="20201115 23:02:34.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.515" endtime="20201115 23:02:34.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.538" endtime="20201115 23:02:34.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.547" endtime="20201115 23:02:34.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.543" endtime="20201115 23:02:34.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.534" endtime="20201115 23:02:34.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.009" endtime="20201115 23:02:34.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.005" endtime="20201115 23:02:34.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.004" endtime="20201115 23:02:34.573"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.600" endtime="20201115 23:02:34.623"></status>
</kw>
<msg timestamp="20201115 23:02:34.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.597" endtime="20201115 23:02:34.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.626" endtime="20201115 23:02:34.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.632" endtime="20201115 23:02:34.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.590" endtime="20201115 23:02:34.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.584" endtime="20201115 23:02:34.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.656" endtime="20201115 23:02:35.005"></status>
</kw>
<msg timestamp="20201115 23:02:35.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046924764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047003361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.652" endtime="20201115 23:02:35.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046924764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047003361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.015" endtime="20201115 23:02:35.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.033" endtime="20201115 23:02:35.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.645" endtime="20201115 23:02:35.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.640" endtime="20201115 23:02:35.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.053" level="INFO">${RESULT} = [{'time': 0.047003361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.85969999999997e-05, 'source_diff': 7.85969999999997e-05}, {'time': 0.047093333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:35.044" endtime="20201115 23:02:35.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.083" level="INFO">${ACCURACY} = {'time': [0.047003361, 0.047093333, 0.047183361, 0.047271375, 0.047365347, 0.047463361, 0.047554389, 0.047647403, 0.047744403, 0.047836403, 0.047924444, 0.048019417, 0.048113444, 0.048205444, 0.048300...</msg>
<status status="PASS" starttime="20201115 23:02:35.055" endtime="20201115 23:02:35.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.094" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.092" endtime="20201115 23:02:35.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.099" level="INFO">VALUE: [7.85969999999997e-05, 7.855500000000099e-05, 7.883300000000037e-05, 7.83190000000003e-05, 7.84440000000039e-05, 7.868000000000458e-05, 7.83890000000051e-05, 7.888899999999865e-05, 7.829200000000064e-05, 7.854200000000089e-05, 7.83049999999938e-05, 7.861099999999926e-05, 7.926299999999609e-05, 7.850000000000218e-05, 7.845800000000347e-05, 7.833299999999987e-05, 7.890299999999822e-05, 7.870800000000372e-05, 7.861099999999926e-05, 7.841599999999782e-05, 7.872200000000329e-05, 7.849999999999524e-05, 7.900000000000268e-05, 7.879200000000114e-05, 7.912499999999933e-05, 7.836199999999849e-05, 7.9151999999999e-05, 7.886099999999951e-05, 7.856899999999362e-05, 7.904200000000139e-05, 7.883300000000037e-05, 7.904200000000139e-05, 7.834699999999944e-05, 7.912499999999933e-05, 7.880600000000071e-05, 7.895900000000344e-05, 7.911099999999976e-05, 7.865299999999797e-05, 7.837499999999858e-05, 7.920800000000422e-05, 7.867999999999764e-05, 7.88190000000008e-05, 7.887500000000602e-05, 7.873599999999592e-05, 7.904199999999445e-05, 7.834799999999892e-05, 7.850000000000218e-05, 7.911099999999976e-05, 7.836199999999849e-05, 7.841700000000423e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.096" endtime="20201115 23:02:35.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.085" endtime="20201115 23:02:35.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.108" endtime="20201115 23:02:35.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.116" endtime="20201115 23:02:35.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.112" endtime="20201115 23:02:35.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.103" endtime="20201115 23:02:35.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.580" endtime="20201115 23:02:35.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.576" endtime="20201115 23:02:35.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.574" endtime="20201115 23:02:35.143"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.148" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.170" endtime="20201115 23:02:35.191"></status>
</kw>
<msg timestamp="20201115 23:02:35.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.166" endtime="20201115 23:02:35.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.195" endtime="20201115 23:02:35.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.202" endtime="20201115 23:02:35.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.159" endtime="20201115 23:02:35.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.153" endtime="20201115 23:02:35.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.225" endtime="20201115 23:02:35.553"></status>
</kw>
<msg timestamp="20201115 23:02:35.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047001056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047080389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.222" endtime="20201115 23:02:35.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047001056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047080389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.562" endtime="20201115 23:02:35.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.581" endtime="20201115 23:02:35.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.215" endtime="20201115 23:02:35.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.210" endtime="20201115 23:02:35.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.599" level="INFO">${RESULT} = [{'time': 0.047080389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.933300000000088e-05, 'source_diff': 7.933300000000088e-05}, {'time': 0.047180403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:35.589" endtime="20201115 23:02:35.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.629" level="INFO">${ACCURACY} = {'time': [0.047080389, 0.047180403, 0.047269403, 0.047366417, 0.047456431, 0.047543431, 0.047643444, 0.047738472, 0.047837542, 0.047924486, 0.048022514, 0.0481175, 0.048210542, 0.048298528, 0.04838652...</msg>
<status status="PASS" starttime="20201115 23:02:35.601" endtime="20201115 23:02:35.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.640" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.637" endtime="20201115 23:02:35.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.645" level="INFO">VALUE: [7.933300000000088e-05, 7.979200000000214e-05, 7.968099999999811e-05, 8.020899999999775e-05, 7.980600000000171e-05, 7.933400000000035e-05, 7.998599999999717e-05, 7.988899999999965e-05, 8.015299999999947e-05, 7.970800000000472e-05, 7.934700000000044e-05, 7.943099999999786e-05, 8.019500000000512e-05, 7.930600000000121e-05, 7.974999999999649e-05, 8.020900000000469e-05, 8.019400000000565e-05, 7.933300000000088e-05, 7.992999999999889e-05, 7.929100000000217e-05, 7.99589999999975e-05, 8.012500000000033e-05, 8.02640000000035e-05, 7.980600000000171e-05, 7.975000000000343e-05, 7.940299999999872e-05, 8.01389999999999e-05, 7.950000000000318e-05, 7.972299999999682e-05, 7.990199999999975e-05, 7.951399999999581e-05, 7.969399999999821e-05, 8.011100000000076e-05, 7.992999999999889e-05, 7.937499999999958e-05, 8.022199999999785e-05, 7.945799999999753e-05, 7.950000000000318e-05, 8.019500000000512e-05, 7.950000000000318e-05, 7.969500000000462e-05, 7.948600000000361e-05, 8.017999999999914e-05, 8.001400000000325e-05, 7.956900000000156e-05, 7.973600000000386e-05, 7.970799999999778e-05, 7.98890000000066e-05, 7.983300000000138e-05, 7.94169999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.642" endtime="20201115 23:02:35.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.631" endtime="20201115 23:02:35.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.654" endtime="20201115 23:02:35.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.662" endtime="20201115 23:02:35.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.658" endtime="20201115 23:02:35.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.649" endtime="20201115 23:02:35.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.150" endtime="20201115 23:02:35.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.146" endtime="20201115 23:02:35.689"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.144" endtime="20201115 23:02:35.689"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.694" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.717" endtime="20201115 23:02:35.738"></status>
</kw>
<msg timestamp="20201115 23:02:35.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.713" endtime="20201115 23:02:35.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.742" endtime="20201115 23:02:35.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.748" endtime="20201115 23:02:35.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.705" endtime="20201115 23:02:35.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.699" endtime="20201115 23:02:35.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.772" endtime="20201115 23:02:36.119"></status>
</kw>
<msg timestamp="20201115 23:02:36.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047462333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047542861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.768" endtime="20201115 23:02:36.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047462333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047542861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.128" endtime="20201115 23:02:36.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.147" endtime="20201115 23:02:36.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.761" endtime="20201115 23:02:36.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.756" endtime="20201115 23:02:36.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.166" level="INFO">${RESULT} = [{'time': 0.047542861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.052799999999638e-05, 'source_diff': 8.052799999999638e-05}, {'time': 0.047634875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.157" endtime="20201115 23:02:36.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.196" level="INFO">${ACCURACY} = {'time': [0.047542861, 0.047634875, 0.047729889, 0.047820889, 0.047913917, 0.048002931, 0.048101931, 0.048190972, 0.048288944, 0.048384972, 0.048478958, 0.048574986, 0.048664986, 0.048757028, 0.048854...</msg>
<status status="PASS" starttime="20201115 23:02:36.168" endtime="20201115 23:02:36.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.207" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.205" endtime="20201115 23:02:36.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.212" level="INFO">VALUE: [8.052799999999638e-05, 8.118099999999961e-05, 8.104199999999645e-05, 8.043099999999886e-05, 8.037500000000058e-05, 8.07369999999974e-05, 8.049999999999724e-05, 8.119399999999971e-05, 8.033300000000188e-05, 8.101399999999731e-05, 8.073600000000486e-05, 8.038900000000015e-05, 8.065299999999997e-05, 8.044499999999843e-05, 8.099999999999774e-05, 8.098599999999817e-05, 8.05840000000016e-05, 8.094499999999893e-05, 8.048599999999767e-05, 8.066699999999954e-05, 8.10970000000022e-05, 8.06390000000004e-05, 8.101400000000425e-05, 8.084700000000195e-05, 8.080500000000324e-05, 8.029200000000264e-05, 8.124999999999799e-05, 8.083300000000238e-05, 8.030600000000221e-05, 8.119399999999971e-05, 8.088900000000065e-05, 8.051400000000375e-05, 8.050000000000418e-05, 8.111100000000177e-05, 8.063899999999347e-05, 8.079200000000314e-05, 8.119399999999971e-05, 8.09169999999998e-05, 8.033300000000188e-05, 8.07919999999962e-05, 8.112500000000133e-05, 8.036100000000101e-05, 8.040299999999972e-05, 8.06520000000005e-05, 8.061200000000074e-05, 8.072199999999835e-05, 8.111100000000177e-05, 8.073599999999792e-05, 8.042999999999939e-05, 8.070899999999825e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.209" endtime="20201115 23:02:36.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.198" endtime="20201115 23:02:36.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.221" endtime="20201115 23:02:36.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.229" endtime="20201115 23:02:36.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.225" endtime="20201115 23:02:36.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.217" endtime="20201115 23:02:36.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.696" endtime="20201115 23:02:36.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.692" endtime="20201115 23:02:36.256"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.690" endtime="20201115 23:02:36.257"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.262" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.284" endtime="20201115 23:02:36.306"></status>
</kw>
<msg timestamp="20201115 23:02:36.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.280" endtime="20201115 23:02:36.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.310" endtime="20201115 23:02:36.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.316" endtime="20201115 23:02:36.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.273" endtime="20201115 23:02:36.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.267" endtime="20201115 23:02:36.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.339" endtime="20201115 23:02:36.688"></status>
</kw>
<msg timestamp="20201115 23:02:36.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047958222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048039653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.336" endtime="20201115 23:02:36.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047958222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048039653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.698" endtime="20201115 23:02:36.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.716" endtime="20201115 23:02:36.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.329" endtime="20201115 23:02:36.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.324" endtime="20201115 23:02:36.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.734" level="INFO">${RESULT} = [{'time': 0.048039653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.143099999999986e-05, 'source_diff': 8.143099999999986e-05}, {'time': 0.048131667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.725" endtime="20201115 23:02:36.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.769" level="INFO">${ACCURACY} = {'time': [0.048039653, 0.048131667, 0.048227667, 0.048327708, 0.048427722, 0.048521736, 0.048613708, 0.04870775, 0.048807764, 0.048908764, 0.049000778, 0.049092764, 0.049188778, 0.049282833, 0.0493817...</msg>
<status status="PASS" starttime="20201115 23:02:36.736" endtime="20201115 23:02:36.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.780" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.778" endtime="20201115 23:02:36.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.786" level="INFO">VALUE: [8.143099999999986e-05, 8.144500000000637e-05, 8.12640000000045e-05, 8.13469999999955e-05, 8.133300000000288e-05, 8.140300000000072e-05, 8.224999999999899e-05, 8.180600000000371e-05, 8.13469999999955e-05, 8.148599999999867e-05, 8.166700000000054e-05, 8.204199999999745e-05, 8.129200000000364e-05, 8.18049999999973e-05, 8.219500000000018e-05, 8.161099999999533e-05, 8.20970000000032e-05, 8.166600000000107e-05, 8.161100000000227e-05, 8.134700000000245e-05, 8.188900000000165e-05, 8.183299999999644e-05, 8.148599999999867e-05, 8.211100000000277e-05, 8.223599999999942e-05, 8.193100000000036e-05, 8.123700000000483e-05, 8.170799999999978e-05, 8.195800000000003e-05, 8.170799999999978e-05, 8.1846999999996e-05, 8.224999999999899e-05, 8.149999999999824e-05, 8.227799999999813e-05, 8.144399999999996e-05, 8.21249999999954e-05, 8.20970000000032e-05, 8.188900000000165e-05, 8.179200000000414e-05, 8.186200000000199e-05, 8.194400000000046e-05, 8.20970000000032e-05, 8.169400000000021e-05, 8.173599999999892e-05, 8.154200000000389e-05, 8.144499999999943e-05, 8.177799999999763e-05, 8.154199999999695e-05, 8.17090000000062e-05, 8.199999999999874e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.783" endtime="20201115 23:02:36.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.771" endtime="20201115 23:02:36.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.795" endtime="20201115 23:02:36.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.804" endtime="20201115 23:02:36.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.799" endtime="20201115 23:02:36.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.791" endtime="20201115 23:02:36.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.264" endtime="20201115 23:02:36.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.259" endtime="20201115 23:02:36.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.258" endtime="20201115 23:02:36.831"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.861" endtime="20201115 23:02:36.883"></status>
</kw>
<msg timestamp="20201115 23:02:36.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.858" endtime="20201115 23:02:36.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.887" endtime="20201115 23:02:36.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.893" endtime="20201115 23:02:36.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.849" endtime="20201115 23:02:36.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.841" endtime="20201115 23:02:36.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.918" endtime="20201115 23:02:37.266"></status>
</kw>
<msg timestamp="20201115 23:02:37.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050529194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050612167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.915" endtime="20201115 23:02:37.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050529194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050612167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.276" endtime="20201115 23:02:37.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.294" endtime="20201115 23:02:37.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.907" endtime="20201115 23:02:37.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.902" endtime="20201115 23:02:37.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.313" level="INFO">${RESULT} = [{'time': 0.050612167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.297300000000007e-05, 'source_diff': 8.297300000000007e-05}, {'time': 0.050708167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:37.305" endtime="20201115 23:02:37.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.343" level="INFO">${ACCURACY} = {'time': [0.050612167, 0.050708167, 0.050801167, 0.050894181, 0.050986208, 0.051085208, 0.051185208, 0.051283222, 0.05138525, 0.051487306, 0.051588278, 0.051686319, 0.051786278, 0.051881306, 0.0519843...</msg>
<status status="PASS" starttime="20201115 23:02:37.315" endtime="20201115 23:02:37.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.354" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.352" endtime="20201115 23:02:37.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.360" level="INFO">VALUE: [8.297300000000007e-05, 8.252799999999838e-05, 8.243100000000086e-05, 8.2459e-05, 8.311099999999683e-05, 8.259699999999676e-05, 8.229100000000517e-05, 8.284700000000395e-05, 8.290300000000222e-05, 8.252799999999838e-05, 8.318100000000161e-05, 8.288800000000318e-05, 8.270900000000025e-05, 8.299999999999974e-05, 8.301399999999931e-05, 8.294500000000093e-05, 8.312500000000334e-05, 8.305500000000549e-05, 8.290200000000275e-05, 8.227799999999813e-05, 8.30970000000042e-05, 8.312500000000334e-05, 8.305600000000496e-05, 8.301399999999931e-05, 8.262500000000284e-05, 8.255600000000446e-05, 8.294500000000093e-05, 8.236200000000249e-05, 8.313800000000343e-05, 8.234700000000345e-05, 8.306899999999812e-05, 8.226399999999856e-05, 8.286099999999658e-05, 8.227799999999813e-05, 8.268100000000111e-05, 8.316700000000204e-05, 8.29720000000006e-05, 8.272299999999982e-05, 8.249999999999924e-05, 8.277699999999916e-05, 8.266599999999513e-05, 8.270800000000078e-05, 8.319399999999477e-05, 8.319499999999425e-05, 8.240300000000172e-05, 8.231899999999737e-05, 8.27919999999982e-05, 8.276399999999906e-05, 8.288900000000265e-05, 8.316700000000204e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.357" endtime="20201115 23:02:37.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.345" endtime="20201115 23:02:37.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.369" endtime="20201115 23:02:37.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.378" endtime="20201115 23:02:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.373" endtime="20201115 23:02:37.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.365" endtime="20201115 23:02:37.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.837" endtime="20201115 23:02:37.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.833" endtime="20201115 23:02:37.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.832" endtime="20201115 23:02:37.404"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.431" endtime="20201115 23:02:37.454"></status>
</kw>
<msg timestamp="20201115 23:02:37.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.428" endtime="20201115 23:02:37.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.457" endtime="20201115 23:02:37.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.463" endtime="20201115 23:02:37.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.420" endtime="20201115 23:02:37.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.415" endtime="20201115 23:02:37.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.487" endtime="20201115 23:02:37.834"></status>
</kw>
<msg timestamp="20201115 23:02:37.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047079111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047162403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.483" endtime="20201115 23:02:37.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047079111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047162403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.843" endtime="20201115 23:02:37.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.862" endtime="20201115 23:02:37.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.476" endtime="20201115 23:02:37.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.471" endtime="20201115 23:02:37.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.879" level="INFO">${RESULT} = [{'time': 0.047162403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.32919999999987e-05, 'source_diff': 8.32919999999987e-05}, {'time': 0.047262458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:37.871" endtime="20201115 23:02:37.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.911" level="INFO">${ACCURACY} = {'time': [0.047162403, 0.047262458, 0.047355431, 0.047458444, 0.047556458, 0.047658458, 0.047759514, 0.047863514, 0.047963486, 0.048064514, 0.048162528, 0.048265528, 0.048363528, 0.048461556, 0.048558...</msg>
<status status="PASS" starttime="20201115 23:02:37.882" endtime="20201115 23:02:37.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.922" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.920" endtime="20201115 23:02:37.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.928" level="INFO">VALUE: [8.32919999999987e-05, 8.402700000000041e-05, 8.324999999999999e-05, 8.370800000000178e-05, 8.370800000000178e-05, 8.354099999999948e-05, 8.383300000000538e-05, 8.369500000000168e-05, 8.377799999999963e-05, 8.377799999999963e-05, 8.330600000000521e-05, 8.412500000000434e-05, 8.344500000000143e-05, 8.370900000000125e-05, 8.337500000000359e-05, 8.374999999999355e-05, 8.369400000000221e-05, 8.401400000000031e-05, 8.375000000000049e-05, 8.344399999999502e-05, 8.41390000000039e-05, 8.337500000000359e-05, 8.363899999999647e-05, 8.393100000000236e-05, 8.350000000000024e-05, 8.422300000000132e-05, 8.41799999999962e-05, 8.366600000000307e-05, 8.329099999999923e-05, 8.359699999999776e-05, 8.36249999999969e-05, 8.369400000000221e-05, 8.380599999999877e-05, 8.420800000000228e-05, 8.337499999999665e-05, 8.341600000000282e-05, 8.333400000000435e-05, 8.420899999999482e-05, 8.397300000000107e-05, 8.359699999999776e-05, 8.358399999999766e-05, 8.424999999999405e-05, 8.341600000000282e-05, 8.326399999999956e-05, 8.34449999999945e-05, 8.369500000000168e-05, 8.418099999999568e-05, 8.408399999999816e-05, 8.359799999999723e-05, 8.391599999999638e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.924" endtime="20201115 23:02:37.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.913" endtime="20201115 23:02:37.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.937" endtime="20201115 23:02:37.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.946" endtime="20201115 23:02:37.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.942" endtime="20201115 23:02:37.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.932" endtime="20201115 23:02:37.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.411" endtime="20201115 23:02:37.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.407" endtime="20201115 23:02:37.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.405" endtime="20201115 23:02:37.973"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.978" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.000" endtime="20201115 23:02:38.022"></status>
</kw>
<msg timestamp="20201115 23:02:38.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.996" endtime="20201115 23:02:38.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.025" endtime="20201115 23:02:38.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.032" endtime="20201115 23:02:38.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.989" endtime="20201115 23:02:38.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.983" endtime="20201115 23:02:38.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.055" endtime="20201115 23:02:38.402"></status>
</kw>
<msg timestamp="20201115 23:02:38.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0470745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047158972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:38.052" endtime="20201115 23:02:38.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0470745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047158972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:38.411" endtime="20201115 23:02:38.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.431" endtime="20201115 23:02:38.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.044" endtime="20201115 23:02:38.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.040" endtime="20201115 23:02:38.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.450" level="INFO">${RESULT} = [{'time': 0.047158972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.44720000000021e-05, 'source_diff': 8.44720000000021e-05}, {'time': 0.047254986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:38.441" endtime="20201115 23:02:38.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.480" level="INFO">${ACCURACY} = {'time': [0.047158972, 0.047254986, 0.047351014, 0.047451, 0.047555028, 0.047648056, 0.047742028, 0.047840042, 0.047941069, 0.048035069, 0.048133111, 0.048228139, 0.048324111, 0.048419111, 0.048515125...</msg>
<status status="PASS" starttime="20201115 23:02:38.452" endtime="20201115 23:02:38.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.491" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.488" endtime="20201115 23:02:38.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.496" level="INFO">VALUE: [8.44720000000021e-05, 8.504200000000045e-05, 8.441699999999636e-05, 8.523600000000242e-05, 8.470900000000225e-05, 8.436200000000449e-05, 8.487499999999815e-05, 8.51249999999984e-05, 8.523600000000242e-05, 8.429100000000023e-05, 8.436099999999808e-05, 8.466700000000354e-05, 8.502800000000088e-05, 8.486099999999858e-05, 8.458299999999919e-05, 8.445800000000253e-05, 8.475000000000149e-05, 8.525000000000199e-05, 8.445899999999507e-05, 8.4459000000002e-05, 8.51249999999984e-05, 8.480599999999977e-05, 8.511099999999883e-05, 8.442999999999645e-05, 8.427800000000013e-05, 8.437499999999765e-05, 8.501400000000131e-05, 8.49999999999948e-05, 8.42919999999997e-05, 8.493099999999643e-05, 8.498600000000217e-05, 8.44449999999955e-05, 8.470900000000225e-05, 8.498600000000217e-05, 8.447199999999516e-05, 8.494399999999652e-05, 8.495800000000303e-05, 8.437499999999765e-05, 8.45970000000057e-05, 8.477799999999369e-05, 8.487499999999815e-05, 8.436099999999808e-05, 8.49590000000025e-05, 8.450000000000124e-05, 8.422300000000132e-05, 8.454100000000048e-05, 8.437499999999765e-05, 8.51390000000049e-05, 8.505500000000055e-05, 8.49590000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.493" endtime="20201115 23:02:38.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.482" endtime="20201115 23:02:38.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.505" endtime="20201115 23:02:38.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.514" endtime="20201115 23:02:38.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.509" endtime="20201115 23:02:38.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.501" endtime="20201115 23:02:38.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.979" endtime="20201115 23:02:38.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.975" endtime="20201115 23:02:38.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.974" endtime="20201115 23:02:38.540"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.545" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.567" endtime="20201115 23:02:38.590"></status>
</kw>
<msg timestamp="20201115 23:02:38.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.564" endtime="20201115 23:02:38.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.594" endtime="20201115 23:02:38.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.600" endtime="20201115 23:02:38.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.556" endtime="20201115 23:02:38.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.551" endtime="20201115 23:02:38.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.624" endtime="20201115 23:02:38.979"></status>
</kw>
<msg timestamp="20201115 23:02:38.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046799736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046885778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.620" endtime="20201115 23:02:38.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046799736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046885778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.989" endtime="20201115 23:02:39.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.008" endtime="20201115 23:02:39.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.613" endtime="20201115 23:02:39.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.608" endtime="20201115 23:02:39.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.026" level="INFO">${RESULT} = [{'time': 0.046885778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.604200000000145e-05, 'source_diff': 8.604200000000145e-05}, {'time': 0.046987792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:39.017" endtime="20201115 23:02:39.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.059" level="INFO">${ACCURACY} = {'time': [0.046885778, 0.046987792, 0.047082806, 0.047178847, 0.047273819, 0.047377833, 0.047473847, 0.047574875, 0.047667903, 0.047763903, 0.047862903, 0.047958931, 0.048060917, 0.048162917, 0.048264...</msg>
<status status="PASS" starttime="20201115 23:02:39.028" endtime="20201115 23:02:39.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.070" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.068" endtime="20201115 23:02:39.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.076" level="INFO">VALUE: [8.604200000000145e-05, 8.561099999999933e-05, 8.547299999999564e-05, 8.611099999999983e-05, 8.606900000000112e-05, 8.587499999999915e-05, 8.542999999999745e-05, 8.586099999999958e-05, 8.537499999999865e-05, 8.557000000000009e-05, 8.548599999999573e-05, 8.609800000000667e-05, 8.558399999999966e-05, 8.552800000000138e-05, 8.56390000000054e-05, 8.555499999999411e-05, 8.554200000000095e-05, 8.591699999999786e-05, 8.569399999999727e-05, 8.547300000000257e-05, 8.626399999999562e-05, 8.620799999999734e-05, 8.544400000000396e-05, 8.576400000000206e-05, 8.573600000000292e-05, 8.598600000000317e-05, 8.536100000000602e-05, 8.529100000000123e-05, 8.541699999999736e-05, 8.573600000000292e-05, 8.586099999999958e-05, 8.611099999999983e-05, 8.538900000000516e-05, 8.53469999999995e-05, 8.545899999999607e-05, 8.577799999999469e-05, 8.619399999999777e-05, 8.545799999999659e-05, 8.611099999999983e-05, 8.536099999999908e-05, 8.606900000000112e-05, 8.580499999999436e-05, 8.61669999999981e-05, 8.600000000000274e-05, 8.576399999999512e-05, 8.587499999999915e-05, 8.56520000000055e-05, 8.609799999999973e-05, 8.588899999999872e-05, 8.602800000000188e-05]</msg>
<status status="PASS" starttime="20201115 23:02:39.072" endtime="20201115 23:02:39.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.061" endtime="20201115 23:02:39.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.085" endtime="20201115 23:02:39.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.093" endtime="20201115 23:02:39.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.088" endtime="20201115 23:02:39.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.080" endtime="20201115 23:02:39.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.547" endtime="20201115 23:02:39.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.543" endtime="20201115 23:02:39.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.541" endtime="20201115 23:02:39.120"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.125" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.146" endtime="20201115 23:02:39.168"></status>
</kw>
<msg timestamp="20201115 23:02:39.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.143" endtime="20201115 23:02:39.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.172" endtime="20201115 23:02:39.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.179" endtime="20201115 23:02:39.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.136" endtime="20201115 23:02:39.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.130" endtime="20201115 23:02:39.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.202" endtime="20201115 23:02:39.561"></status>
</kw>
<msg timestamp="20201115 23:02:39.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046831875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046918889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.199" endtime="20201115 23:02:39.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046831875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046918889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.572" endtime="20201115 23:02:39.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.593" endtime="20201115 23:02:39.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.192" endtime="20201115 23:02:39.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.187" endtime="20201115 23:02:39.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.612" level="INFO">${RESULT} = [{'time': 0.046918889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.701399999999637e-05, 'source_diff': 8.701399999999637e-05}, {'time': 0.047018875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:39.603" endtime="20201115 23:02:39.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.642" level="INFO">${ACCURACY} = {'time': [0.046918889, 0.047018875, 0.047114889, 0.047217958, 0.047311917, 0.047408931, 0.047506958, 0.047610958, 0.047713958, 0.047812958, 0.047918014, 0.048016986, 0.048114, 0.048221014, 0.048325014...</msg>
<status status="PASS" starttime="20201115 23:02:39.614" endtime="20201115 23:02:39.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.653" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.651" endtime="20201115 23:02:39.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.659" level="INFO">VALUE: [8.701399999999637e-05, 8.652800000000238e-05, 8.670799999999784e-05, 8.647199999999716e-05, 8.634799999999998e-05, 8.720900000000475e-05, 8.686100000000058e-05, 8.656900000000162e-05, 8.725000000000399e-05, 8.668000000000564e-05, 8.63470000000005e-05, 8.633300000000094e-05, 8.637499999999965e-05, 8.6847000000001e-05, 8.627800000000213e-05, 8.702800000000288e-05, 8.672300000000382e-05, 8.688800000000024e-05, 8.683300000000144e-05, 8.724999999999705e-05, 8.708300000000169e-05, 8.6847000000001e-05, 8.647199999999716e-05, 8.697199999999766e-05, 8.687500000000015e-05, 8.668099999999818e-05, 8.637499999999965e-05, 8.704200000000245e-05, 8.674999999999655e-05, 8.65129999999964e-05, 8.670799999999784e-05, 8.690300000000623e-05, 8.64999999999963e-05, 8.697199999999766e-05, 8.724999999999705e-05, 8.719399999999877e-05, 8.69590000000045e-05, 8.725000000000399e-05, 8.677800000000263e-05, 8.687500000000015e-05, 8.683400000000091e-05, 8.63470000000005e-05, 8.669500000000468e-05, 8.64720000000041e-05, 8.694500000000494e-05, 8.672199999999741e-05, 8.719399999999877e-05, 8.677799999999569e-05, 8.722199999999791e-05, 8.705599999999508e-05]</msg>
<status status="PASS" starttime="20201115 23:02:39.656" endtime="20201115 23:02:39.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.644" endtime="20201115 23:02:39.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.668" endtime="20201115 23:02:39.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.676" endtime="20201115 23:02:39.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.672" endtime="20201115 23:02:39.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.663" endtime="20201115 23:02:39.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.126" endtime="20201115 23:02:39.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.122" endtime="20201115 23:02:39.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.121" endtime="20201115 23:02:39.703"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.708" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.730" endtime="20201115 23:02:39.753"></status>
</kw>
<msg timestamp="20201115 23:02:39.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.727" endtime="20201115 23:02:39.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.756" endtime="20201115 23:02:39.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.763" endtime="20201115 23:02:39.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.719" endtime="20201115 23:02:39.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.713" endtime="20201115 23:02:39.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.787" endtime="20201115 23:02:40.126"></status>
</kw>
<msg timestamp="20201115 23:02:40.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047930264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048018417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.783" endtime="20201115 23:02:40.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047930264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048018417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.130" endtime="20201115 23:02:40.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.138" endtime="20201115 23:02:40.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.776" endtime="20201115 23:02:40.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.771" endtime="20201115 23:02:40.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.146" level="INFO">${RESULT} = [{'time': 0.048018417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.815300000000054e-05, 'source_diff': 8.815300000000054e-05}, {'time': 0.048123444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:40.142" endtime="20201115 23:02:40.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.160" level="INFO">${ACCURACY} = {'time': [0.048018417, 0.048123444, 0.048224444, 0.048319458, 0.048419458, 0.048516486, 0.0486215, 0.048729542, 0.048832556, 0.048934528, 0.049036569, 0.049140542, 0.049247556, 0.049355583, 0.04945156...</msg>
<status status="PASS" starttime="20201115 23:02:40.147" endtime="20201115 23:02:40.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.165" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.164" endtime="20201115 23:02:40.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.168" level="INFO">VALUE: [8.815300000000054e-05, 8.779100000000373e-05, 8.795799999999909e-05, 8.737500000000065e-05, 8.774999999999755e-05, 8.812499999999446e-05, 8.819399999999977e-05, 8.81250000000014e-05, 8.738900000000022e-05, 8.769499999999875e-05, 8.792999999999995e-05, 8.738900000000022e-05, 8.787500000000115e-05, 8.786100000000158e-05, 8.765200000000056e-05, 8.773599999999798e-05, 8.772199999999841e-05, 8.81250000000014e-05, 8.815300000000054e-05, 8.745799999999859e-05, 8.79999999999978e-05, 8.811099999999489e-05, 8.756899999999568e-05, 8.73470000000015e-05, 8.813900000000097e-05, 8.766600000000013e-05, 8.804100000000398e-05, 8.823600000000542e-05, 8.820799999999934e-05, 8.733300000000194e-05, 8.822199999999891e-05, 8.776399999999712e-05, 8.754099999999654e-05, 8.776399999999712e-05, 8.823600000000542e-05, 8.743099999999893e-05, 8.776399999999712e-05, 8.761100000000133e-05, 8.779099999999679e-05, 8.743099999999893e-05, 8.7944999999999e-05, 8.747199999999816e-05, 8.76669999999996e-05, 8.776400000000406e-05, 8.748599999999773e-05, 8.794399999999952e-05, 8.815200000000106e-05, 8.770799999999884e-05, 8.736100000000108e-05, 8.826399999999762e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.166" endtime="20201115 23:02:40.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.161" endtime="20201115 23:02:40.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.172" endtime="20201115 23:02:40.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.176" endtime="20201115 23:02:40.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.174" endtime="20201115 23:02:40.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.170" endtime="20201115 23:02:40.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.709" endtime="20201115 23:02:40.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.706" endtime="20201115 23:02:40.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.704" endtime="20201115 23:02:40.203"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.206" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.216" endtime="20201115 23:02:40.235"></status>
</kw>
<msg timestamp="20201115 23:02:40.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.215" endtime="20201115 23:02:40.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.237" endtime="20201115 23:02:40.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.240" endtime="20201115 23:02:40.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.212" endtime="20201115 23:02:40.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.209" endtime="20201115 23:02:40.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.251" endtime="20201115 23:02:40.590"></status>
</kw>
<msg timestamp="20201115 23:02:40.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0332125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033301417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:40.249" endtime="20201115 23:02:40.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0332125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033301417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:40.599" endtime="20201115 23:02:40.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.618" endtime="20201115 23:02:40.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.246" endtime="20201115 23:02:40.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.243" endtime="20201115 23:02:40.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.637" level="INFO">${RESULT} = [{'time': 0.033301417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.891700000000086e-05, 'source_diff': 8.891700000000086e-05}, {'time': 0.033404444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:40.628" endtime="20201115 23:02:40.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.667" level="INFO">${ACCURACY} = {'time': [0.033301417, 0.033404444, 0.033505444, 0.033608458, 0.033716458, 0.033825542, 0.033933486, 0.034033514, 0.034129556, 0.034227514, 0.034327556, 0.034428556, 0.034530597, 0.034626556, 0.034731...</msg>
<status status="PASS" starttime="20201115 23:02:40.639" endtime="20201115 23:02:40.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.678" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.676" endtime="20201115 23:02:40.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.684" level="INFO">VALUE: [8.891700000000086e-05, 8.870799999999984e-05, 8.877700000000516e-05, 8.84999999999983e-05, 8.861099999999539e-05, 8.890300000000129e-05, 8.86250000000019e-05, 8.882000000000334e-05, 8.862499999999496e-05, 8.845799999999959e-05, 8.843099999999993e-05, 8.877799999999769e-05, 8.920800000000034e-05, 8.852800000000438e-05, 8.89999999999988e-05, 8.923599999999948e-05, 8.906899999999718e-05, 8.905499999999761e-05, 8.859700000000276e-05, 8.884699999999607e-05, 8.901399999999837e-05, 8.893099999999349e-05, 8.88199999999964e-05, 8.855599999999658e-05, 8.82920000000037e-05, 8.91250000000024e-05, 8.848599999999873e-05, 8.895800000000009e-05, 8.844400000000002e-05, 8.909699999999632e-05, 8.913900000000197e-05, 8.901399999999837e-05, 8.832000000000284e-05, 8.908400000000316e-05, 8.890300000000129e-05, 8.834700000000251e-05, 8.893000000000095e-05, 8.911099999999589e-05, 8.834699999999557e-05, 8.924999999999905e-05, 8.924999999999905e-05, 8.919500000000025e-05, 8.91670000000011e-05, 8.854199999999701e-05, 8.826399999999762e-05, 8.859700000000276e-05, 8.838900000000122e-05, 8.905499999999761e-05, 8.909700000000326e-05, 8.861099999999539e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.681" endtime="20201115 23:02:40.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.669" endtime="20201115 23:02:40.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.693" endtime="20201115 23:02:40.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.701" endtime="20201115 23:02:40.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.697" endtime="20201115 23:02:40.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.689" endtime="20201115 23:02:40.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.207" endtime="20201115 23:02:40.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.205" endtime="20201115 23:02:40.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.204" endtime="20201115 23:02:40.728"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.733" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.755" endtime="20201115 23:02:40.778"></status>
</kw>
<msg timestamp="20201115 23:02:40.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.751" endtime="20201115 23:02:40.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.781" endtime="20201115 23:02:40.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.788" endtime="20201115 23:02:40.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.744" endtime="20201115 23:02:40.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.739" endtime="20201115 23:02:40.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.811" endtime="20201115 23:02:41.160"></status>
</kw>
<msg timestamp="20201115 23:02:41.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047264306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047354222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.808" endtime="20201115 23:02:41.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047264306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047354222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.170" endtime="20201115 23:02:41.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.189" endtime="20201115 23:02:41.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.801" endtime="20201115 23:02:41.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.796" endtime="20201115 23:02:41.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.206" level="INFO">${RESULT} = [{'time': 0.047354222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.991600000000238e-05, 'source_diff': 8.991600000000238e-05}, {'time': 0.047463278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:41.197" endtime="20201115 23:02:41.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.239" level="INFO">${ACCURACY} = {'time': [0.047354222, 0.047463278, 0.047573292, 0.047676292, 0.047780264, 0.047888278, 0.047987292, 0.048096306, 0.048195333, 0.048302361, 0.048403333, 0.048510347, 0.048612361, 0.048716375, 0.048821...</msg>
<status status="PASS" starttime="20201115 23:02:41.208" endtime="20201115 23:02:41.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.250" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.248" endtime="20201115 23:02:41.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.256" level="INFO">VALUE: [8.991600000000238e-05, 8.991699999999492e-05, 9.009800000000373e-05, 8.936100000000308e-05, 8.94450000000005e-05, 8.987499999999621e-05, 8.926399999999862e-05, 8.929199999999776e-05, 8.930499999999786e-05, 8.959700000000376e-05, 8.937500000000265e-05, 8.955500000000505e-05, 8.934699999999657e-05, 8.947200000000016e-05, 8.969500000000075e-05, 8.947200000000016e-05, 8.99999999999998e-05, 8.977799999999869e-05, 8.936200000000255e-05, 8.958400000000366e-05, 8.958300000000419e-05, 8.945800000000059e-05, 8.955499999999811e-05, 8.947299999999964e-05, 8.974999999999955e-05, 8.969500000000075e-05, 8.947200000000016e-05, 8.974999999999955e-05, 9.006999999999765e-05, 8.986100000000358e-05, 9.004200000000545e-05, 8.96529999999951e-05, 8.924999999999905e-05, 8.970800000000084e-05, 8.970900000000032e-05, 8.998600000000023e-05, 9.011100000000383e-05, 9.004200000000545e-05, 9.018099999999474e-05, 8.973599999999998e-05, 8.993100000000143e-05, 9.025000000000005e-05, 8.993000000000195e-05, 8.986100000000358e-05, 8.933300000000394e-05, 9.001399999999937e-05, 8.932000000000384e-05, 8.936099999999614e-05, 9.018100000000168e-05, 8.961100000000333e-05]</msg>
<status status="PASS" starttime="20201115 23:02:41.252" endtime="20201115 23:02:41.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.241" endtime="20201115 23:02:41.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.265" endtime="20201115 23:02:41.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.273" endtime="20201115 23:02:41.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.269" endtime="20201115 23:02:41.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.261" endtime="20201115 23:02:41.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.735" endtime="20201115 23:02:41.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.731" endtime="20201115 23:02:41.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.729" endtime="20201115 23:02:41.300"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.305" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.327" endtime="20201115 23:02:41.349"></status>
</kw>
<msg timestamp="20201115 23:02:41.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.324" endtime="20201115 23:02:41.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.353" endtime="20201115 23:02:41.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.359" endtime="20201115 23:02:41.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.316" endtime="20201115 23:02:41.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.311" endtime="20201115 23:02:41.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.382" endtime="20201115 23:02:41.729"></status>
</kw>
<msg timestamp="20201115 23:02:41.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04700075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047091306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:41.379" endtime="20201115 23:02:41.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04700075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047091306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:41.739" endtime="20201115 23:02:41.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.758" endtime="20201115 23:02:41.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.372" endtime="20201115 23:02:41.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.367" endtime="20201115 23:02:41.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.777" level="INFO">${RESULT} = [{'time': 0.047091306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.055599999999858e-05, 'source_diff': 9.055599999999858e-05}, {'time': 0.047200333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:41.768" endtime="20201115 23:02:41.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.808" level="INFO">${ACCURACY} = {'time': [0.047091306, 0.047200333, 0.047307306, 0.047408403, 0.047511333, 0.047616347, 0.047721375, 0.047828361, 0.047938417, 0.048046389, 0.048145417, 0.048251417, 0.048354431, 0.048464444, 0.048571...</msg>
<status status="PASS" starttime="20201115 23:02:41.779" endtime="20201115 23:02:41.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.819" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.817" endtime="20201115 23:02:41.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.825" level="INFO">VALUE: [9.055599999999858e-05, 9.056899999999868e-05, 9.09870000000007e-05, 9.11250000000044e-05, 9.034700000000451e-05, 9.043000000000245e-05, 9.05000000000003e-05, 9.073600000000098e-05, 9.094499999999506e-05, 9.033300000000494e-05, 9.088900000000372e-05, 9.126400000000062e-05, 9.037500000000365e-05, 9.087500000000415e-05, 9.058299999999825e-05, 9.065300000000304e-05, 9.038900000000322e-05, 9.113900000000397e-05, 9.090300000000329e-05, 9.087500000000415e-05, 9.079199999999926e-05, 9.04450000000015e-05, 9.095900000000157e-05, 9.097300000000114e-05, 9.122200000000191e-05, 9.047200000000116e-05, 9.048600000000073e-05, 9.027799999999919e-05, 9.06659999999962e-05, 9.083300000000544e-05, 9.104199999999951e-05, 9.068100000000218e-05, 9.075000000000055e-05, 9.119400000000277e-05, 9.072300000000089e-05, 9.036099999999714e-05, 9.102700000000047e-05, 9.036099999999714e-05, 9.06250000000039e-05, 9.06250000000039e-05, 9.032000000000484e-05, 9.119499999999531e-05, 9.08199999999984e-05, 9.088899999999678e-05, 9.124999999999411e-05, 9.029099999999929e-05, 9.045900000000107e-05, 9.072200000000141e-05, 9.051399999999987e-05, 9.025000000000005e-05]</msg>
<status status="PASS" starttime="20201115 23:02:41.821" endtime="20201115 23:02:41.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.810" endtime="20201115 23:02:41.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.833" endtime="20201115 23:02:41.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.841" endtime="20201115 23:02:41.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.837" endtime="20201115 23:02:41.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.829" endtime="20201115 23:02:41.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.307" endtime="20201115 23:02:41.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.303" endtime="20201115 23:02:41.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.301" endtime="20201115 23:02:41.868"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.895" endtime="20201115 23:02:41.917"></status>
</kw>
<msg timestamp="20201115 23:02:41.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.892" endtime="20201115 23:02:41.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.921" endtime="20201115 23:02:41.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.927" endtime="20201115 23:02:41.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.884" endtime="20201115 23:02:41.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.879" endtime="20201115 23:02:41.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.950" endtime="20201115 23:02:42.297"></status>
</kw>
<msg timestamp="20201115 23:02:42.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047140222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047232389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.947" endtime="20201115 23:02:42.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047140222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047232389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.307" endtime="20201115 23:02:42.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.326" endtime="20201115 23:02:42.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.940" endtime="20201115 23:02:42.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.935" endtime="20201115 23:02:42.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.344" level="INFO">${RESULT} = [{'time': 0.047232389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.216699999999717e-05, 'source_diff': 9.216699999999717e-05}, {'time': 0.047339375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.335" endtime="20201115 23:02:42.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.374" level="INFO">${ACCURACY} = {'time': [0.047232389, 0.047339375, 0.047442403, 0.047543403, 0.047650403, 0.047750444, 0.047854431, 0.047957458, 0.048056444, 0.048167458, 0.048278472, 0.048388486, 0.048495528, 0.048604528, 0.048705...</msg>
<status status="PASS" starttime="20201115 23:02:42.346" endtime="20201115 23:02:42.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.385" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.383" endtime="20201115 23:02:42.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.390" level="INFO">VALUE: [9.216699999999717e-05, 9.183300000000644e-05, 9.136099999999814e-05, 9.143099999999599e-05, 9.143100000000293e-05, 9.134700000000551e-05, 9.127800000000019e-05, 9.219400000000377e-05, 9.177699999999428e-05, 9.209700000000626e-05, 9.186100000000558e-05, 9.193000000000395e-05, 9.169500000000275e-05, 9.156999999999915e-05, 9.193099999999649e-05, 9.190299999999735e-05, 9.129199999999976e-05, 9.194399999999658e-05, 9.137499999999771e-05, 9.186099999999864e-05, 9.22079999999964e-05, 9.209699999999932e-05, 9.193000000000395e-05, 9.175000000000155e-05, 9.188900000000472e-05, 9.141700000000336e-05, 9.213899999999803e-05, 9.151400000000087e-05, 9.154200000000001e-05, 9.20000000000018e-05, 9.136099999999814e-05, 9.223600000000248e-05, 9.137500000000465e-05, 9.226400000000162e-05, 9.212499999999846e-05, 9.198600000000223e-05, 9.168100000000318e-05, 9.148600000000173e-05, 9.162499999999796e-05, 9.217999999999726e-05, 9.137499999999771e-05, 9.152700000000097e-05, 9.194399999999658e-05, 9.201400000000137e-05, 9.168099999999624e-05, 9.130599999999933e-05, 9.172199999999547e-05, 9.136099999999814e-05, 9.223600000000248e-05, 9.181899999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.387" endtime="20201115 23:02:42.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.376" endtime="20201115 23:02:42.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.399" endtime="20201115 23:02:42.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.407" endtime="20201115 23:02:42.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.403" endtime="20201115 23:02:42.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.395" endtime="20201115 23:02:42.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.875" endtime="20201115 23:02:42.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.871" endtime="20201115 23:02:42.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.869" endtime="20201115 23:02:42.434"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.439" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.461" endtime="20201115 23:02:42.484"></status>
</kw>
<msg timestamp="20201115 23:02:42.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.458" endtime="20201115 23:02:42.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.487" endtime="20201115 23:02:42.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.493" endtime="20201115 23:02:42.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.450" endtime="20201115 23:02:42.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.445" endtime="20201115 23:02:42.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.517" endtime="20201115 23:02:42.866"></status>
</kw>
<msg timestamp="20201115 23:02:42.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046850458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046943486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.513" endtime="20201115 23:02:42.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046850458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046943486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.876" endtime="20201115 23:02:42.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.895" endtime="20201115 23:02:42.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.506" endtime="20201115 23:02:42.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.502" endtime="20201115 23:02:42.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.914" level="INFO">${RESULT} = [{'time': 0.046943486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.302800000000194e-05, 'source_diff': 9.302800000000194e-05}, {'time': 0.047046486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.905" endtime="20201115 23:02:42.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.944" level="INFO">${ACCURACY} = {'time': [0.046943486, 0.047046486, 0.047150514, 0.047260528, 0.047372528, 0.047484528, 0.047590542, 0.047695556, 0.047802569, 0.047905583, 0.048013583, 0.048122597, 0.048229653, 0.048330625, 0.048432...</msg>
<status status="PASS" starttime="20201115 23:02:42.916" endtime="20201115 23:02:42.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.955" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.953" endtime="20201115 23:02:42.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.960" level="INFO">VALUE: [9.302800000000194e-05, 9.287499999999921e-05, 9.261099999999939e-05, 9.2945000000004e-05, 9.24859999999958e-05, 9.284700000000007e-05, 9.287499999999921e-05, 9.234799999999904e-05, 9.241600000000488e-05, 9.287499999999921e-05, 9.284700000000007e-05, 9.316600000000563e-05, 9.295899999999663e-05, 9.272200000000341e-05, 9.27079999999969e-05, 9.245799999999665e-05, 9.290299999999835e-05, 9.269399999999733e-05, 9.243099999999699e-05, 9.311099999999989e-05, 9.295800000000409e-05, 9.237499999999871e-05, 9.291599999999844e-05, 9.252800000000144e-05, 9.272200000000341e-05, 9.295800000000409e-05, 9.318099999999774e-05, 9.245900000000307e-05, 9.262499999999896e-05, 9.322299999999645e-05, 9.32079999999974e-05, 9.273599999999604e-05, 9.280500000000136e-05, 9.236099999999914e-05, 9.231900000000043e-05, 9.311099999999989e-05, 9.287499999999921e-05, 9.279199999999432e-05, 9.23199999999999e-05, 9.226400000000162e-05, 9.222199999999597e-05, 9.279200000000126e-05, 9.297200000000366e-05, 9.267999999999776e-05, 9.24450000000035e-05, 9.272200000000341e-05, 9.290300000000529e-05, 9.247199999999622e-05, 9.237500000000565e-05, 9.254200000000101e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.957" endtime="20201115 23:02:42.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.946" endtime="20201115 23:02:42.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.969" endtime="20201115 23:02:42.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.977" endtime="20201115 23:02:42.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.973" endtime="20201115 23:02:43.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.964" endtime="20201115 23:02:43.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.441" endtime="20201115 23:02:43.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.437" endtime="20201115 23:02:43.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.435" endtime="20201115 23:02:43.004"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.009" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.031" endtime="20201115 23:02:43.053"></status>
</kw>
<msg timestamp="20201115 23:02:43.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.028" endtime="20201115 23:02:43.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.056" endtime="20201115 23:02:43.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.063" endtime="20201115 23:02:43.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.020" endtime="20201115 23:02:43.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.015" endtime="20201115 23:02:43.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.087" endtime="20201115 23:02:43.435"></status>
</kw>
<msg timestamp="20201115 23:02:43.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046887583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.084" endtime="20201115 23:02:43.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046887583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.445" endtime="20201115 23:02:43.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.464" endtime="20201115 23:02:43.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.076" endtime="20201115 23:02:43.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.072" endtime="20201115 23:02:43.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:43.481" level="INFO">${RESULT} = [{'time': 0.046887583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402699999999653e-05, 'source_diff': 9.402699999999653e-05}, {'time': 0.046989583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:43.472" endtime="20201115 23:02:43.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:43.514" level="INFO">${ACCURACY} = {'time': [0.046887583, 0.046989583, 0.047094667, 0.047202597, 0.047312625, 0.047424639, 0.047532639, 0.047644708, 0.047746681, 0.047848681, 0.047951736, 0.048064722, 0.048176708, 0.048288722, 0.048390...</msg>
<status status="PASS" starttime="20201115 23:02:43.483" endtime="20201115 23:02:43.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.525" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:43.523" endtime="20201115 23:02:43.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.530" level="INFO">VALUE: [9.402699999999653e-05, 9.375000000000355e-05, 9.383400000000097e-05, 9.411100000000089e-05, 9.338899999999928e-05, 9.41529999999996e-05, 9.387500000000021e-05, 9.356900000000168e-05, 9.39729999999972e-05, 9.374999999999661e-05, 9.426400000000362e-05, 9.392999999999901e-05, 9.392999999999901e-05, 9.395799999999815e-05, 9.419500000000525e-05, 9.366700000000561e-05, 9.329200000000176e-05, 9.35000000000033e-05, 9.338899999999928e-05, 9.359700000000082e-05, 9.336100000000014e-05, 9.395799999999815e-05, 9.326299999999621e-05, 9.338899999999928e-05, 9.419399999999883e-05, 9.354200000000201e-05, 9.377800000000269e-05, 9.391699999999892e-05, 9.361100000000039e-05, 9.408399999999428e-05, 9.426400000000362e-05, 9.379199999999532e-05, 9.336199999999961e-05, 9.334700000000057e-05, 9.4027999999996e-05, 9.412500000000046e-05, 9.386100000000064e-05, 9.39859999999973e-05, 9.377799999999575e-05, 9.359800000000029e-05, 9.351400000000287e-05, 9.393100000000543e-05, 9.4027999999996e-05, 9.401400000000337e-05, 9.394399999999858e-05, 9.340299999999885e-05, 9.358300000000125e-05, 9.387500000000021e-05, 9.355600000000158e-05, 9.336100000000014e-05]</msg>
<status status="PASS" starttime="20201115 23:02:43.528" endtime="20201115 23:02:43.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.516" endtime="20201115 23:02:43.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.534" endtime="20201115 23:02:43.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:43.538" endtime="20201115 23:02:43.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.536" endtime="20201115 23:02:43.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.532" endtime="20201115 23:02:43.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.011" endtime="20201115 23:02:43.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.007" endtime="20201115 23:02:43.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.005" endtime="20201115 23:02:43.559"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.562" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.573" endtime="20201115 23:02:43.592"></status>
</kw>
<msg timestamp="20201115 23:02:43.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.571" endtime="20201115 23:02:43.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.594" endtime="20201115 23:02:43.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.597" endtime="20201115 23:02:43.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.567" endtime="20201115 23:02:43.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.565" endtime="20201115 23:02:43.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.608" endtime="20201115 23:02:43.894"></status>
</kw>
<msg timestamp="20201115 23:02:43.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027481722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027576208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.606" endtime="20201115 23:02:43.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027481722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027576208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.898" endtime="20201115 23:02:43.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.906" endtime="20201115 23:02:43.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.603" endtime="20201115 23:02:43.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.601" endtime="20201115 23:02:43.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:43.916" level="INFO">${RESULT} = [{'time': 0.027576208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.448600000000126e-05, 'source_diff': 9.448600000000126e-05}, {'time': 0.027683194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:43.912" endtime="20201115 23:02:43.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:43.929" level="INFO">${ACCURACY} = {'time': [0.027576208, 0.027683194, 0.027794208, 0.027897236, 0.028011222, 0.028114306, 0.02822525, 0.028328278, 0.028434319, 0.028539292, 0.028647292, 0.028756319, 0.028859319, 0.028968417, 0.0290823...</msg>
<status status="PASS" starttime="20201115 23:02:43.917" endtime="20201115 23:02:43.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.934" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:43.933" endtime="20201115 23:02:43.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.937" level="INFO">VALUE: [9.448600000000126e-05, 9.498600000000176e-05, 9.434700000000157e-05, 9.511099999999842e-05, 9.456899999999921e-05, 9.477800000000022e-05, 9.459700000000182e-05, 9.487499999999774e-05, 9.462500000000096e-05, 9.443100000000246e-05, 9.469500000000228e-05, 9.442999999999951e-05, 9.493000000000001e-05, 9.516700000000017e-05, 9.508300000000275e-05, 9.451399999999693e-05, 9.511099999999842e-05, 9.486099999999817e-05, 9.524999999999811e-05, 9.479199999999979e-05, 9.444499999999856e-05, 9.456899999999921e-05, 9.443100000000246e-05, 9.491600000000044e-05, 9.427799999999972e-05, 9.475000000000108e-05, 9.463900000000053e-05, 9.455599999999911e-05, 9.477800000000022e-05, 9.472300000000142e-05, 9.502800000000047e-05, 9.468099999999924e-05, 9.44720000000017e-05, 9.475000000000108e-05, 9.509700000000232e-05, 9.495799999999915e-05, 9.488900000000078e-05, 9.451399999999693e-05, 9.508300000000275e-05, 9.501400000000437e-05, 9.511100000000189e-05, 9.470899999999838e-05, 9.493099999999949e-05, 9.51660000000007e-05, 9.50000000000048e-05, 9.437500000000071e-05, 9.449999999999736e-05, 9.434700000000157e-05, 9.46530000000001e-05, 9.459699999999488e-05]</msg>
<status status="PASS" starttime="20201115 23:02:43.935" endtime="20201115 23:02:43.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.930" endtime="20201115 23:02:43.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.941" endtime="20201115 23:02:43.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:43.945" endtime="20201115 23:02:43.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.943" endtime="20201115 23:02:43.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.939" endtime="20201115 23:02:43.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.563" endtime="20201115 23:02:43.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.561" endtime="20201115 23:02:43.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.560" endtime="20201115 23:02:43.968"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.981" endtime="20201115 23:02:44.000"></status>
</kw>
<msg timestamp="20201115 23:02:44.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.979" endtime="20201115 23:02:44.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.002" endtime="20201115 23:02:44.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.005" endtime="20201115 23:02:44.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.976" endtime="20201115 23:02:44.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.973" endtime="20201115 23:02:44.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.016" endtime="20201115 23:02:44.346"></status>
</kw>
<msg timestamp="20201115 23:02:44.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028558111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028653917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.014" endtime="20201115 23:02:44.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028558111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028653917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.355" endtime="20201115 23:02:44.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.374" endtime="20201115 23:02:44.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.011" endtime="20201115 23:02:44.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.009" endtime="20201115 23:02:44.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.392" level="INFO">${RESULT} = [{'time': 0.028653917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580600000000036e-05, 'source_diff': 9.580600000000036e-05}, {'time': 0.028762972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:44.383" endtime="20201115 23:02:44.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.422" level="INFO">${ACCURACY} = {'time': [0.028653917, 0.028762972, 0.028867958, 0.028974958, 0.029089972, 0.029194, 0.029301986, 0.029407, 0.029518014, 0.029627042, 0.029740056, 0.029855056, 0.029966083, 0.030082069, 0.030186097, 0...</msg>
<status status="PASS" starttime="20201115 23:02:44.394" endtime="20201115 23:02:44.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.433" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:44.430" endtime="20201115 23:02:44.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.438" level="INFO">VALUE: [9.580600000000036e-05, 9.554100000000107e-05, 9.613899999999856e-05, 9.580499999999742e-05, 9.549999999999836e-05, 9.56530000000011e-05, 9.597199999999972e-05, 9.58469999999996e-05, 9.62080000000004e-05, 9.59729999999992e-05, 9.600000000000233e-05, 9.605600000000061e-05, 9.56660000000012e-05, 9.561099999999892e-05, 9.531899999999996e-05, 9.569400000000033e-05, 9.529200000000029e-05, 9.611100000000289e-05, 9.580600000000036e-05, 9.54019999999979e-05, 9.593100000000049e-05, 9.587500000000221e-05, 9.593100000000049e-05, 9.562499999999849e-05, 9.613900000000203e-05, 9.586100000000264e-05, 9.559699999999588e-05, 9.624999999999911e-05, 9.616700000000117e-05, 9.530600000000333e-05, 9.595899999999963e-05, 9.604199999999757e-05, 9.527799999999725e-05, 9.522299999999845e-05, 9.573600000000598e-05, 9.583299999999656e-05, 9.588899999999484e-05, 9.584699999999613e-05, 9.5333000000003e-05, 9.587500000000221e-05, 9.529200000000376e-05, 9.569499999999981e-05, 9.595899999999963e-05, 9.537500000000171e-05, 9.584700000000307e-05, 9.584699999999613e-05, 9.590200000000187e-05, 9.594400000000058e-05, 9.574999999999861e-05, 9.595800000000015e-05]</msg>
<status status="PASS" starttime="20201115 23:02:44.435" endtime="20201115 23:02:44.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.424" endtime="20201115 23:02:44.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.448" endtime="20201115 23:02:44.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:44.456" endtime="20201115 23:02:44.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.452" endtime="20201115 23:02:44.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.443" endtime="20201115 23:02:44.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.971" endtime="20201115 23:02:44.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.969" endtime="20201115 23:02:44.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.968" endtime="20201115 23:02:44.482"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.488" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.509" endtime="20201115 23:02:44.532"></status>
</kw>
<msg timestamp="20201115 23:02:44.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.506" endtime="20201115 23:02:44.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.535" endtime="20201115 23:02:44.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.541" endtime="20201115 23:02:44.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.499" endtime="20201115 23:02:44.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.493" endtime="20201115 23:02:44.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.565" endtime="20201115 23:02:44.915"></status>
</kw>
<msg timestamp="20201115 23:02:44.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046765528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.561" endtime="20201115 23:02:44.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046765528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.924" endtime="20201115 23:02:44.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.943" endtime="20201115 23:02:44.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.554" endtime="20201115 23:02:44.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.550" endtime="20201115 23:02:44.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.962" level="INFO">${RESULT} = [{'time': 0.046765528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.713900000000303e-05, 'source_diff': 9.713900000000303e-05}, {'time': 0.046874528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:44.953" endtime="20201115 23:02:44.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.992" level="INFO">${ACCURACY} = {'time': [0.046765528, 0.046874528, 0.046978528, 0.047085569, 0.047193597, 0.047304597, 0.047414583, 0.047530611, 0.047642653, 0.047757611, 0.047870667, 0.047978639, 0.048082681, 0.048198667, 0.048309...</msg>
<status status="PASS" starttime="20201115 23:02:44.964" endtime="20201115 23:02:44.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.003" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:45.001" endtime="20201115 23:02:45.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.009" level="INFO">VALUE: [9.713900000000303e-05, 9.634699999999663e-05, 9.627799999999825e-05, 9.668000000000176e-05, 9.70409999999991e-05, 9.694399999999465e-05, 9.691600000000244e-05, 9.712500000000346e-05, 9.684699999999713e-05, 9.665299999999516e-05, 9.644500000000056e-05, 9.658299999999731e-05, 9.63200000000039e-05, 9.64859999999998e-05, 9.726399999999968e-05, 9.705499999999867e-05, 9.72080000000014e-05, 9.644400000000108e-05, 9.719500000000131e-05, 9.643100000000099e-05, 9.663900000000253e-05, 9.633400000000347e-05, 9.673600000000004e-05, 9.704199999999857e-05, 9.658400000000372e-05, 9.694399999999465e-05, 9.655499999999817e-05, 9.65409999999986e-05, 9.695799999999422e-05, 9.63609999999962e-05, 9.695800000000115e-05, 9.69860000000003e-05, 9.63609999999962e-05, 9.630600000000433e-05, 9.674999999999961e-05, 9.727699999999978e-05, 9.637500000000271e-05, 9.705499999999867e-05, 9.67080000000009e-05, 9.644400000000108e-05, 9.651399999999893e-05, 9.681899999999799e-05, 9.680600000000483e-05, 9.67080000000009e-05, 9.725000000000011e-05, 9.629199999999782e-05, 9.665299999999516e-05, 9.64859999999998e-05, 9.729200000000576e-05, 9.663899999999559e-05]</msg>
<status status="PASS" starttime="20201115 23:02:45.005" endtime="20201115 23:02:45.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.994" endtime="20201115 23:02:45.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.018" endtime="20201115 23:02:45.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:45.026" endtime="20201115 23:02:45.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.022" endtime="20201115 23:02:45.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.013" endtime="20201115 23:02:45.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.489" endtime="20201115 23:02:45.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.485" endtime="20201115 23:02:45.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.483" endtime="20201115 23:02:45.053"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.080" endtime="20201115 23:02:45.103"></status>
</kw>
<msg timestamp="20201115 23:02:45.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.077" endtime="20201115 23:02:45.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.106" endtime="20201115 23:02:45.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.112" endtime="20201115 23:02:45.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.069" endtime="20201115 23:02:45.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.064" endtime="20201115 23:02:45.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.136" endtime="20201115 23:02:45.485"></status>
</kw>
<msg timestamp="20201115 23:02:45.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046922986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047020292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.132" endtime="20201115 23:02:45.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046922986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047020292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.494" endtime="20201115 23:02:45.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.513" endtime="20201115 23:02:45.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.125" endtime="20201115 23:02:45.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.120" endtime="20201115 23:02:45.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:45.531" level="INFO">${RESULT} = [{'time': 0.047020292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.73059999999984e-05, 'source_diff': 9.73059999999984e-05}, {'time': 0.047133333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:45.522" endtime="20201115 23:02:45.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:45.571" level="INFO">${ACCURACY} = {'time': [0.047020292, 0.047133333, 0.047248319, 0.047360347, 0.047476347, 0.047590375, 0.047705417, 0.047810389, 0.047921417, 0.048030417, 0.048138444, 0.048254417, 0.048364431, 0.048479458, 0.048590...</msg>
<status status="PASS" starttime="20201115 23:02:45.539" endtime="20201115 23:02:45.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.582" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:45.580" endtime="20201115 23:02:45.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.587" level="INFO">VALUE: [9.73059999999984e-05, 9.811099999999795e-05, 9.797199999999479e-05, 9.788899999999684e-05, 9.750000000000036e-05, 9.743099999999505e-05, 9.781999999999846e-05, 9.779199999999932e-05, 9.819500000000231e-05, 9.781999999999846e-05, 9.769400000000233e-05, 9.729199999999882e-05, 9.800000000000086e-05, 9.730500000000586e-05, 9.734700000000457e-05, 9.761099999999745e-05, 9.825000000000111e-05, 9.80410000000001e-05, 9.798599999999436e-05, 9.769499999999487e-05, 9.787499999999727e-05, 9.772300000000095e-05, 9.76939999999954e-05, 9.76660000000032e-05, 9.825000000000111e-05, 9.777799999999975e-05, 9.734700000000457e-05, 9.826400000000068e-05, 9.820899999999494e-05, 9.751399999999993e-05, 9.784699999999813e-05, 9.794499999999512e-05, 9.741600000000294e-05, 9.766700000000267e-05, 9.7333000000005e-05, 9.787500000000421e-05, 9.784699999999813e-05, 9.788899999999684e-05, 9.777799999999975e-05, 9.763899999999659e-05, 9.827800000000025e-05, 9.78479999999976e-05, 9.788900000000378e-05, 9.74860000000008e-05, 9.80410000000001e-05, 9.775000000000061e-05, 9.734699999999763e-05, 9.729199999999882e-05, 9.804199999999957e-05, 9.777799999999975e-05]</msg>
<status status="PASS" starttime="20201115 23:02:45.584" endtime="20201115 23:02:45.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.573" endtime="20201115 23:02:45.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.596" endtime="20201115 23:02:45.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:45.604" endtime="20201115 23:02:45.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.600" endtime="20201115 23:02:45.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.592" endtime="20201115 23:02:45.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.060" endtime="20201115 23:02:45.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.056" endtime="20201115 23:02:45.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.054" endtime="20201115 23:02:45.631"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.636" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.658" endtime="20201115 23:02:45.681"></status>
</kw>
<msg timestamp="20201115 23:02:45.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.654" endtime="20201115 23:02:45.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.684" endtime="20201115 23:02:45.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.691" endtime="20201115 23:02:45.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.647" endtime="20201115 23:02:45.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.641" endtime="20201115 23:02:45.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.714" endtime="20201115 23:02:46.061"></status>
</kw>
<msg timestamp="20201115 23:02:46.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046773653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046871944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.711" endtime="20201115 23:02:46.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046773653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046871944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.071" endtime="20201115 23:02:46.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.090" endtime="20201115 23:02:46.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.703" endtime="20201115 23:02:46.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.699" endtime="20201115 23:02:46.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.109" level="INFO">${RESULT} = [{'time': 0.046871944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.829100000000035e-05, 'source_diff': 9.829100000000035e-05}, {'time': 0.046988903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:46.100" endtime="20201115 23:02:46.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.139" level="INFO">${ACCURACY} = {'time': [0.046871944, 0.046988903, 0.047100903, 0.047211917, 0.047319944, 0.047426944, 0.047542944, 0.047649986, 0.047763986, 0.047877986, 0.047986, 0.048103, 0.048210042, 0.048327028, 0.048442056, 0...</msg>
<status status="PASS" starttime="20201115 23:02:46.111" endtime="20201115 23:02:46.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.150" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.148" endtime="20201115 23:02:46.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.156" level="INFO">VALUE: [9.829100000000035e-05, 9.850000000000136e-05, 9.895900000000263e-05, 9.920899999999594e-05, 9.893000000000401e-05, 9.831899999999949e-05, 9.879099999999391e-05, 9.83609999999982e-05, 9.88609999999987e-05, 9.90139999999945e-05, 9.911099999999895e-05, 9.890299999999741e-05, 9.833399999999853e-05, 9.829199999999982e-05, 9.924999999999518e-05, 9.880500000000042e-05, 9.900000000000186e-05, 9.892999999999708e-05, 9.844399999999615e-05, 9.879100000000085e-05, 9.894500000000306e-05, 9.837499999999777e-05, 9.901400000000143e-05, 9.9028000000001e-05, 9.837500000000471e-05, 9.926400000000168e-05, 9.837499999999777e-05, 9.87359999999951e-05, 9.877800000000075e-05, 9.83609999999982e-05, 9.866699999999673e-05, 9.837500000000471e-05, 9.845900000000213e-05, 9.83059999999994e-05, 9.854099999999366e-05, 9.912499999999852e-05, 9.900000000000186e-05, 9.850000000000136e-05, 9.870900000000238e-05, 9.851400000000093e-05, 9.844500000000256e-05, 9.856999999999921e-05, 9.877800000000075e-05, 9.920899999999594e-05, 9.88609999999987e-05, 9.866699999999673e-05, 9.884699999999913e-05, 9.861099999999845e-05, 9.87080000000029e-05, 9.87080000000029e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.153" endtime="20201115 23:02:46.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.141" endtime="20201115 23:02:46.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.164" endtime="20201115 23:02:46.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.173" endtime="20201115 23:02:46.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.169" endtime="20201115 23:02:46.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.160" endtime="20201115 23:02:46.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.638" endtime="20201115 23:02:46.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.634" endtime="20201115 23:02:46.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.632" endtime="20201115 23:02:46.200"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.206" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.228" endtime="20201115 23:02:46.250"></status>
</kw>
<msg timestamp="20201115 23:02:46.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.224" endtime="20201115 23:02:46.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.254" endtime="20201115 23:02:46.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.260" endtime="20201115 23:02:46.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.217" endtime="20201115 23:02:46.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.211" endtime="20201115 23:02:46.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.284" endtime="20201115 23:02:46.632"></status>
</kw>
<msg timestamp="20201115 23:02:46.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048082069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048181611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.280" endtime="20201115 23:02:46.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048082069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048181611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.641" endtime="20201115 23:02:46.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.660" endtime="20201115 23:02:46.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.273" endtime="20201115 23:02:46.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.268" endtime="20201115 23:02:46.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.677" level="INFO">${RESULT} = [{'time': 0.048181611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.954200000000107e-05, 'source_diff': 9.954200000000107e-05}, {'time': 0.048293653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:46.668" endtime="20201115 23:02:46.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.707" level="INFO">${ACCURACY} = {'time': [0.048181611, 0.048293653, 0.048413639, 0.048526653, 0.048641667, 0.048760681, 0.048867694, 0.048975722, 0.049093708, 0.049210722, 0.049321736, 0.04943975, 0.049555764, 0.049663819, 0.0497737...</msg>
<status status="PASS" starttime="20201115 23:02:46.679" endtime="20201115 23:02:46.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.718" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.716" endtime="20201115 23:02:46.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.724" level="INFO">VALUE: [9.954200000000107e-05, 9.961099999999945e-05, 9.984700000000013e-05, 9.966700000000467e-05, 9.945899999999619e-05, 9.950000000000236e-05, 9.950000000000236e-05, 9.955500000000117e-05, 9.992999999999808e-05, 9.93609999999992e-05, 9.980500000000142e-05, 9.954199999999414e-05, 0.00010004200000000157, 9.93609999999992e-05, 0.00010026399999999575, 9.977800000000175e-05, 9.959699999999988e-05, 9.979100000000185e-05, 9.97080000000039e-05, 9.961099999999945e-05, 9.962499999999902e-05, 9.98060000000009e-05, 9.987499999999927e-05, 9.969499999999687e-05, 0.0001000559999999942, 9.962499999999902e-05, 0.00010020899999999694, 9.995800000000415e-05, 0.000100028000000002, 9.949999999999543e-05, 9.944499999999662e-05, 0.00010009700000000038, 9.937499999999877e-05, 9.987499999999927e-05, 9.983400000000003e-05, 9.98479999999996e-05, 9.988899999999884e-05, 9.981900000000099e-05, 9.992999999999808e-05, 9.934699999999963e-05, 9.987500000000621e-05, 9.943100000000399e-05, 9.962499999999902e-05, 9.958300000000031e-05, 9.972199999999654e-05, 9.970799999999697e-05, 9.963899999999859e-05, 9.999999999999593e-05, 0.00010006900000000124, 9.947199999999629e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.720" endtime="20201115 23:02:46.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.709" endtime="20201115 23:02:46.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.733" endtime="20201115 23:02:46.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.741" endtime="20201115 23:02:46.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.736" endtime="20201115 23:02:46.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.728" endtime="20201115 23:02:46.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.207" endtime="20201115 23:02:46.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.203" endtime="20201115 23:02:46.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.201" endtime="20201115 23:02:46.767"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.773" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.794" endtime="20201115 23:02:46.817"></status>
</kw>
<msg timestamp="20201115 23:02:46.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.791" endtime="20201115 23:02:46.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.820" endtime="20201115 23:02:46.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.827" endtime="20201115 23:02:46.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.784" endtime="20201115 23:02:46.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.778" endtime="20201115 23:02:46.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.851" endtime="20201115 23:02:47.199"></status>
</kw>
<msg timestamp="20201115 23:02:47.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046718681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046819792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.848" endtime="20201115 23:02:47.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046718681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046819792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.208" endtime="20201115 23:02:47.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.226" endtime="20201115 23:02:47.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.840" endtime="20201115 23:02:47.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.836" endtime="20201115 23:02:47.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:47.246" level="INFO">${RESULT} = [{'time': 0.046819792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010111100000000095, 'source_diff': 0.00010111100000000095}, {'time': 0.046936792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:47.237" endtime="20201115 23:02:47.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:47.276" level="INFO">${ACCURACY} = {'time': [0.046819792, 0.046936792, 0.047053806, 0.047161819, 0.047275875, 0.047385903, 0.047496847, 0.047612931, 0.047729917, 0.047839944, 0.047947917, 0.048059931, 0.048175944, 0.048285944, 0.048395...</msg>
<status status="PASS" starttime="20201115 23:02:47.248" endtime="20201115 23:02:47.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.287" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:47.284" endtime="20201115 23:02:47.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.292" level="INFO">VALUE: [0.00010111100000000095, 0.00010027799999999532, 0.00010113900000000009, 0.00010079100000000285, 0.00010054200000000207, 0.00010094499999999812, 0.00010125000000000411, 0.00010052799999999557, 0.00010045899999999719, 0.00010113800000000062, 0.0001005280000000025, 0.00010105600000000214, 0.00010109700000000138, 0.00010108299999999487, 0.00010127700000000378, 0.0001003610000000002, 0.00010101400000000343, 0.00010050000000000336, 0.00010109700000000138, 0.00010127800000000325, 0.0001009860000000043, 0.00010126399999999675, 0.00010073700000000352, 0.00010120799999999847, 0.00010092999999999908, 0.0001005280000000025, 0.00010047199999999729, 0.00010105500000000267, 0.00010072199999999754, 0.00010070799999999797, 0.00010095900000000463, 0.00010090299999999941, 0.0001008610000000007, 0.00010088899999999984, 0.00010090199999999994, 0.00010031899999999455, 0.00010040299999999891, 0.00010084699999999419, 0.00010091700000000592, 0.0001003610000000002, 0.00010075000000000361, 0.00010104199999999564, 0.00010027799999999532, 0.00010059700000000088, 0.00010118100000000574, 0.00010083299999999462, 0.00010062500000000002, 0.00010084700000000113, 0.00010034700000000063, 0.00010126400000000368]</msg>
<status status="PASS" starttime="20201115 23:02:47.289" endtime="20201115 23:02:47.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.278" endtime="20201115 23:02:47.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.301" endtime="20201115 23:02:47.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:47.309" endtime="20201115 23:02:47.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.305" endtime="20201115 23:02:47.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.296" endtime="20201115 23:02:47.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.774" endtime="20201115 23:02:47.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.770" endtime="20201115 23:02:47.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.768" endtime="20201115 23:02:47.336"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.364" endtime="20201115 23:02:47.386"></status>
</kw>
<msg timestamp="20201115 23:02:47.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.360" endtime="20201115 23:02:47.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.387" endtime="20201115 23:02:47.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.390" endtime="20201115 23:02:47.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.352" endtime="20201115 23:02:47.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.346" endtime="20201115 23:02:47.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.401" endtime="20201115 23:02:47.689"></status>
</kw>
<msg timestamp="20201115 23:02:47.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048267931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048369542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.400" endtime="20201115 23:02:47.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048267931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048369542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.693" endtime="20201115 23:02:47.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.701" endtime="20201115 23:02:47.703"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.396" endtime="20201115 23:02:47.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.394" endtime="20201115 23:02:47.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:47.709" level="INFO">${RESULT} = [{'time': 0.048369542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010161100000000145, 'source_diff': 0.00010161100000000145}, {'time': 0.048478556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:47.705" endtime="20201115 23:02:47.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:47.724" level="INFO">${ACCURACY} = {'time': [0.048369542, 0.048478556, 0.048597556, 0.048718569, 0.048835597, 0.048947611, 0.049062625, 0.049171639, 0.049283625, 0.049399639, 0.049513681, 0.049630667, 0.049751681, 0.049867694, 0.049988...</msg>
<status status="PASS" starttime="20201115 23:02:47.710" endtime="20201115 23:02:47.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.729" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:47.728" endtime="20201115 23:02:47.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.732" level="INFO">VALUE: [0.00010161100000000145, 0.00010173699999999758, 0.00010199999999999793, 0.00010183300000000256, 0.00010138900000000034, 0.0001018610000000017, 0.0001016939999999994, 0.00010159700000000188, 0.00010224999999999818, 0.00010170799999999897, 0.00010161199999999398, 0.000102028000000004, 0.00010129199999999589, 0.00010212499999999458, 0.0001016939999999994, 0.00010173600000000504, 0.00010141699999999948, 0.0001017359999999981, 0.00010166699999999973, 0.00010179100000000385, 0.00010132000000000196, 0.0001014860000000048, 0.0001021939999999999, 0.00010187499999999433, 0.00010208300000000281, 0.00010142999999999958, 0.00010137500000000077, 0.00010141699999999948, 0.00010222199999999904, 0.00010209699999999544, 0.00010176399999999725, 0.00010187499999999433, 0.00010151400000000393, 0.00010127699999999684, 0.00010140299999999991, 0.000101513999999997, 0.0001018060000000029, 0.0001015559999999957, 0.00010159700000000188, 0.00010147299999999776, 0.00010200000000000486, 0.00010147299999999776, 0.00010170899999999844, 0.00010199999999999793, 0.00010136099999999426, 0.00010151400000000393, 0.00010220899999999894, 0.00010140299999999991, 0.00010194499999999912, 0.00010188900000000084]</msg>
<status status="PASS" starttime="20201115 23:02:47.730" endtime="20201115 23:02:47.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.725" endtime="20201115 23:02:47.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.736" endtime="20201115 23:02:47.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:47.740" endtime="20201115 23:02:47.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.738" endtime="20201115 23:02:47.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.734" endtime="20201115 23:02:47.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.343" endtime="20201115 23:02:47.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.338" endtime="20201115 23:02:47.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.337" endtime="20201115 23:02:47.762"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.764" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.775" endtime="20201115 23:02:47.795"></status>
</kw>
<msg timestamp="20201115 23:02:47.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.773" endtime="20201115 23:02:47.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.796" endtime="20201115 23:02:47.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.799" endtime="20201115 23:02:47.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.770" endtime="20201115 23:02:47.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.767" endtime="20201115 23:02:47.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.810" endtime="20201115 23:02:48.097"></status>
</kw>
<msg timestamp="20201115 23:02:48.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027435319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027538167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.809" endtime="20201115 23:02:48.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027435319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027538167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.101" endtime="20201115 23:02:48.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.109" endtime="20201115 23:02:48.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.805" endtime="20201115 23:02:48.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.803" endtime="20201115 23:02:48.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.118" level="INFO">${RESULT} = [{'time': 0.027538167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010284799999999913, 'source_diff': 0.00010284799999999913}, {'time': 0.027658181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:48.114" endtime="20201115 23:02:48.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.131" level="INFO">${ACCURACY} = {'time': [0.027538167, 0.027658181, 0.027774222, 0.027888264, 0.028002208, 0.028112222, 0.028230236, 0.02834525, 0.028456278, 0.028574278, 0.028689292, 0.028804347, 0.028920403, 0.029035333, 0.0291473...</msg>
<status status="PASS" starttime="20201115 23:02:48.119" endtime="20201115 23:02:48.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.136" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.135" endtime="20201115 23:02:48.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.139" level="INFO">VALUE: [0.00010284799999999913, 0.00010272299999999901, 0.0001031940000000009, 0.00010263899999999812, 0.00010308300000000034, 0.00010231900000000002, 0.00010326399999999875, 0.00010298599999999936, 0.00010288900000000184, 0.00010305600000000067, 0.00010319500000000037, 0.00010262500000000202, 0.00010258399999999931, 0.00010294400000000065, 0.000102416000000001, 0.00010262500000000202, 0.00010276400000000172, 0.00010298600000000283, 0.00010252800000000103, 0.00010244499999999962, 0.00010272300000000248, 0.0001028610000000027, 0.00010308399999999981, 0.00010294399999999718, 0.00010236099999999873, 0.000102416000000001, 0.00010324999999999918, 0.00010234699999999916, 0.00010326400000000222, 0.0001023749999999983, 0.00010322299999999951, 0.00010256900000000027, 0.00010245799999999972, 0.00010266699999999726, 0.00010261099999999551, 0.00010293100000000055, 0.0001031940000000009, 0.00010288900000000184, 0.0001030139999999985, 0.00010286099999999576, 0.00010229200000000382, 0.00010284700000000313, 0.00010288900000000184, 0.00010233299999999612, 0.0001028610000000027, 0.00010234700000000263, 0.00010261100000000245, 0.00010283300000000356, 0.0001030559999999972, 0.00010248599999999886]</msg>
<status status="PASS" starttime="20201115 23:02:48.138" endtime="20201115 23:02:48.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.132" endtime="20201115 23:02:48.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.144" endtime="20201115 23:02:48.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.148" endtime="20201115 23:02:48.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.146" endtime="20201115 23:02:48.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.141" endtime="20201115 23:02:48.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.765" endtime="20201115 23:02:48.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.763" endtime="20201115 23:02:48.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.762" endtime="20201115 23:02:48.169"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.183" endtime="20201115 23:02:48.206"></status>
</kw>
<msg timestamp="20201115 23:02:48.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.180" endtime="20201115 23:02:48.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.210" endtime="20201115 23:02:48.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.216" endtime="20201115 23:02:48.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.177" endtime="20201115 23:02:48.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.174" endtime="20201115 23:02:48.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.239" endtime="20201115 23:02:48.589"></status>
</kw>
<msg timestamp="20201115 23:02:48.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030077639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030181389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.236" endtime="20201115 23:02:48.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030077639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030181389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.598" endtime="20201115 23:02:48.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.617" endtime="20201115 23:02:48.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.229" endtime="20201115 23:02:48.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.224" endtime="20201115 23:02:48.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.634" level="INFO">${RESULT} = [{'time': 0.030181389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010374999999999968, 'source_diff': 0.00010374999999999968}, {'time': 0.030303444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:48.625" endtime="20201115 23:02:48.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.663" level="INFO">${ACCURACY} = {'time': [0.030181389, 0.030303444, 0.030423431, 0.030536431, 0.030648444, 0.030772458, 0.030893486, 0.031011486, 0.0311285, 0.031248569, 0.031366528, 0.031490528, 0.031612556, 0.031731556, 0.03185558...</msg>
<status status="PASS" starttime="20201115 23:02:48.636" endtime="20201115 23:02:48.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.674" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.672" endtime="20201115 23:02:48.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.681" level="INFO">VALUE: [0.00010374999999999968, 0.00010336099999999973, 0.00010402799999999907, 0.00010348699999999933, 0.00010409700000000091, 0.000104207999999998, 0.00010380500000000195, 0.00010412500000000005, 0.00010408300000000134, 0.00010405499999999873, 0.00010349999999999943, 0.00010379199999999839, 0.0001036810000000013, 0.00010337500000000277, 0.00010386099999999676, 0.00010386099999999676, 0.00010393000000000208, 0.0001036810000000013, 0.00010382000000000446, 0.0001033339999999966, 0.0001042360000000006, 0.00010355499999999823, 0.00010402699999999959, 0.00010354099999999866, 0.00010358300000000431, 0.0001042360000000006, 0.00010379099999999891, 0.00010361099999999651, 0.00010393099999999461, 0.00010423599999999367, 0.0001033610000000032, 0.00010374999999999968, 0.00010345900000000019, 0.00010362500000000302, 0.00010427800000000625, 0.00010409699999999744, 0.00010362499999999608, 0.0001040559999999982, 0.00010379199999999839, 0.00010412499999999658, 0.00010370900000000044, 0.000103513999999999, 0.00010363800000000312, 0.00010397200000000079, 0.00010370800000000097, 0.00010327799999999832, 0.00010334699999999669, 0.00010329199999999789, 0.00010362500000000302, 0.00010332000000000396]</msg>
<status status="PASS" starttime="20201115 23:02:48.677" endtime="20201115 23:02:48.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.665" endtime="20201115 23:02:48.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.689" endtime="20201115 23:02:48.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.698" endtime="20201115 23:02:48.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.693" endtime="20201115 23:02:48.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.685" endtime="20201115 23:02:48.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.173" endtime="20201115 23:02:48.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.171" endtime="20201115 23:02:48.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.170" endtime="20201115 23:02:48.724"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.729" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.751" endtime="20201115 23:02:48.775"></status>
</kw>
<msg timestamp="20201115 23:02:48.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.748" endtime="20201115 23:02:48.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.778" endtime="20201115 23:02:48.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.784" endtime="20201115 23:02:48.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.741" endtime="20201115 23:02:48.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.735" endtime="20201115 23:02:48.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.808" endtime="20201115 23:02:49.154"></status>
</kw>
<msg timestamp="20201115 23:02:49.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046785708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046890889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.804" endtime="20201115 23:02:49.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046785708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046890889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.164" endtime="20201115 23:02:49.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.182" endtime="20201115 23:02:49.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.797" endtime="20201115 23:02:49.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.792" endtime="20201115 23:02:49.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:49.201" level="INFO">${RESULT} = [{'time': 0.046890889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010518099999999586, 'source_diff': 0.00010518099999999586}, {'time': 0.047012931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:49.192" endtime="20201115 23:02:49.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:49.231" level="INFO">${ACCURACY} = {'time': [0.046890889, 0.047012931, 0.047131903, 0.047245917, 0.047368931, 0.047485944, 0.047604958, 0.047726972, 0.047850986, 0.047976056, 0.048091042, 0.048213028, 0.048332056, 0.048445042, 0.048561...</msg>
<status status="PASS" starttime="20201115 23:02:49.203" endtime="20201115 23:02:49.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.242" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:49.239" endtime="20201115 23:02:49.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.247" level="INFO">VALUE: [0.00010518099999999586, 0.00010458399999999785, 0.00010466700000000273, 0.00010511099999999801, 0.00010450000000000043, 0.00010437500000000377, 0.00010509700000000538, 0.00010470800000000197, 0.00010450000000000043, 0.00010527800000000032, 0.00010466700000000273, 0.0001045559999999987, 0.00010422300000000051, 0.00010472300000000101, 0.00010454199999999914, 0.0001043610000000042, 0.00010455499999999923, 0.00010462499999999708, 0.00010431899999999855, 0.00010447200000000129, 0.0001050689999999993, 0.0001050559999999992, 0.00010502700000000059, 0.0001052219999999951, 0.00010522200000000204, 0.00010434699999999769, 0.00010526400000000075, 0.00010494499999999518, 0.00010515299999999672, 0.00010459699999999794, 0.00010477799999999982, 0.00010468099999999536, 0.00010454199999999914, 0.00010512500000000452, 0.00010470800000000197, 0.00010486099999999776, 0.00010461100000000445, 0.00010454099999999966, 0.00010511099999999801, 0.00010476400000000025, 0.00010436200000000367, 0.00010447200000000129, 0.000104514, 0.00010438900000000334, 0.00010486099999999776, 0.00010437500000000377, 0.00010525000000000118, 0.00010447200000000129, 0.00010519499999999543, 0.00010483299999999862]</msg>
<status status="PASS" starttime="20201115 23:02:49.244" endtime="20201115 23:02:49.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.233" endtime="20201115 23:02:49.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.256" endtime="20201115 23:02:49.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.264" endtime="20201115 23:02:49.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.260" endtime="20201115 23:02:49.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.252" endtime="20201115 23:02:49.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.731" endtime="20201115 23:02:49.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.727" endtime="20201115 23:02:49.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.725" endtime="20201115 23:02:49.291"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.297" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.320" endtime="20201115 23:02:49.343"></status>
</kw>
<msg timestamp="20201115 23:02:49.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.316" endtime="20201115 23:02:49.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.347" endtime="20201115 23:02:49.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.353" endtime="20201115 23:02:49.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.308" endtime="20201115 23:02:49.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.302" endtime="20201115 23:02:49.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.377" endtime="20201115 23:02:49.725"></status>
</kw>
<msg timestamp="20201115 23:02:49.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048878528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048983958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.373" endtime="20201115 23:02:49.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048878528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048983958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.734" endtime="20201115 23:02:49.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.753" endtime="20201115 23:02:49.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.366" endtime="20201115 23:02:49.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.361" endtime="20201115 23:02:49.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:49.770" level="INFO">${RESULT} = [{'time': 0.048983958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010543000000000358, 'source_diff': 0.00010543000000000358}, {'time': 0.049109972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:49.762" endtime="20201115 23:02:49.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:49.803" level="INFO">${ACCURACY} = {'time': [0.048983958, 0.049109972, 0.049229986, 0.049345958, 0.049460972, 0.049574986, 0.049700014, 0.049815014, 0.049937028, 0.050058056, 0.050178056, 0.050291069, 0.050408083, 0.050523111, 0.050636...</msg>
<status status="PASS" starttime="20201115 23:02:49.772" endtime="20201115 23:02:49.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.814" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:49.812" endtime="20201115 23:02:49.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.819" level="INFO">VALUE: [0.00010543000000000358, 0.00010586099999999876, 0.0001058610000000057, 0.00010554100000000066, 0.00010541599999999707, 0.000105514000000001, 0.000105514000000001, 0.0001060560000000002, 0.00010562499999999808, 0.00010565299999999722, 0.00010609799999999892, 0.00010572200000000254, 0.00010620799999999653, 0.00010544400000000315, 0.00010561099999999851, 0.00010609699999999944, 0.00010548599999999492, 0.00010537499999999783, 0.00010530599999999946, 0.00010545800000000272, 0.00010599999999999499, 0.00010604100000000116, 0.00010561099999999851, 0.00010581900000000005, 0.00010547200000000229, 0.00010611099999999901, 0.00010594500000000312, 0.00010550000000000143, 0.0001058339999999991, 0.00010540300000000391, 0.00010552800000000057, 0.00010618000000000433, 0.00010561099999999851, 0.00010534699999999869, 0.00010591700000000398, 0.00010529199999999989, 0.0001061940000000039, 0.00010612500000000552, 0.00010534699999999869, 0.00010577700000000134, 0.00010551300000000152, 0.00010579100000000091, 0.0001061940000000039, 0.00010559699999999894, 0.00010592999999999714, 0.00010575000000000168, 0.00010563899999999765, 0.00010584699999999919, 0.0001057089999999955, 0.00010575000000000168]</msg>
<status status="PASS" starttime="20201115 23:02:49.816" endtime="20201115 23:02:49.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.805" endtime="20201115 23:02:49.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.828" endtime="20201115 23:02:49.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.837" endtime="20201115 23:02:49.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.832" endtime="20201115 23:02:49.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.824" endtime="20201115 23:02:49.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.298" endtime="20201115 23:02:49.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.294" endtime="20201115 23:02:49.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.292" endtime="20201115 23:02:49.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.800" endtime="20201115 23:02:49.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.874" endtime="20201115 23:02:49.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.869" endtime="20201115 23:02:49.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.867" endtime="20201115 23:02:49.898"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:54.670" endtime="20201115 23:02:49.899" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.917" endtime="20201115 23:02:49.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.914" endtime="20201115 23:02:49.941"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.974" endtime="20201115 23:02:49.994"></status>
</kw>
<msg timestamp="20201115 23:02:49.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.970" endtime="20201115 23:02:49.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.002" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.998" endtime="20201115 23:02:50.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.009" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:50.005" endtime="20201115 23:02:50.010"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:49.963" endtime="20201115 23:02:50.012"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:49.957" endtime="20201115 23:02:50.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.954" endtime="20201115 23:02:50.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:50.022" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:50.020" endtime="20201115 23:02:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.016" endtime="20201115 23:02:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.952" endtime="20201115 23:02:50.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.951" endtime="20201115 23:02:50.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.025" endtime="20201115 23:02:50.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.947" endtime="20201115 23:02:50.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.942" endtime="20201115 23:02:50.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.911" endtime="20201115 23:02:50.032"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.062" endtime="20201115 23:02:50.080"></status>
</kw>
<msg timestamp="20201115 23:02:50.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.059" endtime="20201115 23:02:50.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.083" endtime="20201115 23:02:50.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.090" endtime="20201115 23:02:50.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.051" endtime="20201115 23:02:50.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.046" endtime="20201115 23:02:50.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.113" endtime="20201115 23:02:50.470"></status>
</kw>
<msg timestamp="20201115 23:02:50.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138372236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138378139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.110" endtime="20201115 23:02:50.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138372236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138378139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.480" endtime="20201115 23:02:50.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.499" endtime="20201115 23:02:50.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.103" endtime="20201115 23:02:50.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.098" endtime="20201115 23:02:50.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:50.517" level="INFO">${RESULT} = [{'time': 0.138378139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.138394, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:50.507" endtime="20201115 23:02:50.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:50.549" level="INFO">${ACCURACY} = {'time': [0.138378139, 0.138394, 0.138412722, 0.138423819, 0.138443972, 0.138462986, 0.138476764, 0.138491083, 0.138500681, 0.138512083, 0.138524097, 0.138541889, 0.138560167, 0.138575111, 0.138586139...</msg>
<status status="PASS" starttime="20201115 23:02:50.519" endtime="20201115 23:02:50.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.560" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:02:50.557" endtime="20201115 23:02:50.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.565" level="INFO">VALUE: [5.903000000001546e-06, 5.903000000001546e-06, 5.4159999999803254e-06, 5.944000000007721e-06, 5.375000000001906e-06, 5.93000000001509e-06, 5.889000000008915e-06, 5.401999999987694e-06, 5.90299999997379e-06, 5.40200000001545e-06, 6.028000000019018e-06, 5.417000000007555e-06, 6.403000000015924e-06, 5.388999999994537e-06, 5.444999999992817e-06, 5.944000000007721e-06, 5.903000000001546e-06, 6.417000000008555e-06, 5.944999999979439e-06, 5.388999999994537e-06, 5.903000000001546e-06, 5.943999999979965e-06, 5.389000000022293e-06, 5.403000000014924e-06, 6.45800000001473e-06, 5.916999999994177e-06, 6.485999999999992e-06, 5.903000000001546e-06, 5.388999999994537e-06, 5.9310000000145635e-06, 6.430000000001712e-06, 6.45800000001473e-06, 5.903000000001546e-06, 5.375000000001906e-06, 5.889000000008915e-06, 6.375000000002906e-06, 5.889000000008915e-06, 5.901999999974317e-06, 5.958000000000352e-06, 5.375000000001906e-06, 5.319000000003626e-06, 5.9310000000145635e-06, 6.457999999986974e-06, 5.445000000020572e-06, 5.903000000001546e-06, 5.943999999979965e-06, 5.971999999992983e-06, 5.388999999994537e-06, 5.402999999987168e-06, 5.387999999995063e-06]</msg>
<status status="PASS" starttime="20201115 23:02:50.562" endtime="20201115 23:02:50.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.551" endtime="20201115 23:02:50.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.574" endtime="20201115 23:02:50.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.583" endtime="20201115 23:02:50.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.578" endtime="20201115 23:02:50.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.569" endtime="20201115 23:02:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.042" endtime="20201115 23:02:50.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.038" endtime="20201115 23:02:50.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.036" endtime="20201115 23:02:50.609"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.615" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.636" endtime="20201115 23:02:50.654"></status>
</kw>
<msg timestamp="20201115 23:02:50.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.633" endtime="20201115 23:02:50.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.657" endtime="20201115 23:02:50.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.664" endtime="20201115 23:02:50.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.626" endtime="20201115 23:02:50.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.620" endtime="20201115 23:02:50.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.687" endtime="20201115 23:02:51.037"></status>
</kw>
<msg timestamp="20201115 23:02:51.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046733278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.684" endtime="20201115 23:02:51.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046733278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.047" endtime="20201115 23:02:51.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.066" endtime="20201115 23:02:51.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.676" endtime="20201115 23:02:51.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.672" endtime="20201115 23:02:51.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:51.084" level="INFO">${RESULT} = [{'time': 0.046733278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445000000000756e-06, 'source_diff': 6.445000000000756e-06}, {'time': 0.046749194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:51.075" endtime="20201115 23:02:51.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:51.115" level="INFO">${ACCURACY} = {'time': [0.046733278, 0.046749194, 0.046769139, 0.0467785, 0.046798306, 0.046807417, 0.046820514, 0.046830181, 0.046842347, 0.046852181, 0.046861292, 0.046870403, 0.046887431, 0.046900514, 0.04691047...</msg>
<status status="PASS" starttime="20201115 23:02:51.086" endtime="20201115 23:02:51.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.126" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:02:51.124" endtime="20201115 23:02:51.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.132" level="INFO">VALUE: [6.445000000000756e-06, 7.000000000000062e-06, 6.445000000000756e-06, 6.472000000000422e-06, 6.945000000001256e-06, 6.416999999994677e-06, 6.458000000000852e-06, 6.9730000000003955e-06, 7.000000000000062e-06, 6.903000000002546e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.445000000000756e-06, 6.458000000000852e-06, 6.445000000000756e-06, 6.472000000000422e-06, 6.444000000001282e-06, 7.000000000000062e-06, 6.458000000000852e-06, 6.986000000000492e-06, 6.930000000002212e-06, 6.472000000000422e-06, 7.000000000000062e-06, 7.000000000000062e-06, 7.013999999999632e-06, 6.944000000001782e-06, 6.459000000000326e-06, 6.445000000000756e-06, 6.972000000000922e-06, 6.472000000000422e-06, 6.943999999994843e-06, 6.957999999994413e-06, 6.986000000000492e-06, 6.499999999999562e-06, 6.944000000001782e-06, 6.957999999994413e-06, 6.431000000001186e-06, 6.457999999993913e-06, 6.930999999994747e-06, 7.000000000000062e-06, 7.0829999999980076e-06, 7.000000000000062e-06, 6.472000000000422e-06, 6.416000000002142e-06, 6.444000000001282e-06, 6.472000000000422e-06, 7.000000000000062e-06, 6.443999999994343e-06, 6.431000000001186e-06]</msg>
<status status="PASS" starttime="20201115 23:02:51.128" endtime="20201115 23:02:51.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.117" endtime="20201115 23:02:51.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.141" endtime="20201115 23:02:51.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:51.149" endtime="20201115 23:02:51.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.145" endtime="20201115 23:02:51.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.136" endtime="20201115 23:02:51.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.616" endtime="20201115 23:02:51.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.612" endtime="20201115 23:02:51.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.610" endtime="20201115 23:02:51.175"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.181" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.202" endtime="20201115 23:02:51.221"></status>
</kw>
<msg timestamp="20201115 23:02:51.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.199" endtime="20201115 23:02:51.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.224" endtime="20201115 23:02:51.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.230" endtime="20201115 23:02:51.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.192" endtime="20201115 23:02:51.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.186" endtime="20201115 23:02:51.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.254" endtime="20201115 23:02:51.603"></status>
</kw>
<msg timestamp="20201115 23:02:51.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046853556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046861056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.251" endtime="20201115 23:02:51.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046853556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046861056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.612" endtime="20201115 23:02:51.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.631" endtime="20201115 23:02:51.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.244" endtime="20201115 23:02:51.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.238" endtime="20201115 23:02:51.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:51.648" level="INFO">${RESULT} = [{'time': 0.046861056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.046875194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:51.639" endtime="20201115 23:02:51.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:51.680" level="INFO">${ACCURACY} = {'time': [0.046861056, 0.046875194, 0.046893083, 0.046909125, 0.046931764, 0.046951236, 0.046974236, 0.046994167, 0.047008236, 0.047030903, 0.047049139, 0.047069944, 0.047093167, 0.047103222, 0.047125...</msg>
<status status="PASS" starttime="20201115 23:02:51.650" endtime="20201115 23:02:51.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.691" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:02:51.689" endtime="20201115 23:02:51.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.696" level="INFO">VALUE: [7.500000000000562e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.54200000000621e-06, 7.445000000001756e-06, 8.028000000000202e-06, 8.041999999999772e-06, 8.125000000004656e-06, 7.514000000000132e-06, 7.500000000000562e-06, 8.055999999999341e-06, 7.486000000000992e-06, 8.055999999999341e-06, 7.986000000001492e-06, 7.485999999994053e-06, 7.5280000000066405e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.500000000000562e-06, 8.069999999998911e-06, 7.527999999999702e-06, 8.082999999999008e-06, 8.014000000000632e-06, 7.986000000001492e-06, 7.958000000002352e-06, 8.041999999999772e-06, 7.486000000000992e-06, 7.985999999994553e-06, 8.055999999999341e-06, 8.013000000001158e-06, 8.01299999999422e-06, 8.041999999999772e-06, 8.138999999997287e-06, 8.028000000000202e-06, 8.014000000000632e-06, 7.527999999999702e-06, 8.068999999999438e-06, 7.540999999999798e-06, 8.014000000000632e-06, 7.527999999999702e-06, 8.055999999999341e-06, 8.000000000001062e-06, 7.500000000000562e-06, 7.486000000000992e-06, 7.500000000000562e-06, 7.500000000000562e-06, 8.013999999993693e-06, 8.054999999999868e-06]</msg>
<status status="PASS" starttime="20201115 23:02:51.693" endtime="20201115 23:02:51.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.682" endtime="20201115 23:02:51.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.705" endtime="20201115 23:02:51.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:51.713" endtime="20201115 23:02:51.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.709" endtime="20201115 23:02:51.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.701" endtime="20201115 23:02:51.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.182" endtime="20201115 23:02:51.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.178" endtime="20201115 23:02:51.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.176" endtime="20201115 23:02:51.740"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.745" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.767" endtime="20201115 23:02:51.785"></status>
</kw>
<msg timestamp="20201115 23:02:51.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.763" endtime="20201115 23:02:51.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:51.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.789" endtime="20201115 23:02:51.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.795" endtime="20201115 23:02:51.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.756" endtime="20201115 23:02:51.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.750" endtime="20201115 23:02:51.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.819" endtime="20201115 23:02:52.167"></status>
</kw>
<msg timestamp="20201115 23:02:52.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046679986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046688514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:51.815" endtime="20201115 23:02:52.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046679986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046688514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:52.176" endtime="20201115 23:02:52.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.195" endtime="20201115 23:02:52.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.808" endtime="20201115 23:02:52.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.803" endtime="20201115 23:02:52.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:52.213" level="INFO">${RESULT} = [{'time': 0.046688514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.046701625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:52.203" endtime="20201115 23:02:52.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:52.247" level="INFO">${ACCURACY} = {'time': [0.046688514, 0.046701625, 0.046720708, 0.046734514, 0.046745556, 0.046760458, 0.046774569, 0.046791542, 0.046802764, 0.046814528, 0.046833889, 0.046846583, 0.046863458, 0.046881889, 0.046900...</msg>
<status status="PASS" starttime="20201115 23:02:52.215" endtime="20201115 23:02:52.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.258" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:02:52.255" endtime="20201115 23:02:52.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.263" level="INFO">VALUE: [8.528000000000702e-06, 8.568999999999938e-06, 9.124999999998717e-06, 9.096999999999578e-06, 8.569999999999411e-06, 8.068999999999438e-06, 8.555000000000368e-06, 9.028000000001202e-06, 8.541999999993333e-06, 9.110999999999148e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.582999999999508e-06, 9.096999999999578e-06, 9.096999999999578e-06, 8.555000000000368e-06, 9.056000000000342e-06, 8.555000000000368e-06, 9.069000000000438e-06, 8.542000000000272e-06, 8.555999999999842e-06, 8.555000000000368e-06, 8.555999999999842e-06, 9.041000000001298e-06, 9.028000000001202e-06, 8.596999999999078e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.555999999999842e-06, 8.568999999999938e-06, 9.083000000000008e-06, 8.000000000001062e-06, 8.542000000000272e-06, 9.069999999999911e-06, 8.596999999999078e-06, 9.125000000005656e-06, 9.069000000000438e-06, 8.568999999999938e-06, 8.568999999999938e-06, 8.555000000000368e-06, 8.569999999999411e-06, 8.568999999999938e-06, 8.555999999999842e-06, 8.542000000000272e-06, 8.541000000000798e-06, 8.583999999998981e-06, 8.513000000001658e-06, 8.610999999998648e-06, 9.124999999998717e-06, 9.069999999999911e-06]</msg>
<status status="PASS" starttime="20201115 23:02:52.260" endtime="20201115 23:02:52.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.249" endtime="20201115 23:02:52.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.272" endtime="20201115 23:02:52.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:52.280" endtime="20201115 23:02:52.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.276" endtime="20201115 23:02:52.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.267" endtime="20201115 23:02:52.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.746" endtime="20201115 23:02:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.742" endtime="20201115 23:02:52.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.741" endtime="20201115 23:02:52.307"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.312" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.334" endtime="20201115 23:02:52.352"></status>
</kw>
<msg timestamp="20201115 23:02:52.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.331" endtime="20201115 23:02:52.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.355" endtime="20201115 23:02:52.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.362" endtime="20201115 23:02:52.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.324" endtime="20201115 23:02:52.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.318" endtime="20201115 23:02:52.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.385" endtime="20201115 23:02:52.734"></status>
</kw>
<msg timestamp="20201115 23:02:52.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047582917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:52.382" endtime="20201115 23:02:52.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047573306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047582917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:52.744" endtime="20201115 23:02:52.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.762" endtime="20201115 23:02:52.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.375" endtime="20201115 23:02:52.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.370" endtime="20201115 23:02:52.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:52.780" level="INFO">${RESULT} = [{'time': 0.047582917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.610999999999648e-06, 'source_diff': 9.610999999999648e-06}, {'time': 0.047597278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:52.771" endtime="20201115 23:02:52.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:52.811" level="INFO">${ACCURACY} = {'time': [0.047582917, 0.047597278, 0.047611042, 0.047632903, 0.047647278, 0.047659125, 0.047681292, 0.047702167, 0.047719292, 0.047740222, 0.047758861, 0.047772861, 0.047790972, 0.047806069, 0.047821...</msg>
<status status="PASS" starttime="20201115 23:02:52.782" endtime="20201115 23:02:52.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.823" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:02:52.821" endtime="20201115 23:02:52.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.828" level="INFO">VALUE: [9.610999999999648e-06, 9.610999999999648e-06, 9.638999999998787e-06, 9.610999999999648e-06, 9.597000000000078e-06, 9.568999999993999e-06, 1.0111000000000148e-05, 9.666999999997927e-06, 1.0111000000000148e-05, 1.0111000000000148e-05, 9.096999999999578e-06, 9.069000000000438e-06, 9.610999999999648e-06, 1.0137999999999814e-05, 9.610999999999648e-06, 9.624999999999218e-06, 9.680000000004962e-06, 9.624999999999218e-06, 1.0124999999999718e-05, 9.069999999999911e-06, 9.624999999999218e-06, 1.0138999999999287e-05, 1.0111000000000148e-05, 9.597000000000078e-06, 9.624999999999218e-06, 1.0179999999998524e-05, 1.0166999999998427e-05, 9.042000000000772e-06, 1.0166999999998427e-05, 9.610999999999648e-06, 9.693999999997593e-06, 1.0124999999999718e-05, 9.639000000005726e-06, 9.110999999999148e-06, 9.597000000000078e-06, 1.0166999999998427e-05, 9.624999999999218e-06, 1.0165999999998954e-05, 1.0180999999997997e-05, 9.624999999999218e-06, 9.624999999999218e-06, 1.0111000000000148e-05, 9.624999999999218e-06, 9.610999999999648e-06, 1.0097000000000578e-05, 9.083000000000008e-06, 9.096999999999578e-06, 9.666999999997927e-06, 9.055999999993403e-06, 1.0124999999999718e-05]</msg>
<status status="PASS" starttime="20201115 23:02:52.825" endtime="20201115 23:02:52.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.813" endtime="20201115 23:02:52.831"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.837" endtime="20201115 23:02:52.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:52.846" endtime="20201115 23:02:52.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.842" endtime="20201115 23:02:52.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.833" endtime="20201115 23:02:52.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.314" endtime="20201115 23:02:52.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.309" endtime="20201115 23:02:52.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.307" endtime="20201115 23:02:52.873"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.879" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.901" endtime="20201115 23:02:52.918"></status>
</kw>
<msg timestamp="20201115 23:02:52.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.897" endtime="20201115 23:02:52.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:52.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:52.922" endtime="20201115 23:02:52.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.928" endtime="20201115 23:02:52.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.890" endtime="20201115 23:02:52.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.884" endtime="20201115 23:02:52.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:52.951" endtime="20201115 23:02:53.268"></status>
</kw>
<msg timestamp="20201115 23:02:53.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047675514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047686181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:52.948" endtime="20201115 23:02:53.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047675514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047686181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:53.273" endtime="20201115 23:02:53.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.281" endtime="20201115 23:02:53.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.941" endtime="20201115 23:02:53.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.936" endtime="20201115 23:02:53.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:53.289" level="INFO">${RESULT} = [{'time': 0.047686181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0666999999998927e-05, 'source_diff': 1.0666999999998927e-05}, {'time': 0.047703389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:53.285" endtime="20201115 23:02:53.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:53.303" level="INFO">${ACCURACY} = {'time': [0.047686181, 0.047703389, 0.047727069, 0.047747222, 0.047760347, 0.047777333, 0.047797319, 0.047815389, 0.047831264, 0.047845181, 0.047863333, 0.047879097, 0.047895181, 0.047917361, 0.047938...</msg>
<status status="PASS" starttime="20201115 23:02:53.290" endtime="20201115 23:02:53.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.309" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:02:53.308" endtime="20201115 23:02:53.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.312" level="INFO">VALUE: [1.0666999999998927e-05, 1.1221999999998233e-05, 1.0179999999998524e-05, 1.1235999999997803e-05, 1.0625000000000218e-05, 1.1193999999999094e-05, 1.0611000000000648e-05, 1.1235999999997803e-05, 1.0721999999997733e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0180000000005462e-05, 1.0723000000004146e-05, 1.1207999999998663e-05, 1.1207999999998663e-05, 1.1194000000006032e-05, 1.1179999999999524e-05, 1.0680999999998497e-05, 1.0679999999999024e-05, 1.0680999999998497e-05, 1.0680999999998497e-05, 1.0139000000006226e-05, 1.0680999999998497e-05, 1.0695000000005006e-05, 1.0679999999999024e-05, 1.0152999999998857e-05, 1.0681000000005436e-05, 1.1221999999998233e-05, 1.0651999999999884e-05, 1.0611000000000648e-05, 1.0735999999997303e-05, 1.1179999999999524e-05, 1.0652999999999357e-05, 1.0693999999998594e-05, 1.1236000000004742e-05, 1.0665999999999454e-05, 1.0694999999998067e-05, 1.0666999999998927e-05, 1.0638999999999788e-05, 1.0666999999998927e-05, 1.1179999999999524e-05, 1.0679999999999024e-05, 1.0737000000003716e-05, 1.1235999999997803e-05, 1.1222000000005172e-05, 1.0166000000005893e-05, 1.0667000000005866e-05, 1.0708000000005102e-05, 1.0693999999998594e-05, 1.0166999999998427e-05]</msg>
<status status="PASS" starttime="20201115 23:02:53.310" endtime="20201115 23:02:53.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.304" endtime="20201115 23:02:53.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.316" endtime="20201115 23:02:53.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:53.320" endtime="20201115 23:02:53.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.318" endtime="20201115 23:02:53.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.314" endtime="20201115 23:02:53.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.880" endtime="20201115 23:02:53.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.876" endtime="20201115 23:02:53.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:52.874" endtime="20201115 23:02:53.342"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.345" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.355" endtime="20201115 23:02:53.369"></status>
</kw>
<msg timestamp="20201115 23:02:53.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.353" endtime="20201115 23:02:53.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.371" endtime="20201115 23:02:53.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.374" endtime="20201115 23:02:53.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.350" endtime="20201115 23:02:53.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.347" endtime="20201115 23:02:53.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.385" endtime="20201115 23:02:53.721"></status>
</kw>
<msg timestamp="20201115 23:02:53.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026963472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02697575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:53.383" endtime="20201115 23:02:53.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026963472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02697575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:53.730" endtime="20201115 23:02:53.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.749" endtime="20201115 23:02:53.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.380" endtime="20201115 23:02:53.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.378" endtime="20201115 23:02:53.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:53.767" level="INFO">${RESULT} = [{'time': 0.02697575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.026997292, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:53.758" endtime="20201115 23:02:53.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:53.798" level="INFO">${ACCURACY} = {'time': [0.02697575, 0.026997292, 0.027012528, 0.027035319, 0.027049306, 0.027067583, 0.027094486, 0.027115361, 0.027129319, 0.027153694, 0.027174569, 0.027201778, 0.027226486, 0.027249444, 0.0272667...</msg>
<status status="PASS" starttime="20201115 23:02:53.769" endtime="20201115 23:02:53.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.809" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:02:53.806" endtime="20201115 23:02:53.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.816" level="INFO">VALUE: [1.2278000000000983e-05, 1.1180999999998997e-05, 1.1736000000001773e-05, 1.1179999999999524e-05, 1.1722999999998207e-05, 1.2249999999998373e-05, 1.1708000000002633e-05, 1.1764000000000913e-05, 1.1735999999998303e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.2263999999997943e-05, 1.1222000000001703e-05, 1.1750000000001343e-05, 1.1721999999998733e-05, 1.1208000000002133e-05, 1.227699999999804e-05, 1.1194000000002563e-05, 1.1195000000002037e-05, 1.1221999999998233e-05, 1.2278000000000983e-05, 1.1722000000002203e-05, 1.1721999999998733e-05, 1.1735999999998303e-05, 1.2264000000001413e-05, 1.2292000000000552e-05, 1.2250000000001843e-05, 1.2263999999997943e-05, 1.1708999999998637e-05, 1.1735999999998303e-05, 1.1722999999998207e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.2291000000001079e-05, 1.1721999999998733e-05, 1.1750000000001343e-05, 1.1207999999998663e-05, 1.2292000000000552e-05, 1.1736000000001773e-05, 1.2319000000000219e-05, 1.2278000000000983e-05, 1.1722000000002203e-05, 1.1708000000002633e-05, 1.1750000000001343e-05, 1.1722000000002203e-05, 1.1152999999999857e-05, 1.1778000000000483e-05, 1.1736000000001773e-05, 1.1693999999999594e-05, 1.1207999999998663e-05]</msg>
<status status="PASS" starttime="20201115 23:02:53.811" endtime="20201115 23:02:53.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.800" endtime="20201115 23:02:53.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.825" endtime="20201115 23:02:53.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:53.833" endtime="20201115 23:02:53.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.829" endtime="20201115 23:02:53.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.821" endtime="20201115 23:02:53.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.345" endtime="20201115 23:02:53.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.343" endtime="20201115 23:02:53.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.343" endtime="20201115 23:02:53.860"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.865" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.887" endtime="20201115 23:02:53.905"></status>
</kw>
<msg timestamp="20201115 23:02:53.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.884" endtime="20201115 23:02:53.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:53.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:53.908" endtime="20201115 23:02:53.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.914" endtime="20201115 23:02:53.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.876" endtime="20201115 23:02:53.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.871" endtime="20201115 23:02:53.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:53.938" endtime="20201115 23:02:54.286"></status>
</kw>
<msg timestamp="20201115 23:02:54.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046900736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046913014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:53.934" endtime="20201115 23:02:54.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046900736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046913014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.296" endtime="20201115 23:02:54.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.314" endtime="20201115 23:02:54.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.927" endtime="20201115 23:02:54.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.922" endtime="20201115 23:02:54.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:54.332" level="INFO">${RESULT} = [{'time': 0.046913014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2278000000004452e-05, 'source_diff': 1.2278000000004452e-05}, {'time': 0.046936861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:54.323" endtime="20201115 23:02:54.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:54.365" level="INFO">${ACCURACY} = {'time': [0.046913014, 0.046936861, 0.046961194, 0.046985819, 0.047002028, 0.047021958, 0.047049222, 0.047069986, 0.047090847, 0.047108056, 0.047126306, 0.047144, 0.047170333, 0.047196944, 0.047225194...</msg>
<status status="PASS" starttime="20201115 23:02:54.334" endtime="20201115 23:02:54.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.376" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:02:54.374" endtime="20201115 23:02:54.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.381" level="INFO">VALUE: [1.2278000000004452e-05, 1.2236000000005742e-05, 1.331899999999775e-05, 1.277699999999854e-05, 1.2292000000004022e-05, 1.2264000000004882e-05, 1.3333000000004258e-05, 1.2278000000004452e-05, 1.2777999999998013e-05, 1.2250000000005312e-05, 1.3291999999998083e-05, 1.2305999999996653e-05, 1.3305000000005118e-05, 1.226299999999847e-05, 1.327699999999904e-05, 1.2778000000004952e-05, 1.2777999999998013e-05, 1.2792000000004522e-05, 1.279099999999811e-05, 1.279099999999811e-05, 1.280499999999768e-05, 1.330499999999818e-05, 1.2777999999998013e-05, 1.2263999999997943e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2222999999998707e-05, 1.2207999999999664e-05, 1.2861000000002898e-05, 1.277699999999854e-05, 1.279099999999811e-05, 1.2791999999997583e-05, 1.3249999999999373e-05, 1.3333999999996793e-05, 1.2777999999998013e-05, 1.2278000000004452e-05, 1.2236999999998277e-05, 1.2235999999998803e-05, 1.279099999999811e-05, 1.2236000000005742e-05, 1.2791999999997583e-05, 1.2792000000004522e-05, 1.2791999999997583e-05, 1.2235999999998803e-05, 1.2708000000000164e-05, 1.2791000000005048e-05, 1.279099999999811e-05, 1.277699999999854e-05, 1.2777999999998013e-05, 1.2805000000004618e-05]</msg>
<status status="PASS" starttime="20201115 23:02:54.378" endtime="20201115 23:02:54.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.367" endtime="20201115 23:02:54.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.391" endtime="20201115 23:02:54.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:54.400" endtime="20201115 23:02:54.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.395" endtime="20201115 23:02:54.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.387" endtime="20201115 23:02:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.867" endtime="20201115 23:02:54.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.863" endtime="20201115 23:02:54.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:53.861" endtime="20201115 23:02:54.426"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.431" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.454" endtime="20201115 23:02:54.473"></status>
</kw>
<msg timestamp="20201115 23:02:54.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.451" endtime="20201115 23:02:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.476" endtime="20201115 23:02:54.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.483" endtime="20201115 23:02:54.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.443" endtime="20201115 23:02:54.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.437" endtime="20201115 23:02:54.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.506" endtime="20201115 23:02:54.851"></status>
</kw>
<msg timestamp="20201115 23:02:54.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048368875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048382264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.503" endtime="20201115 23:02:54.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048368875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048382264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.861" endtime="20201115 23:02:54.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.880" endtime="20201115 23:02:54.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.496" endtime="20201115 23:02:54.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.491" endtime="20201115 23:02:54.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:54.897" level="INFO">${RESULT} = [{'time': 0.048382264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3389000000002538e-05, 'source_diff': 1.3389000000002538e-05}, {'time': 0.048399347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:54.888" endtime="20201115 23:02:54.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:54.928" level="INFO">${ACCURACY} = {'time': [0.048382264, 0.048399347, 0.048423639, 0.048444222, 0.048464639, 0.048490556, 0.048513569, 0.048537486, 0.048561417, 0.048580403, 0.048597333, 0.048621333, 0.048640333, 0.0486605, 0.04868866...</msg>
<status status="PASS" starttime="20201115 23:02:54.900" endtime="20201115 23:02:54.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.939" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:02:54.937" endtime="20201115 23:02:54.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.945" level="INFO">VALUE: [1.3389000000002538e-05, 1.3847000000004328e-05, 1.434699999999789e-05, 1.3333000000004258e-05, 1.4416999999995739e-05, 1.3888999999996099e-05, 1.433299999999832e-05, 1.333299999999732e-05, 1.3348000000003302e-05, 1.3819999999997723e-05, 1.381899999999825e-05, 1.3819000000005188e-05, 1.383299999999782e-05, 1.3319000000004688e-05, 1.3833999999997293e-05, 1.3277999999998513e-05, 1.381899999999825e-05, 1.331899999999775e-05, 1.3305999999997653e-05, 1.383299999999782e-05, 1.384699999999739e-05, 1.3291999999998083e-05, 1.384699999999739e-05, 1.3333999999996793e-05, 1.3291999999998083e-05, 1.3306000000004592e-05, 1.333299999999732e-05, 1.381899999999825e-05, 1.3305999999997653e-05, 1.384699999999739e-05, 1.3875000000003468e-05, 1.3848000000003802e-05, 1.3860999999996959e-05, 1.383299999999782e-05, 1.383299999999782e-05, 1.384699999999739e-05, 1.3388999999995599e-05, 1.331899999999775e-05, 1.3763999999999443e-05, 1.3403000000002108e-05, 1.3834000000004232e-05, 1.3805999999998153e-05, 1.3791999999998583e-05, 1.3347999999996363e-05, 1.3277000000005978e-05, 1.3389000000002538e-05, 1.4374999999997029e-05, 1.3833999999997293e-05, 1.3833999999997293e-05, 1.3861999999996433e-05]</msg>
<status status="PASS" starttime="20201115 23:02:54.942" endtime="20201115 23:02:54.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.930" endtime="20201115 23:02:54.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.955" endtime="20201115 23:02:54.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:54.963" endtime="20201115 23:02:54.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.959" endtime="20201115 23:02:54.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.950" endtime="20201115 23:02:54.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.433" endtime="20201115 23:02:54.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.429" endtime="20201115 23:02:54.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.427" endtime="20201115 23:02:54.990"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.995" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.017" endtime="20201115 23:02:55.036"></status>
</kw>
<msg timestamp="20201115 23:02:55.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.013" endtime="20201115 23:02:55.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.039" endtime="20201115 23:02:55.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.045" endtime="20201115 23:02:55.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.006" endtime="20201115 23:02:55.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.000" endtime="20201115 23:02:55.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.069" endtime="20201115 23:02:55.418"></status>
</kw>
<msg timestamp="20201115 23:02:55.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047008639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047024042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.065" endtime="20201115 23:02:55.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047008639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047024042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.427" endtime="20201115 23:02:55.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.446" endtime="20201115 23:02:55.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.058" endtime="20201115 23:02:55.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.053" endtime="20201115 23:02:55.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:55.463" level="INFO">${RESULT} = [{'time': 0.047024042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5403000000004108e-05, 'source_diff': 1.5403000000004108e-05}, {'time': 0.047047778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:55.454" endtime="20201115 23:02:55.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:55.494" level="INFO">${ACCURACY} = {'time': [0.047024042, 0.047047778, 0.047075736, 0.047095806, 0.047120861, 0.047147986, 0.047176611, 0.047194639, 0.047212778, 0.047234917, 0.047263722, 0.047291694, 0.047311847, 0.047332681, 0.047352...</msg>
<status status="PASS" starttime="20201115 23:02:55.465" endtime="20201115 23:02:55.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.506" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:55.503" endtime="20201115 23:02:55.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.512" level="INFO">VALUE: [1.5403000000004108e-05, 1.4388999999996599e-05, 1.4888999999997099e-05, 1.4888999999997099e-05, 1.4902999999996669e-05, 1.4875000000004468e-05, 1.484699999999839e-05, 1.4957999999995475e-05, 1.4874999999997529e-05, 1.4889000000004038e-05, 1.4889000000004038e-05, 1.4888000000004564e-05, 1.4360999999997459e-05, 1.4389000000003538e-05, 1.4874999999997529e-05, 1.4902999999996669e-05, 1.4374999999997029e-05, 1.4389000000003538e-05, 1.4403000000003108e-05, 1.4972000000001984e-05, 1.4888999999997099e-05, 1.4901999999997195e-05, 1.4945000000002318e-05, 1.4957999999995475e-05, 1.434699999999789e-05, 1.4903000000003608e-05, 1.4888999999997099e-05, 1.4887999999997625e-05, 1.4889000000004038e-05, 1.4902999999996669e-05, 1.4916000000003704e-05, 1.4902999999996669e-05, 1.4888999999997099e-05, 1.4902000000004134e-05, 1.4916999999996239e-05, 1.484699999999839e-05, 1.4403000000003108e-05, 1.4888999999997099e-05, 1.4387999999997125e-05, 1.4889000000004038e-05, 1.4931000000002748e-05, 1.4874999999997529e-05, 1.486099999999796e-05, 1.483299999999882e-05, 1.4903000000003608e-05, 1.4915999999996765e-05, 1.483299999999882e-05, 1.4874999999997529e-05, 1.544499999999588e-05, 1.4903000000003608e-05]</msg>
<status status="PASS" starttime="20201115 23:02:55.508" endtime="20201115 23:02:55.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.496" endtime="20201115 23:02:55.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.522" endtime="20201115 23:02:55.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:55.530" endtime="20201115 23:02:55.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.526" endtime="20201115 23:02:55.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.517" endtime="20201115 23:02:55.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.996" endtime="20201115 23:02:55.555"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.992" endtime="20201115 23:02:55.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.991" endtime="20201115 23:02:55.556"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.562" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.583" endtime="20201115 23:02:55.601"></status>
</kw>
<msg timestamp="20201115 23:02:55.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.580" endtime="20201115 23:02:55.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.605" endtime="20201115 23:02:55.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.612" endtime="20201115 23:02:55.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.573" endtime="20201115 23:02:55.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.567" endtime="20201115 23:02:55.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.636" endtime="20201115 23:02:55.984"></status>
</kw>
<msg timestamp="20201115 23:02:55.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046798889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046814819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.632" endtime="20201115 23:02:55.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046798889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046814819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.994" endtime="20201115 23:02:56.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.013" endtime="20201115 23:02:56.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.625" endtime="20201115 23:02:56.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.620" endtime="20201115 23:02:56.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.030" level="INFO">${RESULT} = [{'time': 0.046814819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5929999999997335e-05, 'source_diff': 1.5929999999997335e-05}, {'time': 0.046834472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:56.021" endtime="20201115 23:02:56.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.061" level="INFO">${ACCURACY} = {'time': [0.046814819, 0.046834472, 0.04685875, 0.046887431, 0.046906875, 0.046929875, 0.046950569, 0.046979528, 0.046999736, 0.047021472, 0.047051556, 0.047070681, 0.047092847, 0.047116875, 0.0471384...</msg>
<status status="PASS" starttime="20201115 23:02:56.032" endtime="20201115 23:02:56.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.072" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.069" endtime="20201115 23:02:56.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.077" level="INFO">VALUE: [1.5929999999997335e-05, 1.5958000000003414e-05, 1.5985999999995615e-05, 1.537499999999803e-05, 1.5944000000003844e-05, 1.5958000000003414e-05, 1.5929999999997335e-05, 1.5445000000002818e-05, 1.5458000000002914e-05, 1.5958000000003414e-05, 1.5945000000003318e-05, 1.5417000000003678e-05, 1.5972000000002984e-05, 1.5958000000003414e-05, 1.53889999999976e-05, 1.540299999999717e-05, 1.5929999999997335e-05, 1.6000000000002124e-05, 1.5944000000003844e-05, 1.5959000000002888e-05, 1.5457999999995975e-05, 1.5958000000003414e-05, 1.5486000000002054e-05, 1.5943999999996905e-05, 1.5944000000003844e-05, 1.6472000000003484e-05, 1.5402000000004634e-05, 1.594499999999638e-05, 1.5943999999996905e-05, 1.545899999999545e-05, 1.6458000000003914e-05, 1.5485999999995115e-05, 1.541699999999674e-05, 1.5972000000002984e-05, 1.5403000000004108e-05, 1.6471999999996545e-05, 1.5971999999996045e-05, 1.5943999999996905e-05, 1.594499999999638e-05, 1.6013999999994755e-05, 1.5958000000003414e-05, 1.5985999999995615e-05, 1.5473000000001957e-05, 1.5957999999996475e-05, 1.5945000000003318e-05, 1.5957999999996475e-05, 1.5429999999996835e-05, 1.5985999999995615e-05, 1.5958000000003414e-05, 1.5987000000002027e-05]</msg>
<status status="PASS" starttime="20201115 23:02:56.074" endtime="20201115 23:02:56.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.062" endtime="20201115 23:02:56.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.087" endtime="20201115 23:02:56.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.095" endtime="20201115 23:02:56.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.091" endtime="20201115 23:02:56.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.083" endtime="20201115 23:02:56.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.563" endtime="20201115 23:02:56.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.559" endtime="20201115 23:02:56.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.557" endtime="20201115 23:02:56.122"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.127" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.154" endtime="20201115 23:02:56.173"></status>
</kw>
<msg timestamp="20201115 23:02:56.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.151" endtime="20201115 23:02:56.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.176" endtime="20201115 23:02:56.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.182" endtime="20201115 23:02:56.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.144" endtime="20201115 23:02:56.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.133" endtime="20201115 23:02:56.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.206" endtime="20201115 23:02:56.556"></status>
</kw>
<msg timestamp="20201115 23:02:56.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052458833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.202" endtime="20201115 23:02:56.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052458833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.565" endtime="20201115 23:02:56.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.584" endtime="20201115 23:02:56.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.195" endtime="20201115 23:02:56.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.191" endtime="20201115 23:02:56.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.601" level="INFO">${RESULT} = [{'time': 0.052458833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6986000000003554e-05, 'source_diff': 1.6986000000003554e-05}, {'time': 0.052484833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:56.592" endtime="20201115 23:02:56.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.635" level="INFO">${ACCURACY} = {'time': [0.052458833, 0.052484833, 0.052514944, 0.052535639, 0.052560639, 0.052586653, 0.052606819, 0.052629944, 0.052648833, 0.052671819, 0.052697833, 0.052717611, 0.052745028, 0.052769861, 0.052795...</msg>
<status status="PASS" starttime="20201115 23:02:56.604" endtime="20201115 23:02:56.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.646" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.643" endtime="20201115 23:02:56.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.652" level="INFO">VALUE: [1.6986000000003554e-05, 1.6444000000004344e-05, 1.702700000000279e-05, 1.7014000000002694e-05, 1.6500000000002624e-05, 1.645899999999645e-05, 1.6443999999997405e-05, 1.6499999999995685e-05, 1.6471999999996545e-05, 1.7000000000003124e-05, 1.6457999999996975e-05, 1.6471999999996545e-05, 1.7056000000001403e-05, 1.7014000000002694e-05, 1.6943999999997905e-05, 1.6443999999997405e-05, 1.701299999999628e-05, 1.6513999999995255e-05, 1.6471999999996545e-05, 1.6443999999997405e-05, 1.6471999999996545e-05, 1.6458000000003914e-05, 1.6999999999996185e-05, 1.7014000000002694e-05, 1.6472000000003484e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.6514000000002194e-05, 1.6999999999996185e-05, 1.6999999999996185e-05, 1.7013999999995755e-05, 1.7027999999995325e-05, 1.6472000000003484e-05, 1.6459000000003388e-05, 1.7014000000002694e-05, 1.6513999999995255e-05, 1.6471999999996545e-05, 1.6985999999996615e-05, 1.7000000000003124e-05, 1.6457999999996975e-05, 1.702699999999585e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.6472000000003484e-05, 1.6999999999996185e-05, 1.6486000000003054e-05, 1.6445000000003818e-05, 1.6500000000002624e-05, 1.7027999999995325e-05, 1.6985999999996615e-05]</msg>
<status status="PASS" starttime="20201115 23:02:56.648" endtime="20201115 23:02:56.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.636" endtime="20201115 23:02:56.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.661" endtime="20201115 23:02:56.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.670" endtime="20201115 23:02:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.666" endtime="20201115 23:02:56.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.657" endtime="20201115 23:02:56.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.129" endtime="20201115 23:02:56.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.125" endtime="20201115 23:02:56.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.123" endtime="20201115 23:02:56.693"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.705" endtime="20201115 23:02:56.721"></status>
</kw>
<msg timestamp="20201115 23:02:56.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.704" endtime="20201115 23:02:56.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.722" endtime="20201115 23:02:56.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.725" endtime="20201115 23:02:56.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.701" endtime="20201115 23:02:56.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.698" endtime="20201115 23:02:56.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.736" endtime="20201115 23:02:57.073"></status>
</kw>
<msg timestamp="20201115 23:02:57.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027180208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027198278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.735" endtime="20201115 23:02:57.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027180208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027198278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.082" endtime="20201115 23:02:57.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.101" endtime="20201115 23:02:57.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.731" endtime="20201115 23:02:57.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.729" endtime="20201115 23:02:57.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.119" level="INFO">${RESULT} = [{'time': 0.027198278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8069999999998504e-05, 'source_diff': 1.8069999999998504e-05}, {'time': 0.0272315, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:57.110" endtime="20201115 23:02:57.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:57.150" level="INFO">${ACCURACY} = {'time': [0.027198278, 0.0272315, 0.027264236, 0.027297278, 0.027319319, 0.027342458, 0.027369653, 0.027401431, 0.027429417, 0.027460472, 0.0274835, 0.027507556, 0.027539542, 0.027565611, 0.027588403,...</msg>
<status status="PASS" starttime="20201115 23:02:57.121" endtime="20201115 23:02:57.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.161" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:57.159" endtime="20201115 23:02:57.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.166" level="INFO">VALUE: [1.8069999999998504e-05, 1.8055999999998934e-05, 1.7542000000002334e-05, 1.8084000000001543e-05, 1.751300000000025e-05, 1.755499999999896e-05, 1.8070000000001973e-05, 1.8070000000001973e-05, 1.7598000000000613e-05, 1.804099999999989e-05, 1.80690000000025e-05, 1.8055999999998934e-05, 1.8069999999998504e-05, 1.7569000000002e-05, 1.8041999999999364e-05, 1.8069999999998504e-05, 1.755499999999896e-05, 1.7500000000000154e-05, 1.8041999999999364e-05, 1.7513999999999724e-05, 1.761100000000071e-05, 1.8013999999996755e-05, 1.813900000000035e-05, 1.806899999999903e-05, 1.8070000000001973e-05, 1.806899999999903e-05, 1.751300000000025e-05, 1.8055999999998934e-05, 1.8069999999998504e-05, 1.7513999999999724e-05, 1.7458000000001445e-05, 1.811100000000121e-05, 1.8014000000000224e-05, 1.806899999999903e-05, 1.7527999999999294e-05, 1.7500000000000154e-05, 1.7570000000001473e-05, 1.80829999999986e-05, 1.7569999999998004e-05, 1.8055999999998934e-05, 1.7528000000002764e-05, 1.7027999999998794e-05, 1.806899999999903e-05, 1.7513999999999724e-05, 1.755500000000243e-05, 1.805499999999946e-05, 1.805499999999946e-05, 1.812500000000078e-05, 1.755500000000243e-05, 1.752699999999982e-05]</msg>
<status status="PASS" starttime="20201115 23:02:57.163" endtime="20201115 23:02:57.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.152" endtime="20201115 23:02:57.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.177" endtime="20201115 23:02:57.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:57.186" endtime="20201115 23:02:57.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.181" endtime="20201115 23:02:57.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.173" endtime="20201115 23:02:57.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.696" endtime="20201115 23:02:57.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.694" endtime="20201115 23:02:57.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.693" endtime="20201115 23:02:57.212"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.239" endtime="20201115 23:02:57.258"></status>
</kw>
<msg timestamp="20201115 23:02:57.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.236" endtime="20201115 23:02:57.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.262" endtime="20201115 23:02:57.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.268" endtime="20201115 23:02:57.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.228" endtime="20201115 23:02:57.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.223" endtime="20201115 23:02:57.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.291" endtime="20201115 23:02:57.638"></status>
</kw>
<msg timestamp="20201115 23:02:57.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047429514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047448653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.288" endtime="20201115 23:02:57.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047429514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047448653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.648" endtime="20201115 23:02:57.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.666" endtime="20201115 23:02:57.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.281" endtime="20201115 23:02:57.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.276" endtime="20201115 23:02:57.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.684" level="INFO">${RESULT} = [{'time': 0.047448653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.913900000000135e-05, 'source_diff': 1.913900000000135e-05}, {'time': 0.047476333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:57.675" endtime="20201115 23:02:57.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:57.715" level="INFO">${ACCURACY} = {'time': [0.047448653, 0.047476333, 0.047502194, 0.047531389, 0.047560264, 0.047582236, 0.047613583, 0.047638431, 0.047668222, 0.047695514, 0.047727361, 0.047756694, 0.047777264, 0.047800611, 0.047829...</msg>
<status status="PASS" starttime="20201115 23:02:57.686" endtime="20201115 23:02:57.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.726" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:57.723" endtime="20201115 23:02:57.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.732" level="INFO">VALUE: [1.913900000000135e-05, 1.855500000000343e-05, 1.85969999999952e-05, 1.861100000000171e-05, 1.8069999999995034e-05, 1.805500000000293e-05, 1.863900000000085e-05, 1.912500000000178e-05, 1.858300000000257e-05, 1.858300000000257e-05, 1.8569000000003e-05, 1.9166000000001016e-05, 1.858300000000257e-05, 1.861100000000171e-05, 1.8570000000002473e-05, 1.912500000000178e-05, 1.861100000000171e-05, 1.9098000000002113e-05, 1.856899999999606e-05, 1.913900000000135e-05, 1.858299999999563e-05, 1.858300000000257e-05, 1.861100000000171e-05, 1.913900000000135e-05, 1.8583999999995104e-05, 1.912500000000178e-05, 1.8056000000002403e-05, 1.8570000000002473e-05, 1.8598000000001613e-05, 1.913899999999441e-05, 1.8555999999995965e-05, 1.9112000000001683e-05, 1.8069999999995034e-05, 1.808299999999513e-05, 1.861100000000171e-05, 1.861100000000171e-05, 1.916700000000049e-05, 1.90969999999957e-05, 1.805499999999599e-05, 1.912500000000178e-05, 1.9098000000002113e-05, 1.80690000000025e-05, 1.8598000000001613e-05, 1.7985999999997615e-05, 1.8055999999995465e-05, 1.912500000000178e-05, 1.859700000000214e-05, 1.855499999999649e-05, 1.861100000000171e-05, 1.806899999999556e-05]</msg>
<status status="PASS" starttime="20201115 23:02:57.728" endtime="20201115 23:02:57.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.717" endtime="20201115 23:02:57.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.742" endtime="20201115 23:02:57.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:57.751" endtime="20201115 23:02:57.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.746" endtime="20201115 23:02:57.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.738" endtime="20201115 23:02:57.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.219" endtime="20201115 23:02:57.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.215" endtime="20201115 23:02:57.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.213" endtime="20201115 23:02:57.777"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.804" endtime="20201115 23:02:57.823"></status>
</kw>
<msg timestamp="20201115 23:02:57.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.801" endtime="20201115 23:02:57.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.826" endtime="20201115 23:02:57.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.832" endtime="20201115 23:02:57.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.794" endtime="20201115 23:02:57.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.788" endtime="20201115 23:02:57.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.856" endtime="20201115 23:02:58.204"></status>
</kw>
<msg timestamp="20201115 23:02:58.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046937764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046956917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.853" endtime="20201115 23:02:58.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046937764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046956917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.214" endtime="20201115 23:02:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.233" endtime="20201115 23:02:58.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.845" endtime="20201115 23:02:58.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.840" endtime="20201115 23:02:58.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:58.251" level="INFO">${RESULT} = [{'time': 0.046956917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915300000000092e-05, 'source_diff': 1.915300000000092e-05}, {'time': 0.046980347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:58.242" endtime="20201115 23:02:58.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.282" level="INFO">${ACCURACY} = {'time': [0.046956917, 0.046980347, 0.047009028, 0.047033111, 0.047064319, 0.047088958, 0.047115347, 0.047137014, 0.047168194, 0.047202361, 0.047233111, 0.047262417, 0.047297153, 0.047323319, 0.047350...</msg>
<status status="PASS" starttime="20201115 23:02:58.253" endtime="20201115 23:02:58.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.293" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.291" endtime="20201115 23:02:58.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.300" level="INFO">VALUE: [1.915300000000092e-05, 2.0194000000001155e-05, 1.915300000000092e-05, 2.0180000000001586e-05, 2.0194000000001155e-05, 1.909700000000264e-05, 2.0166000000002016e-05, 1.95969999999962e-05, 2.0165999999995077e-05, 1.962499999999534e-05, 2.016700000000149e-05, 2.016700000000149e-05, 2.018100000000106e-05, 2.0166000000002016e-05, 1.9112000000001683e-05, 1.912499999999484e-05, 1.9652000000001946e-05, 2.0263999999999005e-05, 2.0152000000002446e-05, 2.018099999999412e-05, 2.016700000000149e-05, 2.0207999999993786e-05, 1.962500000000228e-05, 1.962500000000228e-05, 2.015300000000192e-05, 1.913900000000135e-05, 1.965300000000142e-05, 1.9666000000001516e-05, 1.965300000000142e-05, 1.9694000000000655e-05, 1.9680000000001086e-05, 1.913899999999441e-05, 1.9680000000001086e-05, 1.9666000000001516e-05, 1.9708000000000225e-05, 2.0180000000001586e-05, 1.962500000000228e-05, 1.9069999999996035e-05, 1.9584000000003043e-05, 1.912500000000178e-05, 1.962500000000228e-05, 1.962500000000228e-05, 1.911100000000221e-05, 1.9666000000001516e-05, 1.9138000000001876e-05, 1.963900000000185e-05, 2.016700000000149e-05, 1.965300000000142e-05, 1.909700000000264e-05, 1.912499999999484e-05]</msg>
<status status="PASS" starttime="20201115 23:02:58.296" endtime="20201115 23:02:58.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.284" endtime="20201115 23:02:58.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.309" endtime="20201115 23:02:58.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.317" endtime="20201115 23:02:58.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.313" endtime="20201115 23:02:58.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.304" endtime="20201115 23:02:58.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.784" endtime="20201115 23:02:58.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.780" endtime="20201115 23:02:58.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.778" endtime="20201115 23:02:58.345"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.350" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.372" endtime="20201115 23:02:58.390"></status>
</kw>
<msg timestamp="20201115 23:02:58.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.368" endtime="20201115 23:02:58.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.393" endtime="20201115 23:02:58.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.400" endtime="20201115 23:02:58.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.361" endtime="20201115 23:02:58.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.355" endtime="20201115 23:02:58.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.423" endtime="20201115 23:02:58.777"></status>
</kw>
<msg timestamp="20201115 23:02:58.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047641125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047661847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.420" endtime="20201115 23:02:58.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047641125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047661847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.787" endtime="20201115 23:02:58.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.806" endtime="20201115 23:02:58.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.413" endtime="20201115 23:02:58.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.408" endtime="20201115 23:02:58.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:58.824" level="INFO">${RESULT} = [{'time': 0.047661847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0722000000000795e-05, 'source_diff': 2.0722000000000795e-05}, {'time': 0.047695736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:58.814" endtime="20201115 23:02:58.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.858" level="INFO">${ACCURACY} = {'time': [0.047661847, 0.047695736, 0.047721792, 0.047747431, 0.047770778, 0.047795542, 0.047822667, 0.047850653, 0.047885778, 0.047914778, 0.047945736, 0.047971625, 0.047998764, 0.048026764, 0.048059...</msg>
<status status="PASS" starttime="20201115 23:02:58.826" endtime="20201115 23:02:58.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.868" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.866" endtime="20201115 23:02:58.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.875" level="INFO">VALUE: [2.0722000000000795e-05, 2.1222000000001295e-05, 2.066700000000199e-05, 2.068100000000156e-05, 2.1236000000000865e-05, 2.069500000000113e-05, 2.072300000000027e-05, 2.0736000000000365e-05, 2.120899999999426e-05, 2.07090000000007e-05, 2.1222000000001295e-05, 2.0707999999994287e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.065300000000242e-05, 2.0680000000002086e-05, 2.016700000000149e-05, 2.068100000000156e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.0680000000002086e-05, 2.0736000000000365e-05, 2.015300000000192e-05, 2.1264000000000005e-05, 2.1236000000000865e-05, 2.016700000000149e-05, 2.122300000000077e-05, 2.130499999999924e-05, 2.068100000000156e-05, 2.0722000000000795e-05, 2.129099999999967e-05, 2.072300000000027e-05, 2.079099999999917e-05, 2.068100000000156e-05, 2.018100000000106e-05, 2.0736000000000365e-05, 2.1249999999993496e-05, 2.1236000000000865e-05, 2.0722000000000795e-05, 2.018100000000106e-05, 2.0805999999998215e-05, 2.0694000000001656e-05, 2.1236000000000865e-05, 2.0749999999999935e-05, 2.0722000000000795e-05, 2.1236000000000865e-05, 2.1236000000000865e-05, 2.016700000000149e-05, 2.011099999999627e-05]</msg>
<status status="PASS" starttime="20201115 23:02:58.871" endtime="20201115 23:02:58.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.859" endtime="20201115 23:02:58.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.884" endtime="20201115 23:02:58.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.893" endtime="20201115 23:02:58.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.888" endtime="20201115 23:02:58.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.879" endtime="20201115 23:02:58.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.351" endtime="20201115 23:02:58.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.347" endtime="20201115 23:02:58.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.345" endtime="20201115 23:02:58.919"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.925" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.946" endtime="20201115 23:02:58.966"></status>
</kw>
<msg timestamp="20201115 23:02:58.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.943" endtime="20201115 23:02:58.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.969" endtime="20201115 23:02:58.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.975" endtime="20201115 23:02:58.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.936" endtime="20201115 23:02:58.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.930" endtime="20201115 23:02:58.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.999" endtime="20201115 23:02:59.348"></status>
</kw>
<msg timestamp="20201115 23:02:59.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047575306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047597028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.995" endtime="20201115 23:02:59.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047575306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047597028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.357" endtime="20201115 23:02:59.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.376" endtime="20201115 23:02:59.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.988" endtime="20201115 23:02:59.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.983" endtime="20201115 23:02:59.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:59.394" level="INFO">${RESULT} = [{'time': 0.047597028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1722000000001795e-05, 'source_diff': 2.1722000000001795e-05}, {'time': 0.047626889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:59.385" endtime="20201115 23:02:59.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:59.424" level="INFO">${ACCURACY} = {'time': [0.047597028, 0.047626889, 0.047657069, 0.047681681, 0.047717056, 0.047744833, 0.047776625, 0.04780575, 0.047833111, 0.047864125, 0.047893972, 0.047917861, 0.047952917, 0.047982056, 0.0480131...</msg>
<status status="PASS" starttime="20201115 23:02:59.396" endtime="20201115 23:02:59.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.435" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:59.433" endtime="20201115 23:02:59.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.442" level="INFO">VALUE: [2.1722000000001795e-05, 2.1750000000000935e-05, 2.2236000000001865e-05, 2.17369999999939e-05, 2.2305999999999715e-05, 2.179100000000017e-05, 2.1208000000001725e-05, 2.1236000000000865e-05, 2.1791999999999645e-05, 2.2305999999999715e-05, 2.1778000000000075e-05, 2.1208000000001725e-05, 2.1764000000000505e-05, 2.2319999999999285e-05, 2.1763999999993566e-05, 2.1750000000000935e-05, 2.179100000000017e-05, 2.2278000000000575e-05, 2.1750000000000935e-05, 2.1749999999993996e-05, 2.1778000000000075e-05, 2.2319999999999285e-05, 2.1250000000000435e-05, 2.1222000000001295e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.183300000000582e-05, 2.1778000000000075e-05, 2.1207999999994787e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.122300000000077e-05, 2.1236000000000865e-05, 2.1236000000000865e-05, 2.1236000000000865e-05, 2.1777999999993136e-05, 2.1764000000000505e-05, 2.180499999999974e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.233299999999938e-05, 2.1736000000001365e-05, 2.1250000000000435e-05, 2.1805999999999215e-05, 2.1735999999994426e-05, 2.1221999999994356e-05, 2.1764000000000505e-05, 2.1708000000002226e-05, 2.1778000000000075e-05, 2.1764000000000505e-05]</msg>
<status status="PASS" starttime="20201115 23:02:59.438" endtime="20201115 23:02:59.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.426" endtime="20201115 23:02:59.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.451" endtime="20201115 23:02:59.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:59.459" endtime="20201115 23:02:59.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.455" endtime="20201115 23:02:59.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.446" endtime="20201115 23:02:59.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.926" endtime="20201115 23:02:59.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.922" endtime="20201115 23:02:59.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.920" endtime="20201115 23:02:59.486"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.491" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.512" endtime="20201115 23:02:59.532"></status>
</kw>
<msg timestamp="20201115 23:02:59.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.509" endtime="20201115 23:02:59.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.535" endtime="20201115 23:02:59.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.542" endtime="20201115 23:02:59.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.502" endtime="20201115 23:02:59.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.496" endtime="20201115 23:02:59.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.566" endtime="20201115 23:02:59.917"></status>
</kw>
<msg timestamp="20201115 23:02:59.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046738347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046760653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.562" endtime="20201115 23:02:59.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046738347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046760653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.926" endtime="20201115 23:02:59.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.945" endtime="20201115 23:02:59.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.555" endtime="20201115 23:02:59.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.550" endtime="20201115 23:02:59.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:59.963" level="INFO">${RESULT} = [{'time': 0.046760653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2305999999999715e-05, 'source_diff': 2.2305999999999715e-05}, {'time': 0.046790806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:59.954" endtime="20201115 23:02:59.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:59.993" level="INFO">${ACCURACY} = {'time': [0.046760653, 0.046790806, 0.046828611, 0.046854931, 0.046890569, 0.046920681, 0.046956986, 0.046987667, 0.047024833, 0.047055625, 0.047092778, 0.047122875, 0.047147708, 0.047174056, 0.047211...</msg>
<status status="PASS" starttime="20201115 23:02:59.965" endtime="20201115 23:02:59.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.005" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:03:00.002" endtime="20201115 23:03:00.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.011" level="INFO">VALUE: [2.2305999999999715e-05, 2.2292000000000145e-05, 2.284699999999945e-05, 2.287500000000553e-05, 2.27770000000016e-05, 2.2847999999998925e-05, 2.283299999999988e-05, 2.237499999999809e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.2833999999999355e-05, 2.283299999999988e-05, 2.27770000000016e-05, 2.2847999999998925e-05, 2.3347999999999425e-05, 2.286099999999902e-05, 2.334699999999995e-05, 2.333300000000038e-05, 2.287499999999859e-05, 2.230500000000024e-05, 2.2806000000000215e-05, 2.279100000000117e-05, 2.2707999999996287e-05, 2.3347999999999425e-05, 2.2834000000006294e-05, 2.2806000000000215e-05, 2.2305999999999715e-05, 2.283299999999988e-05, 2.2236000000001865e-05, 2.281900000000031e-05, 2.2792000000000645e-05, 2.333300000000038e-05, 2.2792000000000645e-05, 2.2777999999994136e-05, 2.2292000000000145e-05, 2.279100000000117e-05, 2.2278000000000575e-05, 2.2777999999994136e-05, 2.2277999999993636e-05, 2.280500000000074e-05, 2.286099999999902e-05, 2.3333999999999855e-05, 2.2819999999999785e-05, 2.2792000000000645e-05, 2.229100000000067e-05, 2.283299999999988e-05, 2.3319999999993346e-05, 2.2792000000000645e-05, 2.283299999999988e-05, 2.280500000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:03:00.007" endtime="20201115 23:03:00.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.995" endtime="20201115 23:03:00.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.020" endtime="20201115 23:03:00.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.025" endtime="20201115 23:03:00.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.023" endtime="20201115 23:03:00.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.015" endtime="20201115 23:03:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.492" endtime="20201115 23:03:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.488" endtime="20201115 23:03:00.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.487" endtime="20201115 23:03:00.047"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.060" endtime="20201115 23:03:00.076"></status>
</kw>
<msg timestamp="20201115 23:03:00.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.058" endtime="20201115 23:03:00.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.077" endtime="20201115 23:03:00.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.080" endtime="20201115 23:03:00.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.055" endtime="20201115 23:03:00.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.052" endtime="20201115 23:03:00.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.091" endtime="20201115 23:03:00.391"></status>
</kw>
<msg timestamp="20201115 23:03:00.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027629375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027663917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.090" endtime="20201115 23:03:00.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027629375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027663917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.401" endtime="20201115 23:03:00.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.420" endtime="20201115 23:03:00.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.086" endtime="20201115 23:03:00.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.084" endtime="20201115 23:03:00.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:00.437" level="INFO">${RESULT} = [{'time': 0.027663917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.454199999999852e-05, 'source_diff': 3.454199999999852e-05}, {'time': 0.027712931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:00.428" endtime="20201115 23:03:00.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:00.468" level="INFO">${ACCURACY} = {'time': [0.027663917, 0.027712931, 0.027750931, 0.027792972, 0.027839931, 0.027885944, 0.027925958, 0.027974944, 0.028013972, 0.028061958, 0.028107958, 0.028153986, 0.028197972, 0.028247014, 0.028294...</msg>
<status status="PASS" starttime="20201115 23:03:00.439" endtime="20201115 23:03:00.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.479" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:03:00.477" endtime="20201115 23:03:00.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.486" level="INFO">VALUE: [3.454199999999852e-05, 3.4888999999999754e-05, 3.5139000000000004e-05, 3.4790999999999295e-05, 3.49589999999976e-05, 3.416599999999867e-05, 3.443000000000196e-05, 3.420800000000085e-05, 3.5097000000001294e-05, 3.449999999999981e-05, 3.4582999999997754e-05, 3.416699999999814e-05, 3.44580000000011e-05, 3.4902999999999323e-05, 3.494399999999856e-05, 3.4554999999998615e-05, 3.5111000000000864e-05, 3.495799999999813e-05, 3.452800000000242e-05, 3.423599999999999e-05, 3.4332999999997504e-05, 3.5097000000001294e-05, 3.498599999999727e-05, 3.495900000000107e-05, 3.448600000000024e-05, 3.4875000000000184e-05, 3.500000000000031e-05, 3.491699999999889e-05, 3.509800000000077e-05, 3.444499999999753e-05, 3.426399999999913e-05, 3.513800000000053e-05, 3.450000000000328e-05, 3.4638999999999504e-05, 3.466599999999917e-05, 3.475000000000006e-05, 3.470800000000135e-05, 3.497200000000117e-05, 3.4833000000001474e-05, 3.4846999999997574e-05, 3.4583000000001224e-05, 3.424999999999956e-05, 3.5069000000002154e-05, 3.454199999999852e-05, 3.4818999999998435e-05, 3.429199999999827e-05, 3.451400000000285e-05, 3.5096999999997824e-05, 3.449999999999981e-05, 3.429199999999827e-05]</msg>
<status status="PASS" starttime="20201115 23:03:00.481" endtime="20201115 23:03:00.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.470" endtime="20201115 23:03:00.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.495" endtime="20201115 23:03:00.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.503" endtime="20201115 23:03:00.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.498" endtime="20201115 23:03:00.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.490" endtime="20201115 23:03:00.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.050" endtime="20201115 23:03:00.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.048" endtime="20201115 23:03:00.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.047" endtime="20201115 23:03:00.530"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.535" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.557" endtime="20201115 23:03:00.576"></status>
</kw>
<msg timestamp="20201115 23:03:00.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.554" endtime="20201115 23:03:00.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.580" endtime="20201115 23:03:00.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.586" endtime="20201115 23:03:00.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.546" endtime="20201115 23:03:00.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.541" endtime="20201115 23:03:00.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.609" endtime="20201115 23:03:00.966"></status>
</kw>
<msg timestamp="20201115 23:03:00.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046734931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046770917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.606" endtime="20201115 23:03:00.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046734931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046770917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.975" endtime="20201115 23:03:00.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.994" endtime="20201115 23:03:00.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.599" endtime="20201115 23:03:00.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.594" endtime="20201115 23:03:01.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.011" level="INFO">${RESULT} = [{'time': 0.046770917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.598600000000174e-05, 'source_diff': 3.598600000000174e-05}, {'time': 0.046808917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:01.002" endtime="20201115 23:03:01.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.044" level="INFO">${ACCURACY} = {'time': [0.046770917, 0.046808917, 0.046848931, 0.046890931, 0.046932931, 0.046977931, 0.047026944, 0.047064958, 0.047108944, 0.047155958, 0.047202986, 0.047246028, 0.047287972, 0.047335028, 0.047377...</msg>
<status status="PASS" starttime="20201115 23:03:01.013" endtime="20201115 23:03:01.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.055" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.053" endtime="20201115 23:03:01.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.062" level="INFO">VALUE: [3.598600000000174e-05, 3.533399999999798e-05, 3.584800000000499e-05, 3.55979999999978e-05, 3.574999999999412e-05, 3.5874999999997714e-05, 3.613799999999806e-05, 3.574999999999412e-05, 3.570800000000235e-05, 3.5804999999999865e-05, 3.5804999999999865e-05, 3.540300000000329e-05, 3.601400000000088e-05, 3.5846999999998574e-05, 3.5318999999998935e-05, 3.520800000000185e-05, 3.57780000000002e-05, 3.601400000000088e-05, 3.5680999999995744e-05, 3.543100000000243e-05, 3.5846999999998574e-05, 3.601400000000088e-05, 3.554199999999952e-05, 3.5332999999998504e-05, 3.5666999999996174e-05, 3.525000000000056e-05, 3.552799999999995e-05, 3.5582999999998755e-05, 3.605599999999959e-05, 3.541700000000286e-05, 3.513900000000347e-05, 3.545900000000157e-05, 3.5304999999999365e-05, 3.573600000000149e-05, 3.6082999999999255e-05, 3.544399999999559e-05, 3.5388999999996784e-05, 3.594399999999609e-05, 3.516600000000314e-05, 3.544400000000253e-05, 3.542999999999602e-05, 3.576400000000063e-05, 3.566700000000311e-05, 3.5582999999998755e-05, 3.555600000000603e-05, 3.594400000000303e-05, 3.518100000000218e-05, 3.576400000000063e-05, 3.572200000000192e-05, 3.537500000000415e-05]</msg>
<status status="PASS" starttime="20201115 23:03:01.058" endtime="20201115 23:03:01.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.046" endtime="20201115 23:03:01.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.072" endtime="20201115 23:03:01.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.080" endtime="20201115 23:03:01.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.075" endtime="20201115 23:03:01.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.067" endtime="20201115 23:03:01.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.537" endtime="20201115 23:03:01.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.533" endtime="20201115 23:03:01.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.531" endtime="20201115 23:03:01.107"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.133" endtime="20201115 23:03:01.152"></status>
</kw>
<msg timestamp="20201115 23:03:01.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.130" endtime="20201115 23:03:01.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.156" endtime="20201115 23:03:01.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.162" endtime="20201115 23:03:01.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.123" endtime="20201115 23:03:01.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.117" endtime="20201115 23:03:01.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.185" endtime="20201115 23:03:01.556"></status>
</kw>
<msg timestamp="20201115 23:03:01.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046971389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047008319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.182" endtime="20201115 23:03:01.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046971389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047008319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.567" endtime="20201115 23:03:01.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.586" endtime="20201115 23:03:01.590"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.175" endtime="20201115 23:03:01.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.170" endtime="20201115 23:03:01.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.604" level="INFO">${RESULT} = [{'time': 0.047008319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.692999999999752e-05, 'source_diff': 3.692999999999752e-05}, {'time': 0.047056306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:01.595" endtime="20201115 23:03:01.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.634" level="INFO">${ACCURACY} = {'time': [0.047008319, 0.047056306, 0.047097333, 0.047144319, 0.047189333, 0.047228333, 0.047271333, 0.047316333, 0.047366347, 0.047408347, 0.047448347, 0.047494389, 0.047537361, 0.047586361, 0.047625...</msg>
<status status="PASS" starttime="20201115 23:03:01.606" endtime="20201115 23:03:01.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.646" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.643" endtime="20201115 23:03:01.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.653" level="INFO">VALUE: [3.692999999999752e-05, 3.6374999999998214e-05, 3.690199999999838e-05, 3.6833000000000005e-05, 3.672200000000292e-05, 3.6346999999999074e-05, 3.61659999999972e-05, 3.7124999999998964e-05, 3.6305000000000365e-05, 3.620800000000285e-05, 3.7124999999998964e-05, 3.6902999999997854e-05, 3.6582999999999755e-05, 3.670800000000335e-05, 3.6360999999998644e-05, 3.650000000000181e-05, 3.670799999999641e-05, 3.675000000000206e-05, 3.7110999999999394e-05, 3.679199999999383e-05, 3.613900000000447e-05, 3.6138999999997534e-05, 3.6888999999998284e-05, 3.70979999999993e-05, 3.708399999999973e-05, 3.629200000000027e-05, 3.683399999999948e-05, 3.669399999999684e-05, 3.6512999999994966e-05, 3.643100000000343e-05, 3.636100000000558e-05, 3.670800000000335e-05, 3.669399999999684e-05, 3.6777000000001725e-05, 3.692999999999752e-05, 3.6902999999997854e-05, 3.650000000000181e-05, 3.6624999999998464e-05, 3.6596999999999325e-05, 3.651399999999444e-05, 3.654200000000052e-05, 3.6680999999996744e-05, 3.650000000000181e-05, 3.7012999999995466e-05, 3.6374999999998214e-05, 3.6305000000000365e-05, 3.691700000000436e-05, 3.667999999999727e-05, 3.62780000000007e-05, 3.679200000000077e-05]</msg>
<status status="PASS" starttime="20201115 23:03:01.648" endtime="20201115 23:03:01.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.636" endtime="20201115 23:03:01.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.662" endtime="20201115 23:03:01.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.670" endtime="20201115 23:03:01.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.666" endtime="20201115 23:03:01.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.657" endtime="20201115 23:03:01.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.113" endtime="20201115 23:03:01.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.109" endtime="20201115 23:03:01.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.108" endtime="20201115 23:03:01.697"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.725" endtime="20201115 23:03:01.745"></status>
</kw>
<msg timestamp="20201115 23:03:01.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.722" endtime="20201115 23:03:01.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.748" endtime="20201115 23:03:01.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.755" endtime="20201115 23:03:01.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.715" endtime="20201115 23:03:01.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.708" endtime="20201115 23:03:01.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.778" endtime="20201115 23:03:02.127"></status>
</kw>
<msg timestamp="20201115 23:03:02.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048681625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048719181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.775" endtime="20201115 23:03:02.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048681625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048719181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.136" endtime="20201115 23:03:02.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.155" endtime="20201115 23:03:02.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.768" endtime="20201115 23:03:02.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.763" endtime="20201115 23:03:02.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:02.172" level="INFO">${RESULT} = [{'time': 0.048719181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.755600000000109e-05, 'source_diff': 3.755600000000109e-05}, {'time': 0.048763194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:02.163" endtime="20201115 23:03:02.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:02.203" level="INFO">${ACCURACY} = {'time': [0.048719181, 0.048763194, 0.048809194, 0.048854208, 0.048899194, 0.048941194, 0.048993208, 0.049041208, 0.049083236, 0.049135222, 0.049178222, 0.049222236, 0.049266278, 0.04931225, 0.0493572...</msg>
<status status="PASS" starttime="20201115 23:03:02.175" endtime="20201115 23:03:02.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.214" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:03:02.212" endtime="20201115 23:03:02.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.221" level="INFO">VALUE: [3.755600000000109e-05, 3.8013000000003405e-05, 3.7847000000000575e-05, 3.7569000000001185e-05, 3.795799999999766e-05, 3.765199999999913e-05, 3.788900000000622e-05, 3.8041000000002545e-05, 3.7819000000001435e-05, 3.76659999999987e-05, 3.741599999999845e-05, 3.801400000000288e-05, 3.755599999999415e-05, 3.730600000000084e-05, 3.7347000000000075e-05, 3.773600000000349e-05, 3.7819000000001435e-05, 3.774999999999612e-05, 3.750000000000281e-05, 3.749999999999587e-05, 3.804200000000202e-05, 3.783400000000048e-05, 3.806999999999422e-05, 3.7416999999997924e-05, 3.7472999999996204e-05, 3.738799999999931e-05, 3.718000000000471e-05, 3.749999999999587e-05, 3.800000000000331e-05, 3.740199999999888e-05, 3.8083000000001255e-05, 3.8124999999999964e-05, 3.770799999999741e-05, 3.7833000000001005e-05, 3.7916999999998424e-05, 3.722200000000342e-05, 3.8138999999999534e-05, 3.7832999999994066e-05, 3.804199999999508e-05, 3.8124999999999964e-05, 3.7416999999997924e-05, 3.719500000000375e-05, 3.8124999999999964e-05, 3.754200000000152e-05, 3.747199999999673e-05, 3.7430999999997494e-05, 3.754200000000152e-05, 3.7374999999999214e-05, 3.754200000000152e-05, 3.732000000000041e-05]</msg>
<status status="PASS" starttime="20201115 23:03:02.216" endtime="20201115 23:03:02.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.205" endtime="20201115 23:03:02.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.230" endtime="20201115 23:03:02.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:02.238" endtime="20201115 23:03:02.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.234" endtime="20201115 23:03:02.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.225" endtime="20201115 23:03:02.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.704" endtime="20201115 23:03:02.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.700" endtime="20201115 23:03:02.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.698" endtime="20201115 23:03:02.264"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.291" endtime="20201115 23:03:02.312"></status>
</kw>
<msg timestamp="20201115 23:03:02.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.288" endtime="20201115 23:03:02.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.315" endtime="20201115 23:03:02.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.321" endtime="20201115 23:03:02.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.281" endtime="20201115 23:03:02.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.275" endtime="20201115 23:03:02.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.344" endtime="20201115 23:03:02.690"></status>
</kw>
<msg timestamp="20201115 23:03:02.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047027556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047066056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.341" endtime="20201115 23:03:02.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047027556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047066056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.699" endtime="20201115 23:03:02.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.719" endtime="20201115 23:03:02.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.334" endtime="20201115 23:03:02.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.329" endtime="20201115 23:03:02.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:02.738" level="INFO">${RESULT} = [{'time': 0.047066056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.850000000000381e-05, 'source_diff': 3.850000000000381e-05}, {'time': 0.047108056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:02.728" endtime="20201115 23:03:02.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:02.769" level="INFO">${ACCURACY} = {'time': [0.047066056, 0.047108056, 0.047161069, 0.047214069, 0.047256125, 0.047297069, 0.047341139, 0.047390083, 0.047442097, 0.047494111, 0.047537111, 0.047587111, 0.047636167, 0.047689111, 0.047732...</msg>
<status status="PASS" starttime="20201115 23:03:02.740" endtime="20201115 23:03:02.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.780" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:03:02.777" endtime="20201115 23:03:02.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.787" level="INFO">VALUE: [3.850000000000381e-05, 3.829200000000227e-05, 3.86659999999997e-05, 3.847199999999773e-05, 3.8333000000001505e-05, 3.8540999999996106e-05, 3.827799999999576e-05, 3.841599999999945e-05, 3.892999999999952e-05, 3.849999999999687e-05, 3.847199999999773e-05, 3.817999999999877e-05, 3.826400000000313e-05, 3.824999999999662e-05, 3.84859999999973e-05, 3.919399999999934e-05, 3.8625000000000465e-05, 3.851400000000338e-05, 3.9083000000002255e-05, 3.897199999999823e-05, 3.905599999999565e-05, 3.883400000000148e-05, 3.8889000000000284e-05, 3.85980000000008e-05, 3.902799999999651e-05, 3.899999999999737e-05, 3.8902999999999854e-05, 3.888800000000081e-05, 3.8861000000001145e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.84859999999973e-05, 3.9125000000000965e-05, 3.8611000000000895e-05, 3.849999999999687e-05, 3.9054999999996176e-05, 3.855600000000209e-05, 3.824999999999662e-05, 3.9180999999999244e-05, 3.877799999999626e-05, 3.855600000000209e-05, 3.834800000000055e-05, 3.822200000000442e-05, 3.8889000000000284e-05, 3.833400000000098e-05, 3.88059999999954e-05, 3.87780000000032e-05, 3.8472999999997204e-05, 3.8666999999999174e-05, 3.8262999999996716e-05]</msg>
<status status="PASS" starttime="20201115 23:03:02.782" endtime="20201115 23:03:02.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.771" endtime="20201115 23:03:02.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.795" endtime="20201115 23:03:02.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:02.804" endtime="20201115 23:03:02.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.799" endtime="20201115 23:03:02.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.791" endtime="20201115 23:03:02.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.271" endtime="20201115 23:03:02.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.267" endtime="20201115 23:03:02.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.265" endtime="20201115 23:03:02.830"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.857" endtime="20201115 23:03:02.877"></status>
</kw>
<msg timestamp="20201115 23:03:02.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.854" endtime="20201115 23:03:02.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.880" endtime="20201115 23:03:02.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.887" endtime="20201115 23:03:02.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.847" endtime="20201115 23:03:02.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.841" endtime="20201115 23:03:02.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.911" endtime="20201115 23:03:03.256"></status>
</kw>
<msg timestamp="20201115 23:03:03.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047213069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047253042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.907" endtime="20201115 23:03:03.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047213069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047253042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.265" endtime="20201115 23:03:03.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.284" endtime="20201115 23:03:03.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.899" endtime="20201115 23:03:03.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.895" endtime="20201115 23:03:03.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.302" level="INFO">${RESULT} = [{'time': 0.047253042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9972999999998704e-05, 'source_diff': 3.9972999999998704e-05}, {'time': 0.047296, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:03.292" endtime="20201115 23:03:03.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:03.334" level="INFO">${ACCURACY} = {'time': [0.047253042, 0.047296, 0.047347014, 0.047396014, 0.047443014, 0.047486028, 0.047531028, 0.047580028, 0.047631028, 0.047681042, 0.047732042, 0.047784056, 0.047833056, 0.047875056, 0.047919056...</msg>
<status status="PASS" starttime="20201115 23:03:03.304" endtime="20201115 23:03:03.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.345" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:03:03.343" endtime="20201115 23:03:03.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.352" level="INFO">VALUE: [3.9972999999998704e-05, 3.93059999999959e-05, 3.9389000000000784e-05, 3.947199999999873e-05, 3.9347000000002075e-05, 3.929199999999633e-05, 3.9416999999999924e-05, 4.0097000000002825e-05, 3.979199999999683e-05, 3.9416999999999924e-05, 3.979200000000377e-05, 3.934800000000155e-05, 3.926399999999719e-05, 3.932000000000241e-05, 3.9444999999999064e-05, 3.94859999999983e-05, 3.9526999999997536e-05, 3.9597000000002325e-05, 3.915199999999369e-05, 4.0041000000004545e-05, 3.973599999999855e-05, 4.001399999999794e-05, 3.945799999999916e-05, 4.0139000000001535e-05, 3.997199999999923e-05, 3.9375000000001215e-05, 3.9874999999994776e-05, 3.949999999999787e-05, 3.97780000000042e-05, 3.93059999999959e-05, 4.0096999999995886e-05, 3.997199999999923e-05, 3.958400000000223e-05, 3.9472999999998204e-05, 3.955600000000309e-05, 3.9458999999998634e-05, 3.969399999999984e-05, 3.9917000000000424e-05, 3.983400000000248e-05, 3.999999999999837e-05, 3.9527000000004475e-05, 3.9903000000000854e-05, 3.9375000000001215e-05, 3.94580000000061e-05, 3.993000000000052e-05, 3.999999999999837e-05, 3.947199999999873e-05, 3.9804999999996926e-05, 3.9611000000001895e-05, 3.9430999999999494e-05]</msg>
<status status="PASS" starttime="20201115 23:03:03.347" endtime="20201115 23:03:03.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.336" endtime="20201115 23:03:03.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.361" endtime="20201115 23:03:03.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:03.369" endtime="20201115 23:03:03.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.365" endtime="20201115 23:03:03.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.356" endtime="20201115 23:03:03.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.837" endtime="20201115 23:03:03.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.833" endtime="20201115 23:03:03.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.831" endtime="20201115 23:03:03.395"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.422" endtime="20201115 23:03:03.442"></status>
</kw>
<msg timestamp="20201115 23:03:03.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.419" endtime="20201115 23:03:03.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.445" endtime="20201115 23:03:03.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.452" endtime="20201115 23:03:03.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.412" endtime="20201115 23:03:03.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.406" endtime="20201115 23:03:03.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.475" endtime="20201115 23:03:03.795"></status>
</kw>
<msg timestamp="20201115 23:03:03.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046935917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046976389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.472" endtime="20201115 23:03:03.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046935917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046976389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.804" endtime="20201115 23:03:03.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.823" endtime="20201115 23:03:03.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.465" endtime="20201115 23:03:03.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.460" endtime="20201115 23:03:03.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.840" level="INFO">${RESULT} = [{'time': 0.046976389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.047199999999973e-05, 'source_diff': 4.047199999999973e-05}, {'time': 0.047032389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:03.831" endtime="20201115 23:03:03.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:03.871" level="INFO">${ACCURACY} = {'time': [0.046976389, 0.047032389, 0.047079403, 0.047124403, 0.047173403, 0.047216417, 0.047267403, 0.047320458, 0.047375417, 0.047418472, 0.047471431, 0.047523486, 0.047569444, 0.047615472, 0.047660...</msg>
<status status="PASS" starttime="20201115 23:03:03.842" endtime="20201115 23:03:03.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.882" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:03:03.879" endtime="20201115 23:03:03.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.888" level="INFO">VALUE: [4.047199999999973e-05, 4.0833000000004005e-05, 4.058399999999629e-05, 4.026400000000513e-05, 4.051400000000538e-05, 4.0972999999999704e-05, 4.0194999999999814e-05, 4.099999999999937e-05, 4.0403000000001354e-05, 4.0597000000003325e-05, 4.0959000000000134e-05, 4.042999999999408e-05, 4.1041000000005545e-05, 4.0639000000002035e-05, 4.029200000000427e-05, 4.1138999999995596e-05, 4.022199999999948e-05, 4.0611000000002895e-05, 4.076399999999869e-05, 4.0889000000002285e-05, 4.043000000000102e-05, 4.0917000000001424e-05, 4.070800000000041e-05, 4.102799999999851e-05, 4.019400000000034e-05, 4.079199999999783e-05, 4.0347000000003075e-05, 4.045800000000016e-05, 4.030600000000384e-05, 4.0375000000002215e-05, 4.02780000000047e-05, 4.105600000000459e-05, 4.0931000000000994e-05, 4.049999999999887e-05, 4.0167000000000674e-05, 4.0194999999999814e-05, 4.097200000000023e-05, 4.051399999999844e-05, 4.0374999999995276e-05, 4.094400000000109e-05, 4.077799999999826e-05, 4.076399999999869e-05, 4.097200000000023e-05, 4.072199999999998e-05, 4.047199999999973e-05, 4.0832999999997066e-05, 4.0417000000000924e-05, 4.029200000000427e-05, 4.0332999999996566e-05, 4.057000000000366e-05]</msg>
<status status="PASS" starttime="20201115 23:03:03.884" endtime="20201115 23:03:03.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.873" endtime="20201115 23:03:03.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.897" endtime="20201115 23:03:03.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:03.905" endtime="20201115 23:03:03.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.901" endtime="20201115 23:03:03.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.893" endtime="20201115 23:03:03.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.402" endtime="20201115 23:03:03.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.398" endtime="20201115 23:03:03.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.396" endtime="20201115 23:03:03.932"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.937" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.960" endtime="20201115 23:03:03.979"></status>
</kw>
<msg timestamp="20201115 23:03:03.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.956" endtime="20201115 23:03:03.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.983" endtime="20201115 23:03:03.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.989" endtime="20201115 23:03:03.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.949" endtime="20201115 23:03:03.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.943" endtime="20201115 23:03:03.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.012" endtime="20201115 23:03:04.359"></status>
</kw>
<msg timestamp="20201115 23:03:04.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047788653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047830417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.009" endtime="20201115 23:03:04.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047788653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047830417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.369" endtime="20201115 23:03:04.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.388" endtime="20201115 23:03:04.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.002" endtime="20201115 23:03:04.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.997" endtime="20201115 23:03:04.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:04.405" level="INFO">${RESULT} = [{'time': 0.047830417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.176399999999969e-05, 'source_diff': 4.176399999999969e-05}, {'time': 0.047886472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:04.396" endtime="20201115 23:03:04.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:04.436" level="INFO">${ACCURACY} = {'time': [0.047830417, 0.047886472, 0.047942417, 0.047998431, 0.048053431, 0.048097444, 0.048145444, 0.048189486, 0.048233458, 0.048277472, 0.048328458, 0.048375486, 0.048423486, 0.048470486, 0.048514...</msg>
<status status="PASS" starttime="20201115 23:03:04.407" endtime="20201115 23:03:04.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.447" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:03:04.445" endtime="20201115 23:03:04.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.453" level="INFO">VALUE: [4.176399999999969e-05, 4.172200000000098e-05, 4.1653000000002605e-05, 4.1889000000003285e-05, 4.127799999999876e-05, 4.176300000000022e-05, 4.1790999999999356e-05, 4.1374999999996276e-05, 4.1346999999997136e-05, 4.197200000000123e-05, 4.145800000000116e-05, 4.122200000000048e-05, 4.1375000000003215e-05, 4.1846999999997636e-05, 4.197200000000123e-05, 4.1874999999996776e-05, 4.195799999999472e-05, 4.175000000000012e-05, 4.1596999999997386e-05, 4.1431000000001494e-05, 4.1667000000002175e-05, 4.206999999999822e-05, 4.209799999999736e-05, 4.200000000000037e-05, 4.161199999999643e-05, 4.1431000000001494e-05, 4.204199999999908e-05, 4.163800000000356e-05, 4.1236999999999524e-05, 4.1290999999998856e-05, 4.1624999999996526e-05, 4.155600000000509e-05, 4.169400000000184e-05, 4.170800000000141e-05, 4.1554999999998676e-05, 4.200000000000037e-05, 4.1818999999998496e-05, 4.1832999999998066e-05, 4.1431000000001494e-05, 4.156999999999772e-05, 4.14860000000003e-05, 4.1860999999997206e-05, 4.2111000000004395e-05, 4.1583000000004755e-05, 4.2139000000003535e-05, 4.129199999999833e-05, 4.129199999999833e-05, 4.1473000000000204e-05, 4.1832999999998066e-05, 4.1625000000003465e-05]</msg>
<status status="PASS" starttime="20201115 23:03:04.449" endtime="20201115 23:03:04.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.438" endtime="20201115 23:03:04.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.462" endtime="20201115 23:03:04.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:04.472" endtime="20201115 23:03:04.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.466" endtime="20201115 23:03:04.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.458" endtime="20201115 23:03:04.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.939" endtime="20201115 23:03:04.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.935" endtime="20201115 23:03:04.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.933" endtime="20201115 23:03:04.498"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.525" endtime="20201115 23:03:04.545"></status>
</kw>
<msg timestamp="20201115 23:03:04.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.522" endtime="20201115 23:03:04.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.549" endtime="20201115 23:03:04.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.555" endtime="20201115 23:03:04.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.514" endtime="20201115 23:03:04.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.509" endtime="20201115 23:03:04.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.578" endtime="20201115 23:03:04.924"></status>
</kw>
<msg timestamp="20201115 23:03:04.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046972444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047015194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.575" endtime="20201115 23:03:04.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046972444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047015194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.933" endtime="20201115 23:03:04.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.952" endtime="20201115 23:03:04.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.568" endtime="20201115 23:03:04.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.563" endtime="20201115 23:03:04.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:04.969" level="INFO">${RESULT} = [{'time': 0.047015194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.275000000000112e-05, 'source_diff': 4.275000000000112e-05}, {'time': 0.047069208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:04.960" endtime="20201115 23:03:04.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.000" level="INFO">${ACCURACY} = {'time': [0.047015194, 0.047069208, 0.047119208, 0.047173208, 0.047230292, 0.047279236, 0.04733525, 0.047389236, 0.047442264, 0.04749925, 0.04755525, 0.047609264, 0.047666264, 0.047717278, 0.047768278...</msg>
<status status="PASS" starttime="20201115 23:03:04.971" endtime="20201115 23:03:05.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.011" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.009" endtime="20201115 23:03:05.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.018" level="INFO">VALUE: [4.275000000000112e-05, 4.300000000000137e-05, 4.295800000000266e-05, 4.29860000000018e-05, 4.2945000000002564e-05, 4.301400000000094e-05, 4.252800000000001e-05, 4.2361000000004645e-05, 4.2652999999996666e-05, 4.225000000000062e-05, 4.269400000000284e-05, 4.2360999999997706e-05, 4.3082999999999316e-05, 4.3139000000004535e-05, 4.2902999999996916e-05, 4.258400000000523e-05, 4.301400000000094e-05, 4.2318999999998996e-05, 4.3110999999998456e-05, 4.2888999999997346e-05, 4.2653000000003605e-05, 4.266599999999676e-05, 4.28059999999994e-05, 4.243000000000302e-05, 4.220799999999497e-05, 4.29860000000018e-05, 4.2791000000000357e-05, 4.2625000000004465e-05, 4.2861000000005145e-05, 4.225000000000062e-05, 4.2624999999997526e-05, 4.227799999999976e-05, 4.255599999999915e-05, 4.2667000000003175e-05, 4.270800000000241e-05, 4.302800000000051e-05, 4.2167000000002675e-05, 4.2223000000000954e-05, 4.297200000000223e-05, 4.252800000000001e-05, 4.2874999999997776e-05, 4.229199999999933e-05, 4.3110999999998456e-05, 4.304099999999367e-05, 4.2290999999999856e-05, 4.222200000000148e-05, 4.2527000000000537e-05, 4.2903000000003855e-05, 4.2541000000000107e-05, 4.2360999999997706e-05]</msg>
<status status="PASS" starttime="20201115 23:03:05.013" endtime="20201115 23:03:05.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.002" endtime="20201115 23:03:05.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.027" endtime="20201115 23:03:05.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.036" endtime="20201115 23:03:05.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.031" endtime="20201115 23:03:05.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.023" endtime="20201115 23:03:05.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.505" endtime="20201115 23:03:05.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.501" endtime="20201115 23:03:05.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.499" endtime="20201115 23:03:05.062"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.067" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.089" endtime="20201115 23:03:05.109"></status>
</kw>
<msg timestamp="20201115 23:03:05.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.086" endtime="20201115 23:03:05.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.112" endtime="20201115 23:03:05.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.118" endtime="20201115 23:03:05.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.078" endtime="20201115 23:03:05.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.073" endtime="20201115 23:03:05.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.142" endtime="20201115 23:03:05.490"></status>
</kw>
<msg timestamp="20201115 23:03:05.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047031236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.138" endtime="20201115 23:03:05.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047031236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.499" endtime="20201115 23:03:05.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.518" endtime="20201115 23:03:05.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.131" endtime="20201115 23:03:05.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.127" endtime="20201115 23:03:05.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:05.535" level="INFO">${RESULT} = [{'time': 0.047031236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.326399999999425e-05, 'source_diff': 4.326399999999425e-05}, {'time': 0.04708425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:05.526" endtime="20201115 23:03:05.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.569" level="INFO">${ACCURACY} = {'time': [0.047031236, 0.04708425, 0.047137264, 0.047190264, 0.04724125, 0.047298319, 0.047355264, 0.047411278, 0.047469292, 0.047515306, 0.047568333, 0.047618306, 0.047666375, 0.047715306, 0.04776430...</msg>
<status status="PASS" starttime="20201115 23:03:05.538" endtime="20201115 23:03:05.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.580" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.577" endtime="20201115 23:03:05.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.587" level="INFO">VALUE: [4.326399999999425e-05, 4.347200000000273e-05, 4.326400000000119e-05, 4.347200000000273e-05, 4.325000000000162e-05, 4.3346999999999136e-05, 4.3695000000003315e-05, 4.329200000000033e-05, 4.3223000000001954e-05, 4.377800000000126e-05, 4.4096999999999886e-05, 4.3180999999996306e-05, 4.3332999999999566e-05, 4.3416999999996986e-05, 4.3388999999997846e-05, 4.341599999999751e-05, 4.3582999999999816e-05, 4.3639000000005035e-05, 4.3555000000000677e-05, 4.3819000000000496e-05, 4.316599999999726e-05, 4.3874999999998776e-05, 4.3624999999998526e-05, 4.3416999999996986e-05, 4.3902999999997916e-05, 4.394400000000409e-05, 4.405600000000065e-05, 4.354200000000058e-05, 4.326400000000119e-05, 4.4167000000004675e-05, 4.356999999999972e-05, 4.327800000000076e-05, 4.329200000000033e-05, 4.356999999999972e-05, 4.3459000000002634e-05, 4.407000000000022e-05, 4.41939999999974e-05, 4.3874999999998776e-05, 4.3318999999999996e-05, 4.3902999999997916e-05, 4.395799999999672e-05, 4.3819000000000496e-05, 4.3305000000000426e-05, 4.395800000000366e-05, 4.3444999999996126e-05, 4.35139999999945e-05, 4.3389000000004785e-05, 4.3916999999997486e-05, 4.4096999999999886e-05, 4.372200000000298e-05]</msg>
<status status="PASS" starttime="20201115 23:03:05.582" endtime="20201115 23:03:05.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.571" endtime="20201115 23:03:05.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.596" endtime="20201115 23:03:05.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.604" endtime="20201115 23:03:05.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.600" endtime="20201115 23:03:05.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.591" endtime="20201115 23:03:05.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.069" endtime="20201115 23:03:05.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.065" endtime="20201115 23:03:05.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.063" endtime="20201115 23:03:05.631"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.636" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.658" endtime="20201115 23:03:05.677"></status>
</kw>
<msg timestamp="20201115 23:03:05.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.654" endtime="20201115 23:03:05.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.681" endtime="20201115 23:03:05.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.687" endtime="20201115 23:03:05.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.647" endtime="20201115 23:03:05.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.641" endtime="20201115 23:03:05.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.711" endtime="20201115 23:03:06.059"></status>
</kw>
<msg timestamp="20201115 23:03:06.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046891111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046936236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.707" endtime="20201115 23:03:06.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046891111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046936236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.069" endtime="20201115 23:03:06.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.087" endtime="20201115 23:03:06.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.700" endtime="20201115 23:03:06.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.695" endtime="20201115 23:03:06.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:06.105" level="INFO">${RESULT} = [{'time': 0.046936236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5125000000000026e-05, 'source_diff': 4.5125000000000026e-05}, {'time': 0.04698525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:06.096" endtime="20201115 23:03:06.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:06.136" level="INFO">${ACCURACY} = {'time': [0.046936236, 0.04698525, 0.047034278, 0.04708525, 0.04714325, 0.047199264, 0.047247264, 0.047298264, 0.047348292, 0.047403347, 0.047461292, 0.047520292, 0.047567306, 0.047625306, 0.047680306...</msg>
<status status="PASS" starttime="20201115 23:03:06.108" endtime="20201115 23:03:06.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.147" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:03:06.145" endtime="20201115 23:03:06.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.154" level="INFO">VALUE: [4.5125000000000026e-05, 4.4666999999998236e-05, 4.429200000000133e-05, 4.4583000000000816e-05, 4.429199999999439e-05, 4.4597000000000386e-05, 4.426399999999525e-05, 4.4166999999997736e-05, 4.4652999999998666e-05, 4.448599999999636e-05, 4.5138999999999596e-05, 4.4416999999997986e-05, 4.434799999999961e-05, 4.4708999999996946e-05, 4.504200000000208e-05, 4.4360999999999706e-05, 4.49860000000038e-05, 4.422200000000348e-05, 4.4319000000000996e-05, 4.479100000000236e-05, 4.494399999999815e-05, 4.479100000000236e-05, 4.492999999999858e-05, 4.4166999999997736e-05, 4.445799999999722e-05, 4.4610999999999956e-05, 4.4583000000000816e-05, 4.4416999999997986e-05, 4.4597000000000386e-05, 4.4195000000003815e-05, 4.4473000000003204e-05, 4.433400000000004e-05, 4.4639000000006035e-05, 4.4709000000003885e-05, 4.457000000000072e-05, 4.480499999999499e-05, 4.4487000000002774e-05, 4.491599999999901e-05, 4.445800000000416e-05, 4.4360999999999706e-05, 4.495800000000466e-05, 4.4638999999999096e-05, 4.4610999999999956e-05, 4.4347000000000136e-05, 4.4847000000000636e-05, 4.472199999999704e-05, 4.504200000000208e-05, 4.472200000000398e-05, 4.505600000000165e-05, 4.4444999999997126e-05]</msg>
<status status="PASS" starttime="20201115 23:03:06.149" endtime="20201115 23:03:06.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.138" endtime="20201115 23:03:06.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.163" endtime="20201115 23:03:06.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:06.171" endtime="20201115 23:03:06.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.167" endtime="20201115 23:03:06.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.158" endtime="20201115 23:03:06.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.637" endtime="20201115 23:03:06.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.633" endtime="20201115 23:03:06.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.632" endtime="20201115 23:03:06.198"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.203" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.224" endtime="20201115 23:03:06.245"></status>
</kw>
<msg timestamp="20201115 23:03:06.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.221" endtime="20201115 23:03:06.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.248" endtime="20201115 23:03:06.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.255" endtime="20201115 23:03:06.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.214" endtime="20201115 23:03:06.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.208" endtime="20201115 23:03:06.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.278" endtime="20201115 23:03:06.625"></status>
</kw>
<msg timestamp="20201115 23:03:06.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046902, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046947625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:06.275" endtime="20201115 23:03:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046902, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046947625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:06.635" endtime="20201115 23:03:06.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.654" endtime="20201115 23:03:06.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.268" endtime="20201115 23:03:06.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.263" endtime="20201115 23:03:06.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:06.672" level="INFO">${RESULT} = [{'time': 0.046947625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5625000000000526e-05, 'source_diff': 4.5625000000000526e-05}, {'time': 0.047004639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:06.663" endtime="20201115 23:03:06.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:06.703" level="INFO">${ACCURACY} = {'time': [0.046947625, 0.047004639, 0.047057625, 0.047114653, 0.047173653, 0.047226639, 0.047286653, 0.047334653, 0.047387667, 0.047444667, 0.047495681, 0.047552681, 0.047600681, 0.047660694, 0.047717...</msg>
<status status="PASS" starttime="20201115 23:03:06.674" endtime="20201115 23:03:06.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.714" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:03:06.711" endtime="20201115 23:03:06.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.720" level="INFO">VALUE: [4.5625000000000526e-05, 4.5611000000000956e-05, 4.5319000000001997e-05, 4.5388999999999846e-05, 4.53060000000019e-05, 4.554200000000258e-05, 4.524999999999668e-05, 4.5694999999998376e-05, 4.550000000000387e-05, 4.59860000000048e-05, 4.5222999999997016e-05, 4.557000000000172e-05, 4.533400000000104e-05, 4.565200000000019e-05, 4.5375000000000276e-05, 4.542999999999908e-05, 4.5875000000000776e-05, 4.6097000000001886e-05, 4.6111000000001456e-05, 4.5889000000000346e-05, 4.577800000000326e-05, 4.525000000000362e-05, 4.6097000000001886e-05, 4.6125000000001026e-05, 4.53469999999942e-05, 4.5445000000005065e-05, 4.5208999999997446e-05, 4.5417000000005925e-05, 4.584800000000111e-05, 4.5972999999997766e-05, 4.5430999999998556e-05, 4.58060000000024e-05, 4.533400000000104e-05, 4.548599999999736e-05, 4.5875000000000776e-05, 4.51660000000062e-05, 4.5347000000001136e-05, 4.6125000000001026e-05, 4.587499999999384e-05, 4.582000000000197e-05, 4.5333000000001566e-05, 4.58060000000024e-05, 4.6125000000001026e-05, 4.545799999999822e-05, 4.53060000000019e-05, 4.5680999999998806e-05, 4.570799999999847e-05, 4.574999999999718e-05, 4.5445000000005065e-05, 4.604200000000308e-05]</msg>
<status status="PASS" starttime="20201115 23:03:06.716" endtime="20201115 23:03:06.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.705" endtime="20201115 23:03:06.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.729" endtime="20201115 23:03:06.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:06.738" endtime="20201115 23:03:06.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.733" endtime="20201115 23:03:06.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.725" endtime="20201115 23:03:06.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.204" endtime="20201115 23:03:06.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.200" endtime="20201115 23:03:06.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.198" endtime="20201115 23:03:06.764"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.791" endtime="20201115 23:03:06.810"></status>
</kw>
<msg timestamp="20201115 23:03:06.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.788" endtime="20201115 23:03:06.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.814" endtime="20201115 23:03:06.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.820" endtime="20201115 23:03:06.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.781" endtime="20201115 23:03:06.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.775" endtime="20201115 23:03:06.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.844" endtime="20201115 23:03:07.139"></status>
</kw>
<msg timestamp="20201115 23:03:07.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046861667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.840" endtime="20201115 23:03:07.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046815111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046861667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.143" endtime="20201115 23:03:07.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.151" endtime="20201115 23:03:07.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.833" endtime="20201115 23:03:07.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.828" endtime="20201115 23:03:07.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.160" level="INFO">${RESULT} = [{'time': 0.046861667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.655600000000315e-05, 'source_diff': 4.655600000000315e-05}, {'time': 0.046918667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:07.156" endtime="20201115 23:03:07.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.173" level="INFO">${ACCURACY} = {'time': [0.046861667, 0.046918667, 0.046972681, 0.047025681, 0.047075694, 0.047129694, 0.047184694, 0.047243708, 0.047294722, 0.047354722, 0.047409722, 0.047461736, 0.047514736, 0.047564736, 0.047616...</msg>
<status status="PASS" starttime="20201115 23:03:07.161" endtime="20201115 23:03:07.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.179" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.177" endtime="20201115 23:03:07.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.182" level="INFO">VALUE: [4.655600000000315e-05, 4.6208999999998446e-05, 4.6973000000005705e-05, 4.6153000000000166e-05, 4.630500000000343e-05, 4.674999999999818e-05, 4.629099999999692e-05, 4.652700000000454e-05, 4.688899999999441e-05, 4.693000000000058e-05, 4.7125000000002026e-05, 4.643000000000008e-05, 4.677800000000426e-05, 4.6903000000000916e-05, 4.705599999999671e-05, 4.649999999999793e-05, 4.630599999999596e-05, 4.679200000000383e-05, 4.6861000000002206e-05, 4.6458999999998696e-05, 4.6389000000000846e-05, 4.627700000000429e-05, 4.6375000000001276e-05, 4.683400000000254e-05, 4.66939999999999e-05, 4.626300000000472e-05, 4.626399999999725e-05, 4.7125000000002026e-05, 4.670799999999947e-05, 4.6583000000002817e-05, 4.670799999999947e-05, 4.643000000000008e-05, 4.644399999999965e-05, 4.683300000000307e-05, 4.648599999999836e-05, 4.626399999999725e-05, 4.695799999999972e-05, 4.665299999999373e-05, 4.708299999999638e-05, 4.6387999999994434e-05, 4.6416999999999986e-05, 4.673599999999861e-05, 4.688800000000187e-05, 4.6958999999999196e-05, 4.676299999999828e-05, 4.677799999999732e-05, 4.702700000000504e-05, 4.691600000000101e-05, 4.7111000000002456e-05, 4.6889000000001346e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.180" endtime="20201115 23:03:07.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.174" endtime="20201115 23:03:07.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.186" endtime="20201115 23:03:07.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.190" endtime="20201115 23:03:07.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.188" endtime="20201115 23:03:07.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.184" endtime="20201115 23:03:07.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.771" endtime="20201115 23:03:07.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.767" endtime="20201115 23:03:07.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.765" endtime="20201115 23:03:07.215"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.221" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.242" endtime="20201115 23:03:07.263"></status>
</kw>
<msg timestamp="20201115 23:03:07.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.239" endtime="20201115 23:03:07.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.266" endtime="20201115 23:03:07.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.273" endtime="20201115 23:03:07.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.232" endtime="20201115 23:03:07.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.226" endtime="20201115 23:03:07.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.296" endtime="20201115 23:03:07.643"></status>
</kw>
<msg timestamp="20201115 23:03:07.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046326611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046374486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.293" endtime="20201115 23:03:07.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046326611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046374486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.653" endtime="20201115 23:03:07.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.672" endtime="20201115 23:03:07.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.286" endtime="20201115 23:03:07.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.281" endtime="20201115 23:03:07.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.689" level="INFO">${RESULT} = [{'time': 0.046374486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7875000000002776e-05, 'source_diff': 4.7875000000002776e-05}, {'time': 0.046428486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:07.680" endtime="20201115 23:03:07.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.722" level="INFO">${ACCURACY} = {'time': [0.046374486, 0.046428486, 0.0464895, 0.0465435, 0.046593486, 0.0466465, 0.046704514, 0.046765514, 0.046821528, 0.046884583, 0.046940528, 0.047001556, 0.047059556, 0.047118569, 0.047171556, 0...</msg>
<status status="PASS" starttime="20201115 23:03:07.691" endtime="20201115 23:03:07.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.733" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.731" endtime="20201115 23:03:07.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.739" level="INFO">VALUE: [4.7875000000002776e-05, 4.758299999999688e-05, 4.751400000000544e-05, 4.78060000000044e-05, 4.7319000000004e-05, 4.804199999999814e-05, 4.783300000000407e-05, 4.8139000000002596e-05, 4.8139000000002596e-05, 4.7875000000002776e-05, 4.8125000000003026e-05, 4.811200000000293e-05, 4.7431000000000556e-05, 4.80269999999991e-05, 4.7403000000001416e-05, 4.788800000000287e-05, 4.8125000000003026e-05, 4.799999999999943e-05, 4.755499999999774e-05, 4.809699999999695e-05, 4.797200000000029e-05, 4.766600000000176e-05, 4.768000000000133e-05, 4.7889000000002346e-05, 4.76940000000009e-05, 4.804200000000508e-05, 4.788899999999541e-05, 4.7458999999999696e-05, 4.799999999999943e-05, 4.7445000000000126e-05, 4.816600000000226e-05, 4.727800000000476e-05, 4.759799999999592e-05, 4.748599999999936e-05, 4.8139000000002596e-05, 4.776399999999875e-05, 4.756999999999678e-05, 4.733299999999663e-05, 4.795800000000072e-05, 4.7625000000002526e-05, 4.770800000000047e-05, 4.7597000000003387e-05, 4.7167000000000736e-05, 4.752799999999807e-05, 4.774999999999918e-05, 4.806899999999781e-05, 4.729200000000433e-05, 4.7667000000001236e-05, 4.733300000000357e-05, 4.723599999999911e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.735" endtime="20201115 23:03:07.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.724" endtime="20201115 23:03:07.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.748" endtime="20201115 23:03:07.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.757" endtime="20201115 23:03:07.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.752" endtime="20201115 23:03:07.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.744" endtime="20201115 23:03:07.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.222" endtime="20201115 23:03:07.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.218" endtime="20201115 23:03:07.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.216" endtime="20201115 23:03:07.783"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.788" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.811" endtime="20201115 23:03:07.831"></status>
</kw>
<msg timestamp="20201115 23:03:07.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.807" endtime="20201115 23:03:07.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.834" endtime="20201115 23:03:07.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.841" endtime="20201115 23:03:07.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.800" endtime="20201115 23:03:07.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.794" endtime="20201115 23:03:07.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.864" endtime="20201115 23:03:08.212"></status>
</kw>
<msg timestamp="20201115 23:03:08.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047664556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047712792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.861" endtime="20201115 23:03:08.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047664556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047712792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.221" endtime="20201115 23:03:08.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.240" endtime="20201115 23:03:08.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.853" endtime="20201115 23:03:08.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.849" endtime="20201115 23:03:08.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:08.257" level="INFO">${RESULT} = [{'time': 0.047712792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.823600000000011e-05, 'source_diff': 4.823600000000011e-05}, {'time': 0.047763778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:08.248" endtime="20201115 23:03:08.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:08.288" level="INFO">${ACCURACY} = {'time': [0.047712792, 0.047763778, 0.047816778, 0.047870778, 0.047926778, 0.047978806, 0.048037819, 0.048091806, 0.048142819, 0.048199833, 0.048257819, 0.048320861, 0.048381833, 0.048434833, 0.048494...</msg>
<status status="PASS" starttime="20201115 23:03:08.259" endtime="20201115 23:03:08.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.299" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:03:08.296" endtime="20201115 23:03:08.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.306" level="INFO">VALUE: [4.823600000000011e-05, 4.876399999999975e-05, 4.8459000000000696e-05, 4.8625000000003527e-05, 4.875000000000018e-05, 4.8931000000002056e-05, 4.823600000000011e-05, 4.861200000000343e-05, 4.833300000000457e-05, 4.85269999999996e-05, 4.824999999999968e-05, 4.86940000000019e-05, 4.849999999999993e-05, 4.823599999999317e-05, 4.879099999999942e-05, 4.895800000000172e-05, 4.847200000000079e-05, 4.876399999999975e-05, 4.855599999999821e-05, 4.868099999999487e-05, 4.844400000000165e-05, 4.879200000000583e-05, 4.8625000000003527e-05, 4.9014e-05, 4.8445000000001126e-05, 4.8889000000003346e-05, 4.8429999999995144e-05, 4.9014e-05, 4.909699999999795e-05, 4.848600000000036e-05, 4.897200000000129e-05, 4.893000000000258e-05, 4.909700000000489e-05, 4.858299999999788e-05, 4.9153000000003166e-05, 4.880500000000593e-05, 4.897200000000129e-05, 4.895800000000172e-05, 4.86669999999953e-05, 4.8319000000005e-05, 4.85139999999995e-05, 4.883300000000507e-05, 4.832000000000447e-05, 4.895899999999426e-05, 4.913899999999666e-05, 4.881999999999803e-05, 4.826399999999925e-05, 4.8167000000001736e-05, 4.902799999999957e-05, 4.875000000000018e-05]</msg>
<status status="PASS" starttime="20201115 23:03:08.301" endtime="20201115 23:03:08.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.290" endtime="20201115 23:03:08.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.314" endtime="20201115 23:03:08.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:08.323" endtime="20201115 23:03:08.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.318" endtime="20201115 23:03:08.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.310" endtime="20201115 23:03:08.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.790" endtime="20201115 23:03:08.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.786" endtime="20201115 23:03:08.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.784" endtime="20201115 23:03:08.350"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.355" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.377" endtime="20201115 23:03:08.397"></status>
</kw>
<msg timestamp="20201115 23:03:08.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.373" endtime="20201115 23:03:08.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.401" endtime="20201115 23:03:08.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.407" endtime="20201115 23:03:08.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.366" endtime="20201115 23:03:08.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.360" endtime="20201115 23:03:08.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.430" endtime="20201115 23:03:08.778"></status>
</kw>
<msg timestamp="20201115 23:03:08.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047112153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047162278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.427" endtime="20201115 23:03:08.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047112153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047162278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.788" endtime="20201115 23:03:08.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.807" endtime="20201115 23:03:08.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.420" endtime="20201115 23:03:08.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.415" endtime="20201115 23:03:08.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:08.824" level="INFO">${RESULT} = [{'time': 0.047162278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.012500000000503e-05, 'source_diff': 5.012500000000503e-05}, {'time': 0.047217264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:08.815" endtime="20201115 23:03:08.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:08.855" level="INFO">${ACCURACY} = {'time': [0.047162278, 0.047217264, 0.047269264, 0.047327319, 0.047381333, 0.047435333, 0.047487278, 0.047549306, 0.047609292, 0.047668333, 0.047726306, 0.047778319, 0.047843319, 0.047895333, 0.047953...</msg>
<status status="PASS" starttime="20201115 23:03:08.826" endtime="20201115 23:03:08.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.866" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:03:08.864" endtime="20201115 23:03:08.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.873" level="INFO">VALUE: [5.012500000000503e-05, 4.98469999999987e-05, 4.993099999999612e-05, 5.0179999999996894e-05, 4.95270000000006e-05, 5.015200000000469e-05, 4.931999999999853e-05, 4.956999999999878e-05, 5.004200000000014e-05, 4.96940000000029e-05, 4.9917000000003486e-05, 4.955499999999974e-05, 5.004100000000067e-05, 4.9971999999995353e-05, 4.972200000000204e-05, 4.970800000000247e-05, 4.997200000000229e-05, 4.9193999999995464e-05, 4.9443999999995714e-05, 4.955599999999921e-05, 4.923600000000111e-05, 4.924999999999374e-05, 4.987499999999784e-05, 4.997200000000229e-05, 4.991699999999655e-05, 4.952800000000007e-05, 5.004200000000014e-05, 5.009799999999842e-05, 4.973600000000161e-05, 4.986100000000521e-05, 5.004200000000014e-05, 4.950000000000093e-05, 4.931899999999906e-05, 4.962499999999759e-05, 4.980499999999999e-05, 4.954100000000017e-05, 4.9903000000003916e-05, 4.9375000000004277e-05, 4.9167000000002736e-05, 4.923600000000111e-05, 4.994499999999569e-05, 4.975000000000118e-05, 4.9681000000002806e-05, 5.011099999999852e-05, 4.9221999999994603e-05, 4.922200000000154e-05, 4.987499999999784e-05, 5.013899999999766e-05, 4.9667000000003236e-05, 5.002800000000057e-05]</msg>
<status status="PASS" starttime="20201115 23:03:08.868" endtime="20201115 23:03:08.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.857" endtime="20201115 23:03:08.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.882" endtime="20201115 23:03:08.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:08.890" endtime="20201115 23:03:08.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.886" endtime="20201115 23:03:08.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.878" endtime="20201115 23:03:08.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.356" endtime="20201115 23:03:08.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.353" endtime="20201115 23:03:08.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.351" endtime="20201115 23:03:08.917"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.945" endtime="20201115 23:03:08.966"></status>
</kw>
<msg timestamp="20201115 23:03:08.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.942" endtime="20201115 23:03:08.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.970" endtime="20201115 23:03:08.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.976" endtime="20201115 23:03:08.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.934" endtime="20201115 23:03:08.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.928" endtime="20201115 23:03:08.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.999" endtime="20201115 23:03:09.349"></status>
</kw>
<msg timestamp="20201115 23:03:09.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048475931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048526083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.996" endtime="20201115 23:03:09.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048475931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048526083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.359" endtime="20201115 23:03:09.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.378" endtime="20201115 23:03:09.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.989" endtime="20201115 23:03:09.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.984" endtime="20201115 23:03:09.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.395" level="INFO">${RESULT} = [{'time': 0.048526083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0151999999997754e-05, 'source_diff': 5.0151999999997754e-05}, {'time': 0.048581097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:09.386" endtime="20201115 23:03:09.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.426" level="INFO">${ACCURACY} = {'time': [0.048526083, 0.048581097, 0.048644097, 0.048705125, 0.048764167, 0.048829111, 0.048885125, 0.048947139, 0.049008139, 0.049070139, 0.049127167, 0.049190153, 0.049247194, 0.049307181, 0.049365...</msg>
<status status="PASS" starttime="20201115 23:03:09.397" endtime="20201115 23:03:09.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.437" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:03:09.435" endtime="20201115 23:03:09.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.444" level="INFO">VALUE: [5.0151999999997754e-05, 5.087499999999884e-05, 5.054099999999423e-05, 5.0653000000004667e-05, 5.055600000000021e-05, 5.108300000000038e-05, 5.061099999999902e-05, 5.033299999999963e-05, 5.043099999999662e-05, 5.01669999999968e-05, 5.061099999999902e-05, 5.073600000000261e-05, 5.104100000000167e-05, 5.047299999999533e-05, 5.034799999999867e-05, 5.0653000000004667e-05, 5.041600000000451e-05, 5.083300000000013e-05, 5.0929999999997644e-05, 5.033299999999963e-05, 5.113899999999866e-05, 5.056900000000031e-05, 5.086099999999927e-05, 5.0459000000002696e-05, 5.059799999999892e-05, 5.0485999999995423e-05, 5.06669999999973e-05, 5.062499999999859e-05, 5.094400000000415e-05, 5.079200000000089e-05, 5.034700000000614e-05, 5.062499999999859e-05, 5.0735999999995673e-05, 5.097299999999583e-05, 5.03339999999991e-05, 5.109699999999995e-05, 5.0971999999996354e-05, 5.0971999999996354e-05, 5.048600000000236e-05, 5.112499999999909e-05, 5.073600000000261e-05, 5.08469999999997e-05, 5.030500000000049e-05, 5.0721999999996104e-05, 5.058299999999988e-05, 5.033299999999963e-05, 5.052800000000107e-05, 5.097200000000329e-05, 5.037500000000528e-05, 5.0681000000003806e-05]</msg>
<status status="PASS" starttime="20201115 23:03:09.439" endtime="20201115 23:03:09.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.428" endtime="20201115 23:03:09.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.453" endtime="20201115 23:03:09.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:09.461" endtime="20201115 23:03:09.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.457" endtime="20201115 23:03:09.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.449" endtime="20201115 23:03:09.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.924" endtime="20201115 23:03:09.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.920" endtime="20201115 23:03:09.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.918" endtime="20201115 23:03:09.488"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.515" endtime="20201115 23:03:09.535"></status>
</kw>
<msg timestamp="20201115 23:03:09.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.511" endtime="20201115 23:03:09.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.538" endtime="20201115 23:03:09.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.544" endtime="20201115 23:03:09.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.504" endtime="20201115 23:03:09.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.499" endtime="20201115 23:03:09.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.568" endtime="20201115 23:03:09.915"></status>
</kw>
<msg timestamp="20201115 23:03:09.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046857569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046909069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.564" endtime="20201115 23:03:09.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046857569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046909069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.925" endtime="20201115 23:03:09.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.943" endtime="20201115 23:03:09.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.557" endtime="20201115 23:03:09.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.552" endtime="20201115 23:03:09.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.961" level="INFO">${RESULT} = [{'time': 0.046909069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1499999999995993e-05, 'source_diff': 5.1499999999995993e-05}, {'time': 0.046975097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:09.952" endtime="20201115 23:03:09.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.995" level="INFO">${ACCURACY} = {'time': [0.046909069, 0.046975097, 0.047030083, 0.047094125, 0.047157097, 0.047215111, 0.047282111, 0.047341111, 0.047404125, 0.047470139, 0.047526153, 0.047591153, 0.047649153, 0.047703167, 0.047770...</msg>
<status status="PASS" starttime="20201115 23:03:09.964" endtime="20201115 23:03:09.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.007" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.004" endtime="20201115 23:03:10.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.013" level="INFO">VALUE: [5.1499999999995993e-05, 5.211100000000052e-05, 5.1915999999999074e-05, 5.173600000000361e-05, 5.136099999999977e-05, 5.156899999999437e-05, 5.202800000000257e-05, 5.1957999999997784e-05, 5.158300000000088e-05, 5.188899999999941e-05, 5.126400000000225e-05, 5.170899999999701e-05, 5.138899999999891e-05, 5.134799999999967e-05, 5.186199999999974e-05, 5.155600000000121e-05, 5.173600000000361e-05, 5.179099999999548e-05, 5.123600000000311e-05, 5.177700000000285e-05, 5.1929999999998644e-05, 5.183300000000113e-05, 5.212500000000009e-05, 5.170800000000447e-05, 5.123600000000311e-05, 5.13470000000002e-05, 5.205600000000171e-05, 5.16669999999983e-05, 5.141699999999805e-05, 5.126400000000225e-05, 5.200000000000343e-05, 5.148600000000336e-05, 5.1153000000005167e-05, 5.119499999999694e-05, 5.1473000000003266e-05, 5.2179999999998894e-05, 5.1499999999995993e-05, 5.1401999999999004e-05, 5.1999999999996493e-05, 5.152800000000207e-05, 5.133299999999369e-05, 5.1929999999998644e-05, 5.165299999999873e-05, 5.209699999999401e-05, 5.154200000000164e-05, 5.158300000000088e-05, 5.212500000000009e-05, 5.129200000000139e-05, 5.169499999999744e-05, 5.1417000000004986e-05]</msg>
<status status="PASS" starttime="20201115 23:03:10.009" endtime="20201115 23:03:10.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.997" endtime="20201115 23:03:10.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.022" endtime="20201115 23:03:10.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:10.031" endtime="20201115 23:03:10.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.026" endtime="20201115 23:03:10.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.018" endtime="20201115 23:03:10.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.495" endtime="20201115 23:03:10.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.491" endtime="20201115 23:03:10.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.489" endtime="20201115 23:03:10.057"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.063" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.084" endtime="20201115 23:03:10.106"></status>
</kw>
<msg timestamp="20201115 23:03:10.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.081" endtime="20201115 23:03:10.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.109" endtime="20201115 23:03:10.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.115" endtime="20201115 23:03:10.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.074" endtime="20201115 23:03:10.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.068" endtime="20201115 23:03:10.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.138" endtime="20201115 23:03:10.477"></status>
</kw>
<msg timestamp="20201115 23:03:10.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046927333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046980139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.135" endtime="20201115 23:03:10.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046927333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046980139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.481" endtime="20201115 23:03:10.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.490" endtime="20201115 23:03:10.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.128" endtime="20201115 23:03:10.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.123" endtime="20201115 23:03:10.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:10.498" level="INFO">${RESULT} = [{'time': 0.046980139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.280599999999552e-05, 'source_diff': 5.280599999999552e-05}, {'time': 0.047038125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:10.494" endtime="20201115 23:03:10.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:10.512" level="INFO">${ACCURACY} = {'time': [0.046980139, 0.047038125, 0.047096139, 0.047154139, 0.047212139, 0.047269153, 0.047333167, 0.047390167, 0.047449181, 0.047505181, 0.047569181, 0.047635194, 0.047701208, 0.047763222, 0.047820...</msg>
<status status="PASS" starttime="20201115 23:03:10.499" endtime="20201115 23:03:10.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.517" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.516" endtime="20201115 23:03:10.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.520" level="INFO">VALUE: [5.280599999999552e-05, 5.241699999999905e-05, 5.262500000000059e-05, 5.302799999999663e-05, 5.283300000000213e-05, 5.2471999999997854e-05, 5.259800000000092e-05, 5.26669999999993e-05, 5.238899999999991e-05, 5.25140000000035e-05, 5.21669999999988e-05, 5.312500000000109e-05, 5.230500000000249e-05, 5.248600000000436e-05, 5.244400000000565e-05, 5.2513999999996563e-05, 5.227800000000282e-05, 5.28470000000017e-05, 5.2457999999998284e-05, 5.2749999999997244e-05, 5.237500000000034e-05, 5.2417000000005987e-05, 5.297200000000529e-05, 5.2402000000000004e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.291699999999955e-05, 5.287500000000084e-05, 5.269499999999844e-05, 5.312500000000109e-05, 5.220800000000497e-05, 5.2165999999999324e-05, 5.222200000000454e-05, 5.233300000000163e-05, 5.233300000000163e-05, 5.279099999999648e-05, 5.2221999999997604e-05, 5.291699999999955e-05, 5.288900000000041e-05, 5.250000000000393e-05, 5.282000000000203e-05, 5.237500000000034e-05, 5.305600000000271e-05, 5.283299999999519e-05, 5.256899999999537e-05, 5.30419999999962e-05, 5.309699999999501e-05, 5.254099999999623e-05, 5.24869999999969e-05, 5.2471999999997854e-05]</msg>
<status status="PASS" starttime="20201115 23:03:10.518" endtime="20201115 23:03:10.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.513" endtime="20201115 23:03:10.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.524" endtime="20201115 23:03:10.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:10.528" endtime="20201115 23:03:10.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.526" endtime="20201115 23:03:10.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.522" endtime="20201115 23:03:10.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.064" endtime="20201115 23:03:10.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.060" endtime="20201115 23:03:10.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.058" endtime="20201115 23:03:10.550"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.552" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.562" endtime="20201115 23:03:10.580"></status>
</kw>
<msg timestamp="20201115 23:03:10.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.561" endtime="20201115 23:03:10.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.581" endtime="20201115 23:03:10.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.584" endtime="20201115 23:03:10.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.558" endtime="20201115 23:03:10.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.555" endtime="20201115 23:03:10.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.596" endtime="20201115 23:03:10.912"></status>
</kw>
<msg timestamp="20201115 23:03:10.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027152194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027206, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:10.594" endtime="20201115 23:03:10.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027152194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027206, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:10.921" endtime="20201115 23:03:10.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.940" endtime="20201115 23:03:10.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.591" endtime="20201115 23:03:10.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.588" endtime="20201115 23:03:10.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:10.957" level="INFO">${RESULT} = [{'time': 0.027206, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.380599999999999e-05, 'source_diff': 5.380599999999999e-05}, {'time': 0.027262014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:03:10.948" endtime="20201115 23:03:10.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:10.988" level="INFO">${ACCURACY} = {'time': [0.027206, 0.027262014, 0.027325028, 0.027388028, 0.027448042, 0.027513097, 0.027580042, 0.027638042, 0.027704069, 0.027763056, 0.027821083, 0.027878069, 0.027941069, 0.028005083, 0.028064083...</msg>
<status status="PASS" starttime="20201115 23:03:10.959" endtime="20201115 23:03:10.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.999" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.997" endtime="20201115 23:03:11.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.006" level="INFO">VALUE: [5.380599999999999e-05, 5.376400000000128e-05, 5.390300000000098e-05, 5.3471999999998854e-05, 5.4013999999998064e-05, 5.406900000000034e-05, 5.412499999999862e-05, 5.323600000000164e-05, 5.398600000000239e-05, 5.362500000000159e-05, 5.3693999999999964e-05, 5.329099999999698e-05, 5.3249999999997744e-05, 5.40410000000012e-05, 5.3971999999999354e-05, 5.379099999999748e-05, 5.330500000000002e-05, 5.3693999999999964e-05, 5.3499999999997994e-05, 5.387500000000184e-05, 5.3471999999998854e-05, 5.372200000000257e-05, 5.391699999999708e-05, 5.40280000000011e-05, 5.3749999999998244e-05, 5.329199999999992e-05, 5.387499999999837e-05, 5.373700000000162e-05, 5.351300000000156e-05, 5.409699999999948e-05, 5.329099999999698e-05, 5.3971999999999354e-05, 5.327800000000035e-05, 5.380599999999999e-05, 5.411099999999905e-05, 5.333299999999916e-05, 5.36670000000003e-05, 5.313900000000066e-05, 5.408299999999991e-05, 5.333299999999916e-05, 5.3249999999997744e-05, 5.359800000000192e-05, 5.370900000000248e-05, 5.341700000000005e-05, 5.394499999999969e-05, 5.365300000000073e-05, 5.333399999999863e-05, 5.370899999999901e-05, 5.347200000000232e-05, 5.361099999999855e-05]</msg>
<status status="PASS" starttime="20201115 23:03:11.002" endtime="20201115 23:03:11.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.990" endtime="20201115 23:03:11.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.016" endtime="20201115 23:03:11.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:11.024" endtime="20201115 23:03:11.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.020" endtime="20201115 23:03:11.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.011" endtime="20201115 23:03:11.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.553" endtime="20201115 23:03:11.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.551" endtime="20201115 23:03:11.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.550" endtime="20201115 23:03:11.051"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.078" endtime="20201115 23:03:11.099"></status>
</kw>
<msg timestamp="20201115 23:03:11.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.075" endtime="20201115 23:03:11.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.102" endtime="20201115 23:03:11.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.109" endtime="20201115 23:03:11.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.067" endtime="20201115 23:03:11.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.062" endtime="20201115 23:03:11.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.133" endtime="20201115 23:03:11.482"></status>
</kw>
<msg timestamp="20201115 23:03:11.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047194403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047249514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.129" endtime="20201115 23:03:11.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047194403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047249514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.492" endtime="20201115 23:03:11.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.511" endtime="20201115 23:03:11.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.122" endtime="20201115 23:03:11.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.117" endtime="20201115 23:03:11.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:11.528" level="INFO">${RESULT} = [{'time': 0.047249514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.511099999999658e-05, 'source_diff': 5.511099999999658e-05}, {'time': 0.047317528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:11.519" endtime="20201115 23:03:11.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:11.559" level="INFO">${ACCURACY} = {'time': [0.047249514, 0.047317528, 0.047381528, 0.047445528, 0.047510597, 0.047567528, 0.047629542, 0.047696542, 0.047760556, 0.047821556, 0.047889569, 0.047947583, 0.048016583, 0.048074597, 0.048134...</msg>
<status status="PASS" starttime="20201115 23:03:11.530" endtime="20201115 23:03:11.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.570" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:03:11.567" endtime="20201115 23:03:11.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.577" level="INFO">VALUE: [5.511099999999658e-05, 5.445899999999976e-05, 5.468100000000087e-05, 5.438900000000191e-05, 5.4708000000000534e-05, 5.4541999999997703e-05, 5.4499999999998994e-05, 5.469500000000044e-05, 5.426400000000525e-05, 5.415300000000123e-05, 5.5138000000003184e-05, 5.4499999999998994e-05, 5.488900000000241e-05, 5.4929999999994705e-05, 5.465300000000173e-05, 5.4235999999999174e-05, 5.456900000000431e-05, 5.462500000000259e-05, 5.491700000000155e-05, 5.4958000000000784e-05, 5.4944000000001214e-05, 5.427699999999841e-05, 5.487500000000284e-05, 5.4499999999998994e-05, 5.4749999999999244e-05, 5.487500000000284e-05, 5.4541999999997703e-05, 5.462500000000259e-05, 5.473699999999915e-05, 5.486099999999633e-05, 5.5013999999999064e-05, 5.4471999999999854e-05, 5.513899999999572e-05, 5.4458000000000284e-05, 5.508300000000438e-05, 5.457000000000378e-05, 5.4263999999998314e-05, 5.4499999999998994e-05, 5.431899999999712e-05, 5.438899999999497e-05, 5.5027999999998634e-05, 5.488900000000241e-05, 5.508400000000385e-05, 5.4430000000001144e-05, 5.512499999999615e-05, 5.45140000000055e-05, 5.48470000000037e-05, 5.4249999999998744e-05, 5.483300000000413e-05, 5.4915999999995135e-05]</msg>
<status status="PASS" starttime="20201115 23:03:11.572" endtime="20201115 23:03:11.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.561" endtime="20201115 23:03:11.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.585" endtime="20201115 23:03:11.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:11.594" endtime="20201115 23:03:11.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.589" endtime="20201115 23:03:11.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.581" endtime="20201115 23:03:11.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.058" endtime="20201115 23:03:11.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.054" endtime="20201115 23:03:11.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.052" endtime="20201115 23:03:11.621"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.626" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.648" endtime="20201115 23:03:11.669"></status>
</kw>
<msg timestamp="20201115 23:03:11.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.645" endtime="20201115 23:03:11.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.672" endtime="20201115 23:03:11.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.679" endtime="20201115 23:03:11.682"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.637" endtime="20201115 23:03:11.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.631" endtime="20201115 23:03:11.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.702" endtime="20201115 23:03:12.051"></status>
</kw>
<msg timestamp="20201115 23:03:12.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047834792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.699" endtime="20201115 23:03:12.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047834792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:12.061" endtime="20201115 23:03:12.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.079" endtime="20201115 23:03:12.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.691" endtime="20201115 23:03:12.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.687" endtime="20201115 23:03:12.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:12.097" level="INFO">${RESULT} = [{'time': 0.047890583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.579099999999948e-05, 'source_diff': 5.579099999999948e-05}, {'time': 0.047960597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:12.088" endtime="20201115 23:03:12.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:12.130" level="INFO">${ACCURACY} = {'time': [0.047890583, 0.047960597, 0.048020597, 0.048081625, 0.048142639, 0.048207708, 0.048266667, 0.048330653, 0.048395639, 0.048453667, 0.048512667, 0.048573667, 0.048633708, 0.048692681, 0.048752...</msg>
<status status="PASS" starttime="20201115 23:03:12.099" endtime="20201115 23:03:12.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.141" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:03:12.139" endtime="20201115 23:03:12.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.148" level="INFO">VALUE: [5.579099999999948e-05, 5.587500000000384e-05, 5.608299999999844e-05, 5.605600000000571e-05, 5.606999999999834e-05, 5.6180000000002894e-05, 5.616699999999586e-05, 5.613900000000366e-05, 5.5249999999999744e-05, 5.556999999999784e-05, 5.572300000000058e-05, 5.563900000000316e-05, 5.5693999999995025e-05, 5.572300000000058e-05, 5.526299999999984e-05, 5.558299999999794e-05, 5.5472000000000854e-05, 5.530499999999855e-05, 5.5208000000001034e-05, 5.606900000000581e-05, 5.5708000000001534e-05, 5.613900000000366e-05, 5.543100000000162e-05, 5.6055999999998773e-05, 5.531899999999812e-05, 5.5513999999999564e-05, 5.613900000000366e-05, 5.5637999999996746e-05, 5.533399999999716e-05, 5.611099999999758e-05, 5.6000000000000494e-05, 5.584799999999723e-05, 5.541700000000205e-05, 5.6138000000004185e-05, 5.612500000000409e-05, 5.5930000000002644e-05, 5.5458000000001284e-05, 5.5708000000001534e-05, 5.5208000000001034e-05, 5.536100000000377e-05, 5.534699999999726e-05, 5.526400000000625e-05, 5.537500000000334e-05, 5.613899999999672e-05, 5.583299999999819e-05, 5.590299999999604e-05, 5.538900000000291e-05, 5.547300000000033e-05, 5.5750000000000244e-05, 5.593100000000212e-05]</msg>
<status status="PASS" starttime="20201115 23:03:12.143" endtime="20201115 23:03:12.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.132" endtime="20201115 23:03:12.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.156" endtime="20201115 23:03:12.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:12.165" endtime="20201115 23:03:12.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.160" endtime="20201115 23:03:12.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.152" endtime="20201115 23:03:12.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.627" endtime="20201115 23:03:12.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.623" endtime="20201115 23:03:12.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.621" endtime="20201115 23:03:12.197"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.224" endtime="20201115 23:03:12.244"></status>
</kw>
<msg timestamp="20201115 23:03:12.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.220" endtime="20201115 23:03:12.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.248" endtime="20201115 23:03:12.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.254" endtime="20201115 23:03:12.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.213" endtime="20201115 23:03:12.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.208" endtime="20201115 23:03:12.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.277" endtime="20201115 23:03:12.626"></status>
</kw>
<msg timestamp="20201115 23:03:12.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052509625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05256625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:12.274" endtime="20201115 23:03:12.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052509625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05256625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:12.635" endtime="20201115 23:03:12.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.654" endtime="20201115 23:03:12.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.267" endtime="20201115 23:03:12.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.262" endtime="20201115 23:03:12.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:12.671" level="INFO">${RESULT} = [{'time': 0.05256625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.662500000000459e-05, 'source_diff': 5.662500000000459e-05}, {'time': 0.052637264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:12.662" endtime="20201115 23:03:12.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:12.702" level="INFO">${ACCURACY} = {'time': [0.05256625, 0.052637264, 0.052704264, 0.052769278, 0.052835278, 0.052897347, 0.052969292, 0.053029361, 0.053094306, 0.053158333, 0.053222319, 0.053288333, 0.053358347, 0.053418361, 0.0534783...</msg>
<status status="PASS" starttime="20201115 23:03:12.673" endtime="20201115 23:03:12.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.713" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:03:12.710" endtime="20201115 23:03:12.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.719" level="INFO">VALUE: [5.662500000000459e-05, 5.709700000000595e-05, 5.661099999999808e-05, 5.670900000000201e-05, 5.666699999999636e-05, 5.6665999999996886e-05, 5.7042000000000204e-05, 5.6763999999993875e-05, 5.64870000000009e-05, 5.6972000000002354e-05, 5.6749999999994305e-05, 5.706899999999987e-05, 5.629099999999998e-05, 5.6429999999996205e-05, 5.6944000000003214e-05, 5.6957999999995845e-05, 5.63749999999974e-05, 5.6319999999998593e-05, 5.7055999999999774e-05, 5.66670000000033e-05, 5.641700000000305e-05, 5.6528000000000134e-05, 5.631899999999912e-05, 5.672300000000158e-05, 5.622299999999414e-05, 5.6402000000004004e-05, 5.711199999999805e-05, 5.708299999999944e-05, 5.6236000000001174e-05, 5.665300000000373e-05, 5.690300000000398e-05, 5.709700000000595e-05, 5.6486000000001424e-05, 5.6444000000002714e-05, 5.6764000000000814e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.643099999999568e-05, 5.644500000000219e-05, 5.6277999999999884e-05, 5.643100000000262e-05, 5.682000000000603e-05, 5.702700000000116e-05, 5.6541999999999704e-05, 5.6472000000001854e-05, 5.659700000000545e-05, 5.6986000000001924e-05, 5.708299999999944e-05, 5.6277999999999884e-05, 5.654100000000023e-05]</msg>
<status status="PASS" starttime="20201115 23:03:12.715" endtime="20201115 23:03:12.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.704" endtime="20201115 23:03:12.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.729" endtime="20201115 23:03:12.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:12.737" endtime="20201115 23:03:12.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.733" endtime="20201115 23:03:12.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.724" endtime="20201115 23:03:12.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.204" endtime="20201115 23:03:12.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.199" endtime="20201115 23:03:12.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.198" endtime="20201115 23:03:12.764"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.769" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.791" endtime="20201115 23:03:12.812"></status>
</kw>
<msg timestamp="20201115 23:03:12.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.787" endtime="20201115 23:03:12.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.815" endtime="20201115 23:03:12.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.821" endtime="20201115 23:03:12.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.780" endtime="20201115 23:03:12.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.774" endtime="20201115 23:03:12.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.845" endtime="20201115 23:03:13.193"></status>
</kw>
<msg timestamp="20201115 23:03:13.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046934597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046992514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:12.842" endtime="20201115 23:03:13.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046934597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046992514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.202" endtime="20201115 23:03:13.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.221" endtime="20201115 23:03:13.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.834" endtime="20201115 23:03:13.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.829" endtime="20201115 23:03:13.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.238" level="INFO">${RESULT} = [{'time': 0.046992514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791699999999761e-05, 'source_diff': 5.791699999999761e-05}, {'time': 0.047055528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:13.229" endtime="20201115 23:03:13.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.269" level="INFO">${ACCURACY} = {'time': [0.046992514, 0.047055528, 0.047118542, 0.047190583, 0.047255542, 0.047326556, 0.047388556, 0.047449569, 0.047513611, 0.047583583, 0.047651583, 0.047713625, 0.047773597, 0.047845611, 0.047909...</msg>
<status status="PASS" starttime="20201115 23:03:13.241" endtime="20201115 23:03:13.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.280" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.278" endtime="20201115 23:03:13.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.288" level="INFO">VALUE: [5.791699999999761e-05, 5.741699999999711e-05, 5.8056000000000774e-05, 5.813899999999872e-05, 5.7513999999994625e-05, 5.8083999999999913e-05, 5.766699999999736e-05, 5.7485999999995485e-05, 5.715299999999729e-05, 5.7943999999997275e-05, 5.762499999999865e-05, 5.7486000000002424e-05, 5.7750000000002244e-05, 5.76670000000043e-05, 5.7792000000000954e-05, 5.7791999999994015e-05, 5.756900000000037e-05, 5.7292000000000454e-05, 5.7806000000000524e-05, 5.8028000000001634e-05, 5.744500000000319e-05, 5.7514000000001564e-05, 5.743099999999668e-05, 5.733299999999969e-05, 5.8014000000002064e-05, 5.812499999999915e-05, 5.809700000000001e-05, 5.729100000000098e-05, 5.7777999999994445e-05, 5.78749999999989e-05, 5.7194000000003464e-05, 5.790300000000498e-05, 5.73749999999984e-05, 5.736099999999883e-05, 5.758299999999994e-05, 5.790299999999804e-05, 5.720900000000251e-05, 5.797299999999589e-05, 5.8097999999999483e-05, 5.8042000000001204e-05, 5.8056000000000774e-05, 5.7750000000002244e-05, 5.811100000000652e-05, 5.8056000000000774e-05, 5.7292000000000454e-05, 5.7665999999997886e-05, 5.730500000000055e-05, 5.812499999999915e-05, 5.734699999999926e-05, 5.7457999999996345e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.282" endtime="20201115 23:03:13.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.271" endtime="20201115 23:03:13.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.297" endtime="20201115 23:03:13.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.305" endtime="20201115 23:03:13.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.301" endtime="20201115 23:03:13.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.292" endtime="20201115 23:03:13.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.770" endtime="20201115 23:03:13.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.766" endtime="20201115 23:03:13.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.765" endtime="20201115 23:03:13.332"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.337" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.359" endtime="20201115 23:03:13.380"></status>
</kw>
<msg timestamp="20201115 23:03:13.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.355" endtime="20201115 23:03:13.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.383" endtime="20201115 23:03:13.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.390" endtime="20201115 23:03:13.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.348" endtime="20201115 23:03:13.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.342" endtime="20201115 23:03:13.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.413" endtime="20201115 23:03:13.760"></status>
</kw>
<msg timestamp="20201115 23:03:13.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048111194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048169472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.410" endtime="20201115 23:03:13.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048111194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048169472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.770" endtime="20201115 23:03:13.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.789" endtime="20201115 23:03:13.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.403" endtime="20201115 23:03:13.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.398" endtime="20201115 23:03:13.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.806" level="INFO">${RESULT} = [{'time': 0.048169472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8277999999994945e-05, 'source_diff': 5.8277999999994945e-05}, {'time': 0.048230472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:13.797" endtime="20201115 23:03:13.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.837" level="INFO">${ACCURACY} = {'time': [0.048169472, 0.048230472, 0.048299472, 0.048360486, 0.0484275, 0.048495486, 0.048563514, 0.048630528, 0.048697514, 0.048763528, 0.048831542, 0.048896556, 0.048964556, 0.049036556, 0.04910955...</msg>
<status status="PASS" starttime="20201115 23:03:13.808" endtime="20201115 23:03:13.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.848" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.846" endtime="20201115 23:03:13.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.855" level="INFO">VALUE: [5.8277999999994945e-05, 5.8750000000003244e-05, 5.884700000000076e-05, 5.834700000000026e-05, 5.8721999999997165e-05, 5.8249999999995805e-05, 5.88749999999999e-05, 5.8528000000002134e-05, 5.891699999999861e-05, 5.8556000000001274e-05, 5.888899999999947e-05, 5.8820000000001094e-05, 5.8806000000001524e-05, 5.8306000000001024e-05, 5.8249999999995805e-05, 5.8235999999996235e-05, 5.8665999999998886e-05, 5.8194000000004464e-05, 5.8985999999996985e-05, 5.8693999999998026e-05, 5.911099999999364e-05, 5.8457999999997345e-05, 5.833300000000069e-05, 5.8721999999997165e-05, 5.8985999999996985e-05, 5.8306000000001024e-05, 5.8500000000002994e-05, 5.822299999999614e-05, 5.8264000000002314e-05, 5.868099999999793e-05, 5.8347999999999733e-05, 5.830499999999461e-05, 5.834700000000026e-05, 5.911100000000058e-05, 5.861100000000008e-05, 5.854100000000223e-05, 5.856900000000137e-05, 5.888899999999947e-05, 5.8929999999998706e-05, 5.880500000000205e-05, 5.8764000000002814e-05, 5.868099999999793e-05, 5.8764000000002814e-05, 5.88749999999999e-05, 5.8292000000001454e-05, 5.8820000000001094e-05, 5.8834000000000664e-05, 5.818099999999743e-05, 5.8222000000003604e-05, 5.852699999999572e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.851" endtime="20201115 23:03:13.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.839" endtime="20201115 23:03:13.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.864" endtime="20201115 23:03:13.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.873" endtime="20201115 23:03:13.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.868" endtime="20201115 23:03:13.896"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.859" endtime="20201115 23:03:13.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.338" endtime="20201115 23:03:13.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.334" endtime="20201115 23:03:13.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.333" endtime="20201115 23:03:13.899"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.904" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.926" endtime="20201115 23:03:13.947"></status>
</kw>
<msg timestamp="20201115 23:03:13.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.923" endtime="20201115 23:03:13.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.950" endtime="20201115 23:03:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.956" endtime="20201115 23:03:13.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.915" endtime="20201115 23:03:13.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.910" endtime="20201115 23:03:13.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.980" endtime="20201115 23:03:14.287"></status>
</kw>
<msg timestamp="20201115 23:03:14.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046730056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046789847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.976" endtime="20201115 23:03:14.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046730056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046789847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.296" endtime="20201115 23:03:14.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.315" endtime="20201115 23:03:14.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.969" endtime="20201115 23:03:14.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.964" endtime="20201115 23:03:14.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:14.333" level="INFO">${RESULT} = [{'time': 0.046789847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.979100000000348e-05, 'source_diff': 5.979100000000348e-05}, {'time': 0.046855861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:14.324" endtime="20201115 23:03:14.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:14.366" level="INFO">${ACCURACY} = {'time': [0.046789847, 0.046855861, 0.046923861, 0.046993875, 0.047066875, 0.047134889, 0.047200972, 0.047265917, 0.047337903, 0.047406958, 0.047479917, 0.047551931, 0.047623958, 0.047695944, 0.047768...</msg>
<status status="PASS" starttime="20201115 23:03:14.335" endtime="20201115 23:03:14.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.377" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:03:14.375" endtime="20201115 23:03:14.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.384" level="INFO">VALUE: [5.979100000000348e-05, 5.980499999999611e-05, 5.9485999999997485e-05, 5.941699999999911e-05, 5.9278000000002884e-05, 6.0070000000002344e-05, 5.98750000000009e-05, 5.9235999999997235e-05, 5.9542000000002704e-05, 5.9721999999998165e-05, 6.012500000000115e-05, 5.994499999999875e-05, 5.934700000000126e-05, 5.9957999999998846e-05, 6.012500000000115e-05, 6.00550000000033e-05, 6.0013999999997125e-05, 5.980499999999611e-05, 5.980500000000305e-05, 5.9320000000001594e-05, 5.918100000000537e-05, 5.938899999999997e-05, 5.9612000000000553e-05, 5.9513999999996625e-05, 5.958300000000194e-05, 5.993099999999918e-05, 5.9348000000000734e-05, 5.984700000000176e-05, 5.9334000000001164e-05, 5.9972000000005354e-05, 5.936100000000083e-05, 5.988900000000047e-05, 5.9721999999998165e-05, 5.9486000000004424e-05, 5.9679999999999456e-05, 5.966699999999936e-05, 5.965299999999979e-05, 5.9263999999996375e-05, 5.962500000000065e-05, 6.013900000000072e-05, 5.984699999999482e-05, 5.9278000000002884e-05, 5.9820000000002094e-05, 5.970899999999807e-05, 5.9541999999995765e-05, 5.94870000000039e-05, 5.956900000000237e-05, 5.983299999999525e-05, 5.929100000000298e-05, 5.9665999999999886e-05]</msg>
<status status="PASS" starttime="20201115 23:03:14.379" endtime="20201115 23:03:14.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.368" endtime="20201115 23:03:14.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.393" endtime="20201115 23:03:14.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:14.401" endtime="20201115 23:03:14.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.396" endtime="20201115 23:03:14.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.388" endtime="20201115 23:03:14.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.906" endtime="20201115 23:03:14.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.902" endtime="20201115 23:03:14.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.900" endtime="20201115 23:03:14.428"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.454" endtime="20201115 23:03:14.476"></status>
</kw>
<msg timestamp="20201115 23:03:14.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.451" endtime="20201115 23:03:14.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.479" endtime="20201115 23:03:14.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.485" endtime="20201115 23:03:14.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.444" endtime="20201115 23:03:14.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.438" endtime="20201115 23:03:14.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.509" endtime="20201115 23:03:14.857"></status>
</kw>
<msg timestamp="20201115 23:03:14.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047038528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047099639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.505" endtime="20201115 23:03:14.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047038528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047099639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.866" endtime="20201115 23:03:14.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.885" endtime="20201115 23:03:14.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.498" endtime="20201115 23:03:14.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.493" endtime="20201115 23:03:14.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:14.903" level="INFO">${RESULT} = [{'time': 0.047099639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.111099999999564e-05, 'source_diff': 6.111099999999564e-05}, {'time': 0.047172625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:14.894" endtime="20201115 23:03:14.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:14.933" level="INFO">${ACCURACY} = {'time': [0.047099639, 0.047172625, 0.047239639, 0.047309653, 0.047375653, 0.047443681, 0.047519667, 0.047588681, 0.047659681, 0.047730694, 0.047805708, 0.047878708, 0.047944736, 0.048014736, 0.048085...</msg>
<status status="PASS" starttime="20201115 23:03:14.905" endtime="20201115 23:03:14.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.944" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:03:14.942" endtime="20201115 23:03:14.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.951" level="INFO">VALUE: [6.111099999999564e-05, 6.0306000000003024e-05, 6.0541999999996765e-05, 6.109700000000301e-05, 6.0194999999999e-05, 6.0570000000002844e-05, 6.1028000000004634e-05, 6.0306000000003024e-05, 6.020900000000551e-05, 6.059699999999557e-05, 6.109700000000301e-05, 6.0735999999998735e-05, 6.0235999999998235e-05, 6.109700000000301e-05, 6.0221999999998665e-05, 6.105599999999684e-05, 6.0278000000003884e-05, 6.043099999999968e-05, 6.113899999999478e-05, 6.068099999999993e-05, 6.034700000000226e-05, 6.093100000000018e-05, 6.0499999999998055e-05, 6.10420000000042e-05, 6.0514000000004564e-05, 6.031899999999618e-05, 6.0680000000000456e-05, 6.05550000000038e-05, 6.059699999999557e-05, 6.05550000000038e-05, 6.0514000000004564e-05, 6.036100000000183e-05, 6.104199999999727e-05, 6.073699999999821e-05, 6.0235999999998235e-05, 6.0582999999996e-05, 6.0457999999999346e-05, 6.034700000000226e-05, 6.030500000000355e-05, 6.072299999999864e-05, 6.041700000000011e-05, 6.0792000000003954e-05, 6.0179999999999956e-05, 6.079099999999754e-05, 6.0819999999996155e-05, 6.0680000000000456e-05, 6.0471999999998916e-05, 6.0999999999998555e-05, 6.0263999999997375e-05, 6.0291999999996515e-05]</msg>
<status status="PASS" starttime="20201115 23:03:14.947" endtime="20201115 23:03:14.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.935" endtime="20201115 23:03:14.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.960" endtime="20201115 23:03:14.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:14.968" endtime="20201115 23:03:14.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.964" endtime="20201115 23:03:14.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.955" endtime="20201115 23:03:14.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.434" endtime="20201115 23:03:14.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.430" endtime="20201115 23:03:14.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.428" endtime="20201115 23:03:14.995"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.000" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.022" endtime="20201115 23:03:15.043"></status>
</kw>
<msg timestamp="20201115 23:03:15.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.018" endtime="20201115 23:03:15.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.046" endtime="20201115 23:03:15.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.053" endtime="20201115 23:03:15.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.011" endtime="20201115 23:03:15.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.005" endtime="20201115 23:03:15.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.077" endtime="20201115 23:03:15.425"></status>
</kw>
<msg timestamp="20201115 23:03:15.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047417264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.073" endtime="20201115 23:03:15.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047417264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.434" endtime="20201115 23:03:15.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.453" endtime="20201115 23:03:15.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.066" endtime="20201115 23:03:15.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.062" endtime="20201115 23:03:15.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:15.470" level="INFO">${RESULT} = [{'time': 0.047417264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.13750000000024e-05, 'source_diff': 6.13750000000024e-05}, {'time': 0.047489278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:15.461" endtime="20201115 23:03:15.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:15.501" level="INFO">${ACCURACY} = {'time': [0.047417264, 0.047489278, 0.047557278, 0.047621306, 0.047685292, 0.047751306, 0.047820319, 0.047894319, 0.047966333, 0.048038347, 0.048109389, 0.048176347, 0.048244361, 0.048320361, 0.048391...</msg>
<status status="PASS" starttime="20201115 23:03:15.472" endtime="20201115 23:03:15.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.512" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:03:15.509" endtime="20201115 23:03:15.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.518" level="INFO">VALUE: [6.13750000000024e-05, 6.122199999999967e-05, 6.155600000000427e-05, 6.13620000000023e-05, 6.17499999999993e-05, 6.209800000000348e-05, 6.17629999999994e-05, 6.17629999999994e-05, 6.162500000000265e-05, 6.12080000000001e-05, 6.172200000000017e-05, 6.119400000000053e-05, 6.159699999999657e-05, 6.187499999999596e-05, 6.212499999999621e-05, 6.165300000000179e-05, 6.126399999999838e-05, 6.186099999999639e-05, 6.158399999999647e-05, 6.179200000000495e-05, 6.176399999999888e-05, 6.163899999999528e-05, 6.205499999999836e-05, 6.195800000000085e-05, 6.149999999999906e-05, 6.161100000000308e-05, 6.141600000000164e-05, 6.191600000000214e-05, 6.130600000000402e-05, 6.141699999999417e-05, 6.129199999999752e-05, 6.209699999999707e-05, 6.136100000000283e-05, 6.197200000000042e-05, 6.158399999999647e-05, 6.144500000000025e-05, 6.201399999999913e-05, 6.115300000000129e-05, 6.190300000000204e-05, 6.208300000000444e-05, 6.212499999999621e-05, 6.147199999999992e-05, 6.197200000000042e-05, 6.195799999999391e-05, 6.179100000000548e-05, 6.14300000000012e-05, 6.12499999999988e-05, 6.15420000000047e-05, 6.17499999999993e-05, 6.168100000000093e-05]</msg>
<status status="PASS" starttime="20201115 23:03:15.514" endtime="20201115 23:03:15.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.503" endtime="20201115 23:03:15.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.527" endtime="20201115 23:03:15.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:15.536" endtime="20201115 23:03:15.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.531" endtime="20201115 23:03:15.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.523" endtime="20201115 23:03:15.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.002" endtime="20201115 23:03:15.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.997" endtime="20201115 23:03:15.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.996" endtime="20201115 23:03:15.562"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.590" endtime="20201115 23:03:15.610"></status>
</kw>
<msg timestamp="20201115 23:03:15.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.586" endtime="20201115 23:03:15.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.614" endtime="20201115 23:03:15.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.620" endtime="20201115 23:03:15.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.579" endtime="20201115 23:03:15.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.573" endtime="20201115 23:03:15.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.643" endtime="20201115 23:03:15.993"></status>
</kw>
<msg timestamp="20201115 23:03:16.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047920931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.640" endtime="20201115 23:03:16.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047857958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047920931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.003" endtime="20201115 23:03:16.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.021" endtime="20201115 23:03:16.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.633" endtime="20201115 23:03:16.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.628" endtime="20201115 23:03:16.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:16.039" level="INFO">${RESULT} = [{'time': 0.047920931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.297300000000089e-05, 'source_diff': 6.297300000000089e-05}, {'time': 0.047998944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:16.030" endtime="20201115 23:03:16.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:16.069" level="INFO">${ACCURACY} = {'time': [0.047920931, 0.047998944, 0.048070944, 0.048137958, 0.048211958, 0.048278972, 0.048352972, 0.048421, 0.048494986, 0.04856, 0.048627, 0.048694014, 0.048764014, 0.048833028, 0.048904028, 0.048...</msg>
<status status="PASS" starttime="20201115 23:03:16.041" endtime="20201115 23:03:16.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.080" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:03:16.078" endtime="20201115 23:03:16.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.087" level="INFO">VALUE: [6.297300000000089e-05, 6.300000000000056e-05, 6.244399999999484e-05, 6.268000000000246e-05, 6.237499999999646e-05, 6.247200000000092e-05, 6.216600000000239e-05, 6.265299999999585e-05, 6.299999999999362e-05, 6.254199999999877e-05, 6.245799999999441e-05, 6.309699999999807e-05, 6.254199999999877e-05, 6.23750000000034e-05, 6.270900000000107e-05, 6.229099999999904e-05, 6.315299999999635e-05, 6.307000000000534e-05, 6.254099999999929e-05, 6.24300000000022e-05, 6.234700000000426e-05, 6.243099999999474e-05, 6.219400000000153e-05, 6.304099999999979e-05, 6.22499999999998e-05, 6.265299999999585e-05, 6.229199999999852e-05, 6.315300000000329e-05, 6.245799999999441e-05, 6.312499999999721e-05, 6.308400000000491e-05, 6.308399999999798e-05, 6.245900000000082e-05, 6.229099999999904e-05, 6.27500000000003e-05, 6.27080000000016e-05, 6.266599999999595e-05, 6.251399999999963e-05, 6.233299999999775e-05, 6.270799999999466e-05, 6.297200000000142e-05, 6.27080000000016e-05, 6.23750000000034e-05, 6.222200000000067e-05, 6.229200000000545e-05, 6.27500000000003e-05, 6.245899999999388e-05, 6.229199999999852e-05, 6.245900000000082e-05, 6.288900000000347e-05]</msg>
<status status="PASS" starttime="20201115 23:03:16.083" endtime="20201115 23:03:16.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.071" endtime="20201115 23:03:16.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.096" endtime="20201115 23:03:16.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:16.104" endtime="20201115 23:03:16.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.100" endtime="20201115 23:03:16.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.091" endtime="20201115 23:03:16.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.569" endtime="20201115 23:03:16.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.565" endtime="20201115 23:03:16.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.563" endtime="20201115 23:03:16.131"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.159" endtime="20201115 23:03:16.181"></status>
</kw>
<msg timestamp="20201115 23:03:16.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.155" endtime="20201115 23:03:16.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.184" endtime="20201115 23:03:16.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.191" endtime="20201115 23:03:16.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.148" endtime="20201115 23:03:16.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.142" endtime="20201115 23:03:16.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.214" endtime="20201115 23:03:16.564"></status>
</kw>
<msg timestamp="20201115 23:03:16.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047868361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047931958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.211" endtime="20201115 23:03:16.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047868361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047931958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.573" endtime="20201115 23:03:16.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.592" endtime="20201115 23:03:16.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.204" endtime="20201115 23:03:16.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.199" endtime="20201115 23:03:16.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:16.609" level="INFO">${RESULT} = [{'time': 0.047931958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.359699999999857e-05, 'source_diff': 6.359699999999857e-05}, {'time': 0.048009958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:16.600" endtime="20201115 23:03:16.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:16.642" level="INFO">${ACCURACY} = {'time': [0.047931958, 0.048009958, 0.048084972, 0.048155972, 0.048221986, 0.048298986, 0.048374, 0.048449014, 0.048527014, 0.048603042, 0.048678042, 0.048753056, 0.048825056, 0.048891069, 0.048964069...</msg>
<status status="PASS" starttime="20201115 23:03:16.611" endtime="20201115 23:03:16.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.653" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:03:16.651" endtime="20201115 23:03:16.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.730" level="INFO">VALUE: [6.359699999999857e-05, 6.323600000000124e-05, 6.401399999999419e-05, 6.35280000000002e-05, 6.355499999999986e-05, 6.391700000000361e-05, 6.355599999999934e-05, 6.359699999999857e-05, 6.366700000000336e-05, 6.37500000000013e-05, 6.395899999999538e-05, 6.380599999999959e-05, 6.393099999999624e-05, 6.333300000000569e-05, 6.367999999999652e-05, 6.34300000000032e-05, 6.330499999999961e-05, 6.406899999999993e-05, 6.318000000000296e-05, 6.376400000000088e-05, 6.413899999999778e-05, 6.323600000000124e-05, 6.395800000000285e-05, 6.408399999999898e-05, 6.361100000000508e-05, 6.348600000000149e-05, 6.365299999999685e-05, 6.395899999999538e-05, 6.313899999999678e-05, 6.377800000000045e-05, 6.397199999999548e-05, 6.344400000000278e-05, 6.384699999999882e-05, 6.404100000000079e-05, 6.327799999999995e-05, 6.397199999999548e-05, 6.391699999999667e-05, 6.318100000000243e-05, 6.363899999999728e-05, 6.318100000000243e-05, 6.386100000000533e-05, 6.363900000000422e-05, 6.35280000000002e-05, 6.393100000000318e-05, 6.341600000000364e-05, 6.40829999999995e-05, 6.39159999999972e-05, 6.391700000000361e-05, 6.415300000000429e-05, 6.326400000000038e-05]</msg>
<status status="PASS" starttime="20201115 23:03:16.655" endtime="20201115 23:03:16.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.644" endtime="20201115 23:03:16.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.740" endtime="20201115 23:03:16.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:16.749" endtime="20201115 23:03:16.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.744" endtime="20201115 23:03:16.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.736" endtime="20201115 23:03:16.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.138" endtime="20201115 23:03:16.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.134" endtime="20201115 23:03:16.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.132" endtime="20201115 23:03:16.775"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.781" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.802" endtime="20201115 23:03:16.823"></status>
</kw>
<msg timestamp="20201115 23:03:16.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.799" endtime="20201115 23:03:16.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.826" endtime="20201115 23:03:16.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.833" endtime="20201115 23:03:16.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.792" endtime="20201115 23:03:16.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.786" endtime="20201115 23:03:16.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.856" endtime="20201115 23:03:17.202"></status>
</kw>
<msg timestamp="20201115 23:03:17.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046886889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046951819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.853" endtime="20201115 23:03:17.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046886889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046951819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.212" endtime="20201115 23:03:17.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.231" endtime="20201115 23:03:17.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.846" endtime="20201115 23:03:17.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.841" endtime="20201115 23:03:17.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:17.248" level="INFO">${RESULT} = [{'time': 0.046951819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.492999999999777e-05, 'source_diff': 6.492999999999777e-05}, {'time': 0.047027792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:17.239" endtime="20201115 23:03:17.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.279" level="INFO">${ACCURACY} = {'time': [0.046951819, 0.047027792, 0.047095792, 0.047166806, 0.047235806, 0.047305819, 0.047373819, 0.047446819, 0.047517861, 0.047591861, 0.047663889, 0.047730861, 0.047800861, 0.047875875, 0.047947...</msg>
<status status="PASS" starttime="20201115 23:03:17.250" endtime="20201115 23:03:17.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.290" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.288" endtime="20201115 23:03:17.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.300" level="INFO">VALUE: [6.492999999999777e-05, 6.50280000000017e-05, 6.493099999999724e-05, 6.419499999999606e-05, 6.509799999999955e-05, 6.442999999999727e-05, 6.472199999999623e-05, 6.429100000000104e-05, 6.504200000000127e-05, 6.469399999999709e-05, 6.480600000000059e-05, 6.433299999999975e-05, 6.422200000000267e-05, 6.443099999999674e-05, 6.495800000000385e-05, 6.497200000000342e-05, 6.468099999999699e-05, 6.477800000000145e-05, 6.509799999999955e-05, 6.516700000000486e-05, 6.483399999999973e-05, 6.512499999999921e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.433399999999923e-05, 6.452799999999426e-05, 6.484699999999982e-05, 6.512499999999921e-05, 6.498600000000299e-05, 6.459700000000651e-05, 6.470799999999666e-05, 6.498600000000299e-05, 6.462499999999871e-05, 6.477800000000145e-05, 6.422300000000214e-05, 6.445900000000282e-05, 6.462499999999871e-05, 6.462499999999871e-05, 6.474999999999537e-05, 6.427700000000147e-05, 6.50700000000004e-05, 6.426400000000138e-05, 6.484699999999982e-05, 6.498599999999605e-05, 6.515299999999835e-05, 6.486099999999939e-05, 6.45280000000012e-05, 6.456899999999349e-05, 6.455600000000034e-05, 6.493100000000418e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.292" endtime="20201115 23:03:17.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.281" endtime="20201115 23:03:17.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.309" endtime="20201115 23:03:17.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.317" endtime="20201115 23:03:17.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.313" endtime="20201115 23:03:17.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.304" endtime="20201115 23:03:17.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.782" endtime="20201115 23:03:17.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.778" endtime="20201115 23:03:17.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.776" endtime="20201115 23:03:17.344"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.349" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.371" endtime="20201115 23:03:17.392"></status>
</kw>
<msg timestamp="20201115 23:03:17.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.367" endtime="20201115 23:03:17.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.395" endtime="20201115 23:03:17.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.402" endtime="20201115 23:03:17.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.360" endtime="20201115 23:03:17.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.354" endtime="20201115 23:03:17.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.427" endtime="20201115 23:03:17.734"></status>
</kw>
<msg timestamp="20201115 23:03:17.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04743025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0474955, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:17.422" endtime="20201115 23:03:17.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04743025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0474955, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:17.743" endtime="20201115 23:03:17.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.762" endtime="20201115 23:03:17.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.414" endtime="20201115 23:03:17.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.410" endtime="20201115 23:03:17.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:17.780" level="INFO">${RESULT} = [{'time': 0.0474955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.52500000000028e-05, 'source_diff': 6.52500000000028e-05}, {'time': 0.047573528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 23:03:17.771" endtime="20201115 23:03:17.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.811" level="INFO">${ACCURACY} = {'time': [0.0474955, 0.047573528, 0.047646514, 0.047715528, 0.047787528, 0.047868542, 0.047936542, 0.048005556, 0.048079569, 0.048156583, 0.048224569, 0.048303583, 0.048383597, 0.048452597, 0.04853261...</msg>
<status status="PASS" starttime="20201115 23:03:17.783" endtime="20201115 23:03:17.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.822" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.819" endtime="20201115 23:03:17.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.827" level="INFO">VALUE: [6.52500000000028e-05, 6.574999999999637e-05, 6.576400000000288e-05, 6.591699999999867e-05, 6.515300000000529e-05, 6.582000000000116e-05, 6.594499999999781e-05, 6.570899999999713e-05, 6.529100000000204e-05, 6.538900000000597e-05, 6.554100000000229e-05, 6.52909999999951e-05, 6.567999999999852e-05, 6.59159999999992e-05, 6.60830000000015e-05, 6.529200000000152e-05, 6.5583000000001e-05, 6.543100000000468e-05, 6.587499999999996e-05, 6.518100000000443e-05, 6.550000000000306e-05, 6.576399999999594e-05, 6.530600000000109e-05, 6.57500000000033e-05, 6.613800000000031e-05, 6.569399999999809e-05, 6.517999999999802e-05, 6.554100000000229e-05, 6.594399999999834e-05, 6.595799999999791e-05, 6.612500000000021e-05, 6.544399999999784e-05, 6.599999999999662e-05, 6.598600000000399e-05, 6.52229999999962e-05, 6.53479999999998e-05, 6.595899999999738e-05, 6.52500000000028e-05, 6.538900000000597e-05, 6.587499999999996e-05, 6.577800000000245e-05, 6.576400000000288e-05, 6.613899999999978e-05, 6.538899999999903e-05, 6.612500000000021e-05, 6.52630000000029e-05, 6.527800000000195e-05, 6.599999999999662e-05, 6.576400000000288e-05, 6.558400000000048e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.824" endtime="20201115 23:03:17.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.812" endtime="20201115 23:03:17.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.836" endtime="20201115 23:03:17.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.844" endtime="20201115 23:03:17.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.840" endtime="20201115 23:03:17.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.831" endtime="20201115 23:03:17.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.350" endtime="20201115 23:03:17.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.346" endtime="20201115 23:03:17.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.344" endtime="20201115 23:03:17.871"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.897" endtime="20201115 23:03:17.919"></status>
</kw>
<msg timestamp="20201115 23:03:17.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.894" endtime="20201115 23:03:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.922" endtime="20201115 23:03:17.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.928" endtime="20201115 23:03:17.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.887" endtime="20201115 23:03:17.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.881" endtime="20201115 23:03:17.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.952" endtime="20201115 23:03:18.300"></status>
</kw>
<msg timestamp="20201115 23:03:18.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047364667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047431528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.948" endtime="20201115 23:03:18.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047364667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047431528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.309" endtime="20201115 23:03:18.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.329" endtime="20201115 23:03:18.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.941" endtime="20201115 23:03:18.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.937" endtime="20201115 23:03:18.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:18.346" level="INFO">${RESULT} = [{'time': 0.047431528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.686100000000139e-05, 'source_diff': 6.686100000000139e-05}, {'time': 0.0475065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:18.337" endtime="20201115 23:03:18.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:18.376" level="INFO">${ACCURACY} = {'time': [0.047431528, 0.0475065, 0.0475845, 0.047655514, 0.047731528, 0.047803556, 0.047880542, 0.047952583, 0.048032556, 0.048109556, 0.048182569, 0.048257583, 0.048328583, 0.048409597, 0.048481597,...</msg>
<status status="PASS" starttime="20201115 23:03:18.348" endtime="20201115 23:03:18.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.387" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:03:18.385" endtime="20201115 23:03:18.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.393" level="INFO">VALUE: [6.686100000000139e-05, 6.712500000000121e-05, 6.615299999999935e-05, 6.626400000000338e-05, 6.688900000000053e-05, 6.663900000000028e-05, 6.641699999999917e-05, 6.645799999999841e-05, 6.649999999999712e-05, 6.620899999999763e-05, 6.679100000000354e-05, 6.670799999999866e-05, 6.70830000000025e-05, 6.626399999999644e-05, 6.620799999999816e-05, 6.626399999999644e-05, 6.676399999999694e-05, 6.701399999999719e-05, 6.65559999999954e-05, 6.687500000000096e-05, 6.711100000000164e-05, 6.708400000000198e-05, 6.679100000000354e-05, 6.645900000000482e-05, 6.666699999999942e-05, 6.669399999999909e-05, 6.686100000000139e-05, 6.630500000000261e-05, 6.67909999999966e-05, 6.616599999999945e-05, 6.663900000000028e-05, 6.683300000000225e-05, 6.708400000000198e-05, 6.668099999999899e-05, 6.618099999999849e-05, 6.701400000000413e-05, 6.708399999999504e-05, 6.698700000000446e-05, 6.609800000000055e-05, 6.656900000000243e-05, 6.659700000000157e-05, 6.70830000000025e-05, 6.658299999999506e-05, 6.672199999999823e-05, 6.713900000000078e-05, 6.706900000000293e-05, 6.662499999999377e-05, 6.630600000000209e-05, 6.70280000000037e-05, 6.634700000000132e-05]</msg>
<status status="PASS" starttime="20201115 23:03:18.389" endtime="20201115 23:03:18.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.378" endtime="20201115 23:03:18.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.401" endtime="20201115 23:03:18.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:18.410" endtime="20201115 23:03:18.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.405" endtime="20201115 23:03:18.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.397" endtime="20201115 23:03:18.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.877" endtime="20201115 23:03:18.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.873" endtime="20201115 23:03:18.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.871" endtime="20201115 23:03:18.436"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.442" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.463" endtime="20201115 23:03:18.485"></status>
</kw>
<msg timestamp="20201115 23:03:18.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.460" endtime="20201115 23:03:18.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.488" endtime="20201115 23:03:18.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.494" endtime="20201115 23:03:18.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.453" endtime="20201115 23:03:18.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.447" endtime="20201115 23:03:18.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.518" endtime="20201115 23:03:18.867"></status>
</kw>
<msg timestamp="20201115 23:03:18.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047432194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047499458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.514" endtime="20201115 23:03:18.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047432194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047499458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.877" endtime="20201115 23:03:18.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.896" endtime="20201115 23:03:18.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.507" endtime="20201115 23:03:18.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.502" endtime="20201115 23:03:18.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:18.913" level="INFO">${RESULT} = [{'time': 0.047499458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.726400000000438e-05, 'source_diff': 6.726400000000438e-05}, {'time': 0.047577458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:18.904" endtime="20201115 23:03:18.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:18.945" level="INFO">${ACCURACY} = {'time': [0.047499458, 0.047577458, 0.047653486, 0.0477325, 0.047805486, 0.0478805, 0.0479595, 0.048030556, 0.048107528, 0.048182528, 0.048264556, 0.048340542, 0.048419569, 0.048489569, 0.048563569, 0...</msg>
<status status="PASS" starttime="20201115 23:03:18.915" endtime="20201115 23:03:18.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.956" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:03:18.954" endtime="20201115 23:03:18.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.962" level="INFO">VALUE: [6.726400000000438e-05, 6.783300000000325e-05, 6.812500000000221e-05, 6.738899999999409e-05, 6.804200000000427e-05, 6.734700000000232e-05, 6.798599999999905e-05, 6.754200000000377e-05, 6.726399999999744e-05, 6.754200000000377e-05, 6.811200000000212e-05, 6.729200000000352e-05, 6.801300000000565e-05, 6.755500000000386e-05, 6.734700000000232e-05, 6.719399999999959e-05, 6.804099999999785e-05, 6.806899999999699e-05, 6.797199999999948e-05, 6.755500000000386e-05, 6.745799999999941e-05, 6.729200000000352e-05, 6.738900000000103e-05, 6.79030000000011e-05, 6.754200000000377e-05, 6.768099999999999e-05, 6.748599999999855e-05, 6.795899999999938e-05, 6.783299999999631e-05, 6.752699999999778e-05, 6.734700000000232e-05, 6.812499999999527e-05, 6.773600000000574e-05, 6.755499999999692e-05, 6.733300000000275e-05, 6.79030000000011e-05, 6.795799999999991e-05, 6.722200000000567e-05, 6.729200000000352e-05, 6.768099999999999e-05, 6.75559999999964e-05, 6.745899999999888e-05, 6.815200000000188e-05, 6.812500000000221e-05, 6.762499999999477e-05, 6.755500000000386e-05, 6.77909999999976e-05, 6.788899999999459e-05, 6.769400000000009e-05, 6.734799999999486e-05]</msg>
<status status="PASS" starttime="20201115 23:03:18.959" endtime="20201115 23:03:18.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.947" endtime="20201115 23:03:18.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.971" endtime="20201115 23:03:18.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:18.979" endtime="20201115 23:03:19.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.975" endtime="20201115 23:03:19.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.966" endtime="20201115 23:03:19.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.443" endtime="20201115 23:03:19.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.439" endtime="20201115 23:03:19.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.437" endtime="20201115 23:03:19.005"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.011" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.032" endtime="20201115 23:03:19.054"></status>
</kw>
<msg timestamp="20201115 23:03:19.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.029" endtime="20201115 23:03:19.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.057" endtime="20201115 23:03:19.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.064" endtime="20201115 23:03:19.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.022" endtime="20201115 23:03:19.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.016" endtime="20201115 23:03:19.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.088" endtime="20201115 23:03:19.435"></status>
</kw>
<msg timestamp="20201115 23:03:19.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046910208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.084" endtime="20201115 23:03:19.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046841736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046910208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.444" endtime="20201115 23:03:19.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.463" endtime="20201115 23:03:19.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.077" endtime="20201115 23:03:19.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.072" endtime="20201115 23:03:19.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:19.482" level="INFO">${RESULT} = [{'time': 0.046910208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847199999999998e-05, 'source_diff': 6.847199999999998e-05}, {'time': 0.046985222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:19.473" endtime="20201115 23:03:19.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:19.512" level="INFO">${ACCURACY} = {'time': [0.046910208, 0.046985222, 0.047061208, 0.047136236, 0.04720925, 0.047281292, 0.04735425, 0.047437264, 0.047510264, 0.047585278, 0.047662292, 0.047737306, 0.047810292, 0.047893306, 0.04797131...</msg>
<status status="PASS" starttime="20201115 23:03:19.484" endtime="20201115 23:03:19.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.523" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:03:19.520" endtime="20201115 23:03:19.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.528" level="INFO">VALUE: [6.847199999999998e-05, 6.880499999999817e-05, 6.874999999999937e-05, 6.859699999999663e-05, 6.827799999999801e-05, 6.855600000000434e-05, 6.868100000000099e-05, 6.888900000000253e-05, 6.826400000000538e-05, 6.859700000000357e-05, 6.870900000000013e-05, 6.901399999999919e-05, 6.887499999999602e-05, 6.824999999999887e-05, 6.909699999999713e-05, 6.869400000000109e-05, 6.829100000000504e-05, 6.854099999999835e-05, 6.822199999999973e-05, 6.89160000000022e-05, 6.895800000000091e-05, 6.902799999999876e-05, 6.883299999999731e-05, 6.827799999999801e-05, 6.823600000000624e-05, 6.816600000000145e-05, 6.847300000000639e-05, 6.829200000000452e-05, 6.883300000000425e-05, 6.82909999999981e-05, 6.893000000000177e-05, 6.915299999999541e-05, 6.876399999999894e-05, 6.880499999999817e-05, 6.859699999999663e-05, 6.874999999999937e-05, 6.893100000000124e-05, 6.829199999999758e-05, 6.876399999999894e-05, 6.819500000000006e-05, 6.893000000000177e-05, 6.90979999999966e-05, 6.904199999999833e-05, 6.843000000000127e-05, 6.856899999999749e-05, 6.884700000000382e-05, 6.905499999999842e-05, 6.906899999999799e-05, 6.893000000000177e-05, 6.913900000000278e-05]</msg>
<status status="PASS" starttime="20201115 23:03:19.525" endtime="20201115 23:03:19.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.514" endtime="20201115 23:03:19.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.537" endtime="20201115 23:03:19.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:19.545" endtime="20201115 23:03:19.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.541" endtime="20201115 23:03:19.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.532" endtime="20201115 23:03:19.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.012" endtime="20201115 23:03:19.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.008" endtime="20201115 23:03:19.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.006" endtime="20201115 23:03:19.572"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.600" endtime="20201115 23:03:19.621"></status>
</kw>
<msg timestamp="20201115 23:03:19.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.596" endtime="20201115 23:03:19.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.625" endtime="20201115 23:03:19.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.631" endtime="20201115 23:03:19.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.588" endtime="20201115 23:03:19.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.583" endtime="20201115 23:03:19.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.654" endtime="20201115 23:03:20.003"></status>
</kw>
<msg timestamp="20201115 23:03:20.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047849986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047920125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.651" endtime="20201115 23:03:20.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047849986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047920125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.013" endtime="20201115 23:03:20.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.032" endtime="20201115 23:03:20.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.644" endtime="20201115 23:03:20.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.639" endtime="20201115 23:03:20.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:20.049" level="INFO">${RESULT} = [{'time': 0.047920125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013900000000378e-05, 'source_diff': 7.013900000000378e-05}, {'time': 0.048001125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:20.040" endtime="20201115 23:03:20.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:20.079" level="INFO">${ACCURACY} = {'time': [0.047920125, 0.048001125, 0.048083111, 0.048163111, 0.048245167, 0.048325125, 0.048398139, 0.048472139, 0.048552153, 0.048636153, 0.048713181, 0.048793194, 0.048867181, 0.048945208, 0.049028...</msg>
<status status="PASS" starttime="20201115 23:03:20.051" endtime="20201115 23:03:20.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.090" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:03:20.088" endtime="20201115 23:03:20.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.096" level="INFO">VALUE: [7.013900000000378e-05, 6.962499999999677e-05, 6.955499999999892e-05, 6.920800000000116e-05, 6.958399999999754e-05, 6.962499999999677e-05, 7.012499999999727e-05, 6.924999999999987e-05, 6.959699999999763e-05, 6.987500000000396e-05, 6.95559999999984e-05, 6.986099999999745e-05, 7.001400000000019e-05, 6.930499999999867e-05, 6.992999999999583e-05, 6.970800000000166e-05, 6.987500000000396e-05, 7.009700000000507e-05, 6.924999999999987e-05, 7.001400000000019e-05, 7.008299999999856e-05, 6.983300000000525e-05, 6.973700000000027e-05, 6.966700000000242e-05, 6.99309999999953e-05, 6.975000000000037e-05, 6.918100000000149e-05, 7.012499999999727e-05, 6.948600000000055e-05, 6.947200000000098e-05, 6.994400000000234e-05, 6.944400000000184e-05, 6.984699999999788e-05, 6.995800000000191e-05, 6.934699999999738e-05, 6.975000000000037e-05, 6.972199999999429e-05, 6.965300000000285e-05, 6.952799999999926e-05, 6.938900000000303e-05, 6.919499999999412e-05, 6.958400000000448e-05, 6.938800000000356e-05, 6.926400000000638e-05, 7.006899999999899e-05, 6.968000000000252e-05, 6.955499999999892e-05, 6.930499999999867e-05, 6.959700000000457e-05, 7.00830000000055e-05]</msg>
<status status="PASS" starttime="20201115 23:03:20.092" endtime="20201115 23:03:20.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.081" endtime="20201115 23:03:20.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.104" endtime="20201115 23:03:20.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:20.113" endtime="20201115 23:03:20.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.108" endtime="20201115 23:03:20.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.100" endtime="20201115 23:03:20.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.579" endtime="20201115 23:03:20.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.575" endtime="20201115 23:03:20.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.573" endtime="20201115 23:03:20.140"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.145" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.167" endtime="20201115 23:03:20.189"></status>
</kw>
<msg timestamp="20201115 23:03:20.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.164" endtime="20201115 23:03:20.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.192" endtime="20201115 23:03:20.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.198" endtime="20201115 23:03:20.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.157" endtime="20201115 23:03:20.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.151" endtime="20201115 23:03:20.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.222" endtime="20201115 23:03:20.569"></status>
</kw>
<msg timestamp="20201115 23:03:20.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048102694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.218" endtime="20201115 23:03:20.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048102694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.578" endtime="20201115 23:03:20.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.597" endtime="20201115 23:03:20.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.211" endtime="20201115 23:03:20.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.207" endtime="20201115 23:03:20.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:20.616" level="INFO">${RESULT} = [{'time': 0.048173833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.113899999999784e-05, 'source_diff': 7.113899999999784e-05}, {'time': 0.048258833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:20.607" endtime="20201115 23:03:20.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:20.646" level="INFO">${ACCURACY} = {'time': [0.048173833, 0.048258833, 0.048341847, 0.048419861, 0.048498861, 0.048571875, 0.048653875, 0.048736875, 0.048817903, 0.048894903, 0.048975917, 0.049053917, 0.049137931, 0.049221931, 0.049305...</msg>
<status status="PASS" starttime="20201115 23:03:20.618" endtime="20201115 23:03:20.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.657" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:03:20.654" endtime="20201115 23:03:20.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.662" level="INFO">VALUE: [7.113899999999784e-05, 7.068000000000352e-05, 7.034699999999838e-05, 7.098600000000205e-05, 7.113899999999784e-05, 7.097200000000248e-05, 7.018100000000249e-05, 7.095799999999597e-05, 7.104200000000033e-05, 7.059700000000557e-05, 7.081999999999922e-05, 7.07360000000018e-05, 7.050000000000112e-05, 7.029199999999958e-05, 7.048599999999461e-05, 7.025000000000087e-05, 7.033299999999881e-05, 7.074999999999443e-05, 7.088899999999759e-05, 7.115299999999741e-05, 7.079200000000008e-05, 7.075000000000137e-05, 7.063899999999734e-05, 7.020799999999522e-05, 7.086100000000539e-05, 7.10559999999999e-05, 7.112500000000521e-05, 7.101400000000119e-05, 7.027700000000053e-05, 7.045800000000241e-05, 7.111100000000564e-05, 7.09160000000042e-05, 7.102800000000076e-05, 7.030599999999915e-05, 7.108299999999956e-05, 7.034699999999838e-05, 7.063899999999734e-05, 7.079200000000008e-05, 7.044500000000231e-05, 7.108399999999904e-05, 7.086200000000487e-05, 7.10559999999999e-05, 7.024999999999393e-05, 7.030499999999967e-05, 7.02910000000001e-05, 7.059699999999863e-05, 7.104200000000033e-05, 7.050000000000112e-05, 7.059699999999863e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:03:20.659" endtime="20201115 23:03:20.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.648" endtime="20201115 23:03:20.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.672" endtime="20201115 23:03:20.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:20.680" endtime="20201115 23:03:20.702"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.676" endtime="20201115 23:03:20.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.667" endtime="20201115 23:03:20.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.147" endtime="20201115 23:03:20.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.143" endtime="20201115 23:03:20.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.141" endtime="20201115 23:03:20.707"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.734" endtime="20201115 23:03:20.756"></status>
</kw>
<msg timestamp="20201115 23:03:20.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.730" endtime="20201115 23:03:20.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.759" endtime="20201115 23:03:20.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.766" endtime="20201115 23:03:20.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.723" endtime="20201115 23:03:20.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.717" endtime="20201115 23:03:20.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.789" endtime="20201115 23:03:21.084"></status>
</kw>
<msg timestamp="20201115 23:03:21.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047011375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047082917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.786" endtime="20201115 23:03:21.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047011375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047082917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.088" endtime="20201115 23:03:21.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.096" endtime="20201115 23:03:21.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.778" endtime="20201115 23:03:21.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.774" endtime="20201115 23:03:21.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.105" level="INFO">${RESULT} = [{'time': 0.047082917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.154200000000083e-05, 'source_diff': 7.154200000000083e-05}, {'time': 0.047169931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.100" endtime="20201115 23:03:21.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:21.119" level="INFO">${ACCURACY} = {'time': [0.047082917, 0.047169931, 0.047253958, 0.047336944, 0.047418958, 0.047499958, 0.047582972, 0.047666986, 0.047741986, 0.047824, 0.047908028, 0.047985014, 0.048072097, 0.048156042, 0.048236056...</msg>
<status status="PASS" starttime="20201115 23:03:21.106" endtime="20201115 23:03:21.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.125" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:03:21.124" endtime="20201115 23:03:21.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.128" level="INFO">VALUE: [7.154200000000083e-05, 7.184799999999936e-05, 7.198599999999611e-05, 7.116599999999751e-05, 7.184699999999988e-05, 7.145800000000341e-05, 7.158300000000006e-05, 7.175000000000237e-05, 7.170799999999672e-05, 7.163899999999834e-05, 7.177800000000151e-05, 7.120799999999622e-05, 7.212499999999927e-05, 7.13480000000058e-05, 7.17230000000027e-05, 7.209799999999961e-05, 7.202800000000176e-05, 7.191599999999826e-05, 7.167999999999758e-05, 7.170800000000366e-05, 7.201400000000219e-05, 7.191599999999826e-05, 7.126400000000144e-05, 7.211100000000664e-05, 7.147200000000298e-05, 7.194499999999687e-05, 7.125000000000187e-05, 7.19030000000051e-05, 7.130600000000015e-05, 7.20560000000009e-05, 7.198600000000305e-05, 7.155500000000092e-05, 7.165199999999844e-05, 7.149999999999518e-05, 7.163900000000528e-05, 7.169399999999715e-05, 7.201400000000219e-05, 7.130600000000015e-05, 7.150000000000212e-05, 7.120799999999622e-05, 7.207000000000047e-05, 7.186100000000639e-05, 7.134799999999886e-05, 7.169499999999662e-05, 7.126400000000144e-05, 7.125000000000187e-05, 7.169400000000409e-05, 7.209700000000013e-05, 7.195800000000391e-05, 7.190299999999816e-05]</msg>
<status status="PASS" starttime="20201115 23:03:21.126" endtime="20201115 23:03:21.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.120" endtime="20201115 23:03:21.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.132" endtime="20201115 23:03:21.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:21.136" endtime="20201115 23:03:21.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.134" endtime="20201115 23:03:21.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.130" endtime="20201115 23:03:21.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.713" endtime="20201115 23:03:21.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.709" endtime="20201115 23:03:21.157"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.708" endtime="20201115 23:03:21.157"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.160" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.170" endtime="20201115 23:03:21.188"></status>
</kw>
<msg timestamp="20201115 23:03:21.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.169" endtime="20201115 23:03:21.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.190" endtime="20201115 23:03:21.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.193" endtime="20201115 23:03:21.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.165" endtime="20201115 23:03:21.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.163" endtime="20201115 23:03:21.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.204" endtime="20201115 23:03:21.515"></status>
</kw>
<msg timestamp="20201115 23:03:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027322806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027395125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.202" endtime="20201115 23:03:21.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027322806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027395125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.525" endtime="20201115 23:03:21.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.543" endtime="20201115 23:03:21.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.199" endtime="20201115 23:03:21.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.196" endtime="20201115 23:03:21.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.563" level="INFO">${RESULT} = [{'time': 0.027395125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.231899999999777e-05, 'source_diff': 7.231899999999777e-05}, {'time': 0.027479125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.553" endtime="20201115 23:03:21.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:21.593" level="INFO">${ACCURACY} = {'time': [0.027395125, 0.027479125, 0.027565125, 0.027641139, 0.027716153, 0.027803153, 0.027885167, 0.027967167, 0.028050194, 0.028128194, 0.028205222, 0.028289222, 0.028368222, 0.028446222, 0.028527...</msg>
<status status="PASS" starttime="20201115 23:03:21.565" endtime="20201115 23:03:21.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.604" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:03:21.602" endtime="20201115 23:03:21.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.610" level="INFO">VALUE: [7.231899999999777e-05, 7.259700000000063e-05, 7.227799999999854e-05, 7.230599999999768e-05, 7.25560000000014e-05, 7.265299999999891e-05, 7.288899999999959e-05, 7.245900000000041e-05, 7.263799999999987e-05, 7.263799999999987e-05, 7.226399999999897e-05, 7.219399999999765e-05, 7.25829999999976e-05, 7.304099999999938e-05, 7.315299999999941e-05, 7.293100000000177e-05, 7.241699999999823e-05, 7.234700000000038e-05, 7.254199999999836e-05, 7.251399999999922e-05, 7.276399999999947e-05, 7.226399999999897e-05, 7.298600000000058e-05, 7.227699999999906e-05, 7.254099999999888e-05, 7.234700000000038e-05, 7.304099999999938e-05, 7.302799999999929e-05, 7.270799999999772e-05, 7.234700000000038e-05, 7.248600000000008e-05, 7.288899999999959e-05, 7.248600000000008e-05, 7.313899999999984e-05, 7.248600000000008e-05, 7.263899999999934e-05, 7.270900000000066e-05, 7.282000000000122e-05, 7.290199999999969e-05, 7.265300000000238e-05, 7.272200000000076e-05, 7.216599999999851e-05, 7.22499999999994e-05, 7.306899999999852e-05, 7.298600000000058e-05, 7.308300000000156e-05, 7.29309999999983e-05, 7.283399999999732e-05, 7.238900000000256e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:03:21.606" endtime="20201115 23:03:21.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.595" endtime="20201115 23:03:21.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.618" endtime="20201115 23:03:21.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:21.627" endtime="20201115 23:03:21.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.623" endtime="20201115 23:03:21.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.614" endtime="20201115 23:03:21.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.161" endtime="20201115 23:03:21.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.159" endtime="20201115 23:03:21.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.158" endtime="20201115 23:03:21.653"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.659" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.680" endtime="20201115 23:03:21.701"></status>
</kw>
<msg timestamp="20201115 23:03:21.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.677" endtime="20201115 23:03:21.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.704" endtime="20201115 23:03:21.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.711" endtime="20201115 23:03:21.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.670" endtime="20201115 23:03:21.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.664" endtime="20201115 23:03:21.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.734" endtime="20201115 23:03:22.082"></status>
</kw>
<msg timestamp="20201115 23:03:22.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046799958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046873667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.731" endtime="20201115 23:03:22.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046799958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046873667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.091" endtime="20201115 23:03:22.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.111" endtime="20201115 23:03:22.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.724" endtime="20201115 23:03:22.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.719" endtime="20201115 23:03:22.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:22.128" level="INFO">${RESULT} = [{'time': 0.046873667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.370899999999819e-05, 'source_diff': 7.370899999999819e-05}, {'time': 0.046950694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:22.119" endtime="20201115 23:03:22.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:22.158" level="INFO">${ACCURACY} = {'time': [0.046873667, 0.046950694, 0.047033694, 0.047117708, 0.047203708, 0.047281722, 0.047362722, 0.047439736, 0.047519736, 0.04760775, 0.04768875, 0.047777778, 0.047866778, 0.047943778, 0.04802280...</msg>
<status status="PASS" starttime="20201115 23:03:22.130" endtime="20201115 23:03:22.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.169" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:03:22.167" endtime="20201115 23:03:22.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.175" level="INFO">VALUE: [7.370899999999819e-05, 7.415200000000094e-05, 7.367999999999958e-05, 7.32360000000043e-05, 7.397199999999854e-05, 7.40969999999952e-05, 7.397200000000548e-05, 7.392999999999983e-05, 7.337500000000052e-05, 7.324999999999693e-05, 7.331900000000224e-05, 7.404200000000333e-05, 7.405599999999596e-05, 7.391699999999973e-05, 7.384800000000136e-05, 7.397299999999801e-05, 7.332000000000172e-05, 7.4151999999994e-05, 7.397199999999854e-05, 7.322199999999779e-05, 7.413900000000084e-05, 7.395800000000591e-05, 7.395799999999897e-05, 7.40560000000029e-05, 7.337500000000052e-05, 7.374999999999743e-05, 7.329199999999564e-05, 7.37360000000048e-05, 7.359700000000163e-05, 7.319499999999812e-05, 7.345800000000541e-05, 7.356899999999555e-05, 7.36110000000012e-05, 7.395799999999897e-05, 7.324999999999693e-05, 7.333300000000181e-05, 7.40969999999952e-05, 7.407000000000247e-05, 7.329199999999564e-05, 7.334700000000138e-05, 7.318100000000549e-05, 7.336100000000095e-05, 7.332000000000172e-05, 7.319399999999865e-05, 7.390200000000069e-05, 7.334700000000138e-05, 7.337500000000052e-05, 7.342999999999933e-05, 7.412500000000127e-05, 7.327799999999607e-05]</msg>
<status status="PASS" starttime="20201115 23:03:22.172" endtime="20201115 23:03:22.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.160" endtime="20201115 23:03:22.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.184" endtime="20201115 23:03:22.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:22.192" endtime="20201115 23:03:22.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.188" endtime="20201115 23:03:22.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.179" endtime="20201115 23:03:22.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.660" endtime="20201115 23:03:22.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.656" endtime="20201115 23:03:22.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.654" endtime="20201115 23:03:22.218"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.224" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.245" endtime="20201115 23:03:22.267"></status>
</kw>
<msg timestamp="20201115 23:03:22.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.242" endtime="20201115 23:03:22.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.270" endtime="20201115 23:03:22.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.276" endtime="20201115 23:03:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.235" endtime="20201115 23:03:22.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.229" endtime="20201115 23:03:22.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.305" endtime="20201115 23:03:22.652"></status>
</kw>
<msg timestamp="20201115 23:03:22.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047023264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047098222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.296" endtime="20201115 23:03:22.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047023264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047098222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.662" endtime="20201115 23:03:22.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.680" endtime="20201115 23:03:22.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.289" endtime="20201115 23:03:22.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.284" endtime="20201115 23:03:22.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:22.699" level="INFO">${RESULT} = [{'time': 0.047098222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.495799999999997e-05, 'source_diff': 7.495799999999997e-05}, {'time': 0.04717825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:22.690" endtime="20201115 23:03:22.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:22.729" level="INFO">${ACCURACY} = {'time': [0.047098222, 0.04717825, 0.04725525, 0.04733725, 0.047415264, 0.047503264, 0.047584278, 0.047673292, 0.047760292, 0.047840306, 0.047920319, 0.048000319, 0.048085333, 0.048171361, 0.048252347...</msg>
<status status="PASS" starttime="20201115 23:03:22.701" endtime="20201115 23:03:22.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.740" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:03:22.738" endtime="20201115 23:03:22.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.746" level="INFO">VALUE: [7.495799999999997e-05, 7.418099999999955e-05, 7.434699999999544e-05, 7.43189999999963e-05, 7.470799999999972e-05, 7.491700000000073e-05, 7.4763999999998e-05, 7.445899999999894e-05, 7.47230000000057e-05, 7.504199999999739e-05, 7.505500000000442e-05, 7.462500000000177e-05, 7.422199999999879e-05, 7.440300000000066e-05, 7.436100000000195e-05, 7.436099999999501e-05, 7.484699999999594e-05, 7.504199999999739e-05, 7.513900000000184e-05, 7.444499999999937e-05, 7.441700000000023e-05, 7.513900000000184e-05, 7.476299999999853e-05, 7.474999999999843e-05, 7.498599999999911e-05, 7.470799999999972e-05, 7.513900000000184e-05, 7.440300000000066e-05, 7.423599999999836e-05, 7.487500000000202e-05, 7.462500000000177e-05, 7.493000000000083e-05, 7.436099999999501e-05, 7.512499999999533e-05, 7.470900000000613e-05, 7.470899999999919e-05, 7.476400000000494e-05, 7.424999999999793e-05, 7.502699999999835e-05, 7.477799999999757e-05, 7.50969999999962e-05, 7.49440000000004e-05, 7.506899999999705e-05, 7.51110000000027e-05, 7.50560000000039e-05, 7.495899999999944e-05, 7.50969999999962e-05, 7.427799999999707e-05, 7.454200000000383e-05, 7.425000000000487e-05]</msg>
<status status="PASS" starttime="20201115 23:03:22.743" endtime="20201115 23:03:22.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.731" endtime="20201115 23:03:22.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.754" endtime="20201115 23:03:22.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:22.763" endtime="20201115 23:03:22.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.758" endtime="20201115 23:03:22.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.750" endtime="20201115 23:03:22.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.225" endtime="20201115 23:03:22.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.221" endtime="20201115 23:03:22.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.219" endtime="20201115 23:03:22.789"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.816" endtime="20201115 23:03:22.838"></status>
</kw>
<msg timestamp="20201115 23:03:22.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.813" endtime="20201115 23:03:22.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.841" endtime="20201115 23:03:22.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.848" endtime="20201115 23:03:22.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.806" endtime="20201115 23:03:22.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.800" endtime="20201115 23:03:22.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.872" endtime="20201115 23:03:23.221"></status>
</kw>
<msg timestamp="20201115 23:03:23.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047047875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047123944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.868" endtime="20201115 23:03:23.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047047875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047123944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.230" endtime="20201115 23:03:23.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.249" endtime="20201115 23:03:23.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.861" endtime="20201115 23:03:23.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.857" endtime="20201115 23:03:23.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.266" level="INFO">${RESULT} = [{'time': 0.047123944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.606899999999805e-05, 'source_diff': 7.606899999999805e-05}, {'time': 0.047210944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:23.257" endtime="20201115 23:03:23.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.299" level="INFO">${ACCURACY} = {'time': [0.047123944, 0.047210944, 0.047289944, 0.047370014, 0.047450958, 0.047542042, 0.047619972, 0.0477, 0.04778, 0.04787, 0.047950014, 0.048034056, 0.048116028, 0.048202069, 0.048286056, 0.048376...</msg>
<status status="PASS" starttime="20201115 23:03:23.268" endtime="20201115 23:03:23.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.310" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.308" endtime="20201115 23:03:23.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.315" level="INFO">VALUE: [7.606899999999805e-05, 7.554099999999841e-05, 7.530499999999773e-05, 7.532000000000372e-05, 7.601399999999925e-05, 7.591700000000173e-05, 7.554100000000535e-05, 7.52639999999985e-05, 7.540300000000166e-05, 7.587500000000302e-05, 7.566700000000148e-05, 7.574999999999943e-05, 7.537499999999558e-05, 7.54440000000009e-05, 7.551399999999875e-05, 7.591600000000226e-05, 7.601399999999925e-05, 7.611099999999676e-05, 7.530499999999773e-05, 7.545800000000047e-05, 7.5763999999999e-05, 7.574999999999943e-05, 7.529200000000458e-05, 7.565200000000244e-05, 7.536099999999601e-05, 7.53890000000021e-05, 7.580600000000465e-05, 7.570800000000072e-05, 7.57769999999991e-05, 7.533299999999687e-05, 7.558299999999712e-05, 7.567999999999464e-05, 7.572200000000029e-05, 7.608299999999762e-05, 7.615299999999547e-05, 7.530599999999721e-05, 7.541700000000123e-05, 7.524999999999893e-05, 7.566700000000148e-05, 7.522299999999926e-05, 7.595900000000044e-05, 7.613800000000337e-05, 7.579199999999814e-05, 7.588800000000312e-05, 7.522200000000673e-05, 7.599999999999968e-05, 7.572200000000029e-05, 7.608300000000456e-05, 7.598600000000011e-05, 7.516700000000098e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.312" endtime="20201115 23:03:23.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.301" endtime="20201115 23:03:23.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.324" endtime="20201115 23:03:23.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.333" endtime="20201115 23:03:23.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.328" endtime="20201115 23:03:23.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.320" endtime="20201115 23:03:23.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.796" endtime="20201115 23:03:23.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.792" endtime="20201115 23:03:23.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.790" endtime="20201115 23:03:23.359"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.364" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.387" endtime="20201115 23:03:23.409"></status>
</kw>
<msg timestamp="20201115 23:03:23.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.384" endtime="20201115 23:03:23.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.413" endtime="20201115 23:03:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.419" endtime="20201115 23:03:23.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.376" endtime="20201115 23:03:23.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.370" endtime="20201115 23:03:23.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.442" endtime="20201115 23:03:23.789"></status>
</kw>
<msg timestamp="20201115 23:03:23.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048665653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048742639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.439" endtime="20201115 23:03:23.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048665653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048742639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.798" endtime="20201115 23:03:23.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.817" endtime="20201115 23:03:23.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.432" endtime="20201115 23:03:23.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.427" endtime="20201115 23:03:23.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.836" level="INFO">${RESULT} = [{'time': 0.048742639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.698599999999417e-05, 'source_diff': 7.698599999999417e-05}, {'time': 0.048824667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:23.827" endtime="20201115 23:03:23.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.866" level="INFO">${ACCURACY} = {'time': [0.048742639, 0.048824667, 0.048910736, 0.048996681, 0.049086681, 0.049178708, 0.049262694, 0.049345708, 0.049432722, 0.049511722, 0.04959675, 0.049687764, 0.04977675, 0.049856778, 0.04994777...</msg>
<status status="PASS" starttime="20201115 23:03:23.838" endtime="20201115 23:03:23.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.877" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.875" endtime="20201115 23:03:23.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.882" level="INFO">VALUE: [7.698599999999417e-05, 7.707000000000547e-05, 7.690300000000316e-05, 7.668100000000205e-05, 7.651399999999975e-05, 7.686100000000445e-05, 7.675000000000043e-05, 7.63890000000031e-05, 7.684699999999794e-05, 7.62639999999995e-05, 7.652799999999932e-05, 7.647200000000104e-05, 7.624999999999993e-05, 7.715299999999647e-05, 7.624999999999993e-05, 7.687500000000402e-05, 7.690300000000316e-05, 7.636200000000343e-05, 7.654199999999889e-05, 7.640200000000319e-05, 7.65969999999977e-05, 7.634700000000438e-05, 7.692999999999589e-05, 7.629199999999864e-05, 7.712500000000427e-05, 7.62639999999995e-05, 7.67770000000001e-05, 7.69310000000023e-05, 7.634799999999692e-05, 7.629199999999864e-05, 7.681999999999828e-05, 7.640199999999625e-05, 7.626300000000003e-05, 7.622200000000079e-05, 7.667999999999564e-05, 7.637500000000352e-05, 7.630499999999873e-05, 7.62639999999995e-05, 7.71389999999969e-05, 7.701400000000025e-05, 7.670800000000172e-05, 7.708299999999862e-05, 7.66389999999964e-05, 7.700000000000068e-05, 7.697299999999407e-05, 7.623600000000036e-05, 7.680499999999923e-05, 7.675000000000043e-05, 7.624999999999993e-05, 7.705499999999949e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.879" endtime="20201115 23:03:23.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.868" endtime="20201115 23:03:23.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.891" endtime="20201115 23:03:23.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.899" endtime="20201115 23:03:23.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.895" endtime="20201115 23:03:23.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.887" endtime="20201115 23:03:23.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.366" endtime="20201115 23:03:23.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.362" endtime="20201115 23:03:23.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.360" endtime="20201115 23:03:23.927"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.932" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.953" endtime="20201115 23:03:23.976"></status>
</kw>
<msg timestamp="20201115 23:03:23.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.950" endtime="20201115 23:03:23.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.979" endtime="20201115 23:03:23.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.985" endtime="20201115 23:03:23.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.943" endtime="20201115 23:03:23.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.937" endtime="20201115 23:03:23.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.009" endtime="20201115 23:03:24.356"></status>
</kw>
<msg timestamp="20201115 23:03:24.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047677625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047754875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.005" endtime="20201115 23:03:24.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047677625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047754875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.366" endtime="20201115 23:03:24.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.384" endtime="20201115 23:03:24.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.998" endtime="20201115 23:03:24.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.993" endtime="20201115 23:03:24.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.402" level="INFO">${RESULT} = [{'time': 0.047754875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.725000000000093e-05, 'source_diff': 7.725000000000093e-05}, {'time': 0.047834889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:24.393" endtime="20201115 23:03:24.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:24.432" level="INFO">${ACCURACY} = {'time': [0.047754875, 0.047834889, 0.047924903, 0.048012903, 0.048100917, 0.048191917, 0.048280931, 0.048362944, 0.048443944, 0.048535958, 0.048625986, 0.048716986, 0.04881, 0.048893069, 0.048979014,...</msg>
<status status="PASS" starttime="20201115 23:03:24.404" endtime="20201115 23:03:24.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.444" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:03:24.441" endtime="20201115 23:03:24.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.449" level="INFO">VALUE: [7.725000000000093e-05, 7.734699999999844e-05, 7.79589999999955e-05, 7.805599999999996e-05, 7.722300000000126e-05, 7.748600000000161e-05, 7.737499999999758e-05, 7.725000000000093e-05, 7.81110000000057e-05, 7.744399999999596e-05, 7.798600000000211e-05, 7.772199999999535e-05, 7.784699999999894e-05, 7.744399999999596e-05, 7.751400000000075e-05, 7.790299999999722e-05, 7.790299999999722e-05, 7.750000000000118e-05, 7.716700000000298e-05, 7.800000000000168e-05, 7.776300000000153e-05, 7.804100000000092e-05, 7.7764000000001e-05, 7.754100000000042e-05, 7.770799999999578e-05, 7.758299999999912e-05, 7.762500000000477e-05, 7.78890000000046e-05, 7.75560000000064e-05, 7.801299999999484e-05, 7.798600000000211e-05, 7.806999999999953e-05, 7.79169999999968e-05, 7.777699999999416e-05, 7.800000000000168e-05, 7.730499999999974e-05, 7.80969999999992e-05, 7.808299999999962e-05, 7.80969999999992e-05, 7.766699999999654e-05, 7.74310000000028e-05, 7.751400000000075e-05, 7.72640000000005e-05, 7.781999999999928e-05, 7.772200000000229e-05, 7.722300000000126e-05, 7.765299999999697e-05, 7.797300000000201e-05, 7.788799999999818e-05, 7.798599999999517e-05]</msg>
<status status="PASS" starttime="20201115 23:03:24.446" endtime="20201115 23:03:24.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.434" endtime="20201115 23:03:24.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.459" endtime="20201115 23:03:24.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:24.467" endtime="20201115 23:03:24.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.463" endtime="20201115 23:03:24.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.454" endtime="20201115 23:03:24.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.933" endtime="20201115 23:03:24.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.929" endtime="20201115 23:03:24.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.927" endtime="20201115 23:03:24.494"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.499" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.521" endtime="20201115 23:03:24.543"></status>
</kw>
<msg timestamp="20201115 23:03:24.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.518" endtime="20201115 23:03:24.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.547" endtime="20201115 23:03:24.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.553" endtime="20201115 23:03:24.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.511" endtime="20201115 23:03:24.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.505" endtime="20201115 23:03:24.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.576" endtime="20201115 23:03:24.871"></status>
</kw>
<msg timestamp="20201115 23:03:24.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047477653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04755675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:24.573" endtime="20201115 23:03:24.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047477653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04755675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:24.875" endtime="20201115 23:03:24.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.883" endtime="20201115 23:03:24.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.566" endtime="20201115 23:03:24.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.561" endtime="20201115 23:03:24.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.892" level="INFO">${RESULT} = [{'time': 0.04755675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.90970000000002e-05, 'source_diff': 7.90970000000002e-05}, {'time': 0.047639722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:03:24.888" endtime="20201115 23:03:24.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:24.906" level="INFO">${ACCURACY} = {'time': [0.04755675, 0.047639722, 0.047722736, 0.047806736, 0.04789475, 0.047986792, 0.048067764, 0.048151833, 0.048237792, 0.048323792, 0.048407819, 0.048492833, 0.048579833, 0.048661833, 0.04874684...</msg>
<status status="PASS" starttime="20201115 23:03:24.893" endtime="20201115 23:03:24.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.911" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:03:24.910" endtime="20201115 23:03:24.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.914" level="INFO">VALUE: [7.90970000000002e-05, 7.886099999999951e-05, 7.880500000000124e-05, 7.862500000000577e-05, 7.887499999999908e-05, 7.875000000000243e-05, 7.895799999999703e-05, 7.866599999999807e-05, 7.834799999999892e-05, 7.854199999999395e-05, 7.863799999999893e-05, 7.902700000000235e-05, 7.890200000000569e-05, 7.912499999999933e-05, 7.901400000000225e-05, 7.880500000000124e-05, 7.912499999999933e-05, 7.86389999999984e-05, 7.82640000000015e-05, 7.815300000000441e-05, 7.898599999999617e-05, 7.847300000000251e-05, 7.84169999999973e-05, 7.900000000000268e-05, 7.905500000000149e-05, 7.847200000000304e-05, 7.90970000000002e-05, 7.887499999999908e-05, 7.906900000000106e-05, 7.850000000000218e-05, 7.887500000000602e-05, 7.858300000000012e-05, 7.869499999999668e-05, 7.901300000000278e-05, 7.833399999999935e-05, 7.84440000000039e-05, 7.820900000000269e-05, 7.912499999999933e-05, 7.880500000000124e-05, 7.870799999999678e-05, 7.873600000000286e-05, 7.874999999999549e-05, 7.905500000000149e-05, 7.888899999999865e-05, 7.837499999999858e-05, 7.899999999999574e-05, 7.838899999999815e-05, 7.84169999999973e-05, 7.911199999999924e-05, 7.88190000000008e-05]</msg>
<status status="PASS" starttime="20201115 23:03:24.912" endtime="20201115 23:03:24.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.906" endtime="20201115 23:03:24.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.918" endtime="20201115 23:03:24.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:24.922" endtime="20201115 23:03:24.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.920" endtime="20201115 23:03:24.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.916" endtime="20201115 23:03:24.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.501" endtime="20201115 23:03:24.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.497" endtime="20201115 23:03:24.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.495" endtime="20201115 23:03:24.944"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.956" endtime="20201115 23:03:24.974"></status>
</kw>
<msg timestamp="20201115 23:03:24.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.955" endtime="20201115 23:03:24.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.976" endtime="20201115 23:03:24.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.979" endtime="20201115 23:03:24.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.952" endtime="20201115 23:03:24.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.949" endtime="20201115 23:03:24.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.990" endtime="20201115 23:03:25.290"></status>
</kw>
<msg timestamp="20201115 23:03:25.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027302889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02738275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:24.988" endtime="20201115 23:03:25.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027302889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02738275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:25.299" endtime="20201115 23:03:25.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.318" endtime="20201115 23:03:25.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.985" endtime="20201115 23:03:25.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.983" endtime="20201115 23:03:25.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:25.336" level="INFO">${RESULT} = [{'time': 0.02738275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.986100000000051e-05, 'source_diff': 7.986100000000051e-05}, {'time': 0.027469764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:25.327" endtime="20201115 23:03:25.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.369" level="INFO">${ACCURACY} = {'time': [0.02738275, 0.027469764, 0.027555778, 0.027648819, 0.027734792, 0.027817806, 0.027905819, 0.027998819, 0.028080833, 0.028174861, 0.028256847, 0.028343861, 0.028435875, 0.028522875, 0.0286068...</msg>
<status status="PASS" starttime="20201115 23:03:25.338" endtime="20201115 23:03:25.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.380" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.378" endtime="20201115 23:03:25.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.386" level="INFO">VALUE: [7.986100000000051e-05, 7.997200000000107e-05, 7.974999999999996e-05, 7.933300000000088e-05, 7.95840000000006e-05, 7.99169999999988e-05, 7.948599999999667e-05, 7.92770000000026e-05, 7.954099999999895e-05, 7.945799999999753e-05, 7.952800000000232e-05, 7.934700000000044e-05, 7.934700000000044e-05, 7.995799999999803e-05, 8.00970000000012e-05, 7.972200000000082e-05, 7.945900000000047e-05, 7.945900000000047e-05, 7.988899999999965e-05, 8.011200000000024e-05, 7.973600000000039e-05, 7.938900000000262e-05, 7.984699999999748e-05, 7.919400000000118e-05, 7.949999999999971e-05, 7.991700000000226e-05, 7.949999999999971e-05, 7.993100000000183e-05, 8.006999999999806e-05, 7.940299999999872e-05, 8.015299999999947e-05, 7.929200000000164e-05, 7.976300000000006e-05, 7.992999999999889e-05, 7.990299999999922e-05, 8.004099999999945e-05, 7.980499999999877e-05, 7.955499999999852e-05, 8.000000000000021e-05, 8.01389999999999e-05, 8.005600000000196e-05, 7.916700000000151e-05, 7.938899999999915e-05, 7.959800000000017e-05, 7.970900000000072e-05, 7.932000000000078e-05, 8.011100000000076e-05, 8.018099999999861e-05, 7.934700000000044e-05, 7.988899999999965e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.383" endtime="20201115 23:03:25.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.371" endtime="20201115 23:03:25.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.394" endtime="20201115 23:03:25.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.403" endtime="20201115 23:03:25.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.398" endtime="20201115 23:03:25.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.390" endtime="20201115 23:03:25.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.947" endtime="20201115 23:03:25.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.945" endtime="20201115 23:03:25.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.944" endtime="20201115 23:03:25.429"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.457" endtime="20201115 23:03:25.479"></status>
</kw>
<msg timestamp="20201115 23:03:25.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.453" endtime="20201115 23:03:25.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.482" endtime="20201115 23:03:25.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.488" endtime="20201115 23:03:25.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.446" endtime="20201115 23:03:25.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.440" endtime="20201115 23:03:25.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.512" endtime="20201115 23:03:25.858"></status>
</kw>
<msg timestamp="20201115 23:03:25.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047776, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047856958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:25.508" endtime="20201115 23:03:25.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047776, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047856958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:25.868" endtime="20201115 23:03:25.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.887" endtime="20201115 23:03:25.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.501" endtime="20201115 23:03:25.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.496" endtime="20201115 23:03:25.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:25.906" level="INFO">${RESULT} = [{'time': 0.047856958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.095799999999903e-05, 'source_diff': 8.095799999999903e-05}, {'time': 0.047945944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:25.897" endtime="20201115 23:03:25.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.936" level="INFO">${ACCURACY} = {'time': [0.047856958, 0.047945944, 0.048028958, 0.048113972, 0.048198972, 0.048293986, 0.048378, 0.048473014, 0.048557014, 0.048647042, 0.048731042, 0.048826042, 0.048922056, 0.049011069, 0.049101097...</msg>
<status status="PASS" starttime="20201115 23:03:25.908" endtime="20201115 23:03:25.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.947" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.945" endtime="20201115 23:03:25.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.953" level="INFO">VALUE: [8.095799999999903e-05, 8.11249999999944e-05, 8.076399999999706e-05, 8.066600000000007e-05, 8.108300000000263e-05, 8.024999999999699e-05, 8.11249999999944e-05, 8.025000000000393e-05, 8.030600000000221e-05, 8.111100000000177e-05, 8.030600000000221e-05, 8.087500000000108e-05, 8.083400000000185e-05, 8.066600000000007e-05, 8.084700000000195e-05, 8.108300000000263e-05, 8.10970000000022e-05, 8.099999999999774e-05, 8.055600000000246e-05, 8.023599999999742e-05, 8.023599999999742e-05, 8.057000000000203e-05, 8.016700000000598e-05, 8.072199999999835e-05, 8.097299999999807e-05, 8.04719999999981e-05, 8.038900000000015e-05, 8.087500000000108e-05, 8.04719999999981e-05, 8.034700000000145e-05, 8.036100000000101e-05, 8.024999999999699e-05, 8.077799999999663e-05, 8.055599999999552e-05, 8.06390000000004e-05, 8.080600000000271e-05, 8.111100000000177e-05, 8.073599999999792e-05, 8.04169999999993e-05, 8.104099999999698e-05, 8.088900000000065e-05, 8.087500000000108e-05, 8.122299999999832e-05, 8.088900000000065e-05, 8.102799999999688e-05, 8.06390000000004e-05, 8.116600000000057e-05, 8.099999999999774e-05, 8.06390000000004e-05, 8.029200000000264e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.949" endtime="20201115 23:03:25.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.938" endtime="20201115 23:03:25.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.961" endtime="20201115 23:03:25.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.970" endtime="20201115 23:03:25.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.965" endtime="20201115 23:03:25.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.957" endtime="20201115 23:03:25.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.436" endtime="20201115 23:03:25.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.432" endtime="20201115 23:03:25.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.430" endtime="20201115 23:03:25.996"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.024" endtime="20201115 23:03:26.045"></status>
</kw>
<msg timestamp="20201115 23:03:26.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.020" endtime="20201115 23:03:26.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.049" endtime="20201115 23:03:26.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.055" endtime="20201115 23:03:26.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.013" endtime="20201115 23:03:26.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.007" endtime="20201115 23:03:26.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.079" endtime="20201115 23:03:26.427"></status>
</kw>
<msg timestamp="20201115 23:03:26.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047337847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047419722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.075" endtime="20201115 23:03:26.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047337847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047419722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.436" endtime="20201115 23:03:26.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.455" endtime="20201115 23:03:26.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.068" endtime="20201115 23:03:26.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.063" endtime="20201115 23:03:26.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:26.472" level="INFO">${RESULT} = [{'time': 0.047419722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.187499999999515e-05, 'source_diff': 8.187499999999515e-05}, {'time': 0.04751575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:26.463" endtime="20201115 23:03:26.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:26.503" level="INFO">${ACCURACY} = {'time': [0.047419722, 0.04751575, 0.04761175, 0.047696819, 0.047788778, 0.047881778, 0.047971875, 0.048060833, 0.048150806, 0.048238833, 0.048331833, 0.048422833, 0.048515903, 0.048601861, 0.04868686...</msg>
<status status="PASS" starttime="20201115 23:03:26.475" endtime="20201115 23:03:26.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.514" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:03:26.512" endtime="20201115 23:03:26.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.520" level="INFO">VALUE: [8.187499999999515e-05, 8.148600000000561e-05, 8.183300000000338e-05, 8.198599999999917e-05, 8.1846999999996e-05, 8.15840000000026e-05, 8.159699999999576e-05, 8.156899999999662e-05, 8.130599999999627e-05, 8.18190000000038e-05, 8.155499999999705e-05, 8.18049999999973e-05, 8.186100000000252e-05, 8.20970000000032e-05, 8.187499999999515e-05, 8.180600000000371e-05, 8.173599999999892e-05, 8.215300000000147e-05, 8.127800000000407e-05, 8.17369999999984e-05, 8.212500000000234e-05, 8.157000000000303e-05, 8.195800000000003e-05, 8.133300000000288e-05, 8.123599999999842e-05, 8.199999999999874e-05, 8.154200000000389e-05, 8.134700000000245e-05, 8.150000000000518e-05, 8.215300000000147e-05, 8.154199999999695e-05, 8.198599999999917e-05, 8.155500000000399e-05, 8.147300000000551e-05, 8.14719999999991e-05, 8.19719999999996e-05, 8.195800000000003e-05, 8.123599999999842e-05, 8.133299999999594e-05, 8.198599999999917e-05, 8.151399999999781e-05, 8.206999999999659e-05, 8.147200000000604e-05, 8.20970000000032e-05, 8.166700000000054e-05, 8.172199999999935e-05, 8.199999999999874e-05, 8.193100000000036e-05, 8.126299999999809e-05, 8.177800000000457e-05]</msg>
<status status="PASS" starttime="20201115 23:03:26.517" endtime="20201115 23:03:26.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.505" endtime="20201115 23:03:26.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.529" endtime="20201115 23:03:26.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:26.537" endtime="20201115 23:03:26.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.533" endtime="20201115 23:03:26.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.524" endtime="20201115 23:03:26.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.003" endtime="20201115 23:03:26.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.999" endtime="20201115 23:03:26.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.997" endtime="20201115 23:03:26.564"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.569" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.591" endtime="20201115 23:03:26.613"></status>
</kw>
<msg timestamp="20201115 23:03:26.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.587" endtime="20201115 23:03:26.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.616" endtime="20201115 23:03:26.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.623" endtime="20201115 23:03:26.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.580" endtime="20201115 23:03:26.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.574" endtime="20201115 23:03:26.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.647" endtime="20201115 23:03:26.994"></status>
</kw>
<msg timestamp="20201115 23:03:27.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047021181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047104181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.643" endtime="20201115 23:03:27.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047021181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047104181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.004" endtime="20201115 23:03:27.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.023" endtime="20201115 23:03:27.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.636" endtime="20201115 23:03:27.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.631" endtime="20201115 23:03:27.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:27.042" level="INFO">${RESULT} = [{'time': 0.047104181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.299999999999974e-05, 'source_diff': 8.299999999999974e-05}, {'time': 0.047197264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:27.033" endtime="20201115 23:03:27.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.071" level="INFO">${ACCURACY} = {'time': [0.047104181, 0.047197264, 0.047295208, 0.047380208, 0.047473292, 0.047562236, 0.04765125, 0.047746264, 0.047837264, 0.047932292, 0.048017278, 0.048113306, 0.048207306, 0.048298319, 0.0483923...</msg>
<status status="PASS" starttime="20201115 23:03:27.044" endtime="20201115 23:03:27.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.083" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.080" endtime="20201115 23:03:27.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.088" level="INFO">VALUE: [8.299999999999974e-05, 8.229200000000464e-05, 8.305499999999855e-05, 8.295800000000103e-05, 8.288900000000265e-05, 8.301399999999931e-05, 8.218100000000061e-05, 8.249999999999924e-05, 8.293099999999443e-05, 8.236100000000302e-05, 8.233399999999641e-05, 8.311200000000324e-05, 8.27919999999982e-05, 8.272200000000035e-05, 8.237500000000259e-05, 8.236100000000302e-05, 8.238900000000215e-05, 8.227800000000507e-05, 8.263899999999547e-05, 8.25970000000037e-05, 8.2846999999997e-05, 8.230599999999727e-05, 8.283399999999691e-05, 8.282000000000428e-05, 8.299999999999974e-05, 8.238899999999522e-05, 8.245800000000053e-05, 8.304200000000539e-05, 8.248599999999967e-05, 8.293000000000189e-05, 8.259699999999676e-05, 8.29720000000006e-05, 8.216700000000104e-05, 8.256999999999709e-05, 8.306999999999759e-05, 8.304199999999845e-05, 8.22919999999977e-05, 8.277699999999916e-05, 8.305500000000549e-05, 8.283299999999744e-05, 8.229099999999823e-05, 8.238899999999522e-05, 8.294500000000093e-05, 8.259699999999676e-05, 8.233299999999694e-05, 8.31249999999964e-05, 8.22640000000055e-05, 8.268100000000111e-05, 8.290300000000222e-05, 8.225000000000593e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.085" endtime="20201115 23:03:27.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.073" endtime="20201115 23:03:27.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.097" endtime="20201115 23:03:27.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.105" endtime="20201115 23:03:27.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.101" endtime="20201115 23:03:27.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.092" endtime="20201115 23:03:27.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.570" endtime="20201115 23:03:27.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.566" endtime="20201115 23:03:27.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.565" endtime="20201115 23:03:27.131"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.159" endtime="20201115 23:03:27.181"></status>
</kw>
<msg timestamp="20201115 23:03:27.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.156" endtime="20201115 23:03:27.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.184" endtime="20201115 23:03:27.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.190" endtime="20201115 23:03:27.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.148" endtime="20201115 23:03:27.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.142" endtime="20201115 23:03:27.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.214" endtime="20201115 23:03:27.563"></status>
</kw>
<msg timestamp="20201115 23:03:27.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047762292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.210" endtime="20201115 23:03:27.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047762292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.573" endtime="20201115 23:03:27.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.592" endtime="20201115 23:03:27.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.203" endtime="20201115 23:03:27.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.198" endtime="20201115 23:03:27.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:27.609" level="INFO">${RESULT} = [{'time': 0.047762292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.369499999999475e-05, 'source_diff': 8.369499999999475e-05}, {'time': 0.047857306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:27.600" endtime="20201115 23:03:27.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.642" level="INFO">${ACCURACY} = {'time': [0.047762292, 0.047857306, 0.047954306, 0.048045319, 0.048138333, 0.048227361, 0.048324347, 0.048418375, 0.048507389, 0.048606389, 0.048694403, 0.048787458, 0.048886431, 0.048977417, 0.049069...</msg>
<status status="PASS" starttime="20201115 23:03:27.611" endtime="20201115 23:03:27.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.653" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.651" endtime="20201115 23:03:27.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.658" level="INFO">VALUE: [8.369499999999475e-05, 8.318100000000161e-05, 8.411200000000424e-05, 8.354100000000642e-05, 8.388899999999672e-05, 8.386100000000452e-05, 8.390299999999629e-05, 8.400000000000074e-05, 8.358299999999819e-05, 8.381999999999834e-05, 8.388899999999672e-05, 8.394399999999552e-05, 8.406999999999859e-05, 8.375000000000049e-05, 8.413899999999697e-05, 8.355500000000599e-05, 8.404099999999998e-05, 8.377799999999963e-05, 8.338899999999622e-05, 8.388900000000366e-05, 8.372200000000135e-05, 8.409699999999826e-05, 8.366700000000254e-05, 8.348599999999373e-05, 8.324999999999999e-05, 8.383299999999844e-05, 8.375000000000049e-05, 8.377700000000016e-05, 8.391600000000332e-05, 8.393000000000289e-05, 8.365199999999656e-05, 8.404099999999998e-05, 8.36669999999956e-05, 8.326399999999956e-05, 8.390300000000323e-05, 8.361100000000427e-05, 8.405599999999902e-05, 8.400000000000074e-05, 8.366700000000254e-05, 8.379099999999973e-05, 8.394400000000246e-05, 8.41390000000039e-05, 8.322200000000085e-05, 8.333299999999794e-05, 8.322200000000085e-05, 8.383299999999844e-05, 8.408299999999869e-05, 8.36390000000034e-05, 8.326399999999956e-05, 8.354200000000589e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.655" endtime="20201115 23:03:27.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.644" endtime="20201115 23:03:27.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.667" endtime="20201115 23:03:27.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.675" endtime="20201115 23:03:27.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.671" endtime="20201115 23:03:27.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.662" endtime="20201115 23:03:27.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.138" endtime="20201115 23:03:27.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.134" endtime="20201115 23:03:27.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.132" endtime="20201115 23:03:27.707"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.734" endtime="20201115 23:03:27.756"></status>
</kw>
<msg timestamp="20201115 23:03:27.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.730" endtime="20201115 23:03:27.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.759" endtime="20201115 23:03:27.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.766" endtime="20201115 23:03:27.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.723" endtime="20201115 23:03:27.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.717" endtime="20201115 23:03:27.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.789" endtime="20201115 23:03:28.136"></status>
</kw>
<msg timestamp="20201115 23:03:28.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052055736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052140764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.786" endtime="20201115 23:03:28.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052055736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052140764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.145" endtime="20201115 23:03:28.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.164" endtime="20201115 23:03:28.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.779" endtime="20201115 23:03:28.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.774" endtime="20201115 23:03:28.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.183" level="INFO">${RESULT} = [{'time': 0.052140764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.502800000000088e-05, 'source_diff': 8.502800000000088e-05}, {'time': 0.052239764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:28.174" endtime="20201115 23:03:28.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.213" level="INFO">${ACCURACY} = {'time': [0.052140764, 0.052239764, 0.052334778, 0.052428778, 0.052515792, 0.052609792, 0.052699806, 0.052787819, 0.052885847, 0.052976833, 0.053066889, 0.053161861, 0.053249861, 0.053339889, 0.053430...</msg>
<status status="PASS" starttime="20201115 23:03:28.185" endtime="20201115 23:03:28.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.224" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.222" endtime="20201115 23:03:28.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.230" level="INFO">VALUE: [8.502800000000088e-05, 8.509699999999926e-05, 8.422200000000185e-05, 8.46390000000044e-05, 8.497300000000207e-05, 8.486100000000552e-05, 8.461200000000474e-05, 8.427700000000066e-05, 8.43049999999998e-05, 8.436099999999808e-05, 8.46249999999979e-05, 8.46249999999979e-05, 8.509699999999926e-05, 8.422200000000185e-05, 8.418100000000261e-05, 8.450000000000124e-05, 8.447300000000157e-05, 8.512500000000534e-05, 8.468000000000364e-05, 8.509699999999926e-05, 8.427699999999372e-05, 8.486099999999858e-05, 8.476400000000106e-05, 8.502800000000088e-05, 8.450000000000124e-05, 8.465299999999704e-05, 8.418099999999568e-05, 8.46249999999979e-05, 8.425000000000099e-05, 8.487499999999815e-05, 8.495799999999609e-05, 8.437499999999765e-05, 8.470799999999584e-05, 8.429100000000023e-05, 8.483399999999891e-05, 8.451400000000081e-05, 8.4846999999999e-05, 8.51390000000049e-05, 8.44170000000033e-05, 8.418100000000261e-05, 8.454199999999995e-05, 8.476400000000106e-05, 8.505600000000002e-05, 8.476299999999465e-05, 8.476299999999465e-05, 8.508299999999969e-05, 8.466599999999713e-05, 8.448599999999473e-05, 8.497199999999566e-05, 8.505600000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:03:28.226" endtime="20201115 23:03:28.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.215" endtime="20201115 23:03:28.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.239" endtime="20201115 23:03:28.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:28.247" endtime="20201115 23:03:28.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.243" endtime="20201115 23:03:28.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.235" endtime="20201115 23:03:28.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.713" endtime="20201115 23:03:28.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.709" endtime="20201115 23:03:28.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.707" endtime="20201115 23:03:28.274"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.279" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.301" endtime="20201115 23:03:28.323"></status>
</kw>
<msg timestamp="20201115 23:03:28.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.297" endtime="20201115 23:03:28.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.327" endtime="20201115 23:03:28.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.333" endtime="20201115 23:03:28.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.290" endtime="20201115 23:03:28.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.285" endtime="20201115 23:03:28.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.356" endtime="20201115 23:03:28.682"></status>
</kw>
<msg timestamp="20201115 23:03:28.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046984611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047070167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.353" endtime="20201115 23:03:28.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046984611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047070167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.692" endtime="20201115 23:03:28.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.710" endtime="20201115 23:03:28.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.346" endtime="20201115 23:03:28.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.341" endtime="20201115 23:03:28.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.728" level="INFO">${RESULT} = [{'time': 0.047070167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555600000000052e-05, 'source_diff': 8.555600000000052e-05}, {'time': 0.047171181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:28.719" endtime="20201115 23:03:28.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.758" level="INFO">${ACCURACY} = {'time': [0.047070167, 0.047171181, 0.047263222, 0.047359208, 0.047457208, 0.047558236, 0.04765625, 0.047752264, 0.04784225, 0.047931264, 0.048027278, 0.048118333, 0.048209292, 0.048308306, 0.04840831...</msg>
<status status="PASS" starttime="20201115 23:03:28.730" endtime="20201115 23:03:28.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.769" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.767" endtime="20201115 23:03:28.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.775" level="INFO">VALUE: [8.555600000000052e-05, 8.583399999999991e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.531900000000037e-05, 8.5847e-05, 8.598599999999623e-05, 8.586099999999958e-05, 8.525000000000199e-05, 8.586099999999958e-05, 8.522200000000285e-05, 8.547199999999616e-05, 8.602800000000188e-05, 8.572300000000282e-05, 8.5847e-05, 8.555500000000105e-05, 8.593000000000489e-05, 8.581900000000087e-05, 8.540300000000473e-05, 8.558300000000019e-05, 8.588899999999872e-05, 8.543099999999693e-05, 8.576400000000206e-05, 8.558399999999966e-05, 8.61249999999994e-05, 8.523600000000242e-05, 8.56799999999977e-05, 8.554100000000148e-05, 8.550000000000224e-05, 8.5847e-05, 8.531900000000037e-05, 8.537499999999865e-05, 8.620799999999734e-05, 8.615299999999854e-05, 8.579099999999479e-05, 8.61249999999994e-05, 8.534799999999898e-05, 8.609799999999973e-05, 8.5847e-05, 8.515199999999806e-05, 8.572200000000335e-05, 8.595800000000403e-05, 8.52920000000007e-05, 8.552799999999444e-05, 8.515300000000448e-05, 8.536099999999908e-05, 8.575000000000249e-05, 8.537500000000559e-05, 8.605500000000155e-05, 8.594399999999752e-05]</msg>
<status status="PASS" starttime="20201115 23:03:28.771" endtime="20201115 23:03:28.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.760" endtime="20201115 23:03:28.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.784" endtime="20201115 23:03:28.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:28.792" endtime="20201115 23:03:28.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.788" endtime="20201115 23:03:28.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.779" endtime="20201115 23:03:28.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.281" endtime="20201115 23:03:28.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.276" endtime="20201115 23:03:28.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.275" endtime="20201115 23:03:28.819"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.824" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.846" endtime="20201115 23:03:28.868"></status>
</kw>
<msg timestamp="20201115 23:03:28.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.843" endtime="20201115 23:03:28.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.872" endtime="20201115 23:03:28.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.878" endtime="20201115 23:03:28.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.835" endtime="20201115 23:03:28.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.830" endtime="20201115 23:03:28.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.901" endtime="20201115 23:03:29.248"></status>
</kw>
<msg timestamp="20201115 23:03:29.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047358181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047444556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.898" endtime="20201115 23:03:29.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047358181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047444556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.258" endtime="20201115 23:03:29.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.276" endtime="20201115 23:03:29.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.891" endtime="20201115 23:03:29.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.886" endtime="20201115 23:03:29.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:29.295" level="INFO">${RESULT} = [{'time': 0.047444556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.637499999999965e-05, 'source_diff': 8.637499999999965e-05}, {'time': 0.047538569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:29.287" endtime="20201115 23:03:29.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:29.326" level="INFO">${ACCURACY} = {'time': [0.047444556, 0.047538569, 0.047632556, 0.047730583, 0.047829597, 0.047931597, 0.048025597, 0.048123625, 0.048220625, 0.048319639, 0.048415653, 0.048507653, 0.048601667, 0.04870375, 0.0487996...</msg>
<status status="PASS" starttime="20201115 23:03:29.298" endtime="20201115 23:03:29.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.337" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:03:29.335" endtime="20201115 23:03:29.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.343" level="INFO">VALUE: [8.637499999999965e-05, 8.69720000000046e-05, 8.673699999999646e-05, 8.61799999999982e-05, 8.655500000000205e-05, 8.6847000000001e-05, 8.675000000000349e-05, 8.616700000000505e-05, 8.622200000000385e-05, 8.63470000000005e-05, 8.64720000000041e-05, 8.683400000000091e-05, 8.697300000000407e-05, 8.71250000000004e-05, 8.686200000000005e-05, 8.651400000000281e-05, 8.659700000000076e-05, 8.713899999999997e-05, 8.690299999999929e-05, 8.707000000000159e-05, 8.668099999999818e-05, 8.626400000000256e-05, 8.713899999999997e-05, 8.688899999999972e-05, 8.680599999999483e-05, 8.622199999999691e-05, 8.71250000000004e-05, 8.642999999999845e-05, 8.641699999999836e-05, 8.661100000000033e-05, 8.666599999999913e-05, 8.63050000000018e-05, 8.655600000000152e-05, 8.683300000000144e-05, 8.626400000000256e-05, 8.625000000000299e-05, 8.668099999999818e-05, 8.654200000000195e-05, 8.705600000000202e-05, 8.64999999999963e-05, 8.670799999999784e-05, 8.691600000000632e-05, 8.622200000000385e-05, 8.681900000000187e-05, 8.654199999999501e-05, 8.636100000000008e-05, 8.633300000000094e-05, 8.630599999999433e-05, 8.676400000000306e-05, 8.705499999999561e-05]</msg>
<status status="PASS" starttime="20201115 23:03:29.339" endtime="20201115 23:03:29.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.328" endtime="20201115 23:03:29.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.351" endtime="20201115 23:03:29.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.360" endtime="20201115 23:03:29.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.355" endtime="20201115 23:03:29.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.347" endtime="20201115 23:03:29.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.826" endtime="20201115 23:03:29.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.822" endtime="20201115 23:03:29.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.820" endtime="20201115 23:03:29.386"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.392" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.413" endtime="20201115 23:03:29.435"></status>
</kw>
<msg timestamp="20201115 23:03:29.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.410" endtime="20201115 23:03:29.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.439" endtime="20201115 23:03:29.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.445" endtime="20201115 23:03:29.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.403" endtime="20201115 23:03:29.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.397" endtime="20201115 23:03:29.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.468" endtime="20201115 23:03:29.818"></status>
</kw>
<msg timestamp="20201115 23:03:29.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047038667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047126167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.465" endtime="20201115 23:03:29.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047038667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047126167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.828" endtime="20201115 23:03:29.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.847" endtime="20201115 23:03:29.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.458" endtime="20201115 23:03:29.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.453" endtime="20201115 23:03:29.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:29.865" level="INFO">${RESULT} = [{'time': 0.047126167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.74999999999973e-05, 'source_diff': 8.74999999999973e-05}, {'time': 0.047229181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:29.855" endtime="20201115 23:03:29.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:29.897" level="INFO">${ACCURACY} = {'time': [0.047126167, 0.047229181, 0.047330236, 0.04742825, 0.047526194, 0.047619222, 0.047721222, 0.047819236, 0.04791525, 0.048009264, 0.048107319, 0.048200278, 0.048293292, 0.048391319, 0.04848830...</msg>
<status status="PASS" starttime="20201115 23:03:29.867" endtime="20201115 23:03:29.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.908" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:03:29.906" endtime="20201115 23:03:29.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.914" level="INFO">VALUE: [8.74999999999973e-05, 8.784800000000148e-05, 8.777799999999669e-05, 8.727799999999619e-05, 8.804100000000398e-05, 8.781900000000287e-05, 8.808300000000269e-05, 8.742999999999945e-05, 8.81250000000014e-05, 8.757000000000209e-05, 8.726300000000409e-05, 8.722199999999791e-05, 8.720900000000475e-05, 8.783300000000244e-05, 8.7459000000005e-05, 8.729099999999629e-05, 8.723599999999748e-05, 8.776400000000406e-05, 8.73470000000015e-05, 8.730600000000227e-05, 8.793099999999943e-05, 8.733300000000194e-05, 8.78199999999954e-05, 8.780600000000277e-05, 8.754199999999601e-05, 8.737500000000065e-05, 8.74999999999973e-05, 8.78329999999955e-05, 8.758300000000219e-05, 8.741599999999988e-05, 8.729099999999629e-05, 8.74999999999973e-05, 8.783300000000244e-05, 8.758300000000219e-05, 8.752800000000338e-05, 8.776399999999712e-05, 8.720900000000475e-05, 8.727799999999619e-05, 8.791699999999986e-05, 8.727700000000366e-05, 8.761100000000133e-05, 8.724999999999705e-05, 8.798600000000517e-05, 8.773699999999746e-05, 8.716700000000605e-05, 8.770799999999884e-05, 8.769499999999875e-05, 8.737500000000065e-05, 8.788899999999378e-05, 8.758400000000166e-05]</msg>
<status status="PASS" starttime="20201115 23:03:29.911" endtime="20201115 23:03:29.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.899" endtime="20201115 23:03:29.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.923" endtime="20201115 23:03:29.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.931" endtime="20201115 23:03:29.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.926" endtime="20201115 23:03:29.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.918" endtime="20201115 23:03:29.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.393" endtime="20201115 23:03:29.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.389" endtime="20201115 23:03:29.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.387" endtime="20201115 23:03:29.957"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.984" endtime="20201115 23:03:30.007"></status>
</kw>
<msg timestamp="20201115 23:03:30.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.981" endtime="20201115 23:03:30.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.010" endtime="20201115 23:03:30.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.017" endtime="20201115 23:03:30.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.974" endtime="20201115 23:03:30.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.968" endtime="20201115 23:03:30.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.041" endtime="20201115 23:03:30.388"></status>
</kw>
<msg timestamp="20201115 23:03:30.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046946986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047035778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.037" endtime="20201115 23:03:30.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046946986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047035778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.398" endtime="20201115 23:03:30.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.417" endtime="20201115 23:03:30.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.029" endtime="20201115 23:03:30.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.025" endtime="20201115 23:03:30.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:30.436" level="INFO">${RESULT} = [{'time': 0.047035778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.879199999999726e-05, 'source_diff': 8.879199999999726e-05}, {'time': 0.047133806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:30.427" endtime="20201115 23:03:30.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:30.466" level="INFO">${ACCURACY} = {'time': [0.047035778, 0.047133806, 0.047225875, 0.047326806, 0.047427875, 0.047529847, 0.047632847, 0.047732861, 0.047836861, 0.047928889, 0.048032903, 0.048125903, 0.048223903, 0.048323917, 0.048417...</msg>
<status status="PASS" starttime="20201115 23:03:30.438" endtime="20201115 23:03:30.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.477" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:03:30.474" endtime="20201115 23:03:30.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.482" level="INFO">VALUE: [8.879199999999726e-05, 8.907000000000359e-05, 8.919400000000077e-05, 8.852799999999744e-05, 8.881900000000387e-05, 8.893000000000095e-05, 8.86800000000007e-05, 8.81800000000002e-05, 8.904200000000445e-05, 8.852800000000438e-05, 8.884700000000301e-05, 8.847199999999916e-05, 8.908399999999622e-05, 8.880600000000377e-05, 8.837499999999471e-05, 8.913800000000249e-05, 8.815199999999412e-05, 8.895800000000009e-05, 8.881899999999693e-05, 8.847199999999916e-05, 8.891700000000086e-05, 8.891700000000086e-05, 8.830600000000327e-05, 8.830499999999686e-05, 8.880599999999683e-05, 8.841700000000036e-05, 8.913899999999503e-05, 8.872199999999941e-05, 8.859700000000276e-05, 8.866600000000113e-05, 8.850000000000524e-05, 8.88329999999965e-05, 8.907000000000359e-05, 8.876400000000506e-05, 8.848599999999873e-05, 8.879199999999726e-05, 8.855599999999658e-05, 8.909799999999579e-05, 8.84999999999983e-05, 8.854199999999701e-05, 8.881899999999693e-05, 8.858299999999625e-05, 8.91250000000024e-05, 8.830499999999686e-05, 8.8332999999996e-05, 8.874999999999855e-05, 8.847199999999916e-05, 8.909800000000273e-05, 8.824999999999805e-05, 8.820899999999882e-05]</msg>
<status status="PASS" starttime="20201115 23:03:30.479" endtime="20201115 23:03:30.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.468" endtime="20201115 23:03:30.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.491" endtime="20201115 23:03:30.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:30.499" endtime="20201115 23:03:30.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.495" endtime="20201115 23:03:30.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.486" endtime="20201115 23:03:30.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.964" endtime="20201115 23:03:30.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.960" endtime="20201115 23:03:30.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.958" endtime="20201115 23:03:30.526"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.531" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.553" endtime="20201115 23:03:30.575"></status>
</kw>
<msg timestamp="20201115 23:03:30.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.549" endtime="20201115 23:03:30.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.579" endtime="20201115 23:03:30.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.586" endtime="20201115 23:03:30.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.542" endtime="20201115 23:03:30.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.536" endtime="20201115 23:03:30.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.609" endtime="20201115 23:03:30.957"></status>
</kw>
<msg timestamp="20201115 23:03:30.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047021264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.606" endtime="20201115 23:03:30.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047021264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.967" endtime="20201115 23:03:30.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.986" endtime="20201115 23:03:30.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.599" endtime="20201115 23:03:30.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.594" endtime="20201115 23:03:30.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:31.003" level="INFO">${RESULT} = [{'time': 0.047110917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.965300000000204e-05, 'source_diff': 8.965300000000204e-05}, {'time': 0.047208931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:30.994" endtime="20201115 23:03:31.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:31.033" level="INFO">${ACCURACY} = {'time': [0.047110917, 0.047208931, 0.047300944, 0.047394972, 0.047486958, 0.047580986, 0.047676, 0.047776986, 0.047875014, 0.047970014, 0.048068042, 0.048164028, 0.048269069, 0.048371056, 0.048472069...</msg>
<status status="PASS" starttime="20201115 23:03:31.005" endtime="20201115 23:03:31.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.044" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:03:31.042" endtime="20201115 23:03:31.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.050" level="INFO">VALUE: [8.965300000000204e-05, 8.930600000000427e-05, 8.976299999999965e-05, 8.927799999999819e-05, 8.995800000000109e-05, 8.926399999999862e-05, 8.923600000000642e-05, 8.937500000000265e-05, 8.972200000000041e-05, 8.984699999999707e-05, 8.93199999999969e-05, 8.936099999999614e-05, 9.006899999999818e-05, 8.934800000000298e-05, 8.938800000000274e-05, 8.944399999999408e-05, 8.920800000000034e-05, 8.998600000000023e-05, 8.983300000000444e-05, 8.938900000000222e-05, 8.983300000000444e-05, 8.909700000000326e-05, 9.007000000000459e-05, 8.96529999999951e-05, 9.001399999999937e-05, 8.945900000000007e-05, 9.011100000000383e-05, 9.013900000000297e-05, 8.98329999999975e-05, 8.96659999999952e-05, 8.943000000000145e-05, 9.002800000000588e-05, 8.941700000000136e-05, 8.991699999999492e-05, 8.997300000000014e-05, 8.930599999999733e-05, 8.984799999999654e-05, 8.924999999999905e-05, 8.99999999999998e-05, 8.995800000000109e-05, 8.984699999999707e-05, 8.993000000000195e-05, 9.006899999999818e-05, 8.948599999999973e-05, 9.007000000000459e-05, 8.988900000000272e-05, 8.91670000000011e-05, 9.009800000000373e-05, 8.981899999999793e-05, 8.963800000000299e-05]</msg>
<status status="PASS" starttime="20201115 23:03:31.047" endtime="20201115 23:03:31.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.035" endtime="20201115 23:03:31.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.058" endtime="20201115 23:03:31.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:31.067" endtime="20201115 23:03:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.062" endtime="20201115 23:03:31.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.054" endtime="20201115 23:03:31.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.532" endtime="20201115 23:03:31.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.528" endtime="20201115 23:03:31.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.527" endtime="20201115 23:03:31.093"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.099" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.121" endtime="20201115 23:03:31.144"></status>
</kw>
<msg timestamp="20201115 23:03:31.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.118" endtime="20201115 23:03:31.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.148" endtime="20201115 23:03:31.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.154" endtime="20201115 23:03:31.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.109" endtime="20201115 23:03:31.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.104" endtime="20201115 23:03:31.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.177" endtime="20201115 23:03:31.525"></status>
</kw>
<msg timestamp="20201115 23:03:31.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047653458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047744556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.174" endtime="20201115 23:03:31.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047653458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047744556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.535" endtime="20201115 23:03:31.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.554" endtime="20201115 23:03:31.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.167" endtime="20201115 23:03:31.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.162" endtime="20201115 23:03:31.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:31.573" level="INFO">${RESULT} = [{'time': 0.047744556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.109799999999779e-05, 'source_diff': 9.109799999999779e-05}, {'time': 0.047839556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:31.563" endtime="20201115 23:03:31.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:31.603" level="INFO">${ACCURACY} = {'time': [0.047744556, 0.047839556, 0.047932569, 0.048032583, 0.048127583, 0.048220597, 0.048319611, 0.048414625, 0.048520639, 0.048616653, 0.048715653, 0.048808708, 0.048906667, 0.049005694, 0.049110...</msg>
<status status="PASS" starttime="20201115 23:03:31.575" endtime="20201115 23:03:31.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.614" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:03:31.611" endtime="20201115 23:03:31.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.619" level="INFO">VALUE: [9.109799999999779e-05, 9.108399999999822e-05, 9.034700000000451e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.0332999999998e-05, 9.092999999999601e-05, 9.025000000000005e-05, 9.101400000000037e-05, 9.022200000000091e-05, 9.072199999999447e-05, 9.098600000000123e-05, 9.095900000000157e-05, 9.093000000000295e-05, 9.045800000000159e-05, 9.022200000000091e-05, 9.080599999999883e-05, 9.029099999999929e-05, 9.08329999999985e-05, 9.051399999999987e-05, 9.076399999999318e-05, 9.068100000000218e-05, 9.098600000000123e-05, 9.057000000000509e-05, 9.095800000000209e-05, 9.091599999999644e-05, 9.031899999999843e-05, 9.0332999999998e-05, 9.092999999999601e-05, 9.031899999999843e-05, 9.08329999999985e-05, 9.113899999999703e-05, 9.055599999999858e-05, 9.077799999999969e-05, 9.05000000000003e-05, 9.027800000000613e-05, 9.070900000000132e-05, 9.069400000000227e-05, 9.106899999999918e-05, 9.077799999999969e-05, 9.11250000000044e-05, 9.036099999999714e-05, 9.10000000000008e-05, 9.097199999999472e-05, 9.023600000000048e-05, 9.034699999999757e-05, 9.068100000000218e-05, 9.029199999999876e-05, 9.105499999999961e-05, 9.034699999999757e-05]</msg>
<status status="PASS" starttime="20201115 23:03:31.616" endtime="20201115 23:03:31.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.604" endtime="20201115 23:03:31.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.628" endtime="20201115 23:03:31.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:31.636" endtime="20201115 23:03:31.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.632" endtime="20201115 23:03:31.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.623" endtime="20201115 23:03:31.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.100" endtime="20201115 23:03:31.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.096" endtime="20201115 23:03:31.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.094" endtime="20201115 23:03:31.664"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.669" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.692" endtime="20201115 23:03:31.714"></status>
</kw>
<msg timestamp="20201115 23:03:31.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.688" endtime="20201115 23:03:31.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.717" endtime="20201115 23:03:31.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.724" endtime="20201115 23:03:31.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.681" endtime="20201115 23:03:31.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.675" endtime="20201115 23:03:31.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.747" endtime="20201115 23:03:32.042"></status>
</kw>
<msg timestamp="20201115 23:03:32.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049255486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049347292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.744" endtime="20201115 23:03:32.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049255486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049347292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.046" endtime="20201115 23:03:32.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.054" endtime="20201115 23:03:32.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.736" endtime="20201115 23:03:32.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.732" endtime="20201115 23:03:32.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.063" level="INFO">${RESULT} = [{'time': 0.049347292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180599999999983e-05, 'source_diff': 9.180599999999983e-05}, {'time': 0.049444292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:32.058" endtime="20201115 23:03:32.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.077" level="INFO">${ACCURACY} = {'time': [0.049347292, 0.049444292, 0.049549319, 0.049649319, 0.049743333, 0.049847361, 0.049948347, 0.050047361, 0.050149375, 0.050254389, 0.050360403, 0.050464403, 0.050567431, 0.050666444, 0.050766...</msg>
<status status="PASS" starttime="20201115 23:03:32.063" endtime="20201115 23:03:32.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.083" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.082" endtime="20201115 23:03:32.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.085" level="INFO">VALUE: [9.180599999999983e-05, 9.163899999999753e-05, 9.194400000000352e-05, 9.212499999999846e-05, 9.134699999999857e-05, 9.156899999999968e-05, 9.167999999999676e-05, 9.152800000000044e-05, 9.163900000000447e-05, 9.130599999999933e-05, 9.187499999999821e-05, 9.134699999999857e-05, 9.155599999999958e-05, 9.136099999999814e-05, 9.212499999999846e-05, 9.20409999999941e-05, 9.152800000000044e-05, 9.151400000000087e-05, 9.190299999999735e-05, 9.191699999999692e-05, 9.173600000000198e-05, 9.125000000000105e-05, 9.213899999999803e-05, 9.118099999999574e-05, 9.136100000000508e-05, 9.122300000000139e-05, 9.16800000000037e-05, 9.184699999999907e-05, 9.192999999999701e-05, 9.181899999999993e-05, 9.176400000000112e-05, 9.15000000000013e-05, 9.176400000000112e-05, 9.170800000000284e-05, 9.206999999999965e-05, 9.152800000000044e-05, 9.201399999999443e-05, 9.204100000000104e-05, 9.123599999999454e-05, 9.209700000000626e-05, 9.204100000000104e-05, 9.186099999999864e-05, 9.129199999999976e-05, 9.145800000000259e-05, 9.184699999999907e-05, 9.163900000000447e-05, 9.154200000000001e-05, 9.143099999999599e-05, 9.140299999999685e-05, 9.201299999999496e-05]</msg>
<status status="PASS" starttime="20201115 23:03:32.084" endtime="20201115 23:03:32.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.078" endtime="20201115 23:03:32.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.090" endtime="20201115 23:03:32.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.094" endtime="20201115 23:03:32.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.092" endtime="20201115 23:03:32.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.088" endtime="20201115 23:03:32.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.671" endtime="20201115 23:03:32.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.667" endtime="20201115 23:03:32.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.665" endtime="20201115 23:03:32.115"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.128" endtime="20201115 23:03:32.147"></status>
</kw>
<msg timestamp="20201115 23:03:32.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.126" endtime="20201115 23:03:32.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.149" endtime="20201115 23:03:32.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.152" endtime="20201115 23:03:32.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.123" endtime="20201115 23:03:32.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.120" endtime="20201115 23:03:32.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.163" endtime="20201115 23:03:32.459"></status>
</kw>
<msg timestamp="20201115 23:03:32.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026911972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027004486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.161" endtime="20201115 23:03:32.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026911972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027004486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.468" endtime="20201115 23:03:32.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.487" endtime="20201115 23:03:32.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.158" endtime="20201115 23:03:32.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.155" endtime="20201115 23:03:32.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.506" level="INFO">${RESULT} = [{'time': 0.027004486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.251400000000187e-05, 'source_diff': 9.251400000000187e-05}, {'time': 0.027106472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:32.497" endtime="20201115 23:03:32.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.536" level="INFO">${ACCURACY} = {'time': [0.027004486, 0.027106472, 0.027204486, 0.0273035, 0.027407528, 0.027504528, 0.027602528, 0.027698556, 0.027797569, 0.027893583, 0.027991625, 0.028096583, 0.028199611, 0.028305611, 0.02840862...</msg>
<status status="PASS" starttime="20201115 23:03:32.508" endtime="20201115 23:03:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.547" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.545" endtime="20201115 23:03:32.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.553" level="INFO">VALUE: [9.251400000000187e-05, 9.28330000000005e-05, 9.262499999999896e-05, 9.279200000000126e-05, 9.219499999999978e-05, 9.268100000000071e-05, 9.277800000000169e-05, 9.252799999999797e-05, 9.281900000000093e-05, 9.294400000000105e-05, 9.268100000000071e-05, 9.252700000000197e-05, 9.306899999999771e-05, 9.293000000000148e-05, 9.30139999999989e-05, 9.288900000000225e-05, 9.245800000000012e-05, 9.276400000000212e-05, 9.305600000000108e-05, 9.286100000000311e-05, 9.305500000000161e-05, 9.240199999999837e-05, 9.227700000000172e-05, 9.231900000000043e-05, 9.229200000000076e-05, 9.24719999999997e-05, 9.309699999999685e-05, 9.28330000000005e-05, 9.230600000000033e-05, 9.29590000000001e-05, 9.290299999999835e-05, 9.284700000000007e-05, 9.287499999999921e-05, 9.30139999999989e-05, 9.231900000000043e-05, 9.297199999999672e-05, 9.286099999999964e-05, 9.322200000000044e-05, 9.216700000000064e-05, 9.216700000000064e-05, 9.223599999999901e-05, 9.252800000000144e-05, 9.21940000000003e-05, 9.284700000000007e-05, 9.274999999999561e-05, 9.267999999999776e-05, 9.294399999999758e-05, 9.279200000000126e-05, 9.275000000000255e-05, 9.286099999999964e-05]</msg>
<status status="PASS" starttime="20201115 23:03:32.549" endtime="20201115 23:03:32.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.538" endtime="20201115 23:03:32.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.562" endtime="20201115 23:03:32.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.571" endtime="20201115 23:03:32.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.566" endtime="20201115 23:03:32.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.558" endtime="20201115 23:03:32.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.118" endtime="20201115 23:03:32.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.117" endtime="20201115 23:03:32.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.116" endtime="20201115 23:03:32.597"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.602" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.624" endtime="20201115 23:03:32.647"></status>
</kw>
<msg timestamp="20201115 23:03:32.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.621" endtime="20201115 23:03:32.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.650" endtime="20201115 23:03:32.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.656" endtime="20201115 23:03:32.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.614" endtime="20201115 23:03:32.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.608" endtime="20201115 23:03:32.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.680" endtime="20201115 23:03:33.030"></status>
</kw>
<msg timestamp="20201115 23:03:33.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046955833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047049958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.676" endtime="20201115 23:03:33.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046955833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047049958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.040" endtime="20201115 23:03:33.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.059" endtime="20201115 23:03:33.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.669" endtime="20201115 23:03:33.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.664" endtime="20201115 23:03:33.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:33.076" level="INFO">${RESULT} = [{'time': 0.047049958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.412500000000046e-05, 'source_diff': 9.412500000000046e-05}, {'time': 0.047147944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:33.067" endtime="20201115 23:03:33.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:33.111" level="INFO">${ACCURACY} = {'time': [0.047049958, 0.047147944, 0.047252958, 0.047354958, 0.047462972, 0.047566986, 0.047668986, 0.047777, 0.047882042, 0.047982042, 0.048087042, 0.048194042, 0.048297056, 0.048400069, 0.048497083...</msg>
<status status="PASS" starttime="20201115 23:03:33.083" endtime="20201115 23:03:33.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.122" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:03:33.120" endtime="20201115 23:03:33.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.128" level="INFO">VALUE: [9.412500000000046e-05, 9.326299999999621e-05, 9.355499999999517e-05, 9.393000000000595e-05, 9.388899999999978e-05, 9.341699999999842e-05, 9.35000000000033e-05, 9.384700000000107e-05, 9.340299999999885e-05, 9.319500000000425e-05, 9.379200000000226e-05, 9.411100000000089e-05, 9.388899999999978e-05, 9.347199999999722e-05, 9.372200000000441e-05, 9.340299999999885e-05, 9.337499999999971e-05, 9.401399999999643e-05, 9.373599999999704e-05, 9.354200000000201e-05, 9.380600000000183e-05, 9.366699999999867e-05, 9.338899999999928e-05, 9.408300000000175e-05, 9.340199999999937e-05, 9.381900000000193e-05, 9.367999999999876e-05, 9.355500000000211e-05, 9.357000000000115e-05, 9.388899999999978e-05, 9.351399999999593e-05, 9.395799999999815e-05, 9.343099999999799e-05, 9.409800000000079e-05, 9.351399999999593e-05, 9.355500000000211e-05, 9.41659999999997e-05, 9.390299999999935e-05, 9.369400000000527e-05, 9.356900000000168e-05, 9.36529999999991e-05, 9.333400000000047e-05, 9.347200000000416e-05, 9.33200000000009e-05, 9.404200000000251e-05, 9.329199999999482e-05, 9.415200000000012e-05, 9.363899999999953e-05, 9.336100000000014e-05, 9.411100000000089e-05]</msg>
<status status="PASS" starttime="20201115 23:03:33.124" endtime="20201115 23:03:33.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.113" endtime="20201115 23:03:33.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.136" endtime="20201115 23:03:33.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.145" endtime="20201115 23:03:33.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.140" endtime="20201115 23:03:33.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.132" endtime="20201115 23:03:33.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.604" endtime="20201115 23:03:33.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.600" endtime="20201115 23:03:33.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.598" endtime="20201115 23:03:33.171"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.198" endtime="20201115 23:03:33.222"></status>
</kw>
<msg timestamp="20201115 23:03:33.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.195" endtime="20201115 23:03:33.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.225" endtime="20201115 23:03:33.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.232" endtime="20201115 23:03:33.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.188" endtime="20201115 23:03:33.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.182" endtime="20201115 23:03:33.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.255" endtime="20201115 23:03:33.603"></status>
</kw>
<msg timestamp="20201115 23:03:33.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047329097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047423319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.252" endtime="20201115 23:03:33.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047329097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047423319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.613" endtime="20201115 23:03:33.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.632" endtime="20201115 23:03:33.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.245" endtime="20201115 23:03:33.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.240" endtime="20201115 23:03:33.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:33.651" level="INFO">${RESULT} = [{'time': 0.047423319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.422199999999797e-05, 'source_diff': 9.422199999999797e-05}, {'time': 0.047532347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:33.642" endtime="20201115 23:03:33.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:33.681" level="INFO">${ACCURACY} = {'time': [0.047423319, 0.047532347, 0.047630361, 0.047731361, 0.047834389, 0.047939375, 0.048041389, 0.048150458, 0.048259417, 0.048368431, 0.048471431, 0.048572458, 0.048675528, 0.048778472, 0.048884...</msg>
<status status="PASS" starttime="20201115 23:03:33.653" endtime="20201115 23:03:33.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.692" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:03:33.690" endtime="20201115 23:03:33.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.697" level="INFO">VALUE: [9.422199999999797e-05, 9.427800000000319e-05, 9.473600000000498e-05, 9.438900000000028e-05, 9.494499999999906e-05, 9.422199999999797e-05, 9.497199999999872e-05, 9.452699999999703e-05, 9.468099999999924e-05, 9.48200000000024e-05, 9.470900000000532e-05, 9.438900000000028e-05, 9.477800000000369e-05, 9.470800000000584e-05, 9.480499999999642e-05, 9.437500000000071e-05, 9.493099999999949e-05, 9.468100000000618e-05, 9.466699999999967e-05, 9.433400000000147e-05, 9.440299999999985e-05, 9.501399999999743e-05, 9.470800000000584e-05, 9.426400000000362e-05, 9.431900000000243e-05, 9.47079999999989e-05, 9.511099999999495e-05, 9.508400000000222e-05, 9.419499999999831e-05, 9.440299999999985e-05, 9.504200000000351e-05, 9.418099999999874e-05, 9.419399999999883e-05, 9.45130000000044e-05, 9.493000000000001e-05, 9.472199999999847e-05, 9.511099999999495e-05, 9.423599999999754e-05, 9.447199999999822e-05, 9.43059999999954e-05, 9.459700000000182e-05, 9.426400000000362e-05, 9.49729999999982e-05, 9.484700000000207e-05, 9.513900000000103e-05, 9.495799999999915e-05, 9.511100000000189e-05, 9.436100000000114e-05, 9.501399999999743e-05, 9.504200000000351e-05]</msg>
<status status="PASS" starttime="20201115 23:03:33.694" endtime="20201115 23:03:33.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.683" endtime="20201115 23:03:33.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.706" endtime="20201115 23:03:33.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.715" endtime="20201115 23:03:33.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.710" endtime="20201115 23:03:33.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.702" endtime="20201115 23:03:33.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.178" endtime="20201115 23:03:33.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.174" endtime="20201115 23:03:33.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.172" endtime="20201115 23:03:33.742"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.748" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.770" endtime="20201115 23:03:33.793"></status>
</kw>
<msg timestamp="20201115 23:03:33.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.766" endtime="20201115 23:03:33.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.796" endtime="20201115 23:03:33.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.802" endtime="20201115 23:03:33.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.759" endtime="20201115 23:03:33.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.753" endtime="20201115 23:03:33.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.826" endtime="20201115 23:03:34.173"></status>
</kw>
<msg timestamp="20201115 23:03:34.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04817225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048267944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:33.822" endtime="20201115 23:03:34.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04817225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048267944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:34.183" endtime="20201115 23:03:34.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.202" endtime="20201115 23:03:34.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.815" endtime="20201115 23:03:34.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.811" endtime="20201115 23:03:34.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:34.219" level="INFO">${RESULT} = [{'time': 0.048267944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569400000000033e-05, 'source_diff': 9.569400000000033e-05}, {'time': 0.048378944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:34.210" endtime="20201115 23:03:34.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:34.252" level="INFO">${ACCURACY} = {'time': [0.048267944, 0.048378944, 0.048479958, 0.048586986, 0.048687, 0.048785986, 0.048886014, 0.048990014, 0.049090028, 0.049194042, 0.049300042, 0.049401056, 0.049504083, 0.049607153, 0.049713083...</msg>
<status status="PASS" starttime="20201115 23:03:34.221" endtime="20201115 23:03:34.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.263" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:03:34.260" endtime="20201115 23:03:34.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.268" level="INFO">VALUE: [9.569400000000033e-05, 9.59859999999993e-05, 9.542999999999358e-05, 9.559699999999588e-05, 9.54859999999988e-05, 9.572200000000641e-05, 9.608299999999681e-05, 9.591700000000092e-05, 9.526399999999768e-05, 9.570899999999938e-05, 9.583400000000297e-05, 9.604199999999757e-05, 9.59859999999993e-05, 9.604200000000451e-05, 9.541600000000094e-05, 9.595800000000015e-05, 9.526399999999768e-05, 9.556999999999621e-05, 9.576399999999818e-05, 9.529199999999682e-05, 9.51530000000006e-05, 9.563900000000153e-05, 9.593100000000049e-05, 9.561100000000239e-05, 9.602700000000547e-05, 9.55409999999976e-05, 9.556899999999674e-05, 9.597199999999972e-05, 9.551400000000487e-05, 9.52079999999994e-05, 9.548600000000573e-05, 9.579199999999732e-05, 9.518099999999974e-05, 9.565200000000162e-05, 9.54859999999988e-05, 9.55000000000053e-05, 9.563900000000153e-05, 9.61530000000016e-05, 9.584700000000307e-05, 9.526399999999768e-05, 9.59859999999993e-05, 9.552800000000444e-05, 9.579199999999732e-05, 9.573699999999852e-05, 9.581900000000393e-05, 9.555499999999717e-05, 9.544400000000008e-05, 9.5333000000003e-05, 9.601399999999843e-05, 9.559699999999588e-05]</msg>
<status status="PASS" starttime="20201115 23:03:34.265" endtime="20201115 23:03:34.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.254" endtime="20201115 23:03:34.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.277" endtime="20201115 23:03:34.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:34.285" endtime="20201115 23:03:34.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.281" endtime="20201115 23:03:34.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.272" endtime="20201115 23:03:34.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.749" endtime="20201115 23:03:34.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.745" endtime="20201115 23:03:34.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.743" endtime="20201115 23:03:34.312"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.317" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.338" endtime="20201115 23:03:34.361"></status>
</kw>
<msg timestamp="20201115 23:03:34.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:34.335" endtime="20201115 23:03:34.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:34.364" endtime="20201115 23:03:34.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.371" endtime="20201115 23:03:34.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.328" endtime="20201115 23:03:34.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.322" endtime="20201115 23:03:34.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.394" endtime="20201115 23:03:34.741"></status>
</kw>
<msg timestamp="20201115 23:03:34.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046930542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:34.391" endtime="20201115 23:03:34.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046833736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046930542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:34.750" endtime="20201115 23:03:34.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.769" endtime="20201115 23:03:34.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.384" endtime="20201115 23:03:34.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.379" endtime="20201115 23:03:34.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:34.789" level="INFO">${RESULT} = [{'time': 0.046930542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.68059999999979e-05, 'source_diff': 9.68059999999979e-05}, {'time': 0.047034556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:34.780" endtime="20201115 23:03:34.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:34.819" level="INFO">${ACCURACY} = {'time': [0.046930542, 0.047034556, 0.047138583, 0.047243597, 0.047354597, 0.047464597, 0.047573611, 0.047677653, 0.047782639, 0.047886653, 0.047995653, 0.048105667, 0.048217681, 0.048317694, 0.048418...</msg>
<status status="PASS" starttime="20201115 23:03:34.791" endtime="20201115 23:03:34.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.831" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:03:34.828" endtime="20201115 23:03:34.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.836" level="INFO">VALUE: [9.68059999999979e-05, 9.648699999999927e-05, 9.69860000000003e-05, 9.715299999999566e-05, 9.708299999999781e-05, 9.649999999999936e-05, 9.634700000000357e-05, 9.679199999999832e-05, 9.707000000000465e-05, 9.676399999999918e-05, 9.695900000000063e-05, 9.665299999999516e-05, 9.683399999999703e-05, 9.708300000000475e-05, 9.627799999999825e-05, 9.667999999999483e-05, 9.62080000000004e-05, 9.674999999999961e-05, 9.62080000000004e-05, 9.695899999999369e-05, 9.691700000000192e-05, 9.681999999999746e-05, 9.704199999999857e-05, 9.64729999999997e-05, 9.676299999999971e-05, 9.622199999999997e-05, 9.691600000000244e-05, 9.662500000000296e-05, 9.709699999999738e-05, 9.654199999999807e-05, 9.699999999999986e-05, 9.701399999999943e-05, 9.71530000000026e-05, 9.626400000000562e-05, 9.690200000000287e-05, 9.661100000000339e-05, 9.70409999999991e-05, 9.669400000000133e-05, 9.693000000000201e-05, 9.67080000000009e-05, 9.647200000000022e-05, 9.61530000000016e-05, 9.641700000000142e-05, 9.684800000000354e-05, 9.68609999999967e-05, 9.674999999999961e-05, 9.709699999999738e-05, 9.693000000000201e-05, 9.661099999999645e-05, 9.624999999999911e-05]</msg>
<status status="PASS" starttime="20201115 23:03:34.833" endtime="20201115 23:03:34.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.821" endtime="20201115 23:03:34.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.845" endtime="20201115 23:03:34.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:34.853" endtime="20201115 23:03:34.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.849" endtime="20201115 23:03:34.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.840" endtime="20201115 23:03:34.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.318" endtime="20201115 23:03:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.314" endtime="20201115 23:03:34.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.312" endtime="20201115 23:03:34.880"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.885" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.907" endtime="20201115 23:03:34.929"></status>
</kw>
<msg timestamp="20201115 23:03:34.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:34.904" endtime="20201115 23:03:34.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:34.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:34.933" endtime="20201115 23:03:34.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.939" endtime="20201115 23:03:34.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.896" endtime="20201115 23:03:34.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.890" endtime="20201115 23:03:34.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:34.963" endtime="20201115 23:03:35.311"></status>
</kw>
<msg timestamp="20201115 23:03:35.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047669, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047767097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:34.959" endtime="20201115 23:03:35.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047669, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047767097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:35.321" endtime="20201115 23:03:35.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.339" endtime="20201115 23:03:35.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.952" endtime="20201115 23:03:35.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.947" endtime="20201115 23:03:35.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:35.357" level="INFO">${RESULT} = [{'time': 0.047767097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.809699999999838e-05, 'source_diff': 9.809699999999838e-05}, {'time': 0.047875097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:35.348" endtime="20201115 23:03:35.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:35.387" level="INFO">${ACCURACY} = {'time': [0.047767097, 0.047875097, 0.047981111, 0.048086125, 0.048197139, 0.048306153, 0.048419181, 0.048524181, 0.048627194, 0.048735194, 0.048846208, 0.048947236, 0.049060292, 0.04916825, 0.0492722...</msg>
<status status="PASS" starttime="20201115 23:03:35.359" endtime="20201115 23:03:35.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.398" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:03:35.396" endtime="20201115 23:03:35.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.403" level="INFO">VALUE: [9.809699999999838e-05, 9.783299999999856e-05, 9.812499999999752e-05, 9.797200000000172e-05, 9.73059999999984e-05, 9.71809999999948e-05, 9.800000000000086e-05, 9.776400000000018e-05, 9.72080000000014e-05, 9.78330000000055e-05, 9.751399999999993e-05, 9.794399999999565e-05, 9.811099999999795e-05, 9.762499999999702e-05, 9.737499999999677e-05, 9.788899999999684e-05, 9.738899999999634e-05, 9.733399999999753e-05, 9.772200000000147e-05, 9.806899999999924e-05, 9.805499999999967e-05, 9.747199999999429e-05, 9.809700000000532e-05, 9.822200000000197e-05, 9.720900000000088e-05, 9.747199999999429e-05, 9.779199999999932e-05, 9.755600000000558e-05, 9.773700000000052e-05, 9.745800000000165e-05, 9.769400000000233e-05, 9.737500000000371e-05, 9.727699999999978e-05, 9.761099999999745e-05, 9.784699999999813e-05, 9.727799999999925e-05, 9.795900000000163e-05, 9.723600000000054e-05, 9.743099999999505e-05, 9.822200000000197e-05, 9.71809999999948e-05, 9.772199999999454e-05, 9.730500000000586e-05, 9.792999999999608e-05, 9.72080000000014e-05, 9.750000000000036e-05, 9.806999999999871e-05, 9.722200000000097e-05, 9.791699999999598e-05, 9.800000000000086e-05]</msg>
<status status="PASS" starttime="20201115 23:03:35.400" endtime="20201115 23:03:35.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.389" endtime="20201115 23:03:35.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.412" endtime="20201115 23:03:35.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:35.420" endtime="20201115 23:03:35.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.416" endtime="20201115 23:03:35.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.408" endtime="20201115 23:03:35.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.886" endtime="20201115 23:03:35.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.882" endtime="20201115 23:03:35.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:34.881" endtime="20201115 23:03:35.448"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.475" endtime="20201115 23:03:35.498"></status>
</kw>
<msg timestamp="20201115 23:03:35.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.471" endtime="20201115 23:03:35.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.501" endtime="20201115 23:03:35.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.508" endtime="20201115 23:03:35.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.464" endtime="20201115 23:03:35.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.458" endtime="20201115 23:03:35.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.531" endtime="20201115 23:03:35.837"></status>
</kw>
<msg timestamp="20201115 23:03:35.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04803225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048130861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:35.528" endtime="20201115 23:03:35.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04803225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048130861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:35.841" endtime="20201115 23:03:35.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.855" endtime="20201115 23:03:35.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.521" endtime="20201115 23:03:35.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.516" endtime="20201115 23:03:35.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:35.874" level="INFO">${RESULT} = [{'time': 0.048130861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.861099999999845e-05, 'source_diff': 9.861099999999845e-05}, {'time': 0.048234875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:35.865" endtime="20201115 23:03:35.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:35.904" level="INFO">${ACCURACY} = {'time': [0.048130861, 0.048234875, 0.048341889, 0.048443903, 0.048555917, 0.048658917, 0.048763958, 0.048876944, 0.048989958, 0.049092972, 0.0492, 0.049307, 0.049414, 0.049527028, 0.049628083, 0.0497...</msg>
<status status="PASS" starttime="20201115 23:03:35.876" endtime="20201115 23:03:35.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.915" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:03:35.912" endtime="20201115 23:03:35.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.920" level="INFO">VALUE: [9.861099999999845e-05, 9.88330000000065e-05, 9.893099999999655e-05, 9.829200000000676e-05, 9.8513999999994e-05, 9.823600000000154e-05, 9.834700000000557e-05, 9.866599999999726e-05, 9.845800000000265e-05, 9.847199999999529e-05, 9.85280000000005e-05, 9.913899999999809e-05, 9.83059999999994e-05, 9.890299999999741e-05, 9.901400000000143e-05, 9.83059999999994e-05, 9.854200000000007e-05, 9.884699999999913e-05, 9.89860000000023e-05, 9.81939999999959e-05, 9.863899999999759e-05, 9.887499999999827e-05, 9.837500000000471e-05, 9.900000000000186e-05, 9.866700000000367e-05, 9.877800000000075e-05, 9.822300000000145e-05, 9.89730000000022e-05, 9.881899999999999e-05, 9.844400000000308e-05, 9.876400000000118e-05, 9.887500000000521e-05, 9.823600000000154e-05, 9.834699999999863e-05, 9.894500000000306e-05, 9.894500000000306e-05, 9.887500000000521e-05, 9.838900000000428e-05, 9.884699999999913e-05, 9.906900000000024e-05, 9.844400000000308e-05, 9.870799999999597e-05, 9.888899999999784e-05, 9.847200000000222e-05, 9.838899999999734e-05, 9.893099999999655e-05, 9.847199999999529e-05, 9.901400000000143e-05, 9.872300000000195e-05, 9.834800000000504e-05]</msg>
<status status="PASS" starttime="20201115 23:03:35.917" endtime="20201115 23:03:35.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.906" endtime="20201115 23:03:35.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.929" endtime="20201115 23:03:35.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:35.938" endtime="20201115 23:03:35.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.933" endtime="20201115 23:03:35.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.925" endtime="20201115 23:03:35.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.455" endtime="20201115 23:03:35.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.450" endtime="20201115 23:03:35.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.449" endtime="20201115 23:03:35.964"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:35.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:35.991" endtime="20201115 23:03:36.014"></status>
</kw>
<msg timestamp="20201115 23:03:36.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:35.988" endtime="20201115 23:03:36.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.018" endtime="20201115 23:03:36.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.024" endtime="20201115 23:03:36.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.981" endtime="20201115 23:03:36.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.975" endtime="20201115 23:03:36.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.047" endtime="20201115 23:03:36.397"></status>
</kw>
<msg timestamp="20201115 23:03:36.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047293111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047392375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.044" endtime="20201115 23:03:36.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047293111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047392375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.407" endtime="20201115 23:03:36.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.426" endtime="20201115 23:03:36.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.037" endtime="20201115 23:03:36.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.032" endtime="20201115 23:03:36.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:36.443" level="INFO">${RESULT} = [{'time': 0.047392375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.926400000000168e-05, 'source_diff': 9.926400000000168e-05}, {'time': 0.047500417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:36.434" endtime="20201115 23:03:36.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:36.476" level="INFO">${ACCURACY} = {'time': [0.047392375, 0.047500417, 0.047602403, 0.047717403, 0.047819417, 0.047930458, 0.048039458, 0.048150472, 0.0482645, 0.048377486, 0.048487486, 0.0485965, 0.048705528, 0.048818528, 0.048927556,...</msg>
<status status="PASS" starttime="20201115 23:03:36.445" endtime="20201115 23:03:36.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.487" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:03:36.484" endtime="20201115 23:03:36.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.493" level="INFO">VALUE: [9.926400000000168e-05, 9.970900000000338e-05, 9.934699999999963e-05, 0.00010002799999999507, 9.954200000000107e-05, 9.99860000000033e-05, 0.00010011099999999995, 9.981900000000099e-05, 0.00010011099999999995, 0.00010013899999999909, 0.00010004200000000157, 9.987499999999927e-05, 9.948599999999586e-05, 9.93060000000004e-05, 0.00010011199999999942, 9.950000000000236e-05, 0.00010001299999999602, 9.917999999999733e-05, 9.916599999999776e-05, 9.927800000000125e-05, 9.923600000000254e-05, 0.00010013899999999909, 9.955600000000064e-05, 9.98479999999996e-05, 9.926399999999475e-05, 0.00010001400000000243, 9.994399999999765e-05, 9.972199999999654e-05, 9.972200000000347e-05, 9.995900000000363e-05, 9.967999999999783e-05, 9.95280000000015e-05, 9.981900000000099e-05, 0.00010000000000000286, 9.973699999999558e-05, 9.987499999999927e-05, 0.00010002700000000253, 9.990199999999894e-05, 9.9415999999998e-05, 9.930499999999398e-05, 9.934699999999963e-05, 9.942999999999758e-05, 9.941699999999748e-05, 9.958399999999978e-05, 9.972199999999654e-05, 9.959799999999935e-05, 9.929200000000082e-05, 9.995799999999722e-05, 0.00010005500000000167, 9.976399999999525e-05]</msg>
<status status="PASS" starttime="20201115 23:03:36.489" endtime="20201115 23:03:36.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.478" endtime="20201115 23:03:36.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.502" endtime="20201115 23:03:36.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:36.510" endtime="20201115 23:03:36.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.506" endtime="20201115 23:03:36.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.497" endtime="20201115 23:03:36.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.971" endtime="20201115 23:03:36.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.967" endtime="20201115 23:03:36.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:35.965" endtime="20201115 23:03:36.537"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.564" endtime="20201115 23:03:36.586"></status>
</kw>
<msg timestamp="20201115 23:03:36.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.560" endtime="20201115 23:03:36.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:36.589" endtime="20201115 23:03:36.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.596" endtime="20201115 23:03:36.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.553" endtime="20201115 23:03:36.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.547" endtime="20201115 23:03:36.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.619" endtime="20201115 23:03:36.968"></status>
</kw>
<msg timestamp="20201115 23:03:36.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047010542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.616" endtime="20201115 23:03:36.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:36.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047010542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047110903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:36.977" endtime="20201115 23:03:36.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:36.995" endtime="20201115 23:03:37.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.609" endtime="20201115 23:03:37.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.604" endtime="20201115 23:03:37.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:37.015" level="INFO">${RESULT} = [{'time': 0.047110903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003610000000002, 'source_diff': 0.0001003610000000002}, {'time': 0.047218903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:37.006" endtime="20201115 23:03:37.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:37.045" level="INFO">${ACCURACY} = {'time': [0.047110903, 0.047218903, 0.047327931, 0.047439917, 0.047547958, 0.047663944, 0.047767958, 0.047874028, 0.047978, 0.048082986, 0.048193, 0.048303028, 0.048415042, 0.048529056, 0.048644069, 0...</msg>
<status status="PASS" starttime="20201115 23:03:37.017" endtime="20201115 23:03:37.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.055" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:03:37.053" endtime="20201115 23:03:37.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.061" level="INFO">VALUE: [0.0001003610000000002, 0.00010076399999999625, 0.00010073699999999658, 0.00010016699999999823, 0.0001009860000000043, 0.0001010410000000031, 0.00010072199999999754, 0.00010090299999999941, 0.00010115299999999966, 0.00010087500000000027, 0.0001008610000000007, 0.00010109699999999444, 0.00010016699999999823, 0.00010072300000000395, 0.0001006939999999984, 0.00010051300000000346, 0.00010106900000000224, 0.0001002080000000044, 0.000101028000000003, 0.00010045799999999772, 0.00010034700000000063, 0.00010088899999999984, 0.0001009860000000043, 0.0001003480000000001, 0.00010095899999999769, 0.00010041699999999848, 0.00010113799999999368, 0.00010055500000000217, 0.00010112500000000052, 0.00010097199999999779, 0.00010025000000000311, 0.0001002080000000044, 0.00010030599999999446, 0.00010026400000000268, 0.0001008060000000019, 0.00010056900000000174, 0.00010088899999999984, 0.00010020799999999747, 0.00010056900000000174, 0.00010068000000000576, 0.00010087500000000027, 0.00010033300000000106, 0.0001001809999999978, 0.0001008060000000019, 0.00010112499999999358, 0.00010062500000000002, 0.00010094499999999812, 0.00010074999999999668, 0.000100415999999999, 0.0001001939999999979]</msg>
<status status="PASS" starttime="20201115 23:03:37.058" endtime="20201115 23:03:37.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.046" endtime="20201115 23:03:37.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.070" endtime="20201115 23:03:37.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:37.078" endtime="20201115 23:03:37.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.074" endtime="20201115 23:03:37.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.065" endtime="20201115 23:03:37.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.543" endtime="20201115 23:03:37.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.539" endtime="20201115 23:03:37.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:36.538" endtime="20201115 23:03:37.104"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.110" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.131" endtime="20201115 23:03:37.154"></status>
</kw>
<msg timestamp="20201115 23:03:37.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.128" endtime="20201115 23:03:37.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.157" endtime="20201115 23:03:37.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.164" endtime="20201115 23:03:37.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.121" endtime="20201115 23:03:37.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.115" endtime="20201115 23:03:37.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.187" endtime="20201115 23:03:37.535"></status>
</kw>
<msg timestamp="20201115 23:03:37.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047119333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:37.184" endtime="20201115 23:03:37.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047119333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:37.544" endtime="20201115 23:03:37.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.563" endtime="20201115 23:03:37.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.177" endtime="20201115 23:03:37.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.172" endtime="20201115 23:03:37.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:37.581" level="INFO">${RESULT} = [{'time': 0.047119333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010129099999999641, 'source_diff': 0.00010129099999999641}, {'time': 0.047233347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:37.572" endtime="20201115 23:03:37.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:37.610" level="INFO">${ACCURACY} = {'time': [0.047119333, 0.047233347, 0.047349361, 0.047459375, 0.047563389, 0.047674417, 0.047784458, 0.047893417, 0.048008472, 0.048116458, 0.048221458, 0.0483335, 0.048447486, 0.0485595, 0.0486705, 0...</msg>
<status status="PASS" starttime="20201115 23:03:37.583" endtime="20201115 23:03:37.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.621" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:03:37.619" endtime="20201115 23:03:37.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.626" level="INFO">VALUE: [0.00010129099999999641, 0.00010133300000000206, 0.00010126399999999675, 0.00010130599999999546, 0.00010176399999999725, 0.00010148599999999786, 0.00010167999999999983, 0.00010195899999999869, 0.00010194400000000658, 0.0001011939999999989, 0.00010193000000000008, 0.00010145799999999872, 0.00010195799999999922, 0.00010143099999999905, 0.00010145799999999872, 0.00010207000000000271, 0.00010198599999999836, 0.00010194499999999912, 0.00010198699999999783, 0.00010190200000000094, 0.000101416, 0.00010134700000000163, 0.00010165300000000016, 0.00010179199999999639, 0.00010177800000000375, 0.00010174999999999768, 0.00010166699999999973, 0.0001013060000000024, 0.0001019730000000052, 0.00010211100000000195, 0.00010187500000000127, 0.00010127800000000325, 0.00010206900000000324, 0.00010181900000000299, 0.00010158300000000231, 0.00010130599999999546, 0.00010143099999999905, 0.00010119499999999837, 0.00010143099999999905, 0.00010155499999999623, 0.00010213799999999468, 0.00010154199999999614, 0.00010165300000000016, 0.00010200000000000486, 0.00010166699999999973, 0.0001018610000000017, 0.00010209699999999544, 0.00010122199999999804, 0.00010157000000000221, 0.00010159800000000135]</msg>
<status status="PASS" starttime="20201115 23:03:37.623" endtime="20201115 23:03:37.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.612" endtime="20201115 23:03:37.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.635" endtime="20201115 23:03:37.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:37.643" endtime="20201115 23:03:37.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.639" endtime="20201115 23:03:37.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.631" endtime="20201115 23:03:37.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.111" endtime="20201115 23:03:37.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.107" endtime="20201115 23:03:37.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.105" endtime="20201115 23:03:37.670"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.697" endtime="20201115 23:03:37.720"></status>
</kw>
<msg timestamp="20201115 23:03:37.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.693" endtime="20201115 23:03:37.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:37.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:37.723" endtime="20201115 23:03:37.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.729" endtime="20201115 23:03:37.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.686" endtime="20201115 23:03:37.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.681" endtime="20201115 23:03:37.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:37.753" endtime="20201115 23:03:38.102"></status>
</kw>
<msg timestamp="20201115 23:03:38.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047215917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047318292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:37.749" endtime="20201115 23:03:38.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047215917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047318292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:38.111" endtime="20201115 23:03:38.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.129" endtime="20201115 23:03:38.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.742" endtime="20201115 23:03:38.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.737" endtime="20201115 23:03:38.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:38.148" level="INFO">${RESULT} = [{'time': 0.047318292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010237499999999483, 'source_diff': 0.00010237499999999483}, {'time': 0.047429306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:38.139" endtime="20201115 23:03:38.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:38.178" level="INFO">${ACCURACY} = {'time': [0.047318292, 0.047429306, 0.047534333, 0.047644347, 0.047752361, 0.047866431, 0.047980375, 0.048086375, 0.048198417, 0.048306417, 0.048420431, 0.048530444, 0.048638458, 0.048748458, 0.048859...</msg>
<status status="PASS" starttime="20201115 23:03:38.150" endtime="20201115 23:03:38.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.189" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:03:38.186" endtime="20201115 23:03:38.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.194" level="INFO">VALUE: [0.00010237499999999483, 0.00010312499999999558, 0.00010277699999999834, 0.00010277799999999782, 0.00010284700000000313, 0.00010244499999999962, 0.00010238900000000134, 0.00010291700000000098, 0.00010269499999999987, 0.0001022359999999986, 0.00010299999999999893, 0.00010277699999999834, 0.00010244400000000015, 0.00010276399999999825, 0.00010309700000000338, 0.00010308299999999687, 0.00010254200000000407, 0.00010255600000000364, 0.00010313900000000209, 0.00010262500000000202, 0.00010299999999999893, 0.00010309699999999644, 0.00010270899999999944, 0.00010229099999999741, 0.00010224999999999818, 0.00010252799999999757, 0.00010238900000000134, 0.00010268099999999336, 0.0001021809999999998, 0.0001026810000000003, 0.00010309800000000285, 0.0001028060000000039, 0.00010222299999999851, 0.00010283299999999662, 0.00010259700000000288, 0.00010261099999999551, 0.00010236099999999526, 0.00010234700000000263, 0.00010245799999999972, 0.00010262500000000202, 0.00010229199999999689, 0.00010273699999999858, 0.00010274999999999868, 0.00010265200000000169, 0.00010255500000000417, 0.00010308299999999687, 0.00010234700000000263, 0.0001026940000000004, 0.00010227799999999732, 0.00010263900000000159]</msg>
<status status="PASS" starttime="20201115 23:03:38.191" endtime="20201115 23:03:38.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.179" endtime="20201115 23:03:38.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.203" endtime="20201115 23:03:38.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:38.211" endtime="20201115 23:03:38.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.207" endtime="20201115 23:03:38.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.198" endtime="20201115 23:03:38.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.677" endtime="20201115 23:03:38.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.673" endtime="20201115 23:03:38.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:37.671" endtime="20201115 23:03:38.238"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.243" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.265" endtime="20201115 23:03:38.288"></status>
</kw>
<msg timestamp="20201115 23:03:38.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.262" endtime="20201115 23:03:38.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.291" endtime="20201115 23:03:38.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.303" endtime="20201115 23:03:38.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.254" endtime="20201115 23:03:38.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.248" endtime="20201115 23:03:38.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.326" endtime="20201115 23:03:38.674"></status>
</kw>
<msg timestamp="20201115 23:03:38.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047495222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:38.323" endtime="20201115 23:03:38.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047495222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:38.683" endtime="20201115 23:03:38.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.702" endtime="20201115 23:03:38.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.316" endtime="20201115 23:03:38.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.311" endtime="20201115 23:03:38.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:38.719" level="INFO">${RESULT} = [{'time': 0.047495222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010355499999999823, 'source_diff': 0.00010355499999999823}, {'time': 0.04760225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:38.710" endtime="20201115 23:03:38.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:38.752" level="INFO">${ACCURACY} = {'time': [0.047495222, 0.04760225, 0.047711264, 0.047824278, 0.047939292, 0.048054292, 0.048160292, 0.048276306, 0.048383319, 0.048501347, 0.048613347, 0.048728417, 0.048839389, 0.048950431, 0.0490673...</msg>
<status status="PASS" starttime="20201115 23:03:38.721" endtime="20201115 23:03:38.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.765" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:03:38.762" endtime="20201115 23:03:38.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.770" level="INFO">VALUE: [0.00010355499999999823, 0.00010352799999999857, 0.00010322200000000004, 0.00010348599999999986, 0.00010361100000000345, 0.00010359799999999642, 0.00010393100000000155, 0.00010354199999999814, 0.00010330499999999798, 0.00010327799999999832, 0.00010326399999999875, 0.0001032359999999996, 0.00010377799999999882, 0.00010338900000000234, 0.00010370800000000097, 0.00010343100000000105, 0.00010354199999999814, 0.0001036810000000013, 0.00010363900000000259, 0.00010411099999999701, 0.0001037360000000001, 0.00010358400000000378, 0.00010372200000000054, 0.00010349999999999943, 0.00010331999999999703, 0.00010402799999999907, 0.00010391700000000198, 0.00010376399999999925, 0.00010379099999999891, 0.00010415300000000266, 0.0001033889999999954, 0.00010411100000000395, 0.00010367999999999489, 0.00010377799999999882, 0.0001038610000000037, 0.000103513999999999, 0.00010324999999999918, 0.00010347299999999976, 0.00010368000000000183, 0.00010405499999999873, 0.00010372200000000054, 0.0001038889999999959, 0.00010381899999999805, 0.00010329199999999789, 0.000104028000000006, 0.00010413899999999615, 0.00010355600000000464, 0.00010391700000000198, 0.00010384700000000413, 0.00010366600000000226]</msg>
<status status="PASS" starttime="20201115 23:03:38.767" endtime="20201115 23:03:38.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.754" endtime="20201115 23:03:38.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.779" endtime="20201115 23:03:38.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:38.787" endtime="20201115 23:03:38.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.783" endtime="20201115 23:03:38.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.775" endtime="20201115 23:03:38.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.245" endtime="20201115 23:03:38.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.241" endtime="20201115 23:03:38.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.239" endtime="20201115 23:03:38.814"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.819" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.842" endtime="20201115 23:03:38.866"></status>
</kw>
<msg timestamp="20201115 23:03:38.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.838" endtime="20201115 23:03:38.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:38.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:38.869" endtime="20201115 23:03:38.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.876" endtime="20201115 23:03:38.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.831" endtime="20201115 23:03:38.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.825" endtime="20201115 23:03:38.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:38.901" endtime="20201115 23:03:39.249"></status>
</kw>
<msg timestamp="20201115 23:03:39.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048225153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048329417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:38.897" endtime="20201115 23:03:39.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048225153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048329417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:39.258" endtime="20201115 23:03:39.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.276" endtime="20201115 23:03:39.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.889" endtime="20201115 23:03:39.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.884" endtime="20201115 23:03:39.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:39.295" level="INFO">${RESULT} = [{'time': 0.048329417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010426399999999975, 'source_diff': 0.00010426399999999975}, {'time': 0.048443431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:39.286" endtime="20201115 23:03:39.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:39.324" level="INFO">${ACCURACY} = {'time': [0.048329417, 0.048443431, 0.048552458, 0.048671458, 0.048784472, 0.048893514, 0.049013486, 0.0491245, 0.049240542, 0.049352528, 0.049467542, 0.049574556, 0.049689583, 0.049807639, 0.04992261...</msg>
<status status="PASS" starttime="20201115 23:03:39.297" endtime="20201115 23:03:39.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.335" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:03:39.333" endtime="20201115 23:03:39.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.341" level="INFO">VALUE: [0.00010426399999999975, 0.0001046810000000023, 0.00010468000000000283, 0.00010488900000000384, 0.00010493000000000308, 0.00010470800000000197, 0.00010504199999999964, 0.00010438900000000334, 0.00010420900000000094, 0.0001045559999999987, 0.00010463900000000359, 0.0001045559999999987, 0.0001050689999999993, 0.00010476400000000025, 0.00010463899999999665, 0.0001049160000000035, 0.00010508299999999887, 0.00010445900000000119, 0.00010426399999999975, 0.00010502800000000007, 0.00010459799999999742, 0.00010476400000000025, 0.00010437499999999683, 0.00010430499999999898, 0.00010427799999999932, 0.00010480499999999948, 0.00010484699999999819, 0.00010447199999999435, 0.00010472200000000154, 0.0001050140000000005, 0.00010443100000000205, 0.00010477799999999982, 0.000104514, 0.0001047360000000011, 0.00010486099999999776, 0.00010480499999999948, 0.00010447200000000129, 0.00010463899999999665, 0.0001045559999999987, 0.0001043610000000042, 0.00010425000000000018, 0.00010487499999999733, 0.00010490299999999647, 0.00010495800000000222, 0.00010476399999999331, 0.00010438900000000334, 0.0001048889999999969, 0.00010495800000000222, 0.00010512500000000452, 0.0001050559999999992]</msg>
<status status="PASS" starttime="20201115 23:03:39.338" endtime="20201115 23:03:39.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.326" endtime="20201115 23:03:39.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.349" endtime="20201115 23:03:39.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:39.358" endtime="20201115 23:03:39.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.353" endtime="20201115 23:03:39.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.345" endtime="20201115 23:03:39.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.821" endtime="20201115 23:03:39.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.817" endtime="20201115 23:03:39.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:38.815" endtime="20201115 23:03:39.385"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.390" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.412" endtime="20201115 23:03:39.435"></status>
</kw>
<msg timestamp="20201115 23:03:39.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:39.408" endtime="20201115 23:03:39.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:39.438" endtime="20201115 23:03:39.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.445" endtime="20201115 23:03:39.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.401" endtime="20201115 23:03:39.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.395" endtime="20201115 23:03:39.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.468" endtime="20201115 23:03:39.818"></status>
</kw>
<msg timestamp="20201115 23:03:39.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047087139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047192528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:39.465" endtime="20201115 23:03:39.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047087139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047192528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:39.828" endtime="20201115 23:03:39.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.846" endtime="20201115 23:03:39.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.457" endtime="20201115 23:03:39.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.453" endtime="20201115 23:03:39.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:39.863" level="INFO">${RESULT} = [{'time': 0.047192528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001053889999999974, 'source_diff': 0.0001053889999999974}, {'time': 0.047304542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:39.854" endtime="20201115 23:03:39.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:39.893" level="INFO">${ACCURACY} = {'time': [0.047192528, 0.047304542, 0.047415556, 0.047532569, 0.047643583, 0.047751597, 0.047865611, 0.047977611, 0.048097625, 0.048206653, 0.048317639, 0.048429653, 0.048548736, 0.048663681, 0.048771...</msg>
<status status="PASS" starttime="20201115 23:03:39.865" endtime="20201115 23:03:39.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.904" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:03:39.902" endtime="20201115 23:03:39.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.910" level="INFO">VALUE: [0.0001053889999999974, 0.0001053889999999974, 0.0001060560000000002, 0.00010601299999999508, 0.00010544400000000315, 0.00010555500000000023, 0.00010615300000000466, 0.0001060140000000015, 0.00010568099999999636, 0.0001057360000000021, 0.00010583299999999962, 0.00010537500000000477, 0.00010579200000000039, 0.00010609799999999892, 0.00010534699999999869, 0.00010530499999999998, 0.00010566699999999679, 0.00010547200000000229, 0.00010591699999999704, 0.00010533299999999912, 0.00010604200000000064, 0.0001053339999999986, 0.00010531999999999903, 0.00010608399999999935, 0.00010549999999999449, 0.0001057219999999956, 0.000105514000000001, 0.00010537499999999783, 0.00010533300000000606, 0.00010533299999999912, 0.00010611099999999901, 0.00010597300000000226, 0.00010543100000000305, 0.00010526400000000075, 0.00010604100000000116, 0.00010527800000000032, 0.00010563900000000459, 0.00010558300000000631, 0.00010520800000000247, 0.00010570800000000297, 0.00010522200000000204, 0.00010612499999999858, 0.00010552800000000057, 0.00010552700000000109, 0.000105514000000001, 0.00010555500000000023, 0.0001051940000000029, 0.00010591699999999704, 0.00010531999999999903, 0.00010604200000000064]</msg>
<status status="PASS" starttime="20201115 23:03:39.907" endtime="20201115 23:03:39.911"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.895" endtime="20201115 23:03:39.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.920" endtime="20201115 23:03:39.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:39.929" endtime="20201115 23:03:39.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.924" endtime="20201115 23:03:39.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.915" endtime="20201115 23:03:39.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.392" endtime="20201115 23:03:39.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.388" endtime="20201115 23:03:39.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.386" endtime="20201115 23:03:39.956"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:39.961" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:39.983" endtime="20201115 23:03:40.007"></status>
</kw>
<msg timestamp="20201115 23:03:40.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:39.979" endtime="20201115 23:03:40.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.010" endtime="20201115 23:03:40.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.016" endtime="20201115 23:03:40.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.972" endtime="20201115 23:03:40.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.966" endtime="20201115 23:03:40.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.039" endtime="20201115 23:03:40.387"></status>
</kw>
<msg timestamp="20201115 23:03:40.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047570347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047677139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:40.036" endtime="20201115 23:03:40.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047570347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047677139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:40.396" endtime="20201115 23:03:40.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.415" endtime="20201115 23:03:40.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.029" endtime="20201115 23:03:40.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.024" endtime="20201115 23:03:40.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:40.434" level="INFO">${RESULT} = [{'time': 0.047677139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010679200000000139, 'source_diff': 0.00010679200000000139}, {'time': 0.047787167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:40.425" endtime="20201115 23:03:40.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:40.463" level="INFO">${ACCURACY} = {'time': [0.047677139, 0.047787167, 0.047898167, 0.048016222, 0.048137194, 0.048256236, 0.048376236, 0.048495236, 0.048616236, 0.04873725, 0.048857264, 0.048978292, 0.049099292, 0.049209306, 0.0493303...</msg>
<status status="PASS" starttime="20201115 23:03:40.436" endtime="20201115 23:03:40.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.474" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:03:40.472" endtime="20201115 23:03:40.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.480" level="INFO">VALUE: [0.00010679200000000139, 0.00010652800000000157, 0.0001068889999999989, 0.00010642999999999764, 0.0001062360000000026, 0.00010637499999999883, 0.00010693000000000508, 0.00010633300000000012, 0.0001070690000000013, 0.00010645800000000372, 0.00010691699999999804, 0.0001068889999999989, 0.0001066810000000043, 0.000106514000000002, 0.00010669399999999746, 0.00010681900000000105, 0.00010690299999999847, 0.00010651399999999506, 0.00010668099999999736, 0.00010669500000000387, 0.00010616700000000423, 0.00010693100000000455, 0.00010629100000000141, 0.00010644399999999721, 0.00010669399999999746, 0.00010680500000000148, 0.00010666599999999832, 0.00010654200000000114, 0.00010676399999999531, 0.00010658300000000037, 0.00010645900000000319, 0.00010647200000000329, 0.00010662499999999908, 0.00010670900000000344, 0.00010667999999999789, 0.00010684700000000019, 0.00010655500000000123, 0.0001065560000000007, 0.00010676399999999531, 0.00010658300000000037, 0.00010654200000000114, 0.00010702699999999565, 0.00010668099999999736, 0.0001066810000000043, 0.00010672200000000354, 0.0001067219999999966, 0.00010655500000000123, 0.00010709700000000044, 0.00010637499999999883, 0.00010633300000000012]</msg>
<status status="PASS" starttime="20201115 23:03:40.476" endtime="20201115 23:03:40.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.465" endtime="20201115 23:03:40.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.489" endtime="20201115 23:03:40.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:40.497" endtime="20201115 23:03:40.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.493" endtime="20201115 23:03:40.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.484" endtime="20201115 23:03:40.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.962" endtime="20201115 23:03:40.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.958" endtime="20201115 23:03:40.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:39.957" endtime="20201115 23:03:40.524"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.529" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.551" endtime="20201115 23:03:40.574"></status>
</kw>
<msg timestamp="20201115 23:03:40.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.547" endtime="20201115 23:03:40.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:40.577" endtime="20201115 23:03:40.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.584" endtime="20201115 23:03:40.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.540" endtime="20201115 23:03:40.589"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.535" endtime="20201115 23:03:40.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.607" endtime="20201115 23:03:40.960"></status>
</kw>
<msg timestamp="20201115 23:03:40.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046745597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046853639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:40.603" endtime="20201115 23:03:40.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:40.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046745597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046853639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:40.969" endtime="20201115 23:03:40.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:40.988" endtime="20201115 23:03:40.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.596" endtime="20201115 23:03:40.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.592" endtime="20201115 23:03:40.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:41.005" level="INFO">${RESULT} = [{'time': 0.046853639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010804200000000264, 'source_diff': 0.00010804200000000264}, {'time': 0.046967667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:40.996" endtime="20201115 23:03:41.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:41.038" level="INFO">${ACCURACY} = {'time': [0.046853639, 0.046967667, 0.047081681, 0.047192667, 0.047308681, 0.047430694, 0.047547708, 0.047665736, 0.047787736, 0.04789875, 0.048013764, 0.048125778, 0.048238792, 0.048350792, 0.0484658...</msg>
<status status="PASS" starttime="20201115 23:03:41.008" endtime="20201115 23:03:41.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.049" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:03:41.047" endtime="20201115 23:03:41.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.054" level="INFO">VALUE: [0.00010804200000000264, 0.00010799999999999699, 0.00010719499999999743, 0.00010784800000000067, 0.0001077089999999975, 0.00010808300000000187, 0.00010726400000000275, 0.00010786100000000076, 0.0001080969999999945, 0.00010791699999999904, 0.00010776400000000325, 0.00010809700000000144, 0.0001080560000000022, 0.00010759799999999348, 0.00010755500000000223, 0.00010718000000000533, 0.00010729100000000241, 0.00010726400000000275, 0.00010727799999999538, 0.00010751399999999606, 0.00010808300000000187, 0.00010776399999999631, 0.00010729200000000189, 0.00010734800000000017, 0.00010747300000000376, 0.00010784699999999425, 0.00010813900000000015, 0.00010726400000000275, 0.00010747200000000429, 0.00010762500000000008, 0.00010809700000000144, 0.00010768099999999836, 0.00010794499999999818, 0.00010752800000000257, 0.0001075419999999952, 0.00010770800000000497, 0.00010755500000000223, 0.00010726400000000275, 0.00010768000000000583, 0.0001080560000000022, 0.00010730600000000146, 0.00010757000000000128, 0.00010794499999999818, 0.00010776400000000325, 0.00010769499999999793, 0.0001080969999999945, 0.00010742999999999864, 0.00010759700000000094, 0.0001080690000000023, 0.00010747200000000429]</msg>
<status status="PASS" starttime="20201115 23:03:41.052" endtime="20201115 23:03:41.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.040" endtime="20201115 23:03:41.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.063" endtime="20201115 23:03:41.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:41.072" endtime="20201115 23:03:41.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.067" endtime="20201115 23:03:41.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.059" endtime="20201115 23:03:41.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.531" endtime="20201115 23:03:41.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.527" endtime="20201115 23:03:41.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:40.525" endtime="20201115 23:03:41.098"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.104" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.125" endtime="20201115 23:03:41.149"></status>
</kw>
<msg timestamp="20201115 23:03:41.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.122" endtime="20201115 23:03:41.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.152" endtime="20201115 23:03:41.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.158" endtime="20201115 23:03:41.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.115" endtime="20201115 23:03:41.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.109" endtime="20201115 23:03:41.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.182" endtime="20201115 23:03:41.541"></status>
</kw>
<msg timestamp="20201115 23:03:41.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047139389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047248222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:41.178" endtime="20201115 23:03:41.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047139389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047248222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:41.550" endtime="20201115 23:03:41.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.569" endtime="20201115 23:03:41.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.171" endtime="20201115 23:03:41.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.166" endtime="20201115 23:03:41.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:41.588" level="INFO">${RESULT} = [{'time': 0.047248222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010883300000000262, 'source_diff': 0.00010883300000000262}, {'time': 0.047365236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:41.579" endtime="20201115 23:03:41.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:41.618" level="INFO">${ACCURACY} = {'time': [0.047248222, 0.047365236, 0.04748325, 0.047596264, 0.047711278, 0.047826292, 0.047945333, 0.048056319, 0.048174319, 0.048293333, 0.048417361, 0.048535361, 0.048652389, 0.048765389, 0.0488804...</msg>
<status status="PASS" starttime="20201115 23:03:41.590" endtime="20201115 23:03:41.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.628" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:03:41.626" endtime="20201115 23:03:41.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.634" level="INFO">VALUE: [0.00010883300000000262, 0.00010870799999999903, 0.0001088890000000009, 0.00010868099999999936, 0.00010858400000000185, 0.00010834800000000117, 0.00010906899999999636, 0.00010855500000000323, 0.00010823599999999767, 0.0001082219999999981, 0.00010906899999999636, 0.00010909700000000244, 0.00010915300000000072, 0.0001088890000000009, 0.00010836100000000126, 0.0001088890000000009, 0.00010879199999999645, 0.00010870799999999903, 0.00010863900000000065, 0.0001085419999999962, 0.00010887500000000133, 0.00010848600000000486, 0.00010870800000000597, 0.00010852800000000357, 0.00010830599999999552, 0.00010837500000000083, 0.00010867999999999989, 0.00010884700000000219, 0.0001088890000000009, 0.00010876399999999731, 0.00010824999999999724, 0.00010844399999999921, 0.00010890300000000047, 0.00010895899999999875, 0.00010898599999999842, 0.00010830600000000246, 0.0001086810000000063, 0.00010819399999999896, 0.00010893000000000014, 0.00010879099999999697, 0.00010870799999999903, 0.00010841699999999954, 0.00010837500000000083, 0.00010911100000000201, 0.00010849999999999749, 0.0001088890000000009, 0.00010823599999999767, 0.00010845799999999878, 0.00010826400000000375, 0.00010905500000000373]</msg>
<status status="PASS" starttime="20201115 23:03:41.631" endtime="20201115 23:03:41.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.619" endtime="20201115 23:03:41.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.643" endtime="20201115 23:03:41.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:41.651" endtime="20201115 23:03:41.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.647" endtime="20201115 23:03:41.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.638" endtime="20201115 23:03:41.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.105" endtime="20201115 23:03:41.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.101" endtime="20201115 23:03:41.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.099" endtime="20201115 23:03:41.678"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.683" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.704" endtime="20201115 23:03:41.728"></status>
</kw>
<msg timestamp="20201115 23:03:41.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.701" endtime="20201115 23:03:41.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:41.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:41.732" endtime="20201115 23:03:41.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.738" endtime="20201115 23:03:41.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.694" endtime="20201115 23:03:41.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.688" endtime="20201115 23:03:41.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:41.762" endtime="20201115 23:03:42.099"></status>
</kw>
<msg timestamp="20201115 23:03:42.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047041639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047151542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:41.758" endtime="20201115 23:03:42.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047041639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047151542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:42.103" endtime="20201115 23:03:42.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.111" endtime="20201115 23:03:42.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.750" endtime="20201115 23:03:42.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.746" endtime="20201115 23:03:42.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:42.120" level="INFO">${RESULT} = [{'time': 0.047151542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010990299999999453, 'source_diff': 0.00010990299999999453}, {'time': 0.0472705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:42.116" endtime="20201115 23:03:42.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:42.133" level="INFO">${ACCURACY} = {'time': [0.047151542, 0.0472705, 0.047384514, 0.047508528, 0.047622542, 0.047739556, 0.047857597, 0.047981583, 0.048102667, 0.048216611, 0.048337611, 0.048453625, 0.048572653, 0.048693667, 0.04881468...</msg>
<status status="PASS" starttime="20201115 23:03:42.121" endtime="20201115 23:03:42.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.138" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:03:42.137" endtime="20201115 23:03:42.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.141" level="INFO">VALUE: [0.00010990299999999453, 0.0001098890000000019, 0.00010926400000000475, 0.00011008400000000335, 0.00010947299999999882, 0.00010997299999999932, 0.00010931900000000355, 0.0001098890000000019, 0.00010987500000000233, 0.00010947199999999935, 0.00010937500000000183, 0.00010956899999999686, 0.00010968100000000036, 0.00010961100000000251, 0.00010919499999999943, 0.00010948599999999892, 0.00010993000000000114, 0.00010984700000000319, 0.00010984699999999625, 0.00010959700000000294, 0.0001092219999999991, 0.00011006999999999684, 0.00010936100000000226, 0.00010937500000000183, 0.00010965300000000122, 0.00011013900000000215, 0.00010966600000000132, 0.00011005500000000473, 0.0001097219999999996, 0.00010979199999999745, 0.00010926399999999781, 0.0001092219999999991, 0.00010972299999999907, 0.00010949999999999849, 0.0001097089999999995, 0.0001100560000000042, 0.00010991600000000157, 0.00010991599999999463, 0.00010951399999999806, 0.0001098890000000019, 0.00011013899999999521, 0.00010947199999999935, 0.00010961099999999557, 0.00010968100000000036, 0.00010987499999999539, 0.00010938800000000193, 0.00011009700000000344, 0.00010936100000000226, 0.00010951399999999806, 0.00010997199999999985]</msg>
<status status="PASS" starttime="20201115 23:03:42.139" endtime="20201115 23:03:42.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.134" endtime="20201115 23:03:42.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.145" endtime="20201115 23:03:42.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:42.149" endtime="20201115 23:03:42.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.147" endtime="20201115 23:03:42.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.143" endtime="20201115 23:03:42.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.684" endtime="20201115 23:03:42.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.680" endtime="20201115 23:03:42.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:41.679" endtime="20201115 23:03:42.170"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.173" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.183" endtime="20201115 23:03:42.203"></status>
</kw>
<msg timestamp="20201115 23:03:42.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.181" endtime="20201115 23:03:42.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.204" endtime="20201115 23:03:42.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.208" endtime="20201115 23:03:42.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.178" endtime="20201115 23:03:42.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.175" endtime="20201115 23:03:42.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.219" endtime="20201115 23:03:42.527"></status>
</kw>
<msg timestamp="20201115 23:03:42.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027084694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027195319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:42.217" endtime="20201115 23:03:42.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027084694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027195319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:42.536" endtime="20201115 23:03:42.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.555" endtime="20201115 23:03:42.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.214" endtime="20201115 23:03:42.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.212" endtime="20201115 23:03:42.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:42.574" level="INFO">${RESULT} = [{'time': 0.027195319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011062499999999961, 'source_diff': 0.00011062499999999961}, {'time': 0.027311319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:42.565" endtime="20201115 23:03:42.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:42.603" level="INFO">${ACCURACY} = {'time': [0.027195319, 0.027311319, 0.027435333, 0.027549347, 0.027666389, 0.027789375, 0.027912417, 0.028034403, 0.028152417, 0.028274431, 0.028391458, 0.028506458, 0.028622486, 0.0287405, 0.02886148...</msg>
<status status="PASS" starttime="20201115 23:03:42.576" endtime="20201115 23:03:42.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.614" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:03:42.612" endtime="20201115 23:03:42.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.619" level="INFO">VALUE: [0.00011062499999999961, 0.00011104099999999922, 0.00011030499999999804, 0.00011051399999999906, 0.00011041699999999807, 0.00011097200000000085, 0.00011077799999999888, 0.00011101399999999956, 0.00011072300000000007, 0.00011094499999999771, 0.00011095800000000128, 0.00011066599999999885, 0.00011081899999999811, 0.00011077799999999888, 0.00011062499999999961, 0.00011045800000000078, 0.00011097200000000085, 0.00011115300000000272, 0.00011102799999999913, 0.00011044399999999774, 0.00011030500000000151, 0.00011112499999999664, 0.0001105830000000009, 0.00011033300000000065, 0.00011045800000000078, 0.00011016700000000129, 0.00011059700000000047, 0.00011065299999999875, 0.00011030599999999752, 0.00011087499999999986, 0.00011092999999999867, 0.00011066599999999885, 0.00011109700000000097, 0.00011029200000000142, 0.00011105600000000174, 0.00011084700000000419, 0.0001107090000000005, 0.00011029199999999795, 0.00011019400000000096, 0.00011080500000000548, 0.00011018000000000139, 0.00011031899999999761, 0.00011076399999999931, 0.00011098600000000042, 0.00011077799999999888, 0.00011095800000000128, 0.00011099999999999999, 0.0001103619999999958, 0.00011076399999999931, 0.00011016600000000182]</msg>
<status status="PASS" starttime="20201115 23:03:42.616" endtime="20201115 23:03:42.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.605" endtime="20201115 23:03:42.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.628" endtime="20201115 23:03:42.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:42.636" endtime="20201115 23:03:42.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.632" endtime="20201115 23:03:42.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.624" endtime="20201115 23:03:42.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.173" endtime="20201115 23:03:42.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.171" endtime="20201115 23:03:42.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.171" endtime="20201115 23:03:42.663"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.668" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.691" endtime="20201115 23:03:42.714"></status>
</kw>
<msg timestamp="20201115 23:03:42.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.687" endtime="20201115 23:03:42.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:42.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:42.717" endtime="20201115 23:03:42.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.724" endtime="20201115 23:03:42.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.680" endtime="20201115 23:03:42.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.674" endtime="20201115 23:03:42.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:42.747" endtime="20201115 23:03:43.108"></status>
</kw>
<msg timestamp="20201115 23:03:43.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047882917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047994139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:42.744" endtime="20201115 23:03:43.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047882917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047994139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.117" endtime="20201115 23:03:43.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.136" endtime="20201115 23:03:43.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.737" endtime="20201115 23:03:43.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.732" endtime="20201115 23:03:43.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:43.153" level="INFO">${RESULT} = [{'time': 0.047994139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001112220000000011, 'source_diff': 0.0001112220000000011}, {'time': 0.048109181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:43.144" endtime="20201115 23:03:43.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:43.185" level="INFO">${ACCURACY} = {'time': [0.047994139, 0.048109181, 0.048231222, 0.048354181, 0.048480194, 0.048606278, 0.048727236, 0.04884525, 0.04896325, 0.049083264, 0.049201292, 0.049321333, 0.049443306, 0.049566319, 0.04968633...</msg>
<status status="PASS" starttime="20201115 23:03:43.155" endtime="20201115 23:03:43.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.196" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:03:43.194" endtime="20201115 23:03:43.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.201" level="INFO">VALUE: [0.0001112220000000011, 0.00011215300000000372, 0.0001120969999999985, 0.00011113900000000315, 0.00011166599999999638, 0.00011195900000000175, 0.00011211099999999807, 0.00011202800000000013, 0.00011180599999999902, 0.00011190300000000347, 0.00011202800000000013, 0.00011134700000000469, 0.00011141700000000254, 0.000111596999999998, 0.00011213899999999721, 0.00011198599999999448, 0.00011150000000000049, 0.00011133299999999818, 0.00011212500000000458, 0.00011151400000000006, 0.00011202800000000013, 0.00011187499999999739, 0.0001115549999999993, 0.0001120969999999985, 0.00011147200000000135, 0.00011167999999999595, 0.00011117999999999545, 0.00011126399999999981, 0.0001112220000000011, 0.00011186100000000476, 0.00011162499999999714, 0.00011123600000000067, 0.00011119500000000143, 0.00011115200000000325, 0.00011202800000000013, 0.00011197200000000185, 0.0001115419999999992, 0.00011170800000000203, 0.00011134700000000469, 0.00011155599999999877, 0.00011184799999999773, 0.00011126300000000033, 0.00011119399999999502, 0.00011186099999999782, 0.00011123600000000067, 0.0001115419999999992, 0.00011193100000000261, 0.00011187500000000433, 0.00011172299999999413, 0.00011122300000000057]</msg>
<status status="PASS" starttime="20201115 23:03:43.198" endtime="20201115 23:03:43.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.187" endtime="20201115 23:03:43.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.210" endtime="20201115 23:03:43.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:43.219" endtime="20201115 23:03:43.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.214" endtime="20201115 23:03:43.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.206" endtime="20201115 23:03:43.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.670" endtime="20201115 23:03:43.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.666" endtime="20201115 23:03:43.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:42.664" endtime="20201115 23:03:43.246"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.273" endtime="20201115 23:03:43.297"></status>
</kw>
<msg timestamp="20201115 23:03:43.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.269" endtime="20201115 23:03:43.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.301" endtime="20201115 23:03:43.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.307" endtime="20201115 23:03:43.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.262" endtime="20201115 23:03:43.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.256" endtime="20201115 23:03:43.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.330" endtime="20201115 23:03:43.683"></status>
</kw>
<msg timestamp="20201115 23:03:43.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047371653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047483889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.327" endtime="20201115 23:03:43.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047371653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047483889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:43.692" endtime="20201115 23:03:43.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.710" endtime="20201115 23:03:43.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.320" endtime="20201115 23:03:43.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.315" endtime="20201115 23:03:43.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:43.729" level="INFO">${RESULT} = [{'time': 0.047483889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011223600000000167, 'source_diff': 0.00011223600000000167}, {'time': 0.047600889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:43.720" endtime="20201115 23:03:43.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:43.759" level="INFO">${ACCURACY} = {'time': [0.047483889, 0.047600889, 0.047717903, 0.047837958, 0.047962931, 0.048081944, 0.048196972, 0.048311986, 0.048429986, 0.048555986, 0.048681014, 0.048798028, 0.048915069, 0.049040042, 0.049159...</msg>
<status status="PASS" starttime="20201115 23:03:43.731" endtime="20201115 23:03:43.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.770" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:03:43.767" endtime="20201115 23:03:43.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.775" level="INFO">VALUE: [0.00011223600000000167, 0.00011226400000000081, 0.00011286099999999882, 0.0001127220000000026, 0.00011255599999999977, 0.00011300000000000199, 0.00011277800000000088, 0.00011293000000000414, 0.00011279200000000045, 0.00011291700000000404, 0.00011295800000000328, 0.00011245900000000225, 0.0001129299999999972, 0.00011234799999999823, 0.00011218100000000286, 0.00011291599999999763, 0.00011263899999999771, 0.00011230500000000004, 0.00011266699999999685, 0.00011249999999999455, 0.00011232000000000603, 0.00011255599999999977, 0.00011276400000000131, 0.00011315199999999831, 0.00011240199999999756, 0.00011211099999999807, 0.00011277800000000088, 0.00011240299999999703, 0.0001130550000000008, 0.00011254100000000072, 0.00011226400000000081, 0.00011304199999999376, 0.00011276400000000131, 0.00011266600000000432, 0.0001127770000000014, 0.00011254100000000072, 0.00011223600000000167, 0.00011216700000000329, 0.00011281900000000011, 0.00011308299999999993, 0.00011277800000000088, 0.00011238899999999746, 0.00011230599999999952, 0.00011280500000000054, 0.0001122499999999943, 0.00011261099999999857, 0.00011311099999999907, 0.00011295900000000275, 0.0001130420000000007, 0.00011250000000000149]</msg>
<status status="PASS" starttime="20201115 23:03:43.772" endtime="20201115 23:03:43.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.761" endtime="20201115 23:03:43.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.789" endtime="20201115 23:03:43.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:43.798" endtime="20201115 23:03:43.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.793" endtime="20201115 23:03:43.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.785" endtime="20201115 23:03:43.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.253" endtime="20201115 23:03:43.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.249" endtime="20201115 23:03:43.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.247" endtime="20201115 23:03:43.824"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.829" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.851" endtime="20201115 23:03:43.874"></status>
</kw>
<msg timestamp="20201115 23:03:43.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.848" endtime="20201115 23:03:43.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:43.878" endtime="20201115 23:03:43.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.884" endtime="20201115 23:03:43.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.840" endtime="20201115 23:03:43.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.835" endtime="20201115 23:03:43.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:43.907" endtime="20201115 23:03:44.258"></status>
</kw>
<msg timestamp="20201115 23:03:44.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047146944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04726025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:43.904" endtime="20201115 23:03:44.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047146944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04726025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:44.267" endtime="20201115 23:03:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.285" endtime="20201115 23:03:44.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.897" endtime="20201115 23:03:44.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.892" endtime="20201115 23:03:44.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:44.303" level="INFO">${RESULT} = [{'time': 0.04726025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011330599999999358, 'source_diff': 0.00011330599999999358}, {'time': 0.047379194, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:03:44.294" endtime="20201115 23:03:44.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:44.332" level="INFO">${ACCURACY} = {'time': [0.04726025, 0.047379194, 0.047503194, 0.047632222, 0.04775625, 0.04787325, 0.04799925, 0.048126264, 0.048252347, 0.048372306, 0.048500375, 0.048617333, 0.048740347, 0.048865361, 0.048983361,...</msg>
<status status="PASS" starttime="20201115 23:03:44.305" endtime="20201115 23:03:44.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.343" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:03:44.341" endtime="20201115 23:03:44.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.349" level="INFO">VALUE: [0.00011330599999999358, 0.00011322199999999616, 0.00011383300000000068, 0.00011406900000000136, 0.00011344399999999727, 0.00011331900000000061, 0.00011355600000000077, 0.00011393100000000461, 0.00011404100000000222, 0.00011340299999999803, 0.0001135420000000012, 0.00011388899999999896, 0.00011348600000000292, 0.000113597, 0.00011326400000000181, 0.00011357000000000034, 0.00011390299999999853, 0.00011384799999999973, 0.00011394499999999724, 0.00011390299999999853, 0.00011388799999999949, 0.00011343099999999717, 0.00011369399999999752, 0.00011412499999999964, 0.00011369400000000446, 0.00011355600000000077, 0.00011411099999999313, 0.00011351400000000206, 0.00011373600000000317, 0.00011395799999999734, 0.00011384700000000025, 0.0001133749999999989, 0.00011397200000000385, 0.00011413899999999921, 0.00011352800000000163, 0.00011320899999999606, 0.0001138749999999994, 0.00011413899999999921, 0.00011355600000000077, 0.00011351300000000258, 0.00011394399999999777, 0.0001140970000000005, 0.00011388899999999896, 0.00011345800000000378, 0.00011411100000000007, 0.00011357000000000034, 0.0001135420000000012, 0.00011400000000000299, 0.00011326400000000181, 0.00011386099999999982]</msg>
<status status="PASS" starttime="20201115 23:03:44.345" endtime="20201115 23:03:44.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.334" endtime="20201115 23:03:44.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.358" endtime="20201115 23:03:44.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:44.367" endtime="20201115 23:03:44.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.362" endtime="20201115 23:03:44.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.354" endtime="20201115 23:03:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.831" endtime="20201115 23:03:44.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.827" endtime="20201115 23:03:44.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:43.825" endtime="20201115 23:03:44.393"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.398" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.420" endtime="20201115 23:03:44.444"></status>
</kw>
<msg timestamp="20201115 23:03:44.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:44.417" endtime="20201115 23:03:44.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:44.447" endtime="20201115 23:03:44.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.454" endtime="20201115 23:03:44.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.409" endtime="20201115 23:03:44.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.404" endtime="20201115 23:03:44.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.477" endtime="20201115 23:03:44.824"></status>
</kw>
<msg timestamp="20201115 23:03:44.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046930819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047045792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:44.474" endtime="20201115 23:03:44.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046930819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047045792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:44.833" endtime="20201115 23:03:44.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.851" endtime="20201115 23:03:44.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.466" endtime="20201115 23:03:44.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.462" endtime="20201115 23:03:44.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:44.870" level="INFO">${RESULT} = [{'time': 0.047045792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011497300000000432, 'source_diff': 0.00011497300000000432}, {'time': 0.047175792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:44.861" endtime="20201115 23:03:44.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:44.900" level="INFO">${ACCURACY} = {'time': [0.047045792, 0.047175792, 0.047302806, 0.047422819, 0.047550875, 0.047673861, 0.047799861, 0.047923875, 0.048047903, 0.048171903, 0.048294944, 0.048420931, 0.048537944, 0.048666958, 0.048785...</msg>
<status status="PASS" starttime="20201115 23:03:44.873" endtime="20201115 23:03:44.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.911" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:03:44.909" endtime="20201115 23:03:44.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.916" level="INFO">VALUE: [0.00011497300000000432, 0.00011482000000000159, 0.00011426400000000281, 0.0001144299999999987, 0.00011476399999999637, 0.00011429199999999501, 0.00011416699999999835, 0.0001148750000000004, 0.00011427800000000238, 0.00011423600000000367, 0.00011516599999999988, 0.00011438899999999946, 0.0001147629999999969, 0.00011426400000000281, 0.00011487499999999345, 0.00011456899999999492, 0.00011476400000000331, 0.00011484700000000125, 0.00011480600000000202, 0.00011448699999999645, 0.00011463899999999971, 0.00011480500000000254, 0.00011434699999999381, 0.00011463900000000665, 0.00011444400000000521, 0.00011470799999999809, 0.00011448600000000392, 0.00011483400000000116, 0.00011463899999999971, 0.00011484800000000073, 0.0001145550000000023, 0.00011458300000000143, 0.00011505499999999586, 0.00011416599999999888, 0.00011498600000000442, 0.00011466699999999885, 0.00011493099999999867, 0.00011472300000000407, 0.00011463899999999971, 0.00011450000000000349, 0.00011412499999999964, 0.00011420800000000453, 0.00011515300000000672, 0.00011511100000000107, 0.00011463899999999971, 0.0001147220000000046, 0.00011512500000000064, 0.00011513900000000021, 0.00011447299999999688, 0.0001145550000000023]</msg>
<status status="PASS" starttime="20201115 23:03:44.913" endtime="20201115 23:03:44.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.902" endtime="20201115 23:03:44.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.925" endtime="20201115 23:03:44.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:44.934" endtime="20201115 23:03:44.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.929" endtime="20201115 23:03:44.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.921" endtime="20201115 23:03:44.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.400" endtime="20201115 23:03:44.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.396" endtime="20201115 23:03:44.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.394" endtime="20201115 23:03:44.960"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:44.965" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:44.987" endtime="20201115 23:03:45.011"></status>
</kw>
<msg timestamp="20201115 23:03:45.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:44.984" endtime="20201115 23:03:45.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:45.015" endtime="20201115 23:03:45.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.021" endtime="20201115 23:03:45.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.977" endtime="20201115 23:03:45.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.971" endtime="20201115 23:03:45.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.044" endtime="20201115 23:03:45.392"></status>
</kw>
<msg timestamp="20201115 23:03:45.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047217833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047333889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:45.041" endtime="20201115 23:03:45.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047217833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047333889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:45.401" endtime="20201115 23:03:45.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.420" endtime="20201115 23:03:45.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.034" endtime="20201115 23:03:45.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.029" endtime="20201115 23:03:45.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:45.438" level="INFO">${RESULT} = [{'time': 0.047333889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011605599999999633, 'source_diff': 0.00011605599999999633}, {'time': 0.047459972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:45.429" endtime="20201115 23:03:45.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:45.470" level="INFO">${ACCURACY} = {'time': [0.047333889, 0.047459972, 0.047586931, 0.047714958, 0.047838944, 0.047963958, 0.048083986, 0.048204014, 0.048331014, 0.048458028, 0.048589028, 0.048713042, 0.048843056, 0.048971125, 0.049098...</msg>
<status status="PASS" starttime="20201115 23:03:45.440" endtime="20201115 23:03:45.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.481" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:03:45.479" endtime="20201115 23:03:45.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:45.486" level="INFO">VALUE: [0.00011605599999999633, 0.00011591600000000063, 0.00011533400000000166, 0.00011536100000000132, 0.0001159300000000002, 0.00011567999999999995, 0.00011569399999999952, 0.00011527800000000338, 0.00011540300000000003, 0.00011582000000000259, 0.00011605599999999633, 0.00011530599999999558, 0.00011525000000000424, 0.00011537499999999395, 0.00011516599999999988, 0.00011538900000000046, 0.0001153750000000009, 0.00011605599999999633, 0.00011572199999999866, 0.00011597200000000585, 0.00011551400000000406, 0.00011555600000000277, 0.00011526399999999687, 0.00011608300000000293, 0.00011572199999999866, 0.00011591599999999369, 0.0001161249999999947, 0.00011533300000000218, 0.00011548599999999798, 0.00011612500000000164, 0.0001157369999999977, 0.00011526399999999687, 0.0001154299999999997, 0.0001160970000000025, 0.00011598599999999848, 0.00011547199999999841, 0.00011577800000000388, 0.00011583299999999574, 0.00011593099999999967, 0.00011522299999999763, 0.00011562500000000114, 0.00011579100000000397, 0.00011540300000000003, 0.0001160970000000025, 0.0001161249999999947, 0.00011593099999999967, 0.00011572199999999866, 0.00011519499999999849, 0.00011609800000000198, 0.00011590200000000106]</msg>
<status status="PASS" starttime="20201115 23:03:45.483" endtime="20201115 23:03:45.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.472" endtime="20201115 23:03:45.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:45.495" endtime="20201115 23:03:45.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:45.503" endtime="20201115 23:03:45.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.499" endtime="20201115 23:03:45.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.490" endtime="20201115 23:03:45.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.967" endtime="20201115 23:03:45.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.963" endtime="20201115 23:03:45.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:44.961" endtime="20201115 23:03:45.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.034" endtime="20201115 23:03:45.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:45.541" endtime="20201115 23:03:45.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.536" endtime="20201115 23:03:45.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:45.534" endtime="20201115 23:03:45.565"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:49.904" endtime="20201115 23:03:45.566" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:52.267" endtime="20201115 23:03:45.576"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:48.376" endtime="20201115 23:03:45.607"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
