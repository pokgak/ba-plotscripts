<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 22:59:55.535" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 22:59:59.163" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 22:59:59.172" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:00:00.289" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 22:59:59.162" endtime="20201115 23:00:00.291"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:00:00.296" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:00:00.293" endtime="20201115 23:00:00.297"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.161" endtime="20201115 23:00:00.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:00.303" endtime="20201115 23:00:00.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.300" endtime="20201115 23:00:00.492"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:00.505" endtime="20201115 23:00:03.528"></status>
</kw>
<msg timestamp="20201115 23:00:03.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:00.503" endtime="20201115 23:00:03.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.531" endtime="20201115 23:00:03.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:03.543" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:03.537" endtime="20201115 23:00:03.543"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:00.501" endtime="20201115 23:00:03.545"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:00.498" endtime="20201115 23:00:03.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.497" endtime="20201115 23:00:03.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:03.555" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:03.553" endtime="20201115 23:00:03.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.549" endtime="20201115 23:00:03.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.496" endtime="20201115 23:00:03.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.496" endtime="20201115 23:00:03.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.559" endtime="20201115 23:00:03.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.494" endtime="20201115 23:00:03.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.565" endtime="20201115 23:00:03.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:00.493" endtime="20201115 23:00:03.570"></status>
</kw>
<status status="PASS" starttime="20201115 22:59:59.159" endtime="20201115 23:00:03.570"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:03.584" endtime="20201115 23:00:03.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.581" endtime="20201115 23:00:03.608"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:03.628" endtime="20201115 23:00:06.651"></status>
</kw>
<msg timestamp="20201115 23:00:06.652" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:03.627" endtime="20201115 23:00:06.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.655" endtime="20201115 23:00:06.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.666" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:06.662" endtime="20201115 23:00:06.666"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:03.624" endtime="20201115 23:00:06.668"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:03.621" endtime="20201115 23:00:06.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.620" endtime="20201115 23:00:06.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:06.678" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:06.676" endtime="20201115 23:00:06.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.672" endtime="20201115 23:00:06.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.618" endtime="20201115 23:00:06.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.616" endtime="20201115 23:00:06.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.681" endtime="20201115 23:00:06.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.613" endtime="20201115 23:00:06.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.610" endtime="20201115 23:00:06.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:03.578" endtime="20201115 23:00:06.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.705" endtime="20201115 23:00:06.720"></status>
</kw>
<msg timestamp="20201115 23:00:06.721" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.702" endtime="20201115 23:00:06.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.727" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:06.724" endtime="20201115 23:00:06.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:06.729" endtime="20201115 23:00:06.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.696" endtime="20201115 23:00:06.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.691" endtime="20201115 23:00:06.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.744" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:00:06.742" endtime="20201115 23:00:06.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.749" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201115 23:00:06.747" endtime="20201115 23:00:06.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.737" endtime="20201115 23:00:06.751"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:03.571" endtime="20201115 23:00:06.752" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 22:59:55.646" endtime="20201115 23:00:06.760"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:00:06.824" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:00:06.832" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:00:07.909" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:00:06.822" endtime="20201115 23:00:07.910"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:00:07.912" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:00:07.911" endtime="20201115 23:00:07.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.821" endtime="20201115 23:00:07.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:07.915" endtime="20201115 23:00:08.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:07.914" endtime="20201115 23:00:08.145"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:08.158" endtime="20201115 23:00:11.179"></status>
</kw>
<msg timestamp="20201115 23:00:11.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:08.156" endtime="20201115 23:00:11.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.183" endtime="20201115 23:00:11.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:11.193" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:11.188" endtime="20201115 23:00:11.193"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:08.154" endtime="20201115 23:00:11.195"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:08.151" endtime="20201115 23:00:11.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.150" endtime="20201115 23:00:11.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:11.205" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:11.203" endtime="20201115 23:00:11.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.199" endtime="20201115 23:00:11.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.149" endtime="20201115 23:00:11.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.149" endtime="20201115 23:00:11.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.209" endtime="20201115 23:00:11.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.147" endtime="20201115 23:00:11.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.215" endtime="20201115 23:00:11.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:08.146" endtime="20201115 23:00:11.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:06.819" endtime="20201115 23:00:11.220"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:11.235" endtime="20201115 23:00:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.232" endtime="20201115 23:00:11.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:11.271" endtime="20201115 23:00:14.292"></status>
</kw>
<msg timestamp="20201115 23:00:14.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:11.269" endtime="20201115 23:00:14.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.297" endtime="20201115 23:00:14.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.307" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:14.302" endtime="20201115 23:00:14.307"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:11.266" endtime="20201115 23:00:14.309"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:11.264" endtime="20201115 23:00:14.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.263" endtime="20201115 23:00:14.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:14.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:14.317" endtime="20201115 23:00:14.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.313" endtime="20201115 23:00:14.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.262" endtime="20201115 23:00:14.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.261" endtime="20201115 23:00:14.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.322" endtime="20201115 23:00:14.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.260" endtime="20201115 23:00:14.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.258" endtime="20201115 23:00:14.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:11.229" endtime="20201115 23:00:14.329"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.336" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.357" endtime="20201115 23:00:14.377"></status>
</kw>
<msg timestamp="20201115 23:00:14.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.352" endtime="20201115 23:00:14.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.381" endtime="20201115 23:00:14.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.386" endtime="20201115 23:00:14.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.346" endtime="20201115 23:00:14.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.341" endtime="20201115 23:00:14.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.398" endtime="20201115 23:00:14.696"></status>
</kw>
<msg timestamp="20201115 23:00:14.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113894319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113908597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.397" endtime="20201115 23:00:14.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.113894319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.113908597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.700" endtime="20201115 23:00:14.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.708" endtime="20201115 23:00:14.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.394" endtime="20201115 23:00:14.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.392" endtime="20201115 23:00:14.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:14.715" level="INFO">${RESULT} = [{'time': 3.113908597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4278000000089719e-05, 'source_diff': 1.4278000000089719e-05}, {'time': 3.113934569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:14.711" endtime="20201115 23:00:14.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:14.729" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:14.716" endtime="20201115 23:00:14.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.733" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:14.732" endtime="20201115 23:00:14.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.736" level="INFO">VALUE: [1.4278000000089719e-05, 1.4387999999865286e-05, 1.412499999986494e-05, 1.4054999999846274e-05, 1.4971999999779939e-05, 1.472199999996704e-05, 1.4305000000103263e-05, 1.4693999999870755e-05, 1.4152999999961224e-05, 1.4832999999825347e-05, 1.4680000000044657e-05, 1.4152999999961224e-05, 1.4430999999870409e-05, 1.4707999999696852e-05, 1.4417000000044311e-05, 1.4278000000089719e-05, 1.491699999967011e-05, 1.4708000000140942e-05, 1.4458000000328042e-05, 1.4249999999993435e-05, 1.481899999999925e-05, 1.4611000000108731e-05, 1.4082999999942558e-05, 1.4096999999768656e-05, 1.4666999999857211e-05, 1.4402999999774124e-05, 1.412500000030903e-05, 1.4014000000006632e-05, 1.4639000000205016e-05, 1.4735999999793137e-05, 1.4749999999619234e-05, 1.4208000000071053e-05, 1.4485999999980237e-05, 1.501300000006367e-05, 1.4527999999902619e-05, 1.4527999999902619e-05, 1.422299999997989e-05, 1.4959000000036582e-05, 1.4735999999793137e-05, 1.4999999999876223e-05, 1.4485999999980237e-05, 1.4236999999805988e-05, 1.4111000000038842e-05, 1.4387999999865286e-05, 1.4959000000036582e-05, 1.4777000000076868e-05, 1.4708000000140942e-05, 1.4445000000140595e-05, 1.4111000000038842e-05, 1.456900000018635e-05]</msg>
<status status="PASS" starttime="20201115 23:00:14.734" endtime="20201115 23:00:14.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.729" endtime="20201115 23:00:14.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.739" endtime="20201115 23:00:14.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:14.742" endtime="20201115 23:00:14.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.741" endtime="20201115 23:00:14.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.737" endtime="20201115 23:00:14.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.338" endtime="20201115 23:00:14.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.334" endtime="20201115 23:00:14.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.332" endtime="20201115 23:00:14.763"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.774" endtime="20201115 23:00:14.789"></status>
</kw>
<msg timestamp="20201115 23:00:14.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.772" endtime="20201115 23:00:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:14.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:14.791" endtime="20201115 23:00:14.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.793" endtime="20201115 23:00:14.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.770" endtime="20201115 23:00:14.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.768" endtime="20201115 23:00:14.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:14.802" endtime="20201115 23:00:15.087"></status>
</kw>
<msg timestamp="20201115 23:00:15.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:14.801" endtime="20201115 23:00:15.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022621514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.091" endtime="20201115 23:00:15.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.106" endtime="20201115 23:00:15.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.798" endtime="20201115 23:00:15.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.797" endtime="20201115 23:00:15.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.120" level="INFO">${RESULT} = [{'time': 0.022621514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.022647514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:15.113" endtime="20201115 23:00:15.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.150" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:15.122" endtime="20201115 23:00:15.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.159" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.157" endtime="20201115 23:00:15.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.165" level="INFO">VALUE: [1.458299999999857e-05, 1.4695000000002068e-05, 1.4721999999998264e-05, 1.4957999999998944e-05, 1.4250000000000373e-05, 1.4721999999998264e-05, 1.4139000000003288e-05, 1.4041999999998833e-05, 1.4666999999999458e-05, 1.4749999999997404e-05, 1.5028000000000263e-05, 1.4903000000000138e-05, 1.4930999999999278e-05, 1.4680999999999028e-05, 1.4514000000000193e-05, 1.4223000000000707e-05, 1.4791999999999583e-05, 1.4737000000000777e-05, 1.4569000000002469e-05, 1.4527999999999763e-05, 1.4943999999999374e-05, 1.4444000000002344e-05, 1.4665999999999985e-05, 1.4736000000001304e-05, 1.4929999999999805e-05, 1.4736000000001304e-05, 1.461099999999771e-05, 1.4985999999998084e-05, 1.4500000000000624e-05, 1.483299999999882e-05, 1.4721999999998264e-05, 1.4986000000001554e-05, 1.4943999999999374e-05, 1.4097000000001109e-05, 1.4179999999999054e-05, 1.4277999999999513e-05, 1.4250000000000373e-05, 1.4929999999999805e-05, 1.484699999999839e-05, 1.4263999999999943e-05, 1.434699999999789e-05, 1.4292000000002553e-05, 1.4652999999999888e-05, 1.4111000000000679e-05, 1.4416999999999208e-05, 1.4666999999999458e-05, 1.4458000000001914e-05, 1.4208000000001664e-05, 1.4486000000001054e-05, 1.4360999999997459e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.162" endtime="20201115 23:00:15.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.152" endtime="20201115 23:00:15.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.171" endtime="20201115 23:00:15.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.178" endtime="20201115 23:00:15.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.175" endtime="20201115 23:00:15.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.168" endtime="20201115 23:00:15.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.766" endtime="20201115 23:00:15.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.764" endtime="20201115 23:00:15.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.764" endtime="20201115 23:00:15.206"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.208" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.217" endtime="20201115 23:00:15.232"></status>
</kw>
<msg timestamp="20201115 23:00:15.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.215" endtime="20201115 23:00:15.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.233" endtime="20201115 23:00:15.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.236" endtime="20201115 23:00:15.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.213" endtime="20201115 23:00:15.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.210" endtime="20201115 23:00:15.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.246" endtime="20201115 23:00:15.531"></status>
</kw>
<msg timestamp="20201115 23:00:15.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.244" endtime="20201115 23:00:15.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023546597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.535" endtime="20201115 23:00:15.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.544" endtime="20201115 23:00:15.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.241" endtime="20201115 23:00:15.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.239" endtime="20201115 23:00:15.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.550" level="INFO">${RESULT} = [{'time': 0.023546597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4624999999997279e-05, 'source_diff': 1.4624999999997279e-05}, {'time': 0.023571597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:15.547" endtime="20201115 23:00:15.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:15.565" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:15.551" endtime="20201115 23:00:15.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.569" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:15.568" endtime="20201115 23:00:15.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.571" level="INFO">VALUE: [1.4624999999997279e-05, 1.4111000000000679e-05, 1.405499999999893e-05, 1.4625000000000749e-05, 1.4679999999999555e-05, 1.4263999999999943e-05, 1.4083000000001539e-05, 1.4416999999999208e-05, 1.4221999999997764e-05, 1.481899999999925e-05, 1.4791999999999583e-05, 1.4055999999998403e-05, 1.4708000000002164e-05, 1.4820000000002193e-05, 1.4486000000001054e-05, 1.4389000000000068e-05, 1.4709000000001637e-05, 1.409699999999764e-05, 1.4473000000000957e-05, 1.4986000000001554e-05, 1.4736000000001304e-05, 1.433299999999832e-05, 1.4389000000000068e-05, 1.4764000000000443e-05, 1.4916999999999708e-05, 1.4180999999998528e-05, 1.4124999999996779e-05, 1.4389000000000068e-05, 1.4486000000001054e-05, 1.4778000000000013e-05, 1.4625000000000749e-05, 1.4527999999999763e-05, 1.4874999999997529e-05, 1.4874999999997529e-05, 1.4098000000000582e-05, 1.5041999999999833e-05, 1.480499999999968e-05, 1.481899999999925e-05, 1.4513999999996724e-05, 1.4874999999997529e-05, 1.481899999999925e-05, 1.458299999999857e-05, 1.476300000000097e-05, 1.455499999999943e-05, 1.4583000000002039e-05, 1.4707999999998694e-05, 1.4069000000001969e-05, 1.4665999999999985e-05, 1.4972000000001984e-05, 1.5041999999999833e-05]</msg>
<status status="PASS" starttime="20201115 23:00:15.570" endtime="20201115 23:00:15.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.566" endtime="20201115 23:00:15.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.575" endtime="20201115 23:00:15.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:15.578" endtime="20201115 23:00:15.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.576" endtime="20201115 23:00:15.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.573" endtime="20201115 23:00:15.598"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.209" endtime="20201115 23:00:15.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.207" endtime="20201115 23:00:15.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.206" endtime="20201115 23:00:15.599"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.610" endtime="20201115 23:00:15.624"></status>
</kw>
<msg timestamp="20201115 23:00:15.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.608" endtime="20201115 23:00:15.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:15.626" endtime="20201115 23:00:15.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.629" endtime="20201115 23:00:15.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.605" endtime="20201115 23:00:15.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.603" endtime="20201115 23:00:15.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.638" endtime="20201115 23:00:15.930"></status>
</kw>
<msg timestamp="20201115 23:00:15.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.636" endtime="20201115 23:00:15.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:15.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:15.939" endtime="20201115 23:00:15.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:15.958" endtime="20201115 23:00:15.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.633" endtime="20201115 23:00:15.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.632" endtime="20201115 23:00:15.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:15.972" level="INFO">${RESULT} = [{'time': 0.021550417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4597999999997613e-05, 'source_diff': 1.4597999999997613e-05}, {'time': 0.021574431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:15.964" endtime="20201115 23:00:15.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.002" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:15.974" endtime="20201115 23:00:16.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.009" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.008" endtime="20201115 23:00:16.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.011" level="INFO">VALUE: [1.4597999999997613e-05, 1.4375000000000498e-05, 1.452700000000029e-05, 1.5000000000001124e-05, 1.4070000000001442e-05, 1.4193999999998624e-05, 1.4292000000002553e-05, 1.452700000000029e-05, 1.4819000000002719e-05, 1.452700000000029e-05, 1.4375000000000498e-05, 1.4457999999998444e-05, 1.4778000000000013e-05, 1.4679999999999555e-05, 1.4277999999999513e-05, 1.4138999999999818e-05, 1.4179999999999054e-05, 1.4500000000000624e-05, 1.481899999999925e-05, 1.4457999999998444e-05, 1.4916000000000235e-05, 1.4291999999999083e-05, 1.4180999999998528e-05, 1.4457999999998444e-05, 1.4486000000001054e-05, 1.4778000000000013e-05, 1.4500000000000624e-05, 1.4972000000001984e-05, 1.40689999999985e-05, 1.4749999999997404e-05, 1.5000000000001124e-05, 1.4013999999999693e-05, 1.4375000000000498e-05, 1.4097000000001109e-05, 1.4930999999999278e-05, 1.4834000000001762e-05, 1.4945000000002318e-05, 1.4444999999998348e-05, 1.4514000000000193e-05, 1.4250000000000373e-05, 1.4931000000002748e-05, 1.4874999999997529e-05, 1.4180999999998528e-05, 1.5041999999999833e-05, 1.4848000000001332e-05, 1.5014000000000693e-05, 1.4235999999997334e-05, 1.4208999999997668e-05, 1.4916999999999708e-05, 1.4903000000000138e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.010" endtime="20201115 23:00:16.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.004" endtime="20201115 23:00:16.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.014" endtime="20201115 23:00:16.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.018" endtime="20201115 23:00:16.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.016" endtime="20201115 23:00:16.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.013" endtime="20201115 23:00:16.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.602" endtime="20201115 23:00:16.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.600" endtime="20201115 23:00:16.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:15.599" endtime="20201115 23:00:16.039"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.041" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.050" endtime="20201115 23:00:16.065"></status>
</kw>
<msg timestamp="20201115 23:00:16.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.049" endtime="20201115 23:00:16.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.066" endtime="20201115 23:00:16.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.069" endtime="20201115 23:00:16.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.046" endtime="20201115 23:00:16.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.043" endtime="20201115 23:00:16.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.079" endtime="20201115 23:00:16.370"></status>
</kw>
<msg timestamp="20201115 23:00:16.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.077" endtime="20201115 23:00:16.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.374" endtime="20201115 23:00:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.382" endtime="20201115 23:00:16.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.075" endtime="20201115 23:00:16.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.073" endtime="20201115 23:00:16.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.389" level="INFO">${RESULT} = [{'time': 0.022394444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4221999999997764e-05, 'source_diff': 1.4221999999997764e-05}, {'time': 0.022416458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:16.386" endtime="20201115 23:00:16.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.402" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:16.390" endtime="20201115 23:00:16.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.407" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.406" endtime="20201115 23:00:16.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.409" level="INFO">VALUE: [1.4221999999997764e-05, 1.4263999999999943e-05, 1.405499999999893e-05, 1.4207999999998194e-05, 1.486099999999796e-05, 1.4278000000002983e-05, 1.4457999999998444e-05, 1.4916000000000235e-05, 1.4125000000000248e-05, 1.4250000000000373e-05, 1.4514000000000193e-05, 1.4416999999999208e-05, 1.4222000000001234e-05, 1.4486000000001054e-05, 1.4541999999999333e-05, 1.455499999999943e-05, 1.5000000000001124e-05, 1.4652999999999888e-05, 1.4167000000002428e-05, 1.4930999999999278e-05, 1.4944000000002844e-05, 1.4944999999998848e-05, 1.4472000000001484e-05, 1.461099999999771e-05, 1.4195000000001567e-05, 1.4666999999999458e-05, 1.4221999999997764e-05, 1.4528000000003233e-05, 1.481899999999925e-05, 1.4263999999999943e-05, 1.4541999999999333e-05, 1.4778000000000013e-05, 1.4333999999997793e-05, 1.4263999999999943e-05, 1.4597000000001609e-05, 1.476300000000097e-05, 1.480499999999968e-05, 1.4930999999999278e-05, 1.4666999999999458e-05, 1.4568999999999e-05, 1.5000000000001124e-05, 1.4735999999997834e-05, 1.502699999999732e-05, 1.4750000000000874e-05, 1.4736000000001304e-05, 1.4679999999999555e-05, 1.4361000000000929e-05, 1.4665999999999985e-05, 1.429099999999961e-05, 1.480499999999968e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.408" endtime="20201115 23:00:16.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.403" endtime="20201115 23:00:16.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.412" endtime="20201115 23:00:16.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.416" endtime="20201115 23:00:16.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.414" endtime="20201115 23:00:16.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.411" endtime="20201115 23:00:16.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.042" endtime="20201115 23:00:16.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.040" endtime="20201115 23:00:16.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.039" endtime="20201115 23:00:16.437"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.440" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.448" endtime="20201115 23:00:16.464"></status>
</kw>
<msg timestamp="20201115 23:00:16.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.446" endtime="20201115 23:00:16.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.466" endtime="20201115 23:00:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.469" endtime="20201115 23:00:16.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.444" endtime="20201115 23:00:16.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.442" endtime="20201115 23:00:16.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.477" endtime="20201115 23:00:16.763"></status>
</kw>
<msg timestamp="20201115 23:00:16.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.476" endtime="20201115 23:00:16.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022630028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.767" endtime="20201115 23:00:16.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.775" endtime="20201115 23:00:16.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.473" endtime="20201115 23:00:16.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.472" endtime="20201115 23:00:16.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:16.782" level="INFO">${RESULT} = [{'time': 0.022630028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.022651042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:16.778" endtime="20201115 23:00:16.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:16.795" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:16.783" endtime="20201115 23:00:16.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.800" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:16.799" endtime="20201115 23:00:16.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.802" level="INFO">VALUE: [1.5000000000001124e-05, 1.4236000000000804e-05, 1.5041999999999833e-05, 1.484699999999839e-05, 1.4429999999999304e-05, 1.4598000000001082e-05, 1.5014000000000693e-05, 1.4875000000000999e-05, 1.4153000000002858e-05, 1.4583000000002039e-05, 1.4292000000002553e-05, 1.4693999999999124e-05, 1.4861000000001429e-05, 1.4957999999998944e-05, 1.4944000000002844e-05, 1.4889000000000568e-05, 1.4097000000001109e-05, 1.4429999999999304e-05, 1.4555000000002899e-05, 1.4111000000000679e-05, 1.4069000000001969e-05, 1.477700000000054e-05, 1.429099999999961e-05, 1.4277999999999513e-05, 1.4833000000002289e-05, 1.405499999999893e-05, 1.4250000000000373e-05, 1.4652999999999888e-05, 1.4514000000000193e-05, 1.4972000000001984e-05, 1.4694999999998598e-05, 1.483299999999882e-05, 1.4666999999999458e-05, 1.5055999999999403e-05, 1.4277999999999513e-05, 1.4541999999999333e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4070000000001442e-05, 1.4055999999998403e-05, 1.4541999999999333e-05, 1.502700000000079e-05, 1.4819999999998723e-05, 1.4569999999998473e-05, 1.4944000000002844e-05, 1.4402999999999638e-05, 1.4138999999999818e-05, 1.4680999999999028e-05, 1.4457999999998444e-05, 1.4459000000001387e-05]</msg>
<status status="PASS" starttime="20201115 23:00:16.801" endtime="20201115 23:00:16.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.796" endtime="20201115 23:00:16.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.806" endtime="20201115 23:00:16.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:16.809" endtime="20201115 23:00:16.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.807" endtime="20201115 23:00:16.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.804" endtime="20201115 23:00:16.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.440" endtime="20201115 23:00:16.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.439" endtime="20201115 23:00:16.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.438" endtime="20201115 23:00:16.830"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.832" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.841" endtime="20201115 23:00:16.856"></status>
</kw>
<msg timestamp="20201115 23:00:16.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.839" endtime="20201115 23:00:16.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:16.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:16.857" endtime="20201115 23:00:16.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.860" endtime="20201115 23:00:16.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.837" endtime="20201115 23:00:16.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.834" endtime="20201115 23:00:16.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:16.869" endtime="20201115 23:00:17.155"></status>
</kw>
<msg timestamp="20201115 23:00:17.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:16.867" endtime="20201115 23:00:17.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.159" endtime="20201115 23:00:17.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.167" endtime="20201115 23:00:17.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.865" endtime="20201115 23:00:17.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.863" endtime="20201115 23:00:17.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.174" level="INFO">${RESULT} = [{'time': 0.022496014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4695000000002068e-05, 'source_diff': 1.4695000000002068e-05}, {'time': 0.022524042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:17.171" endtime="20201115 23:00:17.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.188" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:17.175" endtime="20201115 23:00:17.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.193" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.192" endtime="20201115 23:00:17.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.196" level="INFO">VALUE: [1.4695000000002068e-05, 1.4778000000000013e-05, 1.4125000000000248e-05, 1.4999999999997654e-05, 1.4903000000000138e-05, 1.4986000000001554e-05, 1.4764000000000443e-05, 1.4070000000001442e-05, 1.4930999999999278e-05, 1.4930999999999278e-05, 1.5014000000000693e-05, 1.4999999999997654e-05, 1.4764000000000443e-05, 1.4514000000000193e-05, 1.4527999999999763e-05, 1.4903000000000138e-05, 1.4473000000000957e-05, 1.4679999999999555e-05, 1.4472000000001484e-05, 1.4429999999999304e-05, 1.481899999999925e-05, 1.4415999999999735e-05, 1.4693999999999124e-05, 1.4957999999998944e-05, 1.4875000000000999e-05, 1.4305000000002649e-05, 1.431899999999875e-05, 1.4611000000001179e-05, 1.40689999999985e-05, 1.4221999999997764e-05, 1.4625000000000749e-05, 1.433299999999832e-05, 1.4472000000001484e-05, 1.4972000000001984e-05, 1.4291000000003079e-05, 1.408299999999807e-05, 1.4500000000000624e-05, 1.4291999999999083e-05, 1.4125000000000248e-05, 1.4833000000002289e-05, 1.458299999999857e-05, 1.4971999999998514e-05, 1.4611000000001179e-05, 1.4389000000000068e-05, 1.4930999999999278e-05, 1.4986000000001554e-05, 1.4417000000002678e-05, 1.4084000000001012e-05, 1.4151999999999915e-05, 1.4389000000000068e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.194" endtime="20201115 23:00:17.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.189" endtime="20201115 23:00:17.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.199" endtime="20201115 23:00:17.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.203" endtime="20201115 23:00:17.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.201" endtime="20201115 23:00:17.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.198" endtime="20201115 23:00:17.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.833" endtime="20201115 23:00:17.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.831" endtime="20201115 23:00:17.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:16.830" endtime="20201115 23:00:17.224"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.227" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.236" endtime="20201115 23:00:17.252"></status>
</kw>
<msg timestamp="20201115 23:00:17.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.234" endtime="20201115 23:00:17.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.253" endtime="20201115 23:00:17.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.256" endtime="20201115 23:00:17.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.231" endtime="20201115 23:00:17.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.229" endtime="20201115 23:00:17.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.265" endtime="20201115 23:00:17.551"></status>
</kw>
<msg timestamp="20201115 23:00:17.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023326597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.263" endtime="20201115 23:00:17.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023326597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.555" endtime="20201115 23:00:17.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.563" endtime="20201115 23:00:17.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.261" endtime="20201115 23:00:17.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.259" endtime="20201115 23:00:17.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.570" level="INFO">${RESULT} = [{'time': 0.023341028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4430999999998778e-05, 'source_diff': 1.4430999999998778e-05}, {'time': 0.023364056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:17.567" endtime="20201115 23:00:17.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.584" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:17.571" endtime="20201115 23:00:17.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.588" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.587" endtime="20201115 23:00:17.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.591" level="INFO">VALUE: [1.4430999999998778e-05, 1.4362000000000402e-05, 1.4652999999999888e-05, 1.4764000000000443e-05, 1.4527999999999763e-05, 1.4319999999998223e-05, 1.4874999999997529e-05, 1.454099999999986e-05, 1.4985999999998084e-05, 1.5041999999999833e-05, 1.4584000000001512e-05, 1.4694999999998598e-05, 1.4833000000002289e-05, 1.4861000000001429e-05, 1.479100000000011e-05, 1.4570000000001943e-05, 1.4263999999999943e-05, 1.4943999999999374e-05, 1.4472000000001484e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.4263999999999943e-05, 1.4929999999999805e-05, 1.4138999999999818e-05, 1.4568999999999e-05, 1.4985999999998084e-05, 1.4514000000000193e-05, 1.4778000000000013e-05, 1.4889000000000568e-05, 1.4083000000001539e-05, 1.4305000000002649e-05, 1.481899999999925e-05, 1.4221999999997764e-05, 1.5069999999998973e-05, 1.4166999999998958e-05, 1.4806000000002623e-05, 1.4541999999999333e-05, 1.4208000000001664e-05, 1.4430999999998778e-05, 1.4292000000002553e-05, 1.4986000000001554e-05, 1.4861000000001429e-05, 1.4930999999999278e-05, 1.4555999999998903e-05, 1.4402999999999638e-05, 1.4069999999997973e-05, 1.4277999999999513e-05, 1.4389000000000068e-05, 1.4694999999998598e-05, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.589" endtime="20201115 23:00:17.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.585" endtime="20201115 23:00:17.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.594" endtime="20201115 23:00:17.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.597" endtime="20201115 23:00:17.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.596" endtime="20201115 23:00:17.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.592" endtime="20201115 23:00:17.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.228" endtime="20201115 23:00:17.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.226" endtime="20201115 23:00:17.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.225" endtime="20201115 23:00:17.619"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.629" endtime="20201115 23:00:17.643"></status>
</kw>
<msg timestamp="20201115 23:00:17.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.628" endtime="20201115 23:00:17.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:17.645" endtime="20201115 23:00:17.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.648" endtime="20201115 23:00:17.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.625" endtime="20201115 23:00:17.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.623" endtime="20201115 23:00:17.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.657" endtime="20201115 23:00:17.943"></status>
</kw>
<msg timestamp="20201115 23:00:17.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.655" endtime="20201115 23:00:17.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:17.947" endtime="20201115 23:00:17.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.955" endtime="20201115 23:00:17.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.653" endtime="20201115 23:00:17.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.651" endtime="20201115 23:00:17.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:17.962" level="INFO">${RESULT} = [{'time': 0.021745569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.021765556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:17.959" endtime="20201115 23:00:17.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:17.975" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:17.963" endtime="20201115 23:00:17.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.980" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:00:17.979" endtime="20201115 23:00:17.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:17.982" level="INFO">VALUE: [1.4125000000000248e-05, 1.4194999999998098e-05, 1.4763999999996974e-05, 1.430499999999918e-05, 1.4708000000002164e-05, 1.4111000000000679e-05, 1.504100000000036e-05, 1.4722000000001734e-05, 1.4207999999998194e-05, 1.479100000000011e-05, 1.4278000000002983e-05, 1.4764000000000443e-05, 1.4389000000000068e-05, 1.5028000000000263e-05, 1.4652999999999888e-05, 1.5000000000001124e-05, 1.4514000000000193e-05, 1.4472000000001484e-05, 1.4152999999999388e-05, 1.4389000000000068e-05, 1.4972000000001984e-05, 1.4111000000000679e-05, 1.4235999999997334e-05, 1.4193999999998624e-05, 1.459699999999814e-05, 1.4250000000000373e-05, 1.4360999999997459e-05, 1.4207999999998194e-05, 1.4167000000002428e-05, 1.4500000000000624e-05, 1.4334000000001262e-05, 1.4903000000000138e-05, 1.4750000000000874e-05, 1.4944999999998848e-05, 1.5041999999999833e-05, 1.4152999999999388e-05, 1.4444999999998348e-05, 1.4834000000001762e-05, 1.4444999999998348e-05, 1.4735999999997834e-05, 1.4681000000002498e-05, 1.4527999999999763e-05, 1.4723000000001207e-05, 1.4361999999996933e-05, 1.4250000000000373e-05, 1.4652999999999888e-05, 1.5000000000001124e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.4902000000000665e-05]</msg>
<status status="PASS" starttime="20201115 23:00:17.981" endtime="20201115 23:00:17.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.976" endtime="20201115 23:00:17.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:17.986" endtime="20201115 23:00:17.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:17.989" endtime="20201115 23:00:18.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.987" endtime="20201115 23:00:18.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.984" endtime="20201115 23:00:18.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.622" endtime="20201115 23:00:18.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.620" endtime="20201115 23:00:18.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:17.619" endtime="20201115 23:00:18.010"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.012" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.021" endtime="20201115 23:00:18.035"></status>
</kw>
<msg timestamp="20201115 23:00:18.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.019" endtime="20201115 23:00:18.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.036" endtime="20201115 23:00:18.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.039" endtime="20201115 23:00:18.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.017" endtime="20201115 23:00:18.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.014" endtime="20201115 23:00:18.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.048" endtime="20201115 23:00:18.338"></status>
</kw>
<msg timestamp="20201115 23:00:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.046" endtime="20201115 23:00:18.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.342" endtime="20201115 23:00:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.350" endtime="20201115 23:00:18.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.043" endtime="20201115 23:00:18.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.042" endtime="20201115 23:00:18.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.357" level="INFO">${RESULT} = [{'time': 0.022213292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4944999999998848e-05, 'source_diff': 1.4944999999998848e-05}, {'time': 0.022234347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:18.354" endtime="20201115 23:00:18.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.370" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:18.358" endtime="20201115 23:00:18.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.375" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.374" endtime="20201115 23:00:18.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.377" level="INFO">VALUE: [1.4944999999998848e-05, 1.4208000000001664e-05, 1.4125000000000248e-05, 1.4598000000001082e-05, 1.4862000000000902e-05, 1.4416999999999208e-05, 1.5055999999999403e-05, 1.501300000000122e-05, 1.4334000000001262e-05, 1.4098000000000582e-05, 1.4750000000000874e-05, 1.4514000000000193e-05, 1.4888000000001095e-05, 1.4388000000000595e-05, 1.4333000000001789e-05, 1.4207999999998194e-05, 1.4986000000001554e-05, 1.4485999999997584e-05, 1.4305000000002649e-05, 1.4652999999999888e-05, 1.458299999999857e-05, 1.4527999999999763e-05, 1.4722000000001734e-05, 1.5028000000000263e-05, 1.4597000000001609e-05, 1.4208000000001664e-05, 1.4179999999999054e-05, 1.4472000000001484e-05, 1.4791999999999583e-05, 1.4916999999999708e-05, 1.4125000000000248e-05, 1.4250000000000373e-05, 1.4194000000002094e-05, 1.4693999999999124e-05, 1.4972000000001984e-05, 1.4430999999998778e-05, 1.40689999999985e-05, 1.4570000000001943e-05, 1.4972000000001984e-05, 1.4972000000001984e-05, 1.5028000000000263e-05, 1.4180999999998528e-05, 1.4194999999998098e-05, 1.4221999999997764e-05, 1.4166999999998958e-05, 1.4750000000000874e-05, 1.4916999999999708e-05, 1.4417000000002678e-05, 1.4722999999997738e-05, 1.4098000000000582e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.376" endtime="20201115 23:00:18.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.371" endtime="20201115 23:00:18.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.381" endtime="20201115 23:00:18.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.384" endtime="20201115 23:00:18.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.382" endtime="20201115 23:00:18.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.379" endtime="20201115 23:00:18.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.013" endtime="20201115 23:00:18.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.011" endtime="20201115 23:00:18.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.011" endtime="20201115 23:00:18.405"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.416" endtime="20201115 23:00:18.431"></status>
</kw>
<msg timestamp="20201115 23:00:18.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.414" endtime="20201115 23:00:18.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.432" endtime="20201115 23:00:18.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.435" endtime="20201115 23:00:18.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.411" endtime="20201115 23:00:18.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.409" endtime="20201115 23:00:18.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.444" endtime="20201115 23:00:18.728"></status>
</kw>
<msg timestamp="20201115 23:00:18.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.443" endtime="20201115 23:00:18.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.733" endtime="20201115 23:00:18.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.741" endtime="20201115 23:00:18.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.440" endtime="20201115 23:00:18.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.438" endtime="20201115 23:00:18.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:18.748" level="INFO">${RESULT} = [{'time': 0.022605764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.02263375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:18.744" endtime="20201115 23:00:18.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:18.762" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:18.749" endtime="20201115 23:00:18.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.767" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:00:18.765" endtime="20201115 23:00:18.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.769" level="INFO">VALUE: [1.6028000000001263e-05, 1.5736000000002304e-05, 1.541700000000021e-05, 1.5778000000001013e-05, 1.6041999999997364e-05, 1.5485999999998584e-05, 1.5735999999998834e-05, 1.5735999999998834e-05, 1.5555999999999903e-05, 1.5278000000000513e-05, 1.5833999999999293e-05, 1.5070000000002443e-05, 1.5875000000002e-05, 1.5833999999999293e-05, 1.591700000000071e-05, 1.5180999999999528e-05, 1.5999999999998654e-05, 1.566700000000046e-05, 1.5207999999999194e-05, 1.5152000000000915e-05, 1.5792000000000583e-05, 1.5931000000000278e-05, 1.5944999999999848e-05, 1.584699999999939e-05, 1.559699999999914e-05, 1.534699999999889e-05, 1.5721999999999264e-05, 1.5443999999999874e-05, 1.576300000000197e-05, 1.5722000000002734e-05, 1.5500000000001624e-05, 1.531899999999975e-05, 1.5235999999998334e-05, 1.509699999999864e-05, 1.583299999999982e-05, 1.533300000000279e-05, 1.5180000000000055e-05, 1.5263999999997474e-05, 1.5985999999999084e-05, 1.5249999999997904e-05, 1.5514000000001194e-05, 1.6028000000001263e-05, 1.5430999999999778e-05, 1.588900000000157e-05, 1.541700000000021e-05, 1.5180999999999528e-05, 1.5055999999999403e-05, 1.5875000000002e-05, 1.5472000000002484e-05, 1.5819999999999723e-05]</msg>
<status status="PASS" starttime="20201115 23:00:18.768" endtime="20201115 23:00:18.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.763" endtime="20201115 23:00:18.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.772" endtime="20201115 23:00:18.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:18.775" endtime="20201115 23:00:18.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.774" endtime="20201115 23:00:18.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.770" endtime="20201115 23:00:18.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.408" endtime="20201115 23:00:18.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.406" endtime="20201115 23:00:18.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.406" endtime="20201115 23:00:18.797"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.808" endtime="20201115 23:00:18.824"></status>
</kw>
<msg timestamp="20201115 23:00:18.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.806" endtime="20201115 23:00:18.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:18.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:18.825" endtime="20201115 23:00:18.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.828" endtime="20201115 23:00:18.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.803" endtime="20201115 23:00:18.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.801" endtime="20201115 23:00:18.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:18.837" endtime="20201115 23:00:19.121"></status>
</kw>
<msg timestamp="20201115 23:00:19.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:18.835" endtime="20201115 23:00:19.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.125" endtime="20201115 23:00:19.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.133" endtime="20201115 23:00:19.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.832" endtime="20201115 23:00:19.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.831" endtime="20201115 23:00:19.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.140" level="INFO">${RESULT} = [{'time': 0.022842014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6972000000000514e-05, 'source_diff': 1.6972000000000514e-05}, {'time': 0.022869, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:19.137" endtime="20201115 23:00:19.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.153" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:19.141" endtime="20201115 23:00:19.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.158" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.157" endtime="20201115 23:00:19.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.160" level="INFO">VALUE: [1.6972000000000514e-05, 1.6181000000000528e-05, 1.613899999999835e-05, 1.666699999999799e-05, 1.687499999999953e-05, 1.6945000000000848e-05, 1.6735999999999834e-05, 1.661099999999971e-05, 1.7014000000002694e-05, 1.6485999999999584e-05, 1.6570000000000473e-05, 1.6112000000002152e-05, 1.613900000000182e-05, 1.6972999999999988e-05, 1.6222999999999238e-05, 1.6986000000000084e-05, 1.6986999999999558e-05, 1.6929999999998335e-05, 1.6472000000000014e-05, 1.6416000000001735e-05, 1.627699999999857e-05, 1.6249999999998904e-05, 1.6972000000000514e-05, 1.636099999999946e-05, 1.6958000000000945e-05, 1.6208000000000194e-05, 1.691699999999824e-05, 1.631900000000075e-05, 1.6528000000001764e-05, 1.6749999999999404e-05, 1.662499999999928e-05, 1.636099999999946e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.6999999999999654e-05, 1.6929999999998335e-05, 1.609699999999964e-05, 1.605500000000093e-05, 1.661099999999971e-05, 1.6443999999997405e-05, 1.6570000000000473e-05, 1.6306000000000653e-05, 1.6542000000001333e-05, 1.6181000000000528e-05, 1.6820000000000723e-05, 1.6972000000000514e-05, 1.6735999999999834e-05, 1.6027999999997794e-05, 1.609699999999964e-05, 1.616699999999749e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.159" endtime="20201115 23:00:19.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.154" endtime="20201115 23:00:19.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.163" endtime="20201115 23:00:19.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.167" endtime="20201115 23:00:19.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.165" endtime="20201115 23:00:19.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.162" endtime="20201115 23:00:19.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.800" endtime="20201115 23:00:19.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.798" endtime="20201115 23:00:19.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:18.797" endtime="20201115 23:00:19.189"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.191" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.199" endtime="20201115 23:00:19.214"></status>
</kw>
<msg timestamp="20201115 23:00:19.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.198" endtime="20201115 23:00:19.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.216" endtime="20201115 23:00:19.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.218" endtime="20201115 23:00:19.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.195" endtime="20201115 23:00:19.220"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.193" endtime="20201115 23:00:19.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.227" endtime="20201115 23:00:19.513"></status>
</kw>
<msg timestamp="20201115 23:00:19.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.226" endtime="20201115 23:00:19.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.517" endtime="20201115 23:00:19.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.525" endtime="20201115 23:00:19.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.223" endtime="20201115 23:00:19.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.221" endtime="20201115 23:00:19.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.532" level="INFO">${RESULT} = [{'time': 0.021787389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.766700000000246e-05, 'source_diff': 1.766700000000246e-05}, {'time': 0.021811417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:19.528" endtime="20201115 23:00:19.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.545" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:19.532" endtime="20201115 23:00:19.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.549" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.548" endtime="20201115 23:00:19.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.552" level="INFO">VALUE: [1.766700000000246e-05, 1.741699999999874e-05, 1.7319999999997754e-05, 1.718100000000153e-05, 1.7250000000003374e-05, 1.7263999999999474e-05, 1.7569999999998004e-05, 1.741700000000221e-05, 1.7209000000000668e-05, 1.7263999999999474e-05, 1.791699999999924e-05, 1.7805999999998684e-05, 1.716699999999849e-05, 1.7459000000000918e-05, 1.7179999999998585e-05, 1.7500000000000154e-05, 1.7638000000000376e-05, 1.736100000000046e-05, 1.7958000000001945e-05, 1.7665999999999515e-05, 1.706899999999803e-05, 1.758300000000157e-05, 1.7791999999999114e-05, 1.7915999999999765e-05, 1.783299999999835e-05, 1.7971999999998045e-05, 1.794500000000185e-05, 1.7972000000001515e-05, 1.8014000000000224e-05, 1.791699999999924e-05, 1.78890000000001e-05, 1.743100000000178e-05, 1.78890000000001e-05, 1.7277999999999044e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.7791999999999114e-05, 1.7486000000000584e-05, 1.711100000000021e-05, 1.763899999999985e-05, 1.7306000000001653e-05, 1.7513999999999724e-05, 1.7459000000000918e-05, 1.7209000000000668e-05, 1.7972000000001515e-05, 1.73889999999996e-05, 1.7249999999999904e-05, 1.78890000000001e-05, 1.745899999999745e-05, 1.7361999999999933e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.551" endtime="20201115 23:00:19.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.546" endtime="20201115 23:00:19.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.556" endtime="20201115 23:00:19.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.559" endtime="20201115 23:00:19.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.557" endtime="20201115 23:00:19.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.554" endtime="20201115 23:00:19.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.191" endtime="20201115 23:00:19.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.190" endtime="20201115 23:00:19.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.189" endtime="20201115 23:00:19.580"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.582" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.591" endtime="20201115 23:00:19.606"></status>
</kw>
<msg timestamp="20201115 23:00:19.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.589" endtime="20201115 23:00:19.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.608" endtime="20201115 23:00:19.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.610" endtime="20201115 23:00:19.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.587" endtime="20201115 23:00:19.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.584" endtime="20201115 23:00:19.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.619" endtime="20201115 23:00:19.904"></status>
</kw>
<msg timestamp="20201115 23:00:19.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.618" endtime="20201115 23:00:19.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:19.908" endtime="20201115 23:00:19.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.917" endtime="20201115 23:00:19.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.615" endtime="20201115 23:00:19.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.614" endtime="20201115 23:00:19.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:19.923" level="INFO">${RESULT} = [{'time': 0.021805167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8209000000001668e-05, 'source_diff': 1.8209000000001668e-05}, {'time': 0.021835167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:19.920" endtime="20201115 23:00:19.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:19.937" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:19.924" endtime="20201115 23:00:19.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.941" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:00:19.940" endtime="20201115 23:00:19.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.944" level="INFO">VALUE: [1.8209000000001668e-05, 1.847299999999802e-05, 1.8305999999999184e-05, 1.8833999999998824e-05, 1.8320000000002223e-05, 1.894499999999938e-05, 1.82089999999982e-05, 1.866699999999999e-05, 1.901299999999828e-05, 1.8264000000000474e-05, 1.8402000000000696e-05, 1.82089999999982e-05, 1.895899999999895e-05, 1.8250000000000904e-05, 1.854100000000039e-05, 1.8708000000002695e-05, 1.87769999999976e-05, 1.8986000000002085e-05, 1.88890000000011e-05, 1.883299999999935e-05, 1.8721999999998795e-05, 1.8500000000001154e-05, 1.8999999999998185e-05, 1.8221999999998295e-05, 1.8235999999997865e-05, 1.833299999999885e-05, 1.815299999999992e-05, 1.8457999999998975e-05, 1.880500000000021e-05, 1.8179999999999585e-05, 1.843100000000278e-05, 1.840300000000017e-05, 1.9014000000001224e-05, 1.868099999999956e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.8721999999998795e-05, 1.866699999999999e-05, 1.8278000000000044e-05, 1.812499999999731e-05, 1.845899999999845e-05, 1.905500000000046e-05, 1.8861999999997964e-05, 1.8291999999999614e-05, 1.8429999999999835e-05, 1.8819999999999254e-05, 1.816700000000296e-05, 1.830499999999971e-05, 1.881899999999978e-05, 1.869499999999913e-05]</msg>
<status status="PASS" starttime="20201115 23:00:19.942" endtime="20201115 23:00:19.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.938" endtime="20201115 23:00:19.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.947" endtime="20201115 23:00:19.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:19.951" endtime="20201115 23:00:19.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.949" endtime="20201115 23:00:19.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.946" endtime="20201115 23:00:19.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.583" endtime="20201115 23:00:19.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.581" endtime="20201115 23:00:19.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.580" endtime="20201115 23:00:19.972"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:19.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:19.982" endtime="20201115 23:00:19.998"></status>
</kw>
<msg timestamp="20201115 23:00:19.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:19.981" endtime="20201115 23:00:19.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.000" endtime="20201115 23:00:20.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.002" endtime="20201115 23:00:20.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.978" endtime="20201115 23:00:20.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.976" endtime="20201115 23:00:20.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.011" endtime="20201115 23:00:20.297"></status>
</kw>
<msg timestamp="20201115 23:00:20.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.010" endtime="20201115 23:00:20.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.301" endtime="20201115 23:00:20.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.310" endtime="20201115 23:00:20.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.007" endtime="20201115 23:00:20.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.006" endtime="20201115 23:00:20.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.317" level="INFO">${RESULT} = [{'time': 0.022547819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9887999999999156e-05, 'source_diff': 1.9887999999999156e-05}, {'time': 0.022574819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:20.313" endtime="20201115 23:00:20.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.332" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:20.318" endtime="20201115 23:00:20.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.336" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.335" endtime="20201115 23:00:20.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.339" level="INFO">VALUE: [1.9887999999999156e-05, 1.9207999999999725e-05, 1.961100000000271e-05, 1.929100000000114e-05, 1.9430000000000835e-05, 2.002699999999885e-05, 1.95830000000001e-05, 1.933299999999985e-05, 1.983299999999688e-05, 1.9764000000001974e-05, 2.0013999999998755e-05, 1.9749999999998935e-05, 1.986099999999949e-05, 1.916700000000049e-05, 1.965299999999795e-05, 2.0000000000002655e-05, 1.934699999999942e-05, 1.969500000000013e-05, 1.99029999999982e-05, 1.968100000000056e-05, 1.9348000000002363e-05, 1.9166000000001016e-05, 1.944499999999988e-05, 1.9722000000003265e-05, 1.944499999999988e-05, 1.968100000000056e-05, 1.9542000000000864e-05, 1.9499999999998685e-05, 1.9513999999998255e-05, 2.0027999999998325e-05, 1.9749999999998935e-05, 1.9098000000002113e-05, 1.954100000000139e-05, 2.002699999999885e-05, 1.952700000000182e-05, 1.9098000000002113e-05, 1.9722000000003265e-05, 1.959699999999967e-05, 1.952700000000182e-05, 1.9901999999998726e-05, 1.9235999999998865e-05, 1.9457999999999975e-05, 2.0028000000001794e-05, 1.9471999999999545e-05, 1.9457999999999975e-05, 1.9680000000001086e-05, 1.9471999999999545e-05, 1.9972000000000045e-05, 1.94029999999977e-05, 1.9485999999999115e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.337" endtime="20201115 23:00:20.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.333" endtime="20201115 23:00:20.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.342" endtime="20201115 23:00:20.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.345" endtime="20201115 23:00:20.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.344" endtime="20201115 23:00:20.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.340" endtime="20201115 23:00:20.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.975" endtime="20201115 23:00:20.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.973" endtime="20201115 23:00:20.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:19.972" endtime="20201115 23:00:20.366"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.377" endtime="20201115 23:00:20.392"></status>
</kw>
<msg timestamp="20201115 23:00:20.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.375" endtime="20201115 23:00:20.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.394" endtime="20201115 23:00:20.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.396" endtime="20201115 23:00:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.373" endtime="20201115 23:00:20.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.371" endtime="20201115 23:00:20.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.406" endtime="20201115 23:00:20.693"></status>
</kw>
<msg timestamp="20201115 23:00:20.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.404" endtime="20201115 23:00:20.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.697" endtime="20201115 23:00:20.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.706" endtime="20201115 23:00:20.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.401" endtime="20201115 23:00:20.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.400" endtime="20201115 23:00:20.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:20.712" level="INFO">${RESULT} = [{'time': 0.022085333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0443999999997936e-05, 'source_diff': 2.0443999999997936e-05}, {'time': 0.022112417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:20.709" endtime="20201115 23:00:20.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:20.726" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:20.713" endtime="20201115 23:00:20.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.730" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:00:20.729" endtime="20201115 23:00:20.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.732" level="INFO">VALUE: [2.0443999999997936e-05, 2.0763999999999505e-05, 2.033300000000085e-05, 2.1013999999999755e-05, 2.037499999999956e-05, 2.1055999999998465e-05, 2.016700000000149e-05, 2.030499999999824e-05, 2.04029999999987e-05, 2.006900000000103e-05, 2.030500000000171e-05, 2.011099999999974e-05, 2.0263999999999005e-05, 2.037499999999956e-05, 2.061100000000024e-05, 2.018100000000106e-05, 2.0055999999997465e-05, 2.0277999999998575e-05, 2.084700000000092e-05, 2.059700000000067e-05, 2.0264000000002474e-05, 2.0777999999999075e-05, 2.0249999999999435e-05, 2.0820000000001254e-05, 2.015299999999845e-05, 2.0056000000000934e-05, 2.0319999999997285e-05, 2.040300000000217e-05, 2.043099999999784e-05, 2.0042000000001364e-05, 2.1000000000000185e-05, 2.0499999999999685e-05, 2.033300000000085e-05, 2.1013999999999755e-05, 2.0429999999998366e-05, 2.009700000000017e-05, 2.054100000000239e-05, 2.009700000000017e-05, 2.083299999999788e-05, 2.009700000000017e-05, 2.0542000000001864e-05, 2.061100000000024e-05, 2.1027999999999325e-05, 2.0679999999998616e-05, 2.0208000000000725e-05, 2.0277999999998575e-05, 2.0679999999998616e-05, 2.011099999999974e-05, 2.0764000000002975e-05, 2.0971999999997576e-05]</msg>
<status status="PASS" starttime="20201115 23:00:20.731" endtime="20201115 23:00:20.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.726" endtime="20201115 23:00:20.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.736" endtime="20201115 23:00:20.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:20.739" endtime="20201115 23:00:20.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.738" endtime="20201115 23:00:20.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.734" endtime="20201115 23:00:20.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.369" endtime="20201115 23:00:20.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.368" endtime="20201115 23:00:20.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.367" endtime="20201115 23:00:20.760"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.763" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.771" endtime="20201115 23:00:20.786"></status>
</kw>
<msg timestamp="20201115 23:00:20.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.769" endtime="20201115 23:00:20.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:20.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:20.787" endtime="20201115 23:00:20.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.790" endtime="20201115 23:00:20.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.767" endtime="20201115 23:00:20.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.764" endtime="20201115 23:00:20.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:20.799" endtime="20201115 23:00:21.085"></status>
</kw>
<msg timestamp="20201115 23:00:21.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:20.797" endtime="20201115 23:00:21.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.089" endtime="20201115 23:00:21.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.097" endtime="20201115 23:00:21.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.795" endtime="20201115 23:00:21.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.793" endtime="20201115 23:00:21.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.104" level="INFO">${RESULT} = [{'time': 0.021821806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.123700000000034e-05, 'source_diff': 2.123700000000034e-05}, {'time': 0.021852792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.100" endtime="20201115 23:00:21.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.117" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:21.105" endtime="20201115 23:00:21.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.122" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.121" endtime="20201115 23:00:21.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.124" level="INFO">VALUE: [2.123700000000034e-05, 2.1833999999998355e-05, 2.2026999999997382e-05, 2.1569999999998535e-05, 2.184700000000192e-05, 2.145900000000145e-05, 2.1944000000002906e-05, 2.1151999999999976e-05, 2.162500000000081e-05, 2.1444000000002406e-05, 2.10830000000016e-05, 2.1916000000000296e-05, 2.1415999999999796e-05, 2.10969999999977e-05, 2.137500000000056e-05, 2.1250000000000435e-05, 2.1277999999999575e-05, 2.187499999999759e-05, 2.1971999999998576e-05, 2.105500000000246e-05, 2.1221999999997826e-05, 2.1722000000001795e-05, 2.1194000000002156e-05, 2.1722000000001795e-05, 2.1485999999997646e-05, 2.1236000000000865e-05, 2.191699999999977e-05, 2.133300000000185e-05, 2.138900000000013e-05, 2.1514000000000255e-05, 2.166699999999952e-05, 2.1820000000002254e-05, 2.168099999999909e-05, 2.2014000000000755e-05, 2.187500000000106e-05, 2.12229999999973e-05, 2.1736000000001365e-05, 2.118100000000206e-05, 2.188899999999716e-05, 2.129099999999967e-05, 2.193099999999934e-05, 2.19030000000002e-05, 2.1388000000000656e-05, 2.183300000000235e-05, 2.126300000000053e-05, 2.186100000000149e-05, 2.1208000000001725e-05, 2.106899999999856e-05, 2.1901999999997257e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.123" endtime="20201115 23:00:21.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.118" endtime="20201115 23:00:21.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.127" endtime="20201115 23:00:21.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.130" endtime="20201115 23:00:21.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.129" endtime="20201115 23:00:21.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.126" endtime="20201115 23:00:21.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.763" endtime="20201115 23:00:21.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.761" endtime="20201115 23:00:21.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:20.761" endtime="20201115 23:00:21.152"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.162" endtime="20201115 23:00:21.179"></status>
</kw>
<msg timestamp="20201115 23:00:21.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.161" endtime="20201115 23:00:21.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.180" endtime="20201115 23:00:21.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.183" endtime="20201115 23:00:21.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.158" endtime="20201115 23:00:21.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.156" endtime="20201115 23:00:21.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.192" endtime="20201115 23:00:21.477"></status>
</kw>
<msg timestamp="20201115 23:00:21.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.191" endtime="20201115 23:00:21.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.482" endtime="20201115 23:00:21.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.490" endtime="20201115 23:00:21.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.188" endtime="20201115 23:00:21.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.186" endtime="20201115 23:00:21.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.496" level="INFO">${RESULT} = [{'time': 0.022350667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.219500000000263e-05, 'source_diff': 2.219500000000263e-05}, {'time': 0.022381681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.493" endtime="20201115 23:00:21.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.510" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:21.497" endtime="20201115 23:00:21.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.514" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.513" endtime="20201115 23:00:21.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.517" level="INFO">VALUE: [2.219500000000263e-05, 2.2528000000000825e-05, 2.211100000000174e-05, 2.290299999999773e-05, 2.286099999999902e-05, 2.2263999999997536e-05, 2.2569999999999535e-05, 2.238900000000113e-05, 2.2971999999999576e-05, 2.284699999999945e-05, 2.2514000000001255e-05, 2.2528000000000825e-05, 2.254100000000092e-05, 2.230500000000024e-05, 2.2430000000000366e-05, 2.2707999999999756e-05, 2.2749999999998466e-05, 2.25969999999992e-05, 2.2985999999999146e-05, 2.2430000000000366e-05, 2.2985999999999146e-05, 2.256900000000006e-05, 2.2792000000000645e-05, 2.262500000000181e-05, 2.2305999999999715e-05, 2.2528000000000825e-05, 2.2555999999999965e-05, 2.291700000000077e-05, 2.2292000000000145e-05, 2.2986000000002615e-05, 2.211099999999827e-05, 2.27090000000027e-05, 2.241700000000027e-05, 2.3027999999997856e-05, 2.269499999999966e-05, 2.2583999999999105e-05, 2.291700000000077e-05, 2.213900000000088e-05, 2.2764000000001505e-05, 2.2249999999997966e-05, 2.291700000000077e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.286099999999902e-05, 2.209700000000217e-05, 2.212500000000131e-05, 2.286099999999902e-05, 2.2944000000000436e-05, 2.2207999999999256e-05, 2.2443999999999936e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.515" endtime="20201115 23:00:21.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.511" endtime="20201115 23:00:21.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.520" endtime="20201115 23:00:21.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.523" endtime="20201115 23:00:21.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.522" endtime="20201115 23:00:21.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.518" endtime="20201115 23:00:21.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.155" endtime="20201115 23:00:21.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.153" endtime="20201115 23:00:21.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.152" endtime="20201115 23:00:21.544"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.555" endtime="20201115 23:00:21.573"></status>
</kw>
<msg timestamp="20201115 23:00:21.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.554" endtime="20201115 23:00:21.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.574" endtime="20201115 23:00:21.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.577" endtime="20201115 23:00:21.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.551" endtime="20201115 23:00:21.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.549" endtime="20201115 23:00:21.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.586" endtime="20201115 23:00:21.871"></status>
</kw>
<msg timestamp="20201115 23:00:21.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.584" endtime="20201115 23:00:21.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023997417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024020806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:21.875" endtime="20201115 23:00:21.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.883" endtime="20201115 23:00:21.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.582" endtime="20201115 23:00:21.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.580" endtime="20201115 23:00:21.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:21.890" level="INFO">${RESULT} = [{'time': 0.024020806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.338899999999866e-05, 'source_diff': 2.338899999999866e-05}, {'time': 0.024057806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:21.887" endtime="20201115 23:00:21.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:21.905" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:21.891" endtime="20201115 23:00:21.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.909" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:00:21.908" endtime="20201115 23:00:21.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.911" level="INFO">VALUE: [2.338899999999866e-05, 2.397300000000005e-05, 2.397300000000005e-05, 2.3776999999999132e-05, 2.3151999999998507e-05, 2.361099999999977e-05, 2.3776999999999132e-05, 2.306900000000056e-05, 2.3485999999999646e-05, 2.3957999999997537e-05, 2.362499999999934e-05, 2.340299999999823e-05, 2.3943999999997967e-05, 2.333300000000038e-05, 2.4041999999998426e-05, 2.3485999999999646e-05, 2.340299999999823e-05, 2.3292000000001145e-05, 2.3584000000000105e-05, 2.383300000000088e-05, 2.3763999999999036e-05, 2.383300000000088e-05, 2.4027999999998856e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.3777999999998606e-05, 2.337499999999909e-05, 2.395900000000048e-05, 2.3791999999998176e-05, 2.3333999999999855e-05, 2.3611999999999245e-05, 2.395900000000048e-05, 2.312499999999884e-05, 2.3527999999998356e-05, 2.334699999999995e-05, 2.318099999999712e-05, 2.3999999999999716e-05, 2.3735999999999896e-05, 2.3915999999998827e-05, 2.331900000000081e-05, 2.355500000000149e-05, 2.312499999999884e-05, 2.3790999999998702e-05, 2.3915999999998827e-05, 2.316700000000102e-05, 2.3221999999999826e-05, 2.3472000000000076e-05, 2.3958000000001006e-05, 2.3556000000000965e-05, 2.334699999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:00:21.910" endtime="20201115 23:00:21.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.906" endtime="20201115 23:00:21.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.915" endtime="20201115 23:00:21.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:21.919" endtime="20201115 23:00:21.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.917" endtime="20201115 23:00:21.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.913" endtime="20201115 23:00:21.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.547" endtime="20201115 23:00:21.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.546" endtime="20201115 23:00:21.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.545" endtime="20201115 23:00:21.940"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.950" endtime="20201115 23:00:21.966"></status>
</kw>
<msg timestamp="20201115 23:00:21.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.949" endtime="20201115 23:00:21.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:21.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:21.967" endtime="20201115 23:00:21.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.970" endtime="20201115 23:00:21.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.946" endtime="20201115 23:00:21.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.944" endtime="20201115 23:00:21.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:21.979" endtime="20201115 23:00:22.264"></status>
</kw>
<msg timestamp="20201115 23:00:22.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02176725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:21.977" endtime="20201115 23:00:22.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02176725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:22.268" endtime="20201115 23:00:22.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.276" endtime="20201115 23:00:22.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.975" endtime="20201115 23:00:22.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.973" endtime="20201115 23:00:22.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.283" level="INFO">${RESULT} = [{'time': 0.02176725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.44169999999988e-05, 'source_diff': 2.44169999999988e-05}, {'time': 0.02180225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2...</msg>
<status status="PASS" starttime="20201115 23:00:22.280" endtime="20201115 23:00:22.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.296" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:22.284" endtime="20201115 23:00:22.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.301" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.300" endtime="20201115 23:00:22.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.304" level="INFO">VALUE: [2.44169999999988e-05, 2.443099999999837e-05, 2.4541999999998926e-05, 2.4943999999998967e-05, 2.45970000000012e-05, 2.4305999999998246e-05, 2.4292000000002145e-05, 2.5014000000000286e-05, 2.4804999999999272e-05, 2.4972000000001576e-05, 2.495900000000148e-05, 2.4277999999999106e-05, 2.4084000000000605e-05, 2.419499999999769e-05, 2.4056000000001465e-05, 2.4486000000000646e-05, 2.495899999999801e-05, 2.412499999999984e-05, 2.4263999999999536e-05, 2.465300000000295e-05, 2.4834000000001355e-05, 2.4846999999997982e-05, 2.4221999999997357e-05, 2.4472000000001076e-05, 2.411100000000027e-05, 2.4540999999999452e-05, 2.465299999999948e-05, 2.4722000000001326e-05, 2.4513999999999786e-05, 2.484700000000145e-05, 2.4318999999998342e-05, 2.468100000000209e-05, 2.462499999999687e-05, 2.437500000000009e-05, 2.465299999999948e-05, 2.466700000000252e-05, 2.5000000000000716e-05, 2.4750000000000466e-05, 2.463899999999991e-05, 2.443099999999837e-05, 2.4249999999999966e-05, 2.413900000000288e-05, 2.4820000000001785e-05, 2.4735999999997427e-05, 2.4570000000001535e-05, 2.4791999999999176e-05, 2.4305999999998246e-05, 2.4401999999999757e-05, 2.436100000000052e-05, 2.4249999999999966e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.302" endtime="20201115 23:00:22.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.297" endtime="20201115 23:00:22.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.312" endtime="20201115 23:00:22.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.316" endtime="20201115 23:00:22.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.314" endtime="20201115 23:00:22.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.310" endtime="20201115 23:00:22.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.943" endtime="20201115 23:00:22.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.941" endtime="20201115 23:00:22.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:21.940" endtime="20201115 23:00:22.337"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.347" endtime="20201115 23:00:22.363"></status>
</kw>
<msg timestamp="20201115 23:00:22.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.346" endtime="20201115 23:00:22.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.364" endtime="20201115 23:00:22.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.367" endtime="20201115 23:00:22.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.343" endtime="20201115 23:00:22.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.341" endtime="20201115 23:00:22.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.376" endtime="20201115 23:00:22.660"></status>
</kw>
<msg timestamp="20201115 23:00:22.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.375" endtime="20201115 23:00:22.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.665" endtime="20201115 23:00:22.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.673" endtime="20201115 23:00:22.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.372" endtime="20201115 23:00:22.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.370" endtime="20201115 23:00:22.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:22.680" level="INFO">${RESULT} = [{'time': 0.021801347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6013999999997817e-05, 'source_diff': 2.6013999999997817e-05}, {'time': 0.021833347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:22.676" endtime="20201115 23:00:22.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:22.693" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:22.681" endtime="20201115 23:00:22.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.697" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:00:22.696" endtime="20201115 23:00:22.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.700" level="INFO">VALUE: [2.6013999999997817e-05, 2.5693999999999717e-05, 2.5193999999999217e-05, 2.5305999999999246e-05, 2.5264000000000536e-05, 2.5082999999998662e-05, 2.5735999999998427e-05, 2.5472000000002076e-05, 2.5971999999999107e-05, 2.6014000000001286e-05, 2.566700000000005e-05, 2.5541999999999926e-05, 2.595899999999901e-05, 2.5070000000002035e-05, 2.5083999999998136e-05, 2.516699999999955e-05, 2.586100000000202e-05, 2.5098000000001175e-05, 2.568099999999962e-05, 2.5943999999999967e-05, 2.5457999999999037e-05, 2.5054999999999522e-05, 2.5582999999999162e-05, 2.537500000000109e-05, 2.5429999999999897e-05, 2.5916000000000827e-05, 2.5207999999998787e-05, 2.566700000000005e-05, 2.5485999999998177e-05, 2.5235999999997927e-05, 2.6000000000001716e-05, 2.5707999999999287e-05, 2.5514000000000786e-05, 2.562500000000134e-05, 2.5278000000000106e-05, 2.5068999999999092e-05, 2.5736000000001896e-05, 2.5250000000000966e-05, 2.5194000000002686e-05, 2.5721999999998857e-05, 2.6041999999996956e-05, 2.5721999999998857e-05, 2.519500000000216e-05, 2.5750000000001466e-05, 2.540300000000023e-05, 2.5221999999998357e-05, 2.536100000000152e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5291999999999676e-05]</msg>
<status status="PASS" starttime="20201115 23:00:22.698" endtime="20201115 23:00:22.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.694" endtime="20201115 23:00:22.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.704" endtime="20201115 23:00:22.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:22.707" endtime="20201115 23:00:22.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.706" endtime="20201115 23:00:22.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.702" endtime="20201115 23:00:22.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.340" endtime="20201115 23:00:22.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.338" endtime="20201115 23:00:22.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.337" endtime="20201115 23:00:22.728"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.730" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.739" endtime="20201115 23:00:22.754"></status>
</kw>
<msg timestamp="20201115 23:00:22.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.737" endtime="20201115 23:00:22.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:22.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:22.755" endtime="20201115 23:00:22.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.758" endtime="20201115 23:00:22.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.735" endtime="20201115 23:00:22.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.732" endtime="20201115 23:00:22.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:22.767" endtime="20201115 23:00:23.052"></status>
</kw>
<msg timestamp="20201115 23:00:23.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:22.765" endtime="20201115 23:00:23.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021737361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.056" endtime="20201115 23:00:23.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.064" endtime="20201115 23:00:23.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.762" endtime="20201115 23:00:23.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.761" endtime="20201115 23:00:23.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.071" level="INFO">${RESULT} = [{'time': 0.021763792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.643100000000037e-05, 'source_diff': 2.643100000000037e-05}, {'time': 0.021801778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:23.068" endtime="20201115 23:00:23.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.085" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:23.072" endtime="20201115 23:00:23.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.089" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.088" endtime="20201115 23:00:23.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.092" level="INFO">VALUE: [2.643100000000037e-05, 2.645899999999951e-05, 2.6583000000000162e-05, 2.616700000000055e-05, 2.6665999999998108e-05, 2.6096999999999232e-05, 2.647300000000255e-05, 2.6791000000001702e-05, 2.693100000000087e-05, 2.6096999999999232e-05, 2.6804999999997803e-05, 2.6820000000000316e-05, 2.6568999999997123e-05, 2.662500000000234e-05, 2.6583000000000162e-05, 2.6944000000000967e-05, 2.6596999999999732e-05, 2.6583000000000162e-05, 2.6305000000000772e-05, 2.6721999999999857e-05, 2.6305000000000772e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6874999999999122e-05, 2.6486000000002646e-05, 2.666700000000105e-05, 2.6610999999999302e-05, 2.6263999999998067e-05, 2.6207999999999787e-05, 2.644499999999994e-05, 2.6846999999999982e-05, 2.69170000000013e-05, 2.6513999999998317e-05, 2.6333999999999386e-05, 2.6444000000000467e-05, 2.669500000000019e-05, 2.6514000000001786e-05, 2.6486000000002646e-05, 2.6277999999997637e-05, 2.6860999999999552e-05, 2.6764000000002036e-05, 2.6069999999999566e-05, 2.6888999999998692e-05, 2.611100000000227e-05, 2.6874999999999122e-05, 2.6401999999998288e-05, 2.6124999999998372e-05, 2.6236000000002396e-05, 2.6471999999999607e-05, 2.6235999999998927e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.090" endtime="20201115 23:00:23.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.086" endtime="20201115 23:00:23.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.095" endtime="20201115 23:00:23.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.098" endtime="20201115 23:00:23.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.097" endtime="20201115 23:00:23.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.093" endtime="20201115 23:00:23.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.731" endtime="20201115 23:00:23.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.729" endtime="20201115 23:00:23.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:22.729" endtime="20201115 23:00:23.119"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.122" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.130" endtime="20201115 23:00:23.146"></status>
</kw>
<msg timestamp="20201115 23:00:23.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.128" endtime="20201115 23:00:23.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.148" endtime="20201115 23:00:23.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.150" endtime="20201115 23:00:23.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.126" endtime="20201115 23:00:23.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.124" endtime="20201115 23:00:23.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.159" endtime="20201115 23:00:23.444"></status>
</kw>
<msg timestamp="20201115 23:00:23.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.158" endtime="20201115 23:00:23.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.448" endtime="20201115 23:00:23.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.457" endtime="20201115 23:00:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.155" endtime="20201115 23:00:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.153" endtime="20201115 23:00:23.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.464" level="INFO">${RESULT} = [{'time': 0.022520292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.022561292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.460" endtime="20201115 23:00:23.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.478" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:23.465" endtime="20201115 23:00:23.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.483" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.482" endtime="20201115 23:00:23.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.485" level="INFO">VALUE: [2.7624999999999872e-05, 2.8000000000000247e-05, 2.7124999999999372e-05, 2.697299999999958e-05, 2.7611999999999776e-05, 2.8000000000000247e-05, 2.7749999999999997e-05, 2.7694000000001717e-05, 2.7721999999997388e-05, 2.788799999999675e-05, 2.7333000000000912e-05, 2.7986000000000677e-05, 2.7583000000001162e-05, 2.747300000000008e-05, 2.7611000000000302e-05, 2.7179999999998178e-05, 2.715299999999851e-05, 2.7792000000002176e-05, 2.7638999999999442e-05, 2.7875000000000122e-05, 2.716700000000155e-05, 2.7986000000000677e-05, 2.7110999999999802e-05, 2.793100000000187e-05, 2.794500000000144e-05, 2.7792000000002176e-05, 2.7902999999999262e-05, 2.7235999999999927e-05, 2.7736000000000427e-05, 2.790300000000273e-05, 2.7514000000002786e-05, 2.744500000000094e-05, 2.7056000000000996e-05, 2.7875000000000122e-05, 2.7722000000000857e-05, 2.72369999999994e-05, 2.7819000000001842e-05, 2.7083000000000662e-05, 2.7291000000002202e-05, 2.7263999999999067e-05, 2.718100000000112e-05, 2.7430000000001897e-05, 2.8000000000000247e-05, 2.7582999999997693e-05, 2.7249999999999497e-05, 2.7665999999999108e-05, 2.7054999999998053e-05, 2.74170000000018e-05, 2.7179999999998178e-05, 2.7693999999998248e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.484" endtime="20201115 23:00:23.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.479" endtime="20201115 23:00:23.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.488" endtime="20201115 23:00:23.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.492" endtime="20201115 23:00:23.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.490" endtime="20201115 23:00:23.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.487" endtime="20201115 23:00:23.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.122" endtime="20201115 23:00:23.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.121" endtime="20201115 23:00:23.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.120" endtime="20201115 23:00:23.513"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.515" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.523" endtime="20201115 23:00:23.539"></status>
</kw>
<msg timestamp="20201115 23:00:23.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.522" endtime="20201115 23:00:23.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.541" endtime="20201115 23:00:23.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.543" endtime="20201115 23:00:23.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.519" endtime="20201115 23:00:23.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.517" endtime="20201115 23:00:23.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.553" endtime="20201115 23:00:23.838"></status>
</kw>
<msg timestamp="20201115 23:00:23.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.551" endtime="20201115 23:00:23.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.843" endtime="20201115 23:00:23.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.851" endtime="20201115 23:00:23.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.548" endtime="20201115 23:00:23.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.546" endtime="20201115 23:00:23.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:23.858" level="INFO">${RESULT} = [{'time': 0.021778528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8374999999997152e-05, 'source_diff': 2.8374999999997152e-05}, {'time': 0.021812528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:23.854" endtime="20201115 23:00:23.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:23.871" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:23.859" endtime="20201115 23:00:23.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.875" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:00:23.874" endtime="20201115 23:00:23.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.878" level="INFO">VALUE: [2.8374999999997152e-05, 2.8097000000001232e-05, 2.8097000000001232e-05, 2.8389000000000192e-05, 2.8862000000001026e-05, 2.8125000000000372e-05, 2.8264000000000067e-05, 2.8972000000002107e-05, 2.8612000000000776e-05, 2.9027000000000913e-05, 2.8514000000000317e-05, 2.8568999999999123e-05, 2.8624999999997403e-05, 2.8500000000000747e-05, 2.8054999999999053e-05, 2.8639000000000442e-05, 2.8097000000001232e-05, 2.8125000000000372e-05, 2.8443999999998998e-05, 2.8486000000001177e-05, 2.8389000000000192e-05, 2.8250000000000497e-05, 2.8152999999999512e-05, 2.894500000000244e-05, 2.84309999999989e-05, 2.8721999999998388e-05, 2.9041999999999957e-05, 2.8249999999997027e-05, 2.870900000000176e-05, 2.8152999999999512e-05, 2.8763999999997097e-05, 2.9000000000001247e-05, 2.8319999999998346e-05, 2.9027999999996917e-05, 2.8514000000000317e-05, 2.8834000000001886e-05, 2.8804999999999803e-05, 2.8138000000000468e-05, 2.8250000000000497e-05, 2.8415999999999858e-05, 2.866599999999664e-05, 2.9082999999999193e-05, 2.8889000000000692e-05, 2.8611000000001302e-05, 2.8818999999999373e-05, 2.8347000000001482e-05, 2.8999999999997778e-05, 2.8582999999998693e-05, 2.9000000000001247e-05, 2.8707999999998818e-05]</msg>
<status status="PASS" starttime="20201115 23:00:23.877" endtime="20201115 23:00:23.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.872" endtime="20201115 23:00:23.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.881" endtime="20201115 23:00:23.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:23.884" endtime="20201115 23:00:23.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.883" endtime="20201115 23:00:23.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.879" endtime="20201115 23:00:23.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.516" endtime="20201115 23:00:23.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.514" endtime="20201115 23:00:23.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.513" endtime="20201115 23:00:23.906"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.916" endtime="20201115 23:00:23.932"></status>
</kw>
<msg timestamp="20201115 23:00:23.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.914" endtime="20201115 23:00:23.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:23.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:23.934" endtime="20201115 23:00:23.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.937" endtime="20201115 23:00:23.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.912" endtime="20201115 23:00:23.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.910" endtime="20201115 23:00:23.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:23.946" endtime="20201115 23:00:24.231"></status>
</kw>
<msg timestamp="20201115 23:00:24.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:23.944" endtime="20201115 23:00:24.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021706556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.235" endtime="20201115 23:00:24.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.243" endtime="20201115 23:00:24.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.942" endtime="20201115 23:00:24.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.940" endtime="20201115 23:00:24.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.250" level="INFO">${RESULT} = [{'time': 0.021706556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9069999999999097e-05, 'source_diff': 2.9069999999999097e-05}, {'time': 0.021744556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:24.247" endtime="20201115 23:00:24.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.264" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:24.251" endtime="20201115 23:00:24.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.268" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.267" endtime="20201115 23:00:24.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.271" level="INFO">VALUE: [2.9069999999999097e-05, 2.9598000000002206e-05, 3.0027999999997917e-05, 2.9499999999998278e-05, 2.9846999999999513e-05, 2.9207999999999318e-05, 2.9777999999997667e-05, 2.9111000000001802e-05, 2.9916000000001358e-05, 2.9999999999998778e-05, 2.9180000000000178e-05, 2.9735999999998958e-05, 2.918100000000312e-05, 2.9792000000000707e-05, 2.9694000000000248e-05, 2.919500000000269e-05, 2.9068999999999623e-05, 2.9569999999999597e-05, 2.9888999999998223e-05, 2.9264000000001067e-05, 2.995899999999954e-05, 2.9528000000000887e-05, 2.9403000000000762e-05, 2.9096999999998763e-05, 2.9084000000002136e-05, 2.9137999999998e-05, 2.9112000000001276e-05, 2.9041000000000483e-05, 3.0026999999998444e-05, 2.9541000000000983e-05, 2.9846999999999513e-05, 2.9514000000001317e-05, 2.9985999999999208e-05, 2.9846999999999513e-05, 2.9457999999999568e-05, 2.9707999999999818e-05, 2.9958000000000068e-05, 2.917999999999671e-05, 2.9944000000000498e-05, 2.9097000000002232e-05, 2.9846999999999513e-05, 2.9055000000000053e-05, 2.9068999999999623e-05, 2.9667000000000582e-05, 2.9167000000000082e-05, 2.9055999999999527e-05, 2.9348000000001956e-05, 2.9527999999997417e-05, 2.9931000000000402e-05, 2.9584000000002636e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.269" endtime="20201115 23:00:24.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.265" endtime="20201115 23:00:24.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.274" endtime="20201115 23:00:24.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.277" endtime="20201115 23:00:24.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.276" endtime="20201115 23:00:24.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.272" endtime="20201115 23:00:24.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.909" endtime="20201115 23:00:24.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.907" endtime="20201115 23:00:24.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:23.906" endtime="20201115 23:00:24.298"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.301" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.309" endtime="20201115 23:00:24.325"></status>
</kw>
<msg timestamp="20201115 23:00:24.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.308" endtime="20201115 23:00:24.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.326" endtime="20201115 23:00:24.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.329" endtime="20201115 23:00:24.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.305" endtime="20201115 23:00:24.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.302" endtime="20201115 23:00:24.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.339" endtime="20201115 23:00:24.624"></status>
</kw>
<msg timestamp="20201115 23:00:24.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.337" endtime="20201115 23:00:24.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022611819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022642264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.628" endtime="20201115 23:00:24.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.637" endtime="20201115 23:00:24.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.334" endtime="20201115 23:00:24.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.332" endtime="20201115 23:00:24.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:24.643" level="INFO">${RESULT} = [{'time': 0.022642264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.022684264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:24.640" endtime="20201115 23:00:24.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:24.656" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:24.644" endtime="20201115 23:00:24.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.661" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:00:24.660" endtime="20201115 23:00:24.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.663" level="INFO">VALUE: [3.044500000000047e-05, 3.0181000000000652e-05, 3.070800000000082e-05, 3.0333999999999917e-05, 3.083300000000094e-05, 3.0417000000001332e-05, 3.0138999999998473e-05, 3.094500000000097e-05, 3.0153000000001512e-05, 3.041599999999839e-05, 3.088899999999922e-05, 3.092999999999846e-05, 3.072200000000039e-05, 3.0124999999998903e-05, 3.016599999999814e-05, 3.0264000000002067e-05, 3.0042000000000957e-05, 3.0526999999998944e-05, 3.0181000000000652e-05, 3.073599999999996e-05, 3.090300000000226e-05, 3.0264000000002067e-05, 3.06249999999994e-05, 3.099999999999978e-05, 3.0472000000000138e-05, 3.052799999999842e-05, 3.0374999999999153e-05, 3.0166999999997612e-05, 3.0124999999998903e-05, 3.077799999999867e-05, 3.059700000000026e-05, 3.082000000000085e-05, 3.0750000000003e-05, 3.0264000000002067e-05, 3.105599999999806e-05, 3.0361999999999056e-05, 3.0291999999997737e-05, 3.0221999999999888e-05, 3.0776999999999194e-05, 3.09440000000015e-05, 3.0138999999998473e-05, 3.072200000000039e-05, 3.074999999999953e-05, 3.0290999999998264e-05, 3.074999999999953e-05, 3.067999999999821e-05, 3.090299999999879e-05, 3.0083000000000193e-05, 3.0278000000001637e-05, 3.069400000000125e-05]</msg>
<status status="PASS" starttime="20201115 23:00:24.662" endtime="20201115 23:00:24.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.657" endtime="20201115 23:00:24.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.667" endtime="20201115 23:00:24.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:24.670" endtime="20201115 23:00:24.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.668" endtime="20201115 23:00:24.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.665" endtime="20201115 23:00:24.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.301" endtime="20201115 23:00:24.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.299" endtime="20201115 23:00:24.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.299" endtime="20201115 23:00:24.692"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.694" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.702" endtime="20201115 23:00:24.718"></status>
</kw>
<msg timestamp="20201115 23:00:24.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.700" endtime="20201115 23:00:24.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:24.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:24.720" endtime="20201115 23:00:24.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.722" endtime="20201115 23:00:24.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.698" endtime="20201115 23:00:24.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.696" endtime="20201115 23:00:24.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:24.731" endtime="20201115 23:00:25.017"></status>
</kw>
<msg timestamp="20201115 23:00:25.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:24.730" endtime="20201115 23:00:25.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.021" endtime="20201115 23:00:25.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.029" endtime="20201115 23:00:25.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.727" endtime="20201115 23:00:25.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.725" endtime="20201115 23:00:25.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.036" level="INFO">${RESULT} = [{'time': 0.022565569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.137500000000015e-05, 'source_diff': 3.137500000000015e-05}, {'time': 0.022603597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.032" endtime="20201115 23:00:25.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.050" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:25.037" endtime="20201115 23:00:25.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.055" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.054" endtime="20201115 23:00:25.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.057" level="INFO">VALUE: [3.137500000000015e-05, 3.197199999999817e-05, 3.1790999999999764e-05, 3.16250000000004e-05, 3.151399999999985e-05, 3.17640000000001e-05, 3.175000000000053e-05, 3.172200000000139e-05, 3.143000000000243e-05, 3.1332999999997974e-05, 3.201400000000035e-05, 3.191699999999936e-05, 3.193099999999893e-05, 3.177799999999967e-05, 3.111099999999686e-05, 3.141699999999886e-05, 3.138899999999972e-05, 3.180600000000228e-05, 3.190300000000326e-05, 3.140300000000276e-05, 3.1568999999998654e-05, 3.188900000000022e-05, 3.191699999999936e-05, 3.145900000000104e-05, 3.125000000000003e-05, 3.175000000000053e-05, 3.169500000000172e-05, 3.197200000000164e-05, 3.120800000000132e-05, 3.138899999999972e-05, 3.141599999999939e-05, 3.129100000000273e-05, 3.123600000000046e-05, 3.140299999999929e-05, 3.109700000000076e-05, 3.192999999999946e-05, 3.136100000000058e-05, 3.169399999999878e-05, 3.136100000000058e-05, 3.122200000000089e-05, 3.1444999999998e-05, 3.111100000000033e-05, 3.125000000000003e-05, 3.204199999999949e-05, 3.115300000000251e-05, 3.16250000000004e-05, 3.159799999999727e-05, 3.116699999999861e-05, 3.119399999999828e-05, 3.106999999999763e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.056" endtime="20201115 23:00:25.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.051" endtime="20201115 23:00:25.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.061" endtime="20201115 23:00:25.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.064" endtime="20201115 23:00:25.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.063" endtime="20201115 23:00:25.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.059" endtime="20201115 23:00:25.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.694" endtime="20201115 23:00:25.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.693" endtime="20201115 23:00:25.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:24.692" endtime="20201115 23:00:25.086"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.096" endtime="20201115 23:00:25.111"></status>
</kw>
<msg timestamp="20201115 23:00:25.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.094" endtime="20201115 23:00:25.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.113" endtime="20201115 23:00:25.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.115" endtime="20201115 23:00:25.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.092" endtime="20201115 23:00:25.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.090" endtime="20201115 23:00:25.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.124" endtime="20201115 23:00:25.410"></status>
</kw>
<msg timestamp="20201115 23:00:25.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.123" endtime="20201115 23:00:25.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.414" endtime="20201115 23:00:25.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.422" endtime="20201115 23:00:25.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.120" endtime="20201115 23:00:25.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.119" endtime="20201115 23:00:25.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.429" level="INFO">${RESULT} = [{'time': 0.021762958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.268000000000021e-05, 'source_diff': 3.268000000000021e-05}, {'time': 0.021801958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:25.426" endtime="20201115 23:00:25.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.442" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:25.430" endtime="20201115 23:00:25.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.447" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.446" endtime="20201115 23:00:25.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.450" level="INFO">VALUE: [3.268000000000021e-05, 3.265200000000107e-05, 3.2346999999998544e-05, 3.273599999999849e-05, 3.280599999999981e-05, 3.2805000000000334e-05, 3.208300000000219e-05, 3.272199999999892e-05, 3.2624999999997933e-05, 3.279200000000024e-05, 3.223599999999799e-05, 3.304199999999702e-05, 3.219499999999875e-05, 3.22640000000006e-05, 3.2874999999998183e-05, 3.230599999999931e-05, 3.2596999999998794e-05, 3.254199999999999e-05, 3.293099999999993e-05, 3.240300000000029e-05, 3.238899999999725e-05, 3.2541000000000514e-05, 3.2513000000001374e-05, 3.265299999999707e-05, 3.244399999999953e-05, 3.223599999999799e-05, 3.211100000000133e-05, 3.27640000000011e-05, 3.2068999999999154e-05, 3.273600000000196e-05, 3.26250000000014e-05, 3.298600000000221e-05, 3.227800000000017e-05, 3.216699999999961e-05, 3.24579999999991e-05, 3.222199999999842e-05, 3.243099999999943e-05, 3.294500000000297e-05, 3.256999999999913e-05, 3.250000000000128e-05, 3.2860999999998614e-05, 3.284799999999852e-05, 3.234700000000201e-05, 3.248600000000171e-05, 3.273600000000196e-05, 3.227800000000017e-05, 3.25839999999987e-05, 3.255599999999956e-05, 3.290299999999732e-05, 3.204200000000296e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.448" endtime="20201115 23:00:25.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.443" endtime="20201115 23:00:25.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.453" endtime="20201115 23:00:25.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.456" endtime="20201115 23:00:25.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.455" endtime="20201115 23:00:25.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.451" endtime="20201115 23:00:25.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.088" endtime="20201115 23:00:25.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.087" endtime="20201115 23:00:25.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.086" endtime="20201115 23:00:25.478"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.480" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.488" endtime="20201115 23:00:25.505"></status>
</kw>
<msg timestamp="20201115 23:00:25.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.487" endtime="20201115 23:00:25.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.506" endtime="20201115 23:00:25.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.509" endtime="20201115 23:00:25.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.484" endtime="20201115 23:00:25.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.482" endtime="20201115 23:00:25.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.518" endtime="20201115 23:00:25.803"></status>
</kw>
<msg timestamp="20201115 23:00:25.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.516" endtime="20201115 23:00:25.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.807" endtime="20201115 23:00:25.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.815" endtime="20201115 23:00:25.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.514" endtime="20201115 23:00:25.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.512" endtime="20201115 23:00:25.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:25.822" level="INFO">${RESULT} = [{'time': 0.022395958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3610999999999364e-05, 'source_diff': 3.3610999999999364e-05}, {'time': 0.022437944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:25.819" endtime="20201115 23:00:25.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:25.836" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:25.823" endtime="20201115 23:00:25.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.840" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:00:25.839" endtime="20201115 23:00:25.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.843" level="INFO">VALUE: [3.3610999999999364e-05, 3.4041000000002014e-05, 3.3346999999999544e-05, 3.336100000000258e-05, 3.3596999999999794e-05, 3.316600000000114e-05, 3.3276999999998225e-05, 3.341599999999792e-05, 3.340300000000129e-05, 3.3818999999997434e-05, 3.3596999999999794e-05, 3.3082999999999724e-05, 3.394400000000103e-05, 3.398599999999974e-05, 3.391699999999789e-05, 3.315300000000104e-05, 3.341699999999739e-05, 3.380600000000081e-05, 3.397299999999964e-05, 3.401399999999888e-05, 3.323599999999899e-05, 3.384800000000299e-05, 3.373699999999896e-05, 3.36519999999986e-05, 3.390199999999885e-05, 3.340200000000182e-05, 3.380600000000081e-05, 3.366599999999817e-05, 3.3818999999997434e-05, 3.3445e-05, 3.325000000000203e-05, 3.3082999999999724e-05, 3.320799999999985e-05, 3.340300000000129e-05, 3.352800000000142e-05, 3.347199999999967e-05, 3.401399999999888e-05, 3.380600000000081e-05, 3.37779999999982e-05, 3.399999999999931e-05, 3.3346999999999544e-05, 3.330600000000031e-05, 3.3624999999998934e-05, 3.401399999999888e-05, 3.372299999999939e-05, 3.390299999999832e-05, 3.322299999999889e-05, 3.366699999999764e-05, 3.3374999999998683e-05, 3.352800000000142e-05]</msg>
<status status="PASS" starttime="20201115 23:00:25.841" endtime="20201115 23:00:25.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.837" endtime="20201115 23:00:25.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.846" endtime="20201115 23:00:25.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:25.849" endtime="20201115 23:00:25.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.848" endtime="20201115 23:00:25.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.844" endtime="20201115 23:00:25.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.481" endtime="20201115 23:00:25.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.479" endtime="20201115 23:00:25.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.478" endtime="20201115 23:00:25.870"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.881" endtime="20201115 23:00:25.898"></status>
</kw>
<msg timestamp="20201115 23:00:25.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.879" endtime="20201115 23:00:25.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:25.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:25.900" endtime="20201115 23:00:25.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.902" endtime="20201115 23:00:25.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.877" endtime="20201115 23:00:25.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.875" endtime="20201115 23:00:25.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:25.911" endtime="20201115 23:00:26.197"></status>
</kw>
<msg timestamp="20201115 23:00:26.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:25.910" endtime="20201115 23:00:26.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.201" endtime="20201115 23:00:26.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.210" endtime="20201115 23:00:26.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.907" endtime="20201115 23:00:26.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.905" endtime="20201115 23:00:26.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.216" level="INFO">${RESULT} = [{'time': 0.022655778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.438900000000272e-05, 'source_diff': 3.438900000000272e-05}, {'time': 0.022696792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.213" endtime="20201115 23:00:26.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.230" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:26.217" endtime="20201115 23:00:26.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.234" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.233" endtime="20201115 23:00:26.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.237" level="INFO">VALUE: [3.438900000000272e-05, 3.420900000000032e-05, 3.457000000000113e-05, 3.466699999999864e-05, 3.502799999999945e-05, 3.476399999999963e-05, 3.448699999999971e-05, 3.472300000000039e-05, 3.450000000000328e-05, 3.4888999999999754e-05, 3.472200000000092e-05, 3.4374999999999684e-05, 3.4611000000000364e-05, 3.472200000000092e-05, 3.492999999999899e-05, 3.475000000000006e-05, 3.4304999999998365e-05, 3.445799999999763e-05, 3.500000000000031e-05, 3.4804999999998865e-05, 3.472300000000039e-05, 3.493099999999846e-05, 3.4582999999997754e-05, 3.426399999999913e-05, 3.4875000000000184e-05, 3.475000000000006e-05, 3.472200000000092e-05, 3.432000000000088e-05, 3.452799999999895e-05, 3.4138999999999003e-05, 3.473600000000049e-05, 3.413900000000247e-05, 3.494399999999856e-05, 3.418099999999771e-05, 3.447200000000067e-05, 3.44580000000011e-05, 3.4318999999997934e-05, 3.4110999999999864e-05, 3.4124999999999434e-05, 3.495799999999813e-05, 3.457000000000113e-05, 3.454199999999852e-05, 3.476399999999963e-05, 3.455600000000156e-05, 3.448600000000024e-05, 3.4652999999999073e-05, 3.448600000000024e-05, 3.475000000000006e-05, 3.430600000000131e-05, 3.434800000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.235" endtime="20201115 23:00:26.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.231" endtime="20201115 23:00:26.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.240" endtime="20201115 23:00:26.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.243" endtime="20201115 23:00:26.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.242" endtime="20201115 23:00:26.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.238" endtime="20201115 23:00:26.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.873" endtime="20201115 23:00:26.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.871" endtime="20201115 23:00:26.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:25.871" endtime="20201115 23:00:26.264"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.267" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.275" endtime="20201115 23:00:26.292"></status>
</kw>
<msg timestamp="20201115 23:00:26.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.273" endtime="20201115 23:00:26.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.293" endtime="20201115 23:00:26.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.296" endtime="20201115 23:00:26.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.271" endtime="20201115 23:00:26.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.269" endtime="20201115 23:00:26.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.305" endtime="20201115 23:00:26.590"></status>
</kw>
<msg timestamp="20201115 23:00:26.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.303" endtime="20201115 23:00:26.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.594" endtime="20201115 23:00:26.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.602" endtime="20201115 23:00:26.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.301" endtime="20201115 23:00:26.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.299" endtime="20201115 23:00:26.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:26.609" level="INFO">${RESULT} = [{'time': 0.022638514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5832999999999005e-05, 'source_diff': 3.5832999999999005e-05}, {'time': 0.022682514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:26.605" endtime="20201115 23:00:26.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:26.623" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:26.610" endtime="20201115 23:00:26.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.628" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:00:26.627" endtime="20201115 23:00:26.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.630" level="INFO">VALUE: [3.5832999999999005e-05, 3.5583000000002224e-05, 3.54580000000021e-05, 3.580599999999934e-05, 3.5318999999998935e-05, 3.5139000000000004e-05, 3.5902999999996854e-05, 3.518099999999871e-05, 3.59580000000026e-05, 3.5166999999999143e-05, 3.5402999999999823e-05, 3.5624999999997464e-05, 3.5666999999999643e-05, 3.602800000000045e-05, 3.555599999999909e-05, 3.530599999999884e-05, 3.54589999999981e-05, 3.54580000000021e-05, 3.59719999999987e-05, 3.5541000000000045e-05, 3.541599999999992e-05, 3.592999999999999e-05, 3.604200000000002e-05, 3.554199999999952e-05, 3.570799999999888e-05, 3.519399999999881e-05, 3.5653000000000074e-05, 3.568099999999921e-05, 3.5861000000001614e-05, 3.570900000000182e-05, 3.5083000000001724e-05, 3.579199999999977e-05, 3.5832999999999005e-05, 3.519500000000175e-05, 3.526400000000013e-05, 3.5374999999997214e-05, 3.522300000000089e-05, 3.525000000000056e-05, 3.544399999999906e-05, 3.579199999999977e-05, 3.52779999999997e-05, 3.5526999999997005e-05, 3.572199999999845e-05, 3.6026999999997505e-05, 3.570799999999888e-05, 3.569400000000278e-05, 3.5554999999999615e-05, 3.5319000000002404e-05, 3.5125000000000434e-05, 3.554199999999952e-05]</msg>
<status status="PASS" starttime="20201115 23:00:26.629" endtime="20201115 23:00:26.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.624" endtime="20201115 23:00:26.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.633" endtime="20201115 23:00:26.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:26.637" endtime="20201115 23:00:26.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.635" endtime="20201115 23:00:26.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.632" endtime="20201115 23:00:26.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.267" endtime="20201115 23:00:26.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.266" endtime="20201115 23:00:26.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.265" endtime="20201115 23:00:26.658"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.660" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.668" endtime="20201115 23:00:26.685"></status>
</kw>
<msg timestamp="20201115 23:00:26.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.667" endtime="20201115 23:00:26.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:26.687" endtime="20201115 23:00:26.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.689" endtime="20201115 23:00:26.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.664" endtime="20201115 23:00:26.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.662" endtime="20201115 23:00:26.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.698" endtime="20201115 23:00:26.983"></status>
</kw>
<msg timestamp="20201115 23:00:26.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.697" endtime="20201115 23:00:26.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:26.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:26.987" endtime="20201115 23:00:26.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:26.995" endtime="20201115 23:00:26.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.694" endtime="20201115 23:00:26.997"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.693" endtime="20201115 23:00:26.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.002" level="INFO">${RESULT} = [{'time': 0.021813625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.676399999999816e-05, 'source_diff': 3.676399999999816e-05}, {'time': 0.021861639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:26.998" endtime="20201115 23:00:27.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.015" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:27.003" endtime="20201115 23:00:27.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.020" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.019" endtime="20201115 23:00:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.022" level="INFO">VALUE: [3.676399999999816e-05, 3.674999999999859e-05, 3.619499999999928e-05, 3.6110999999998394e-05, 3.6290999999997325e-05, 3.6139000000001004e-05, 3.669499999999978e-05, 3.6903000000001324e-05, 3.6389000000001254e-05, 3.669499999999978e-05, 3.670899999999935e-05, 3.6790999999997825e-05, 3.642999999999702e-05, 3.6512999999998436e-05, 3.643000000000049e-05, 3.640200000000135e-05, 3.616600000000067e-05, 3.6332999999999505e-05, 3.693000000000099e-05, 3.679200000000077e-05, 3.6652999999997604e-05, 3.607000000000263e-05, 3.6582999999999755e-05, 3.647300000000214e-05, 3.67780000000012e-05, 3.624999999999809e-05, 3.656999999999966e-05, 3.698600000000274e-05, 3.650000000000181e-05, 3.6681000000000213e-05, 3.611200000000134e-05, 3.6540999999997575e-05, 3.6611000000002364e-05, 3.673700000000196e-05, 3.6846999999999575e-05, 3.7012999999998936e-05, 3.6819000000000435e-05, 3.61520000000011e-05, 3.649999999999834e-05, 3.702800000000145e-05, 3.623599999999852e-05, 3.643000000000049e-05, 3.6833000000000005e-05, 3.623599999999852e-05, 3.629200000000027e-05, 3.64719999999992e-05, 3.6888999999998284e-05, 3.651399999999791e-05, 3.6360999999998644e-05, 3.695800000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.021" endtime="20201115 23:00:27.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.016" endtime="20201115 23:00:27.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.025" endtime="20201115 23:00:27.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.029" endtime="20201115 23:00:27.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.027" endtime="20201115 23:00:27.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.024" endtime="20201115 23:00:27.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.661" endtime="20201115 23:00:27.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.659" endtime="20201115 23:00:27.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:26.658" endtime="20201115 23:00:27.050"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.052" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.061" endtime="20201115 23:00:27.077"></status>
</kw>
<msg timestamp="20201115 23:00:27.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.059" endtime="20201115 23:00:27.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.078" endtime="20201115 23:00:27.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.081" endtime="20201115 23:00:27.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.056" endtime="20201115 23:00:27.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.054" endtime="20201115 23:00:27.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.090" endtime="20201115 23:00:27.376"></status>
</kw>
<msg timestamp="20201115 23:00:27.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.088" endtime="20201115 23:00:27.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.380" endtime="20201115 23:00:27.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.389" endtime="20201115 23:00:27.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.086" endtime="20201115 23:00:27.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.084" endtime="20201115 23:00:27.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.396" level="INFO">${RESULT} = [{'time': 0.022557347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.727799999999823e-05, 'source_diff': 3.727799999999823e-05}, {'time': 0.022602319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:27.392" endtime="20201115 23:00:27.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.409" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:27.397" endtime="20201115 23:00:27.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.414" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.413" endtime="20201115 23:00:27.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.416" level="INFO">VALUE: [3.727799999999823e-05, 3.798600000000027e-05, 3.7110999999999394e-05, 3.7332999999997035e-05, 3.749999999999934e-05, 3.79720000000007e-05, 3.792999999999852e-05, 3.701400000000188e-05, 3.72780000000017e-05, 3.720800000000038e-05, 3.7638999999999034e-05, 3.745799999999716e-05, 3.7695000000000783e-05, 3.780599999999787e-05, 3.7388999999998784e-05, 3.7861000000000145e-05, 3.790199999999938e-05, 3.751399999999891e-05, 3.758400000000023e-05, 3.715199999999863e-05, 3.7110999999999394e-05, 3.726399999999866e-05, 3.802799999999898e-05, 3.720800000000038e-05, 3.743000000000149e-05, 3.7333000000000505e-05, 3.7846999999997105e-05, 3.7096999999999825e-05, 3.798600000000027e-05, 3.801399999999941e-05, 3.766600000000217e-05, 3.768000000000174e-05, 3.7667000000001644e-05, 3.7139000000002004e-05, 3.717999999999777e-05, 3.729200000000127e-05, 3.776400000000263e-05, 3.730599999999737e-05, 3.804199999999855e-05, 3.7945000000001033e-05, 3.7902999999998854e-05, 3.772200000000045e-05, 3.7417000000001394e-05, 3.744399999999759e-05, 3.7153000000001574e-05, 3.776400000000263e-05, 3.707000000000016e-05, 3.718000000000124e-05, 3.749999999999934e-05, 3.724999999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.415" endtime="20201115 23:00:27.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.410" endtime="20201115 23:00:27.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.419" endtime="20201115 23:00:27.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.423" endtime="20201115 23:00:27.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.421" endtime="20201115 23:00:27.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.418" endtime="20201115 23:00:27.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.053" endtime="20201115 23:00:27.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.051" endtime="20201115 23:00:27.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.050" endtime="20201115 23:00:27.444"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.447" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.455" endtime="20201115 23:00:27.471"></status>
</kw>
<msg timestamp="20201115 23:00:27.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.453" endtime="20201115 23:00:27.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.473" endtime="20201115 23:00:27.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.475" endtime="20201115 23:00:27.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.451" endtime="20201115 23:00:27.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.449" endtime="20201115 23:00:27.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.484" endtime="20201115 23:00:27.769"></status>
</kw>
<msg timestamp="20201115 23:00:27.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.483" endtime="20201115 23:00:27.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022859222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.773" endtime="20201115 23:00:27.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.781" endtime="20201115 23:00:27.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.480" endtime="20201115 23:00:27.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.478" endtime="20201115 23:00:27.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:27.788" level="INFO">${RESULT} = [{'time': 0.022859222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8888999999996815e-05, 'source_diff': 3.8888999999996815e-05}, {'time': 0.022903222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:27.785" endtime="20201115 23:00:27.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:27.801" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:27.789" endtime="20201115 23:00:27.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.806" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:00:27.805" endtime="20201115 23:00:27.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.808" level="INFO">VALUE: [3.8888999999996815e-05, 3.8124999999999964e-05, 3.847199999999773e-05, 3.877799999999973e-05, 3.8568999999998715e-05, 3.8652999999999604e-05, 3.880600000000234e-05, 3.8889000000000284e-05, 3.825000000000009e-05, 3.8916999999999424e-05, 3.900000000000084e-05, 3.8111000000000395e-05, 3.822199999999748e-05, 3.825000000000009e-05, 3.8861000000001145e-05, 3.8430999999998494e-05, 3.873600000000102e-05, 3.81659999999992e-05, 3.850000000000034e-05, 3.8832999999998535e-05, 3.819400000000181e-05, 3.8804999999999396e-05, 3.869400000000231e-05, 3.872199999999798e-05, 3.89859999999978e-05, 3.867999999999927e-05, 3.819400000000181e-05, 3.844399999999859e-05, 3.848600000000077e-05, 3.900000000000084e-05, 3.82780000000027e-05, 3.873600000000102e-05, 3.872200000000145e-05, 3.8347000000001075e-05, 3.8111000000000395e-05, 3.8680999999998744e-05, 3.855600000000209e-05, 3.8625000000000465e-05, 3.813800000000006e-05, 3.8346999999997605e-05, 3.875000000000059e-05, 3.815199999999963e-05, 3.8777000000000256e-05, 3.818000000000224e-05, 3.876400000000016e-05, 3.81659999999992e-05, 3.8040999999999076e-05, 3.8639000000000034e-05, 3.895800000000213e-05, 3.8818999999998965e-05]</msg>
<status status="PASS" starttime="20201115 23:00:27.807" endtime="20201115 23:00:27.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.802" endtime="20201115 23:00:27.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.812" endtime="20201115 23:00:27.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:27.815" endtime="20201115 23:00:27.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.814" endtime="20201115 23:00:27.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.810" endtime="20201115 23:00:27.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.448" endtime="20201115 23:00:27.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.446" endtime="20201115 23:00:27.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.445" endtime="20201115 23:00:27.837"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.847" endtime="20201115 23:00:27.865"></status>
</kw>
<msg timestamp="20201115 23:00:27.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.845" endtime="20201115 23:00:27.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:27.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:27.866" endtime="20201115 23:00:27.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.869" endtime="20201115 23:00:27.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.843" endtime="20201115 23:00:27.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.841" endtime="20201115 23:00:27.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:27.878" endtime="20201115 23:00:28.162"></status>
</kw>
<msg timestamp="20201115 23:00:28.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023383861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:27.876" endtime="20201115 23:00:28.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023383861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023422944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.167" endtime="20201115 23:00:28.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.175" endtime="20201115 23:00:28.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.873" endtime="20201115 23:00:28.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.872" endtime="20201115 23:00:28.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.181" level="INFO">${RESULT} = [{'time': 0.023422944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9083000000002255e-05, 'source_diff': 3.9083000000002255e-05}, {'time': 0.023473944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:28.178" endtime="20201115 23:00:28.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.196" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:28.182" endtime="20201115 23:00:28.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.200" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.199" endtime="20201115 23:00:28.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.203" level="INFO">VALUE: [3.9083000000002255e-05, 3.9625000000001465e-05, 3.948600000000177e-05, 3.9389000000000784e-05, 3.991600000000095e-05, 4.0041000000001076e-05, 3.970799999999941e-05, 3.9125000000000965e-05, 4.001399999999794e-05, 3.994400000000009e-05, 3.972200000000245e-05, 3.955599999999962e-05, 3.951399999999744e-05, 3.9430999999999494e-05, 3.927800000000023e-05, 3.976399999999769e-05, 3.951399999999744e-05, 3.975000000000159e-05, 3.9944999999999564e-05, 3.96660000000007e-05, 3.9125000000000965e-05, 3.9763000000001686e-05, 3.993000000000052e-05, 3.9304999999999896e-05, 3.9153000000000104e-05, 3.919399999999934e-05, 3.950000000000134e-05, 3.952800000000048e-05, 4.0096999999999355e-05, 3.9097000000001825e-05, 3.975000000000159e-05, 3.948600000000177e-05, 3.969399999999984e-05, 3.9430999999999494e-05, 3.9389000000000784e-05, 3.926400000000066e-05, 3.922199999999848e-05, 3.9860999999998675e-05, 3.9180999999999244e-05, 3.9360999999998175e-05, 3.9389000000000784e-05, 3.9445000000002534e-05, 4.002800000000098e-05, 3.949999999999787e-05, 3.9596999999998855e-05, 3.944399999999959e-05, 3.943000000000002e-05, 3.925000000000109e-05, 3.999999999999837e-05, 3.9082999999998785e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.201" endtime="20201115 23:00:28.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.197" endtime="20201115 23:00:28.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.206" endtime="20201115 23:00:28.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.210" endtime="20201115 23:00:28.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.208" endtime="20201115 23:00:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.205" endtime="20201115 23:00:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.839" endtime="20201115 23:00:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.838" endtime="20201115 23:00:28.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:27.837" endtime="20201115 23:00:28.231"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.233" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.241" endtime="20201115 23:00:28.258"></status>
</kw>
<msg timestamp="20201115 23:00:28.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.240" endtime="20201115 23:00:28.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.259" endtime="20201115 23:00:28.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.262" endtime="20201115 23:00:28.263"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.237" endtime="20201115 23:00:28.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.235" endtime="20201115 23:00:28.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.271" endtime="20201115 23:00:28.557"></status>
</kw>
<msg timestamp="20201115 23:00:28.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.269" endtime="20201115 23:00:28.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021675958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.561" endtime="20201115 23:00:28.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.569" endtime="20201115 23:00:28.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.267" endtime="20201115 23:00:28.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.265" endtime="20201115 23:00:28.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.576" level="INFO">${RESULT} = [{'time': 0.021675958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.091599999999848e-05, 'source_diff': 4.091599999999848e-05}, {'time': 0.021724958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.572" endtime="20201115 23:00:28.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.589" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:28.577" endtime="20201115 23:00:28.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.594" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.593" endtime="20201115 23:00:28.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.596" level="INFO">VALUE: [4.091599999999848e-05, 4.0124999999998495e-05, 4.0639000000002035e-05, 4.051399999999844e-05, 4.101399999999894e-05, 4.0819000000000966e-05, 4.044400000000059e-05, 4.0959000000000134e-05, 4.0347000000003075e-05, 4.095800000000066e-05, 4.0555000000001146e-05, 4.055599999999715e-05, 4.0445000000000064e-05, 4.054200000000105e-05, 4.051399999999844e-05, 4.063799999999909e-05, 4.0695000000000314e-05, 4.0972999999999704e-05, 4.077799999999826e-05, 4.0125000000001965e-05, 4.006999999999969e-05, 4.095800000000066e-05, 4.0583000000000286e-05, 4.047199999999973e-05, 4.0124999999998495e-05, 4.0930999999997525e-05, 4.050000000000234e-05, 4.050000000000234e-05, 4.049999999999887e-05, 4.101399999999894e-05, 4.048600000000277e-05, 4.0181000000000244e-05, 4.075000000000259e-05, 4.099999999999937e-05, 4.07920000000013e-05, 4.049999999999887e-05, 4.0639000000002035e-05, 4.0652999999998135e-05, 4.076399999999869e-05, 4.004200000000055e-05, 4.079199999999783e-05, 4.0389000000001785e-05, 4.082000000000044e-05, 4.0819000000000966e-05, 4.0791000000001826e-05, 4.0125000000001965e-05, 4.0554999999997676e-05, 4.0082999999999785e-05, 4.070800000000041e-05, 4.072199999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.595" endtime="20201115 23:00:28.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.590" endtime="20201115 23:00:28.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.599" endtime="20201115 23:00:28.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.603" endtime="20201115 23:00:28.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.601" endtime="20201115 23:00:28.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.598" endtime="20201115 23:00:28.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.234" endtime="20201115 23:00:28.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.232" endtime="20201115 23:00:28.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.231" endtime="20201115 23:00:28.624"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.626" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.634" endtime="20201115 23:00:28.651"></status>
</kw>
<msg timestamp="20201115 23:00:28.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.633" endtime="20201115 23:00:28.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:28.653" endtime="20201115 23:00:28.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.655" endtime="20201115 23:00:28.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.630" endtime="20201115 23:00:28.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.628" endtime="20201115 23:00:28.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.664" endtime="20201115 23:00:28.949"></status>
</kw>
<msg timestamp="20201115 23:00:28.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.663" endtime="20201115 23:00:28.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:28.953" endtime="20201115 23:00:28.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.962" endtime="20201115 23:00:28.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.660" endtime="20201115 23:00:28.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.658" endtime="20201115 23:00:28.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:28.968" level="INFO">${RESULT} = [{'time': 0.021785486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.172200000000098e-05, 'source_diff': 4.172200000000098e-05}, {'time': 0.021834486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:28.965" endtime="20201115 23:00:28.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:28.982" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:28.969" endtime="20201115 23:00:28.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.986" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:00:28.985" endtime="20201115 23:00:28.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:28.989" level="INFO">VALUE: [4.172200000000098e-05, 4.202799999999951e-05, 4.173600000000055e-05, 4.151399999999944e-05, 4.149999999999987e-05, 4.123600000000005e-05, 4.1459000000000634e-05, 4.108400000000026e-05, 4.09859999999998e-05, 4.124999999999962e-05, 4.132000000000094e-05, 4.143000000000202e-05, 4.152799999999901e-05, 4.197199999999776e-05, 4.1402999999998885e-05, 4.1262999999999717e-05, 4.1276999999999286e-05, 4.145799999999769e-05, 4.151400000000291e-05, 4.151399999999944e-05, 4.195799999999819e-05, 4.1374999999999745e-05, 4.1153000000002105e-05, 4.175000000000012e-05, 4.172199999999751e-05, 4.19860000000008e-05, 4.152799999999901e-05, 4.163800000000009e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.157000000000119e-05, 4.1973000000000704e-05, 4.1694999999997845e-05, 4.176399999999969e-05, 4.1195000000000814e-05, 4.202800000000298e-05, 4.194400000000209e-05, 4.1290999999998856e-05, 4.1124999999999495e-05, 4.204199999999908e-05, 4.195800000000166e-05, 4.1818999999998496e-05, 4.173600000000055e-05, 4.124999999999962e-05, 4.1875000000000245e-05, 4.175000000000012e-05, 4.195799999999819e-05, 4.1416999999998455e-05, 4.19860000000008e-05, 4.170799999999794e-05]</msg>
<status status="PASS" starttime="20201115 23:00:28.987" endtime="20201115 23:00:28.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.983" endtime="20201115 23:00:28.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:28.992" endtime="20201115 23:00:28.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:28.995" endtime="20201115 23:00:29.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.994" endtime="20201115 23:00:29.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.990" endtime="20201115 23:00:29.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.627" endtime="20201115 23:00:29.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.625" endtime="20201115 23:00:29.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:28.624" endtime="20201115 23:00:29.016"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.027" endtime="20201115 23:00:29.043"></status>
</kw>
<msg timestamp="20201115 23:00:29.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.025" endtime="20201115 23:00:29.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.045" endtime="20201115 23:00:29.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.047" endtime="20201115 23:00:29.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.023" endtime="20201115 23:00:29.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.021" endtime="20201115 23:00:29.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.057" endtime="20201115 23:00:29.341"></status>
</kw>
<msg timestamp="20201115 23:00:29.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02207175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:29.055" endtime="20201115 23:00:29.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02207175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:29.345" endtime="20201115 23:00:29.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.353" endtime="20201115 23:00:29.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.052" endtime="20201115 23:00:29.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.050" endtime="20201115 23:00:29.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.360" level="INFO">${RESULT} = [{'time': 0.02207175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2375000000000745e-05, 'source_diff': 4.2375000000000745e-05}, {'time': 0.022122736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:00:29.357" endtime="20201115 23:00:29.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:29.361" endtime="20201115 23:00:29.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.378" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.377" endtime="20201115 23:00:29.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.380" level="INFO">VALUE: [4.2375000000000745e-05, 4.229199999999933e-05, 4.2625000000000995e-05, 4.28059999999994e-05, 4.29999999999979e-05, 4.224999999999715e-05, 4.2416999999999455e-05, 4.304200000000008e-05, 4.2180999999998775e-05, 4.2708999999998415e-05, 4.2194999999998345e-05, 4.2527000000000537e-05, 4.2541000000000107e-05, 4.2208999999997915e-05, 4.2487000000000774e-05, 4.241599999999998e-05, 4.277700000000079e-05, 4.223600000000105e-05, 4.251399999999697e-05, 4.302800000000051e-05, 4.270800000000241e-05, 4.2902999999996916e-05, 4.272200000000198e-05, 4.21799999999993e-05, 4.227799999999976e-05, 4.28059999999994e-05, 4.297199999999876e-05, 4.2167000000002675e-05, 4.2473000000001204e-05, 4.2223000000000954e-05, 4.2152999999999635e-05, 4.251400000000044e-05, 4.2208999999997915e-05, 4.251400000000044e-05, 4.2361000000001175e-05, 4.269399999999937e-05, 4.251400000000044e-05, 4.304200000000008e-05, 4.2054999999999176e-05, 4.2791000000000357e-05, 4.222199999999801e-05, 4.275000000000112e-05, 4.2125000000000495e-05, 4.2332999999998566e-05, 4.2139000000000065e-05, 4.2818999999999496e-05, 4.2110999999997456e-05, 4.230600000000237e-05, 4.2223000000000954e-05, 4.276400000000069e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.379" endtime="20201115 23:00:29.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.374" endtime="20201115 23:00:29.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.383" endtime="20201115 23:00:29.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.387" endtime="20201115 23:00:29.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.385" endtime="20201115 23:00:29.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.382" endtime="20201115 23:00:29.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.019" endtime="20201115 23:00:29.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.018" endtime="20201115 23:00:29.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.017" endtime="20201115 23:00:29.408"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.420" endtime="20201115 23:00:29.437"></status>
</kw>
<msg timestamp="20201115 23:00:29.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.418" endtime="20201115 23:00:29.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.439" endtime="20201115 23:00:29.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.442" endtime="20201115 23:00:29.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.415" endtime="20201115 23:00:29.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.413" endtime="20201115 23:00:29.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.451" endtime="20201115 23:00:29.737"></status>
</kw>
<msg timestamp="20201115 23:00:29.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024546708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.449" endtime="20201115 23:00:29.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024546708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024590097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.741" endtime="20201115 23:00:29.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.749" endtime="20201115 23:00:29.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.447" endtime="20201115 23:00:29.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.445" endtime="20201115 23:00:29.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:29.756" level="INFO">${RESULT} = [{'time': 0.024590097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3389000000001315e-05, 'source_diff': 4.3389000000001315e-05}, {'time': 0.024643097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:29.752" endtime="20201115 23:00:29.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:29.770" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:29.757" endtime="20201115 23:00:29.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.775" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:00:29.774" endtime="20201115 23:00:29.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.777" level="INFO">VALUE: [4.3389000000001315e-05, 4.374999999999865e-05, 4.402800000000151e-05, 4.3833000000000066e-05, 4.3361000000002176e-05, 4.3332999999999566e-05, 4.373600000000255e-05, 4.327799999999729e-05, 4.3846999999999636e-05, 4.377800000000126e-05, 4.331999999999947e-05, 4.383399999999954e-05, 4.3653000000001135e-05, 4.3138999999997596e-05, 4.3723000000002454e-05, 4.3987000000002274e-05, 4.3096999999998886e-05, 4.379200000000083e-05, 4.3625000000001996e-05, 4.3846999999999636e-05, 4.3111000000001926e-05, 4.340200000000141e-05, 4.3846999999999636e-05, 4.344400000000012e-05, 4.397199999999976e-05, 4.329200000000033e-05, 4.404199999999761e-05, 4.374999999999865e-05, 4.324999999999815e-05, 4.376399999999822e-05, 4.3208999999998915e-05, 4.3666999999997236e-05, 4.305599999999965e-05, 4.400000000000237e-05, 4.3888999999998346e-05, 4.319399999999987e-05, 4.3237000000001524e-05, 4.317999999999683e-05, 4.319399999999987e-05, 4.3375000000001745e-05, 4.3610999999998956e-05, 4.3874999999998776e-05, 4.326400000000119e-05, 4.379100000000136e-05, 4.372199999999951e-05, 4.3916999999997486e-05, 4.345799999999969e-05, 4.397199999999976e-05, 4.3846999999999636e-05, 4.326400000000119e-05]</msg>
<status status="PASS" starttime="20201115 23:00:29.776" endtime="20201115 23:00:29.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.771" endtime="20201115 23:00:29.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.780" endtime="20201115 23:00:29.782"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:29.784" endtime="20201115 23:00:29.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.782" endtime="20201115 23:00:29.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.779" endtime="20201115 23:00:29.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.411" endtime="20201115 23:00:29.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.409" endtime="20201115 23:00:29.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.408" endtime="20201115 23:00:29.805"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.807" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.816" endtime="20201115 23:00:29.831"></status>
</kw>
<msg timestamp="20201115 23:00:29.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.814" endtime="20201115 23:00:29.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:29.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:29.833" endtime="20201115 23:00:29.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.835" endtime="20201115 23:00:29.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.811" endtime="20201115 23:00:29.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.809" endtime="20201115 23:00:29.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:29.844" endtime="20201115 23:00:30.129"></status>
</kw>
<msg timestamp="20201115 23:00:30.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:29.843" endtime="20201115 23:00:30.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022372917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.133" endtime="20201115 23:00:30.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.141" endtime="20201115 23:00:30.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.840" endtime="20201115 23:00:30.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.838" endtime="20201115 23:00:30.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.148" level="INFO">${RESULT} = [{'time': 0.022372917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.022427847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:30.145" endtime="20201115 23:00:30.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.161" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:30.149" endtime="20201115 23:00:30.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.166" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.165" endtime="20201115 23:00:30.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.168" level="INFO">VALUE: [4.4610999999999956e-05, 4.4833000000001066e-05, 4.419400000000087e-05, 4.441600000000198e-05, 4.443000000000155e-05, 4.4597000000000386e-05, 4.447200000000026e-05, 4.502799999999904e-05, 4.498600000000033e-05, 4.4610999999999956e-05, 4.420800000000044e-05, 4.44999999999994e-05, 4.484800000000011e-05, 4.4722999999999985e-05, 4.448599999999983e-05, 4.434799999999961e-05, 4.4445000000000595e-05, 4.429199999999786e-05, 4.420799999999697e-05, 4.406899999999728e-05, 4.4819000000001497e-05, 4.44999999999994e-05, 4.442999999999808e-05, 4.4888999999999346e-05, 4.431899999999753e-05, 4.49999999999999e-05, 4.497200000000076e-05, 4.44999999999994e-05, 4.445800000000069e-05, 4.4195000000000345e-05, 4.4417000000001455e-05, 4.4916999999998486e-05, 4.477799999999879e-05, 4.457000000000072e-05, 4.5013e-05, 4.4110999999999456e-05, 4.4916999999998486e-05, 4.46800000000018e-05, 4.434699999999667e-05, 4.4124999999999026e-05, 4.4819000000001497e-05, 4.4555000000001677e-05, 4.491600000000248e-05, 4.4597000000000386e-05, 4.476399999999922e-05, 4.455499999999821e-05, 4.4624999999999526e-05, 4.4902999999998916e-05, 4.4360999999999706e-05, 4.4139000000002065e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.167" endtime="20201115 23:00:30.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.162" endtime="20201115 23:00:30.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.171" endtime="20201115 23:00:30.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.175" endtime="20201115 23:00:30.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.173" endtime="20201115 23:00:30.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.170" endtime="20201115 23:00:30.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.808" endtime="20201115 23:00:30.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.806" endtime="20201115 23:00:30.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:29.805" endtime="20201115 23:00:30.196"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.199" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.207" endtime="20201115 23:00:30.224"></status>
</kw>
<msg timestamp="20201115 23:00:30.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.205" endtime="20201115 23:00:30.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.226" endtime="20201115 23:00:30.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.228" endtime="20201115 23:00:30.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.203" endtime="20201115 23:00:30.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.201" endtime="20201115 23:00:30.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.237" endtime="20201115 23:00:30.529"></status>
</kw>
<msg timestamp="20201115 23:00:30.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.236" endtime="20201115 23:00:30.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022933806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:30.533" endtime="20201115 23:00:30.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.542" endtime="20201115 23:00:30.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.233" endtime="20201115 23:00:30.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.231" endtime="20201115 23:00:30.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.548" level="INFO">${RESULT} = [{'time': 0.022933806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.575000000000065e-05, 'source_diff': 4.575000000000065e-05}, {'time': 0.022991806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:30.545" endtime="20201115 23:00:30.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.562" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:30.549" endtime="20201115 23:00:30.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.566" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.565" endtime="20201115 23:00:30.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.569" level="INFO">VALUE: [4.575000000000065e-05, 4.5709000000001415e-05, 4.5625000000000526e-05, 4.573600000000108e-05, 4.5639000000000096e-05, 4.534699999999767e-05, 4.611099999999799e-05, 4.542999999999908e-05, 4.5083000000001316e-05, 4.584699999999817e-05, 4.5111000000000456e-05, 4.525000000000015e-05, 4.5209000000000915e-05, 4.5861000000001206e-05, 4.5361000000000706e-05, 4.5861000000001206e-05, 4.5959000000001665e-05, 4.526399999999972e-05, 4.576400000000022e-05, 4.534799999999714e-05, 4.5694999999998376e-05, 4.5388999999999846e-05, 4.527799999999929e-05, 4.602700000000057e-05, 4.576400000000022e-05, 4.552800000000301e-05, 4.549999999999693e-05, 4.551399999999997e-05, 4.6013999999997e-05, 4.594399999999915e-05, 4.531899999999853e-05, 4.58199999999985e-05, 4.5375000000000276e-05, 4.5625000000000526e-05, 4.5083000000001316e-05, 4.520800000000144e-05, 4.579199999999936e-05, 4.5152999999999166e-05, 4.60000000000009e-05, 4.5166999999998736e-05, 4.513800000000012e-05, 4.575000000000065e-05, 4.515199999999969e-05, 4.572199999999804e-05, 4.58879999999974e-05, 4.556899999999878e-05, 4.576400000000022e-05, 4.5611000000000956e-05, 4.598600000000133e-05, 4.594399999999915e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.567" endtime="20201115 23:00:30.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.563" endtime="20201115 23:00:30.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.572" endtime="20201115 23:00:30.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.576" endtime="20201115 23:00:30.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.574" endtime="20201115 23:00:30.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.571" endtime="20201115 23:00:30.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.199" endtime="20201115 23:00:30.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.198" endtime="20201115 23:00:30.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.197" endtime="20201115 23:00:30.597"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.607" endtime="20201115 23:00:30.624"></status>
</kw>
<msg timestamp="20201115 23:00:30.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.606" endtime="20201115 23:00:30.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.626" endtime="20201115 23:00:30.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.628" endtime="20201115 23:00:30.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.603" endtime="20201115 23:00:30.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.601" endtime="20201115 23:00:30.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.637" endtime="20201115 23:00:30.922"></status>
</kw>
<msg timestamp="20201115 23:00:30.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:30.636" endtime="20201115 23:00:30.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:30.927" endtime="20201115 23:00:30.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.935" endtime="20201115 23:00:30.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.633" endtime="20201115 23:00:30.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.632" endtime="20201115 23:00:30.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:30.941" level="INFO">${RESULT} = [{'time': 0.022221403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6403000000000416e-05, 'source_diff': 4.6403000000000416e-05}, {'time': 0.022280417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:30.938" endtime="20201115 23:00:30.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:30.955" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:30.942" endtime="20201115 23:00:30.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.959" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:00:30.958" endtime="20201115 23:00:30.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.962" level="INFO">VALUE: [4.6403000000000416e-05, 4.6958999999999196e-05, 4.705600000000018e-05, 4.6958999999999196e-05, 4.640200000000094e-05, 4.6861000000002206e-05, 4.620800000000244e-05, 4.625000000000115e-05, 4.6861000000002206e-05, 4.656899999999978e-05, 4.636099999999824e-05, 4.624999999999768e-05, 4.6416999999999986e-05, 4.663899999999763e-05, 4.673600000000208e-05, 4.704199999999714e-05, 4.6361000000001706e-05, 4.662499999999806e-05, 4.697199999999929e-05, 4.6667000000000236e-05, 4.6180999999999306e-05, 4.609799999999789e-05, 4.680599999999993e-05, 4.615200000000069e-05, 4.6180999999999306e-05, 4.63329999999991e-05, 4.673600000000208e-05, 4.670799999999947e-05, 4.687499999999831e-05, 4.629199999999986e-05, 4.652800000000054e-05, 4.679200000000036e-05, 4.6917000000000486e-05, 4.604199999999961e-05, 4.622199999999854e-05, 4.702800000000104e-05, 4.645800000000269e-05, 4.63329999999991e-05, 4.679200000000036e-05, 4.6153000000000166e-05, 4.6223000000001485e-05, 4.6361000000001706e-05, 4.683400000000254e-05, 4.6847000000002637e-05, 4.648600000000183e-05, 4.688800000000187e-05, 4.61939999999994e-05, 4.655500000000021e-05, 4.634699999999867e-05, 4.6111000000001456e-05]</msg>
<status status="PASS" starttime="20201115 23:00:30.960" endtime="20201115 23:00:30.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.956" endtime="20201115 23:00:30.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:30.965" endtime="20201115 23:00:30.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:30.969" endtime="20201115 23:00:30.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.967" endtime="20201115 23:00:30.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.964" endtime="20201115 23:00:30.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.600" endtime="20201115 23:00:30.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.598" endtime="20201115 23:00:30.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.597" endtime="20201115 23:00:30.990"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:30.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.001" endtime="20201115 23:00:31.018"></status>
</kw>
<msg timestamp="20201115 23:00:31.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:30.999" endtime="20201115 23:00:31.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.020" endtime="20201115 23:00:31.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.022" endtime="20201115 23:00:31.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.996" endtime="20201115 23:00:31.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.994" endtime="20201115 23:00:31.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.031" endtime="20201115 23:00:31.316"></status>
</kw>
<msg timestamp="20201115 23:00:31.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023257153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023304917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.030" endtime="20201115 23:00:31.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023257153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023304917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.321" endtime="20201115 23:00:31.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.329" endtime="20201115 23:00:31.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.027" endtime="20201115 23:00:31.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.026" endtime="20201115 23:00:31.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.336" level="INFO">${RESULT} = [{'time': 0.023304917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776400000000222e-05, 'source_diff': 4.776400000000222e-05}, {'time': 0.023358917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.332" endtime="20201115 23:00:31.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.351" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:31.337" endtime="20201115 23:00:31.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.355" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.354" endtime="20201115 23:00:31.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.357" level="INFO">VALUE: [4.776400000000222e-05, 4.748599999999936e-05, 4.731900000000053e-05, 4.7486999999998836e-05, 4.784799999999964e-05, 4.706900000000028e-05, 4.790299999999845e-05, 4.799999999999943e-05, 4.744400000000065e-05, 4.780600000000093e-05, 4.76940000000009e-05, 4.758300000000035e-05, 4.798599999999986e-05, 4.802800000000204e-05, 4.773599999999961e-05, 4.747199999999979e-05, 4.740299999999795e-05, 4.779200000000136e-05, 4.738899999999838e-05, 4.773599999999961e-05, 4.724999999999868e-05, 4.7458999999999696e-05, 4.738899999999838e-05, 4.711099999999899e-05, 4.802800000000204e-05, 4.766600000000176e-05, 4.717999999999736e-05, 4.797200000000029e-05, 4.727799999999782e-05, 4.799999999999943e-05, 4.783299999999713e-05, 4.7667000000001236e-05, 4.777800000000179e-05, 4.781900000000103e-05, 4.734699999999967e-05, 4.75000000000024e-05, 4.708299999999985e-05, 4.801400000000247e-05, 4.806899999999781e-05, 4.747199999999979e-05, 4.759699999999992e-05, 4.790199999999897e-05, 4.7986999999999336e-05, 4.751400000000197e-05, 4.756900000000078e-05, 4.749999999999893e-05, 4.790200000000244e-05, 4.723600000000258e-05, 4.8013999999999e-05, 4.772200000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.356" endtime="20201115 23:00:31.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.351" endtime="20201115 23:00:31.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.361" endtime="20201115 23:00:31.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.364" endtime="20201115 23:00:31.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.362" endtime="20201115 23:00:31.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.359" endtime="20201115 23:00:31.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.993" endtime="20201115 23:00:31.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.991" endtime="20201115 23:00:31.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:30.990" endtime="20201115 23:00:31.385"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.388" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.396" endtime="20201115 23:00:31.412"></status>
</kw>
<msg timestamp="20201115 23:00:31.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.394" endtime="20201115 23:00:31.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.413" endtime="20201115 23:00:31.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.416" endtime="20201115 23:00:31.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.391" endtime="20201115 23:00:31.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.389" endtime="20201115 23:00:31.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.425" endtime="20201115 23:00:31.711"></status>
</kw>
<msg timestamp="20201115 23:00:31.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02178575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:31.423" endtime="20201115 23:00:31.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02178575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:31.715" endtime="20201115 23:00:31.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.723" endtime="20201115 23:00:31.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.421" endtime="20201115 23:00:31.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.419" endtime="20201115 23:00:31.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:31.730" level="INFO">${RESULT} = [{'time': 0.021834528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.877799999999932e-05, 'source_diff': 4.877799999999932e-05}, {'time': 0.021890542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:31.727" endtime="20201115 23:00:31.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:31.743" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:31.731" endtime="20201115 23:00:31.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.748" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:00:31.747" endtime="20201115 23:00:31.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.750" level="INFO">VALUE: [4.877799999999932e-05, 4.830599999999796e-05, 4.861100000000049e-05, 4.8236999999999586e-05, 4.876300000000028e-05, 4.879099999999942e-05, 4.848600000000036e-05, 4.847200000000079e-05, 4.829099999999892e-05, 4.822200000000054e-05, 4.840299999999895e-05, 4.822200000000054e-05, 4.811099999999999e-05, 4.845800000000122e-05, 4.8681000000001806e-05, 4.840299999999895e-05, 4.811099999999999e-05, 4.848600000000036e-05, 4.834800000000014e-05, 4.807000000000075e-05, 4.823600000000011e-05, 4.833400000000057e-05, 4.829199999999839e-05, 4.876300000000028e-05, 4.831900000000153e-05, 4.81940000000014e-05, 4.887500000000031e-05, 4.875000000000018e-05, 4.898599999999739e-05, 4.898600000000086e-05, 4.840299999999895e-05, 4.890299999999945e-05, 4.811099999999999e-05, 4.8403000000002416e-05, 4.870800000000147e-05, 4.826400000000272e-05, 4.822200000000054e-05, 4.872200000000104e-05, 4.8223000000000016e-05, 4.830499999999849e-05, 4.879199999999889e-05, 4.8473000000000266e-05, 4.9014e-05, 4.900000000000043e-05, 4.838899999999938e-05, 4.904199999999914e-05, 4.861100000000049e-05, 4.806899999999781e-05, 4.844399999999818e-05, 4.831900000000153e-05]</msg>
<status status="PASS" starttime="20201115 23:00:31.749" endtime="20201115 23:00:31.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.744" endtime="20201115 23:00:31.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.753" endtime="20201115 23:00:31.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:31.757" endtime="20201115 23:00:31.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.755" endtime="20201115 23:00:31.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.752" endtime="20201115 23:00:31.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.388" endtime="20201115 23:00:31.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.386" endtime="20201115 23:00:31.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.386" endtime="20201115 23:00:31.778"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.780" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.788" endtime="20201115 23:00:31.806"></status>
</kw>
<msg timestamp="20201115 23:00:31.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.787" endtime="20201115 23:00:31.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:31.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:31.807" endtime="20201115 23:00:31.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.810" endtime="20201115 23:00:31.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.784" endtime="20201115 23:00:31.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.782" endtime="20201115 23:00:31.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:31.819" endtime="20201115 23:00:32.104"></status>
</kw>
<msg timestamp="20201115 23:00:32.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:31.817" endtime="20201115 23:00:32.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.108" endtime="20201115 23:00:32.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.117" endtime="20201115 23:00:32.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.815" endtime="20201115 23:00:32.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.813" endtime="20201115 23:00:32.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.123" level="INFO">${RESULT} = [{'time': 0.022657528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.987500000000131e-05, 'source_diff': 4.987500000000131e-05}, {'time': 0.022714514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.120" endtime="20201115 23:00:32.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.137" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:32.124" endtime="20201115 23:00:32.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.141" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.140" endtime="20201115 23:00:32.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.143" level="INFO">VALUE: [4.987500000000131e-05, 4.995800000000272e-05, 4.98330000000026e-05, 4.938900000000038e-05, 4.907000000000175e-05, 4.913900000000013e-05, 4.977800000000032e-05, 4.961200000000096e-05, 4.937500000000081e-05, 4.981899999999956e-05, 4.999999999999796e-05, 4.973599999999814e-05, 4.987500000000131e-05, 4.95140000000005e-05, 4.977800000000032e-05, 4.95140000000005e-05, 4.995800000000272e-05, 4.9707999999999e-05, 4.975000000000118e-05, 5.002800000000057e-05, 4.961099999999802e-05, 4.970899999999848e-05, 4.933400000000157e-05, 4.966699999999977e-05, 4.955599999999921e-05, 4.956999999999878e-05, 4.970800000000247e-05, 4.916599999999979e-05, 4.941600000000004e-05, 4.941600000000004e-05, 4.929199999999939e-05, 4.925000000000068e-05, 4.962500000000106e-05, 4.941699999999952e-05, 4.994499999999916e-05, 4.929199999999939e-05, 4.922200000000154e-05, 4.977800000000032e-05, 4.943099999999909e-05, 4.913900000000013e-05, 4.997200000000229e-05, 4.948600000000136e-05, 4.998600000000186e-05, 4.962499999999759e-05, 4.944399999999918e-05, 4.908299999999838e-05, 4.930499999999949e-05, 4.92079999999985e-05, 4.908300000000185e-05, 5.001399999999753e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.142" endtime="20201115 23:00:32.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.138" endtime="20201115 23:00:32.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.147" endtime="20201115 23:00:32.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.150" endtime="20201115 23:00:32.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.149" endtime="20201115 23:00:32.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.145" endtime="20201115 23:00:32.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.781" endtime="20201115 23:00:32.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.779" endtime="20201115 23:00:32.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:31.778" endtime="20201115 23:00:32.171"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.173" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.182" endtime="20201115 23:00:32.199"></status>
</kw>
<msg timestamp="20201115 23:00:32.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.180" endtime="20201115 23:00:32.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.200" endtime="20201115 23:00:32.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.203" endtime="20201115 23:00:32.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.178" endtime="20201115 23:00:32.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.176" endtime="20201115 23:00:32.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.212" endtime="20201115 23:00:32.497"></status>
</kw>
<msg timestamp="20201115 23:00:32.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:32.211" endtime="20201115 23:00:32.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:32.501" endtime="20201115 23:00:32.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.509" endtime="20201115 23:00:32.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.208" endtime="20201115 23:00:32.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.206" endtime="20201115 23:00:32.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.516" level="INFO">${RESULT} = [{'time': 0.021781375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.087499999999884e-05, 'source_diff': 5.087499999999884e-05}, {'time': 0.021840375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.512" endtime="20201115 23:00:32.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.529" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:32.517" endtime="20201115 23:00:32.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.534" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.533" endtime="20201115 23:00:32.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.536" level="INFO">VALUE: [5.087499999999884e-05, 5.099999999999896e-05, 5.061099999999902e-05, 5.088900000000188e-05, 5.077800000000132e-05, 5.026399999999778e-05, 5.095899999999973e-05, 5.009799999999842e-05, 5.0473000000002266e-05, 5.036199999999824e-05, 5.033299999999963e-05, 5.0708e-05, 5.045799999999975e-05, 5.0652000000001723e-05, 5.008300000000285e-05, 5.040299999999748e-05, 5.0708e-05, 5.10279999999981e-05, 5.025000000000168e-05, 5.088899999999841e-05, 5.041700000000052e-05, 5.069499999999991e-05, 5.073599999999914e-05, 5.091600000000154e-05, 5.038899999999791e-05, 5.019499999999941e-05, 5.063899999999816e-05, 5.01530000000007e-05, 5.0237000000001586e-05, 5.094400000000068e-05, 5.066600000000129e-05, 5.029100000000092e-05, 5.048599999999889e-05, 5.043000000000061e-05, 5.055500000000074e-05, 5.036099999999877e-05, 5.079100000000142e-05, 5.011099999999852e-05, 5.012499999999809e-05, 5.094500000000016e-05, 5.012499999999809e-05, 5.031999999999953e-05, 5.048599999999889e-05, 5.084799999999917e-05, 5.076399999999828e-05, 5.100000000000243e-05, 5.03339999999991e-05, 5.088900000000188e-05, 5.098599999999939e-05, 5.05409999999977e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.535" endtime="20201115 23:00:32.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.530" endtime="20201115 23:00:32.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.539" endtime="20201115 23:00:32.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.543" endtime="20201115 23:00:32.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.541" endtime="20201115 23:00:32.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.538" endtime="20201115 23:00:32.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.174" endtime="20201115 23:00:32.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.172" endtime="20201115 23:00:32.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.172" endtime="20201115 23:00:32.564"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.566" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.579" endtime="20201115 23:00:32.596"></status>
</kw>
<msg timestamp="20201115 23:00:32.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.578" endtime="20201115 23:00:32.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.598" endtime="20201115 23:00:32.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.600" endtime="20201115 23:00:32.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.570" endtime="20201115 23:00:32.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.568" endtime="20201115 23:00:32.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.609" endtime="20201115 23:00:32.894"></status>
</kw>
<msg timestamp="20201115 23:00:32.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027198194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027249625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.608" endtime="20201115 23:00:32.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027198194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027249625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:32.898" endtime="20201115 23:00:32.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.906" endtime="20201115 23:00:32.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.605" endtime="20201115 23:00:32.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.603" endtime="20201115 23:00:32.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:32.913" level="INFO">${RESULT} = [{'time': 0.027249625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.143100000000109e-05, 'source_diff': 5.143100000000109e-05}, {'time': 0.027310625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:32.909" endtime="20201115 23:00:32.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:32.927" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:32.914" endtime="20201115 23:00:32.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.932" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:00:32.931" endtime="20201115 23:00:32.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.934" level="INFO">VALUE: [5.143100000000109e-05, 5.137500000000281e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.145900000000023e-05, 5.199999999999996e-05, 5.165299999999873e-05, 5.19730000000003e-05, 5.201399999999953e-05, 5.145900000000023e-05, 5.191699999999855e-05, 5.180499999999852e-05, 5.173600000000014e-05, 5.151399999999903e-05, 5.109699999999995e-05, 5.125000000000268e-05, 5.16530000000022e-05, 5.108300000000038e-05, 5.195800000000125e-05, 5.18470000000007e-05, 5.12080000000005e-05, 5.197200000000082e-05, 5.138900000000238e-05, 5.134699999999673e-05, 5.141699999999805e-05, 5.109799999999942e-05, 5.123600000000311e-05, 5.19730000000003e-05, 5.187500000000331e-05, 5.125000000000268e-05, 5.180499999999852e-05, 5.1915999999999074e-05, 5.109699999999995e-05, 5.162499999999959e-05, 5.1443999999997714e-05, 5.144400000000118e-05, 5.187499999999984e-05, 5.151399999999903e-05, 5.1193999999997464e-05, 5.1971999999997354e-05, 5.119500000000041e-05, 5.157000000000078e-05, 5.138899999999891e-05, 5.176399999999928e-05, 5.177799999999885e-05, 5.13340000000001e-05, 5.15279999999986e-05, 5.197200000000082e-05, 5.1901999999999504e-05, 5.144400000000118e-05]</msg>
<status status="PASS" starttime="20201115 23:00:32.933" endtime="20201115 23:00:32.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.928" endtime="20201115 23:00:32.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.937" endtime="20201115 23:00:32.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:32.941" endtime="20201115 23:00:32.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.939" endtime="20201115 23:00:32.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.936" endtime="20201115 23:00:32.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.567" endtime="20201115 23:00:32.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.565" endtime="20201115 23:00:32.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.564" endtime="20201115 23:00:32.962"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.964" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.973" endtime="20201115 23:00:32.989"></status>
</kw>
<msg timestamp="20201115 23:00:32.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.971" endtime="20201115 23:00:32.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:32.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:32.991" endtime="20201115 23:00:32.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:32.993" endtime="20201115 23:00:32.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.969" endtime="20201115 23:00:32.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.966" endtime="20201115 23:00:32.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.003" endtime="20201115 23:00:33.288"></status>
</kw>
<msg timestamp="20201115 23:00:33.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022276833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.001" endtime="20201115 23:00:33.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022276833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.292" endtime="20201115 23:00:33.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.300" endtime="20201115 23:00:33.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.998" endtime="20201115 23:00:33.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.997" endtime="20201115 23:00:33.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.307" level="INFO">${RESULT} = [{'time': 0.022276833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2165999999999324e-05, 'source_diff': 5.2165999999999324e-05}, {'time': 0.022340833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:33.304" endtime="20201115 23:00:33.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.320" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:33.308" endtime="20201115 23:00:33.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.325" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.324" endtime="20201115 23:00:33.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.327" level="INFO">VALUE: [5.2165999999999324e-05, 5.213899999999966e-05, 5.2207999999998034e-05, 5.23470000000012e-05, 5.20409999999992e-05, 5.219400000000193e-05, 5.273600000000114e-05, 5.218100000000184e-05, 5.281900000000256e-05, 5.232000000000153e-05, 5.277700000000038e-05, 5.295899999999826e-05, 5.225000000000021e-05, 5.2443999999998714e-05, 5.288900000000041e-05, 5.255499999999927e-05, 5.266700000000277e-05, 5.287500000000084e-05, 5.2971999999998354e-05, 5.259700000000145e-05, 5.227699999999988e-05, 5.304199999999967e-05, 5.26669999999993e-05, 5.288900000000041e-05, 5.262500000000059e-05, 5.2457999999998284e-05, 5.219500000000141e-05, 5.243099999999862e-05, 5.294500000000216e-05, 5.270900000000148e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.29730000000013e-05, 5.257000000000178e-05, 5.211199999999999e-05, 5.2415999999999574e-05, 5.2665999999999824e-05, 5.300000000000096e-05, 5.2985999999997924e-05, 5.209699999999748e-05, 5.251400000000003e-05, 5.256899999999884e-05, 5.251400000000003e-05, 5.236100000000077e-05, 5.272200000000157e-05, 5.212500000000009e-05, 5.213899999999966e-05, 5.240299999999948e-05, 5.265299999999973e-05, 5.2985999999997924e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.326" endtime="20201115 23:00:33.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.321" endtime="20201115 23:00:33.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.331" endtime="20201115 23:00:33.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.334" endtime="20201115 23:00:33.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.333" endtime="20201115 23:00:33.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.329" endtime="20201115 23:00:33.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.965" endtime="20201115 23:00:33.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.963" endtime="20201115 23:00:33.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:32.962" endtime="20201115 23:00:33.356"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.358" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.366" endtime="20201115 23:00:33.383"></status>
</kw>
<msg timestamp="20201115 23:00:33.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.364" endtime="20201115 23:00:33.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.384" endtime="20201115 23:00:33.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.387" endtime="20201115 23:00:33.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.362" endtime="20201115 23:00:33.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.360" endtime="20201115 23:00:33.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.396" endtime="20201115 23:00:33.682"></status>
</kw>
<msg timestamp="20201115 23:00:33.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.394" endtime="20201115 23:00:33.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.686" endtime="20201115 23:00:33.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.694" endtime="20201115 23:00:33.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.392" endtime="20201115 23:00:33.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.390" endtime="20201115 23:00:33.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:33.701" level="INFO">${RESULT} = [{'time': 0.021784736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.36670000000003e-05, 'source_diff': 5.36670000000003e-05}, {'time': 0.02184875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:33.698" endtime="20201115 23:00:33.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:33.714" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:33.702" endtime="20201115 23:00:33.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.719" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:00:33.718" endtime="20201115 23:00:33.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.722" level="INFO">VALUE: [5.36670000000003e-05, 5.340300000000048e-05, 5.388900000000141e-05, 5.36670000000003e-05, 5.3207999999999034e-05, 5.340300000000048e-05, 5.386100000000227e-05, 5.3707999999999534e-05, 5.369499999999944e-05, 5.393100000000012e-05, 5.3693999999999964e-05, 5.3471999999998854e-05, 5.3957999999999784e-05, 5.35410000000007e-05, 5.350000000000146e-05, 5.369499999999944e-05, 5.361100000000202e-05, 5.309699999999848e-05, 5.333399999999863e-05, 5.391700000000055e-05, 5.375000000000171e-05, 5.3721999999999104e-05, 5.331899999999959e-05, 5.325000000000121e-05, 5.331999999999906e-05, 5.397200000000282e-05, 5.308400000000185e-05, 5.391700000000055e-05, 5.3193999999999464e-05, 5.3693999999999964e-05, 5.309699999999848e-05, 5.361099999999855e-05, 5.333299999999916e-05, 5.323600000000164e-05, 5.3235999999998174e-05, 5.340300000000048e-05, 5.377800000000085e-05, 5.327800000000035e-05, 5.341700000000005e-05, 5.3263999999997313e-05, 5.379200000000042e-05, 5.34730000000018e-05, 5.388899999999794e-05, 5.398700000000187e-05, 5.380599999999999e-05, 5.334699999999873e-05, 5.351400000000103e-05, 5.358300000000288e-05, 5.3944000000000214e-05, 5.326299999999784e-05]</msg>
<status status="PASS" starttime="20201115 23:00:33.720" endtime="20201115 23:00:33.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.715" endtime="20201115 23:00:33.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.725" endtime="20201115 23:00:33.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:33.728" endtime="20201115 23:00:33.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.727" endtime="20201115 23:00:33.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.723" endtime="20201115 23:00:33.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.358" endtime="20201115 23:00:33.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.357" endtime="20201115 23:00:33.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.356" endtime="20201115 23:00:33.750"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.760" endtime="20201115 23:00:33.777"></status>
</kw>
<msg timestamp="20201115 23:00:33.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.758" endtime="20201115 23:00:33.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:33.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:33.778" endtime="20201115 23:00:33.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.781" endtime="20201115 23:00:33.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.756" endtime="20201115 23:00:33.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.754" endtime="20201115 23:00:33.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:33.789" endtime="20201115 23:00:34.074"></status>
</kw>
<msg timestamp="20201115 23:00:34.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:33.788" endtime="20201115 23:00:34.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021776736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.079" endtime="20201115 23:00:34.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.087" endtime="20201115 23:00:34.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.785" endtime="20201115 23:00:34.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.784" endtime="20201115 23:00:34.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.093" level="INFO">${RESULT} = [{'time': 0.021776736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.504200000000167e-05, 'source_diff': 5.504200000000167e-05}, {'time': 0.02184375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:34.090" endtime="20201115 23:00:34.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:34.095" endtime="20201115 23:00:34.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.112" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.111" endtime="20201115 23:00:34.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.114" level="INFO">VALUE: [5.504200000000167e-05, 5.441699999999758e-05, 5.406999999999981e-05, 5.4263999999998314e-05, 5.483400000000013e-05, 5.49869999999994e-05, 5.457000000000031e-05, 5.420899999999951e-05, 5.4513999999998564e-05, 5.450000000000246e-05, 5.4708000000000534e-05, 5.423600000000264e-05, 5.4194000000000464e-05, 5.477800000000185e-05, 5.433300000000016e-05, 5.4679999999997925e-05, 5.429200000000092e-05, 5.479200000000142e-05, 5.504200000000167e-05, 5.406999999999981e-05, 5.408299999999991e-05, 5.419499999999994e-05, 5.4638000000002684e-05, 5.458399999999988e-05, 5.482000000000056e-05, 5.4541999999997703e-05, 5.461199999999902e-05, 5.4887999999999465e-05, 5.483300000000066e-05, 5.4735999999999674e-05, 5.50549999999983e-05, 5.487499999999937e-05, 5.4999999999999494e-05, 5.459799999999945e-05, 5.490300000000198e-05, 5.4972000000000354e-05, 5.4958000000000784e-05, 5.465299999999826e-05, 5.463900000000216e-05, 5.416699999999733e-05, 5.448700000000237e-05, 5.4777999999998384e-05, 5.488900000000241e-05, 5.4958000000000784e-05, 5.43609999999993e-05, 5.4194000000000464e-05, 5.4263999999998314e-05, 5.4943999999997745e-05, 5.4485999999999424e-05, 5.481900000000109e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.113" endtime="20201115 23:00:34.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.108" endtime="20201115 23:00:34.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.117" endtime="20201115 23:00:34.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.121" endtime="20201115 23:00:34.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.119" endtime="20201115 23:00:34.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.116" endtime="20201115 23:00:34.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.752" endtime="20201115 23:00:34.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.751" endtime="20201115 23:00:34.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:33.750" endtime="20201115 23:00:34.142"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.152" endtime="20201115 23:00:34.170"></status>
</kw>
<msg timestamp="20201115 23:00:34.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.151" endtime="20201115 23:00:34.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.171" endtime="20201115 23:00:34.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.174" endtime="20201115 23:00:34.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.148" endtime="20201115 23:00:34.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.146" endtime="20201115 23:00:34.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.183" endtime="20201115 23:00:34.467"></status>
</kw>
<msg timestamp="20201115 23:00:34.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.181" endtime="20201115 23:00:34.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.471" endtime="20201115 23:00:34.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.480" endtime="20201115 23:00:34.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.179" endtime="20201115 23:00:34.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.177" endtime="20201115 23:00:34.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.487" level="INFO">${RESULT} = [{'time': 0.022562167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.588899999999994e-05, 'source_diff': 5.588899999999994e-05}, {'time': 0.022630181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.483" endtime="20201115 23:00:34.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.502" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:34.488" endtime="20201115 23:00:34.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.507" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.506" endtime="20201115 23:00:34.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.509" level="INFO">VALUE: [5.588899999999994e-05, 5.519500000000094e-05, 5.58610000000008e-05, 5.544499999999772e-05, 5.5750000000000244e-05, 5.558299999999794e-05, 5.534700000000073e-05, 5.5985999999997454e-05, 5.513899999999919e-05, 5.512499999999962e-05, 5.5180000000001894e-05, 5.5208000000001034e-05, 5.5471999999997385e-05, 5.5194000000001464e-05, 5.508300000000091e-05, 5.5736000000000674e-05, 5.569500000000144e-05, 5.6000000000000494e-05, 5.5777999999999384e-05, 5.515299999999876e-05, 5.591699999999908e-05, 5.5249999999999744e-05, 5.531899999999812e-05, 5.512499999999962e-05, 5.5179999999998425e-05, 5.5472000000000854e-05, 5.6000000000000494e-05, 5.513900000000266e-05, 5.516699999999833e-05, 5.5722000000001104e-05, 5.5986000000000924e-05, 5.5750000000000244e-05, 5.6055999999998773e-05, 5.5750000000000244e-05, 5.545900000000076e-05, 5.591699999999908e-05, 5.58480000000007e-05, 5.58480000000007e-05, 5.587500000000037e-05, 5.5722000000001104e-05, 5.590299999999951e-05, 5.5943999999998745e-05, 5.511100000000005e-05, 5.515299999999876e-05, 5.5957999999998315e-05, 5.533299999999769e-05, 5.554200000000217e-05, 5.538899999999944e-05, 5.6041999999999204e-05, 5.5777999999999384e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.508" endtime="20201115 23:00:34.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.503" endtime="20201115 23:00:34.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.512" endtime="20201115 23:00:34.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.516" endtime="20201115 23:00:34.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.514" endtime="20201115 23:00:34.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.511" endtime="20201115 23:00:34.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.145" endtime="20201115 23:00:34.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.143" endtime="20201115 23:00:34.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.142" endtime="20201115 23:00:34.537"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.547" endtime="20201115 23:00:34.565"></status>
</kw>
<msg timestamp="20201115 23:00:34.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.546" endtime="20201115 23:00:34.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.567" endtime="20201115 23:00:34.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.569" endtime="20201115 23:00:34.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.543" endtime="20201115 23:00:34.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.541" endtime="20201115 23:00:34.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.579" endtime="20201115 23:00:34.864"></status>
</kw>
<msg timestamp="20201115 23:00:34.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.577" endtime="20201115 23:00:34.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.868" endtime="20201115 23:00:34.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.876" endtime="20201115 23:00:34.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.574" endtime="20201115 23:00:34.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.572" endtime="20201115 23:00:34.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:34.883" level="INFO">${RESULT} = [{'time': 0.021751347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.662500000000112e-05, 'source_diff': 5.662500000000112e-05}, {'time': 0.021821389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:34.879" endtime="20201115 23:00:34.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:34.896" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:34.884" endtime="20201115 23:00:34.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.901" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:00:34.900" endtime="20201115 23:00:34.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.903" level="INFO">VALUE: [5.662500000000112e-05, 5.7042000000000204e-05, 5.680500000000005e-05, 5.644499999999872e-05, 5.6458000000002284e-05, 5.6805999999999524e-05, 5.6999999999998024e-05, 5.612500000000062e-05, 5.670899999999854e-05, 5.6750000000001244e-05, 5.636200000000077e-05, 5.620900000000151e-05, 5.659700000000198e-05, 5.6763999999997344e-05, 5.6764000000000814e-05, 5.688899999999747e-05, 5.609700000000148e-05, 5.6694000000002964e-05, 5.640300000000001e-05, 5.691700000000008e-05, 5.683299999999919e-05, 5.66809999999994e-05, 5.606999999999834e-05, 5.647299999999786e-05, 5.6514000000000564e-05, 5.6750000000001244e-05, 5.619499999999847e-05, 5.643099999999915e-05, 5.6443999999999245e-05, 5.6901999999997566e-05, 5.6416000000000105e-05, 5.631899999999912e-05, 5.6999999999998024e-05, 5.640300000000001e-05, 5.6499999999997524e-05, 5.6971999999998885e-05, 5.6541999999999704e-05, 5.611099999999758e-05, 5.608299999999844e-05, 5.611099999999758e-05, 5.643099999999915e-05, 5.612499999999715e-05, 5.657000000000231e-05, 5.6457999999998815e-05, 5.697299999999836e-05, 5.684699999999876e-05, 5.6957999999999315e-05, 5.6500000000000994e-05, 5.6152000000000285e-05, 5.6264000000000314e-05]</msg>
<status status="PASS" starttime="20201115 23:00:34.902" endtime="20201115 23:00:34.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.897" endtime="20201115 23:00:34.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.906" endtime="20201115 23:00:34.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:34.909" endtime="20201115 23:00:34.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.908" endtime="20201115 23:00:34.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.904" endtime="20201115 23:00:34.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.540" endtime="20201115 23:00:34.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.538" endtime="20201115 23:00:34.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.537" endtime="20201115 23:00:34.931"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.933" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.941" endtime="20201115 23:00:34.958"></status>
</kw>
<msg timestamp="20201115 23:00:34.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.940" endtime="20201115 23:00:34.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:34.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:34.959" endtime="20201115 23:00:34.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.962" endtime="20201115 23:00:34.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.937" endtime="20201115 23:00:34.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.935" endtime="20201115 23:00:34.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:34.971" endtime="20201115 23:00:35.256"></status>
</kw>
<msg timestamp="20201115 23:00:35.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:34.970" endtime="20201115 23:00:35.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.260" endtime="20201115 23:00:35.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.269" endtime="20201115 23:00:35.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.967" endtime="20201115 23:00:35.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.966" endtime="20201115 23:00:35.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.275" level="INFO">${RESULT} = [{'time': 0.021864375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.75689999999969e-05, 'source_diff': 5.75689999999969e-05}, {'time': 0.021928375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:35.272" endtime="20201115 23:00:35.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.289" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:35.276" endtime="20201115 23:00:35.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.293" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.292" endtime="20201115 23:00:35.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.296" level="INFO">VALUE: [5.75689999999969e-05, 5.7235999999998705e-05, 5.711100000000205e-05, 5.745899999999929e-05, 5.7999999999999025e-05, 5.78619999999988e-05, 5.7792000000000954e-05, 5.7444000000000245e-05, 5.7179999999996955e-05, 5.7986000000002924e-05, 5.762500000000212e-05, 5.733299999999969e-05, 5.7402000000001535e-05, 5.7764000000001814e-05, 5.7235999999998705e-05, 5.7263999999997844e-05, 5.7542000000000704e-05, 5.7971999999999885e-05, 5.7971999999999885e-05, 5.765300000000126e-05, 5.76810000000004e-05, 5.720899999999904e-05, 5.738899999999797e-05, 5.734699999999926e-05, 5.709700000000248e-05, 5.7221999999999135e-05, 5.779100000000148e-05, 5.756900000000037e-05, 5.752699999999819e-05, 5.740300000000101e-05, 5.731900000000012e-05, 5.790299999999804e-05, 5.8056000000000774e-05, 5.7514000000001564e-05, 5.738900000000144e-05, 5.762499999999865e-05, 5.786099999999933e-05, 5.7806000000000524e-05, 5.715299999999729e-05, 5.7806000000000524e-05, 5.7250000000001744e-05, 5.7556000000000274e-05, 5.70550000000003e-05, 5.7985999999999455e-05, 5.781900000000062e-05, 5.711099999999858e-05, 5.763900000000169e-05, 5.7528000000001134e-05, 5.781900000000062e-05, 5.7944000000000745e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.294" endtime="20201115 23:00:35.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.290" endtime="20201115 23:00:35.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.299" endtime="20201115 23:00:35.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.302" endtime="20201115 23:00:35.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.301" endtime="20201115 23:00:35.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.297" endtime="20201115 23:00:35.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.934" endtime="20201115 23:00:35.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.932" endtime="20201115 23:00:35.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:34.931" endtime="20201115 23:00:35.323"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.326" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.334" endtime="20201115 23:00:35.352"></status>
</kw>
<msg timestamp="20201115 23:00:35.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.333" endtime="20201115 23:00:35.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.353" endtime="20201115 23:00:35.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.356" endtime="20201115 23:00:35.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.330" endtime="20201115 23:00:35.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.328" endtime="20201115 23:00:35.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.365" endtime="20201115 23:00:35.650"></status>
</kw>
<msg timestamp="20201115 23:00:35.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.363" endtime="20201115 23:00:35.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022816833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.654" endtime="20201115 23:00:35.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.662" endtime="20201115 23:00:35.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.361" endtime="20201115 23:00:35.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.359" endtime="20201115 23:00:35.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:35.669" level="INFO">${RESULT} = [{'time': 0.022875806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.897299999999689e-05, 'source_diff': 5.897299999999689e-05}, {'time': 0.022944806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:35.666" endtime="20201115 23:00:35.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:35.682" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:35.670" endtime="20201115 23:00:35.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.687" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:00:35.686" endtime="20201115 23:00:35.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.690" level="INFO">VALUE: [5.897299999999689e-05, 5.843100000000115e-05, 5.886100000000033e-05, 5.848699999999943e-05, 5.8916000000002605e-05, 5.831900000000112e-05, 5.8278000000001884e-05, 5.809700000000001e-05, 5.8971999999997415e-05, 5.841700000000158e-05, 5.8749999999999775e-05, 5.8777999999998914e-05, 5.9013999999999595e-05, 5.8194000000000995e-05, 5.81810000000009e-05, 5.8083999999999913e-05, 5.8235999999999705e-05, 5.8334000000000163e-05, 5.8848000000000233e-05, 5.8235999999999705e-05, 5.8680000000001925e-05, 5.8929999999998706e-05, 5.859700000000051e-05, 5.8722000000000635e-05, 5.8722000000000635e-05, 5.809700000000001e-05, 5.9013999999999595e-05, 5.8749999999999775e-05, 5.868099999999793e-05, 5.8194999999997e-05, 5.866700000000183e-05, 5.81810000000009e-05, 5.870900000000054e-05, 5.83749999999994e-05, 5.811199999999905e-05, 5.852699999999919e-05, 5.813899999999872e-05, 5.829100000000198e-05, 5.8264000000002314e-05, 5.880499999999858e-05, 5.8278000000001884e-05, 5.8679999999998456e-05, 5.8986000000000455e-05, 5.8542000000001704e-05, 5.891699999999861e-05, 5.8222000000000135e-05, 5.8820000000001094e-05, 5.8499999999999525e-05, 5.86949999999975e-05, 5.868099999999793e-05]</msg>
<status status="PASS" starttime="20201115 23:00:35.688" endtime="20201115 23:00:35.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.683" endtime="20201115 23:00:35.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.693" endtime="20201115 23:00:35.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:35.696" endtime="20201115 23:00:35.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.694" endtime="20201115 23:00:35.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.691" endtime="20201115 23:00:35.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.326" endtime="20201115 23:00:35.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.324" endtime="20201115 23:00:35.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.324" endtime="20201115 23:00:35.718"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.720" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.728" endtime="20201115 23:00:35.746"></status>
</kw>
<msg timestamp="20201115 23:00:35.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.727" endtime="20201115 23:00:35.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:35.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:35.748" endtime="20201115 23:00:35.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.750" endtime="20201115 23:00:35.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.724" endtime="20201115 23:00:35.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.722" endtime="20201115 23:00:35.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:35.759" endtime="20201115 23:00:36.044"></status>
</kw>
<msg timestamp="20201115 23:00:36.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:35.757" endtime="20201115 23:00:36.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023360861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.048" endtime="20201115 23:00:36.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.056" endtime="20201115 23:00:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.755" endtime="20201115 23:00:36.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.753" endtime="20201115 23:00:36.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.063" level="INFO">${RESULT} = [{'time': 0.023420097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9236000000000705e-05, 'source_diff': 5.9236000000000705e-05}, {'time': 0.023491125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:36.059" endtime="20201115 23:00:36.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.077" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:36.064" endtime="20201115 23:00:36.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.082" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.081" endtime="20201115 23:00:36.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.084" level="INFO">VALUE: [5.9236000000000705e-05, 5.9958000000002315e-05, 5.9319999999998124e-05, 5.9471999999997915e-05, 5.916699999999886e-05, 5.908299999999797e-05, 5.954099999999976e-05, 5.913899999999972e-05, 5.9263999999999845e-05, 5.941699999999911e-05, 5.966699999999936e-05, 5.9222000000001135e-05, 5.983300000000219e-05, 5.919500000000147e-05, 5.9194999999998e-05, 5.911099999999711e-05, 5.9278000000002884e-05, 5.9263999999999845e-05, 5.9570000000001844e-05, 5.954099999999976e-05, 5.9750000000000775e-05, 5.9250000000000275e-05, 5.934700000000126e-05, 5.908299999999797e-05, 5.9263999999999845e-05, 5.980499999999958e-05, 5.9514000000000095e-05, 5.9957999999998846e-05, 5.9986000000001455e-05, 5.980499999999958e-05, 5.922300000000061e-05, 5.991700000000308e-05, 5.986099999999786e-05, 5.913899999999972e-05, 6.0028000000000165e-05, 5.977700000000044e-05, 5.954099999999976e-05, 5.9472000000001385e-05, 5.9401999999996596e-05, 5.906900000000187e-05, 5.955499999999933e-05, 5.991699999999961e-05, 5.993099999999918e-05, 5.9221999999997665e-05, 5.9306000000002024e-05, 5.9070000000001344e-05, 5.9721999999998165e-05, 5.9792000000002954e-05, 5.941699999999911e-05, 5.9347999999997264e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.083" endtime="20201115 23:00:36.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.078" endtime="20201115 23:00:36.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.088" endtime="20201115 23:00:36.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.091" endtime="20201115 23:00:36.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.090" endtime="20201115 23:00:36.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.086" endtime="20201115 23:00:36.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.721" endtime="20201115 23:00:36.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.719" endtime="20201115 23:00:36.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:35.718" endtime="20201115 23:00:36.113"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.115" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.123" endtime="20201115 23:00:36.139"></status>
</kw>
<msg timestamp="20201115 23:00:36.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.122" endtime="20201115 23:00:36.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.141" endtime="20201115 23:00:36.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.143" endtime="20201115 23:00:36.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.119" endtime="20201115 23:00:36.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.117" endtime="20201115 23:00:36.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.152" endtime="20201115 23:00:36.438"></status>
</kw>
<msg timestamp="20201115 23:00:36.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.151" endtime="20201115 23:00:36.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.442" endtime="20201115 23:00:36.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.450" endtime="20201115 23:00:36.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.148" endtime="20201115 23:00:36.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.147" endtime="20201115 23:00:36.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.457" level="INFO">${RESULT} = [{'time': 0.021800319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.034699999999879e-05, 'source_diff': 6.034699999999879e-05}, {'time': 0.021871319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.454" endtime="20201115 23:00:36.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.470" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:36.458" endtime="20201115 23:00:36.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.475" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.474" endtime="20201115 23:00:36.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.478" level="INFO">VALUE: [6.034699999999879e-05, 6.0902000000001566e-05, 6.0985999999998985e-05, 6.0694000000000026e-05, 6.0707999999999596e-05, 6.038900000000097e-05, 6.038900000000097e-05, 6.0569999999999374e-05, 6.041700000000011e-05, 6.0320000000002594e-05, 6.066700000000036e-05, 6.072299999999864e-05, 6.0278000000000415e-05, 6.0778000000000915e-05, 6.0166000000000386e-05, 6.066700000000036e-05, 6.0972000000002885e-05, 6.0430000000000206e-05, 6.0888999999998e-05, 6.081900000000015e-05, 6.065299999999732e-05, 6.0764000000001345e-05, 6.0971999999999416e-05, 6.0472000000002385e-05, 6.0999999999998555e-05, 6.0971999999999416e-05, 6.043099999999968e-05, 6.0471999999998916e-05, 6.012500000000115e-05, 6.015300000000029e-05, 6.012500000000115e-05, 6.004100000000026e-05, 6.0665999999997416e-05, 6.0764000000001345e-05, 6.0193999999999526e-05, 6.1000000000002025e-05, 6.0555999999999804e-05, 6.00689999999994e-05, 6.081900000000015e-05, 6.0250000000001275e-05, 6.0707999999999596e-05, 6.105599999999684e-05, 6.016699999999986e-05, 6.0888999999998e-05, 6.0236000000001705e-05, 6.091700000000061e-05, 6.043100000000315e-05, 6.081900000000015e-05, 6.091700000000061e-05, 6.040300000000054e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.476" endtime="20201115 23:00:36.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.471" endtime="20201115 23:00:36.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.481" endtime="20201115 23:00:36.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.484" endtime="20201115 23:00:36.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.483" endtime="20201115 23:00:36.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.479" endtime="20201115 23:00:36.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.116" endtime="20201115 23:00:36.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.114" endtime="20201115 23:00:36.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.113" endtime="20201115 23:00:36.506"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.508" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.516" endtime="20201115 23:00:36.533"></status>
</kw>
<msg timestamp="20201115 23:00:36.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.515" endtime="20201115 23:00:36.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.534" endtime="20201115 23:00:36.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.537" endtime="20201115 23:00:36.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.512" endtime="20201115 23:00:36.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.510" endtime="20201115 23:00:36.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.546" endtime="20201115 23:00:36.831"></status>
</kw>
<msg timestamp="20201115 23:00:36.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:36.544" endtime="20201115 23:00:36.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02170975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771236, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:36.835" endtime="20201115 23:00:36.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.843" endtime="20201115 23:00:36.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.542" endtime="20201115 23:00:36.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.540" endtime="20201115 23:00:36.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:36.850" level="INFO">${RESULT} = [{'time': 0.021771236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.148599999999949e-05, 'source_diff': 6.148599999999949e-05}, {'time': 0.021846278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:36.847" endtime="20201115 23:00:36.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:36.864" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:36.851" endtime="20201115 23:00:36.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.868" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:00:36.867" endtime="20201115 23:00:36.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.871" level="INFO">VALUE: [6.148599999999949e-05, 6.1888999999999e-05, 6.106999999999987e-05, 6.148599999999949e-05, 6.127800000000141e-05, 6.191700000000161e-05, 6.15560000000008e-05, 6.176400000000234e-05, 6.186199999999933e-05, 6.162499999999918e-05, 6.152700000000219e-05, 6.142999999999774e-05, 6.183300000000072e-05, 6.12080000000001e-05, 6.186099999999986e-05, 6.111099999999911e-05, 6.184700000000029e-05, 6.162499999999918e-05, 6.14300000000012e-05, 6.194400000000128e-05, 6.182000000000062e-05, 6.197200000000042e-05, 6.15560000000008e-05, 6.16950000000005e-05, 6.127800000000141e-05, 6.198699999999946e-05, 6.138799999999903e-05, 6.198599999999999e-05, 6.12080000000001e-05, 6.14300000000012e-05, 6.184700000000029e-05, 6.149999999999906e-05, 6.190300000000204e-05, 6.18340000000002e-05, 6.177699999999897e-05, 6.15690000000009e-05, 6.136099999999936e-05, 6.123599999999924e-05, 6.116700000000086e-05, 6.137499999999893e-05, 6.122300000000261e-05, 6.177799999999845e-05, 6.131899999999718e-05, 6.148600000000295e-05, 6.12360000000027e-05, 6.127800000000141e-05, 6.187499999999943e-05, 6.191600000000214e-05, 6.105499999999736e-05, 6.204200000000173e-05]</msg>
<status status="PASS" starttime="20201115 23:00:36.869" endtime="20201115 23:00:36.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.865" endtime="20201115 23:00:36.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.874" endtime="20201115 23:00:36.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:36.877" endtime="20201115 23:00:36.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.876" endtime="20201115 23:00:36.897"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.872" endtime="20201115 23:00:36.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.509" endtime="20201115 23:00:36.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.507" endtime="20201115 23:00:36.898"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.506" endtime="20201115 23:00:36.899"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.901" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.909" endtime="20201115 23:00:36.926"></status>
</kw>
<msg timestamp="20201115 23:00:36.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.908" endtime="20201115 23:00:36.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:36.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:36.927" endtime="20201115 23:00:36.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.930" endtime="20201115 23:00:36.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.905" endtime="20201115 23:00:36.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.903" endtime="20201115 23:00:36.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:36.939" endtime="20201115 23:00:37.224"></status>
</kw>
<msg timestamp="20201115 23:00:37.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:36.937" endtime="20201115 23:00:37.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.228" endtime="20201115 23:00:37.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.237" endtime="20201115 23:00:37.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.935" endtime="20201115 23:00:37.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.933" endtime="20201115 23:00:37.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.243" level="INFO">${RESULT} = [{'time': 0.021737819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2582999999998e-05, 'source_diff': 6.2582999999998e-05}, {'time': 0.021811819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 23:00:37.240" endtime="20201115 23:00:37.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.257" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:37.244" endtime="20201115 23:00:37.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.261" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.260" endtime="20201115 23:00:37.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.264" level="INFO">VALUE: [6.2582999999998e-05, 6.247200000000092e-05, 6.27500000000003e-05, 6.29300000000027e-05, 6.279199999999902e-05, 6.269400000000203e-05, 6.215300000000229e-05, 6.213899999999925e-05, 6.250000000000006e-05, 6.247200000000092e-05, 6.236100000000036e-05, 6.30279999999997e-05, 6.245900000000082e-05, 6.276399999999988e-05, 6.237499999999993e-05, 6.229099999999904e-05, 6.24439999999983e-05, 6.300000000000056e-05, 6.230500000000208e-05, 6.245800000000135e-05, 6.29439999999988e-05, 6.23889999999995e-05, 6.25279999999992e-05, 6.209700000000054e-05, 6.304199999999927e-05, 6.2195000000001e-05, 6.245900000000082e-05, 6.297199999999795e-05, 6.290299999999957e-05, 6.26950000000015e-05, 6.269399999999856e-05, 6.295800000000185e-05, 6.287499999999696e-05, 6.234700000000079e-05, 6.24019999999996e-05, 6.269400000000203e-05, 6.301400000000013e-05, 6.218000000000196e-05, 6.259700000000104e-05, 6.269399999999856e-05, 6.273600000000074e-05, 6.255599999999834e-05, 6.293099999999871e-05, 6.269499999999803e-05, 6.24300000000022e-05, 6.27089999999976e-05, 6.262500000000018e-05, 6.215199999999935e-05, 6.286099999999739e-05, 6.236100000000036e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.262" endtime="20201115 23:00:37.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.258" endtime="20201115 23:00:37.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.267" endtime="20201115 23:00:37.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.270" endtime="20201115 23:00:37.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.269" endtime="20201115 23:00:37.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.265" endtime="20201115 23:00:37.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.901" endtime="20201115 23:00:37.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.900" endtime="20201115 23:00:37.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:36.899" endtime="20201115 23:00:37.291"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.302" endtime="20201115 23:00:37.319"></status>
</kw>
<msg timestamp="20201115 23:00:37.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.300" endtime="20201115 23:00:37.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.321" endtime="20201115 23:00:37.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.323" endtime="20201115 23:00:37.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.298" endtime="20201115 23:00:37.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.296" endtime="20201115 23:00:37.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.333" endtime="20201115 23:00:37.617"></status>
</kw>
<msg timestamp="20201115 23:00:37.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.331" endtime="20201115 23:00:37.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022530819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.621" endtime="20201115 23:00:37.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.630" endtime="20201115 23:00:37.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.328" endtime="20201115 23:00:37.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.327" endtime="20201115 23:00:37.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:37.636" level="INFO">${RESULT} = [{'time': 0.022530819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.352700000000072e-05, 'source_diff': 6.352700000000072e-05}, {'time': 0.022602847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:37.633" endtime="20201115 23:00:37.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:37.651" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:37.637" endtime="20201115 23:00:37.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.655" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:00:37.654" endtime="20201115 23:00:37.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.658" level="INFO">VALUE: [6.352700000000072e-05, 6.381899999999968e-05, 6.322299999999767e-05, 6.342999999999974e-05, 6.377800000000045e-05, 6.331900000000265e-05, 6.32219999999982e-05, 6.368099999999946e-05, 6.341699999999964e-05, 6.354199999999977e-05, 6.348600000000149e-05, 6.391700000000014e-05, 6.305599999999884e-05, 6.386100000000186e-05, 6.365200000000085e-05, 6.342999999999974e-05, 6.331899999999918e-05, 6.373600000000174e-05, 6.340300000000007e-05, 6.323599999999777e-05, 6.309700000000154e-05, 6.34439999999993e-05, 6.386100000000186e-05, 6.395799999999938e-05, 6.323600000000124e-05, 6.3889000000001e-05, 6.391700000000014e-05, 6.320900000000157e-05, 6.36950000000025e-05, 6.373600000000174e-05, 6.322200000000167e-05, 6.308300000000197e-05, 6.313900000000025e-05, 6.40280000000007e-05, 6.356899999999943e-05, 6.32219999999982e-05, 6.369399999999956e-05, 6.327799999999995e-05, 6.377799999999698e-05, 6.390300000000057e-05, 6.316699999999939e-05, 6.319399999999906e-05, 6.345899999999835e-05, 6.312500000000068e-05, 6.337500000000093e-05, 6.400000000000156e-05, 6.351400000000063e-05, 6.316599999999992e-05, 6.309699999999807e-05, 6.370799999999913e-05]</msg>
<status status="PASS" starttime="20201115 23:00:37.657" endtime="20201115 23:00:37.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.652" endtime="20201115 23:00:37.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.661" endtime="20201115 23:00:37.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:37.664" endtime="20201115 23:00:37.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.663" endtime="20201115 23:00:37.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.659" endtime="20201115 23:00:37.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.294" endtime="20201115 23:00:37.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.293" endtime="20201115 23:00:37.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.292" endtime="20201115 23:00:37.686"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.696" endtime="20201115 23:00:37.713"></status>
</kw>
<msg timestamp="20201115 23:00:37.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.695" endtime="20201115 23:00:37.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:37.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:37.714" endtime="20201115 23:00:37.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.721" endtime="20201115 23:00:37.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.692" endtime="20201115 23:00:37.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.690" endtime="20201115 23:00:37.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:37.731" endtime="20201115 23:00:38.016"></status>
</kw>
<msg timestamp="20201115 23:00:38.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:37.729" endtime="20201115 23:00:38.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.020" endtime="20201115 23:00:38.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.028" endtime="20201115 23:00:38.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.727" endtime="20201115 23:00:38.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.725" endtime="20201115 23:00:38.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.035" level="INFO">${RESULT} = [{'time': 0.021799153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.455600000000034e-05, 'source_diff': 6.455600000000034e-05}, {'time': 0.021871125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.032" endtime="20201115 23:00:38.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.048" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:38.036" endtime="20201115 23:00:38.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.053" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.052" endtime="20201115 23:00:38.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.055" level="INFO">VALUE: [6.455600000000034e-05, 6.468100000000046e-05, 6.420799999999963e-05, 6.448599999999902e-05, 6.495899999999985e-05, 6.493100000000071e-05, 6.477799999999798e-05, 6.423699999999824e-05, 6.420799999999963e-05, 6.44159999999977e-05, 6.443000000000074e-05, 6.420799999999963e-05, 6.47219999999997e-05, 6.430600000000009e-05, 6.411100000000211e-05, 6.45280000000012e-05, 6.423599999999877e-05, 6.477799999999798e-05, 6.49029999999981e-05, 6.495900000000332e-05, 6.440300000000107e-05, 6.419499999999953e-05, 6.45280000000012e-05, 6.434700000000279e-05, 6.495800000000038e-05, 6.429199999999705e-05, 6.49159999999982e-05, 6.456900000000043e-05, 6.426400000000138e-05, 6.443000000000074e-05, 6.497199999999995e-05, 6.477800000000145e-05, 6.479200000000102e-05, 6.491699999999767e-05, 6.413899999999778e-05, 6.426400000000138e-05, 6.498599999999952e-05, 6.437499999999846e-05, 6.470800000000013e-05, 6.413799999999831e-05, 6.465200000000185e-05, 6.463900000000175e-05, 6.404200000000027e-05, 6.501399999999866e-05, 6.412499999999821e-05, 6.418099999999996e-05, 6.444499999999978e-05, 6.42219999999992e-05, 6.461099999999914e-05, 6.444499999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.054" endtime="20201115 23:00:38.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.049" endtime="20201115 23:00:38.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.059" endtime="20201115 23:00:38.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.062" endtime="20201115 23:00:38.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.060" endtime="20201115 23:00:38.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.057" endtime="20201115 23:00:38.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.689" endtime="20201115 23:00:38.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.687" endtime="20201115 23:00:38.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:37.686" endtime="20201115 23:00:38.083"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.085" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.094" endtime="20201115 23:00:38.112"></status>
</kw>
<msg timestamp="20201115 23:00:38.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.092" endtime="20201115 23:00:38.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.113" endtime="20201115 23:00:38.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.116" endtime="20201115 23:00:38.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.089" endtime="20201115 23:00:38.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.087" endtime="20201115 23:00:38.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.125" endtime="20201115 23:00:38.411"></status>
</kw>
<msg timestamp="20201115 23:00:38.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.123" endtime="20201115 23:00:38.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.416" endtime="20201115 23:00:38.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.424" endtime="20201115 23:00:38.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.121" endtime="20201115 23:00:38.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.119" endtime="20201115 23:00:38.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.430" level="INFO">${RESULT} = [{'time': 0.022361208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.57639999999994e-05, 'source_diff': 6.57639999999994e-05}, {'time': 0.02243325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:38.427" endtime="20201115 23:00:38.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.444" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:38.431" endtime="20201115 23:00:38.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.448" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.447" endtime="20201115 23:00:38.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.451" level="INFO">VALUE: [6.57639999999994e-05, 6.545799999999741e-05, 6.504100000000179e-05, 6.54159999999987e-05, 6.533300000000075e-05, 6.562499999999971e-05, 6.505600000000084e-05, 6.52220000000002e-05, 6.577799999999898e-05, 6.55419999999983e-05, 6.519500000000053e-05, 6.597300000000042e-05, 6.586199999999987e-05, 6.57090000000006e-05, 6.579099999999907e-05, 6.588800000000006e-05, 6.53890000000025e-05, 6.577799999999898e-05, 6.573600000000027e-05, 6.581900000000168e-05, 6.52500000000028e-05, 6.602799999999923e-05, 6.570799999999766e-05, 6.57639999999994e-05, 6.555599999999787e-05, 6.57639999999994e-05, 6.57639999999994e-05, 6.537499999999946e-05, 6.570800000000113e-05, 6.568000000000199e-05, 6.549999999999959e-05, 6.556900000000143e-05, 6.530600000000109e-05, 6.566700000000189e-05, 6.512499999999921e-05, 6.513900000000225e-05, 6.566699999999842e-05, 6.545900000000035e-05, 6.573600000000027e-05, 6.588899999999953e-05, 6.580600000000159e-05, 6.529200000000152e-05, 6.574999999999984e-05, 6.513899999999878e-05, 6.526400000000238e-05, 6.583300000000125e-05, 6.595799999999791e-05, 6.602799999999923e-05, 6.515299999999835e-05, 6.580599999999812e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.449" endtime="20201115 23:00:38.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.444" endtime="20201115 23:00:38.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.454" endtime="20201115 23:00:38.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.457" endtime="20201115 23:00:38.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.456" endtime="20201115 23:00:38.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.452" endtime="20201115 23:00:38.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.086" endtime="20201115 23:00:38.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.084" endtime="20201115 23:00:38.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.083" endtime="20201115 23:00:38.479"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.482" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.490" endtime="20201115 23:00:38.507"></status>
</kw>
<msg timestamp="20201115 23:00:38.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.489" endtime="20201115 23:00:38.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.508" endtime="20201115 23:00:38.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.511" endtime="20201115 23:00:38.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.486" endtime="20201115 23:00:38.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.484" endtime="20201115 23:00:38.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.520" endtime="20201115 23:00:38.804"></status>
</kw>
<msg timestamp="20201115 23:00:38.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.518" endtime="20201115 23:00:38.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022963431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.808" endtime="20201115 23:00:38.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.817" endtime="20201115 23:00:38.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.516" endtime="20201115 23:00:38.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.514" endtime="20201115 23:00:38.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:38.823" level="INFO">${RESULT} = [{'time': 0.022963431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.606999999999794e-05, 'source_diff': 6.606999999999794e-05}, {'time': 0.023036458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:38.820" endtime="20201115 23:00:38.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:38.836" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:38.824" endtime="20201115 23:00:38.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.841" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:00:38.840" endtime="20201115 23:00:38.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.843" level="INFO">VALUE: [6.606999999999794e-05, 6.620799999999816e-05, 6.679199999999955e-05, 6.69160000000002e-05, 6.623600000000077e-05, 6.672199999999823e-05, 6.705600000000284e-05, 6.627799999999948e-05, 6.67359999999978e-05, 6.669499999999856e-05, 6.698600000000152e-05, 6.62220000000012e-05, 6.695899999999838e-05, 6.645900000000135e-05, 6.647300000000092e-05, 6.612499999999674e-05, 6.612500000000021e-05, 6.650000000000059e-05, 6.698599999999805e-05, 6.619399999999859e-05, 6.674999999999737e-05, 6.680600000000259e-05, 6.609700000000107e-05, 6.662500000000071e-05, 6.677799999999998e-05, 6.608400000000098e-05, 6.65419999999993e-05, 6.645900000000135e-05, 6.691699999999967e-05, 6.630499999999914e-05, 6.680499999999964e-05, 6.636100000000089e-05, 6.618000000000249e-05, 6.625000000000034e-05, 6.64029999999996e-05, 6.661099999999767e-05, 6.632000000000166e-05, 6.674999999999737e-05, 6.630499999999914e-05, 6.662500000000071e-05, 6.655600000000234e-05, 6.677799999999998e-05, 6.67229999999977e-05, 6.67359999999978e-05, 6.666599999999995e-05, 6.667999999999952e-05, 6.627799999999948e-05, 6.62639999999999e-05, 6.697199999999848e-05, 6.676399999999694e-05]</msg>
<status status="PASS" starttime="20201115 23:00:38.842" endtime="20201115 23:00:38.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.837" endtime="20201115 23:00:38.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.847" endtime="20201115 23:00:38.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:38.850" endtime="20201115 23:00:38.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.849" endtime="20201115 23:00:38.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.845" endtime="20201115 23:00:38.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.482" endtime="20201115 23:00:38.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.480" endtime="20201115 23:00:38.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.479" endtime="20201115 23:00:38.872"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.874" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.882" endtime="20201115 23:00:38.901"></status>
</kw>
<msg timestamp="20201115 23:00:38.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.880" endtime="20201115 23:00:38.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:38.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:38.902" endtime="20201115 23:00:38.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.905" endtime="20201115 23:00:38.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.878" endtime="20201115 23:00:38.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.876" endtime="20201115 23:00:38.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:38.913" endtime="20201115 23:00:39.199"></status>
</kw>
<msg timestamp="20201115 23:00:39.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023499278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023566861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:38.912" endtime="20201115 23:00:39.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023499278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023566861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.203" endtime="20201115 23:00:39.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.211" endtime="20201115 23:00:39.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.909" endtime="20201115 23:00:39.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.908" endtime="20201115 23:00:39.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.218" level="INFO">${RESULT} = [{'time': 0.023566861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7583000000003e-05, 'source_diff': 6.7583000000003e-05}, {'time': 0.023640861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201115 23:00:39.214" endtime="20201115 23:00:39.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.232" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:39.219" endtime="20201115 23:00:39.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.237" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.236" endtime="20201115 23:00:39.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.240" level="INFO">VALUE: [6.7583000000003e-05, 6.77359999999988e-05, 6.752800000000073e-05, 6.770799999999966e-05, 6.768099999999999e-05, 6.755599999999987e-05, 6.729200000000005e-05, 6.769499999999956e-05, 6.749999999999812e-05, 6.790299999999763e-05, 6.795900000000285e-05, 6.798599999999905e-05, 6.752800000000073e-05, 6.787500000000196e-05, 6.74160000000007e-05, 6.781900000000021e-05, 6.766699999999695e-05, 6.769499999999956e-05, 6.793100000000024e-05, 6.804199999999733e-05, 6.748600000000202e-05, 6.745899999999888e-05, 6.715300000000035e-05, 6.748599999999855e-05, 6.79030000000011e-05, 6.798599999999905e-05, 6.801400000000166e-05, 6.798599999999905e-05, 6.70830000000025e-05, 6.733300000000275e-05, 6.775000000000184e-05, 6.794400000000034e-05, 6.706899999999946e-05, 6.751400000000116e-05, 6.768099999999999e-05, 6.706999999999894e-05, 6.745900000000235e-05, 6.797199999999948e-05, 6.788900000000153e-05, 6.769400000000009e-05, 6.795799999999991e-05, 6.748599999999855e-05, 6.791700000000067e-05, 6.759700000000257e-05, 6.788900000000153e-05, 6.758299999999953e-05, 6.766700000000042e-05, 6.718000000000002e-05, 6.713900000000078e-05, 6.774999999999837e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.238" endtime="20201115 23:00:39.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.233" endtime="20201115 23:00:39.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.243" endtime="20201115 23:00:39.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.246" endtime="20201115 23:00:39.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.245" endtime="20201115 23:00:39.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.241" endtime="20201115 23:00:39.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.874" endtime="20201115 23:00:39.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.873" endtime="20201115 23:00:39.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:38.872" endtime="20201115 23:00:39.268"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.278" endtime="20201115 23:00:39.296"></status>
</kw>
<msg timestamp="20201115 23:00:39.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.276" endtime="20201115 23:00:39.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.298" endtime="20201115 23:00:39.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.300" endtime="20201115 23:00:39.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.274" endtime="20201115 23:00:39.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.272" endtime="20201115 23:00:39.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.309" endtime="20201115 23:00:39.594"></status>
</kw>
<msg timestamp="20201115 23:00:39.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.308" endtime="20201115 23:00:39.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.599" endtime="20201115 23:00:39.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.607" endtime="20201115 23:00:39.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.305" endtime="20201115 23:00:39.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.303" endtime="20201115 23:00:39.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:39.613" level="INFO">${RESULT} = [{'time': 0.021827139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.829199999999758e-05, 'source_diff': 6.829199999999758e-05}, {'time': 0.021903181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:39.610" endtime="20201115 23:00:39.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:39.627" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:39.615" endtime="20201115 23:00:39.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.632" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:00:39.631" endtime="20201115 23:00:39.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.634" level="INFO">VALUE: [6.829199999999758e-05, 6.898699999999952e-05, 6.806999999999994e-05, 6.895900000000038e-05, 6.882000000000069e-05, 6.852799999999826e-05, 6.887500000000296e-05, 6.850000000000259e-05, 6.845800000000041e-05, 6.838900000000203e-05, 6.874999999999937e-05, 6.881899999999774e-05, 6.855500000000139e-05, 6.897200000000048e-05, 6.880499999999817e-05, 6.843100000000074e-05, 6.806999999999994e-05, 6.862499999999924e-05, 6.904199999999833e-05, 6.859799999999958e-05, 6.883400000000026e-05, 6.869399999999762e-05, 6.815199999999841e-05, 6.82359999999993e-05, 6.843000000000127e-05, 6.87909999999986e-05, 6.808300000000003e-05, 6.899999999999962e-05, 6.890299999999863e-05, 6.869400000000109e-05, 6.872200000000023e-05, 6.811099999999917e-05, 6.82359999999993e-05, 6.844399999999737e-05, 6.87359999999998e-05, 6.883400000000026e-05, 6.85970000000001e-05, 6.808300000000003e-05, 6.834699999999985e-05, 6.899999999999962e-05, 6.87359999999998e-05, 6.819400000000059e-05, 6.865299999999838e-05, 6.877800000000198e-05, 6.90970000000006e-05, 6.80420000000008e-05, 6.876399999999894e-05, 6.838899999999856e-05, 6.84030000000016e-05, 6.831899999999724e-05]</msg>
<status status="PASS" starttime="20201115 23:00:39.633" endtime="20201115 23:00:39.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.628" endtime="20201115 23:00:39.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.637" endtime="20201115 23:00:39.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:39.641" endtime="20201115 23:00:39.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.639" endtime="20201115 23:00:39.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.636" endtime="20201115 23:00:39.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.270" endtime="20201115 23:00:39.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.269" endtime="20201115 23:00:39.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.268" endtime="20201115 23:00:39.662"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.673" endtime="20201115 23:00:39.690"></status>
</kw>
<msg timestamp="20201115 23:00:39.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.671" endtime="20201115 23:00:39.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:39.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:39.692" endtime="20201115 23:00:39.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.694" endtime="20201115 23:00:39.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.669" endtime="20201115 23:00:39.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.666" endtime="20201115 23:00:39.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:39.703" endtime="20201115 23:00:39.989"></status>
</kw>
<msg timestamp="20201115 23:00:39.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.702" endtime="20201115 23:00:39.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:39.993" endtime="20201115 23:00:40.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.002" endtime="20201115 23:00:40.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.699" endtime="20201115 23:00:40.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.698" endtime="20201115 23:00:40.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.009" level="INFO">${RESULT} = [{'time': 0.021998694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.920799999999769e-05, 'source_diff': 6.920799999999769e-05}, {'time': 0.022077694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.005" endtime="20201115 23:00:40.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.022" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:40.010" endtime="20201115 23:00:40.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.027" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.026" endtime="20201115 23:00:40.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.029" level="INFO">VALUE: [6.920799999999769e-05, 6.912499999999974e-05, 6.947200000000098e-05, 6.922200000000073e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.979200000000255e-05, 6.924999999999987e-05, 7.002799999999976e-05, 6.94169999999987e-05, 6.948600000000055e-05, 7.008300000000203e-05, 6.987500000000049e-05, 6.932000000000119e-05, 6.958299999999806e-05, 6.917999999999855e-05, 6.966699999999895e-05, 6.993099999999877e-05, 7.002799999999976e-05, 6.998600000000105e-05, 7.00420000000028e-05, 6.998599999999758e-05, 6.927800000000248e-05, 6.997200000000148e-05, 6.993099999999877e-05, 6.944500000000131e-05, 6.951399999999969e-05, 6.969500000000156e-05, 6.945800000000141e-05, 6.983299999999831e-05, 6.937499999999999e-05, 6.988900000000006e-05, 6.94299999999988e-05, 6.998600000000105e-05, 6.90420000000018e-05, 6.986099999999745e-05, 6.976399999999994e-05, 7.002799999999976e-05, 6.931999999999772e-05, 6.941700000000217e-05, 6.90840000000005e-05, 6.95970000000011e-05, 6.926299999999996e-05, 6.969399999999862e-05, 7.000000000000062e-05, 6.976399999999994e-05, 6.984699999999788e-05, 6.911100000000017e-05, 6.970799999999819e-05, 6.979200000000255e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.028" endtime="20201115 23:00:40.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.023" endtime="20201115 23:00:40.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.032" endtime="20201115 23:00:40.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.036" endtime="20201115 23:00:40.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.034" endtime="20201115 23:00:40.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.030" endtime="20201115 23:00:40.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.665" endtime="20201115 23:00:40.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.663" endtime="20201115 23:00:40.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:39.662" endtime="20201115 23:00:40.057"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.059" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.067" endtime="20201115 23:00:40.084"></status>
</kw>
<msg timestamp="20201115 23:00:40.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.066" endtime="20201115 23:00:40.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.086" endtime="20201115 23:00:40.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.089" endtime="20201115 23:00:40.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.063" endtime="20201115 23:00:40.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.061" endtime="20201115 23:00:40.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.098" endtime="20201115 23:00:40.384"></status>
</kw>
<msg timestamp="20201115 23:00:40.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.096" endtime="20201115 23:00:40.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.388" endtime="20201115 23:00:40.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.396" endtime="20201115 23:00:40.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.093" endtime="20201115 23:00:40.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.092" endtime="20201115 23:00:40.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.403" level="INFO">${RESULT} = [{'time': 0.021799153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.070900000000213e-05, 'source_diff': 7.070900000000213e-05}, {'time': 0.021877139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.399" endtime="20201115 23:00:40.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.416" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:40.404" endtime="20201115 23:00:40.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.421" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.420" endtime="20201115 23:00:40.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.423" level="INFO">VALUE: [7.070900000000213e-05, 7.076400000000094e-05, 7.015299999999988e-05, 7.036099999999795e-05, 7.07230000000017e-05, 7.015299999999988e-05, 7.077700000000103e-05, 7.076400000000094e-05, 7.015299999999988e-05, 7.030500000000314e-05, 7.05689999999995e-05, 7.055499999999992e-05, 7.062500000000124e-05, 7.030600000000262e-05, 7.045799999999894e-05, 7.047199999999851e-05, 7.095799999999944e-05, 7.016699999999945e-05, 7.011200000000065e-05, 7.07910000000006e-05, 7.019399999999912e-05, 7.050000000000112e-05, 7.068000000000005e-05, 7.030599999999915e-05, 7.016699999999945e-05, 7.066699999999995e-05, 7.019399999999912e-05, 7.016699999999945e-05, 7.058299999999906e-05, 7.011100000000117e-05, 7.068099999999952e-05, 7.047300000000145e-05, 7.101400000000119e-05, 7.084699999999888e-05, 7.076399999999747e-05, 7.095799999999944e-05, 7.095799999999944e-05, 7.032000000000219e-05, 7.104200000000033e-05, 7.09170000000002e-05, 7.101400000000119e-05, 7.05689999999995e-05, 7.102800000000076e-05, 7.066699999999995e-05, 7.054199999999983e-05, 7.090300000000063e-05, 7.070899999999866e-05, 7.020800000000216e-05, 7.011100000000117e-05, 7.07499999999979e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.422" endtime="20201115 23:00:40.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.417" endtime="20201115 23:00:40.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.426" endtime="20201115 23:00:40.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.430" endtime="20201115 23:00:40.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.428" endtime="20201115 23:00:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.424" endtime="20201115 23:00:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.060" endtime="20201115 23:00:40.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.058" endtime="20201115 23:00:40.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.057" endtime="20201115 23:00:40.451"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.461" endtime="20201115 23:00:40.480"></status>
</kw>
<msg timestamp="20201115 23:00:40.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.460" endtime="20201115 23:00:40.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.482" endtime="20201115 23:00:40.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.485" endtime="20201115 23:00:40.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.457" endtime="20201115 23:00:40.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.455" endtime="20201115 23:00:40.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.494" endtime="20201115 23:00:40.779"></status>
</kw>
<msg timestamp="20201115 23:00:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.493" endtime="20201115 23:00:40.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.783" endtime="20201115 23:00:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.792" endtime="20201115 23:00:40.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.490" endtime="20201115 23:00:40.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.488" endtime="20201115 23:00:40.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:40.798" level="INFO">${RESULT} = [{'time': 0.022669722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.118000000000055e-05, 'source_diff': 7.118000000000055e-05}, {'time': 0.022753708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:40.795" endtime="20201115 23:00:40.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:40.813" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:40.799" endtime="20201115 23:00:40.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.817" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:00:40.816" endtime="20201115 23:00:40.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.820" level="INFO">VALUE: [7.118000000000055e-05, 7.119400000000012e-05, 7.183300000000031e-05, 7.14300000000008e-05, 7.170800000000019e-05, 7.161100000000267e-05, 7.122199999999926e-05, 7.19170000000012e-05, 7.15560000000004e-05, 7.147199999999951e-05, 7.108300000000303e-05, 7.129200000000058e-05, 7.126399999999797e-05, 7.19170000000012e-05, 7.192999999999783e-05, 7.12499999999984e-05, 7.119400000000012e-05, 7.197200000000001e-05, 7.183299999999684e-05, 7.1069e-05, 7.12360000000023e-05, 7.127800000000101e-05, 7.148600000000255e-05, 7.188899999999859e-05, 7.147299999999898e-05, 7.159699999999963e-05, 7.125000000000187e-05, 7.101400000000119e-05, 7.120799999999969e-05, 7.150000000000212e-05, 7.194500000000034e-05, 7.176399999999847e-05, 7.194500000000034e-05, 7.10559999999999e-05, 7.197200000000001e-05, 7.145899999999941e-05, 7.20560000000009e-05, 7.177799999999804e-05, 7.200000000000262e-05, 7.186099999999945e-05, 7.105500000000042e-05, 7.148599999999908e-05, 7.133299999999981e-05, 7.169399999999715e-05, 7.190299999999816e-05, 7.2069999999997e-05, 7.184799999999936e-05, 7.15560000000004e-05, 7.186099999999945e-05, 7.162499999999877e-05]</msg>
<status status="PASS" starttime="20201115 23:00:40.818" endtime="20201115 23:00:40.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.814" endtime="20201115 23:00:40.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.823" endtime="20201115 23:00:40.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:40.826" endtime="20201115 23:00:40.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.825" endtime="20201115 23:00:40.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.821" endtime="20201115 23:00:40.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.454" endtime="20201115 23:00:40.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.452" endtime="20201115 23:00:40.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.451" endtime="20201115 23:00:40.847"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.850" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.858" endtime="20201115 23:00:40.877"></status>
</kw>
<msg timestamp="20201115 23:00:40.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.857" endtime="20201115 23:00:40.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:40.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:40.879" endtime="20201115 23:00:40.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.881" endtime="20201115 23:00:40.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.854" endtime="20201115 23:00:40.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.852" endtime="20201115 23:00:40.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:40.890" endtime="20201115 23:00:41.177"></status>
</kw>
<msg timestamp="20201115 23:00:41.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:40.889" endtime="20201115 23:00:41.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.181" endtime="20201115 23:00:41.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.189" endtime="20201115 23:00:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.886" endtime="20201115 23:00:41.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.884" endtime="20201115 23:00:41.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.196" level="INFO">${RESULT} = [{'time': 0.022413264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.305599999999843e-05, 'source_diff': 7.305599999999843e-05}, {'time': 0.02249825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:00:41.193" endtime="20201115 23:00:41.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.209" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:41.197" endtime="20201115 23:00:41.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.214" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.213" endtime="20201115 23:00:41.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.216" level="INFO">VALUE: [7.305599999999843e-05, 7.266700000000195e-05, 7.270800000000119e-05, 7.25699999999975e-05, 7.305599999999843e-05, 7.20560000000009e-05, 7.290199999999969e-05, 7.305500000000242e-05, 7.212499999999927e-05, 7.213899999999884e-05, 7.24439999999979e-05, 7.304200000000233e-05, 7.209700000000013e-05, 7.238899999999909e-05, 7.299999999999668e-05, 7.270800000000119e-05, 7.245800000000094e-05, 7.29170000000022e-05, 7.243100000000127e-05, 7.298599999999711e-05, 7.265299999999891e-05, 7.297200000000101e-05, 7.226300000000296e-05, 7.298600000000058e-05, 7.244400000000137e-05, 7.245799999999747e-05, 7.254199999999836e-05, 7.270800000000119e-05, 7.259700000000063e-05, 7.269500000000109e-05, 7.262499999999977e-05, 7.218100000000102e-05, 7.288899999999959e-05, 7.22499999999994e-05, 7.254099999999888e-05, 7.245800000000094e-05, 7.204099999999838e-05, 7.212499999999927e-05, 7.262499999999977e-05, 7.273600000000033e-05, 7.22499999999994e-05, 7.209700000000013e-05, 7.24309999999978e-05, 7.216699999999798e-05, 7.238899999999909e-05, 7.302799999999929e-05, 7.288800000000012e-05, 7.281999999999775e-05, 7.288899999999959e-05, 7.251399999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.215" endtime="20201115 23:00:41.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.210" endtime="20201115 23:00:41.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.219" endtime="20201115 23:00:41.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.223" endtime="20201115 23:00:41.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.221" endtime="20201115 23:00:41.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.218" endtime="20201115 23:00:41.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.850" endtime="20201115 23:00:41.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.849" endtime="20201115 23:00:41.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:40.848" endtime="20201115 23:00:41.244"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.255" endtime="20201115 23:00:41.272"></status>
</kw>
<msg timestamp="20201115 23:00:41.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.253" endtime="20201115 23:00:41.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.274" endtime="20201115 23:00:41.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.276" endtime="20201115 23:00:41.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.251" endtime="20201115 23:00:41.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.249" endtime="20201115 23:00:41.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.285" endtime="20201115 23:00:41.571"></status>
</kw>
<msg timestamp="20201115 23:00:41.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022352125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.284" endtime="20201115 23:00:41.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022352125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.576" endtime="20201115 23:00:41.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.584" endtime="20201115 23:00:41.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.281" endtime="20201115 23:00:41.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.280" endtime="20201115 23:00:41.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.591" level="INFO">${RESULT} = [{'time': 0.022352125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.322200000000126e-05, 'source_diff': 7.322200000000126e-05}, {'time': 0.022436139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:41.587" endtime="20201115 23:00:41.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.604" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:41.592" endtime="20201115 23:00:41.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.609" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:00:41.608" endtime="20201115 23:00:41.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.612" level="INFO">VALUE: [7.322200000000126e-05, 7.316700000000245e-05, 7.358300000000206e-05, 7.384699999999841e-05, 7.386099999999798e-05, 7.324999999999693e-05, 7.350000000000065e-05, 7.355499999999945e-05, 7.395799999999897e-05, 7.33049999999992e-05, 7.347200000000151e-05, 7.333299999999834e-05, 7.3763000000001e-05, 7.387499999999755e-05, 7.34309999999988e-05, 7.377800000000004e-05, 7.313899999999984e-05, 7.384700000000188e-05, 7.315299999999941e-05, 7.369399999999915e-05, 7.362500000000077e-05, 7.383299999999884e-05, 7.351400000000022e-05, 7.315199999999994e-05, 7.397199999999854e-05, 7.305599999999843e-05, 7.316699999999898e-05, 7.341699999999923e-05, 7.369499999999862e-05, 7.402800000000029e-05, 7.376400000000047e-05, 7.327799999999954e-05, 7.348700000000055e-05, 7.379100000000013e-05, 7.32500000000004e-05, 7.372199999999829e-05, 7.386100000000145e-05, 7.363900000000034e-05, 7.320800000000169e-05, 7.366700000000295e-05, 7.350000000000065e-05, 7.397199999999854e-05, 7.330599999999868e-05, 7.394499999999887e-05, 7.333400000000129e-05, 7.320900000000116e-05, 7.327700000000006e-05, 7.309699999999766e-05, 7.33049999999992e-05, 7.348600000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:00:41.610" endtime="20201115 23:00:41.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.605" endtime="20201115 23:00:41.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.615" endtime="20201115 23:00:41.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:41.619" endtime="20201115 23:00:41.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.617" endtime="20201115 23:00:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.614" endtime="20201115 23:00:41.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.247" endtime="20201115 23:00:41.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.246" endtime="20201115 23:00:41.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.245" endtime="20201115 23:00:41.640"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.642" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.651" endtime="20201115 23:00:41.669"></status>
</kw>
<msg timestamp="20201115 23:00:41.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.649" endtime="20201115 23:00:41.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:41.671" endtime="20201115 23:00:41.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.673" endtime="20201115 23:00:41.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.647" endtime="20201115 23:00:41.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.644" endtime="20201115 23:00:41.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.682" endtime="20201115 23:00:41.967"></status>
</kw>
<msg timestamp="20201115 23:00:41.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.681" endtime="20201115 23:00:41.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:41.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:41.971" endtime="20201115 23:00:41.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:41.979" endtime="20201115 23:00:41.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.678" endtime="20201115 23:00:41.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.676" endtime="20201115 23:00:41.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:41.986" level="INFO">${RESULT} = [{'time': 0.022837958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.46249999999983e-05, 'source_diff': 7.46249999999983e-05}, {'time': 0.022921972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:41.982" endtime="20201115 23:00:41.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:41.999" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:41.987" endtime="20201115 23:00:41.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.004" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.003" endtime="20201115 23:00:42.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.007" level="INFO">VALUE: [7.46249999999983e-05, 7.455500000000045e-05, 7.500000000000215e-05, 7.454200000000036e-05, 7.431899999999977e-05, 7.498600000000258e-05, 7.423599999999836e-05, 7.450000000000165e-05, 7.469499999999962e-05, 7.490200000000169e-05, 7.448599999999861e-05, 7.479100000000113e-05, 7.420800000000269e-05, 7.484699999999941e-05, 7.411099999999823e-05, 7.469400000000015e-05, 7.441700000000023e-05, 7.504200000000086e-05, 7.463899999999787e-05, 7.422199999999879e-05, 7.480600000000018e-05, 7.498599999999911e-05, 7.462500000000177e-05, 7.423600000000183e-05, 7.416600000000051e-05, 7.420799999999922e-05, 7.427700000000106e-05, 7.490200000000169e-05, 7.507e-05, 7.505600000000043e-05, 7.502800000000129e-05, 7.481999999999975e-05, 7.416699999999998e-05, 7.409699999999866e-05, 7.404199999999986e-05, 7.4763999999998e-05, 7.409799999999814e-05, 7.423599999999836e-05, 7.472199999999929e-05, 7.46249999999983e-05, 7.427700000000106e-05, 7.438900000000109e-05, 7.40829999999991e-05, 7.486099999999898e-05, 7.448600000000208e-05, 7.498599999999911e-05, 7.472199999999929e-05, 7.49310000000003e-05, 7.448599999999861e-05, 7.479200000000061e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.005" endtime="20201115 23:00:42.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.000" endtime="20201115 23:00:42.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.010" endtime="20201115 23:00:42.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.013" endtime="20201115 23:00:42.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.012" endtime="20201115 23:00:42.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.008" endtime="20201115 23:00:42.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.643" endtime="20201115 23:00:42.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.641" endtime="20201115 23:00:42.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:41.640" endtime="20201115 23:00:42.034"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.037" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.045" endtime="20201115 23:00:42.063"></status>
</kw>
<msg timestamp="20201115 23:00:42.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.043" endtime="20201115 23:00:42.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.064" endtime="20201115 23:00:42.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.067" endtime="20201115 23:00:42.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.041" endtime="20201115 23:00:42.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.039" endtime="20201115 23:00:42.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.076" endtime="20201115 23:00:42.360"></status>
</kw>
<msg timestamp="20201115 23:00:42.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.074" endtime="20201115 23:00:42.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.365" endtime="20201115 23:00:42.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.373" endtime="20201115 23:00:42.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.072" endtime="20201115 23:00:42.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.070" endtime="20201115 23:00:42.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.379" level="INFO">${RESULT} = [{'time': 0.022756236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.524999999999893e-05, 'source_diff': 7.524999999999893e-05}, {'time': 0.022840264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:42.376" endtime="20201115 23:00:42.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.394" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:42.381" endtime="20201115 23:00:42.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.399" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.398" endtime="20201115 23:00:42.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.401" level="INFO">VALUE: [7.524999999999893e-05, 7.574999999999943e-05, 7.580599999999771e-05, 7.549999999999918e-05, 7.573599999999986e-05, 7.595900000000044e-05, 7.520899999999969e-05, 7.527799999999807e-05, 7.573599999999986e-05, 7.542999999999786e-05, 7.552800000000179e-05, 7.590200000000269e-05, 7.58890000000026e-05, 7.59579999999975e-05, 7.570799999999725e-05, 7.548599999999961e-05, 7.586099999999998e-05, 7.582000000000075e-05, 7.579199999999814e-05, 7.508399999999957e-05, 7.57769999999991e-05, 7.597199999999707e-05, 7.537499999999905e-05, 7.594399999999793e-05, 7.573599999999986e-05, 7.568000000000158e-05, 7.524999999999893e-05, 7.580600000000118e-05, 7.545800000000047e-05, 7.534699999999991e-05, 7.508399999999957e-05, 7.505600000000043e-05, 7.54029999999982e-05, 7.59310000000013e-05, 7.605600000000143e-05, 7.530499999999773e-05, 7.529199999999764e-05, 7.519400000000065e-05, 7.522199999999979e-05, 7.59440000000014e-05, 7.574999999999943e-05, 7.580600000000118e-05, 7.594500000000087e-05, 7.509799999999914e-05, 7.547200000000004e-05, 7.541700000000123e-05, 7.54029999999982e-05, 7.531900000000077e-05, 7.54440000000009e-05, 7.520800000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.400" endtime="20201115 23:00:42.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.395" endtime="20201115 23:00:42.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.404" endtime="20201115 23:00:42.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.408" endtime="20201115 23:00:42.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.406" endtime="20201115 23:00:42.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.403" endtime="20201115 23:00:42.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.037" endtime="20201115 23:00:42.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.035" endtime="20201115 23:00:42.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.035" endtime="20201115 23:00:42.429"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.431" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.440" endtime="20201115 23:00:42.458"></status>
</kw>
<msg timestamp="20201115 23:00:42.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.438" endtime="20201115 23:00:42.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.460" endtime="20201115 23:00:42.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.462" endtime="20201115 23:00:42.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.435" endtime="20201115 23:00:42.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.433" endtime="20201115 23:00:42.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.471" endtime="20201115 23:00:42.756"></status>
</kw>
<msg timestamp="20201115 23:00:42.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:42.470" endtime="20201115 23:00:42.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:00:42.761" endtime="20201115 23:00:42.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.773" endtime="20201115 23:00:42.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.467" endtime="20201115 23:00:42.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.466" endtime="20201115 23:00:42.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:42.780" level="INFO">${RESULT} = [{'time': 0.02179525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611100000000023e-05, 'source_diff': 7.611100000000023e-05}, {'time': 0.02188325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:42.777" endtime="20201115 23:00:42.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:42.794" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:42.781" endtime="20201115 23:00:42.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.798" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:00:42.797" endtime="20201115 23:00:42.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.801" level="INFO">VALUE: [7.611100000000023e-05, 7.618100000000155e-05, 7.691699999999926e-05, 7.650000000000018e-05, 7.609700000000066e-05, 7.668099999999858e-05, 7.663899999999987e-05, 7.679199999999914e-05, 7.627700000000306e-05, 7.64440000000019e-05, 7.683299999999837e-05, 7.672200000000129e-05, 7.694399999999893e-05, 7.700000000000068e-05, 7.648600000000061e-05, 7.60830000000011e-05, 7.651399999999975e-05, 7.683300000000184e-05, 7.638899999999962e-05, 7.704099999999992e-05, 7.654100000000288e-05, 7.661100000000073e-05, 7.6457999999998e-05, 7.636100000000048e-05, 7.665300000000291e-05, 7.668000000000258e-05, 7.647200000000104e-05, 7.69579999999985e-05, 7.684800000000089e-05, 7.613899999999937e-05, 7.683400000000132e-05, 7.686100000000098e-05, 7.624999999999993e-05, 7.699999999999721e-05, 7.648600000000061e-05, 7.68189999999988e-05, 7.704099999999992e-05, 7.680499999999923e-05, 7.680599999999871e-05, 7.618100000000155e-05, 7.624999999999993e-05, 7.679199999999914e-05, 7.650000000000018e-05, 7.67770000000001e-05, 7.669500000000162e-05, 7.638800000000015e-05, 7.64440000000019e-05, 7.644399999999843e-05, 7.642999999999886e-05, 7.656899999999855e-05]</msg>
<status status="PASS" starttime="20201115 23:00:42.799" endtime="20201115 23:00:42.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.794" endtime="20201115 23:00:42.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.804" endtime="20201115 23:00:42.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:42.807" endtime="20201115 23:00:42.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.806" endtime="20201115 23:00:42.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.802" endtime="20201115 23:00:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.432" endtime="20201115 23:00:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.430" endtime="20201115 23:00:42.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.429" endtime="20201115 23:00:42.828"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.839" endtime="20201115 23:00:42.857"></status>
</kw>
<msg timestamp="20201115 23:00:42.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.837" endtime="20201115 23:00:42.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:42.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:42.859" endtime="20201115 23:00:42.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.861" endtime="20201115 23:00:42.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.835" endtime="20201115 23:00:42.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.832" endtime="20201115 23:00:42.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:42.870" endtime="20201115 23:00:43.156"></status>
</kw>
<msg timestamp="20201115 23:00:43.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:42.868" endtime="20201115 23:00:43.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022657903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.160" endtime="20201115 23:00:43.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.168" endtime="20201115 23:00:43.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.866" endtime="20201115 23:00:43.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.864" endtime="20201115 23:00:43.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.175" level="INFO">${RESULT} = [{'time': 0.022657903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.716699999999951e-05, 'source_diff': 7.716699999999951e-05}, {'time': 0.022743917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.172" endtime="20201115 23:00:43.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.188" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:43.176" endtime="20201115 23:00:43.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.193" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.192" endtime="20201115 23:00:43.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.195" level="INFO">VALUE: [7.716699999999951e-05, 7.781999999999928e-05, 7.801400000000125e-05, 7.774999999999796e-05, 7.740200000000072e-05, 7.73189999999993e-05, 7.716699999999951e-05, 7.729100000000017e-05, 7.773599999999839e-05, 7.76389999999974e-05, 7.779200000000014e-05, 7.799999999999821e-05, 7.79449999999994e-05, 7.766700000000001e-05, 7.790299999999722e-05, 7.79449999999994e-05, 7.752700000000085e-05, 7.727800000000007e-05, 7.784699999999894e-05, 7.798600000000211e-05, 7.750000000000118e-05, 7.70969999999982e-05, 7.769399999999968e-05, 7.720799999999875e-05, 7.72640000000005e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.717999999999961e-05, 7.727800000000007e-05, 7.769400000000315e-05, 7.73189999999993e-05, 7.74030000000002e-05, 7.7457999999999e-05, 7.706899999999905e-05, 7.801400000000125e-05, 7.769399999999968e-05, 7.738900000000062e-05, 7.72640000000005e-05, 7.71250000000008e-05, 7.738900000000062e-05, 7.745899999999847e-05, 7.779200000000014e-05, 7.79449999999994e-05, 7.71380000000009e-05, 7.705499999999949e-05, 7.772199999999882e-05, 7.751400000000075e-05, 7.72640000000005e-05, 7.79579999999995e-05, 7.711099999999776e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.194" endtime="20201115 23:00:43.196"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.189" endtime="20201115 23:00:43.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.198" endtime="20201115 23:00:43.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.202" endtime="20201115 23:00:43.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.200" endtime="20201115 23:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.197" endtime="20201115 23:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.831" endtime="20201115 23:00:43.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.829" endtime="20201115 23:00:43.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:42.829" endtime="20201115 23:00:43.223"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.233" endtime="20201115 23:00:43.251"></status>
</kw>
<msg timestamp="20201115 23:00:43.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.232" endtime="20201115 23:00:43.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.252" endtime="20201115 23:00:43.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.255" endtime="20201115 23:00:43.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.229" endtime="20201115 23:00:43.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.227" endtime="20201115 23:00:43.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.264" endtime="20201115 23:00:43.548"></status>
</kw>
<msg timestamp="20201115 23:00:43.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.263" endtime="20201115 23:00:43.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.553" endtime="20201115 23:00:43.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.561" endtime="20201115 23:00:43.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.260" endtime="20201115 23:00:43.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.259" endtime="20201115 23:00:43.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.567" level="INFO">${RESULT} = [{'time': 0.021798347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902799999999835e-05, 'source_diff': 7.902799999999835e-05}, {'time': 0.021890403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.564" endtime="20201115 23:00:43.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.581" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:43.568" endtime="20201115 23:00:43.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.585" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.584" endtime="20201115 23:00:43.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.588" level="INFO">VALUE: [7.902799999999835e-05, 7.880600000000071e-05, 7.89580000000005e-05, 7.873599999999939e-05, 7.851400000000175e-05, 7.893100000000083e-05, 7.898599999999964e-05, 7.869399999999721e-05, 7.855600000000046e-05, 7.822199999999932e-05, 7.87779999999981e-05, 7.844400000000043e-05, 7.904200000000139e-05, 7.838899999999815e-05, 7.863900000000187e-05, 7.893099999999736e-05, 7.819500000000312e-05, 7.82640000000015e-05, 7.847199999999957e-05, 7.876399999999853e-05, 7.820799999999975e-05, 7.818000000000061e-05, 7.87779999999981e-05, 7.852800000000132e-05, 7.87770000000021e-05, 7.80969999999992e-05, 7.82779999999976e-05, 7.849999999999871e-05, 7.893100000000083e-05, 7.888899999999865e-05, 7.852699999999838e-05, 7.85969999999997e-05, 7.902799999999835e-05, 7.869500000000015e-05, 7.844400000000043e-05, 7.823599999999889e-05, 7.830500000000074e-05, 7.811099999999876e-05, 7.875000000000243e-05, 7.893000000000136e-05, 7.88190000000008e-05, 7.886099999999951e-05, 7.841700000000076e-05, 7.848599999999914e-05, 7.848600000000261e-05, 7.900000000000268e-05, 7.862499999999883e-05, 7.834699999999944e-05, 7.856900000000056e-05, 7.820799999999975e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.586" endtime="20201115 23:00:43.588"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.582" endtime="20201115 23:00:43.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.591" endtime="20201115 23:00:43.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.594" endtime="20201115 23:00:43.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.593" endtime="20201115 23:00:43.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.589" endtime="20201115 23:00:43.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.226" endtime="20201115 23:00:43.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.224" endtime="20201115 23:00:43.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.223" endtime="20201115 23:00:43.616"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.618" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.627" endtime="20201115 23:00:43.647"></status>
</kw>
<msg timestamp="20201115 23:00:43.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.625" endtime="20201115 23:00:43.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:43.648" endtime="20201115 23:00:43.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.651" endtime="20201115 23:00:43.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.622" endtime="20201115 23:00:43.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.620" endtime="20201115 23:00:43.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.660" endtime="20201115 23:00:43.945"></status>
</kw>
<msg timestamp="20201115 23:00:43.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.658" endtime="20201115 23:00:43.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023539861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:43.949" endtime="20201115 23:00:43.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.957" endtime="20201115 23:00:43.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.656" endtime="20201115 23:00:43.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.654" endtime="20201115 23:00:43.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:43.963" level="INFO">${RESULT} = [{'time': 0.023539861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.004199999999892e-05, 'source_diff': 8.004199999999892e-05}, {'time': 0.023626847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:43.960" endtime="20201115 23:00:43.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:43.978" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:43.964" endtime="20201115 23:00:43.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.982" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:00:43.981" endtime="20201115 23:00:43.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:43.985" level="INFO">VALUE: [8.004199999999892e-05, 7.919399999999771e-05, 7.938900000000262e-05, 7.933400000000035e-05, 7.915200000000247e-05, 7.962499999999983e-05, 7.986100000000051e-05, 7.991700000000226e-05, 7.926399999999903e-05, 7.987500000000008e-05, 7.98190000000018e-05, 7.942999999999839e-05, 8.002699999999988e-05, 7.974999999999996e-05, 7.916700000000151e-05, 7.947200000000057e-05, 7.976399999999953e-05, 7.954200000000189e-05, 7.902799999999835e-05, 7.980599999999824e-05, 7.998600000000064e-05, 8.001399999999978e-05, 7.90970000000002e-05, 7.915200000000247e-05, 7.992999999999889e-05, 7.980500000000224e-05, 7.92640000000025e-05, 7.984700000000094e-05, 7.972200000000082e-05, 7.99169999999988e-05, 7.920900000000022e-05, 7.919500000000065e-05, 7.924999999999946e-05, 7.930499999999827e-05, 7.948699999999961e-05, 7.922199999999685e-05, 7.962499999999983e-05, 7.93190000000013e-05, 7.992999999999889e-05, 7.919399999999771e-05, 7.938899999999915e-05, 7.968100000000158e-05, 7.926399999999903e-05, 7.930600000000121e-05, 7.962499999999983e-05, 7.923699999999936e-05, 8.001399999999978e-05, 7.98190000000018e-05, 7.943000000000186e-05, 7.974999999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:00:43.983" endtime="20201115 23:00:43.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.979" endtime="20201115 23:00:43.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:43.988" endtime="20201115 23:00:43.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:43.991" endtime="20201115 23:00:44.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.990" endtime="20201115 23:00:44.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.986" endtime="20201115 23:00:44.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.618" endtime="20201115 23:00:44.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.617" endtime="20201115 23:00:44.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:43.616" endtime="20201115 23:00:44.013"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.015" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.023" endtime="20201115 23:00:44.042"></status>
</kw>
<msg timestamp="20201115 23:00:44.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.022" endtime="20201115 23:00:44.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.043" endtime="20201115 23:00:44.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.046" endtime="20201115 23:00:44.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.019" endtime="20201115 23:00:44.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.017" endtime="20201115 23:00:44.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.054" endtime="20201115 23:00:44.341"></status>
</kw>
<msg timestamp="20201115 23:00:44.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022454333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.053" endtime="20201115 23:00:44.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022454333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.345" endtime="20201115 23:00:44.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.353" endtime="20201115 23:00:44.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.050" endtime="20201115 23:00:44.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.049" endtime="20201115 23:00:44.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.360" level="INFO">${RESULT} = [{'time': 0.022454333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.045799999999853e-05, 'source_diff': 8.045799999999853e-05}, {'time': 0.022542347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:44.356" endtime="20201115 23:00:44.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.373" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:44.361" endtime="20201115 23:00:44.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.377" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.376" endtime="20201115 23:00:44.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.380" level="INFO">VALUE: [8.045799999999853e-05, 8.02779999999996e-05, 8.092999999999989e-05, 8.072200000000182e-05, 8.072199999999835e-05, 8.012500000000033e-05, 8.079199999999967e-05, 8.037500000000058e-05, 8.07230000000013e-05, 8.024999999999699e-05, 8.045799999999853e-05, 8.069399999999921e-05, 8.088900000000065e-05, 8.036100000000101e-05, 8.080599999999924e-05, 8.025000000000046e-05, 8.052799999999985e-05, 8.019500000000165e-05, 8.09719999999986e-05, 8.007000000000153e-05, 8.069500000000215e-05, 8.055599999999899e-05, 8.034800000000092e-05, 8.100000000000121e-05, 8.040299999999972e-05, 8.100000000000121e-05, 8.006899999999859e-05, 8.031899999999884e-05, 8.094499999999893e-05, 8.029199999999917e-05, 8.083399999999838e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.04450000000019e-05, 8.026300000000056e-05, 8.081899999999934e-05, 8.055500000000299e-05, 8.069399999999921e-05, 8.01389999999999e-05, 8.069399999999921e-05, 8.088899999999719e-05, 8.073599999999792e-05, 8.023600000000089e-05, 8.031999999999831e-05, 8.05840000000016e-05, 8.081899999999934e-05, 8.008300000000163e-05, 8.070799999999878e-05, 8.031899999999884e-05, 8.050000000000071e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.379" endtime="20201115 23:00:44.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.374" endtime="20201115 23:00:44.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.383" endtime="20201115 23:00:44.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.387" endtime="20201115 23:00:44.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.385" endtime="20201115 23:00:44.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.382" endtime="20201115 23:00:44.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.016" endtime="20201115 23:00:44.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.014" endtime="20201115 23:00:44.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.013" endtime="20201115 23:00:44.408"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.410" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.419" endtime="20201115 23:00:44.437"></status>
</kw>
<msg timestamp="20201115 23:00:44.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.417" endtime="20201115 23:00:44.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.439" endtime="20201115 23:00:44.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.441" endtime="20201115 23:00:44.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.414" endtime="20201115 23:00:44.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.412" endtime="20201115 23:00:44.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.450" endtime="20201115 23:00:44.736"></status>
</kw>
<msg timestamp="20201115 23:00:44.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:44.449" endtime="20201115 23:00:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:00:44.740" endtime="20201115 23:00:44.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.748" endtime="20201115 23:00:44.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.446" endtime="20201115 23:00:44.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.444" endtime="20201115 23:00:44.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:44.755" level="INFO">${RESULT} = [{'time': 0.021846, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.131899999999984e-05, 'source_diff': 8.131899999999984e-05}, {'time': 0.021937028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:44.751" endtime="20201115 23:00:44.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:44.768" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:44.756" endtime="20201115 23:00:44.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.773" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:00:44.772" endtime="20201115 23:00:44.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.776" level="INFO">VALUE: [8.131899999999984e-05, 8.168100000000011e-05, 8.131899999999984e-05, 8.129200000000017e-05, 8.129200000000017e-05, 8.198599999999917e-05, 8.12780000000006e-05, 8.169499999999968e-05, 8.148599999999867e-05, 8.12780000000006e-05, 8.119400000000318e-05, 8.165300000000097e-05, 8.152799999999738e-05, 8.152799999999738e-05, 8.193100000000036e-05, 8.187499999999862e-05, 8.12780000000006e-05, 8.186099999999905e-05, 8.175000000000196e-05, 8.177699999999816e-05, 8.201400000000178e-05, 8.190200000000175e-05, 8.186099999999905e-05, 8.108300000000263e-05, 8.194400000000046e-05, 8.11390000000009e-05, 8.208399999999963e-05, 8.124999999999799e-05, 8.188899999999819e-05, 8.19719999999996e-05, 8.158299999999966e-05, 8.195800000000003e-05, 8.155500000000052e-05, 8.194400000000046e-05, 8.14719999999991e-05, 8.15970000000027e-05, 8.115300000000047e-05, 8.176399999999806e-05, 8.194400000000046e-05, 8.132000000000278e-05, 8.190299999999776e-05, 8.14719999999991e-05, 8.124999999999799e-05, 8.191599999999785e-05, 8.186199999999852e-05, 8.113899999999744e-05, 8.172199999999935e-05, 8.149999999999824e-05, 8.155500000000052e-05, 8.159699999999923e-05]</msg>
<status status="PASS" starttime="20201115 23:00:44.774" endtime="20201115 23:00:44.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.769" endtime="20201115 23:00:44.777"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.779" endtime="20201115 23:00:44.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:44.782" endtime="20201115 23:00:44.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.781" endtime="20201115 23:00:44.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.777" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.411" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.409" endtime="20201115 23:00:44.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.408" endtime="20201115 23:00:44.803"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.806" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.814" endtime="20201115 23:00:44.832"></status>
</kw>
<msg timestamp="20201115 23:00:44.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.812" endtime="20201115 23:00:44.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:44.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:44.833" endtime="20201115 23:00:44.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.836" endtime="20201115 23:00:44.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.810" endtime="20201115 23:00:44.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.808" endtime="20201115 23:00:44.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:44.845" endtime="20201115 23:00:45.131"></status>
</kw>
<msg timestamp="20201115 23:00:45.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:44.843" endtime="20201115 23:00:45.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.135" endtime="20201115 23:00:45.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.143" endtime="20201115 23:00:45.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.841" endtime="20201115 23:00:45.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.839" endtime="20201115 23:00:45.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.150" level="INFO">${RESULT} = [{'time': 0.021883292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.274999999999949e-05, 'source_diff': 8.274999999999949e-05}, {'time': 0.021976319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.146" endtime="20201115 23:00:45.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.164" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:45.151" endtime="20201115 23:00:45.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.168" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.167" endtime="20201115 23:00:45.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.171" level="INFO">VALUE: [8.274999999999949e-05, 8.220800000000028e-05, 8.273599999999992e-05, 8.226399999999856e-05, 8.213899999999844e-05, 8.27910000000022e-05, 8.251399999999881e-05, 8.277799999999863e-05, 8.2152999999998e-05, 8.250000000000271e-05, 8.287499999999962e-05, 8.257000000000056e-05, 8.20979999999992e-05, 8.209800000000267e-05, 8.259700000000023e-05, 8.222199999999985e-05, 8.276399999999906e-05, 8.205499999999755e-05, 8.281900000000134e-05, 8.220800000000028e-05, 8.227799999999813e-05, 8.294499999999747e-05, 8.258400000000013e-05, 8.274999999999949e-05, 8.201399999999831e-05, 8.208300000000016e-05, 8.205500000000102e-05, 8.281899999999787e-05, 8.302800000000235e-05, 8.212500000000234e-05, 8.277799999999863e-05, 8.295800000000103e-05, 8.248599999999967e-05, 8.274999999999949e-05, 8.226400000000203e-05, 8.276399999999906e-05, 8.212499999999887e-05, 8.290200000000275e-05, 8.26659999999986e-05, 8.276399999999906e-05, 8.208300000000016e-05, 8.236099999999955e-05, 8.223599999999942e-05, 8.290299999999876e-05, 8.287499999999962e-05, 8.268000000000164e-05, 8.2152999999998e-05, 8.233399999999988e-05, 8.276299999999959e-05, 8.277799999999863e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.169" endtime="20201115 23:00:45.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.164" endtime="20201115 23:00:45.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.174" endtime="20201115 23:00:45.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.177" endtime="20201115 23:00:45.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.176" endtime="20201115 23:00:45.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.172" endtime="20201115 23:00:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.806" endtime="20201115 23:00:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.804" endtime="20201115 23:00:45.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:44.804" endtime="20201115 23:00:45.198"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.209" endtime="20201115 23:00:45.228"></status>
</kw>
<msg timestamp="20201115 23:00:45.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.207" endtime="20201115 23:00:45.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.230" endtime="20201115 23:00:45.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.232" endtime="20201115 23:00:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.205" endtime="20201115 23:00:45.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.203" endtime="20201115 23:00:45.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.241" endtime="20201115 23:00:45.526"></status>
</kw>
<msg timestamp="20201115 23:00:45.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.240" endtime="20201115 23:00:45.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022616153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.531" endtime="20201115 23:00:45.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.539" endtime="20201115 23:00:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.237" endtime="20201115 23:00:45.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.236" endtime="20201115 23:00:45.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.546" level="INFO">${RESULT} = [{'time': 0.022699694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.354099999999948e-05, 'source_diff': 8.354099999999948e-05}, {'time': 0.022790639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.542" endtime="20201115 23:00:45.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.560" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:45.547" endtime="20201115 23:00:45.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.565" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.564" endtime="20201115 23:00:45.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.567" level="INFO">VALUE: [8.354099999999948e-05, 8.307000000000106e-05, 8.377799999999963e-05, 8.395899999999804e-05, 8.330600000000174e-05, 8.337500000000012e-05, 8.31659999999991e-05, 8.404099999999998e-05, 8.333299999999794e-05, 8.379099999999973e-05, 8.359699999999776e-05, 8.348600000000067e-05, 8.308300000000116e-05, 8.357000000000156e-05, 8.381999999999834e-05, 8.366699999999908e-05, 8.330599999999827e-05, 8.334800000000045e-05, 8.354199999999895e-05, 8.337500000000012e-05, 8.381899999999887e-05, 8.334700000000098e-05, 8.387500000000062e-05, 8.395799999999856e-05, 8.372199999999788e-05, 8.309700000000073e-05, 8.404199999999945e-05, 8.370799999999831e-05, 8.398700000000064e-05, 8.338899999999969e-05, 8.390200000000028e-05, 8.329200000000217e-05, 8.402799999999988e-05, 8.350000000000024e-05, 8.351399999999981e-05, 8.383299999999844e-05, 8.372200000000135e-05, 8.313899999999944e-05, 8.398600000000117e-05, 8.383400000000138e-05, 8.375000000000049e-05, 8.369399999999874e-05, 8.363800000000046e-05, 8.324999999999999e-05, 8.312499999999987e-05, 8.361099999999733e-05, 8.39720000000016e-05, 8.316699999999858e-05, 8.372200000000135e-05, 8.323600000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.566" endtime="20201115 23:00:45.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.561" endtime="20201115 23:00:45.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.570" endtime="20201115 23:00:45.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.574" endtime="20201115 23:00:45.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.572" endtime="20201115 23:00:45.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.569" endtime="20201115 23:00:45.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.201" endtime="20201115 23:00:45.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.200" endtime="20201115 23:00:45.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.199" endtime="20201115 23:00:45.595"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.597" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.605" endtime="20201115 23:00:45.625"></status>
</kw>
<msg timestamp="20201115 23:00:45.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.604" endtime="20201115 23:00:45.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:45.626" endtime="20201115 23:00:45.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.629" endtime="20201115 23:00:45.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.601" endtime="20201115 23:00:45.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.599" endtime="20201115 23:00:45.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.638" endtime="20201115 23:00:45.924"></status>
</kw>
<msg timestamp="20201115 23:00:45.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.636" endtime="20201115 23:00:45.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:45.928" endtime="20201115 23:00:45.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.936" endtime="20201115 23:00:45.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.634" endtime="20201115 23:00:45.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.632" endtime="20201115 23:00:45.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:45.943" level="INFO">${RESULT} = [{'time': 0.021910194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.438800000000121e-05, 'source_diff': 8.438800000000121e-05}, {'time': 0.022006181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:45.939" endtime="20201115 23:00:45.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:45.956" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:45.944" endtime="20201115 23:00:45.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.961" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:00:45.960" endtime="20201115 23:00:45.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.963" level="INFO">VALUE: [8.438800000000121e-05, 8.498699999999818e-05, 8.494399999999999e-05, 8.469399999999974e-05, 8.425000000000099e-05, 8.501399999999784e-05, 8.431900000000284e-05, 8.468099999999965e-05, 8.49309999999999e-05, 8.44309999999994e-05, 8.46530000000005e-05, 8.466700000000008e-05, 8.497300000000207e-05, 8.49729999999986e-05, 8.500000000000174e-05, 8.48050000000003e-05, 8.499999999999827e-05, 8.420799999999881e-05, 8.48050000000003e-05, 8.486100000000205e-05, 8.475000000000149e-05, 8.458399999999866e-05, 8.423600000000142e-05, 8.450000000000124e-05, 8.483399999999891e-05, 8.413800000000096e-05, 8.441600000000035e-05, 8.44720000000021e-05, 8.476400000000106e-05, 8.48050000000003e-05, 8.451399999999734e-05, 8.483299999999944e-05, 8.476399999999759e-05, 8.420900000000175e-05, 8.459699999999876e-05, 8.449999999999777e-05, 8.408300000000216e-05, 8.47920000000002e-05, 8.499999999999827e-05, 8.481999999999934e-05, 8.441600000000035e-05, 8.484700000000248e-05, 8.405499999999955e-05, 8.420799999999881e-05, 8.437500000000112e-05, 8.469499999999922e-05, 8.465299999999704e-05, 8.455599999999952e-05, 8.49729999999986e-05, 8.483299999999944e-05]</msg>
<status status="PASS" starttime="20201115 23:00:45.962" endtime="20201115 23:00:45.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.957" endtime="20201115 23:00:45.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:45.966" endtime="20201115 23:00:45.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:45.969" endtime="20201115 23:00:45.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.968" endtime="20201115 23:00:45.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.964" endtime="20201115 23:00:45.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.598" endtime="20201115 23:00:45.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.596" endtime="20201115 23:00:45.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.595" endtime="20201115 23:00:45.991"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:45.993" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.001" endtime="20201115 23:00:46.020"></status>
</kw>
<msg timestamp="20201115 23:00:46.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.000" endtime="20201115 23:00:46.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.021" endtime="20201115 23:00:46.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.024" endtime="20201115 23:00:46.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.997" endtime="20201115 23:00:46.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.995" endtime="20201115 23:00:46.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.033" endtime="20201115 23:00:46.319"></status>
</kw>
<msg timestamp="20201115 23:00:46.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.032" endtime="20201115 23:00:46.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.323" endtime="20201115 23:00:46.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.331" endtime="20201115 23:00:46.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.029" endtime="20201115 23:00:46.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.028" endtime="20201115 23:00:46.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.338" level="INFO">${RESULT} = [{'time': 0.022189111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.570800000000031e-05, 'source_diff': 8.570800000000031e-05}, {'time': 0.022284069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.335" endtime="20201115 23:00:46.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.351" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:46.339" endtime="20201115 23:00:46.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.356" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.355" endtime="20201115 23:00:46.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.358" level="INFO">VALUE: [8.570800000000031e-05, 8.559699999999976e-05, 8.599999999999927e-05, 8.591599999999838e-05, 8.59859999999997e-05, 8.579199999999773e-05, 8.602799999999841e-05, 8.543099999999693e-05, 8.541700000000083e-05, 8.533399999999941e-05, 8.570899999999979e-05, 8.512500000000187e-05, 8.531900000000037e-05, 8.583300000000044e-05, 8.522199999999938e-05, 8.509699999999926e-05, 8.526400000000156e-05, 8.582000000000034e-05, 8.56530000000015e-05, 8.557000000000009e-05, 8.555600000000052e-05, 8.566700000000108e-05, 8.566599999999813e-05, 8.56669999999976e-05, 8.570800000000031e-05, 8.519400000000024e-05, 8.524999999999852e-05, 8.597200000000013e-05, 8.591699999999786e-05, 8.544499999999997e-05, 8.582000000000034e-05, 8.572299999999936e-05, 8.565299999999804e-05, 8.552799999999791e-05, 8.554200000000095e-05, 8.572199999999988e-05, 8.575000000000249e-05, 8.519400000000024e-05, 8.56799999999977e-05, 8.569400000000074e-05, 8.54720000000031e-05, 8.52920000000007e-05, 8.604199999999798e-05, 8.586099999999958e-05, 8.549999999999877e-05, 8.597200000000013e-05, 8.551400000000181e-05, 8.522200000000285e-05, 8.524999999999852e-05, 8.554200000000095e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.357" endtime="20201115 23:00:46.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.352" endtime="20201115 23:00:46.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.361" endtime="20201115 23:00:46.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.365" endtime="20201115 23:00:46.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.363" endtime="20201115 23:00:46.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.360" endtime="20201115 23:00:46.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.994" endtime="20201115 23:00:46.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.992" endtime="20201115 23:00:46.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:45.991" endtime="20201115 23:00:46.386"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.397" endtime="20201115 23:00:46.416"></status>
</kw>
<msg timestamp="20201115 23:00:46.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.396" endtime="20201115 23:00:46.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.418" endtime="20201115 23:00:46.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.420" endtime="20201115 23:00:46.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.393" endtime="20201115 23:00:46.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.390" endtime="20201115 23:00:46.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.429" endtime="20201115 23:00:46.716"></status>
</kw>
<msg timestamp="20201115 23:00:46.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.428" endtime="20201115 23:00:46.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.720" endtime="20201115 23:00:46.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.728" endtime="20201115 23:00:46.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.425" endtime="20201115 23:00:46.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.423" endtime="20201115 23:00:46.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:46.735" level="INFO">${RESULT} = [{'time': 0.022407764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.637499999999965e-05, 'source_diff': 8.637499999999965e-05}, {'time': 0.022505847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:46.731" endtime="20201115 23:00:46.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:46.748" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:46.736" endtime="20201115 23:00:46.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.752" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:00:46.751" endtime="20201115 23:00:46.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.755" level="INFO">VALUE: [8.637499999999965e-05, 8.655499999999858e-05, 8.687500000000015e-05, 8.702699999999994e-05, 8.636100000000008e-05, 8.627799999999866e-05, 8.672200000000088e-05, 8.698599999999723e-05, 8.643000000000192e-05, 8.61799999999982e-05, 8.63059999999978e-05, 8.687500000000015e-05, 8.651399999999934e-05, 8.682000000000134e-05, 8.668099999999818e-05, 8.66249999999999e-05, 8.638799999999974e-05, 8.641600000000235e-05, 8.691599999999938e-05, 8.695800000000156e-05, 8.64860000000002e-05, 8.691699999999886e-05, 8.69860000000007e-05, 8.658300000000119e-05, 8.605600000000102e-05, 8.631999999999737e-05, 8.704199999999898e-05, 8.634799999999998e-05, 8.608400000000016e-05, 8.672199999999741e-05, 8.641600000000235e-05, 8.625000000000299e-05, 8.622200000000038e-05, 8.6847000000001e-05, 8.641699999999836e-05, 8.606999999999712e-05, 8.682000000000134e-05, 8.676399999999959e-05, 8.677799999999916e-05, 8.691699999999886e-05, 8.704099999999951e-05, 8.641600000000235e-05, 8.61799999999982e-05, 8.694399999999852e-05, 8.626400000000256e-05, 8.616700000000158e-05, 8.687500000000015e-05, 8.636100000000008e-05, 8.672200000000088e-05, 8.691699999999886e-05]</msg>
<status status="PASS" starttime="20201115 23:00:46.753" endtime="20201115 23:00:46.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.749" endtime="20201115 23:00:46.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.758" endtime="20201115 23:00:46.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:46.761" endtime="20201115 23:00:46.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.760" endtime="20201115 23:00:46.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.756" endtime="20201115 23:00:46.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.389" endtime="20201115 23:00:46.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.387" endtime="20201115 23:00:46.783"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.387" endtime="20201115 23:00:46.783"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.785" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.793" endtime="20201115 23:00:46.813"></status>
</kw>
<msg timestamp="20201115 23:00:46.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.792" endtime="20201115 23:00:46.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:46.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:46.815" endtime="20201115 23:00:46.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.817" endtime="20201115 23:00:46.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.789" endtime="20201115 23:00:46.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.787" endtime="20201115 23:00:46.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:46.826" endtime="20201115 23:00:47.111"></status>
</kw>
<msg timestamp="20201115 23:00:47.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:46.825" endtime="20201115 23:00:47.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.115" endtime="20201115 23:00:47.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.124" endtime="20201115 23:00:47.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.822" endtime="20201115 23:00:47.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.820" endtime="20201115 23:00:47.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.130" level="INFO">${RESULT} = [{'time': 0.023149472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.720800000000181e-05, 'source_diff': 8.720800000000181e-05}, {'time': 0.023246486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.127" endtime="20201115 23:00:47.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.145" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:47.131" endtime="20201115 23:00:47.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.149" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.148" endtime="20201115 23:00:47.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.152" level="INFO">VALUE: [8.720800000000181e-05, 8.71799999999992e-05, 8.733299999999847e-05, 8.705499999999908e-05, 8.731900000000237e-05, 8.782000000000234e-05, 8.729199999999923e-05, 8.801399999999737e-05, 8.716700000000258e-05, 8.801400000000084e-05, 8.776400000000059e-05, 8.726400000000009e-05, 8.802800000000041e-05, 8.709700000000126e-05, 8.713899999999997e-05, 8.738900000000022e-05, 8.791699999999986e-05, 8.725000000000052e-05, 8.733300000000194e-05, 8.750000000000077e-05, 8.772300000000136e-05, 8.733300000000194e-05, 8.756899999999915e-05, 8.777800000000016e-05, 8.71250000000004e-05, 8.787500000000115e-05, 8.790300000000029e-05, 8.731999999999837e-05, 8.797199999999866e-05, 8.741699999999936e-05, 8.720900000000129e-05, 8.709700000000126e-05, 8.792999999999995e-05, 8.772200000000188e-05, 8.802800000000041e-05, 8.76799999999997e-05, 8.802800000000041e-05, 8.772199999999841e-05, 8.800000000000127e-05, 8.76120000000008e-05, 8.791699999999986e-05, 8.76120000000008e-05, 8.76669999999996e-05, 8.779100000000026e-05, 8.71250000000004e-05, 8.745800000000206e-05, 8.73189999999989e-05, 8.716599999999963e-05, 8.797199999999866e-05, 8.74860000000012e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.150" endtime="20201115 23:00:47.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.146" endtime="20201115 23:00:47.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.155" endtime="20201115 23:00:47.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.159" endtime="20201115 23:00:47.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.157" endtime="20201115 23:00:47.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.154" endtime="20201115 23:00:47.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.786" endtime="20201115 23:00:47.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.784" endtime="20201115 23:00:47.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:46.783" endtime="20201115 23:00:47.180"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.182" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.190" endtime="20201115 23:00:47.210"></status>
</kw>
<msg timestamp="20201115 23:00:47.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.189" endtime="20201115 23:00:47.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.211" endtime="20201115 23:00:47.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.214" endtime="20201115 23:00:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.186" endtime="20201115 23:00:47.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.184" endtime="20201115 23:00:47.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.223" endtime="20201115 23:00:47.507"></status>
</kw>
<msg timestamp="20201115 23:00:47.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.221" endtime="20201115 23:00:47.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.511" endtime="20201115 23:00:47.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.520" endtime="20201115 23:00:47.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.219" endtime="20201115 23:00:47.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.217" endtime="20201115 23:00:47.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.526" level="INFO">${RESULT} = [{'time': 0.021777917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.845900000000254e-05, 'source_diff': 8.845900000000254e-05}, {'time': 0.021878944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:47.523" endtime="20201115 23:00:47.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.540" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:47.527" endtime="20201115 23:00:47.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.544" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.543" endtime="20201115 23:00:47.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.547" level="INFO">VALUE: [8.845900000000254e-05, 8.844400000000002e-05, 8.892999999999748e-05, 8.856900000000015e-05, 8.813900000000097e-05, 8.902799999999794e-05, 8.876399999999812e-05, 8.801399999999737e-05, 8.875000000000202e-05, 8.843099999999993e-05, 8.876399999999812e-05, 8.844500000000297e-05, 8.81250000000014e-05, 8.811099999999836e-05, 8.859699999999929e-05, 8.891599999999791e-05, 8.852799999999744e-05, 8.81670000000001e-05, 8.897199999999966e-05, 8.897199999999966e-05, 8.872199999999941e-05, 8.852800000000091e-05, 8.851399999999787e-05, 8.88190000000004e-05, 8.850000000000177e-05, 8.859699999999929e-05, 8.825000000000152e-05, 8.869499999999975e-05, 8.845899999999907e-05, 8.855500000000058e-05, 8.879200000000073e-05, 8.848599999999873e-05, 8.858399999999919e-05, 8.829200000000023e-05, 8.861099999999886e-05, 8.901399999999837e-05, 8.824999999999805e-05, 8.904099999999804e-05, 8.888900000000172e-05, 8.83189999999999e-05, 8.870799999999984e-05, 8.83059999999998e-05, 8.862499999999843e-05, 8.868100000000018e-05, 8.897199999999966e-05, 8.89999999999988e-05, 8.879200000000073e-05, 8.870799999999984e-05, 8.898599999999923e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.545" endtime="20201115 23:00:47.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.540" endtime="20201115 23:00:47.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.550" endtime="20201115 23:00:47.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.553" endtime="20201115 23:00:47.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.552" endtime="20201115 23:00:47.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.548" endtime="20201115 23:00:47.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.183" endtime="20201115 23:00:47.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.181" endtime="20201115 23:00:47.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.180" endtime="20201115 23:00:47.575"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.585" endtime="20201115 23:00:47.604"></status>
</kw>
<msg timestamp="20201115 23:00:47.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.584" endtime="20201115 23:00:47.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.606" endtime="20201115 23:00:47.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.608" endtime="20201115 23:00:47.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.581" endtime="20201115 23:00:47.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.579" endtime="20201115 23:00:47.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.617" endtime="20201115 23:00:47.903"></status>
</kw>
<msg timestamp="20201115 23:00:47.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.616" endtime="20201115 23:00:47.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021721958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:47.907" endtime="20201115 23:00:47.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.915" endtime="20201115 23:00:47.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.613" endtime="20201115 23:00:47.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.611" endtime="20201115 23:00:47.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:47.921" level="INFO">${RESULT} = [{'time': 0.021811972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.001399999999937e-05, 'source_diff': 9.001399999999937e-05}, {'time': 0.021914, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:00:47.918" endtime="20201115 23:00:47.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:47.939" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:47.926" endtime="20201115 23:00:47.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.943" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:00:47.942" endtime="20201115 23:00:47.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.946" level="INFO">VALUE: [9.001399999999937e-05, 8.980599999999783e-05, 8.923599999999948e-05, 8.972200000000041e-05, 8.911099999999936e-05, 8.909699999999979e-05, 8.89999999999988e-05, 8.915300000000154e-05, 8.948599999999973e-05, 8.927699999999872e-05, 8.979200000000173e-05, 8.990299999999882e-05, 8.911099999999936e-05, 8.940300000000179e-05, 8.991699999999839e-05, 8.932000000000037e-05, 8.974999999999955e-05, 9.002699999999947e-05, 8.927800000000166e-05, 8.948700000000268e-05, 8.915200000000206e-05, 8.926399999999862e-05, 8.980599999999783e-05, 8.967999999999823e-05, 8.987500000000315e-05, 8.979200000000173e-05, 8.945800000000059e-05, 9.004199999999851e-05, 8.908399999999969e-05, 8.954200000000148e-05, 8.951400000000234e-05, 8.979099999999879e-05, 8.937499999999918e-05, 8.991599999999891e-05, 8.966599999999866e-05, 8.966699999999814e-05, 8.96939999999978e-05, 8.94450000000005e-05, 8.962499999999943e-05, 8.9638999999999e-05, 8.943100000000093e-05, 8.990299999999882e-05, 8.943000000000145e-05, 8.91939999999973e-05, 8.924999999999905e-05, 8.96800000000017e-05, 8.901400000000184e-05, 9.004200000000198e-05, 8.905600000000055e-05, 9.004099999999904e-05]</msg>
<status status="PASS" starttime="20201115 23:00:47.945" endtime="20201115 23:00:47.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.940" endtime="20201115 23:00:47.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.949" endtime="20201115 23:00:47.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:47.952" endtime="20201115 23:00:47.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.951" endtime="20201115 23:00:47.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.947" endtime="20201115 23:00:47.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.578" endtime="20201115 23:00:47.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.576" endtime="20201115 23:00:47.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.575" endtime="20201115 23:00:47.974"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:47.976" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:47.984" endtime="20201115 23:00:48.002"></status>
</kw>
<msg timestamp="20201115 23:00:48.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:47.983" endtime="20201115 23:00:48.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.004" endtime="20201115 23:00:48.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.006" endtime="20201115 23:00:48.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.980" endtime="20201115 23:00:48.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.978" endtime="20201115 23:00:48.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.015" endtime="20201115 23:00:48.300"></status>
</kw>
<msg timestamp="20201115 23:00:48.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.014" endtime="20201115 23:00:48.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.304" endtime="20201115 23:00:48.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.312" endtime="20201115 23:00:48.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.011" endtime="20201115 23:00:48.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.010" endtime="20201115 23:00:48.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.319" level="INFO">${RESULT} = [{'time': 0.021813667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.015299999999907e-05, 'source_diff': 9.015299999999907e-05}, {'time': 0.021914681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.316" endtime="20201115 23:00:48.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.332" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:48.320" endtime="20201115 23:00:48.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.337" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.336" endtime="20201115 23:00:48.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.339" level="INFO">VALUE: [9.015299999999907e-05, 9.070899999999785e-05, 9.075000000000055e-05, 9.097200000000166e-05, 9.045800000000159e-05, 9.045800000000159e-05, 9.011100000000036e-05, 9.025000000000005e-05, 9.019400000000177e-05, 9.055599999999858e-05, 9.044499999999803e-05, 9.098600000000123e-05, 9.066599999999966e-05, 9.044400000000202e-05, 9.022200000000091e-05, 9.070800000000184e-05, 9.03060000000018e-05, 9.047200000000116e-05, 9.012499999999993e-05, 9.036100000000061e-05, 9.086100000000111e-05, 9.092999999999948e-05, 9.072199999999794e-05, 9.091699999999939e-05, 9.072300000000089e-05, 9.026300000000015e-05, 9.027699999999972e-05, 9.065299999999957e-05, 9.05000000000003e-05, 9.051399999999987e-05, 9.027800000000266e-05, 9.075000000000055e-05, 9.059800000000076e-05, 9.079200000000273e-05, 9.026399999999962e-05, 9.020900000000082e-05, 9.063800000000052e-05, 9.026399999999962e-05, 9.098600000000123e-05, 9.0639e-05, 9.045800000000159e-05, 9.061100000000086e-05, 9.10000000000008e-05, 9.054199999999901e-05, 9.090299999999982e-05, 9.097299999999767e-05, 9.095800000000209e-05, 9.012499999999993e-05, 9.075000000000055e-05, 9.01939999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.338" endtime="20201115 23:00:48.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.333" endtime="20201115 23:00:48.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.342" endtime="20201115 23:00:48.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.346" endtime="20201115 23:00:48.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.344" endtime="20201115 23:00:48.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.341" endtime="20201115 23:00:48.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.977" endtime="20201115 23:00:48.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.975" endtime="20201115 23:00:48.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:47.974" endtime="20201115 23:00:48.367"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.378" endtime="20201115 23:00:48.398"></status>
</kw>
<msg timestamp="20201115 23:00:48.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.376" endtime="20201115 23:00:48.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.399" endtime="20201115 23:00:48.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.402" endtime="20201115 23:00:48.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.373" endtime="20201115 23:00:48.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.371" endtime="20201115 23:00:48.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.411" endtime="20201115 23:00:48.698"></status>
</kw>
<msg timestamp="20201115 23:00:48.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.409" endtime="20201115 23:00:48.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:48.702" endtime="20201115 23:00:48.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.711" endtime="20201115 23:00:48.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.407" endtime="20201115 23:00:48.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.405" endtime="20201115 23:00:48.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:48.718" level="INFO">${RESULT} = [{'time': 0.022645083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181899999999993e-05, 'source_diff': 9.181899999999993e-05}, {'time': 0.022744111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:48.714" endtime="20201115 23:00:48.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:48.733" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:48.719" endtime="20201115 23:00:48.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.737" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:00:48.736" endtime="20201115 23:00:48.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.740" level="INFO">VALUE: [9.181899999999993e-05, 9.154200000000001e-05, 9.172199999999894e-05, 9.166700000000014e-05, 9.120799999999887e-05, 9.151400000000087e-05, 9.188900000000125e-05, 9.112500000000093e-05, 9.104199999999951e-05, 9.156899999999968e-05, 9.16939999999998e-05, 9.138900000000075e-05, 9.131899999999943e-05, 9.155499999999664e-05, 9.204200000000051e-05, 9.173599999999851e-05, 9.129199999999976e-05, 9.148600000000173e-05, 9.130599999999933e-05, 9.19589999999991e-05, 9.149999999999783e-05, 9.199999999999833e-05, 9.179200000000026e-05, 9.16529999999971e-05, 9.130599999999933e-05, 9.205600000000008e-05, 9.204199999999704e-05, 9.190300000000082e-05, 9.183399999999897e-05, 9.134800000000151e-05, 9.170899999999885e-05, 9.195799999999962e-05, 9.154100000000054e-05, 9.166600000000066e-05, 9.181899999999993e-05, 9.126400000000062e-05, 9.134699999999857e-05, 9.169499999999928e-05, 9.20000000000018e-05, 9.140300000000032e-05, 9.191700000000039e-05, 9.116699999999964e-05, 9.186099999999864e-05, 9.117999999999973e-05, 9.184700000000254e-05, 9.168099999999971e-05, 9.170799999999937e-05, 9.124999999999758e-05, 9.123600000000148e-05, 9.138900000000075e-05]</msg>
<status status="PASS" starttime="20201115 23:00:48.738" endtime="20201115 23:00:48.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.734" endtime="20201115 23:00:48.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.743" endtime="20201115 23:00:48.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:48.746" endtime="20201115 23:00:48.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.745" endtime="20201115 23:00:48.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.741" endtime="20201115 23:00:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.370" endtime="20201115 23:00:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.368" endtime="20201115 23:00:48.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.367" endtime="20201115 23:00:48.767"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.770" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.778" endtime="20201115 23:00:48.797"></status>
</kw>
<msg timestamp="20201115 23:00:48.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.776" endtime="20201115 23:00:48.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:48.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:48.798" endtime="20201115 23:00:48.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.801" endtime="20201115 23:00:48.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.774" endtime="20201115 23:00:48.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.772" endtime="20201115 23:00:48.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:48.810" endtime="20201115 23:00:49.095"></status>
</kw>
<msg timestamp="20201115 23:00:49.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:48.809" endtime="20201115 23:00:49.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0228185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:00:49.100" endtime="20201115 23:00:49.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.108" endtime="20201115 23:00:49.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.806" endtime="20201115 23:00:49.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.805" endtime="20201115 23:00:49.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.114" level="INFO">${RESULT} = [{'time': 0.0228185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.227799999999772e-05, 'source_diff': 9.227799999999772e-05}, {'time': 0.022917528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:49.111" endtime="20201115 23:00:49.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.128" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:49.116" endtime="20201115 23:00:49.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.132" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.131" endtime="20201115 23:00:49.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.135" level="INFO">VALUE: [9.227799999999772e-05, 9.266700000000114e-05, 9.299999999999933e-05, 9.241700000000089e-05, 9.291700000000139e-05, 9.218100000000021e-05, 9.230500000000086e-05, 9.280499999999789e-05, 9.274999999999908e-05, 9.268100000000071e-05, 9.24589999999996e-05, 9.248599999999926e-05, 9.304200000000151e-05, 9.301400000000237e-05, 9.291699999999792e-05, 9.302799999999847e-05, 9.298599999999976e-05, 9.223600000000248e-05, 9.298599999999976e-05, 9.241700000000089e-05, 9.212499999999846e-05, 9.252799999999797e-05, 9.29590000000001e-05, 9.205600000000008e-05, 9.277800000000169e-05, 9.277799999999822e-05, 9.30139999999989e-05, 9.305499999999814e-05, 9.224999999999858e-05, 9.213899999999803e-05, 9.290300000000182e-05, 9.220799999999987e-05, 9.298599999999976e-05, 9.251299999999893e-05, 9.222199999999944e-05, 9.270899999999985e-05, 9.268100000000071e-05, 9.30139999999989e-05, 9.25269999999985e-05, 9.243000000000098e-05, 9.298599999999976e-05, 9.268000000000123e-05, 9.26940000000008e-05, 9.266700000000114e-05, 9.268100000000071e-05, 9.213899999999803e-05, 9.286199999999911e-05, 9.306899999999771e-05, 9.216700000000064e-05, 9.225000000000205e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.133" endtime="20201115 23:00:49.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.129" endtime="20201115 23:00:49.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.138" endtime="20201115 23:00:49.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.141" endtime="20201115 23:00:49.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.140" endtime="20201115 23:00:49.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.136" endtime="20201115 23:00:49.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.770" endtime="20201115 23:00:49.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.769" endtime="20201115 23:00:49.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:48.768" endtime="20201115 23:00:49.162"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.165" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.173" endtime="20201115 23:00:49.192"></status>
</kw>
<msg timestamp="20201115 23:00:49.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.172" endtime="20201115 23:00:49.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.194" endtime="20201115 23:00:49.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.197" endtime="20201115 23:00:49.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.169" endtime="20201115 23:00:49.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.167" endtime="20201115 23:00:49.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.206" endtime="20201115 23:00:49.492"></status>
</kw>
<msg timestamp="20201115 23:00:49.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.204" endtime="20201115 23:00:49.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.496" endtime="20201115 23:00:49.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.504" endtime="20201115 23:00:49.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.201" endtime="20201115 23:00:49.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.200" endtime="20201115 23:00:49.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.510" level="INFO">${RESULT} = [{'time': 0.022321264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.322200000000044e-05, 'source_diff': 9.322200000000044e-05}, {'time': 0.022423264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.507" endtime="20201115 23:00:49.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.524" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:49.511" endtime="20201115 23:00:49.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.528" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.527" endtime="20201115 23:00:49.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.531" level="INFO">VALUE: [9.322200000000044e-05, 9.349999999999983e-05, 9.388899999999978e-05, 9.384700000000107e-05, 9.33200000000009e-05, 9.363899999999953e-05, 9.398600000000076e-05, 9.375000000000008e-05, 9.383299999999803e-05, 9.329199999999829e-05, 9.387500000000021e-05, 9.313899999999903e-05, 9.366699999999867e-05, 9.340299999999885e-05, 9.35139999999994e-05, 9.344500000000103e-05, 9.387500000000021e-05, 9.337499999999971e-05, 9.305500000000161e-05, 9.32079999999974e-05, 9.344400000000155e-05, 9.343100000000146e-05, 9.329200000000176e-05, 9.406999999999818e-05, 9.390299999999935e-05, 9.393100000000196e-05, 9.404099999999957e-05, 9.330500000000186e-05, 9.348600000000026e-05, 9.31940000000013e-05, 9.31940000000013e-05, 9.31529999999986e-05, 9.343099999999799e-05, 9.38200000000014e-05, 9.355599999999811e-05, 9.388899999999978e-05, 9.384700000000107e-05, 9.338900000000275e-05, 9.340299999999885e-05, 9.4027e-05, 9.384700000000107e-05, 9.366699999999867e-05, 9.375000000000008e-05, 9.356900000000168e-05, 9.366700000000214e-05, 9.395899999999763e-05, 9.390299999999935e-05, 9.377699999999975e-05, 9.369399999999833e-05, 9.31390000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.529" endtime="20201115 23:00:49.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.525" endtime="20201115 23:00:49.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.534" endtime="20201115 23:00:49.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.537" endtime="20201115 23:00:49.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.536" endtime="20201115 23:00:49.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.532" endtime="20201115 23:00:49.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.166" endtime="20201115 23:00:49.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.164" endtime="20201115 23:00:49.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.163" endtime="20201115 23:00:49.559"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.561" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.569" endtime="20201115 23:00:49.590"></status>
</kw>
<msg timestamp="20201115 23:00:49.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.568" endtime="20201115 23:00:49.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.591" endtime="20201115 23:00:49.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.594" endtime="20201115 23:00:49.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.565" endtime="20201115 23:00:49.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.563" endtime="20201115 23:00:49.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.603" endtime="20201115 23:00:49.889"></status>
</kw>
<msg timestamp="20201115 23:00:49.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023302917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.601" endtime="20201115 23:00:49.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023302917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.893" endtime="20201115 23:00:49.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.901" endtime="20201115 23:00:49.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.599" endtime="20201115 23:00:49.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.597" endtime="20201115 23:00:49.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:49.908" level="INFO">${RESULT} = [{'time': 0.023302917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.484799999999807e-05, 'source_diff': 9.484799999999807e-05}, {'time': 0.023406889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:49.904" endtime="20201115 23:00:49.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:49.921" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:49.909" endtime="20201115 23:00:49.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.925" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:00:49.924" endtime="20201115 23:00:49.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.928" level="INFO">VALUE: [9.484799999999807e-05, 9.466699999999967e-05, 9.427799999999972e-05, 9.501399999999743e-05, 9.425000000000058e-05, 9.463899999999706e-05, 9.44590000000016e-05, 9.417999999999926e-05, 9.488900000000078e-05, 9.486100000000164e-05, 9.46530000000001e-05, 9.454199999999954e-05, 9.45140000000004e-05, 9.476400000000065e-05, 9.443099999999899e-05, 9.46940000000028e-05, 9.472299999999795e-05, 9.423599999999754e-05, 9.47079999999989e-05, 9.411099999999742e-05, 9.463900000000053e-05, 9.472200000000194e-05, 9.470800000000237e-05, 9.486099999999817e-05, 9.438900000000028e-05, 9.412500000000046e-05, 9.487500000000121e-05, 9.505500000000014e-05, 9.425000000000058e-05, 9.455499999999964e-05, 9.473599999999804e-05, 9.422199999999797e-05, 9.49729999999982e-05, 9.479200000000326e-05, 9.495799999999915e-05, 9.49859999999983e-05, 9.429199999999929e-05, 9.456899999999921e-05, 9.477700000000075e-05, 9.480599999999936e-05, 9.463899999999706e-05, 9.427799999999972e-05, 9.480599999999936e-05, 9.412499999999699e-05, 9.480599999999936e-05, 9.488899999999731e-05, 9.45140000000004e-05, 9.43200000000019e-05, 9.423600000000101e-05, 9.502699999999753e-05]</msg>
<status status="PASS" starttime="20201115 23:00:49.926" endtime="20201115 23:00:49.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.922" endtime="20201115 23:00:49.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.931" endtime="20201115 23:00:49.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:49.935" endtime="20201115 23:00:49.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.933" endtime="20201115 23:00:49.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.930" endtime="20201115 23:00:49.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.562" endtime="20201115 23:00:49.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.560" endtime="20201115 23:00:49.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.559" endtime="20201115 23:00:49.956"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.958" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.967" endtime="20201115 23:00:49.987"></status>
</kw>
<msg timestamp="20201115 23:00:49.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.965" endtime="20201115 23:00:49.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:49.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:49.988" endtime="20201115 23:00:49.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:49.991" endtime="20201115 23:00:49.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.962" endtime="20201115 23:00:49.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.960" endtime="20201115 23:00:49.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.000" endtime="20201115 23:00:50.286"></status>
</kw>
<msg timestamp="20201115 23:00:50.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:49.998" endtime="20201115 23:00:50.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022772778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.290" endtime="20201115 23:00:50.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.298" endtime="20201115 23:00:50.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.996" endtime="20201115 23:00:50.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.994" endtime="20201115 23:00:50.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.304" level="INFO">${RESULT} = [{'time': 0.022772778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.58339999999995e-05, 'source_diff': 9.58339999999995e-05}, {'time': 0.022876778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:50.301" endtime="20201115 23:00:50.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.319" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:50.305" endtime="20201115 23:00:50.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.323" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.322" endtime="20201115 23:00:50.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.326" level="INFO">VALUE: [9.58339999999995e-05, 9.511100000000189e-05, 9.593099999999702e-05, 9.555499999999717e-05, 9.508299999999928e-05, 9.529200000000029e-05, 9.58880000000023e-05, 9.552800000000097e-05, 9.562499999999849e-05, 9.595800000000015e-05, 9.591700000000092e-05, 9.58339999999995e-05, 9.59859999999993e-05, 9.524999999999811e-05, 9.54859999999988e-05, 9.52079999999994e-05, 9.561099999999892e-05, 9.54720000000027e-05, 9.518000000000026e-05, 9.579200000000079e-05, 9.549999999999836e-05, 9.543099999999999e-05, 9.563899999999806e-05, 9.529200000000029e-05, 9.548600000000226e-05, 9.523699999999802e-05, 9.551300000000193e-05, 9.552800000000097e-05, 9.587499999999874e-05, 9.569400000000033e-05, 9.563899999999806e-05, 9.577799999999775e-05, 9.523599999999854e-05, 9.568100000000024e-05, 9.572299999999895e-05, 9.558399999999925e-05, 9.597199999999972e-05, 9.57079999999999e-05, 9.525000000000158e-05, 9.591700000000092e-05, 9.52079999999994e-05, 9.572199999999947e-05, 9.516700000000017e-05, 9.543099999999999e-05, 9.577800000000122e-05, 9.506999999999918e-05, 9.513900000000103e-05, 9.597199999999972e-05, 9.519399999999983e-05, 9.601399999999843e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.324" endtime="20201115 23:00:50.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.320" endtime="20201115 23:00:50.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.330" endtime="20201115 23:00:50.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.333" endtime="20201115 23:00:50.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.331" endtime="20201115 23:00:50.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.328" endtime="20201115 23:00:50.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.959" endtime="20201115 23:00:50.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.957" endtime="20201115 23:00:50.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:49.956" endtime="20201115 23:00:50.354"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.364" endtime="20201115 23:00:50.384"></status>
</kw>
<msg timestamp="20201115 23:00:50.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.363" endtime="20201115 23:00:50.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.386" endtime="20201115 23:00:50.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.388" endtime="20201115 23:00:50.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.360" endtime="20201115 23:00:50.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.358" endtime="20201115 23:00:50.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.397" endtime="20201115 23:00:50.682"></status>
</kw>
<msg timestamp="20201115 23:00:50.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.396" endtime="20201115 23:00:50.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021845597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.686" endtime="20201115 23:00:50.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.694" endtime="20201115 23:00:50.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.393" endtime="20201115 23:00:50.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.392" endtime="20201115 23:00:50.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:50.701" level="INFO">${RESULT} = [{'time': 0.021942403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.68059999999979e-05, 'source_diff': 9.68059999999979e-05}, {'time': 0.022049417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:50.697" endtime="20201115 23:00:50.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:50.714" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:50.702" endtime="20201115 23:00:50.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.719" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:00:50.718" endtime="20201115 23:00:50.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.721" level="INFO">VALUE: [9.68059999999979e-05, 9.684800000000007e-05, 9.668100000000124e-05, 9.632000000000043e-05, 9.674999999999961e-05, 9.691599999999898e-05, 9.644399999999761e-05, 9.622199999999997e-05, 9.702699999999953e-05, 9.695799999999768e-05, 9.647200000000022e-05, 9.668099999999777e-05, 9.649999999999936e-05, 9.627800000000172e-05, 9.655599999999764e-05, 9.681999999999746e-05, 9.658400000000025e-05, 9.695800000000115e-05, 9.706899999999824e-05, 9.659700000000035e-05, 9.631900000000096e-05, 9.663900000000253e-05, 9.648600000000326e-05, 9.699999999999986e-05, 9.63470000000001e-05, 9.683399999999703e-05, 9.645800000000065e-05, 9.695799999999768e-05, 9.601399999999843e-05, 9.677800000000222e-05, 9.67080000000009e-05, 9.676399999999918e-05, 9.688899999999931e-05, 9.613900000000203e-05, 9.657000000000068e-05, 9.651299999999946e-05, 9.655600000000111e-05, 9.636099999999967e-05, 9.681900000000146e-05, 9.62080000000004e-05, 9.606900000000071e-05, 9.615299999999813e-05, 9.619400000000083e-05, 9.669500000000081e-05, 9.622199999999997e-05, 9.681999999999746e-05, 9.68340000000005e-05, 9.672299999999995e-05, 9.622199999999997e-05, 9.649999999999936e-05]</msg>
<status status="PASS" starttime="20201115 23:00:50.720" endtime="20201115 23:00:50.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.715" endtime="20201115 23:00:50.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.724" endtime="20201115 23:00:50.726"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:50.728" endtime="20201115 23:00:50.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.726" endtime="20201115 23:00:50.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.723" endtime="20201115 23:00:50.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.357" endtime="20201115 23:00:50.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.355" endtime="20201115 23:00:50.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.354" endtime="20201115 23:00:50.749"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.752" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.760" endtime="20201115 23:00:50.779"></status>
</kw>
<msg timestamp="20201115 23:00:50.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.758" endtime="20201115 23:00:50.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:50.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:50.780" endtime="20201115 23:00:50.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.783" endtime="20201115 23:00:50.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.756" endtime="20201115 23:00:50.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.754" endtime="20201115 23:00:50.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:50.792" endtime="20201115 23:00:51.077"></status>
</kw>
<msg timestamp="20201115 23:00:51.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:50.790" endtime="20201115 23:00:51.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.081" endtime="20201115 23:00:51.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.089" endtime="20201115 23:00:51.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.788" endtime="20201115 23:00:51.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.786" endtime="20201115 23:00:51.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.096" level="INFO">${RESULT} = [{'time': 0.022348875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.73470000000011e-05, 'source_diff': 9.73470000000011e-05}, {'time': 0.022458875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:51.093" endtime="20201115 23:00:51.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.109" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:51.097" endtime="20201115 23:00:51.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.114" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.113" endtime="20201115 23:00:51.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.116" level="INFO">VALUE: [9.73470000000011e-05, 9.779199999999932e-05, 9.790299999999988e-05, 9.757000000000168e-05, 9.720900000000088e-05, 9.743099999999852e-05, 9.751300000000046e-05, 9.742999999999905e-05, 9.769399999999887e-05, 9.780499999999942e-05, 9.722200000000097e-05, 9.804199999999957e-05, 9.741700000000242e-05, 9.772300000000095e-05, 9.738899999999981e-05, 9.752700000000003e-05, 9.762500000000049e-05, 9.752700000000003e-05, 9.776400000000018e-05, 9.713900000000303e-05, 9.74860000000008e-05, 9.788900000000031e-05, 9.720799999999793e-05, 9.706999999999771e-05, 9.798599999999782e-05, 9.707000000000118e-05, 9.745800000000165e-05, 9.737500000000024e-05, 9.731900000000196e-05, 9.712499999999999e-05, 9.723600000000054e-05, 9.768099999999877e-05, 9.741699999999895e-05, 9.779199999999932e-05, 9.730600000000186e-05, 9.705600000000161e-05, 9.722300000000045e-05, 9.797200000000172e-05, 9.798599999999782e-05, 9.779099999999985e-05, 9.794399999999912e-05, 9.741699999999895e-05, 9.750000000000036e-05, 9.76799999999993e-05, 9.768100000000224e-05, 9.713899999999956e-05, 9.741600000000294e-05, 9.71660000000027e-05, 9.76799999999993e-05, 9.712499999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.115" endtime="20201115 23:00:51.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.110" endtime="20201115 23:00:51.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.119" endtime="20201115 23:00:51.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.123" endtime="20201115 23:00:51.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.121" endtime="20201115 23:00:51.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.118" endtime="20201115 23:00:51.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.752" endtime="20201115 23:00:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.751" endtime="20201115 23:00:51.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:50.750" endtime="20201115 23:00:51.144"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.146" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.154" endtime="20201115 23:00:51.174"></status>
</kw>
<msg timestamp="20201115 23:00:51.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.153" endtime="20201115 23:00:51.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.175" endtime="20201115 23:00:51.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.178" endtime="20201115 23:00:51.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.150" endtime="20201115 23:00:51.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.148" endtime="20201115 23:00:51.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.187" endtime="20201115 23:00:51.472"></status>
</kw>
<msg timestamp="20201115 23:00:51.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.185" endtime="20201115 23:00:51.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021882028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.476" endtime="20201115 23:00:51.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.484" endtime="20201115 23:00:51.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.183" endtime="20201115 23:00:51.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.181" endtime="20201115 23:00:51.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.491" level="INFO">${RESULT} = [{'time': 0.021980528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.84999999999979e-05, 'source_diff': 9.84999999999979e-05}, {'time': 0.022087542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:00:51.488" endtime="20201115 23:00:51.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.504" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:51.492" endtime="20201115 23:00:51.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.509" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.508" endtime="20201115 23:00:51.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.511" level="INFO">VALUE: [9.84999999999979e-05, 9.827800000000025e-05, 9.88479999999986e-05, 9.881899999999999e-05, 9.843000000000005e-05, 9.829199999999982e-05, 9.819500000000231e-05, 9.84860000000018e-05, 9.9028000000001e-05, 9.830499999999992e-05, 9.895900000000263e-05, 9.876400000000118e-05, 9.822200000000197e-05, 9.84860000000018e-05, 9.883299999999956e-05, 9.845799999999919e-05, 9.824999999999764e-05, 9.900000000000186e-05, 9.902799999999753e-05, 9.826400000000068e-05, 9.874999999999814e-05, 9.812500000000099e-05, 9.868099999999977e-05, 9.881899999999999e-05, 9.82219999999985e-05, 9.876400000000118e-05, 9.822200000000197e-05, 9.872200000000247e-05, 9.85280000000005e-05, 9.812500000000099e-05, 9.870899999999891e-05, 9.823600000000154e-05, 9.805599999999914e-05, 9.88340000000025e-05, 9.855500000000017e-05, 9.82219999999985e-05, 9.875000000000161e-05, 9.812500000000099e-05, 9.833300000000253e-05, 9.825000000000111e-05, 9.872299999999848e-05, 9.831999999999896e-05, 9.881999999999946e-05, 9.881899999999999e-05, 9.894400000000012e-05, 9.845800000000265e-05, 9.827800000000025e-05, 9.8721999999999e-05, 9.81669999999997e-05, 9.874999999999814e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.510" endtime="20201115 23:00:51.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.505" endtime="20201115 23:00:51.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.514" endtime="20201115 23:00:51.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.518" endtime="20201115 23:00:51.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.516" endtime="20201115 23:00:51.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.513" endtime="20201115 23:00:51.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.147" endtime="20201115 23:00:51.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.145" endtime="20201115 23:00:51.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.144" endtime="20201115 23:00:51.539"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.549" endtime="20201115 23:00:51.568"></status>
</kw>
<msg timestamp="20201115 23:00:51.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.548" endtime="20201115 23:00:51.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.570" endtime="20201115 23:00:51.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.573" endtime="20201115 23:00:51.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.545" endtime="20201115 23:00:51.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.543" endtime="20201115 23:00:51.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.582" endtime="20201115 23:00:51.867"></status>
</kw>
<msg timestamp="20201115 23:00:51.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.580" endtime="20201115 23:00:51.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.871" endtime="20201115 23:00:51.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.880" endtime="20201115 23:00:51.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.578" endtime="20201115 23:00:51.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.576" endtime="20201115 23:00:51.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:51.886" level="INFO">${RESULT} = [{'time': 0.022646611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.974999999999914e-05, 'source_diff': 9.974999999999914e-05}, {'time': 0.022757639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:51.883" endtime="20201115 23:00:51.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:51.901" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:51.887" endtime="20201115 23:00:51.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.906" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:00:51.904" endtime="20201115 23:00:51.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.908" level="INFO">VALUE: [9.974999999999914e-05, 9.987499999999927e-05, 9.933300000000006e-05, 9.92219999999995e-05, 9.965300000000163e-05, 9.920900000000288e-05, 9.979100000000185e-05, 9.944400000000062e-05, 9.987499999999927e-05, 9.922200000000297e-05, 9.915299999999766e-05, 9.911099999999895e-05, 9.98060000000009e-05, 9.92219999999995e-05, 9.945899999999966e-05, 9.927799999999778e-05, 9.925000000000211e-05, 9.998599999999983e-05, 9.916600000000123e-05, 9.951400000000193e-05, 9.959699999999988e-05, 9.9722e-05, 9.983400000000003e-05, 9.93609999999992e-05, 9.922299999999898e-05, 9.905600000000014e-05, 9.906900000000024e-05, 9.938899999999834e-05, 9.93609999999992e-05, 9.934699999999963e-05, 9.984700000000013e-05, 9.973599999999957e-05, 9.951400000000193e-05, 9.915299999999766e-05, 9.947299999999923e-05, 9.998700000000277e-05, 9.993000000000155e-05, 9.948599999999932e-05, 0.00010004099999999863, 9.995800000000069e-05, 9.951399999999846e-05, 9.920900000000288e-05, 9.976400000000218e-05, 9.915299999999766e-05, 9.906999999999971e-05, 0.00010001399999999896, 9.943099999999705e-05, 9.933300000000006e-05, 9.997200000000026e-05, 9.958300000000031e-05]</msg>
<status status="PASS" starttime="20201115 23:00:51.907" endtime="20201115 23:00:51.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.902" endtime="20201115 23:00:51.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.911" endtime="20201115 23:00:51.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:51.914" endtime="20201115 23:00:51.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.913" endtime="20201115 23:00:51.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.909" endtime="20201115 23:00:51.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.542" endtime="20201115 23:00:51.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.540" endtime="20201115 23:00:51.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.539" endtime="20201115 23:00:51.936"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.938" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.947" endtime="20201115 23:00:51.966"></status>
</kw>
<msg timestamp="20201115 23:00:51.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.945" endtime="20201115 23:00:51.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:51.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:51.968" endtime="20201115 23:00:51.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.970" endtime="20201115 23:00:51.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.942" endtime="20201115 23:00:51.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.940" endtime="20201115 23:00:51.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:51.979" endtime="20201115 23:00:52.265"></status>
</kw>
<msg timestamp="20201115 23:00:52.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:51.978" endtime="20201115 23:00:52.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.269" endtime="20201115 23:00:52.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.277" endtime="20201115 23:00:52.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.975" endtime="20201115 23:00:52.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.974" endtime="20201115 23:00:52.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.283" level="INFO">${RESULT} = [{'time': 0.022419056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010073700000000005, 'source_diff': 0.00010073700000000005}, {'time': 0.022525042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.280" endtime="20201115 23:00:52.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.297" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:52.284" endtime="20201115 23:00:52.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.301" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.300" endtime="20201115 23:00:52.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.303" level="INFO">VALUE: [0.00010073700000000005, 0.00010020899999999694, 0.00010066699999999873, 0.00010045800000000119, 0.00010041600000000248, 0.00010056900000000174, 0.00010081899999999852, 0.00010015299999999866, 0.00010080499999999895, 0.00010019499999999737, 0.00010024999999999964, 0.00010083400000000103, 0.00010008400000000028, 0.00010038899999999934, 0.00010031899999999802, 0.00010082000000000146, 0.0001001939999999979, 0.00010084700000000113, 0.0001008610000000007, 0.00010063899999999959, 0.00010027799999999878, 0.00010097199999999779, 0.0001003199999999975, 0.00010056899999999827, 0.00010043000000000205, 0.00010095800000000169, 0.00010024999999999964, 0.00010044500000000109, 0.00010029200000000182, 0.00010016699999999823, 0.00010011099999999995, 0.0001004999999999999, 0.00010059800000000035, 0.00010102700000000006, 0.00010087500000000027, 0.00010061100000000045, 0.0001003610000000002, 0.00010079199999999885, 0.0001003199999999975, 0.00010090299999999941, 0.00010048600000000033, 0.00010051299999999999, 0.00010066599999999926, 0.00010056900000000174, 0.00010058299999999784, 0.00010065300000000263, 0.00010019400000000137, 0.00010012499999999952, 0.00010069499999999787, 0.00010032000000000096]</msg>
<status status="PASS" starttime="20201115 23:00:52.302" endtime="20201115 23:00:52.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.297" endtime="20201115 23:00:52.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.307" endtime="20201115 23:00:52.308"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.310" endtime="20201115 23:00:52.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.308" endtime="20201115 23:00:52.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.305" endtime="20201115 23:00:52.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.939" endtime="20201115 23:00:52.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.937" endtime="20201115 23:00:52.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:51.936" endtime="20201115 23:00:52.332"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.334" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.342" endtime="20201115 23:00:52.362"></status>
</kw>
<msg timestamp="20201115 23:00:52.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.341" endtime="20201115 23:00:52.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.363" endtime="20201115 23:00:52.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.366" endtime="20201115 23:00:52.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.338" endtime="20201115 23:00:52.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.336" endtime="20201115 23:00:52.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.375" endtime="20201115 23:00:52.660"></status>
</kw>
<msg timestamp="20201115 23:00:52.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.373" endtime="20201115 23:00:52.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.664" endtime="20201115 23:00:52.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.672" endtime="20201115 23:00:52.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.371" endtime="20201115 23:00:52.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.369" endtime="20201115 23:00:52.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:52.679" level="INFO">${RESULT} = [{'time': 0.022469556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010119500000000184, 'source_diff': 0.00010119500000000184}, {'time': 0.022582569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:52.675" endtime="20201115 23:00:52.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:52.692" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:52.680" endtime="20201115 23:00:52.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.696" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:00:52.695" endtime="20201115 23:00:52.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.699" level="INFO">VALUE: [0.00010119500000000184, 0.000101416, 0.00010113900000000009, 0.00010184700000000213, 0.00010129199999999935, 0.00010197200000000226, 0.00010188900000000084, 0.00010148600000000133, 0.00010175000000000115, 0.000101819999999999, 0.00010159700000000188, 0.00010130499999999945, 0.00010170800000000244, 0.0001015419999999996, 0.0001019160000000005, 0.0001011670000000027, 0.00010156900000000274, 0.00010152800000000003, 0.00010108400000000128, 0.00010188899999999737, 0.00010179099999999691, 0.00010148600000000133, 0.00010129099999999988, 0.00010108299999999834, 0.0001017359999999981, 0.00010131899999999902, 0.00010138900000000034, 0.00010174999999999768, 0.00010158399999999831, 0.00010129199999999935, 0.00010118100000000227, 0.00010147200000000176, 0.00010108300000000181, 0.00010117999999999933, 0.00010113900000000009, 0.00010134699999999816, 0.00010169500000000234, 0.00010149999999999743, 0.0001011809999999988, 0.00010176400000000071, 0.00010154100000000013, 0.00010109700000000138, 0.00010129099999999988, 0.0001015549999999997, 0.00010115299999999966, 0.00010127799999999978, 0.00010122300000000098, 0.00010166699999999973, 0.0001013610000000012, 0.00010195899999999869]</msg>
<status status="PASS" starttime="20201115 23:00:52.697" endtime="20201115 23:00:52.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.693" endtime="20201115 23:00:52.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.702" endtime="20201115 23:00:52.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:52.706" endtime="20201115 23:00:52.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.704" endtime="20201115 23:00:52.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.701" endtime="20201115 23:00:52.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.335" endtime="20201115 23:00:52.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.333" endtime="20201115 23:00:52.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.332" endtime="20201115 23:00:52.727"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.729" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.737" endtime="20201115 23:00:52.756"></status>
</kw>
<msg timestamp="20201115 23:00:52.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.736" endtime="20201115 23:00:52.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:52.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:52.758" endtime="20201115 23:00:52.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.760" endtime="20201115 23:00:52.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.733" endtime="20201115 23:00:52.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.731" endtime="20201115 23:00:52.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:52.770" endtime="20201115 23:00:53.055"></status>
</kw>
<msg timestamp="20201115 23:00:53.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:52.768" endtime="20201115 23:00:53.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.060" endtime="20201115 23:00:53.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.068" endtime="20201115 23:00:53.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.765" endtime="20201115 23:00:53.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.763" endtime="20201115 23:00:53.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.074" level="INFO">${RESULT} = [{'time': 0.021826097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010224999999999818, 'source_diff': 0.00010224999999999818}, {'time': 0.021941125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.071" endtime="20201115 23:00:53.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.087" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:53.075" endtime="20201115 23:00:53.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.092" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.091" endtime="20201115 23:00:53.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.099" level="INFO">VALUE: [0.00010224999999999818, 0.0001026940000000004, 0.0001021809999999998, 0.00010295800000000022, 0.00010288899999999837, 0.00010305600000000067, 0.00010254199999999714, 0.00010238800000000187, 0.00010304099999999816, 0.0001021939999999999, 0.00010208299999999934, 0.00010284699999999966, 0.00010291699999999751, 0.00010243100000000005, 0.00010283399999999956, 0.00010245900000000266, 0.0001022359999999986, 0.00010263900000000159, 0.00010216700000000023, 0.00010256900000000027, 0.0001023749999999983, 0.00010262499999999855, 0.00010282, 0.00010282, 0.00010265300000000116, 0.00010230500000000045, 0.00010254099999999766, 0.00010245899999999919, 0.0001028610000000027, 0.00010293000000000108, 0.00010295899999999969, 0.0001022359999999986, 0.00010295800000000022, 0.00010216700000000023, 0.00010225000000000165, 0.00010283399999999956, 0.00010298600000000283, 0.00010238899999999787, 0.00010231900000000002, 0.00010224999999999818, 0.00010261099999999898, 0.00010295800000000022, 0.00010301400000000197, 0.00010252800000000103, 0.00010234699999999916, 0.00010290299999999794, 0.00010206899999999977, 0.00010243000000000058, 0.00010216600000000076, 0.00010258299999999984]</msg>
<status status="PASS" starttime="20201115 23:00:53.093" endtime="20201115 23:00:53.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.088" endtime="20201115 23:00:53.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.102" endtime="20201115 23:00:53.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.105" endtime="20201115 23:00:53.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.104" endtime="20201115 23:00:53.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.100" endtime="20201115 23:00:53.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.730" endtime="20201115 23:00:53.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.728" endtime="20201115 23:00:53.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:52.727" endtime="20201115 23:00:53.127"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.129" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.137" endtime="20201115 23:00:53.158"></status>
</kw>
<msg timestamp="20201115 23:00:53.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.136" endtime="20201115 23:00:53.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.159" endtime="20201115 23:00:53.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.162" endtime="20201115 23:00:53.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.133" endtime="20201115 23:00:53.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.131" endtime="20201115 23:00:53.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.171" endtime="20201115 23:00:53.457"></status>
</kw>
<msg timestamp="20201115 23:00:53.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.169" endtime="20201115 23:00:53.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.461" endtime="20201115 23:00:53.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.469" endtime="20201115 23:00:53.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.167" endtime="20201115 23:00:53.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.165" endtime="20201115 23:00:53.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.475" level="INFO">${RESULT} = [{'time': 0.022730458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001035689999999978, 'source_diff': 0.0001035689999999978}, {'time': 0.022845472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:53.472" endtime="20201115 23:00:53.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.490" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:53.477" endtime="20201115 23:00:53.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.495" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.494" endtime="20201115 23:00:53.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.497" level="INFO">VALUE: [0.0001035689999999978, 0.00010344399999999768, 0.00010316600000000176, 0.0001032359999999996, 0.00010370800000000097, 0.00010312499999999905, 0.000103416000000002, 0.000103513999999999, 0.00010324999999999918, 0.00010405499999999873, 0.00010349999999999943, 0.00010341699999999801, 0.00010390300000000241, 0.0001036810000000013, 0.00010377799999999882, 0.0001031810000000008, 0.00010329200000000135, 0.00010319399999999743, 0.00010326399999999875, 0.00010315200000000219, 0.00010366600000000226, 0.0001032359999999996, 0.00010348599999999986, 0.00010393099999999808, 0.00010377799999999882, 0.00010341700000000148, 0.00010377800000000229, 0.00010349999999999943, 0.00010308300000000034, 0.00010381900000000152, 0.00010331899999999755, 0.00010383300000000109, 0.00010345800000000072, 0.00010322200000000004, 0.00010393099999999808, 0.00010386100000000023, 0.00010349999999999943, 0.00010313900000000209, 0.0001032359999999996, 0.00010349999999999943, 0.00010358300000000084, 0.00010333300000000059, 0.00010306900000000077, 0.00010309699999999991, 0.00010397199999999732, 0.0001037360000000001, 0.00010402800000000254, 0.00010377799999999882, 0.00010306900000000077, 0.00010374999999999968]</msg>
<status status="PASS" starttime="20201115 23:00:53.496" endtime="20201115 23:00:53.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.491" endtime="20201115 23:00:53.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.500" endtime="20201115 23:00:53.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.504" endtime="20201115 23:00:53.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.502" endtime="20201115 23:00:53.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.499" endtime="20201115 23:00:53.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.130" endtime="20201115 23:00:53.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.128" endtime="20201115 23:00:53.525"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.127" endtime="20201115 23:00:53.525"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.527" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.535" endtime="20201115 23:00:53.555"></status>
</kw>
<msg timestamp="20201115 23:00:53.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.534" endtime="20201115 23:00:53.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.556" endtime="20201115 23:00:53.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.559" endtime="20201115 23:00:53.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.531" endtime="20201115 23:00:53.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.529" endtime="20201115 23:00:53.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.568" endtime="20201115 23:00:53.854"></status>
</kw>
<msg timestamp="20201115 23:00:53.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.566" endtime="20201115 23:00:53.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:53.858" endtime="20201115 23:00:53.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.866" endtime="20201115 23:00:53.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.564" endtime="20201115 23:00:53.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.562" endtime="20201115 23:00:53.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:53.873" level="INFO">${RESULT} = [{'time': 0.022070042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010450000000000043, 'source_diff': 0.00010450000000000043}, {'time': 0.022188056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:53.870" endtime="20201115 23:00:53.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:53.886" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:53.874" endtime="20201115 23:00:53.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.890" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:00:53.889" endtime="20201115 23:00:53.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:53.893" level="INFO">VALUE: [0.00010450000000000043, 0.0001048620000000007, 0.00010434800000000063, 0.00010449999999999696, 0.00010497199999999832, 0.00010447199999999782, 0.00010420800000000147, 0.00010422200000000104, 0.00010495800000000222, 0.00010467999999999936, 0.00010440299999999944, 0.00010415299999999919, 0.00010422300000000051, 0.00010492999999999961, 0.00010411100000000048, 0.00010441599999999954, 0.000104514, 0.00010498599999999789, 0.00010472199999999807, 0.00010491699999999951, 0.00010420900000000094, 0.00010486100000000123, 0.00010486100000000123, 0.00010458300000000184, 0.00010450000000000043, 0.00010483299999999862, 0.0001050140000000005, 0.00010411100000000048, 0.0001043750000000003, 0.00010491699999999951, 0.0001047499999999972, 0.00010493000000000308, 0.00010449999999999696, 0.0001050140000000005, 0.00010447200000000129, 0.00010475000000000068, 0.00010416700000000223, 0.0001045559999999987, 0.00010458399999999785, 0.000104514, 0.000104514, 0.00010451300000000052, 0.00010461100000000098, 0.00010412500000000005, 0.00010490299999999994, 0.0001042360000000006, 0.00010416700000000223, 0.00010457000000000174, 0.00010450000000000043, 0.00010495899999999822]</msg>
<status status="PASS" starttime="20201115 23:00:53.891" endtime="20201115 23:00:53.893"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.887" endtime="20201115 23:00:53.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.896" endtime="20201115 23:00:53.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.899" endtime="20201115 23:00:53.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.898" endtime="20201115 23:00:53.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.894" endtime="20201115 23:00:53.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.528" endtime="20201115 23:00:53.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.526" endtime="20201115 23:00:53.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.525" endtime="20201115 23:00:53.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:14.330" endtime="20201115 23:00:53.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.925" endtime="20201115 23:00:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.923" endtime="20201115 23:00:53.945"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.922" endtime="20201115 23:00:53.946"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:11.221" endtime="20201115 23:00:53.946" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:53.954" endtime="20201115 23:00:53.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.952" endtime="20201115 23:00:53.974"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:53.988" endtime="20201115 23:00:57.010"></status>
</kw>
<msg timestamp="20201115 23:00:57.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:53.986" endtime="20201115 23:00:57.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.013" endtime="20201115 23:00:57.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.023" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:00:57.019" endtime="20201115 23:00:57.023"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:53.983" endtime="20201115 23:00:57.025"></status>
</kw>
<status status="FAIL" starttime="20201115 23:00:53.981" endtime="20201115 23:00:57.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.979" endtime="20201115 23:00:57.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:00:57.034" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:00:57.032" endtime="20201115 23:00:57.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.028" endtime="20201115 23:00:57.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.978" endtime="20201115 23:00:57.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.977" endtime="20201115 23:00:57.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.037" endtime="20201115 23:00:57.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.976" endtime="20201115 23:00:57.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.974" endtime="20201115 23:00:57.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:53.951" endtime="20201115 23:00:57.043"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.068" endtime="20201115 23:00:57.086"></status>
</kw>
<msg timestamp="20201115 23:00:57.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.065" endtime="20201115 23:00:57.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.090" endtime="20201115 23:00:57.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.095" endtime="20201115 23:00:57.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.059" endtime="20201115 23:00:57.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.055" endtime="20201115 23:00:57.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.116" endtime="20201115 23:00:57.411"></status>
</kw>
<msg timestamp="20201115 23:00:57.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106494653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106516486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.112" endtime="20201115 23:00:57.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106494653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106516486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.415" endtime="20201115 23:00:57.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.423" endtime="20201115 23:00:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.105" endtime="20201115 23:00:57.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.101" endtime="20201115 23:00:57.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.430" level="INFO">${RESULT} = [{'time': 3.106516486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1832999999915614e-05, 'source_diff': 2.1832999999915614e-05}, {'time': 3.106544472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:57.426" endtime="20201115 23:00:57.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.443" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:57.431" endtime="20201115 23:00:57.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.448" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.447" endtime="20201115 23:00:57.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.450" level="INFO">VALUE: [2.1832999999915614e-05, 2.1221999999987418e-05, 2.1319000000019628e-05, 2.2042000000332962e-05, 2.15139999997227e-05, 2.1486000000070504e-05, 2.140299999986439e-05, 2.18610000000119e-05, 2.180599999990207e-05, 2.1541999999818984e-05, 2.1527999999992886e-05, 2.1777999999805786e-05, 2.219500000011365e-05, 2.145799999997422e-05, 2.180599999990207e-05, 2.199999999996649e-05, 2.2138999999921083e-05, 2.1527999999992886e-05, 2.1735999999883404e-05, 2.20969999999987e-05, 2.2041999999888873e-05, 2.1570000000359357e-05, 2.136200000002475e-05, 2.1598000000011552e-05, 2.1792000000075973e-05, 2.2124999999650896e-05, 2.1693999999961022e-05, 2.141699999969049e-05, 2.1499999999896602e-05, 2.176399999997969e-05, 2.1375000000212196e-05, 2.1332999999845725e-05, 2.1569000000276617e-05, 2.1290999999923343e-05, 2.1693999999961022e-05, 2.2014000000236678e-05, 2.155500000000643e-05, 2.1347000000115912e-05, 2.1319000000019628e-05, 2.195800000004411e-05, 2.1250000000083702e-05, 2.1290999999923343e-05, 2.1735999999883404e-05, 2.2165999999934627e-05, 2.1429999999877936e-05, 2.220899999993975e-05, 2.18470000001858e-05, 2.1443999999704033e-05, 2.165300000012138e-05, 2.1473000000327147e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.449" endtime="20201115 23:00:57.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.444" endtime="20201115 23:00:57.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.453" endtime="20201115 23:00:57.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.457" endtime="20201115 23:00:57.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.455" endtime="20201115 23:00:57.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.452" endtime="20201115 23:00:57.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.052" endtime="20201115 23:00:57.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.047" endtime="20201115 23:00:57.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.046" endtime="20201115 23:00:57.478"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.480" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.489" endtime="20201115 23:00:57.504"></status>
</kw>
<msg timestamp="20201115 23:00:57.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.487" endtime="20201115 23:00:57.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.505" endtime="20201115 23:00:57.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.508" endtime="20201115 23:00:57.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.484" endtime="20201115 23:00:57.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.482" endtime="20201115 23:00:57.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.518" endtime="20201115 23:00:57.801"></status>
</kw>
<msg timestamp="20201115 23:00:57.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.515" endtime="20201115 23:00:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021853694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.806" endtime="20201115 23:00:57.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.814" endtime="20201115 23:00:57.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.513" endtime="20201115 23:00:57.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.511" endtime="20201115 23:00:57.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:57.821" level="INFO">${RESULT} = [{'time': 0.021853694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1707999999998756e-05, 'source_diff': 2.1707999999998756e-05}, {'time': 0.021881694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:57.817" endtime="20201115 23:00:57.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:57.834" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:57.822" endtime="20201115 23:00:57.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.838" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:00:57.837" endtime="20201115 23:00:57.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.841" level="INFO">VALUE: [2.1707999999998756e-05, 2.186100000000149e-05, 2.1250000000000435e-05, 2.1277999999999575e-05, 2.155499999999949e-05, 2.1443999999998936e-05, 2.213899999999741e-05, 2.1429999999999366e-05, 2.1957999999999006e-05, 2.1264000000000005e-05, 2.1429999999999366e-05, 2.141699999999927e-05, 2.191699999999977e-05, 2.213900000000088e-05, 2.1957999999999006e-05, 2.1778000000000075e-05, 2.1277999999999575e-05, 2.1207999999998256e-05, 2.184699999999845e-05, 2.156899999999906e-05, 2.220899999999873e-05, 2.208299999999913e-05, 2.159700000000167e-05, 2.213900000000088e-05, 2.172300000000127e-05, 2.1472000000001545e-05, 2.134699999999795e-05, 2.1429999999999366e-05, 2.143099999999884e-05, 2.12090000000012e-05, 2.143099999999884e-05, 2.169499999999866e-05, 2.170899999999823e-05, 2.2014000000000755e-05, 2.1957999999999006e-05, 2.173699999999737e-05, 2.1929999999999866e-05, 2.187500000000106e-05, 2.1958000000002476e-05, 2.15830000000021e-05, 2.187500000000106e-05, 2.162500000000081e-05, 2.204100000000042e-05, 2.1652000000000476e-05, 2.130499999999924e-05, 2.2014000000000755e-05, 2.1249999999996966e-05, 2.2193999999999686e-05, 2.1749999999997466e-05, 2.1527999999999825e-05]</msg>
<status status="PASS" starttime="20201115 23:00:57.839" endtime="20201115 23:00:57.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.835" endtime="20201115 23:00:57.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.844" endtime="20201115 23:00:57.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:57.847" endtime="20201115 23:00:57.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.846" endtime="20201115 23:00:57.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.842" endtime="20201115 23:00:57.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.481" endtime="20201115 23:00:57.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.479" endtime="20201115 23:00:57.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.478" endtime="20201115 23:00:57.869"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.871" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.879" endtime="20201115 23:00:57.894"></status>
</kw>
<msg timestamp="20201115 23:00:57.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.878" endtime="20201115 23:00:57.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:57.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:57.895" endtime="20201115 23:00:57.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.898" endtime="20201115 23:00:57.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.875" endtime="20201115 23:00:57.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.873" endtime="20201115 23:00:57.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:57.909" endtime="20201115 23:00:58.194"></status>
</kw>
<msg timestamp="20201115 23:00:58.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:57.906" endtime="20201115 23:00:58.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.199" endtime="20201115 23:00:58.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.207" endtime="20201115 23:00:58.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.903" endtime="20201115 23:00:58.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.901" endtime="20201115 23:00:58.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.213" level="INFO">${RESULT} = [{'time': 0.021927694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1666000000000046e-05, 'source_diff': 2.1666000000000046e-05}, {'time': 0.021954694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.210" endtime="20201115 23:00:58.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.228" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:58.214" endtime="20201115 23:00:58.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.232" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.231" endtime="20201115 23:00:58.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.235" level="INFO">VALUE: [2.1666000000000046e-05, 2.2138000000001407e-05, 2.1972000000002045e-05, 2.211099999999827e-05, 2.130500000000271e-05, 2.1429999999999366e-05, 2.129099999999967e-05, 2.2207999999999256e-05, 2.216700000000002e-05, 2.12770000000001e-05, 2.213900000000088e-05, 2.129099999999967e-05, 2.130499999999924e-05, 2.1749999999997466e-05, 2.1277999999999575e-05, 2.1943999999999436e-05, 2.195899999999848e-05, 2.218099999999959e-05, 2.1735999999997896e-05, 2.1236000000000865e-05, 2.1277999999999575e-05, 2.1207999999998256e-05, 2.208299999999913e-05, 2.136099999999752e-05, 2.14029999999997e-05, 2.158299999999863e-05, 2.1527999999999825e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.2084000000002074e-05, 2.215300000000045e-05, 2.14029999999997e-05, 2.184699999999845e-05, 2.1291999999999145e-05, 2.1541999999999395e-05, 2.1320000000001754e-05, 2.17090000000017e-05, 2.131900000000228e-05, 2.1848000000001394e-05, 2.1612000000000714e-05, 2.202700000000085e-05, 2.1819999999998785e-05, 2.1666000000000046e-05, 2.180499999999974e-05, 2.1443999999998936e-05, 2.1763999999997036e-05, 2.1457999999998506e-05, 2.208299999999913e-05, 2.1264000000000005e-05, 2.2166000000000546e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.234" endtime="20201115 23:00:58.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.229" endtime="20201115 23:00:58.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.238" endtime="20201115 23:00:58.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.241" endtime="20201115 23:00:58.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.240" endtime="20201115 23:00:58.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.236" endtime="20201115 23:00:58.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.872" endtime="20201115 23:00:58.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.870" endtime="20201115 23:00:58.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.869" endtime="20201115 23:00:58.263"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.273" endtime="20201115 23:00:58.288"></status>
</kw>
<msg timestamp="20201115 23:00:58.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.272" endtime="20201115 23:00:58.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.293" endtime="20201115 23:00:58.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.296" endtime="20201115 23:00:58.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.269" endtime="20201115 23:00:58.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.267" endtime="20201115 23:00:58.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.305" endtime="20201115 23:00:58.590"></status>
</kw>
<msg timestamp="20201115 23:00:58.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.303" endtime="20201115 23:00:58.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021798389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.594" endtime="20201115 23:00:58.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.603" endtime="20201115 23:00:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.301" endtime="20201115 23:00:58.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.299" endtime="20201115 23:00:58.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:58.610" level="INFO">${RESULT} = [{'time': 0.021820611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2221999999998826e-05, 'source_diff': 2.2221999999998826e-05}, {'time': 0.021845597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:58.607" endtime="20201115 23:00:58.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:58.624" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:58.611" endtime="20201115 23:00:58.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.628" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:00:58.627" endtime="20201115 23:00:58.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.631" level="INFO">VALUE: [2.2221999999998826e-05, 2.131900000000228e-05, 2.113899999999988e-05, 2.1249999999996966e-05, 2.1514000000000255e-05, 2.206899999999956e-05, 2.1778000000000075e-05, 2.14029999999997e-05, 2.1430000000002836e-05, 2.143100000000231e-05, 2.1764000000000505e-05, 2.1541999999999395e-05, 2.2236000000001865e-05, 2.1638000000000907e-05, 2.138900000000013e-05, 2.195900000000195e-05, 2.14029999999997e-05, 2.1235999999997396e-05, 2.188900000000063e-05, 2.163900000000038e-05, 2.191699999999977e-05, 2.143100000000231e-05, 2.2000000000001185e-05, 2.211099999999827e-05, 2.1556000000002434e-05, 2.2041999999999895e-05, 2.194499999999891e-05, 2.1541999999999395e-05, 2.1570000000002004e-05, 2.1833999999998355e-05, 2.183299999999888e-05, 2.1791999999999645e-05, 2.1444000000002406e-05, 2.152700000000035e-05, 2.1986000000001615e-05, 2.2221999999998826e-05, 2.206899999999956e-05, 2.20969999999987e-05, 2.180499999999974e-05, 2.15969999999982e-05, 2.180499999999974e-05, 2.131899999999881e-05, 2.1542000000002864e-05, 2.1791999999999645e-05, 2.2208000000002726e-05, 2.2042000000003364e-05, 2.1541999999999395e-05, 2.191699999999977e-05, 2.137500000000056e-05, 2.1527999999999825e-05]</msg>
<status status="PASS" starttime="20201115 23:00:58.630" endtime="20201115 23:00:58.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.625" endtime="20201115 23:00:58.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.634" endtime="20201115 23:00:58.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:58.637" endtime="20201115 23:00:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.636" endtime="20201115 23:00:58.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.632" endtime="20201115 23:00:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.266" endtime="20201115 23:00:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.264" endtime="20201115 23:00:58.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.263" endtime="20201115 23:00:58.659"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.670" endtime="20201115 23:00:58.684"></status>
</kw>
<msg timestamp="20201115 23:00:58.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.668" endtime="20201115 23:00:58.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:58.686" endtime="20201115 23:00:58.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.688" endtime="20201115 23:00:58.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.665" endtime="20201115 23:00:58.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.663" endtime="20201115 23:00:58.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.697" endtime="20201115 23:00:58.985"></status>
</kw>
<msg timestamp="20201115 23:00:58.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.696" endtime="20201115 23:00:58.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:58.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:58.989" endtime="20201115 23:00:58.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:58.997" endtime="20201115 23:00:58.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.693" endtime="20201115 23:00:58.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.691" endtime="20201115 23:00:59.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.004" level="INFO">${RESULT} = [{'time': 0.022308375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.213899999999741e-05, 'source_diff': 2.213899999999741e-05}, {'time': 0.022333375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:00:59.001" endtime="20201115 23:00:59.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.017" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:59.005" endtime="20201115 23:00:59.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.022" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.021" endtime="20201115 23:00:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.024" level="INFO">VALUE: [2.213899999999741e-05, 2.1235999999997396e-05, 2.1541999999999395e-05, 2.191700000000324e-05, 2.1235999999997396e-05, 2.168100000000256e-05, 2.2041999999999895e-05, 2.1514000000000255e-05, 2.188900000000063e-05, 2.1735999999997896e-05, 2.148700000000059e-05, 2.2069999999999035e-05, 2.2112000000001214e-05, 2.2069999999999035e-05, 2.1750000000000935e-05, 2.1500000000000685e-05, 2.1612000000000714e-05, 2.1500000000000685e-05, 2.1791999999999645e-05, 2.1264000000000005e-05, 2.173700000000084e-05, 2.1250000000000435e-05, 2.1402000000000226e-05, 2.129099999999967e-05, 2.131899999999881e-05, 2.1666000000000046e-05, 2.2014000000000755e-05, 2.1236000000000865e-05, 2.2180000000000116e-05, 2.1819999999998785e-05, 2.2165999999997077e-05, 2.1763999999997036e-05, 2.15969999999982e-05, 2.1221999999997826e-05, 2.1486000000001115e-05, 2.1721999999998326e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.216700000000002e-05, 2.187500000000106e-05, 2.183299999999888e-05, 2.1208000000001725e-05, 2.1985999999998146e-05, 2.184700000000192e-05, 2.187500000000106e-05, 2.1306000000002184e-05, 2.137500000000056e-05, 2.1833999999998355e-05, 2.14029999999997e-05, 2.1499999999997216e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.023" endtime="20201115 23:00:59.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.018" endtime="20201115 23:00:59.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.028" endtime="20201115 23:00:59.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.031" endtime="20201115 23:00:59.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.030" endtime="20201115 23:00:59.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.026" endtime="20201115 23:00:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.662" endtime="20201115 23:00:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.660" endtime="20201115 23:00:59.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:58.659" endtime="20201115 23:00:59.052"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.055" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.063" endtime="20201115 23:00:59.077"></status>
</kw>
<msg timestamp="20201115 23:00:59.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.061" endtime="20201115 23:00:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.079" endtime="20201115 23:00:59.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.081" endtime="20201115 23:00:59.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.059" endtime="20201115 23:00:59.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.057" endtime="20201115 23:00:59.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.090" endtime="20201115 23:00:59.376"></status>
</kw>
<msg timestamp="20201115 23:00:59.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.089" endtime="20201115 23:00:59.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.380" endtime="20201115 23:00:59.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.388" endtime="20201115 23:00:59.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.086" endtime="20201115 23:00:59.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.084" endtime="20201115 23:00:59.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.395" level="INFO">${RESULT} = [{'time': 0.021862986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1708000000002226e-05, 'source_diff': 2.1708000000002226e-05}, {'time': 0.021888986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:59.392" endtime="20201115 23:00:59.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.408" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:59.396" endtime="20201115 23:00:59.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.413" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.412" endtime="20201115 23:00:59.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.415" level="INFO">VALUE: [2.1708000000002226e-05, 2.1527999999999825e-05, 2.1236000000000865e-05, 2.186100000000149e-05, 2.1514000000000255e-05, 2.15969999999982e-05, 2.162500000000081e-05, 2.2056000000002934e-05, 2.191699999999977e-05, 2.2014000000000755e-05, 2.165299999999995e-05, 2.180499999999974e-05, 2.183299999999888e-05, 2.166699999999952e-05, 2.137500000000056e-05, 2.1569999999998535e-05, 2.2083999999998605e-05, 2.197300000000152e-05, 2.1986000000001615e-05, 2.1833999999998355e-05, 2.1679999999999616e-05, 2.1264000000000005e-05, 2.1319999999998285e-05, 2.1750000000000935e-05, 2.184699999999845e-05, 2.219499999999916e-05, 2.133300000000185e-05, 2.1986000000001615e-05, 2.1929999999999866e-05, 2.187500000000106e-05, 2.1985999999998146e-05, 2.188900000000063e-05, 2.1652000000000476e-05, 2.152700000000035e-05, 2.136100000000099e-05, 2.1236000000000865e-05, 2.1750000000000935e-05, 2.1430000000002836e-05, 2.162499999999734e-05, 2.1277999999999575e-05, 2.1236000000000865e-05, 2.1306000000002184e-05, 2.141699999999927e-05, 2.187500000000106e-05, 2.1985999999998146e-05, 2.1457999999998506e-05, 2.141699999999927e-05, 2.141700000000274e-05, 2.143099999999884e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.414" endtime="20201115 23:00:59.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.409" endtime="20201115 23:00:59.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.421" endtime="20201115 23:00:59.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.425" endtime="20201115 23:00:59.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.423" endtime="20201115 23:00:59.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.419" endtime="20201115 23:00:59.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.055" endtime="20201115 23:00:59.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.053" endtime="20201115 23:00:59.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.053" endtime="20201115 23:00:59.446"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.448" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.457" endtime="20201115 23:00:59.473"></status>
</kw>
<msg timestamp="20201115 23:00:59.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.455" endtime="20201115 23:00:59.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.475" endtime="20201115 23:00:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.478" endtime="20201115 23:00:59.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.452" endtime="20201115 23:00:59.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.450" endtime="20201115 23:00:59.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.487" endtime="20201115 23:00:59.774"></status>
</kw>
<msg timestamp="20201115 23:00:59.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.485" endtime="20201115 23:00:59.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.778" endtime="20201115 23:00:59.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.786" endtime="20201115 23:00:59.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.482" endtime="20201115 23:00:59.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.481" endtime="20201115 23:00:59.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:00:59.793" level="INFO">${RESULT} = [{'time': 0.023256806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1320000000001754e-05, 'source_diff': 2.1320000000001754e-05}, {'time': 0.023285847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:00:59.790" endtime="20201115 23:00:59.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:00:59.808" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:00:59.794" endtime="20201115 23:00:59.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.812" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:00:59.811" endtime="20201115 23:00:59.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.815" level="INFO">VALUE: [2.1320000000001754e-05, 2.1971999999998576e-05, 2.1957999999999006e-05, 2.12770000000001e-05, 2.1693999999999186e-05, 2.152700000000035e-05, 2.12770000000001e-05, 2.1666000000000046e-05, 2.158299999999863e-05, 2.1722000000001795e-05, 2.1693999999999186e-05, 2.137500000000056e-05, 2.1235999999997396e-05, 2.1514000000000255e-05, 2.1750000000000935e-05, 2.1236000000000865e-05, 2.2180000000000116e-05, 2.1778000000000075e-05, 2.2041999999999895e-05, 2.1707999999998756e-05, 2.2250000000001435e-05, 2.165299999999995e-05, 2.168099999999909e-05, 2.17770000000006e-05, 2.1569999999998535e-05, 2.218099999999959e-05, 2.1583999999998105e-05, 2.1584000000001574e-05, 2.1292000000002614e-05, 2.1541999999999395e-05, 2.180499999999974e-05, 2.2041999999999895e-05, 2.1264000000000005e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.219499999999916e-05, 2.1514000000000255e-05, 2.1320000000001754e-05, 2.1708000000002226e-05, 2.2014000000000755e-05, 2.152700000000035e-05, 2.1526999999996882e-05, 2.152700000000035e-05, 2.1499999999997216e-05, 2.2152000000000976e-05, 2.1736000000001365e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.212500000000131e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201115 23:00:59.813" endtime="20201115 23:00:59.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.808" endtime="20201115 23:00:59.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.818" endtime="20201115 23:00:59.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:00:59.821" endtime="20201115 23:00:59.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.820" endtime="20201115 23:00:59.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.816" endtime="20201115 23:00:59.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.449" endtime="20201115 23:00:59.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.447" endtime="20201115 23:00:59.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.446" endtime="20201115 23:00:59.843"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.853" endtime="20201115 23:00:59.868"></status>
</kw>
<msg timestamp="20201115 23:00:59.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.852" endtime="20201115 23:00:59.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:00:59.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:00:59.869" endtime="20201115 23:00:59.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.872" endtime="20201115 23:00:59.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.849" endtime="20201115 23:00:59.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.847" endtime="20201115 23:00:59.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:00:59.881" endtime="20201115 23:01:00.166"></status>
</kw>
<msg timestamp="20201115 23:01:00.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:00:59.879" endtime="20201115 23:01:00.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021888472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.170" endtime="20201115 23:01:00.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.178" endtime="20201115 23:01:00.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.877" endtime="20201115 23:01:00.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.875" endtime="20201115 23:01:00.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.185" level="INFO">${RESULT} = [{'time': 0.021888472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1999999999997716e-05, 'source_diff': 2.1999999999997716e-05}, {'time': 0.021917528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:00.182" endtime="20201115 23:01:00.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.198" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:00.186" endtime="20201115 23:01:00.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.203" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.202" endtime="20201115 23:01:00.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.205" level="INFO">VALUE: [2.1999999999997716e-05, 2.1291999999999145e-05, 2.1679999999999616e-05, 2.2180000000000116e-05, 2.1736000000001365e-05, 2.156899999999906e-05, 2.1985999999998146e-05, 2.20969999999987e-05, 2.133299999999838e-05, 2.2055999999999465e-05, 2.209700000000217e-05, 2.1805999999999215e-05, 2.1485999999997646e-05, 2.1763999999997036e-05, 2.138900000000013e-05, 2.1527999999999825e-05, 2.1235999999997396e-05, 2.1292000000002614e-05, 2.1333999999997855e-05, 2.220899999999873e-05, 2.2028000000000325e-05, 2.1819999999998785e-05, 2.186099999999802e-05, 2.169500000000213e-05, 2.194500000000238e-05, 2.1570000000002004e-05, 2.1319999999998285e-05, 2.1861999999997495e-05, 2.173699999999737e-05, 2.204100000000042e-05, 2.134699999999795e-05, 2.202700000000085e-05, 2.156900000000253e-05, 2.137499999999709e-05, 2.206899999999956e-05, 2.186100000000149e-05, 2.206899999999956e-05, 2.211100000000174e-05, 2.1986000000001615e-05, 2.212500000000131e-05, 2.1986000000001615e-05, 2.1458000000001975e-05, 2.183299999999888e-05, 2.143099999999884e-05, 2.1500000000000685e-05, 2.1291999999999145e-05, 2.134700000000142e-05, 2.161100000000124e-05, 2.1999999999997716e-05, 2.1986000000001615e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.204" endtime="20201115 23:01:00.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.199" endtime="20201115 23:01:00.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.209" endtime="20201115 23:01:00.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.212" endtime="20201115 23:01:00.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.210" endtime="20201115 23:01:00.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.207" endtime="20201115 23:01:00.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.846" endtime="20201115 23:01:00.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.844" endtime="20201115 23:01:00.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:59.843" endtime="20201115 23:01:00.233"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.236" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.244" endtime="20201115 23:01:00.260"></status>
</kw>
<msg timestamp="20201115 23:01:00.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.243" endtime="20201115 23:01:00.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.262" endtime="20201115 23:01:00.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.264" endtime="20201115 23:01:00.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.240" endtime="20201115 23:01:00.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.238" endtime="20201115 23:01:00.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.273" endtime="20201115 23:01:00.559"></status>
</kw>
<msg timestamp="20201115 23:01:00.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.271" endtime="20201115 23:01:00.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.563" endtime="20201115 23:01:00.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.571" endtime="20201115 23:01:00.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.269" endtime="20201115 23:01:00.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.267" endtime="20201115 23:01:00.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.578" level="INFO">${RESULT} = [{'time': 0.022775556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.165299999999995e-05, 'source_diff': 2.165299999999995e-05}, {'time': 0.022800569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.575" endtime="20201115 23:01:00.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.591" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:00.579" endtime="20201115 23:01:00.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.596" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.595" endtime="20201115 23:01:00.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.598" level="INFO">VALUE: [2.165299999999995e-05, 2.204100000000042e-05, 2.113899999999988e-05, 2.1805999999999215e-05, 2.1527999999999825e-05, 2.204100000000042e-05, 2.1957999999999006e-05, 2.1916000000000296e-05, 2.1901999999997257e-05, 2.2014000000000755e-05, 2.2193999999999686e-05, 2.2151999999997507e-05, 2.1986000000001615e-05, 2.205499999999999e-05, 2.1764000000000505e-05, 2.1679999999999616e-05, 2.1957999999999006e-05, 2.129099999999967e-05, 2.188900000000063e-05, 2.184700000000192e-05, 2.131900000000228e-05, 2.1985999999998146e-05, 2.1764000000000505e-05, 2.1443999999998936e-05, 2.159700000000167e-05, 2.1791999999999645e-05, 2.143100000000231e-05, 2.1750000000000935e-05, 2.184700000000192e-05, 2.165299999999995e-05, 2.1569999999998535e-05, 2.1972000000002045e-05, 2.2069999999999035e-05, 2.1320000000001754e-05, 2.195899999999848e-05, 2.1221999999997826e-05, 2.1527999999999825e-05, 2.1778000000000075e-05, 2.1527999999999825e-05, 2.138900000000013e-05, 2.1305999999998715e-05, 2.1541999999999395e-05, 2.1679999999999616e-05, 2.176300000000103e-05, 2.126300000000053e-05, 2.1429999999999366e-05, 2.205499999999999e-05, 2.1666000000000046e-05, 2.186099999999802e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.597" endtime="20201115 23:01:00.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.592" endtime="20201115 23:01:00.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.601" endtime="20201115 23:01:00.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.605" endtime="20201115 23:01:00.624"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.603" endtime="20201115 23:01:00.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.600" endtime="20201115 23:01:00.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.236" endtime="20201115 23:01:00.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.234" endtime="20201115 23:01:00.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.233" endtime="20201115 23:01:00.626"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.628" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.637" endtime="20201115 23:01:00.651"></status>
</kw>
<msg timestamp="20201115 23:01:00.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.635" endtime="20201115 23:01:00.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:00.653" endtime="20201115 23:01:00.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.655" endtime="20201115 23:01:00.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.632" endtime="20201115 23:01:00.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.630" endtime="20201115 23:01:00.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.665" endtime="20201115 23:01:00.950"></status>
</kw>
<msg timestamp="20201115 23:01:00.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.663" endtime="20201115 23:01:00.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:00.954" endtime="20201115 23:01:00.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.963" endtime="20201115 23:01:00.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.660" endtime="20201115 23:01:00.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.658" endtime="20201115 23:01:00.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:00.969" level="INFO">${RESULT} = [{'time': 0.021875861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.181899999999931e-05, 'source_diff': 2.181899999999931e-05}, {'time': 0.021903861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:00.966" endtime="20201115 23:01:00.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:00.983" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:00.970" endtime="20201115 23:01:00.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.987" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:00.986" endtime="20201115 23:01:00.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:00.990" level="INFO">VALUE: [2.181899999999931e-05, 2.162500000000081e-05, 2.1514000000000255e-05, 2.2000000000001185e-05, 2.216700000000002e-05, 2.193099999999934e-05, 2.20969999999987e-05, 2.2193999999999686e-05, 2.2055999999999465e-05, 2.1805999999999215e-05, 2.2014000000000755e-05, 2.1485999999997646e-05, 2.161100000000124e-05, 2.1291999999999145e-05, 2.2000000000001185e-05, 2.1764000000000505e-05, 2.2014000000000755e-05, 2.144500000000188e-05, 2.1250000000000435e-05, 2.1555999999998965e-05, 2.1264000000000005e-05, 2.2028000000000325e-05, 2.1555999999998965e-05, 2.148700000000059e-05, 2.163900000000038e-05, 2.162499999999734e-05, 2.130500000000271e-05, 2.1514000000000255e-05, 2.152700000000035e-05, 2.15969999999982e-05, 2.1749999999997466e-05, 2.161099999999777e-05, 2.2236000000001865e-05, 2.1985999999998146e-05, 2.129099999999967e-05, 2.1694000000002656e-05, 2.1429999999999366e-05, 2.2000000000001185e-05, 2.1249999999996966e-05, 2.2180000000000116e-05, 2.1221999999997826e-05, 2.1764000000000505e-05, 2.1722000000001795e-05, 2.187500000000106e-05, 2.19030000000002e-05, 2.209700000000217e-05, 2.1541999999999395e-05, 2.166699999999952e-05, 2.2137999999997937e-05, 2.2070000000002504e-05]</msg>
<status status="PASS" starttime="20201115 23:01:00.988" endtime="20201115 23:01:00.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.983" endtime="20201115 23:01:00.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:00.993" endtime="20201115 23:01:00.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:00.996" endtime="20201115 23:01:01.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.994" endtime="20201115 23:01:01.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.991" endtime="20201115 23:01:01.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.629" endtime="20201115 23:01:01.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.627" endtime="20201115 23:01:01.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:00.626" endtime="20201115 23:01:01.017"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.020" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.028" endtime="20201115 23:01:01.043"></status>
</kw>
<msg timestamp="20201115 23:01:01.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.026" endtime="20201115 23:01:01.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.045" endtime="20201115 23:01:01.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.048" endtime="20201115 23:01:01.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.024" endtime="20201115 23:01:01.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.022" endtime="20201115 23:01:01.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.057" endtime="20201115 23:01:01.345"></status>
</kw>
<msg timestamp="20201115 23:01:01.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.055" endtime="20201115 23:01:01.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.349" endtime="20201115 23:01:01.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.357" endtime="20201115 23:01:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.053" endtime="20201115 23:01:01.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.051" endtime="20201115 23:01:01.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.364" level="INFO">${RESULT} = [{'time': 0.022023403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.261099999999877e-05, 'source_diff': 2.261099999999877e-05}, {'time': 0.022049389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:01.360" endtime="20201115 23:01:01.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.378" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:01.365" endtime="20201115 23:01:01.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.383" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.382" endtime="20201115 23:01:01.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.385" level="INFO">VALUE: [2.261099999999877e-05, 2.2792000000000645e-05, 2.315300000000145e-05, 2.2333999999998855e-05, 2.297300000000252e-05, 2.29030000000012e-05, 2.220899999999873e-05, 2.2235999999998396e-05, 2.2250000000001435e-05, 2.266699999999705e-05, 2.287499999999859e-05, 2.2763999999998036e-05, 2.2348000000001894e-05, 2.2333999999998855e-05, 2.237500000000156e-05, 2.2235999999998396e-05, 2.266700000000052e-05, 2.2264000000001005e-05, 2.252700000000135e-05, 2.3263999999998536e-05, 2.2930000000000866e-05, 2.313899999999841e-05, 2.2236000000001865e-05, 2.2514000000001255e-05, 2.287499999999859e-05, 2.311099999999927e-05, 2.2542000000000395e-05, 2.312499999999884e-05, 2.237500000000156e-05, 2.2930000000000866e-05, 2.237500000000156e-05, 2.315299999999798e-05, 2.2555999999999965e-05, 2.2555999999999965e-05, 2.2958000000000006e-05, 2.244499999999941e-05, 2.3028000000001325e-05, 2.3070000000000035e-05, 2.320899999999973e-05, 2.2319999999999285e-05, 2.2250000000001435e-05, 2.2764000000001505e-05, 2.2971999999999576e-05, 2.269499999999966e-05, 2.261099999999877e-05, 2.244499999999941e-05, 2.243099999999984e-05, 2.286100000000249e-05, 2.2485999999998646e-05, 2.2750000000001935e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.384" endtime="20201115 23:01:01.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.379" endtime="20201115 23:01:01.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.388" endtime="20201115 23:01:01.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.392" endtime="20201115 23:01:01.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.390" endtime="20201115 23:01:01.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.387" endtime="20201115 23:01:01.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.020" endtime="20201115 23:01:01.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.019" endtime="20201115 23:01:01.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.018" endtime="20201115 23:01:01.413"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.415" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.424" endtime="20201115 23:01:01.440"></status>
</kw>
<msg timestamp="20201115 23:01:01.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.422" endtime="20201115 23:01:01.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.442" endtime="20201115 23:01:01.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.444" endtime="20201115 23:01:01.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.420" endtime="20201115 23:01:01.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.417" endtime="20201115 23:01:01.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.453" endtime="20201115 23:01:01.739"></status>
</kw>
<msg timestamp="20201115 23:01:01.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.451" endtime="20201115 23:01:01.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022390069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.743" endtime="20201115 23:01:01.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.752" endtime="20201115 23:01:01.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.449" endtime="20201115 23:01:01.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.447" endtime="20201115 23:01:01.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:01.758" level="INFO">${RESULT} = [{'time': 0.022413347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3278000000001575e-05, 'source_diff': 2.3278000000001575e-05}, {'time': 0.022443347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:01.755" endtime="20201115 23:01:01.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:01.771" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:01.759" endtime="20201115 23:01:01.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.776" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:01.775" endtime="20201115 23:01:01.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.778" level="INFO">VALUE: [2.3278000000001575e-05, 2.3458000000000506e-05, 2.3499999999999216e-05, 2.3806000000001215e-05, 2.408300000000113e-05, 2.3458000000000506e-05, 2.3834000000000355e-05, 2.412499999999984e-05, 2.3528000000001825e-05, 2.3570000000000535e-05, 2.3458000000000506e-05, 2.4027999999998856e-05, 2.3972000000000576e-05, 2.340299999999823e-05, 2.393099999999787e-05, 2.363899999999891e-05, 2.32090000000032e-05, 2.3791999999998176e-05, 2.358300000000063e-05, 2.4027999999998856e-05, 2.3347999999999425e-05, 2.336099999999952e-05, 2.362499999999934e-05, 2.390299999999873e-05, 2.3278000000001575e-05, 2.368100000000109e-05, 2.41109999999968e-05, 2.363900000000238e-05, 2.3680000000001616e-05, 2.3986000000000146e-05, 2.3804999999998272e-05, 2.4068999999998092e-05, 2.4096999999997232e-05, 2.3679999999998147e-05, 2.393100000000134e-05, 2.4166000000002547e-05, 2.412500000000331e-05, 2.3805999999997746e-05, 2.3804999999998272e-05, 2.365299999999848e-05, 2.333300000000038e-05, 2.3500000000002685e-05, 2.3929999999998397e-05, 2.35970000000002e-05, 2.333300000000038e-05, 2.3235999999999396e-05, 2.3806000000001215e-05, 2.413900000000288e-05, 2.4069999999997566e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201115 23:01:01.777" endtime="20201115 23:01:01.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.772" endtime="20201115 23:01:01.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.782" endtime="20201115 23:01:01.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:01.785" endtime="20201115 23:01:01.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.783" endtime="20201115 23:01:01.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.780" endtime="20201115 23:01:01.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.416" endtime="20201115 23:01:01.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.414" endtime="20201115 23:01:01.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.413" endtime="20201115 23:01:01.807"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.809" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.817" endtime="20201115 23:01:01.833"></status>
</kw>
<msg timestamp="20201115 23:01:01.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.816" endtime="20201115 23:01:01.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:01.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:01.834" endtime="20201115 23:01:01.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.837" endtime="20201115 23:01:01.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.813" endtime="20201115 23:01:01.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.811" endtime="20201115 23:01:01.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:01.845" endtime="20201115 23:01:02.132"></status>
</kw>
<msg timestamp="20201115 23:01:02.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:01.844" endtime="20201115 23:01:02.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.137" endtime="20201115 23:01:02.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.145" endtime="20201115 23:01:02.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.841" endtime="20201115 23:01:02.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.840" endtime="20201115 23:01:02.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.152" level="INFO">${RESULT} = [{'time': 0.022169472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4582999999998162e-05, 'source_diff': 2.4582999999998162e-05}, {'time': 0.022203458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.148" endtime="20201115 23:01:02.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.165" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:02.153" endtime="20201115 23:01:02.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.169" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.168" endtime="20201115 23:01:02.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.172" level="INFO">VALUE: [2.4582999999998162e-05, 2.4290999999999202e-05, 2.429100000000267e-05, 2.430500000000224e-05, 2.431900000000181e-05, 2.4778000000003075e-05, 2.4693999999998717e-05, 2.508300000000213e-05, 2.4957999999998537e-05, 2.4486000000000646e-05, 2.508300000000213e-05, 2.4485999999997177e-05, 2.4986000000001146e-05, 2.5041999999999426e-05, 2.4249999999999966e-05, 2.4735999999997427e-05, 2.4527999999999356e-05, 2.4277999999999106e-05, 2.5056000000002465e-05, 2.4249999999999966e-05, 2.4556000000001965e-05, 2.5069999999998566e-05, 2.520899999999826e-05, 2.512499999999737e-05, 2.4541999999998926e-05, 2.5070000000002035e-05, 2.512500000000084e-05, 2.486100000000102e-05, 2.444499999999794e-05, 2.5070000000002035e-05, 2.4846999999997982e-05, 2.4806000000002215e-05, 2.4526999999999882e-05, 2.5000000000000716e-05, 2.4500000000000216e-05, 2.4290999999999202e-05, 2.5027999999999856e-05, 2.4320000000001285e-05, 2.5110999999997802e-05, 2.5000000000000716e-05, 2.463899999999991e-05, 2.437500000000009e-05, 2.4986000000001146e-05, 2.4513999999999786e-05, 2.434700000000095e-05, 2.4596999999997732e-05, 2.5000000000000716e-05, 2.5041999999999426e-05, 2.4777999999999606e-05, 2.4791999999999176e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.170" endtime="20201115 23:01:02.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.166" endtime="20201115 23:01:02.173"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.176" endtime="20201115 23:01:02.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.179" endtime="20201115 23:01:02.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.177" endtime="20201115 23:01:02.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.174" endtime="20201115 23:01:02.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.810" endtime="20201115 23:01:02.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.808" endtime="20201115 23:01:02.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:01.807" endtime="20201115 23:01:02.200"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.202" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.211" endtime="20201115 23:01:02.226"></status>
</kw>
<msg timestamp="20201115 23:01:02.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.209" endtime="20201115 23:01:02.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.228" endtime="20201115 23:01:02.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.230" endtime="20201115 23:01:02.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.207" endtime="20201115 23:01:02.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.204" endtime="20201115 23:01:02.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.239" endtime="20201115 23:01:02.526"></status>
</kw>
<msg timestamp="20201115 23:01:02.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.238" endtime="20201115 23:01:02.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.530" endtime="20201115 23:01:02.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.538" endtime="20201115 23:01:02.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.235" endtime="20201115 23:01:02.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.233" endtime="20201115 23:01:02.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.545" level="INFO">${RESULT} = [{'time': 0.022349681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.595899999999901e-05, 'source_diff': 2.595899999999901e-05}, {'time': 0.022381639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:02.541" endtime="20201115 23:01:02.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.558" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:02.546" endtime="20201115 23:01:02.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.562" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.561" endtime="20201115 23:01:02.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.565" level="INFO">VALUE: [2.595899999999901e-05, 2.565299999999701e-05, 2.5834000000002355e-05, 2.594499999999944e-05, 2.5736000000001896e-05, 2.570899999999876e-05, 2.5778000000000606e-05, 2.566700000000005e-05, 2.5514000000000786e-05, 2.593099999999987e-05, 2.5250000000000966e-05, 2.613900000000141e-05, 2.57230000000018e-05, 2.5264000000000536e-05, 2.6151999999998038e-05, 2.5208000000002256e-05, 2.6012999999998343e-05, 2.5457999999999037e-05, 2.5540999999996983e-05, 2.5707999999999287e-05, 2.6110999999998802e-05, 2.6055999999999996e-05, 2.583300000000288e-05, 2.5805000000000272e-05, 2.5764000000001036e-05, 2.590299999999726e-05, 2.5249999999997497e-05, 2.5943999999999967e-05, 2.5943999999999967e-05, 2.5846999999998982e-05, 2.6042000000000426e-05, 2.613899999999794e-05, 2.547299999999808e-05, 2.5249999999997497e-05, 2.619499999999969e-05, 2.5820000000002785e-05, 2.5541999999999926e-05, 2.619499999999969e-05, 2.6110999999998802e-05, 2.594499999999944e-05, 2.568099999999962e-05, 2.5528000000000356e-05, 2.6069999999999566e-05, 2.5500000000001216e-05, 2.5848000000001925e-05, 2.6027999999997387e-05, 2.523700000000087e-05, 2.5888000000001687e-05, 2.5457999999999037e-05, 2.5999999999998247e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.563" endtime="20201115 23:01:02.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.559" endtime="20201115 23:01:02.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.568" endtime="20201115 23:01:02.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.572" endtime="20201115 23:01:02.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.570" endtime="20201115 23:01:02.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.567" endtime="20201115 23:01:02.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.203" endtime="20201115 23:01:02.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.201" endtime="20201115 23:01:02.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.200" endtime="20201115 23:01:02.593"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.595" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.604" endtime="20201115 23:01:02.620"></status>
</kw>
<msg timestamp="20201115 23:01:02.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.602" endtime="20201115 23:01:02.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.621" endtime="20201115 23:01:02.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.624" endtime="20201115 23:01:02.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.599" endtime="20201115 23:01:02.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.597" endtime="20201115 23:01:02.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.633" endtime="20201115 23:01:02.919"></status>
</kw>
<msg timestamp="20201115 23:01:02.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.631" endtime="20201115 23:01:02.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022777208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:02.923" endtime="20201115 23:01:02.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.931" endtime="20201115 23:01:02.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.629" endtime="20201115 23:01:02.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.627" endtime="20201115 23:01:02.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:02.938" level="INFO">${RESULT} = [{'time': 0.022804319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7110999999999802e-05, 'source_diff': 2.7110999999999802e-05}, {'time': 0.022834319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:02.935" endtime="20201115 23:01:02.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:02.953" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:02.939" endtime="20201115 23:01:02.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.958" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:02.957" endtime="20201115 23:01:02.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.960" level="INFO">VALUE: [2.7110999999999802e-05, 2.6972000000000107e-05, 2.645899999999951e-05, 2.6735999999999427e-05, 2.6679999999997678e-05, 2.6762999999999093e-05, 2.636100000000252e-05, 2.6735999999999427e-05, 2.6679999999997678e-05, 2.6596999999999732e-05, 2.6901999999998788e-05, 2.6680000000001147e-05, 2.6583000000000162e-05, 2.6528000000001356e-05, 2.7110999999999802e-05, 2.64170000000008e-05, 2.6833000000000412e-05, 2.6360999999999052e-05, 2.7193999999997748e-05, 2.6332999999999912e-05, 2.7207999999997318e-05, 2.638899999999819e-05, 2.6985999999999677e-05, 2.670899999999976e-05, 2.718100000000112e-05, 2.690299999999826e-05, 2.6778000000001606e-05, 2.6306000000000246e-05, 2.6291999999997206e-05, 2.715300000000198e-05, 2.69170000000013e-05, 2.7097999999999706e-05, 2.6570000000000066e-05, 2.7084000000000136e-05, 2.6611999999998776e-05, 2.6485999999999177e-05, 2.697299999999958e-05, 2.6929999999997928e-05, 2.6416000000001327e-05, 2.6680000000001147e-05, 2.6624999999998872e-05, 2.6528000000001356e-05, 2.7194000000001217e-05, 2.6360999999999052e-05, 2.6513999999998317e-05, 2.6318999999996873e-05, 2.666700000000105e-05, 2.6638999999998442e-05, 2.7097000000000232e-05, 2.6555000000001022e-05]</msg>
<status status="PASS" starttime="20201115 23:01:02.959" endtime="20201115 23:01:02.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.954" endtime="20201115 23:01:02.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:02.963" endtime="20201115 23:01:02.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:02.967" endtime="20201115 23:01:02.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.965" endtime="20201115 23:01:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.962" endtime="20201115 23:01:02.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.596" endtime="20201115 23:01:02.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.594" endtime="20201115 23:01:02.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.593" endtime="20201115 23:01:02.988"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:02.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.000" endtime="20201115 23:01:03.016"></status>
</kw>
<msg timestamp="20201115 23:01:03.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:02.998" endtime="20201115 23:01:03.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.018" endtime="20201115 23:01:03.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.020" endtime="20201115 23:01:03.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.995" endtime="20201115 23:01:03.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.993" endtime="20201115 23:01:03.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.029" endtime="20201115 23:01:03.315"></status>
</kw>
<msg timestamp="20201115 23:01:03.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023770333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.028" endtime="20201115 23:01:03.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023742569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023770333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.320" endtime="20201115 23:01:03.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.332" endtime="20201115 23:01:03.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.025" endtime="20201115 23:01:03.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.023" endtime="20201115 23:01:03.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.339" level="INFO">${RESULT} = [{'time': 0.023770333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7763999999999567e-05, 'source_diff': 2.7763999999999567e-05}, {'time': 0.023806264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:03.335" endtime="20201115 23:01:03.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.352" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:03.340" endtime="20201115 23:01:03.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.357" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.356" endtime="20201115 23:01:03.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.359" level="INFO">VALUE: [2.7763999999999567e-05, 2.7652999999999012e-05, 2.7832999999997943e-05, 2.8068999999998623e-05, 2.7777999999999137e-05, 2.7499999999999747e-05, 2.7319000000001342e-05, 2.7791999999998707e-05, 2.8014000000003286e-05, 2.8111000000000802e-05, 2.7388999999999192e-05, 2.8027999999999387e-05, 2.7292000000001676e-05, 2.7805999999998277e-05, 2.7833000000001412e-05, 2.722299999999983e-05, 2.798700000000015e-05, 2.8152999999999512e-05, 2.7430000000001897e-05, 2.7361000000000052e-05, 2.7235999999999927e-05, 2.8026999999999913e-05, 2.8179999999999178e-05, 2.7763999999999567e-05, 2.7832999999997943e-05, 2.7540999999998983e-05, 2.7971999999997638e-05, 2.7486000000000177e-05, 2.8082999999998193e-05, 2.7222000000000357e-05, 2.7972000000001107e-05, 2.7722000000000857e-05, 2.8027999999999387e-05, 2.816699999999908e-05, 2.7624999999999872e-05, 2.7583000000001162e-05, 2.7472000000000607e-05, 2.741699999999833e-05, 2.7306000000001246e-05, 2.766700000000205e-05, 2.795900000000101e-05, 2.7958000000001537e-05, 2.7526999999999413e-05, 2.7832999999997943e-05, 2.743100000000137e-05, 2.820899999999779e-05, 2.722299999999983e-05, 2.744500000000094e-05, 2.7958000000001537e-05, 2.7374999999999622e-05]</msg>
<status status="PASS" starttime="20201115 23:01:03.358" endtime="20201115 23:01:03.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.353" endtime="20201115 23:01:03.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.362" endtime="20201115 23:01:03.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.366" endtime="20201115 23:01:03.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.364" endtime="20201115 23:01:03.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.360" endtime="20201115 23:01:03.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.992" endtime="20201115 23:01:03.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.990" endtime="20201115 23:01:03.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:02.989" endtime="20201115 23:01:03.387"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.389" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.397" endtime="20201115 23:01:03.414"></status>
</kw>
<msg timestamp="20201115 23:01:03.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.396" endtime="20201115 23:01:03.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.415" endtime="20201115 23:01:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.418" endtime="20201115 23:01:03.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.393" endtime="20201115 23:01:03.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.391" endtime="20201115 23:01:03.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.427" endtime="20201115 23:01:03.713"></status>
</kw>
<msg timestamp="20201115 23:01:03.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.425" endtime="20201115 23:01:03.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022536347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.718" endtime="20201115 23:01:03.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.726" endtime="20201115 23:01:03.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.423" endtime="20201115 23:01:03.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.421" endtime="20201115 23:01:03.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:03.733" level="INFO">${RESULT} = [{'time': 0.022565542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.919499999999922e-05, 'source_diff': 2.919499999999922e-05}, {'time': 0.022599528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:03.729" endtime="20201115 23:01:03.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:03.746" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:03.734" endtime="20201115 23:01:03.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.750" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:03.749" endtime="20201115 23:01:03.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.753" level="INFO">VALUE: [2.919499999999922e-05, 2.8347000000001482e-05, 2.841699999999933e-05, 2.8264000000000067e-05, 2.8486000000001177e-05, 2.8554999999999553e-05, 2.8903000000000262e-05, 2.8389000000000192e-05, 2.8763999999997097e-05, 2.89309999999994e-05, 2.8333000000001912e-05, 2.843100000000237e-05, 2.8304999999999303e-05, 2.9041000000000483e-05, 2.8611000000001302e-05, 2.9000000000001247e-05, 2.8818999999999373e-05, 2.8971999999998638e-05, 2.8846999999998513e-05, 2.8611000000001302e-05, 2.8250000000000497e-05, 2.8639000000000442e-05, 2.8304999999999303e-05, 2.8389000000000192e-05, 2.9180000000000178e-05, 2.841699999999933e-05, 2.8874999999997653e-05, 2.8943999999999498e-05, 2.8235999999997458e-05, 2.8541999999999457e-05, 2.8832999999998943e-05, 2.8292000000002676e-05, 2.8875000000001122e-05, 2.8291999999999207e-05, 2.843100000000237e-05, 2.8264000000000067e-05, 2.8791999999999707e-05, 2.9167000000000082e-05, 2.8333999999997916e-05, 2.8347999999997486e-05, 2.8721999999998388e-05, 2.8805000000003272e-05, 2.9083000000002662e-05, 2.822300000000083e-05, 2.8222000000001357e-05, 2.8429999999999428e-05, 2.8902000000000788e-05, 2.8679999999999678e-05, 2.9167000000000082e-05, 2.8318999999998873e-05]</msg>
<status status="PASS" starttime="20201115 23:01:03.751" endtime="20201115 23:01:03.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.747" endtime="20201115 23:01:03.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.756" endtime="20201115 23:01:03.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:03.759" endtime="20201115 23:01:03.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.758" endtime="20201115 23:01:03.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.754" endtime="20201115 23:01:03.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.390" endtime="20201115 23:01:03.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.388" endtime="20201115 23:01:03.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.387" endtime="20201115 23:01:03.780"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.791" endtime="20201115 23:01:03.808"></status>
</kw>
<msg timestamp="20201115 23:01:03.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.789" endtime="20201115 23:01:03.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:03.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:03.809" endtime="20201115 23:01:03.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.812" endtime="20201115 23:01:03.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.787" endtime="20201115 23:01:03.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.785" endtime="20201115 23:01:03.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:03.821" endtime="20201115 23:01:04.108"></status>
</kw>
<msg timestamp="20201115 23:01:04.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:03.819" endtime="20201115 23:01:04.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.112" endtime="20201115 23:01:04.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.120" endtime="20201115 23:01:04.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.817" endtime="20201115 23:01:04.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.815" endtime="20201115 23:01:04.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.127" level="INFO">${RESULT} = [{'time': 0.022732556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9612000000001776e-05, 'source_diff': 2.9612000000001776e-05}, {'time': 0.022767569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.124" endtime="20201115 23:01:04.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.140" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:04.128" endtime="20201115 23:01:04.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.145" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.144" endtime="20201115 23:01:04.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.147" level="INFO">VALUE: [2.9612000000001776e-05, 2.9402000000001288e-05, 2.9374999999998153e-05, 2.9958000000000068e-05, 2.9555000000000553e-05, 2.9875000000002122e-05, 2.9249999999998028e-05, 3.0180000000001178e-05, 2.9361000000002052e-05, 3.0083000000000193e-05, 2.9764000000001567e-05, 2.9778000000001137e-05, 2.9736000000002427e-05, 2.9958000000000068e-05, 2.9569000000000123e-05, 3.0194000000000748e-05, 2.9263999999997597e-05, 2.9292000000000207e-05, 3.0166999999997612e-05, 2.9513999999997848e-05, 2.9653000000001012e-05, 3.0027999999997917e-05, 2.9346999999999013e-05, 2.9556000000000027e-05, 2.9361000000002052e-05, 2.9888999999998223e-05, 2.9667000000000582e-05, 2.9999999999998778e-05, 3.0056000000000527e-05, 2.9847999999998986e-05, 3.0056000000000527e-05, 2.9347000000002482e-05, 2.940199999999782e-05, 2.9347000000002482e-05, 2.9790999999997764e-05, 2.9860999999999083e-05, 2.9346999999999013e-05, 2.9777000000001663e-05, 2.9222000000002357e-05, 2.9249999999998028e-05, 2.9680000000000678e-05, 2.9541000000000983e-05, 2.9292000000000207e-05, 2.9569000000000123e-05, 2.9527999999997417e-05, 2.9652999999997542e-05, 2.9499999999998278e-05, 2.9499999999998278e-05, 3.0208000000000318e-05, 2.9471999999999138e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.146" endtime="20201115 23:01:04.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.141" endtime="20201115 23:01:04.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.150" endtime="20201115 23:01:04.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.154" endtime="20201115 23:01:04.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.152" endtime="20201115 23:01:04.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.149" endtime="20201115 23:01:04.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.783" endtime="20201115 23:01:04.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.782" endtime="20201115 23:01:04.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:03.781" endtime="20201115 23:01:04.175"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.186" endtime="20201115 23:01:04.201"></status>
</kw>
<msg timestamp="20201115 23:01:04.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.184" endtime="20201115 23:01:04.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.203" endtime="20201115 23:01:04.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.205" endtime="20201115 23:01:04.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.182" endtime="20201115 23:01:04.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.179" endtime="20201115 23:01:04.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.214" endtime="20201115 23:01:04.501"></status>
</kw>
<msg timestamp="20201115 23:01:04.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.213" endtime="20201115 23:01:04.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.505" endtime="20201115 23:01:04.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.513" endtime="20201115 23:01:04.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.210" endtime="20201115 23:01:04.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.209" endtime="20201115 23:01:04.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.520" level="INFO">${RESULT} = [{'time': 0.022608319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0402000000002288e-05, 'source_diff': 3.0402000000002288e-05}, {'time': 0.022648319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:04.517" endtime="20201115 23:01:04.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.534" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:04.521" endtime="20201115 23:01:04.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.539" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.538" endtime="20201115 23:01:04.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.541" level="INFO">VALUE: [3.0402000000002288e-05, 3.084700000000051e-05, 3.0262999999999124e-05, 3.0790999999998764e-05, 3.1082999999997724e-05, 3.119400000000175e-05, 3.076400000000257e-05, 3.0554999999998084e-05, 3.070800000000082e-05, 3.0221999999999888e-05, 3.042999999999796e-05, 3.115299999999904e-05, 3.042999999999796e-05, 3.084700000000051e-05, 3.104200000000196e-05, 3.099999999999978e-05, 3.0417000000001332e-05, 3.108400000000067e-05, 3.079199999999824e-05, 3.073599999999996e-05, 3.072299999999986e-05, 3.1098000000000237e-05, 3.102800000000239e-05, 3.087500000000312e-05, 3.0235999999999458e-05, 3.098699999999968e-05, 3.052799999999842e-05, 3.0416000000001858e-05, 3.087499999999965e-05, 3.0305999999997307e-05, 3.072200000000039e-05, 3.0264000000002067e-05, 3.109700000000076e-05, 3.086100000000008e-05, 3.0485999999999708e-05, 3.081900000000137e-05, 3.0305000000001303e-05, 3.10700000000011e-05, 3.115300000000251e-05, 3.084700000000051e-05, 3.0306000000000777e-05, 3.0332999999996973e-05, 3.0402999999998293e-05, 3.080600000000128e-05, 3.115299999999904e-05, 3.074999999999953e-05, 3.093099999999793e-05, 3.0360999999999583e-05, 3.0250000000002497e-05, 3.07639999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.540" endtime="20201115 23:01:04.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.535" endtime="20201115 23:01:04.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.545" endtime="20201115 23:01:04.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.548" endtime="20201115 23:01:04.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.546" endtime="20201115 23:01:04.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.543" endtime="20201115 23:01:04.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.178" endtime="20201115 23:01:04.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.176" endtime="20201115 23:01:04.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.175" endtime="20201115 23:01:04.570"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.572" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.580" endtime="20201115 23:01:04.595"></status>
</kw>
<msg timestamp="20201115 23:01:04.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.579" endtime="20201115 23:01:04.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.597" endtime="20201115 23:01:04.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.599" endtime="20201115 23:01:04.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.576" endtime="20201115 23:01:04.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.574" endtime="20201115 23:01:04.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.608" endtime="20201115 23:01:04.893"></status>
</kw>
<msg timestamp="20201115 23:01:04.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.607" endtime="20201115 23:01:04.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.897" endtime="20201115 23:01:04.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.906" endtime="20201115 23:01:04.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.604" endtime="20201115 23:01:04.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.602" endtime="20201115 23:01:04.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:04.912" level="INFO">${RESULT} = [{'time': 0.021924722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.123600000000046e-05, 'source_diff': 3.123600000000046e-05}, {'time': 0.021958722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:04.909" endtime="20201115 23:01:04.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:04.925" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:04.913" endtime="20201115 23:01:04.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.930" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:04.929" endtime="20201115 23:01:04.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.932" level="INFO">VALUE: [3.123600000000046e-05, 3.141599999999939e-05, 3.1554999999999084e-05, 3.126400000000307e-05, 3.137500000000015e-05, 3.169399999999878e-05, 3.1568999999998654e-05, 3.168099999999868e-05, 3.219499999999875e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.148600000000071e-05, 3.158400000000117e-05, 3.1598000000000737e-05, 3.150000000000028e-05, 3.154199999999899e-05, 3.163899999999997e-05, 3.190299999999979e-05, 3.155599999999856e-05, 3.168100000000215e-05, 3.177799999999967e-05, 3.1568999999998654e-05, 3.148599999999724e-05, 3.1582999999998224e-05, 3.123600000000046e-05, 3.151399999999985e-05, 3.129199999999874e-05, 3.188900000000022e-05, 3.217999999999971e-05, 3.1318999999998404e-05, 3.177799999999967e-05, 3.16250000000004e-05, 3.201400000000035e-05, 3.190299999999979e-05, 3.2082999999998724e-05, 3.152799999999942e-05, 3.219399999999928e-05, 3.176399999999663e-05, 3.138899999999972e-05, 3.19579999999986e-05, 3.163899999999997e-05, 3.145900000000104e-05, 3.151399999999985e-05, 3.138899999999972e-05, 3.173600000000096e-05, 3.19449999999985e-05, 3.216699999999961e-05, 3.2112000000000807e-05]</msg>
<status status="PASS" starttime="20201115 23:01:04.931" endtime="20201115 23:01:04.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.926" endtime="20201115 23:01:04.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.936" endtime="20201115 23:01:04.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:04.939" endtime="20201115 23:01:04.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.938" endtime="20201115 23:01:04.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.934" endtime="20201115 23:01:04.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.573" endtime="20201115 23:01:04.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.571" endtime="20201115 23:01:04.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.570" endtime="20201115 23:01:04.961"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.971" endtime="20201115 23:01:04.988"></status>
</kw>
<msg timestamp="20201115 23:01:04.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.970" endtime="20201115 23:01:04.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:04.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:04.989" endtime="20201115 23:01:04.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:04.992" endtime="20201115 23:01:04.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.967" endtime="20201115 23:01:04.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.965" endtime="20201115 23:01:04.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.001" endtime="20201115 23:01:05.286"></status>
</kw>
<msg timestamp="20201115 23:01:05.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:04.999" endtime="20201115 23:01:05.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.291" endtime="20201115 23:01:05.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.299" endtime="20201115 23:01:05.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.996" endtime="20201115 23:01:05.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.995" endtime="20201115 23:01:05.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.305" level="INFO">${RESULT} = [{'time': 0.021924208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2818999999999904e-05, 'source_diff': 3.2818999999999904e-05}, {'time': 0.021964236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:05.302" endtime="20201115 23:01:05.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.319" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:05.306" endtime="20201115 23:01:05.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.323" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.322" endtime="20201115 23:01:05.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.326" level="INFO">VALUE: [3.2818999999999904e-05, 3.227800000000017e-05, 3.2555000000000084e-05, 3.31250000000019e-05, 3.315299999999757e-05, 3.248600000000171e-05, 3.3054999999997114e-05, 3.244500000000247e-05, 3.309700000000276e-05, 3.261100000000183e-05, 3.225000000000103e-05, 3.268100000000315e-05, 3.230599999999931e-05, 3.297299999999864e-05, 3.241699999999986e-05, 3.295900000000254e-05, 3.231999999999888e-05, 3.283399999999895e-05, 3.223599999999799e-05, 3.251400000000085e-05, 3.319499999999975e-05, 3.3069000000000154e-05, 3.229199999999974e-05, 3.2860999999998614e-05, 3.272199999999892e-05, 3.2805000000000334e-05, 3.244399999999953e-05, 3.27640000000011e-05, 3.300000000000178e-05, 3.232000000000235e-05, 3.22640000000006e-05, 3.305600000000006e-05, 3.304200000000049e-05, 3.2360999999998113e-05, 3.2332999999998974e-05, 3.247199999999867e-05, 3.3110999999998864e-05, 3.298600000000221e-05, 3.2444999999999e-05, 3.29579999999996e-05, 3.277800000000067e-05, 3.280599999999981e-05, 3.2610999999998364e-05, 3.276399999999763e-05, 3.3138999999998e-05, 3.223600000000146e-05, 3.248599999999824e-05, 3.284800000000199e-05, 3.308300000000319e-05, 3.251400000000085e-05]</msg>
<status status="PASS" starttime="20201115 23:01:05.324" endtime="20201115 23:01:05.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.320" endtime="20201115 23:01:05.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.329" endtime="20201115 23:01:05.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.333" endtime="20201115 23:01:05.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.331" endtime="20201115 23:01:05.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.328" endtime="20201115 23:01:05.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.964" endtime="20201115 23:01:05.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.962" endtime="20201115 23:01:05.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:04.961" endtime="20201115 23:01:05.354"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.356" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.364" endtime="20201115 23:01:05.380"></status>
</kw>
<msg timestamp="20201115 23:01:05.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.363" endtime="20201115 23:01:05.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.381" endtime="20201115 23:01:05.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.384" endtime="20201115 23:01:05.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.360" endtime="20201115 23:01:05.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.358" endtime="20201115 23:01:05.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.393" endtime="20201115 23:01:05.679"></status>
</kw>
<msg timestamp="20201115 23:01:05.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.391" endtime="20201115 23:01:05.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022151111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.683" endtime="20201115 23:01:05.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.691" endtime="20201115 23:01:05.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.389" endtime="20201115 23:01:05.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.387" endtime="20201115 23:01:05.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:05.698" level="INFO">${RESULT} = [{'time': 0.022151111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.420800000000085e-05, 'source_diff': 3.420800000000085e-05}, {'time': 0.022189125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:05.695" endtime="20201115 23:01:05.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:05.712" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:05.699" endtime="20201115 23:01:05.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.716" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:05.715" endtime="20201115 23:01:05.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.719" level="INFO">VALUE: [3.420800000000085e-05, 3.354200000000099e-05, 3.334700000000301e-05, 3.366700000000111e-05, 3.390299999999832e-05, 3.347199999999967e-05, 3.3847000000000044e-05, 3.322199999999942e-05, 3.351399999999838e-05, 3.377800000000167e-05, 3.377800000000167e-05, 3.351400000000185e-05, 3.329200000000074e-05, 3.395900000000007e-05, 3.35839999999997e-05, 3.382000000000038e-05, 3.3568999999997184e-05, 3.3833000000000474e-05, 3.4152999999998573e-05, 3.36519999999986e-05, 3.3374999999998683e-05, 3.3305000000000834e-05, 3.3360999999999114e-05, 3.374999999999906e-05, 3.344400000000053e-05, 3.4124999999999434e-05, 3.4069000000001154e-05, 3.3624999999998934e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.3860999999999614e-05, 3.401399999999888e-05, 3.401399999999888e-05, 3.399999999999931e-05, 3.347199999999967e-05, 3.375000000000253e-05, 3.326399999999813e-05, 3.329200000000074e-05, 3.322199999999942e-05, 3.3374999999998683e-05, 3.393100000000093e-05, 3.325000000000203e-05, 3.340300000000129e-05, 3.3819000000000904e-05, 3.3332999999999974e-05, 3.376399999999863e-05, 3.348700000000218e-05, 3.322199999999942e-05, 3.365200000000207e-05, 3.363799999999903e-05]</msg>
<status status="PASS" starttime="20201115 23:01:05.717" endtime="20201115 23:01:05.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.713" endtime="20201115 23:01:05.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.722" endtime="20201115 23:01:05.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:05.725" endtime="20201115 23:01:05.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.724" endtime="20201115 23:01:05.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.720" endtime="20201115 23:01:05.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.357" endtime="20201115 23:01:05.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.355" endtime="20201115 23:01:05.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.354" endtime="20201115 23:01:05.747"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.749" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.757" endtime="20201115 23:01:05.773"></status>
</kw>
<msg timestamp="20201115 23:01:05.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.756" endtime="20201115 23:01:05.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:05.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:05.775" endtime="20201115 23:01:05.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.777" endtime="20201115 23:01:05.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.753" endtime="20201115 23:01:05.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.751" endtime="20201115 23:01:05.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:05.786" endtime="20201115 23:01:06.073"></status>
</kw>
<msg timestamp="20201115 23:01:06.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:05.785" endtime="20201115 23:01:06.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.077" endtime="20201115 23:01:06.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.086" endtime="20201115 23:01:06.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.782" endtime="20201115 23:01:06.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.781" endtime="20201115 23:01:06.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.092" level="INFO">${RESULT} = [{'time': 0.022441819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.519399999999881e-05, 'source_diff': 3.519399999999881e-05}, {'time': 0.022479889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.089" endtime="20201115 23:01:06.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.107" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:06.093" endtime="20201115 23:01:06.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.112" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.111" endtime="20201115 23:01:06.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.114" level="INFO">VALUE: [3.519399999999881e-05, 3.4832999999998004e-05, 3.47779999999992e-05, 3.4540999999999045e-05, 3.4790999999999295e-05, 3.451399999999938e-05, 3.4597000000000794e-05, 3.4902999999999323e-05, 3.448600000000024e-05, 3.424999999999956e-05, 3.429200000000174e-05, 3.519400000000228e-05, 3.47640000000031e-05, 3.457000000000113e-05, 3.434800000000002e-05, 3.455600000000156e-05, 3.4652999999999073e-05, 3.5111000000000864e-05, 3.490199999999985e-05, 3.472200000000092e-05, 3.442999999999849e-05, 3.483399999999748e-05, 3.454199999999852e-05, 3.429199999999827e-05, 3.436200000000306e-05, 3.466599999999917e-05, 3.444399999999806e-05, 3.469399999999831e-05, 3.469400000000178e-05, 3.4276999999999225e-05, 3.424999999999956e-05, 3.500000000000031e-05, 3.426399999999913e-05, 3.497200000000117e-05, 3.494400000000203e-05, 3.441699999999839e-05, 3.44580000000011e-05, 3.452799999999895e-05, 3.457000000000113e-05, 3.449999999999981e-05, 3.455599999999809e-05, 3.443100000000143e-05, 3.475000000000006e-05, 3.4847000000001044e-05, 3.473599999999702e-05, 3.4347000000000544e-05, 3.495900000000107e-05, 3.425000000000303e-05, 3.451399999999938e-05, 3.4374999999999684e-05]</msg>
<status status="PASS" starttime="20201115 23:01:06.113" endtime="20201115 23:01:06.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.108" endtime="20201115 23:01:06.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.117" endtime="20201115 23:01:06.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.121" endtime="20201115 23:01:06.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.119" endtime="20201115 23:01:06.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.116" endtime="20201115 23:01:06.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.750" endtime="20201115 23:01:06.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.748" endtime="20201115 23:01:06.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:05.747" endtime="20201115 23:01:06.142"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.152" endtime="20201115 23:01:06.167"></status>
</kw>
<msg timestamp="20201115 23:01:06.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.151" endtime="20201115 23:01:06.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.169" endtime="20201115 23:01:06.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.171" endtime="20201115 23:01:06.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.148" endtime="20201115 23:01:06.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.146" endtime="20201115 23:01:06.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.181" endtime="20201115 23:01:06.465"></status>
</kw>
<msg timestamp="20201115 23:01:06.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.179" endtime="20201115 23:01:06.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.469" endtime="20201115 23:01:06.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.478" endtime="20201115 23:01:06.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.176" endtime="20201115 23:01:06.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.174" endtime="20201115 23:01:06.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.484" level="INFO">${RESULT} = [{'time': 0.021988556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.573700000000096e-05, 'source_diff': 3.573700000000096e-05}, {'time': 0.022027542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.481" endtime="20201115 23:01:06.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.497" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:06.485" endtime="20201115 23:01:06.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.502" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.501" endtime="20201115 23:01:06.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.504" level="INFO">VALUE: [3.573700000000096e-05, 3.579199999999977e-05, 3.524999999999709e-05, 3.54589999999981e-05, 3.55840000000017e-05, 3.5804999999999865e-05, 3.5777000000000725e-05, 3.5903000000000324e-05, 3.5526999999997005e-05, 3.590200000000085e-05, 3.551400000000038e-05, 3.56520000000006e-05, 3.5375000000000684e-05, 3.544399999999906e-05, 3.5347000000001544e-05, 3.54580000000021e-05, 3.529199999999927e-05, 3.542999999999949e-05, 3.618000000000024e-05, 3.5416999999999393e-05, 3.601400000000088e-05, 3.554199999999952e-05, 3.5611000000001364e-05, 3.5402999999999823e-05, 3.573600000000149e-05, 3.570899999999835e-05, 3.556999999999866e-05, 3.6096999999998824e-05, 3.581999999999891e-05, 3.570900000000182e-05, 3.5861000000001614e-05, 3.592999999999999e-05, 3.5402999999999823e-05, 3.5596999999998324e-05, 3.566600000000017e-05, 3.54580000000021e-05, 3.5777000000000725e-05, 3.580599999999934e-05, 3.5290999999999795e-05, 3.5375000000000684e-05, 3.551400000000038e-05, 3.5554999999999615e-05, 3.6167000000000143e-05, 3.529199999999927e-05, 3.618000000000024e-05, 3.552799999999995e-05, 3.5582999999998755e-05, 3.5361000000001114e-05, 3.544499999999853e-05, 3.5916999999999893e-05]</msg>
<status status="PASS" starttime="20201115 23:01:06.503" endtime="20201115 23:01:06.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.498" endtime="20201115 23:01:06.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.508" endtime="20201115 23:01:06.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.511" endtime="20201115 23:01:06.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.509" endtime="20201115 23:01:06.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.506" endtime="20201115 23:01:06.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.145" endtime="20201115 23:01:06.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.143" endtime="20201115 23:01:06.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.142" endtime="20201115 23:01:06.532"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.543" endtime="20201115 23:01:06.560"></status>
</kw>
<msg timestamp="20201115 23:01:06.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.541" endtime="20201115 23:01:06.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.561" endtime="20201115 23:01:06.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.564" endtime="20201115 23:01:06.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.539" endtime="20201115 23:01:06.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.537" endtime="20201115 23:01:06.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.573" endtime="20201115 23:01:06.860"></status>
</kw>
<msg timestamp="20201115 23:01:06.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.572" endtime="20201115 23:01:06.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.864" endtime="20201115 23:01:06.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.872" endtime="20201115 23:01:06.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.569" endtime="20201115 23:01:06.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.568" endtime="20201115 23:01:06.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:06.879" level="INFO">${RESULT} = [{'time': 0.022747972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.673600000000249e-05, 'source_diff': 3.673600000000249e-05}, {'time': 0.022793972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:06.876" endtime="20201115 23:01:06.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:06.892" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:06.880" endtime="20201115 23:01:06.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.897" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:06.896" endtime="20201115 23:01:06.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.899" level="INFO">VALUE: [3.673600000000249e-05, 3.6305000000000365e-05, 3.627799999999723e-05, 3.623600000000199e-05, 3.7111000000002864e-05, 3.675000000000206e-05, 3.675000000000206e-05, 3.70979999999993e-05, 3.6597000000002794e-05, 3.6555000000000615e-05, 3.702799999999798e-05, 3.626400000000113e-05, 3.705600000000059e-05, 3.6846999999999575e-05, 3.625000000000156e-05, 3.620900000000232e-05, 3.6610999999998894e-05, 3.684799999999905e-05, 3.672199999999945e-05, 3.698599999999927e-05, 3.691599999999795e-05, 3.648699999999824e-05, 3.7041000000001545e-05, 3.7041000000001545e-05, 3.672199999999945e-05, 3.6375000000001684e-05, 3.672199999999945e-05, 3.6611000000002364e-05, 3.695800000000013e-05, 3.7138999999998534e-05, 3.694400000000056e-05, 3.622199999999895e-05, 3.720800000000038e-05, 3.625000000000156e-05, 3.720800000000038e-05, 3.6666999999997174e-05, 3.7195000000000283e-05, 3.697200000000317e-05, 3.62780000000007e-05, 3.702800000000145e-05, 3.631999999999941e-05, 3.6667000000000644e-05, 3.702800000000145e-05, 3.702799999999798e-05, 3.64589999999991e-05, 3.699999999999884e-05, 3.676399999999816e-05, 3.705600000000059e-05, 3.7138999999998534e-05, 3.651400000000138e-05]</msg>
<status status="PASS" starttime="20201115 23:01:06.898" endtime="20201115 23:01:06.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.893" endtime="20201115 23:01:06.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.902" endtime="20201115 23:01:06.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:06.906" endtime="20201115 23:01:06.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.904" endtime="20201115 23:01:06.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.901" endtime="20201115 23:01:06.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.535" endtime="20201115 23:01:06.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.533" endtime="20201115 23:01:06.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.532" endtime="20201115 23:01:06.927"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.929" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.938" endtime="20201115 23:01:06.954"></status>
</kw>
<msg timestamp="20201115 23:01:06.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.936" endtime="20201115 23:01:06.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:06.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:06.955" endtime="20201115 23:01:06.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.958" endtime="20201115 23:01:06.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.934" endtime="20201115 23:01:06.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.931" endtime="20201115 23:01:06.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:06.967" endtime="20201115 23:01:07.255"></status>
</kw>
<msg timestamp="20201115 23:01:07.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:06.965" endtime="20201115 23:01:07.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.259" endtime="20201115 23:01:07.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.267" endtime="20201115 23:01:07.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.963" endtime="20201115 23:01:07.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.961" endtime="20201115 23:01:07.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.274" level="INFO">${RESULT} = [{'time': 0.022433958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8097000000000825e-05, 'source_diff': 3.8097000000000825e-05}, {'time': 0.022480972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:07.270" endtime="20201115 23:01:07.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.287" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:07.275" endtime="20201115 23:01:07.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.291" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.290" endtime="20201115 23:01:07.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.294" level="INFO">VALUE: [3.8097000000000825e-05, 3.774999999999959e-05, 3.777799999999873e-05, 3.7860999999996675e-05, 3.8069000000001685e-05, 3.769400000000131e-05, 3.7360999999999644e-05, 3.7417000000001394e-05, 3.7444999999997064e-05, 3.774999999999959e-05, 3.744400000000106e-05, 3.7597000000000325e-05, 3.8138999999999534e-05, 3.79590000000006e-05, 3.773600000000002e-05, 3.748599999999977e-05, 3.801399999999941e-05, 3.802800000000245e-05, 3.730600000000084e-05, 3.7776999999999256e-05, 3.7624999999999464e-05, 3.7874999999999714e-05, 3.767999999999827e-05, 3.7540999999998576e-05, 3.742999999999802e-05, 3.792999999999852e-05, 3.723599999999952e-05, 3.795800000000113e-05, 3.724999999999909e-05, 3.792999999999852e-05, 3.774999999999959e-05, 3.724999999999909e-05, 3.74720000000002e-05, 3.8166999999998674e-05, 3.780599999999787e-05, 3.7652999999998604e-05, 3.730600000000084e-05, 3.799999999999984e-05, 3.7888999999999284e-05, 3.779200000000177e-05, 3.7597000000000325e-05, 3.7874999999999714e-05, 3.772299999999992e-05, 3.7417000000001394e-05, 3.755600000000109e-05, 3.777799999999873e-05, 3.77919999999983e-05, 3.7318999999997465e-05, 3.7360999999999644e-05, 3.79720000000007e-05]</msg>
<status status="PASS" starttime="20201115 23:01:07.292" endtime="20201115 23:01:07.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.288" endtime="20201115 23:01:07.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.297" endtime="20201115 23:01:07.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.300" endtime="20201115 23:01:07.320"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.299" endtime="20201115 23:01:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.295" endtime="20201115 23:01:07.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.930" endtime="20201115 23:01:07.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.928" endtime="20201115 23:01:07.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:06.927" endtime="20201115 23:01:07.322"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.324" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.332" endtime="20201115 23:01:07.348"></status>
</kw>
<msg timestamp="20201115 23:01:07.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.331" endtime="20201115 23:01:07.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.349" endtime="20201115 23:01:07.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.352" endtime="20201115 23:01:07.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.328" endtime="20201115 23:01:07.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.326" endtime="20201115 23:01:07.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.361" endtime="20201115 23:01:07.648"></status>
</kw>
<msg timestamp="20201115 23:01:07.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.359" endtime="20201115 23:01:07.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.652" endtime="20201115 23:01:07.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.660" endtime="20201115 23:01:07.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.357" endtime="20201115 23:01:07.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.355" endtime="20201115 23:01:07.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:07.667" level="INFO">${RESULT} = [{'time': 0.021951278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.826399999999966e-05, 'source_diff': 3.826399999999966e-05}, {'time': 0.021997264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:07.663" endtime="20201115 23:01:07.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:07.682" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:07.668" endtime="20201115 23:01:07.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.686" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:07.685" endtime="20201115 23:01:07.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.689" level="INFO">VALUE: [3.826399999999966e-05, 3.8625000000000465e-05, 3.8902999999999854e-05, 3.8639000000000034e-05, 3.884800000000105e-05, 3.851399999999991e-05, 3.822300000000042e-05, 3.8209000000000853e-05, 3.900000000000084e-05, 3.851399999999991e-05, 3.8318999999998465e-05, 3.825000000000009e-05, 3.901400000000041e-05, 3.841599999999945e-05, 3.8333000000001505e-05, 3.844400000000206e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8361000000000645e-05, 3.8818999999998965e-05, 3.901400000000041e-05, 3.876400000000016e-05, 3.880600000000234e-05, 3.8889000000000284e-05, 3.852800000000295e-05, 3.8444999999998064e-05, 3.850000000000034e-05, 3.881999999999844e-05, 3.8861000000001145e-05, 3.8375000000000214e-05, 3.881999999999844e-05, 3.8804999999999396e-05, 3.8709000000001353e-05, 3.8847000000001575e-05, 3.9097000000001825e-05, 3.8361000000000645e-05, 3.91660000000002e-05, 3.874999999999712e-05, 3.873600000000102e-05, 3.8790999999999826e-05, 3.867999999999927e-05, 3.9068999999999215e-05, 3.900000000000084e-05, 3.822200000000095e-05, 3.872199999999798e-05, 3.857000000000166e-05, 3.8652999999999604e-05, 3.8347000000001075e-05, 3.8667000000002644e-05, 3.8916999999999424e-05]</msg>
<status status="PASS" starttime="20201115 23:01:07.687" endtime="20201115 23:01:07.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.683" endtime="20201115 23:01:07.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.692" endtime="20201115 23:01:07.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:07.696" endtime="20201115 23:01:07.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.694" endtime="20201115 23:01:07.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.691" endtime="20201115 23:01:07.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.325" endtime="20201115 23:01:07.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.323" endtime="20201115 23:01:07.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.322" endtime="20201115 23:01:07.717"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.719" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.728" endtime="20201115 23:01:07.744"></status>
</kw>
<msg timestamp="20201115 23:01:07.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.726" endtime="20201115 23:01:07.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:07.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:07.746" endtime="20201115 23:01:07.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.748" endtime="20201115 23:01:07.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.723" endtime="20201115 23:01:07.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.721" endtime="20201115 23:01:07.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:07.757" endtime="20201115 23:01:08.041"></status>
</kw>
<msg timestamp="20201115 23:01:08.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:07.756" endtime="20201115 23:01:08.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.045" endtime="20201115 23:01:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.054" endtime="20201115 23:01:08.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.753" endtime="20201115 23:01:08.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.751" endtime="20201115 23:01:08.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.061" level="INFO">${RESULT} = [{'time': 0.022799222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0096999999999355e-05, 'source_diff': 4.0096999999999355e-05}, {'time': 0.022845222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.057" endtime="20201115 23:01:08.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.075" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:08.062" endtime="20201115 23:01:08.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.079" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.078" endtime="20201115 23:01:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.082" level="INFO">VALUE: [4.0096999999999355e-05, 3.944399999999959e-05, 3.9374999999997745e-05, 3.945799999999916e-05, 3.9596999999998855e-05, 4.0082999999999785e-05, 3.9318999999999465e-05, 3.972200000000245e-05, 3.954200000000005e-05, 3.9695000000002784e-05, 3.9860999999998675e-05, 4.006999999999969e-05, 3.923600000000152e-05, 3.9736999999998024e-05, 3.975000000000159e-05, 3.994399999999662e-05, 3.936200000000112e-05, 3.9972999999998704e-05, 3.9805000000000396e-05, 4.013800000000206e-05, 4.026399999999819e-05, 3.9568999999999716e-05, 3.99859999999988e-05, 3.97920000000003e-05, 3.9818999999999966e-05, 3.9888999999997815e-05, 3.9346999999998605e-05, 3.9652999999997135e-05, 3.993000000000052e-05, 3.927800000000023e-05, 3.94859999999983e-05, 3.9388999999997315e-05, 3.977800000000073e-05, 3.926400000000066e-05, 3.96660000000007e-05, 3.9846999999999105e-05, 3.9403000000000354e-05, 3.983399999999901e-05, 3.9430999999999494e-05, 3.974999999999812e-05, 4.0012999999998466e-05, 3.948700000000124e-05, 4.0082999999999785e-05, 4.0027000000001506e-05, 3.9832999999999535e-05, 3.995799999999966e-05, 3.927800000000023e-05, 3.950000000000134e-05, 3.9791000000000826e-05, 4.000000000000184e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.080" endtime="20201115 23:01:08.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.076" endtime="20201115 23:01:08.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.085" endtime="20201115 23:01:08.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.089" endtime="20201115 23:01:08.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.087" endtime="20201115 23:01:08.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.084" endtime="20201115 23:01:08.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.720" endtime="20201115 23:01:08.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.718" endtime="20201115 23:01:08.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:07.718" endtime="20201115 23:01:08.110"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.121" endtime="20201115 23:01:08.138"></status>
</kw>
<msg timestamp="20201115 23:01:08.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.119" endtime="20201115 23:01:08.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.139" endtime="20201115 23:01:08.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.142" endtime="20201115 23:01:08.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.117" endtime="20201115 23:01:08.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.114" endtime="20201115 23:01:08.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.151" endtime="20201115 23:01:08.437"></status>
</kw>
<msg timestamp="20201115 23:01:08.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023015278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.149" endtime="20201115 23:01:08.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023015278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.441" endtime="20201115 23:01:08.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.449" endtime="20201115 23:01:08.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.147" endtime="20201115 23:01:08.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.145" endtime="20201115 23:01:08.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.456" level="INFO">${RESULT} = [{'time': 0.023015278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1195000000000814e-05, 'source_diff': 4.1195000000000814e-05}, {'time': 0.023059236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.453" endtime="20201115 23:01:08.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.475" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:08.462" endtime="20201115 23:01:08.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.479" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.478" endtime="20201115 23:01:08.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.482" level="INFO">VALUE: [4.1195000000000814e-05, 4.047199999999973e-05, 4.024999999999862e-05, 4.029199999999733e-05, 4.1069000000001216e-05, 4.0445000000000064e-05, 4.07920000000013e-05, 4.108400000000026e-05, 4.0861000000003145e-05, 4.0889000000002285e-05, 4.055600000000062e-05, 4.0624999999998995e-05, 4.0417000000000924e-05, 4.0333000000000035e-05, 4.0222999999998954e-05, 4.1083000000000786e-05, 4.068000000000127e-05, 4.1083000000000786e-05, 4.079199999999783e-05, 4.0360999999999175e-05, 4.069399999999737e-05, 4.051400000000191e-05, 4.04720000000032e-05, 4.1040999999998606e-05, 4.052800000000148e-05, 4.099999999999937e-05, 4.029199999999733e-05, 4.0916999999997955e-05, 4.0417000000000924e-05, 4.107000000000069e-05, 4.031999999999994e-05, 4.0416999999997455e-05, 4.083400000000001e-05, 4.1083000000000786e-05, 4.09859999999998e-05, 4.031999999999994e-05, 4.023599999999905e-05, 4.119399999999787e-05, 4.059799999999933e-05, 4.049999999999887e-05, 4.1013000000002936e-05, 4.044400000000059e-05, 4.065200000000213e-05, 4.0596999999999855e-05, 4.1153000000002105e-05, 4.11799999999983e-05, 4.0346999999999605e-05, 4.109799999999983e-05, 4.023600000000252e-05, 4.0388999999998315e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.480" endtime="20201115 23:01:08.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.476" endtime="20201115 23:01:08.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.485" endtime="20201115 23:01:08.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.488" endtime="20201115 23:01:08.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.487" endtime="20201115 23:01:08.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.483" endtime="20201115 23:01:08.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.113" endtime="20201115 23:01:08.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.111" endtime="20201115 23:01:08.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.110" endtime="20201115 23:01:08.509"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.512" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.520" endtime="20201115 23:01:08.535"></status>
</kw>
<msg timestamp="20201115 23:01:08.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.518" endtime="20201115 23:01:08.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.537" endtime="20201115 23:01:08.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.539" endtime="20201115 23:01:08.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.516" endtime="20201115 23:01:08.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.514" endtime="20201115 23:01:08.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.548" endtime="20201115 23:01:08.834"></status>
</kw>
<msg timestamp="20201115 23:01:08.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.547" endtime="20201115 23:01:08.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.838" endtime="20201115 23:01:08.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.846" endtime="20201115 23:01:08.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.544" endtime="20201115 23:01:08.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.542" endtime="20201115 23:01:08.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:08.853" level="INFO">${RESULT} = [{'time': 0.021951014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1611000000000425e-05, 'source_diff': 4.1611000000000425e-05}, {'time': 0.021999986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:08.850" endtime="20201115 23:01:08.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:08.866" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:08.854" endtime="20201115 23:01:08.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.871" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:08.870" endtime="20201115 23:01:08.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.873" level="INFO">VALUE: [4.1611000000000425e-05, 4.145799999999769e-05, 4.1555000000002146e-05, 4.12920000000018e-05, 4.2083000000001786e-05, 4.1638999999999565e-05, 4.157000000000119e-05, 4.1638999999999565e-05, 4.172200000000098e-05, 4.1723000000000454e-05, 4.1596999999997386e-05, 4.1473000000000204e-05, 4.1445000000001064e-05, 4.177799999999926e-05, 4.129199999999833e-05, 4.176399999999969e-05, 4.1709000000000884e-05, 4.186200000000015e-05, 4.1527000000003006e-05, 4.1347000000000605e-05, 4.149999999999987e-05, 4.124999999999962e-05, 4.1846999999997636e-05, 4.1569000000001716e-05, 4.144399999999812e-05, 4.152800000000248e-05, 4.2068999999998746e-05, 4.154199999999858e-05, 4.14860000000003e-05, 4.202799999999951e-05, 4.1917000000002425e-05, 4.151400000000291e-05, 4.157000000000119e-05, 4.1597000000000856e-05, 4.154200000000205e-05, 4.204199999999908e-05, 4.1431000000001494e-05, 4.124999999999962e-05, 4.155600000000162e-05, 4.2139000000000065e-05, 4.1611000000000425e-05, 4.1512999999999967e-05, 4.1541000000002576e-05, 4.1347000000000605e-05, 4.2096999999997886e-05, 4.177800000000273e-05, 4.19860000000008e-05, 4.1832999999998066e-05, 4.1610999999996956e-05, 4.122200000000048e-05]</msg>
<status status="PASS" starttime="20201115 23:01:08.872" endtime="20201115 23:01:08.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.867" endtime="20201115 23:01:08.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.876" endtime="20201115 23:01:08.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:08.880" endtime="20201115 23:01:08.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.878" endtime="20201115 23:01:08.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.875" endtime="20201115 23:01:08.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.512" endtime="20201115 23:01:08.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.511" endtime="20201115 23:01:08.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.510" endtime="20201115 23:01:08.901"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.903" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.911" endtime="20201115 23:01:08.929"></status>
</kw>
<msg timestamp="20201115 23:01:08.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.910" endtime="20201115 23:01:08.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:08.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:08.930" endtime="20201115 23:01:08.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.932" endtime="20201115 23:01:08.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.907" endtime="20201115 23:01:08.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.905" endtime="20201115 23:01:08.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:08.942" endtime="20201115 23:01:09.229"></status>
</kw>
<msg timestamp="20201115 23:01:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022894986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:08.940" endtime="20201115 23:01:09.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022894986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022938028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.233" endtime="20201115 23:01:09.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.241" endtime="20201115 23:01:09.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.937" endtime="20201115 23:01:09.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.936" endtime="20201115 23:01:09.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.248" level="INFO">${RESULT} = [{'time': 0.022938028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304200000000008e-05, 'source_diff': 4.304200000000008e-05}, {'time': 0.022988028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:09.245" endtime="20201115 23:01:09.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.263" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:09.249" endtime="20201115 23:01:09.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.267" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.266" endtime="20201115 23:01:09.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.270" level="INFO">VALUE: [4.304200000000008e-05, 4.275000000000112e-05, 4.2889000000000815e-05, 4.29999999999979e-05, 4.279199999999983e-05, 4.281999999999897e-05, 4.294399999999962e-05, 4.2819000000002966e-05, 4.251400000000044e-05, 4.24860000000013e-05, 4.240200000000041e-05, 4.277800000000026e-05, 4.2375000000000745e-05, 4.319399999999987e-05, 4.3041000000000607e-05, 4.295800000000266e-05, 4.3082999999999316e-05, 4.24860000000013e-05, 4.22920000000028e-05, 4.255600000000262e-05, 4.3111000000001926e-05, 4.2389000000000315e-05, 4.3111000000001926e-05, 4.301400000000094e-05, 4.230600000000237e-05, 4.223600000000105e-05, 4.224999999999715e-05, 4.254199999999958e-05, 4.2332999999998566e-05, 4.2431000000002494e-05, 4.2360999999997706e-05, 4.295799999999919e-05, 4.2611000000001426e-05, 4.2818999999999496e-05, 4.2305000000002896e-05, 4.242999999999955e-05, 4.2903000000000385e-05, 4.276400000000069e-05, 4.273600000000155e-05, 4.2582999999998816e-05, 4.279199999999983e-05, 4.2681000000002745e-05, 4.254199999999958e-05, 4.2861000000001676e-05, 4.283400000000201e-05, 4.2360999999997706e-05, 4.254199999999958e-05, 4.275000000000112e-05, 4.2389000000000315e-05, 4.2694999999998845e-05]</msg>
<status status="PASS" starttime="20201115 23:01:09.268" endtime="20201115 23:01:09.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.264" endtime="20201115 23:01:09.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.273" endtime="20201115 23:01:09.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.276" endtime="20201115 23:01:09.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.275" endtime="20201115 23:01:09.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.271" endtime="20201115 23:01:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.904" endtime="20201115 23:01:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.902" endtime="20201115 23:01:09.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:08.901" endtime="20201115 23:01:09.297"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.300" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.308" endtime="20201115 23:01:09.325"></status>
</kw>
<msg timestamp="20201115 23:01:09.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.306" endtime="20201115 23:01:09.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.327" endtime="20201115 23:01:09.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.330" endtime="20201115 23:01:09.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.304" endtime="20201115 23:01:09.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.302" endtime="20201115 23:01:09.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.339" endtime="20201115 23:01:09.625"></status>
</kw>
<msg timestamp="20201115 23:01:09.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.337" endtime="20201115 23:01:09.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022897111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.629" endtime="20201115 23:01:09.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.637" endtime="20201115 23:01:09.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.335" endtime="20201115 23:01:09.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.333" endtime="20201115 23:01:09.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:09.644" level="INFO">${RESULT} = [{'time': 0.022897111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4083000000000316e-05, 'source_diff': 4.4083000000000316e-05}, {'time': 0.022945125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:09.641" endtime="20201115 23:01:09.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:09.657" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:09.645" endtime="20201115 23:01:09.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.662" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:09.661" endtime="20201115 23:01:09.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.664" level="INFO">VALUE: [4.4083000000000316e-05, 4.33059999999999e-05, 4.325000000000162e-05, 4.3346999999999136e-05, 4.3444999999999595e-05, 4.407000000000022e-05, 4.4153000000001635e-05, 4.355600000000015e-05, 4.3402999999997416e-05, 4.329200000000033e-05, 4.3417000000000455e-05, 4.355600000000015e-05, 4.3917000000000955e-05, 4.3667000000000705e-05, 4.369400000000037e-05, 4.3833000000000066e-05, 4.351400000000144e-05, 4.3555000000000677e-05, 4.3667000000000705e-05, 4.341600000000098e-05, 4.347199999999926e-05, 4.3611000000002426e-05, 4.3624999999998526e-05, 4.3805000000000927e-05, 4.3332999999999566e-05, 4.4124999999999026e-05, 4.356999999999972e-05, 4.347200000000273e-05, 4.350000000000187e-05, 4.3458999999999165e-05, 4.326400000000119e-05, 4.3917000000000955e-05, 4.348599999999883e-05, 4.409800000000283e-05, 4.3208999999998915e-05, 4.416599999999826e-05, 4.3805000000000927e-05, 4.370799999999994e-05, 4.36800000000008e-05, 4.397199999999976e-05, 4.41800000000013e-05, 4.3945000000000095e-05, 4.3582999999999816e-05, 4.4124999999999026e-05, 4.394400000000062e-05, 4.398599999999933e-05, 4.4083000000000316e-05, 4.376399999999822e-05, 4.356999999999972e-05, 4.322199999999901e-05]</msg>
<status status="PASS" starttime="20201115 23:01:09.663" endtime="20201115 23:01:09.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.658" endtime="20201115 23:01:09.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.667" endtime="20201115 23:01:09.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:09.671" endtime="20201115 23:01:09.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.669" endtime="20201115 23:01:09.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.666" endtime="20201115 23:01:09.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.300" endtime="20201115 23:01:09.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.299" endtime="20201115 23:01:09.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.298" endtime="20201115 23:01:09.692"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.694" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.703" endtime="20201115 23:01:09.719"></status>
</kw>
<msg timestamp="20201115 23:01:09.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.702" endtime="20201115 23:01:09.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:09.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:09.721" endtime="20201115 23:01:09.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.723" endtime="20201115 23:01:09.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.699" endtime="20201115 23:01:09.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.697" endtime="20201115 23:01:09.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:09.732" endtime="20201115 23:01:10.018"></status>
</kw>
<msg timestamp="20201115 23:01:10.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:09.731" endtime="20201115 23:01:10.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.022" endtime="20201115 23:01:10.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.030" endtime="20201115 23:01:10.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.728" endtime="20201115 23:01:10.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.726" endtime="20201115 23:01:10.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.037" level="INFO">${RESULT} = [{'time': 0.022433056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4945000000001095e-05, 'source_diff': 4.4945000000001095e-05}, {'time': 0.022480042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:10.034" endtime="20201115 23:01:10.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.050" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:10.038" endtime="20201115 23:01:10.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.055" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.054" endtime="20201115 23:01:10.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.057" level="INFO">VALUE: [4.4945000000001095e-05, 4.4652999999998666e-05, 4.43060000000009e-05, 4.484800000000011e-05, 4.4833000000001066e-05, 4.51939999999984e-05, 4.46939999999979e-05, 4.4847000000000636e-05, 4.444400000000112e-05, 4.5097000000000886e-05, 4.4389000000002315e-05, 4.476399999999922e-05, 4.477800000000226e-05, 4.424999999999915e-05, 4.44999999999994e-05, 4.4917000000001955e-05, 4.477799999999879e-05, 4.4681000000001275e-05, 4.477800000000226e-05, 4.447200000000026e-05, 4.4319000000000996e-05, 4.427799999999829e-05, 4.484799999999664e-05, 4.452799999999854e-05, 4.4472999999999735e-05, 4.454200000000158e-05, 4.5125000000000026e-05, 4.467999999999833e-05, 4.4888999999999346e-05, 4.4610999999999956e-05, 4.452699999999907e-05, 4.4319000000000996e-05, 4.4861000000000206e-05, 4.479099999999889e-05, 4.452800000000201e-05, 4.473600000000008e-05, 4.4861000000000206e-05, 4.502799999999904e-05, 4.4624999999999526e-05, 4.473600000000008e-05, 4.4152999999998166e-05, 4.429200000000133e-05, 4.472200000000051e-05, 4.476399999999922e-05, 4.426400000000219e-05, 4.448599999999983e-05, 4.424999999999915e-05, 4.505600000000165e-05, 4.506899999999828e-05, 4.463799999999962e-05]</msg>
<status status="PASS" starttime="20201115 23:01:10.056" endtime="20201115 23:01:10.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.051" endtime="20201115 23:01:10.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.060" endtime="20201115 23:01:10.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.064" endtime="20201115 23:01:10.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.062" endtime="20201115 23:01:10.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.059" endtime="20201115 23:01:10.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.695" endtime="20201115 23:01:10.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.693" endtime="20201115 23:01:10.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:09.692" endtime="20201115 23:01:10.086"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.088" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.097" endtime="20201115 23:01:10.113"></status>
</kw>
<msg timestamp="20201115 23:01:10.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.096" endtime="20201115 23:01:10.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.115" endtime="20201115 23:01:10.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.117" endtime="20201115 23:01:10.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.093" endtime="20201115 23:01:10.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.090" endtime="20201115 23:01:10.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.126" endtime="20201115 23:01:10.413"></status>
</kw>
<msg timestamp="20201115 23:01:10.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023475111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023520389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.125" endtime="20201115 23:01:10.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023475111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023520389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.417" endtime="20201115 23:01:10.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.425" endtime="20201115 23:01:10.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.122" endtime="20201115 23:01:10.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.120" endtime="20201115 23:01:10.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.432" level="INFO">${RESULT} = [{'time': 0.023520389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527799999999929e-05, 'source_diff': 4.527799999999929e-05}, {'time': 0.023570389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:10.428" endtime="20201115 23:01:10.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.445" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:10.433" endtime="20201115 23:01:10.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.449" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.448" endtime="20201115 23:01:10.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.452" level="INFO">VALUE: [4.527799999999929e-05, 4.598600000000133e-05, 4.575000000000065e-05, 4.545800000000169e-05, 4.529199999999886e-05, 4.5722999999997516e-05, 4.5431000000002025e-05, 4.580499999999946e-05, 4.523600000000058e-05, 4.563800000000062e-05, 4.534699999999767e-05, 4.544399999999865e-05, 4.5388999999999846e-05, 4.576400000000022e-05, 4.617999999999983e-05, 4.616600000000026e-05, 4.573599999999761e-05, 4.575000000000065e-05, 4.561099999999749e-05, 4.552800000000301e-05, 4.558299999999835e-05, 4.570800000000194e-05, 4.555600000000215e-05, 4.573600000000108e-05, 4.548600000000083e-05, 4.523600000000058e-05, 4.607000000000222e-05, 4.5723000000000985e-05, 4.6167000000003205e-05, 4.536099999999724e-05, 4.523600000000058e-05, 4.533400000000104e-05, 4.569400000000237e-05, 4.58329999999986e-05, 4.5445000000001595e-05, 4.55000000000004e-05, 4.548600000000083e-05, 4.526399999999972e-05, 4.606899999999928e-05, 4.5611000000000956e-05, 4.559800000000086e-05, 4.60000000000009e-05, 4.5666999999999236e-05, 4.587499999999731e-05, 4.5597000000001386e-05, 4.58329999999986e-05, 4.526399999999972e-05, 4.554199999999911e-05, 4.562499999999706e-05, 4.5223000000000485e-05]</msg>
<status status="PASS" starttime="20201115 23:01:10.451" endtime="20201115 23:01:10.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.446" endtime="20201115 23:01:10.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.456" endtime="20201115 23:01:10.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.459" endtime="20201115 23:01:10.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.457" endtime="20201115 23:01:10.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.454" endtime="20201115 23:01:10.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.089" endtime="20201115 23:01:10.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.087" endtime="20201115 23:01:10.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.086" endtime="20201115 23:01:10.480"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.483" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.491" endtime="20201115 23:01:10.507"></status>
</kw>
<msg timestamp="20201115 23:01:10.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.489" endtime="20201115 23:01:10.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.508" endtime="20201115 23:01:10.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.511" endtime="20201115 23:01:10.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.487" endtime="20201115 23:01:10.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.484" endtime="20201115 23:01:10.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.519" endtime="20201115 23:01:10.806"></status>
</kw>
<msg timestamp="20201115 23:01:10.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.518" endtime="20201115 23:01:10.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.810" endtime="20201115 23:01:10.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.819" endtime="20201115 23:01:10.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.515" endtime="20201115 23:01:10.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.514" endtime="20201115 23:01:10.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:10.825" level="INFO">${RESULT} = [{'time': 0.021983361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.631899999999953e-05, 'source_diff': 4.631899999999953e-05}, {'time': 0.022033306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:10.822" endtime="20201115 23:01:10.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:10.840" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:10.826" endtime="20201115 23:01:10.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.844" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:10.843" endtime="20201115 23:01:10.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.847" level="INFO">VALUE: [4.631899999999953e-05, 4.654200000000011e-05, 4.679199999999689e-05, 4.698599999999886e-05, 4.7111000000002456e-05, 4.698599999999886e-05, 4.684699999999917e-05, 4.630599999999943e-05, 4.691600000000101e-05, 4.71940000000004e-05, 4.630499999999996e-05, 4.695800000000319e-05, 4.652800000000054e-05, 4.645800000000269e-05, 4.658299999999935e-05, 4.633399999999857e-05, 4.6889000000001346e-05, 4.701400000000147e-05, 4.675000000000165e-05, 4.657000000000272e-05, 4.6403000000000416e-05, 4.65000000000014e-05, 4.684800000000211e-05, 4.676400000000122e-05, 4.65000000000014e-05, 4.6625000000001526e-05, 4.680500000000046e-05, 4.631899999999953e-05, 4.634699999999867e-05, 4.636099999999824e-05, 4.644399999999965e-05, 4.698599999999886e-05, 4.6625000000001526e-05, 4.704200000000061e-05, 4.672199999999904e-05, 4.673600000000208e-05, 4.701400000000147e-05, 4.6667000000000236e-05, 4.626400000000072e-05, 4.656999999999925e-05, 4.704199999999714e-05, 4.701400000000147e-05, 4.6431000000003025e-05, 4.6319999999999e-05, 4.629199999999986e-05, 4.658299999999935e-05, 4.624999999999768e-05, 4.673599999999861e-05, 4.7181000000000306e-05, 4.647199999999879e-05]</msg>
<status status="PASS" starttime="20201115 23:01:10.846" endtime="20201115 23:01:10.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.841" endtime="20201115 23:01:10.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.851" endtime="20201115 23:01:10.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:10.854" endtime="20201115 23:01:10.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.852" endtime="20201115 23:01:10.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.849" endtime="20201115 23:01:10.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.483" endtime="20201115 23:01:10.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.481" endtime="20201115 23:01:10.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.481" endtime="20201115 23:01:10.875"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.878" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.886" endtime="20201115 23:01:10.902"></status>
</kw>
<msg timestamp="20201115 23:01:10.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.884" endtime="20201115 23:01:10.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:10.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:10.903" endtime="20201115 23:01:10.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.906" endtime="20201115 23:01:10.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.882" endtime="20201115 23:01:10.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.880" endtime="20201115 23:01:10.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:10.915" endtime="20201115 23:01:11.200"></status>
</kw>
<msg timestamp="20201115 23:01:11.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:10.913" endtime="20201115 23:01:11.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022155097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.205" endtime="20201115 23:01:11.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.213" endtime="20201115 23:01:11.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.911" endtime="20201115 23:01:11.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.909" endtime="20201115 23:01:11.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:11.220" level="INFO">${RESULT} = [{'time': 0.022202667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.757000000000025e-05, 'source_diff': 4.757000000000025e-05}, {'time': 0.022259667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:11.216" endtime="20201115 23:01:11.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:11.233" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:11.221" endtime="20201115 23:01:11.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.238" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:11.237" endtime="20201115 23:01:11.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.240" level="INFO">VALUE: [4.757000000000025e-05, 4.799999999999943e-05, 4.812499999999956e-05, 4.795800000000072e-05, 4.729099999999792e-05, 4.730499999999749e-05, 4.736099999999924e-05, 4.7889000000002346e-05, 4.741600000000151e-05, 4.787499999999931e-05, 4.726399999999825e-05, 4.731900000000053e-05, 4.8139000000002596e-05, 4.744400000000065e-05, 4.732e-05, 4.7667000000001236e-05, 4.826399999999925e-05, 4.736099999999924e-05, 4.751400000000197e-05, 4.75139999999985e-05, 4.818099999999784e-05, 4.802700000000257e-05, 4.741699999999752e-05, 4.732e-05, 4.76940000000009e-05, 4.773599999999961e-05, 4.73330000000001e-05, 4.761099999999949e-05, 4.788899999999888e-05, 4.752799999999807e-05, 4.766599999999829e-05, 4.752800000000154e-05, 4.805500000000171e-05, 4.807000000000075e-05, 4.745800000000022e-05, 4.726400000000172e-05, 4.723599999999911e-05, 4.758300000000035e-05, 4.752799999999807e-05, 4.722199999999954e-05, 4.7445000000000126e-05, 4.7375000000002276e-05, 4.777799999999832e-05, 4.786099999999974e-05, 4.763899999999863e-05, 4.745800000000022e-05, 4.740199999999847e-05, 4.794400000000115e-05, 4.7681000000000806e-05, 4.777799999999832e-05]</msg>
<status status="PASS" starttime="20201115 23:01:11.239" endtime="20201115 23:01:11.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.234" endtime="20201115 23:01:11.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.243" endtime="20201115 23:01:11.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:11.247" endtime="20201115 23:01:11.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.245" endtime="20201115 23:01:11.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.242" endtime="20201115 23:01:11.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.878" endtime="20201115 23:01:11.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.876" endtime="20201115 23:01:11.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:10.876" endtime="20201115 23:01:11.268"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.270" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.278" endtime="20201115 23:01:11.295"></status>
</kw>
<msg timestamp="20201115 23:01:11.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.277" endtime="20201115 23:01:11.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.297" endtime="20201115 23:01:11.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.299" endtime="20201115 23:01:11.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.274" endtime="20201115 23:01:11.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.272" endtime="20201115 23:01:11.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.308" endtime="20201115 23:01:11.594"></status>
</kw>
<msg timestamp="20201115 23:01:11.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.307" endtime="20201115 23:01:11.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:11.598" endtime="20201115 23:01:11.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.607" endtime="20201115 23:01:11.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.304" endtime="20201115 23:01:11.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.302" endtime="20201115 23:01:11.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:11.613" level="INFO">${RESULT} = [{'time': 0.022412472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.841599999999904e-05, 'source_diff': 4.841599999999904e-05}, {'time': 0.022465472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:11.610" endtime="20201115 23:01:11.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:11.627" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:11.614" endtime="20201115 23:01:11.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.631" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:11.630" endtime="20201115 23:01:11.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.634" level="INFO">VALUE: [4.841599999999904e-05, 4.875000000000018e-05, 4.884700000000117e-05, 4.906900000000228e-05, 4.898599999999739e-05, 4.823600000000011e-05, 4.840299999999895e-05, 4.848600000000036e-05, 4.912500000000056e-05, 4.8945000000001626e-05, 4.920800000000197e-05, 4.855599999999821e-05, 4.908399999999785e-05, 4.845800000000122e-05, 4.8320000000001e-05, 4.829200000000186e-05, 4.909700000000142e-05, 4.873600000000061e-05, 4.85139999999995e-05, 4.830500000000196e-05, 4.913900000000013e-05, 4.911100000000099e-05, 4.876399999999975e-05, 4.86940000000019e-05, 4.884700000000117e-05, 4.837499999999981e-05, 4.904199999999914e-05, 4.887500000000031e-05, 4.88330000000016e-05, 4.831899999999806e-05, 4.925000000000068e-05, 4.9208999999997977e-05, 4.852799999999907e-05, 4.876399999999975e-05, 4.844400000000165e-05, 4.83330000000011e-05, 4.876399999999975e-05, 4.83330000000011e-05, 4.8707999999998e-05, 4.912500000000056e-05, 4.852799999999907e-05, 4.826399999999925e-05, 4.837499999999981e-05, 4.880499999999899e-05, 4.912499999999709e-05, 4.824999999999968e-05, 4.88200000000015e-05, 4.847200000000079e-05, 4.8945000000001626e-05, 4.849999999999993e-05]</msg>
<status status="PASS" starttime="20201115 23:01:11.632" endtime="20201115 23:01:11.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.628" endtime="20201115 23:01:11.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.637" endtime="20201115 23:01:11.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:11.640" endtime="20201115 23:01:11.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.639" endtime="20201115 23:01:11.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.635" endtime="20201115 23:01:11.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.271" endtime="20201115 23:01:11.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.269" endtime="20201115 23:01:11.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.268" endtime="20201115 23:01:11.661"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.672" endtime="20201115 23:01:11.689"></status>
</kw>
<msg timestamp="20201115 23:01:11.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.670" endtime="20201115 23:01:11.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:11.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:11.690" endtime="20201115 23:01:11.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.693" endtime="20201115 23:01:11.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.668" endtime="20201115 23:01:11.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.666" endtime="20201115 23:01:11.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:11.702" endtime="20201115 23:01:11.989"></status>
</kw>
<msg timestamp="20201115 23:01:11.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02270775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:11.700" endtime="20201115 23:01:11.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02270775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:11.993" endtime="20201115 23:01:12.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.001" endtime="20201115 23:01:12.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.698" endtime="20201115 23:01:12.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.696" endtime="20201115 23:01:12.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:12.008" level="INFO">${RESULT} = [{'time': 0.02270775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.954199999999964e-05, 'source_diff': 4.954199999999964e-05}, {'time': 0.02275975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:12.005" endtime="20201115 23:01:12.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.021" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:12.009" endtime="20201115 23:01:12.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.026" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.025" endtime="20201115 23:01:12.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.028" level="INFO">VALUE: [4.954199999999964e-05, 4.96530000000002e-05, 4.969399999999943e-05, 4.948599999999789e-05, 4.952800000000007e-05, 4.968099999999934e-05, 4.954199999999964e-05, 4.924999999999721e-05, 5.002800000000057e-05, 4.98339999999986e-05, 4.9487000000000836e-05, 4.977800000000032e-05, 4.9388000000000903e-05, 4.922199999999807e-05, 5.006899999999981e-05, 4.956999999999878e-05, 4.956899999999931e-05, 5.022199999999907e-05, 5.006900000000328e-05, 4.955499999999974e-05, 4.959700000000192e-05, 5.002800000000057e-05, 4.947200000000179e-05, 4.968099999999934e-05, 5.01530000000007e-05, 5.008399999999885e-05, 4.955600000000268e-05, 4.979199999999989e-05, 4.929099999999992e-05, 4.986099999999827e-05, 4.968099999999934e-05, 4.9722999999998047e-05, 4.930600000000243e-05, 4.966600000000029e-05, 4.956900000000278e-05, 4.966699999999977e-05, 4.959700000000192e-05, 5.009699999999895e-05, 4.93339999999981e-05, 4.979199999999989e-05, 4.941699999999952e-05, 4.945799999999875e-05, 5.01530000000007e-05, 4.977800000000032e-05, 4.986099999999827e-05, 4.962499999999759e-05, 4.958400000000182e-05, 4.9681000000002806e-05, 4.931999999999853e-05, 5.004200000000014e-05]</msg>
<status status="PASS" starttime="20201115 23:01:12.027" endtime="20201115 23:01:12.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.022" endtime="20201115 23:01:12.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.031" endtime="20201115 23:01:12.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.035" endtime="20201115 23:01:12.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.033" endtime="20201115 23:01:12.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.030" endtime="20201115 23:01:12.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.664" endtime="20201115 23:01:12.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.662" endtime="20201115 23:01:12.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:11.662" endtime="20201115 23:01:12.056"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.067" endtime="20201115 23:01:12.083"></status>
</kw>
<msg timestamp="20201115 23:01:12.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.065" endtime="20201115 23:01:12.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.084" endtime="20201115 23:01:12.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.087" endtime="20201115 23:01:12.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.062" endtime="20201115 23:01:12.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.060" endtime="20201115 23:01:12.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.096" endtime="20201115 23:01:12.381"></status>
</kw>
<msg timestamp="20201115 23:01:12.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.094" endtime="20201115 23:01:12.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.386" endtime="20201115 23:01:12.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.394" endtime="20201115 23:01:12.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.092" endtime="20201115 23:01:12.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.090" endtime="20201115 23:01:12.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:12.400" level="INFO">${RESULT} = [{'time': 0.021979111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.049999999999846e-05, 'source_diff': 5.049999999999846e-05}, {'time': 0.022038167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:12.397" endtime="20201115 23:01:12.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:12.401" endtime="20201115 23:01:12.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.420" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.419" endtime="20201115 23:01:12.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.422" level="INFO">VALUE: [5.049999999999846e-05, 5.030599999999996e-05, 5.06530000000012e-05, 5.047200000000279e-05, 5.098599999999939e-05, 5.050000000000193e-05, 5.062500000000206e-05, 5.094500000000016e-05, 5.038899999999791e-05, 5.105600000000071e-05, 5.055600000000021e-05, 5.094400000000068e-05, 5.084700000000317e-05, 5.119400000000093e-05, 5.080500000000099e-05, 5.059699999999945e-05, 5.087499999999884e-05, 5.083300000000013e-05, 5.033299999999963e-05, 5.086099999999927e-05, 5.055500000000074e-05, 5.073599999999914e-05, 5.069400000000043e-05, 5.025000000000168e-05, 5.082000000000003e-05, 5.113899999999866e-05, 5.043100000000009e-05, 5.082000000000003e-05, 5.0987000000002336e-05, 5.084800000000264e-05, 5.0736999999998617e-05, 5.059799999999892e-05, 5.0402000000001473e-05, 5.058299999999988e-05, 5.072199999999957e-05, 5.0957999999996784e-05, 5.079100000000142e-05, 5.061099999999902e-05, 5.0429999999997144e-05, 5.030599999999996e-05, 5.055600000000021e-05, 5.08469999999997e-05, 5.1014000000002e-05, 5.113900000000213e-05, 5.087499999999884e-05, 5.09729999999993e-05, 5.100000000000243e-05, 5.059699999999945e-05, 5.055599999999674e-05, 5.099999999999896e-05]</msg>
<status status="PASS" starttime="20201115 23:01:12.421" endtime="20201115 23:01:12.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.416" endtime="20201115 23:01:12.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.425" endtime="20201115 23:01:12.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.428" endtime="20201115 23:01:12.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.427" endtime="20201115 23:01:12.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.423" endtime="20201115 23:01:12.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.059" endtime="20201115 23:01:12.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.057" endtime="20201115 23:01:12.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.056" endtime="20201115 23:01:12.450"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.461" endtime="20201115 23:01:12.478"></status>
</kw>
<msg timestamp="20201115 23:01:12.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.459" endtime="20201115 23:01:12.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.480" endtime="20201115 23:01:12.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.482" endtime="20201115 23:01:12.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.456" endtime="20201115 23:01:12.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.454" endtime="20201115 23:01:12.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.491" endtime="20201115 23:01:12.776"></status>
</kw>
<msg timestamp="20201115 23:01:12.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.490" endtime="20201115 23:01:12.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.780" endtime="20201115 23:01:12.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.789" endtime="20201115 23:01:12.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.487" endtime="20201115 23:01:12.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.485" endtime="20201115 23:01:12.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:12.795" level="INFO">${RESULT} = [{'time': 0.022602472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1443999999997714e-05, 'source_diff': 5.1443999999997714e-05}, {'time': 0.0226635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:12.792" endtime="20201115 23:01:12.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:12.809" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:12.796" endtime="20201115 23:01:12.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.813" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:12.812" endtime="20201115 23:01:12.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.815" level="INFO">VALUE: [5.1443999999997714e-05, 5.186100000000027e-05, 5.172200000000057e-05, 5.208300000000138e-05, 5.209700000000095e-05, 5.190300000000245e-05, 5.126400000000225e-05, 5.141700000000152e-05, 5.138900000000238e-05, 5.145900000000023e-05, 5.204199999999867e-05, 5.183399999999713e-05, 5.150000000000293e-05, 5.206900000000181e-05, 5.124999999999921e-05, 5.144400000000118e-05, 5.148599999999989e-05, 5.194400000000168e-05, 5.161100000000002e-05, 5.1708000000001e-05, 5.133300000000063e-05, 5.198600000000039e-05, 5.191699999999855e-05, 5.186100000000027e-05, 5.144500000000066e-05, 5.197200000000082e-05, 5.141700000000152e-05, 5.198600000000039e-05, 5.173600000000014e-05, 5.126399999999878e-05, 5.158300000000088e-05, 5.199999999999996e-05, 5.191700000000202e-05, 5.141699999999805e-05, 5.156899999999784e-05, 5.136099999999977e-05, 5.147200000000032e-05, 5.202699999999963e-05, 5.174999999999971e-05, 5.172200000000057e-05, 5.1429999999998144e-05, 5.126400000000225e-05, 5.127800000000182e-05, 5.127800000000182e-05, 5.129200000000139e-05, 5.184699999999723e-05, 5.173600000000014e-05, 5.13340000000001e-05, 5.166700000000177e-05, 5.14729999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:01:12.814" endtime="20201115 23:01:12.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.809" endtime="20201115 23:01:12.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.819" endtime="20201115 23:01:12.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:12.822" endtime="20201115 23:01:12.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.820" endtime="20201115 23:01:12.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.817" endtime="20201115 23:01:12.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.453" endtime="20201115 23:01:12.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.451" endtime="20201115 23:01:12.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.450" endtime="20201115 23:01:12.844"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.854" endtime="20201115 23:01:12.872"></status>
</kw>
<msg timestamp="20201115 23:01:12.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.852" endtime="20201115 23:01:12.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:12.873" endtime="20201115 23:01:12.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.876" endtime="20201115 23:01:12.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.850" endtime="20201115 23:01:12.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.848" endtime="20201115 23:01:12.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:12.885" endtime="20201115 23:01:13.172"></status>
</kw>
<msg timestamp="20201115 23:01:13.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:12.883" endtime="20201115 23:01:13.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.176" endtime="20201115 23:01:13.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.184" endtime="20201115 23:01:13.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.881" endtime="20201115 23:01:13.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.879" endtime="20201115 23:01:13.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.191" level="INFO">${RESULT} = [{'time': 0.022453569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.25409999999997e-05, 'source_diff': 5.25409999999997e-05}, {'time': 0.022515569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:13.188" endtime="20201115 23:01:13.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.204" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:13.192" endtime="20201115 23:01:13.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.209" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.208" endtime="20201115 23:01:13.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.211" level="INFO">VALUE: [5.25409999999997e-05, 5.301299999999759e-05, 5.298600000000139e-05, 5.3166000000000324e-05, 5.259699999999798e-05, 5.28470000000017e-05, 5.238899999999991e-05, 5.306999999999881e-05, 5.311100000000152e-05, 5.287500000000084e-05, 5.28470000000017e-05, 5.286100000000127e-05, 5.308300000000238e-05, 5.297200000000182e-05, 5.319500000000241e-05, 5.276400000000028e-05, 5.313900000000066e-05, 5.293099999999912e-05, 5.272300000000105e-05, 5.262500000000059e-05, 5.277700000000038e-05, 5.309700000000195e-05, 5.225000000000021e-05, 5.3152000000000754e-05, 5.262499999999712e-05, 5.226399999999978e-05, 5.256900000000231e-05, 5.243099999999862e-05, 5.273600000000114e-05, 5.247200000000132e-05, 5.248600000000089e-05, 5.305499999999977e-05, 5.295899999999826e-05, 5.259799999999745e-05, 5.301400000000053e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.276400000000028e-05, 5.311100000000152e-05, 5.255499999999927e-05, 5.283299999999866e-05, 5.229099999999945e-05, 5.252700000000013e-05, 5.256999999999831e-05, 5.245800000000175e-05, 5.229199999999892e-05, 5.2735999999997674e-05, 5.2721999999998104e-05, 5.252800000000307e-05, 5.272200000000157e-05]</msg>
<status status="PASS" starttime="20201115 23:01:13.210" endtime="20201115 23:01:13.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.205" endtime="20201115 23:01:13.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.215" endtime="20201115 23:01:13.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.218" endtime="20201115 23:01:13.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.217" endtime="20201115 23:01:13.238"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.213" endtime="20201115 23:01:13.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.847" endtime="20201115 23:01:13.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.845" endtime="20201115 23:01:13.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.844" endtime="20201115 23:01:13.240"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.242" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.250" endtime="20201115 23:01:13.267"></status>
</kw>
<msg timestamp="20201115 23:01:13.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.249" endtime="20201115 23:01:13.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.268" endtime="20201115 23:01:13.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.271" endtime="20201115 23:01:13.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.246" endtime="20201115 23:01:13.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.244" endtime="20201115 23:01:13.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.280" endtime="20201115 23:01:13.565"></status>
</kw>
<msg timestamp="20201115 23:01:13.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.278" endtime="20201115 23:01:13.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.570" endtime="20201115 23:01:13.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.578" endtime="20201115 23:01:13.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.276" endtime="20201115 23:01:13.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.274" endtime="20201115 23:01:13.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.584" level="INFO">${RESULT} = [{'time': 0.022185208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402700000000163e-05, 'source_diff': 5.402700000000163e-05}, {'time': 0.022243208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:13.581" endtime="20201115 23:01:13.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:13.598" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:13.586" endtime="20201115 23:01:13.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.602" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:13.601" endtime="20201115 23:01:13.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.610" level="INFO">VALUE: [5.402700000000163e-05, 5.3707999999999534e-05, 5.406900000000034e-05, 5.4013999999998064e-05, 5.36670000000003e-05, 5.358300000000288e-05, 5.348600000000189e-05, 5.3957999999999784e-05, 5.405600000000024e-05, 5.404200000000067e-05, 5.3999999999998494e-05, 5.331999999999906e-05, 5.36670000000003e-05, 5.376400000000128e-05, 5.337499999999787e-05, 5.352700000000113e-05, 5.395899999999926e-05, 5.3930000000000644e-05, 5.351299999999809e-05, 5.3235999999998174e-05, 5.3944000000000214e-05, 5.351400000000103e-05, 5.3930000000000644e-05, 5.3457999999999284e-05, 5.3693999999999964e-05, 5.341700000000005e-05, 5.3707999999999534e-05, 5.393100000000012e-05, 5.368099999999987e-05, 5.356999999999931e-05, 5.420899999999951e-05, 5.418100000000037e-05, 5.334699999999873e-05, 5.344500000000266e-05, 5.344499999999919e-05, 5.419499999999994e-05, 5.382000000000303e-05, 5.388899999999794e-05, 5.387500000000184e-05, 5.322200000000207e-05, 5.408299999999991e-05, 5.3971999999999354e-05, 5.4027999999997633e-05, 5.35280000000006e-05, 5.338900000000091e-05, 5.376400000000128e-05, 5.397299999999883e-05, 5.326400000000078e-05, 5.359800000000192e-05, 5.337499999999787e-05]</msg>
<status status="PASS" starttime="20201115 23:01:13.603" endtime="20201115 23:01:13.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.599" endtime="20201115 23:01:13.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.613" endtime="20201115 23:01:13.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.617" endtime="20201115 23:01:13.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.615" endtime="20201115 23:01:13.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.611" endtime="20201115 23:01:13.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.243" endtime="20201115 23:01:13.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.241" endtime="20201115 23:01:13.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.240" endtime="20201115 23:01:13.638"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.640" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.648" endtime="20201115 23:01:13.666"></status>
</kw>
<msg timestamp="20201115 23:01:13.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.647" endtime="20201115 23:01:13.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.668" endtime="20201115 23:01:13.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.670" endtime="20201115 23:01:13.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.644" endtime="20201115 23:01:13.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.642" endtime="20201115 23:01:13.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.679" endtime="20201115 23:01:13.965"></status>
</kw>
<msg timestamp="20201115 23:01:13.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.677" endtime="20201115 23:01:13.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:13.969" endtime="20201115 23:01:13.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.978" endtime="20201115 23:01:13.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.675" endtime="20201115 23:01:13.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.673" endtime="20201115 23:01:13.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:13.984" level="INFO">${RESULT} = [{'time': 0.022094222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.504099999999873e-05, 'source_diff': 5.504099999999873e-05}, {'time': 0.022151222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:13.981" endtime="20201115 23:01:13.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.000" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:13.986" endtime="20201115 23:01:14.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.004" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.003" endtime="20201115 23:01:14.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.007" level="INFO">VALUE: [5.504099999999873e-05, 5.465300000000173e-05, 5.51809999999979e-05, 5.4458000000000284e-05, 5.519500000000094e-05, 5.438899999999844e-05, 5.469500000000044e-05, 5.512500000000309e-05, 5.434699999999973e-05, 5.46670000000013e-05, 5.469499999999697e-05, 5.4387999999998965e-05, 5.470900000000001e-05, 5.509699999999701e-05, 5.45410000000017e-05, 5.437499999999887e-05, 5.431899999999712e-05, 5.50549999999983e-05, 5.4527999999998134e-05, 5.475000000000271e-05, 5.5027999999998634e-05, 5.431900000000059e-05, 5.458299999999694e-05, 5.520900000000051e-05, 5.468100000000087e-05, 5.508300000000091e-05, 5.425000000000221e-05, 5.461099999999955e-05, 5.438899999999844e-05, 5.462500000000259e-05, 5.458399999999988e-05, 5.479200000000142e-05, 5.509699999999701e-05, 5.506899999999787e-05, 5.4458000000000284e-05, 5.4499999999998994e-05, 5.430499999999755e-05, 5.5013999999999064e-05, 5.45280000000016e-05, 5.515299999999876e-05, 5.482000000000056e-05, 5.4985999999999924e-05, 5.469500000000044e-05, 5.43609999999993e-05, 5.4791999999997953e-05, 5.5194000000001464e-05, 5.500000000000296e-05, 5.458399999999988e-05, 5.469500000000044e-05, 5.423700000000212e-05]</msg>
<status status="PASS" starttime="20201115 23:01:14.005" endtime="20201115 23:01:14.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.001" endtime="20201115 23:01:14.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.010" endtime="20201115 23:01:14.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.013" endtime="20201115 23:01:14.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.012" endtime="20201115 23:01:14.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.008" endtime="20201115 23:01:14.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.641" endtime="20201115 23:01:14.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.639" endtime="20201115 23:01:14.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.638" endtime="20201115 23:01:14.034"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.037" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.045" endtime="20201115 23:01:14.061"></status>
</kw>
<msg timestamp="20201115 23:01:14.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.043" endtime="20201115 23:01:14.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.062" endtime="20201115 23:01:14.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.065" endtime="20201115 23:01:14.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.041" endtime="20201115 23:01:14.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.039" endtime="20201115 23:01:14.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.074" endtime="20201115 23:01:14.359"></status>
</kw>
<msg timestamp="20201115 23:01:14.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.072" endtime="20201115 23:01:14.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.363" endtime="20201115 23:01:14.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.372" endtime="20201115 23:01:14.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.070" endtime="20201115 23:01:14.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.068" endtime="20201115 23:01:14.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.379" level="INFO">${RESULT} = [{'time': 0.021982806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.616699999999933e-05, 'source_diff': 5.616699999999933e-05}, {'time': 0.022042806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:14.375" endtime="20201115 23:01:14.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.392" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:14.380" endtime="20201115 23:01:14.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.396" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.395" endtime="20201115 23:01:14.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.399" level="INFO">VALUE: [5.616699999999933e-05, 5.537499999999987e-05, 5.609800000000095e-05, 5.591700000000255e-05, 5.607000000000181e-05, 5.5415999999999105e-05, 5.53610000000003e-05, 5.559700000000098e-05, 5.5736000000000674e-05, 5.563899999999969e-05, 5.558299999999794e-05, 5.6027999999999634e-05, 5.5721999999997635e-05, 5.6041999999999204e-05, 5.5513999999999564e-05, 5.606999999999834e-05, 5.566699999999883e-05, 5.615299999999976e-05, 5.5415999999999105e-05, 5.593099999999865e-05, 5.6014000000000064e-05, 5.611200000000052e-05, 5.587500000000037e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.531899999999812e-05, 5.5708000000001534e-05, 5.5291999999998453e-05, 5.556900000000184e-05, 5.583299999999819e-05, 5.558300000000141e-05, 5.569500000000144e-05, 5.61809999999989e-05, 5.558299999999794e-05, 5.5777999999999384e-05, 5.545900000000076e-05, 5.5651999999999785e-05, 5.593099999999865e-05, 5.58480000000007e-05, 5.5263999999999314e-05, 5.5971999999997885e-05, 5.606899999999887e-05, 5.5513999999999564e-05, 5.533300000000116e-05, 5.5527999999999134e-05, 5.5249999999999744e-05, 5.5791999999998954e-05, 5.6000000000000494e-05, 5.609700000000148e-05, 5.5791999999998954e-05]</msg>
<status status="PASS" starttime="20201115 23:01:14.398" endtime="20201115 23:01:14.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.393" endtime="20201115 23:01:14.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.402" endtime="20201115 23:01:14.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.405" endtime="20201115 23:01:14.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.404" endtime="20201115 23:01:14.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.400" endtime="20201115 23:01:14.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.037" endtime="20201115 23:01:14.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.035" endtime="20201115 23:01:14.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.035" endtime="20201115 23:01:14.427"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.437" endtime="20201115 23:01:14.454"></status>
</kw>
<msg timestamp="20201115 23:01:14.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.436" endtime="20201115 23:01:14.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.456" endtime="20201115 23:01:14.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.458" endtime="20201115 23:01:14.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.433" endtime="20201115 23:01:14.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.431" endtime="20201115 23:01:14.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.468" endtime="20201115 23:01:14.753"></status>
</kw>
<msg timestamp="20201115 23:01:14.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.466" endtime="20201115 23:01:14.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.757" endtime="20201115 23:01:14.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.765" endtime="20201115 23:01:14.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.463" endtime="20201115 23:01:14.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.462" endtime="20201115 23:01:14.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:14.772" level="INFO">${RESULT} = [{'time': 0.022770722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6985999999998455e-05, 'source_diff': 5.6985999999998455e-05}, {'time': 0.022835708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:14.769" endtime="20201115 23:01:14.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:14.785" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:14.773" endtime="20201115 23:01:14.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.790" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:14.789" endtime="20201115 23:01:14.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.792" level="INFO">VALUE: [5.6985999999998455e-05, 5.6721999999998635e-05, 5.631900000000259e-05, 5.690300000000051e-05, 5.656899999999937e-05, 5.666699999999983e-05, 5.636099999999783e-05, 5.68749999999979e-05, 5.6750000000001244e-05, 5.6985999999998455e-05, 5.7013999999997594e-05, 5.694500000000269e-05, 5.659799999999798e-05, 5.68619999999978e-05, 5.6750000000001244e-05, 5.615300000000323e-05, 5.709700000000248e-05, 5.6736000000001674e-05, 5.65549999999998e-05, 5.7180000000000425e-05, 5.6443999999999245e-05, 5.7014000000001064e-05, 5.705499999999683e-05, 5.706899999999987e-05, 5.708299999999944e-05, 5.708299999999944e-05, 5.6805999999999524e-05, 5.6805999999999524e-05, 5.6500000000000994e-05, 5.663900000000069e-05, 5.6971999999998885e-05, 5.659699999999851e-05, 5.7028000000000634e-05, 5.6652000000000785e-05, 5.629200000000292e-05, 5.6250000000000744e-05, 5.633300000000216e-05, 5.6458000000002284e-05, 5.6264000000000314e-05, 5.7069999999999343e-05, 5.690300000000051e-05, 5.6528000000000134e-05, 5.7055999999999774e-05, 5.63610000000013e-05, 5.6957999999999315e-05, 5.694500000000269e-05, 5.6319999999998593e-05, 5.6541999999999704e-05, 5.630499999999955e-05, 5.6972000000002354e-05]</msg>
<status status="PASS" starttime="20201115 23:01:14.791" endtime="20201115 23:01:14.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.786" endtime="20201115 23:01:14.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.795" endtime="20201115 23:01:14.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:14.799" endtime="20201115 23:01:14.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.797" endtime="20201115 23:01:14.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.794" endtime="20201115 23:01:14.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.430" endtime="20201115 23:01:14.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.428" endtime="20201115 23:01:14.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.427" endtime="20201115 23:01:14.820"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.822" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.830" endtime="20201115 23:01:14.847"></status>
</kw>
<msg timestamp="20201115 23:01:14.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.829" endtime="20201115 23:01:14.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:14.849" endtime="20201115 23:01:14.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.852" endtime="20201115 23:01:14.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.826" endtime="20201115 23:01:14.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.824" endtime="20201115 23:01:14.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:14.861" endtime="20201115 23:01:15.148"></status>
</kw>
<msg timestamp="20201115 23:01:15.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:14.860" endtime="20201115 23:01:15.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.152" endtime="20201115 23:01:15.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.160" endtime="20201115 23:01:15.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.857" endtime="20201115 23:01:15.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.855" endtime="20201115 23:01:15.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.167" level="INFO">${RESULT} = [{'time': 0.021914514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8056000000000774e-05, 'source_diff': 5.8056000000000774e-05}, {'time': 0.021979514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:15.163" endtime="20201115 23:01:15.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.181" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:15.168" endtime="20201115 23:01:15.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.185" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.184" endtime="20201115 23:01:15.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.188" level="INFO">VALUE: [5.8056000000000774e-05, 5.7735999999999205e-05, 5.7306000000000024e-05, 5.7471999999999385e-05, 5.766700000000083e-05, 5.770900000000301e-05, 5.783300000000019e-05, 5.7944000000000745e-05, 5.7985999999999455e-05, 5.7735999999999205e-05, 5.762500000000212e-05, 5.761099999999908e-05, 5.729100000000098e-05, 5.783300000000019e-05, 5.786099999999933e-05, 5.7777999999997914e-05, 5.738900000000144e-05, 5.8013999999998594e-05, 5.7292000000000454e-05, 5.73749999999984e-05, 5.794500000000022e-05, 5.790300000000151e-05, 5.723699999999818e-05, 5.795899999999979e-05, 5.8097999999999483e-05, 5.7999999999999025e-05, 5.7887999999998996e-05, 5.733299999999969e-05, 5.809700000000001e-05, 5.7930000000001175e-05, 5.7930000000001175e-05, 5.7708000000000065e-05, 5.784700000000323e-05, 5.8042000000001204e-05, 5.7792000000000954e-05, 5.809700000000001e-05, 5.7528000000001134e-05, 5.7763999999998344e-05, 5.816700000000133e-05, 5.78749999999989e-05, 5.741700000000058e-05, 5.761099999999908e-05, 5.7902000000002035e-05, 5.7735999999999205e-05, 5.73610000000023e-05, 5.7778000000001384e-05, 5.7542000000000704e-05, 5.7207999999999565e-05, 5.766700000000083e-05, 5.763899999999822e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.186" endtime="20201115 23:01:15.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.182" endtime="20201115 23:01:15.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.191" endtime="20201115 23:01:15.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.194" endtime="20201115 23:01:15.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.193" endtime="20201115 23:01:15.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.189" endtime="20201115 23:01:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.823" endtime="20201115 23:01:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.821" endtime="20201115 23:01:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.820" endtime="20201115 23:01:15.216"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.218" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.227" endtime="20201115 23:01:15.245"></status>
</kw>
<msg timestamp="20201115 23:01:15.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.225" endtime="20201115 23:01:15.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.246" endtime="20201115 23:01:15.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.249" endtime="20201115 23:01:15.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.222" endtime="20201115 23:01:15.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.220" endtime="20201115 23:01:15.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.258" endtime="20201115 23:01:15.544"></status>
</kw>
<msg timestamp="20201115 23:01:15.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023603806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.256" endtime="20201115 23:01:15.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023603806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.548" endtime="20201115 23:01:15.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.556" endtime="20201115 23:01:15.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.254" endtime="20201115 23:01:15.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.252" endtime="20201115 23:01:15.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.563" level="INFO">${RESULT} = [{'time': 0.023662792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8985999999996985e-05, 'source_diff': 5.8985999999996985e-05}, {'time': 0.023730792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:15.559" endtime="20201115 23:01:15.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.577" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:15.564" endtime="20201115 23:01:15.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.582" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.581" endtime="20201115 23:01:15.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.584" level="INFO">VALUE: [5.8985999999996985e-05, 5.838899999999897e-05, 5.8527999999998664e-05, 5.848699999999943e-05, 5.8263999999998844e-05, 5.834700000000026e-05, 5.9193999999998526e-05, 5.88749999999999e-05, 5.8707999999997595e-05, 5.8499999999999525e-05, 5.831900000000112e-05, 5.8736000000000205e-05, 5.865300000000226e-05, 5.912500000000015e-05, 5.920900000000104e-05, 5.8528000000002134e-05, 5.8722000000000635e-05, 5.884699999999729e-05, 5.8513999999999095e-05, 5.893100000000165e-05, 5.8570000000000844e-05, 5.8278000000001884e-05, 5.8749999999999775e-05, 5.88619999999998e-05, 5.8249999999999275e-05, 5.8471999999996915e-05, 5.840299999999854e-05, 5.85689999999979e-05, 5.8429999999998206e-05, 5.843099999999768e-05, 5.8749999999999775e-05, 5.8722000000000635e-05, 5.8458000000000815e-05, 5.841699999999811e-05, 5.8806000000001524e-05, 5.8306000000001024e-05, 5.8763999999999345e-05, 5.912500000000015e-05, 5.858300000000094e-05, 5.904099999999926e-05, 5.873699999999968e-05, 5.829099999999851e-05, 5.8249999999999275e-05, 5.8736000000000205e-05, 5.879100000000248e-05, 5.8957999999997845e-05, 5.840300000000201e-05, 5.8929999999998706e-05, 5.8528000000002134e-05, 5.8722000000000635e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.583" endtime="20201115 23:01:15.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.578" endtime="20201115 23:01:15.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.587" endtime="20201115 23:01:15.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.591" endtime="20201115 23:01:15.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.589" endtime="20201115 23:01:15.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.586" endtime="20201115 23:01:15.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.219" endtime="20201115 23:01:15.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.217" endtime="20201115 23:01:15.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.216" endtime="20201115 23:01:15.613"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.615" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.623" endtime="20201115 23:01:15.641"></status>
</kw>
<msg timestamp="20201115 23:01:15.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.621" endtime="20201115 23:01:15.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.642" endtime="20201115 23:01:15.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.645" endtime="20201115 23:01:15.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.619" endtime="20201115 23:01:15.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.617" endtime="20201115 23:01:15.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.654" endtime="20201115 23:01:15.939"></status>
</kw>
<msg timestamp="20201115 23:01:15.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.652" endtime="20201115 23:01:15.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.943" endtime="20201115 23:01:15.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.951" endtime="20201115 23:01:15.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.650" endtime="20201115 23:01:15.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.648" endtime="20201115 23:01:15.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.958" level="INFO">${RESULT} = [{'time': 0.021952417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.936099999999736e-05, 'source_diff': 5.936099999999736e-05}, {'time': 0.022021375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:15.954" endtime="20201115 23:01:15.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.971" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:15.959" endtime="20201115 23:01:15.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.975" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.974" endtime="20201115 23:01:15.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.978" level="INFO">VALUE: [5.936099999999736e-05, 5.9527999999999665e-05, 5.968099999999893e-05, 5.965299999999979e-05, 5.9514000000000095e-05, 5.9486000000000955e-05, 5.945900000000129e-05, 5.943099999999868e-05, 5.972300000000111e-05, 5.997300000000136e-05, 5.96810000000024e-05, 5.947299999999739e-05, 5.940299999999954e-05, 5.9402000000000066e-05, 5.962500000000065e-05, 5.9916000000000136e-05, 6.008299999999897e-05, 5.9722000000001635e-05, 6.0098000000001484e-05, 5.9986000000001455e-05, 5.941699999999911e-05, 5.961100000000108e-05, 6.0028000000000165e-05, 6.0028000000000165e-05, 5.9847999999997764e-05, 5.995899999999832e-05, 5.96949999999985e-05, 5.9679999999999456e-05, 6.0208000000002565e-05, 5.9527999999999665e-05, 5.9888999999997e-05, 5.959700000000151e-05, 5.931899999999865e-05, 5.9194000000001995e-05, 5.940299999999954e-05, 5.9735999999997735e-05, 5.9514000000000095e-05, 6.0055999999999304e-05, 5.9334000000001164e-05, 6.0014000000000595e-05, 5.9834000000001664e-05, 5.9848000000001234e-05, 5.9750000000000775e-05, 5.948700000000043e-05, 6.012500000000115e-05, 5.9722000000001635e-05, 5.955499999999933e-05, 5.9764000000000345e-05, 5.958299999999847e-05, 5.9208000000001565e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.977" endtime="20201115 23:01:15.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.972" endtime="20201115 23:01:15.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.981" endtime="20201115 23:01:15.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.985" endtime="20201115 23:01:16.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.983" endtime="20201115 23:01:16.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.980" endtime="20201115 23:01:16.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.616" endtime="20201115 23:01:16.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.614" endtime="20201115 23:01:16.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.613" endtime="20201115 23:01:16.006"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.008" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.017" endtime="20201115 23:01:16.035"></status>
</kw>
<msg timestamp="20201115 23:01:16.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.015" endtime="20201115 23:01:16.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.036" endtime="20201115 23:01:16.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.039" endtime="20201115 23:01:16.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.012" endtime="20201115 23:01:16.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.010" endtime="20201115 23:01:16.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.048" endtime="20201115 23:01:16.334"></status>
</kw>
<msg timestamp="20201115 23:01:16.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.046" endtime="20201115 23:01:16.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.338" endtime="20201115 23:01:16.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.346" endtime="20201115 23:01:16.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.043" endtime="20201115 23:01:16.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.042" endtime="20201115 23:01:16.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.353" level="INFO">${RESULT} = [{'time': 0.022105083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.08750000000019e-05, 'source_diff': 6.08750000000019e-05}, {'time': 0.022173083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:16.350" endtime="20201115 23:01:16.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.366" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:16.354" endtime="20201115 23:01:16.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.371" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.370" endtime="20201115 23:01:16.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.374" level="INFO">VALUE: [6.08750000000019e-05, 6.0666000000000886e-05, 6.111099999999911e-05, 6.10690000000004e-05, 6.0721999999999166e-05, 6.0764000000001345e-05, 6.106999999999987e-05, 6.094499999999975e-05, 6.0527999999997195e-05, 6.062499999999818e-05, 6.0819999999999624e-05, 6.043099999999968e-05, 6.0612000000001554e-05, 6.091700000000061e-05, 6.0902000000001566e-05, 6.104100000000126e-05, 6.115200000000182e-05, 6.116599999999792e-05, 6.0721999999999166e-05, 6.0944000000000276e-05, 6.031899999999965e-05, 6.041700000000011e-05, 6.0806000000000054e-05, 6.094499999999975e-05, 6.0514000000001095e-05, 6.0236000000001705e-05, 6.112499999999868e-05, 6.040299999999707e-05, 6.0528000000000665e-05, 6.0305999999999554e-05, 6.0319999999999124e-05, 6.088799999999853e-05, 6.0972000000002885e-05, 6.0665999999997416e-05, 6.059700000000251e-05, 6.0944000000000276e-05, 6.0513999999997625e-05, 6.086099999999886e-05, 6.080500000000058e-05, 6.083299999999972e-05, 6.068099999999993e-05, 6.038900000000097e-05, 6.0569999999999374e-05, 6.0707999999999596e-05, 6.0264000000000845e-05, 6.06949999999995e-05, 6.079100000000101e-05, 6.104200000000073e-05, 6.079100000000101e-05, 6.033299999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.372" endtime="20201115 23:01:16.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.367" endtime="20201115 23:01:16.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.377" endtime="20201115 23:01:16.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.380" endtime="20201115 23:01:16.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.379" endtime="20201115 23:01:16.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.375" endtime="20201115 23:01:16.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.009" endtime="20201115 23:01:16.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.007" endtime="20201115 23:01:16.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.006" endtime="20201115 23:01:16.402"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.404" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.412" endtime="20201115 23:01:16.429"></status>
</kw>
<msg timestamp="20201115 23:01:16.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.410" endtime="20201115 23:01:16.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.431" endtime="20201115 23:01:16.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.433" endtime="20201115 23:01:16.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.408" endtime="20201115 23:01:16.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.406" endtime="20201115 23:01:16.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.442" endtime="20201115 23:01:16.728"></status>
</kw>
<msg timestamp="20201115 23:01:16.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.440" endtime="20201115 23:01:16.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.732" endtime="20201115 23:01:16.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.740" endtime="20201115 23:01:16.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.438" endtime="20201115 23:01:16.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.436" endtime="20201115 23:01:16.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.747" level="INFO">${RESULT} = [{'time': 0.021932139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.162499999999918e-05, 'source_diff': 6.162499999999918e-05}, {'time': 0.022002167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:16.744" endtime="20201115 23:01:16.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.761" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:16.748" endtime="20201115 23:01:16.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.765" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.764" endtime="20201115 23:01:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.768" level="INFO">VALUE: [6.162499999999918e-05, 6.197299999999989e-05, 6.182000000000062e-05, 6.2195000000001e-05, 6.202800000000216e-05, 6.129199999999752e-05, 6.17499999999993e-05, 6.204099999999879e-05, 6.191600000000214e-05, 6.129100000000151e-05, 6.148600000000295e-05, 6.208300000000097e-05, 6.176400000000234e-05, 6.227700000000294e-05, 6.205599999999784e-05, 6.193100000000118e-05, 6.144500000000025e-05, 6.173599999999974e-05, 6.168100000000093e-05, 6.2195000000001e-05, 6.195900000000032e-05, 6.184700000000029e-05, 6.209700000000054e-05, 6.184700000000029e-05, 6.141600000000164e-05, 6.204099999999879e-05, 6.219400000000153e-05, 6.177800000000191e-05, 6.202800000000216e-05, 6.204200000000173e-05, 6.149999999999906e-05, 6.145899999999982e-05, 6.166699999999789e-05, 6.187499999999943e-05, 6.162499999999918e-05, 6.173699999999921e-05, 6.177700000000244e-05, 6.132000000000012e-05, 6.172299999999964e-05, 6.184700000000029e-05, 6.131900000000065e-05, 6.17080000000006e-05, 6.14019999999986e-05, 6.179200000000148e-05, 6.154099999999829e-05, 6.20560000000013e-05, 6.17360000000032e-05, 6.204199999999827e-05, 6.195800000000085e-05, 6.143099999999721e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.766" endtime="20201115 23:01:16.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.762" endtime="20201115 23:01:16.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.771" endtime="20201115 23:01:16.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.774" endtime="20201115 23:01:16.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.773" endtime="20201115 23:01:16.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.769" endtime="20201115 23:01:16.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.404" endtime="20201115 23:01:16.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.403" endtime="20201115 23:01:16.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.402" endtime="20201115 23:01:16.795"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.798" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.806" endtime="20201115 23:01:16.823"></status>
</kw>
<msg timestamp="20201115 23:01:16.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.804" endtime="20201115 23:01:16.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.824" endtime="20201115 23:01:16.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.827" endtime="20201115 23:01:16.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.802" endtime="20201115 23:01:16.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.800" endtime="20201115 23:01:16.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.836" endtime="20201115 23:01:17.122"></status>
</kw>
<msg timestamp="20201115 23:01:17.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:16.834" endtime="20201115 23:01:17.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054167, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:17.126" endtime="20201115 23:01:17.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.135" endtime="20201115 23:01:17.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.832" endtime="20201115 23:01:17.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.830" endtime="20201115 23:01:17.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.141" level="INFO">${RESULT} = [{'time': 0.022054167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.266699999999889e-05, 'source_diff': 6.266699999999889e-05}, {'time': 0.022122167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.138" endtime="20201115 23:01:17.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.156" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:17.142" endtime="20201115 23:01:17.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.161" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.160" endtime="20201115 23:01:17.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.163" level="INFO">VALUE: [6.266699999999889e-05, 6.241700000000211e-05, 6.32089999999981e-05, 6.230500000000208e-05, 6.270799999999813e-05, 6.281899999999868e-05, 6.29020000000001e-05, 6.276399999999988e-05, 6.223600000000024e-05, 6.276399999999988e-05, 6.236100000000036e-05, 6.318099999999896e-05, 6.270799999999813e-05, 6.254199999999877e-05, 6.259700000000104e-05, 6.251399999999963e-05, 6.266700000000236e-05, 6.26950000000015e-05, 6.248699999999996e-05, 6.254199999999877e-05, 6.286099999999739e-05, 6.286099999999739e-05, 6.251399999999963e-05, 6.231899999999818e-05, 6.261099999999714e-05, 6.281899999999868e-05, 6.273600000000074e-05, 6.30829999999985e-05, 6.236100000000036e-05, 6.320900000000157e-05, 6.243100000000168e-05, 6.229199999999852e-05, 6.266699999999889e-05, 6.276399999999988e-05, 6.317999999999949e-05, 6.254100000000276e-05, 6.27500000000003e-05, 6.284700000000129e-05, 6.32080000000021e-05, 6.263899999999975e-05, 6.24439999999983e-05, 6.299999999999709e-05, 6.261100000000061e-05, 6.277799999999945e-05, 6.226399999999938e-05, 6.222200000000067e-05, 6.291700000000261e-05, 6.293100000000218e-05, 6.237499999999993e-05, 6.259800000000051e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.162" endtime="20201115 23:01:17.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.157" endtime="20201115 23:01:17.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.166" endtime="20201115 23:01:17.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.170" endtime="20201115 23:01:17.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.168" endtime="20201115 23:01:17.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.165" endtime="20201115 23:01:17.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.798" endtime="20201115 23:01:17.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.797" endtime="20201115 23:01:17.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.796" endtime="20201115 23:01:17.191"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.193" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.202" endtime="20201115 23:01:17.219"></status>
</kw>
<msg timestamp="20201115 23:01:17.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.200" endtime="20201115 23:01:17.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.221" endtime="20201115 23:01:17.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.223" endtime="20201115 23:01:17.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.197" endtime="20201115 23:01:17.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.195" endtime="20201115 23:01:17.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.233" endtime="20201115 23:01:17.519"></status>
</kw>
<msg timestamp="20201115 23:01:17.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.231" endtime="20201115 23:01:17.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022829639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.523" endtime="20201115 23:01:17.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.531" endtime="20201115 23:01:17.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.228" endtime="20201115 23:01:17.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.227" endtime="20201115 23:01:17.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.538" level="INFO">${RESULT} = [{'time': 0.022893486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.384700000000229e-05, 'source_diff': 6.384700000000229e-05}, {'time': 0.022964528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.534" endtime="20201115 23:01:17.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.551" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:17.539" endtime="20201115 23:01:17.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.555" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.554" endtime="20201115 23:01:17.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.558" level="INFO">VALUE: [6.384700000000229e-05, 6.420900000000257e-05, 6.336099999999789e-05, 6.32500000000008e-05, 6.40829999999995e-05, 6.354199999999977e-05, 6.366699999999989e-05, 6.394499999999928e-05, 6.33890000000005e-05, 6.366699999999989e-05, 6.399999999999809e-05, 6.395799999999938e-05, 6.367999999999999e-05, 6.348599999999802e-05, 6.413900000000125e-05, 6.418000000000049e-05, 6.372200000000217e-05, 6.33890000000005e-05, 6.37500000000013e-05, 6.329199999999952e-05, 6.359699999999857e-05, 6.380599999999959e-05, 6.412499999999821e-05, 6.333399999999823e-05, 6.379200000000002e-05, 6.383299999999925e-05, 6.359800000000151e-05, 6.388800000000153e-05, 6.329100000000004e-05, 6.35280000000002e-05, 6.342999999999974e-05, 6.356899999999943e-05, 6.418000000000049e-05, 6.380600000000305e-05, 6.372200000000217e-05, 6.37080000000026e-05, 6.40280000000007e-05, 6.3582999999999e-05, 6.394499999999928e-05, 6.366699999999989e-05, 6.380599999999959e-05, 6.33340000000017e-05, 6.356899999999943e-05, 6.373599999999827e-05, 6.399999999999809e-05, 6.361099999999814e-05, 6.351400000000063e-05, 6.37080000000026e-05, 6.330499999999961e-05, 6.40829999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.556" endtime="20201115 23:01:17.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.552" endtime="20201115 23:01:17.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.561" endtime="20201115 23:01:17.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.564" endtime="20201115 23:01:17.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.563" endtime="20201115 23:01:17.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.559" endtime="20201115 23:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.194" endtime="20201115 23:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.192" endtime="20201115 23:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.191" endtime="20201115 23:01:17.586"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.596" endtime="20201115 23:01:17.613"></status>
</kw>
<msg timestamp="20201115 23:01:17.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.594" endtime="20201115 23:01:17.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.614" endtime="20201115 23:01:17.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.617" endtime="20201115 23:01:17.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.592" endtime="20201115 23:01:17.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.590" endtime="20201115 23:01:17.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.626" endtime="20201115 23:01:17.911"></status>
</kw>
<msg timestamp="20201115 23:01:17.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.625" endtime="20201115 23:01:17.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.915" endtime="20201115 23:01:17.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.924" endtime="20201115 23:01:17.925"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.622" endtime="20201115 23:01:17.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.621" endtime="20201115 23:01:17.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.930" level="INFO">${RESULT} = [{'time': 0.021932833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.487499999999896e-05, 'source_diff': 6.487499999999896e-05}, {'time': 0.022001847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.927" endtime="20201115 23:01:17.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.943" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:17.931" endtime="20201115 23:01:17.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.948" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.947" endtime="20201115 23:01:17.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.950" level="INFO">VALUE: [6.487499999999896e-05, 6.437500000000193e-05, 6.481899999999721e-05, 6.42500000000018e-05, 6.42219999999992e-05, 6.493100000000071e-05, 6.449999999999859e-05, 6.483300000000025e-05, 6.424999999999834e-05, 6.431999999999966e-05, 6.518100000000096e-05, 6.45280000000012e-05, 6.455600000000034e-05, 6.454099999999782e-05, 6.486099999999939e-05, 6.501400000000213e-05, 6.441600000000117e-05, 6.450000000000206e-05, 6.473599999999927e-05, 6.520800000000063e-05, 6.4889000000002e-05, 6.455600000000034e-05, 6.430599999999662e-05, 6.45280000000012e-05, 6.42089999999991e-05, 6.461099999999914e-05, 6.431999999999966e-05, 6.50700000000004e-05, 6.429200000000052e-05, 6.508299999999703e-05, 6.434699999999932e-05, 6.429200000000052e-05, 6.49440000000008e-05, 6.437499999999846e-05, 6.429199999999705e-05, 6.466700000000089e-05, 6.520800000000063e-05, 6.473599999999927e-05, 6.479200000000102e-05, 6.504200000000127e-05, 6.488799999999906e-05, 6.487499999999896e-05, 6.436100000000236e-05, 6.493000000000124e-05, 6.427800000000095e-05, 6.429100000000104e-05, 6.516700000000139e-05, 6.42219999999992e-05, 6.515300000000182e-05, 6.500000000000256e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.949" endtime="20201115 23:01:17.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.944" endtime="20201115 23:01:17.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.953" endtime="20201115 23:01:17.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.957" endtime="20201115 23:01:17.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.955" endtime="20201115 23:01:17.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.952" endtime="20201115 23:01:17.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.588" endtime="20201115 23:01:17.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.587" endtime="20201115 23:01:17.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.586" endtime="20201115 23:01:17.978"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.989" endtime="20201115 23:01:18.006"></status>
</kw>
<msg timestamp="20201115 23:01:18.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.987" endtime="20201115 23:01:18.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.008" endtime="20201115 23:01:18.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.010" endtime="20201115 23:01:18.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.984" endtime="20201115 23:01:18.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.982" endtime="20201115 23:01:18.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.019" endtime="20201115 23:01:18.307"></status>
</kw>
<msg timestamp="20201115 23:01:18.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.018" endtime="20201115 23:01:18.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.311" endtime="20201115 23:01:18.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.319" endtime="20201115 23:01:18.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.015" endtime="20201115 23:01:18.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.013" endtime="20201115 23:01:18.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.326" level="INFO">${RESULT} = [{'time': 0.022387708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.616599999999945e-05, 'source_diff': 6.616599999999945e-05}, {'time': 0.022460708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.322" endtime="20201115 23:01:18.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.339" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:18.327" endtime="20201115 23:01:18.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.343" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.342" endtime="20201115 23:01:18.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.346" level="INFO">VALUE: [6.616599999999945e-05, 6.544399999999784e-05, 6.579099999999907e-05, 6.573600000000027e-05, 6.577800000000245e-05, 6.598600000000052e-05, 6.524999999999934e-05, 6.524999999999934e-05, 6.598600000000052e-05, 6.583300000000125e-05, 6.565300000000232e-05, 6.615299999999935e-05, 6.572300000000017e-05, 6.593100000000171e-05, 6.548699999999949e-05, 6.530599999999762e-05, 6.554099999999882e-05, 6.587499999999996e-05, 6.554099999999882e-05, 6.569399999999809e-05, 6.602799999999923e-05, 6.530599999999762e-05, 6.616700000000239e-05, 6.548600000000002e-05, 6.625000000000034e-05, 6.566699999999842e-05, 6.605599999999837e-05, 6.530500000000161e-05, 6.577799999999898e-05, 6.545899999999688e-05, 6.57090000000006e-05, 6.562499999999971e-05, 6.613899999999978e-05, 6.57639999999994e-05, 6.574999999999984e-05, 6.566599999999895e-05, 6.605599999999837e-05, 6.583300000000125e-05, 6.579200000000202e-05, 6.613899999999978e-05, 6.574999999999984e-05, 6.544499999999731e-05, 6.611100000000064e-05, 6.538899999999903e-05, 6.606999999999794e-05, 6.531900000000118e-05, 6.5583000000001e-05, 6.59440000000018e-05, 6.54440000000013e-05, 6.60419999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.344" endtime="20201115 23:01:18.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.340" endtime="20201115 23:01:18.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.349" endtime="20201115 23:01:18.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.352" endtime="20201115 23:01:18.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.351" endtime="20201115 23:01:18.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.347" endtime="20201115 23:01:18.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.981" endtime="20201115 23:01:18.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.979" endtime="20201115 23:01:18.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.978" endtime="20201115 23:01:18.374"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.384" endtime="20201115 23:01:18.402"></status>
</kw>
<msg timestamp="20201115 23:01:18.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.383" endtime="20201115 23:01:18.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.404" endtime="20201115 23:01:18.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.406" endtime="20201115 23:01:18.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.380" endtime="20201115 23:01:18.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.378" endtime="20201115 23:01:18.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.416" endtime="20201115 23:01:18.702"></status>
</kw>
<msg timestamp="20201115 23:01:18.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.414" endtime="20201115 23:01:18.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.706" endtime="20201115 23:01:18.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.714" endtime="20201115 23:01:18.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.411" endtime="20201115 23:01:18.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.410" endtime="20201115 23:01:18.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.721" level="INFO">${RESULT} = [{'time': 0.022544861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.634699999999785e-05, 'source_diff': 6.634699999999785e-05}, {'time': 0.022620875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.718" endtime="20201115 23:01:18.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.736" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:18.722" endtime="20201115 23:01:18.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.740" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.739" endtime="20201115 23:01:18.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.743" level="INFO">VALUE: [6.634699999999785e-05, 6.677799999999998e-05, 6.67770000000005e-05, 6.688900000000053e-05, 6.640300000000307e-05, 6.675000000000084e-05, 6.720899999999863e-05, 6.702800000000023e-05, 6.622300000000067e-05, 6.629099999999957e-05, 6.715200000000088e-05, 6.681899999999921e-05, 6.62639999999999e-05, 6.709700000000207e-05, 6.62639999999999e-05, 6.659700000000157e-05, 6.680599999999912e-05, 6.666699999999942e-05, 6.684699999999835e-05, 6.641699999999917e-05, 6.643099999999874e-05, 6.683400000000173e-05, 6.683400000000173e-05, 6.679100000000007e-05, 6.649999999999712e-05, 6.636100000000089e-05, 6.64159999999997e-05, 6.669399999999909e-05, 6.651400000000016e-05, 6.633300000000175e-05, 6.686100000000139e-05, 6.719399999999959e-05, 6.67090000000016e-05, 6.709700000000207e-05, 6.672199999999823e-05, 6.659800000000105e-05, 6.679199999999955e-05, 6.648600000000102e-05, 6.692999999999977e-05, 6.67220000000017e-05, 6.631899999999871e-05, 6.623600000000077e-05, 6.638900000000003e-05, 6.67640000000004e-05, 6.706899999999946e-05, 6.651400000000016e-05, 6.623600000000077e-05, 6.694399999999934e-05, 6.652799999999973e-05, 6.636099999999742e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.741" endtime="20201115 23:01:18.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.737" endtime="20201115 23:01:18.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.751" endtime="20201115 23:01:18.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.755" endtime="20201115 23:01:18.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.753" endtime="20201115 23:01:18.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.750" endtime="20201115 23:01:18.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.377" endtime="20201115 23:01:18.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.375" endtime="20201115 23:01:18.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.374" endtime="20201115 23:01:18.776"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.779" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.787" endtime="20201115 23:01:18.804"></status>
</kw>
<msg timestamp="20201115 23:01:18.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.785" endtime="20201115 23:01:18.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.806" endtime="20201115 23:01:18.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.808" endtime="20201115 23:01:18.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.783" endtime="20201115 23:01:18.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.781" endtime="20201115 23:01:18.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.817" endtime="20201115 23:01:19.102"></status>
</kw>
<msg timestamp="20201115 23:01:19.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.816" endtime="20201115 23:01:19.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022996528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.107" endtime="20201115 23:01:19.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.115" endtime="20201115 23:01:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.813" endtime="20201115 23:01:19.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.812" endtime="20201115 23:01:19.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.121" level="INFO">${RESULT} = [{'time': 0.022996528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.768099999999999e-05, 'source_diff': 6.768099999999999e-05}, {'time': 0.023073611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.118" endtime="20201115 23:01:19.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.135" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:19.122" endtime="20201115 23:01:19.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.139" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.138" endtime="20201115 23:01:19.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.142" level="INFO">VALUE: [6.768099999999999e-05, 6.734700000000232e-05, 6.806900000000046e-05, 6.819500000000006e-05, 6.813899999999831e-05, 6.745799999999941e-05, 6.74160000000007e-05, 6.795799999999991e-05, 6.801400000000166e-05, 6.79169999999972e-05, 6.795799999999991e-05, 6.75969999999991e-05, 6.737500000000146e-05, 6.772199999999923e-05, 6.818100000000049e-05, 6.77359999999988e-05, 6.80839999999995e-05, 6.820899999999963e-05, 6.748700000000149e-05, 6.802699999999828e-05, 6.722199999999873e-05, 6.820800000000016e-05, 6.716600000000045e-05, 6.787499999999849e-05, 6.795799999999991e-05, 6.734700000000232e-05, 6.724999999999787e-05, 6.733299999999928e-05, 6.777800000000098e-05, 6.809799999999908e-05, 6.801399999999819e-05, 6.72640000000009e-05, 6.777799999999751e-05, 6.794499999999981e-05, 6.794399999999687e-05, 6.763900000000128e-05, 6.752699999999778e-05, 6.786099999999892e-05, 6.811099999999917e-05, 6.766700000000042e-05, 6.74030000000006e-05, 6.729200000000005e-05, 6.743099999999974e-05, 6.748599999999855e-05, 6.749999999999812e-05, 6.718099999999949e-05, 6.748600000000202e-05, 6.737499999999799e-05, 6.790200000000163e-05, 6.761099999999867e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.140" endtime="20201115 23:01:19.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.136" endtime="20201115 23:01:19.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.145" endtime="20201115 23:01:19.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.149" endtime="20201115 23:01:19.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.147" endtime="20201115 23:01:19.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.144" endtime="20201115 23:01:19.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.779" endtime="20201115 23:01:19.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.777" endtime="20201115 23:01:19.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.777" endtime="20201115 23:01:19.170"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.172" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.180" endtime="20201115 23:01:19.198"></status>
</kw>
<msg timestamp="20201115 23:01:19.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.179" endtime="20201115 23:01:19.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.199" endtime="20201115 23:01:19.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.201" endtime="20201115 23:01:19.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.176" endtime="20201115 23:01:19.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.174" endtime="20201115 23:01:19.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.211" endtime="20201115 23:01:19.497"></status>
</kw>
<msg timestamp="20201115 23:01:19.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.209" endtime="20201115 23:01:19.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.502" endtime="20201115 23:01:19.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.510" endtime="20201115 23:01:19.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.206" endtime="20201115 23:01:19.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.205" endtime="20201115 23:01:19.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.517" level="INFO">${RESULT} = [{'time': 0.022072583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.886099999999992e-05, 'source_diff': 6.886099999999992e-05}, {'time': 0.022148569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.513" endtime="20201115 23:01:19.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.530" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:19.518" endtime="20201115 23:01:19.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.535" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.534" endtime="20201115 23:01:19.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.537" level="INFO">VALUE: [6.886099999999992e-05, 6.843000000000127e-05, 6.912499999999974e-05, 6.883299999999731e-05, 6.850000000000259e-05, 6.876399999999894e-05, 6.869400000000109e-05, 6.843100000000074e-05, 6.897200000000048e-05, 6.883300000000078e-05, 6.825000000000234e-05, 6.920900000000063e-05, 6.827800000000148e-05, 6.907000000000094e-05, 6.840299999999813e-05, 6.834699999999985e-05, 6.87359999999998e-05, 6.826399999999844e-05, 6.85420000000013e-05, 6.913900000000278e-05, 6.895800000000091e-05, 6.84030000000016e-05, 6.888899999999906e-05, 6.85420000000013e-05, 6.84169999999977e-05, 6.90559999999979e-05, 6.90840000000005e-05, 6.866699999999795e-05, 6.905500000000189e-05, 6.840299999999813e-05, 6.908300000000103e-05, 6.870800000000066e-05, 6.827799999999801e-05, 6.855500000000139e-05, 6.833300000000028e-05, 6.905600000000137e-05, 6.904199999999833e-05, 6.82359999999993e-05, 6.873700000000274e-05, 6.898599999999658e-05, 6.915299999999888e-05, 6.92230000000002e-05, 6.84299999999978e-05, 6.873600000000327e-05, 6.874999999999937e-05, 6.898600000000005e-05, 6.874999999999937e-05, 6.918100000000149e-05, 6.82220000000032e-05, 6.833399999999976e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.536" endtime="20201115 23:01:19.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.531" endtime="20201115 23:01:19.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.540" endtime="20201115 23:01:19.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.544" endtime="20201115 23:01:19.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.542" endtime="20201115 23:01:19.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.539" endtime="20201115 23:01:19.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.173" endtime="20201115 23:01:19.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.171" endtime="20201115 23:01:19.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.170" endtime="20201115 23:01:19.565"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.575" endtime="20201115 23:01:19.594"></status>
</kw>
<msg timestamp="20201115 23:01:19.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.574" endtime="20201115 23:01:19.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.595" endtime="20201115 23:01:19.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.598" endtime="20201115 23:01:19.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.571" endtime="20201115 23:01:19.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.569" endtime="20201115 23:01:19.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.607" endtime="20201115 23:01:19.892"></status>
</kw>
<msg timestamp="20201115 23:01:19.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.605" endtime="20201115 23:01:19.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.897" endtime="20201115 23:01:19.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.905" endtime="20201115 23:01:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.603" endtime="20201115 23:01:19.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.601" endtime="20201115 23:01:19.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.912" level="INFO">${RESULT} = [{'time': 0.022103569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.952699999999978e-05, 'source_diff': 6.952699999999978e-05}, {'time': 0.022175542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.908" endtime="20201115 23:01:19.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.925" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:19.913" endtime="20201115 23:01:19.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.929" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.928" endtime="20201115 23:01:19.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.932" level="INFO">VALUE: [6.952699999999978e-05, 6.924999999999987e-05, 6.963800000000034e-05, 6.975000000000037e-05, 7.005499999999942e-05, 6.972200000000123e-05, 6.99169999999992e-05, 7.017999999999955e-05, 7.018099999999902e-05, 6.95559999999984e-05, 6.958299999999806e-05, 6.933300000000128e-05, 6.936100000000042e-05, 7.019499999999859e-05, 7.002799999999976e-05, 6.995800000000191e-05, 6.93619999999999e-05, 6.945799999999794e-05, 6.975000000000037e-05, 6.961100000000067e-05, 6.972200000000123e-05, 7.004099999999985e-05, 6.987500000000049e-05, 7.012500000000074e-05, 6.92640000000029e-05, 6.969499999999809e-05, 6.981999999999822e-05, 6.976399999999994e-05, 6.952699999999978e-05, 6.961100000000067e-05, 7.011100000000117e-05, 6.924999999999987e-05, 6.983399999999779e-05, 6.973599999999733e-05, 6.951300000000021e-05, 6.972199999999776e-05, 7.001400000000019e-05, 6.936100000000042e-05, 6.983299999999831e-05, 6.958299999999806e-05, 7.019399999999912e-05, 6.979199999999908e-05, 7.008399999999804e-05, 6.965199999999991e-05, 6.965299999999938e-05, 6.97230000000007e-05, 6.924999999999987e-05, 6.977700000000003e-05, 6.956899999999849e-05, 6.97909999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.931" endtime="20201115 23:01:19.932"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.926" endtime="20201115 23:01:19.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.935" endtime="20201115 23:01:19.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.938" endtime="20201115 23:01:19.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.937" endtime="20201115 23:01:19.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.933" endtime="20201115 23:01:19.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.568" endtime="20201115 23:01:19.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.566" endtime="20201115 23:01:19.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.565" endtime="20201115 23:01:19.960"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.962" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.970" endtime="20201115 23:01:19.988"></status>
</kw>
<msg timestamp="20201115 23:01:19.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.969" endtime="20201115 23:01:19.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.989" endtime="20201115 23:01:19.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.992" endtime="20201115 23:01:19.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.966" endtime="20201115 23:01:19.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.964" endtime="20201115 23:01:19.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.001" endtime="20201115 23:01:20.287"></status>
</kw>
<msg timestamp="20201115 23:01:20.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.999" endtime="20201115 23:01:20.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.292" endtime="20201115 23:01:20.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.300" endtime="20201115 23:01:20.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.997" endtime="20201115 23:01:20.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.995" endtime="20201115 23:01:20.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.307" level="INFO">${RESULT} = [{'time': 0.021999514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.119499999999959e-05, 'source_diff': 7.119499999999959e-05}, {'time': 0.022074542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:20.303" endtime="20201115 23:01:20.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.365" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:20.308" endtime="20201115 23:01:20.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.369" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.368" endtime="20201115 23:01:20.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.372" level="INFO">VALUE: [7.119499999999959e-05, 7.062499999999777e-05, 7.045899999999841e-05, 7.05979999999981e-05, 7.102800000000076e-05, 7.052800000000026e-05, 7.038900000000056e-05, 7.05970000000021e-05, 7.095799999999944e-05, 7.108300000000303e-05, 7.115299999999741e-05, 7.084699999999888e-05, 7.075000000000137e-05, 7.02360000000013e-05, 7.112500000000174e-05, 7.072199999999876e-05, 7.027699999999706e-05, 7.104200000000033e-05, 7.038900000000056e-05, 7.025000000000087e-05, 7.091599999999726e-05, 7.02629999999975e-05, 7.068000000000005e-05, 7.095799999999944e-05, 7.052800000000026e-05, 7.119400000000012e-05, 7.025000000000087e-05, 7.027800000000001e-05, 7.04169999999997e-05, 7.048600000000155e-05, 7.081999999999922e-05, 7.056999999999897e-05, 7.072299999999823e-05, 7.04169999999997e-05, 7.031999999999872e-05, 7.102700000000128e-05, 7.083299999999931e-05, 7.052700000000078e-05, 7.1069e-05, 7.092999999999683e-05, 7.05689999999995e-05, 7.120800000000316e-05, 7.038900000000056e-05, 7.027800000000001e-05, 7.036100000000142e-05, 7.069500000000256e-05, 7.101400000000119e-05, 7.055499999999992e-05, 7.079200000000008e-05, 7.122199999999926e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.370" endtime="20201115 23:01:20.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.366" endtime="20201115 23:01:20.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.375" endtime="20201115 23:01:20.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.378" endtime="20201115 23:01:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.377" endtime="20201115 23:01:20.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.373" endtime="20201115 23:01:20.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.963" endtime="20201115 23:01:20.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.961" endtime="20201115 23:01:20.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.960" endtime="20201115 23:01:20.399"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.402" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.410" endtime="20201115 23:01:20.429"></status>
</kw>
<msg timestamp="20201115 23:01:20.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.408" endtime="20201115 23:01:20.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.431" endtime="20201115 23:01:20.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.434" endtime="20201115 23:01:20.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.406" endtime="20201115 23:01:20.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.404" endtime="20201115 23:01:20.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.443" endtime="20201115 23:01:20.728"></status>
</kw>
<msg timestamp="20201115 23:01:20.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.441" endtime="20201115 23:01:20.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022644625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.732" endtime="20201115 23:01:20.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.740" endtime="20201115 23:01:20.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.439" endtime="20201115 23:01:20.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.437" endtime="20201115 23:01:20.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.747" level="INFO">${RESULT} = [{'time': 0.022716556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.19309999999973e-05, 'source_diff': 7.19309999999973e-05}, {'time': 0.022795556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:20.743" endtime="20201115 23:01:20.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.760" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:20.748" endtime="20201115 23:01:20.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.764" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.763" endtime="20201115 23:01:20.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.767" level="INFO">VALUE: [7.19309999999973e-05, 7.144499999999984e-05, 7.180500000000117e-05, 7.130600000000015e-05, 7.205499999999795e-05, 7.126399999999797e-05, 7.15560000000004e-05, 7.12499999999984e-05, 7.131900000000024e-05, 7.187499999999902e-05, 7.147199999999951e-05, 7.215300000000188e-05, 7.213900000000231e-05, 7.193100000000077e-05, 7.209800000000308e-05, 7.183399999999979e-05, 7.16109999999992e-05, 7.188899999999859e-05, 7.170800000000019e-05, 7.161100000000267e-05, 7.167999999999758e-05, 7.165300000000138e-05, 7.172199999999976e-05, 7.144400000000037e-05, 7.19309999999973e-05, 7.19170000000012e-05, 7.216699999999798e-05, 7.176400000000194e-05, 7.177800000000151e-05, 7.17499999999989e-05, 7.144499999999984e-05, 7.165300000000138e-05, 7.18049999999977e-05, 7.127699999999806e-05, 7.204199999999786e-05, 7.208300000000056e-05, 7.19170000000012e-05, 7.152800000000126e-05, 7.148599999999908e-05, 7.162499999999877e-05, 7.173599999999933e-05, 7.14170000000007e-05, 7.149999999999865e-05, 7.176399999999847e-05, 7.177699999999856e-05, 7.166599999999801e-05, 7.202700000000228e-05, 7.201400000000219e-05, 7.155500000000092e-05, 7.205499999999795e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.766" endtime="20201115 23:01:20.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.761" endtime="20201115 23:01:20.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.770" endtime="20201115 23:01:20.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.773" endtime="20201115 23:01:20.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.772" endtime="20201115 23:01:20.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.768" endtime="20201115 23:01:20.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.402" endtime="20201115 23:01:20.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.401" endtime="20201115 23:01:20.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.400" endtime="20201115 23:01:20.794"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.797" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.806" endtime="20201115 23:01:20.824"></status>
</kw>
<msg timestamp="20201115 23:01:20.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.805" endtime="20201115 23:01:20.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.826" endtime="20201115 23:01:20.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.828" endtime="20201115 23:01:20.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.802" endtime="20201115 23:01:20.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.799" endtime="20201115 23:01:20.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.837" endtime="20201115 23:01:21.123"></status>
</kw>
<msg timestamp="20201115 23:01:21.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023324958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.836" endtime="20201115 23:01:21.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023324958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.127" endtime="20201115 23:01:21.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.135" endtime="20201115 23:01:21.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.833" endtime="20201115 23:01:21.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.831" endtime="20201115 23:01:21.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.142" level="INFO">${RESULT} = [{'time': 0.023324958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.302699999999981e-05, 'source_diff': 7.302699999999981e-05}, {'time': 0.023402, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:21.138" endtime="20201115 23:01:21.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.155" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:21.143" endtime="20201115 23:01:21.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.160" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.159" endtime="20201115 23:01:21.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.162" level="INFO">VALUE: [7.302699999999981e-05, 7.31110000000007e-05, 7.270799999999772e-05, 7.268099999999805e-05, 7.22499999999994e-05, 7.229200000000158e-05, 7.281999999999775e-05, 7.313899999999984e-05, 7.315299999999941e-05, 7.238899999999909e-05, 7.30560000000019e-05, 7.259700000000063e-05, 7.273600000000033e-05, 7.233300000000081e-05, 7.252700000000278e-05, 7.269400000000162e-05, 7.283299999999784e-05, 7.318099999999855e-05, 7.27499999999999e-05, 7.29170000000022e-05, 7.244500000000084e-05, 7.244499999999737e-05, 7.238899999999909e-05, 7.227699999999906e-05, 7.286199999999993e-05, 7.220800000000069e-05, 7.302700000000328e-05, 7.323600000000083e-05, 7.24439999999979e-05, 7.277799999999904e-05, 7.25690000000015e-05, 7.312500000000027e-05, 7.22499999999994e-05, 7.307000000000147e-05, 7.265299999999891e-05, 7.236099999999995e-05, 7.309800000000061e-05, 7.252799999999879e-05, 7.227800000000201e-05, 7.252699999999931e-05, 7.298600000000058e-05, 7.279199999999861e-05, 7.284699999999741e-05, 7.27499999999999e-05, 7.269400000000162e-05, 7.258300000000106e-05, 7.256899999999802e-05, 7.281999999999775e-05, 7.273600000000033e-05, 7.236099999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.161" endtime="20201115 23:01:21.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.156" endtime="20201115 23:01:21.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.165" endtime="20201115 23:01:21.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.169" endtime="20201115 23:01:21.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.167" endtime="20201115 23:01:21.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.164" endtime="20201115 23:01:21.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.798" endtime="20201115 23:01:21.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.796" endtime="20201115 23:01:21.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.795" endtime="20201115 23:01:21.190"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.193" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.202" endtime="20201115 23:01:21.220"></status>
</kw>
<msg timestamp="20201115 23:01:21.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.200" endtime="20201115 23:01:21.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.222" endtime="20201115 23:01:21.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.224" endtime="20201115 23:01:21.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.197" endtime="20201115 23:01:21.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.194" endtime="20201115 23:01:21.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.233" endtime="20201115 23:01:21.519"></status>
</kw>
<msg timestamp="20201115 23:01:21.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.232" endtime="20201115 23:01:21.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023199389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023273111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.523" endtime="20201115 23:01:21.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.532" endtime="20201115 23:01:21.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.229" endtime="20201115 23:01:21.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.228" endtime="20201115 23:01:21.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.538" level="INFO">${RESULT} = [{'time': 0.023273111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.372199999999829e-05, 'source_diff': 7.372199999999829e-05}, {'time': 0.023349139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:21.535" endtime="20201115 23:01:21.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.552" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:21.539" endtime="20201115 23:01:21.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.556" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.555" endtime="20201115 23:01:21.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.558" level="INFO">VALUE: [7.372199999999829e-05, 7.343100000000227e-05, 7.404199999999986e-05, 7.319500000000159e-05, 7.37500000000009e-05, 7.326399999999997e-05, 7.32500000000004e-05, 7.32500000000004e-05, 7.32370000000003e-05, 7.358300000000206e-05, 7.401299999999778e-05, 7.331900000000224e-05, 7.33049999999992e-05, 7.3763999999997e-05, 7.415300000000041e-05, 7.349999999999718e-05, 7.361200000000068e-05, 7.390300000000016e-05, 7.400000000000115e-05, 7.368099999999905e-05, 7.369500000000209e-05, 7.411099999999823e-05, 7.383299999999884e-05, 7.366600000000001e-05, 7.402700000000081e-05, 7.337500000000052e-05, 7.386100000000145e-05, 7.355499999999945e-05, 7.365299999999991e-05, 7.388900000000059e-05, 7.420799999999922e-05, 7.329199999999911e-05, 7.350000000000065e-05, 7.365299999999991e-05, 7.368100000000252e-05, 7.383300000000231e-05, 7.373599999999786e-05, 7.372199999999829e-05, 7.401299999999778e-05, 7.348600000000108e-05, 7.37500000000009e-05, 7.391600000000026e-05, 7.341699999999923e-05, 7.400000000000115e-05, 7.402800000000029e-05, 7.36110000000012e-05, 7.348599999999761e-05, 7.384700000000188e-05, 7.423600000000183e-05, 7.365299999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.557" endtime="20201115 23:01:21.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.552" endtime="20201115 23:01:21.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.562" endtime="20201115 23:01:21.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.566" endtime="20201115 23:01:21.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.564" endtime="20201115 23:01:21.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.560" endtime="20201115 23:01:21.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.193" endtime="20201115 23:01:21.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.191" endtime="20201115 23:01:21.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.191" endtime="20201115 23:01:21.587"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.589" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.597" endtime="20201115 23:01:21.617"></status>
</kw>
<msg timestamp="20201115 23:01:21.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.596" endtime="20201115 23:01:21.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.619" endtime="20201115 23:01:21.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.621" endtime="20201115 23:01:21.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.593" endtime="20201115 23:01:21.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.591" endtime="20201115 23:01:21.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.630" endtime="20201115 23:01:21.915"></status>
</kw>
<msg timestamp="20201115 23:01:21.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.629" endtime="20201115 23:01:21.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.919" endtime="20201115 23:01:21.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.927" endtime="20201115 23:01:21.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.626" endtime="20201115 23:01:21.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.624" endtime="20201115 23:01:21.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.934" level="INFO">${RESULT} = [{'time': 0.022875458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.50830000000001e-05, 'source_diff': 7.50830000000001e-05}, {'time': 0.022953458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:21.931" endtime="20201115 23:01:21.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.948" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:21.935" endtime="20201115 23:01:21.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.953" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.952" endtime="20201115 23:01:21.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.955" level="INFO">VALUE: [7.50830000000001e-05, 7.454100000000088e-05, 7.456900000000002e-05, 7.484699999999941e-05, 7.472199999999929e-05, 7.434699999999891e-05, 7.476400000000147e-05, 7.480600000000018e-05, 7.45699999999995e-05, 7.465300000000091e-05, 7.484799999999889e-05, 7.454200000000036e-05, 7.437500000000152e-05, 7.42630000000015e-05, 7.452700000000131e-05, 7.454200000000036e-05, 7.441599999999729e-05, 7.484699999999941e-05, 7.452799999999732e-05, 7.520800000000022e-05, 7.474999999999843e-05, 7.465300000000091e-05, 7.491700000000073e-05, 7.468100000000005e-05, 7.438899999999762e-05, 7.491700000000073e-05, 7.477800000000104e-05, 7.456900000000002e-05, 7.470799999999972e-05, 7.42639999999975e-05, 7.450000000000165e-05, 7.429100000000063e-05, 7.433299999999934e-05, 7.486099999999898e-05, 7.456900000000002e-05, 7.494499999999987e-05, 7.42639999999975e-05, 7.42500000000014e-05, 7.502799999999782e-05, 7.522199999999979e-05, 7.515300000000141e-05, 7.48050000000007e-05, 7.418000000000008e-05, 7.472199999999929e-05, 7.427800000000054e-05, 7.424999999999793e-05, 7.426400000000097e-05, 7.477800000000104e-05, 7.488900000000159e-05, 7.499999999999868e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.954" endtime="20201115 23:01:21.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.949" endtime="20201115 23:01:21.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.959" endtime="20201115 23:01:21.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.962" endtime="20201115 23:01:21.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.960" endtime="20201115 23:01:21.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.957" endtime="20201115 23:01:21.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.590" endtime="20201115 23:01:21.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.588" endtime="20201115 23:01:21.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.587" endtime="20201115 23:01:21.983"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.994" endtime="20201115 23:01:22.012"></status>
</kw>
<msg timestamp="20201115 23:01:22.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.992" endtime="20201115 23:01:22.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.014" endtime="20201115 23:01:22.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.017" endtime="20201115 23:01:22.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.990" endtime="20201115 23:01:22.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.988" endtime="20201115 23:01:22.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.025" endtime="20201115 23:01:22.311"></status>
</kw>
<msg timestamp="20201115 23:01:22.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.024" endtime="20201115 23:01:22.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.315" endtime="20201115 23:01:22.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.324" endtime="20201115 23:01:22.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.021" endtime="20201115 23:01:22.326"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.020" endtime="20201115 23:01:22.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.330" level="INFO">${RESULT} = [{'time': 0.022956028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.594500000000087e-05, 'source_diff': 7.594500000000087e-05}, {'time': 0.023037028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.327" endtime="20201115 23:01:22.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.344" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:22.332" endtime="20201115 23:01:22.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.349" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.348" endtime="20201115 23:01:22.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.351" level="INFO">VALUE: [7.594500000000087e-05, 7.58890000000026e-05, 7.536100000000295e-05, 7.609800000000014e-05, 7.527799999999807e-05, 7.619500000000112e-05, 7.609700000000066e-05, 7.606899999999805e-05, 7.543000000000133e-05, 7.561099999999973e-05, 7.552799999999832e-05, 7.55830000000006e-05, 7.573599999999986e-05, 7.58890000000026e-05, 7.568100000000105e-05, 7.606899999999805e-05, 7.532000000000025e-05, 7.524999999999893e-05, 7.566700000000148e-05, 7.556900000000102e-05, 7.548599999999961e-05, 7.52769999999986e-05, 7.537499999999905e-05, 7.5763999999999e-05, 7.568100000000105e-05, 7.604200000000186e-05, 7.595899999999697e-05, 7.536099999999948e-05, 7.537499999999905e-05, 7.545899999999994e-05, 7.527800000000154e-05, 7.577800000000204e-05, 7.581900000000127e-05, 7.624999999999993e-05, 7.597200000000054e-05, 7.534699999999991e-05, 7.551400000000222e-05, 7.565299999999844e-05, 7.567999999999811e-05, 7.541699999999776e-05, 7.52500000000024e-05, 7.616700000000198e-05, 7.613899999999937e-05, 7.541699999999776e-05, 7.532000000000025e-05, 7.55700000000005e-05, 7.601299999999978e-05, 7.530600000000068e-05, 7.573599999999986e-05, 7.551399999999875e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.350" endtime="20201115 23:01:22.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.345" endtime="20201115 23:01:22.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.354" endtime="20201115 23:01:22.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.357" endtime="20201115 23:01:22.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.356" endtime="20201115 23:01:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.352" endtime="20201115 23:01:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.986" endtime="20201115 23:01:22.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.984" endtime="20201115 23:01:22.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.984" endtime="20201115 23:01:22.379"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.381" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.389" endtime="20201115 23:01:22.407"></status>
</kw>
<msg timestamp="20201115 23:01:22.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.388" endtime="20201115 23:01:22.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.408" endtime="20201115 23:01:22.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.411" endtime="20201115 23:01:22.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.385" endtime="20201115 23:01:22.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.383" endtime="20201115 23:01:22.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.420" endtime="20201115 23:01:22.705"></status>
</kw>
<msg timestamp="20201115 23:01:22.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.419" endtime="20201115 23:01:22.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.709" endtime="20201115 23:01:22.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.717" endtime="20201115 23:01:22.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.416" endtime="20201115 23:01:22.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.414" endtime="20201115 23:01:22.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.724" level="INFO">${RESULT} = [{'time': 0.022043167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999999993e-05, 'source_diff': 7.624999999999993e-05}, {'time': 0.022125167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:22.721" endtime="20201115 23:01:22.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.737" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:22.725" endtime="20201115 23:01:22.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.742" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.741" endtime="20201115 23:01:22.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.744" level="INFO">VALUE: [7.624999999999993e-05, 7.640300000000266e-05, 7.666699999999901e-05, 7.641599999999929e-05, 7.667999999999911e-05, 7.651399999999975e-05, 7.629200000000211e-05, 7.652799999999932e-05, 7.673600000000086e-05, 7.691699999999926e-05, 7.680599999999871e-05, 7.684699999999794e-05, 7.630600000000168e-05, 7.715299999999994e-05, 7.669500000000162e-05, 7.700000000000068e-05, 7.673599999999739e-05, 7.654099999999942e-05, 7.711100000000123e-05, 7.659700000000116e-05, 7.652799999999932e-05, 7.633400000000082e-05, 7.720800000000222e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.661099999999726e-05, 7.641700000000223e-05, 7.65700000000015e-05, 7.648600000000061e-05, 7.672300000000076e-05, 7.659700000000116e-05, 7.641599999999929e-05, 7.694399999999893e-05, 7.666699999999901e-05, 7.698600000000111e-05, 7.636100000000048e-05, 7.701400000000025e-05, 7.647200000000104e-05, 7.691699999999926e-05, 7.70839999999981e-05, 7.684800000000089e-05, 7.683400000000132e-05, 7.620900000000069e-05, 7.684700000000141e-05, 7.666599999999954e-05, 7.697199999999807e-05, 7.701400000000025e-05, 7.667999999999911e-05, 7.692999999999936e-05, 7.706899999999905e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.743" endtime="20201115 23:01:22.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.738" endtime="20201115 23:01:22.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.747" endtime="20201115 23:01:22.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.751" endtime="20201115 23:01:22.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.749" endtime="20201115 23:01:22.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.746" endtime="20201115 23:01:22.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.382" endtime="20201115 23:01:22.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.380" endtime="20201115 23:01:22.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.379" endtime="20201115 23:01:22.772"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.774" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.782" endtime="20201115 23:01:22.801"></status>
</kw>
<msg timestamp="20201115 23:01:22.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.781" endtime="20201115 23:01:22.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.802" endtime="20201115 23:01:22.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.805" endtime="20201115 23:01:22.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.778" endtime="20201115 23:01:22.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.776" endtime="20201115 23:01:22.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.814" endtime="20201115 23:01:23.099"></status>
</kw>
<msg timestamp="20201115 23:01:23.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.812" endtime="20201115 23:01:23.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.103" endtime="20201115 23:01:23.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.111" endtime="20201115 23:01:23.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.810" endtime="20201115 23:01:23.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.808" endtime="20201115 23:01:23.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.118" level="INFO">${RESULT} = [{'time': 0.022823681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.769499999999915e-05, 'source_diff': 7.769499999999915e-05}, {'time': 0.022910681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.115" endtime="20201115 23:01:23.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.131" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:23.119" endtime="20201115 23:01:23.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.136" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.135" endtime="20201115 23:01:23.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.138" level="INFO">VALUE: [7.769499999999915e-05, 7.759799999999817e-05, 7.786099999999851e-05, 7.823599999999889e-05, 7.815300000000094e-05, 7.74030000000002e-05, 7.811099999999876e-05, 7.768099999999958e-05, 7.793099999999983e-05, 7.738900000000062e-05, 7.74449999999989e-05, 7.770899999999872e-05, 7.750000000000118e-05, 7.774999999999796e-05, 7.820799999999975e-05, 7.75129999999978e-05, 7.748599999999814e-05, 7.741600000000029e-05, 7.74030000000002e-05, 7.797200000000254e-05, 7.741699999999976e-05, 7.7457999999999e-05, 7.804200000000039e-05, 7.758400000000207e-05, 7.727800000000007e-05, 7.769499999999915e-05, 7.752700000000085e-05, 7.75839999999986e-05, 7.79579999999995e-05, 7.756899999999955e-05, 7.777699999999763e-05, 7.752800000000032e-05, 7.797200000000254e-05, 7.745800000000247e-05, 7.76250000000013e-05, 7.805599999999996e-05, 7.802800000000082e-05, 7.72640000000005e-05, 7.745899999999847e-05, 7.802800000000082e-05, 7.809799999999867e-05, 7.734700000000191e-05, 7.733300000000234e-05, 7.801400000000125e-05, 7.799999999999821e-05, 7.819400000000018e-05, 7.733299999999887e-05, 7.7764000000001e-05, 7.72640000000005e-05, 7.79579999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.137" endtime="20201115 23:01:23.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.132" endtime="20201115 23:01:23.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.141" endtime="20201115 23:01:23.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.145" endtime="20201115 23:01:23.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.143" endtime="20201115 23:01:23.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.140" endtime="20201115 23:01:23.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.775" endtime="20201115 23:01:23.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.773" endtime="20201115 23:01:23.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.772" endtime="20201115 23:01:23.166"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.168" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.176" endtime="20201115 23:01:23.195"></status>
</kw>
<msg timestamp="20201115 23:01:23.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.175" endtime="20201115 23:01:23.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.197" endtime="20201115 23:01:23.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.200" endtime="20201115 23:01:23.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.172" endtime="20201115 23:01:23.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.170" endtime="20201115 23:01:23.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.209" endtime="20201115 23:01:23.493"></status>
</kw>
<msg timestamp="20201115 23:01:23.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02331025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:23.207" endtime="20201115 23:01:23.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02331025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023389111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:23.497" endtime="20201115 23:01:23.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.506" endtime="20201115 23:01:23.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.204" endtime="20201115 23:01:23.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.203" endtime="20201115 23:01:23.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.512" level="INFO">${RESULT} = [{'time': 0.023389111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.886099999999951e-05, 'source_diff': 7.886099999999951e-05}, {'time': 0.023475097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.509" endtime="20201115 23:01:23.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.527" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:23.513" endtime="20201115 23:01:23.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.531" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.530" endtime="20201115 23:01:23.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.534" level="INFO">VALUE: [7.886099999999951e-05, 7.874999999999896e-05, 7.837500000000205e-05, 7.873599999999939e-05, 7.918100000000108e-05, 7.850000000000218e-05, 7.904200000000139e-05, 7.879200000000114e-05, 7.834800000000239e-05, 7.866700000000101e-05, 7.844399999999696e-05, 7.856900000000056e-05, 7.852800000000132e-05, 7.917999999999814e-05, 7.826399999999803e-05, 7.852799999999785e-05, 7.91389999999989e-05, 7.823600000000236e-05, 7.876399999999853e-05, 7.82779999999976e-05, 7.901400000000225e-05, 7.90840000000001e-05, 7.829200000000064e-05, 7.85129999999988e-05, 7.852699999999838e-05, 7.891600000000179e-05, 7.830500000000074e-05, 7.867999999999764e-05, 7.861099999999926e-05, 7.848599999999914e-05, 7.884699999999994e-05, 7.887499999999908e-05, 7.923699999999936e-05, 7.880600000000071e-05, 7.90840000000001e-05, 7.833399999999935e-05, 7.877699999999863e-05, 7.900000000000268e-05, 7.905500000000149e-05, 7.901400000000225e-05, 7.894399999999746e-05, 7.827800000000107e-05, 7.857000000000003e-05, 7.830600000000021e-05, 7.872199999999982e-05, 7.843100000000033e-05, 7.855600000000046e-05, 7.86389999999984e-05, 7.856900000000056e-05, 7.838799999999868e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.532" endtime="20201115 23:01:23.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.528" endtime="20201115 23:01:23.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.537" endtime="20201115 23:01:23.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.540" endtime="20201115 23:01:23.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.539" endtime="20201115 23:01:23.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.535" endtime="20201115 23:01:23.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.169" endtime="20201115 23:01:23.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.167" endtime="20201115 23:01:23.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.166" endtime="20201115 23:01:23.561"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.572" endtime="20201115 23:01:23.591"></status>
</kw>
<msg timestamp="20201115 23:01:23.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.571" endtime="20201115 23:01:23.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.592" endtime="20201115 23:01:23.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.595" endtime="20201115 23:01:23.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.568" endtime="20201115 23:01:23.597"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.566" endtime="20201115 23:01:23.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.604" endtime="20201115 23:01:23.890"></status>
</kw>
<msg timestamp="20201115 23:01:23.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022405222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.602" endtime="20201115 23:01:23.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022405222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.894" endtime="20201115 23:01:23.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.902" endtime="20201115 23:01:23.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.600" endtime="20201115 23:01:23.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.598" endtime="20201115 23:01:23.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.909" level="INFO">${RESULT} = [{'time': 0.022484653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943100000000133e-05, 'source_diff': 7.943100000000133e-05}, {'time': 0.022572681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.905" endtime="20201115 23:01:23.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.922" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:23.909" endtime="20201115 23:01:23.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.926" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.925" endtime="20201115 23:01:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.929" level="INFO">VALUE: [7.943100000000133e-05, 8.016699999999904e-05, 7.95970000000007e-05, 7.966599999999907e-05, 7.970800000000125e-05, 8.001399999999978e-05, 7.9458000000001e-05, 7.922200000000032e-05, 7.983300000000138e-05, 7.931999999999731e-05, 7.954199999999842e-05, 7.970900000000072e-05, 7.937499999999958e-05, 7.982000000000128e-05, 7.944400000000143e-05, 7.980599999999824e-05, 8.00970000000012e-05, 7.930500000000174e-05, 7.929100000000217e-05, 7.956900000000156e-05, 7.930499999999827e-05, 7.972200000000082e-05, 7.962499999999983e-05, 7.9458000000001e-05, 7.924999999999946e-05, 7.983400000000085e-05, 7.997300000000054e-05, 8.001400000000325e-05, 8.019500000000165e-05, 8.02779999999996e-05, 7.949999999999971e-05, 8.00970000000012e-05, 7.965299999999897e-05, 7.941599999999882e-05, 7.970800000000125e-05, 7.944400000000143e-05, 7.923599999999989e-05, 7.965299999999897e-05, 7.979200000000214e-05, 7.980599999999824e-05, 7.986199999999999e-05, 7.930499999999827e-05, 7.961100000000026e-05, 8.006899999999859e-05, 7.982000000000128e-05, 8.015299999999947e-05, 7.967999999999864e-05, 7.984700000000094e-05, 7.954200000000189e-05, 7.962499999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.927" endtime="20201115 23:01:23.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.923" endtime="20201115 23:01:23.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.932" endtime="20201115 23:01:23.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.935" endtime="20201115 23:01:23.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.934" endtime="20201115 23:01:23.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.930" endtime="20201115 23:01:23.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.564" endtime="20201115 23:01:23.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.562" endtime="20201115 23:01:23.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.562" endtime="20201115 23:01:23.961"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.972" endtime="20201115 23:01:23.989"></status>
</kw>
<msg timestamp="20201115 23:01:23.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.970" endtime="20201115 23:01:23.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.991" endtime="20201115 23:01:23.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.993" endtime="20201115 23:01:23.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.968" endtime="20201115 23:01:23.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.965" endtime="20201115 23:01:23.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.003" endtime="20201115 23:01:24.288"></status>
</kw>
<msg timestamp="20201115 23:01:24.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027170403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.001" endtime="20201115 23:01:24.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027170403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.292" endtime="20201115 23:01:24.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.300" endtime="20201115 23:01:24.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.998" endtime="20201115 23:01:24.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.997" endtime="20201115 23:01:24.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.307" level="INFO">${RESULT} = [{'time': 0.027170403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.0458999999998e-05, 'source_diff': 8.0458999999998e-05}, {'time': 0.027260403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:01:24.304" endtime="20201115 23:01:24.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.321" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:24.308" endtime="20201115 23:01:24.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.326" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.324" endtime="20201115 23:01:24.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.328" level="INFO">VALUE: [8.0458999999998e-05, 8.099999999999774e-05, 8.073600000000139e-05, 8.06390000000004e-05, 8.066699999999954e-05, 8.069399999999921e-05, 8.08190000000028e-05, 8.076400000000053e-05, 8.108300000000263e-05, 8.112500000000133e-05, 8.084700000000195e-05, 8.098599999999817e-05, 8.026400000000003e-05, 8.061100000000126e-05, 8.102800000000035e-05, 8.02230000000008e-05, 8.045900000000147e-05, 8.041599999999982e-05, 8.048600000000114e-05, 8.037500000000058e-05, 8.108299999999916e-05, 8.115300000000047e-05, 8.08329999999989e-05, 8.037500000000058e-05, 8.098599999999817e-05, 8.076400000000053e-05, 8.104199999999992e-05, 8.084799999999795e-05, 8.026300000000056e-05, 8.049999999999724e-05, 8.070799999999878e-05, 8.11390000000009e-05, 8.10269999999974e-05, 8.111100000000177e-05, 8.067999999999964e-05, 8.04169999999993e-05, 8.093099999999936e-05, 8.04169999999993e-05, 8.09169999999998e-05, 8.104199999999992e-05, 8.065299999999997e-05, 8.097299999999807e-05, 8.037500000000058e-05, 8.092999999999989e-05, 8.098599999999817e-05, 8.098599999999817e-05, 8.050000000000071e-05, 8.026400000000003e-05, 8.111100000000177e-05, 8.108300000000263e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.327" endtime="20201115 23:01:24.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.322" endtime="20201115 23:01:24.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.332" endtime="20201115 23:01:24.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.335" endtime="20201115 23:01:24.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.333" endtime="20201115 23:01:24.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.330" endtime="20201115 23:01:24.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.964" endtime="20201115 23:01:24.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.962" endtime="20201115 23:01:24.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.961" endtime="20201115 23:01:24.356"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.359" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.367" endtime="20201115 23:01:24.385"></status>
</kw>
<msg timestamp="20201115 23:01:24.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.365" endtime="20201115 23:01:24.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.387" endtime="20201115 23:01:24.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.389" endtime="20201115 23:01:24.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.363" endtime="20201115 23:01:24.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.361" endtime="20201115 23:01:24.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.398" endtime="20201115 23:01:24.683"></status>
</kw>
<msg timestamp="20201115 23:01:24.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.397" endtime="20201115 23:01:24.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.688" endtime="20201115 23:01:24.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.696" endtime="20201115 23:01:24.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.394" endtime="20201115 23:01:24.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.393" endtime="20201115 23:01:24.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.702" level="INFO">${RESULT} = [{'time': 0.022019708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.215199999999853e-05, 'source_diff': 8.215199999999853e-05}, {'time': 0.022110708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.699" endtime="20201115 23:01:24.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.716" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:24.703" endtime="20201115 23:01:24.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.720" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.719" endtime="20201115 23:01:24.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.723" level="INFO">VALUE: [8.215199999999853e-05, 8.130500000000027e-05, 8.130500000000027e-05, 8.199999999999874e-05, 8.174999999999849e-05, 8.131999999999931e-05, 8.204200000000092e-05, 8.212499999999887e-05, 8.126400000000103e-05, 8.220899999999975e-05, 8.176399999999806e-05, 8.179099999999773e-05, 8.209699999999973e-05, 8.133300000000288e-05, 8.184699999999948e-05, 8.17780000000011e-05, 8.188900000000165e-05, 8.137500000000158e-05, 8.127799999999713e-05, 8.1458999999999e-05, 8.170900000000272e-05, 8.193100000000036e-05, 8.170799999999978e-05, 8.14719999999991e-05, 8.143000000000039e-05, 8.16390000000014e-05, 8.16109999999988e-05, 8.166700000000054e-05, 8.124999999999799e-05, 8.202800000000135e-05, 8.193100000000036e-05, 8.126400000000103e-05, 8.140300000000072e-05, 8.14719999999991e-05, 8.197299999999907e-05, 8.154200000000042e-05, 8.158399999999913e-05, 8.186100000000252e-05, 8.21659999999981e-05, 8.220800000000028e-05, 8.181900000000034e-05, 8.148599999999867e-05, 8.180600000000024e-05, 8.16390000000014e-05, 8.17780000000011e-05, 8.181999999999981e-05, 8.201399999999831e-05, 8.213899999999844e-05, 8.12230000000018e-05, 8.131899999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.721" endtime="20201115 23:01:24.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.717" endtime="20201115 23:01:24.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.726" endtime="20201115 23:01:24.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.730" endtime="20201115 23:01:24.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.728" endtime="20201115 23:01:24.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.725" endtime="20201115 23:01:24.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.359" endtime="20201115 23:01:24.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.357" endtime="20201115 23:01:24.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.357" endtime="20201115 23:01:24.751"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.753" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.761" endtime="20201115 23:01:24.780"></status>
</kw>
<msg timestamp="20201115 23:01:24.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.760" endtime="20201115 23:01:24.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.782" endtime="20201115 23:01:24.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.784" endtime="20201115 23:01:24.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.757" endtime="20201115 23:01:24.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.755" endtime="20201115 23:01:24.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.793" endtime="20201115 23:01:25.080"></status>
</kw>
<msg timestamp="20201115 23:01:25.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023302042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023384833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.792" endtime="20201115 23:01:25.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023302042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023384833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.084" endtime="20201115 23:01:25.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.092" endtime="20201115 23:01:25.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.789" endtime="20201115 23:01:25.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.788" endtime="20201115 23:01:25.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.099" level="INFO">${RESULT} = [{'time': 0.023384833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.27910000000022e-05, 'source_diff': 8.27910000000022e-05}, {'time': 0.023472847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:25.095" endtime="20201115 23:01:25.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.113" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:25.100" endtime="20201115 23:01:25.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.118" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.117" endtime="20201115 23:01:25.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.121" level="INFO">VALUE: [8.27910000000022e-05, 8.288900000000265e-05, 8.28049999999983e-05, 8.319399999999824e-05, 8.280600000000124e-05, 8.230600000000074e-05, 8.277799999999863e-05, 8.322300000000032e-05, 8.277699999999916e-05, 8.276399999999906e-05, 8.2459e-05, 8.302700000000288e-05, 8.287499999999962e-05, 8.240299999999826e-05, 8.26529999999985e-05, 8.226399999999856e-05, 8.230600000000074e-05, 8.244400000000096e-05, 8.234699999999998e-05, 8.30980000000002e-05, 8.262499999999937e-05, 8.241600000000182e-05, 8.223599999999942e-05, 8.255499999999805e-05, 8.24720000000001e-05, 8.259700000000023e-05, 8.22780000000016e-05, 8.279200000000167e-05, 8.31110000000003e-05, 8.286100000000005e-05, 8.248599999999967e-05, 8.308400000000063e-05, 8.270799999999731e-05, 8.3152999999999e-05, 8.226300000000256e-05, 8.236099999999955e-05, 8.262499999999937e-05, 8.276399999999906e-05, 8.238899999999869e-05, 8.31390000000029e-05, 8.231900000000084e-05, 8.248599999999967e-05, 8.238899999999869e-05, 8.24720000000001e-05, 8.27919999999982e-05, 8.272299999999982e-05, 8.263899999999894e-05, 8.309699999999726e-05, 8.281900000000134e-05, 8.240299999999826e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.119" endtime="20201115 23:01:25.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.114" endtime="20201115 23:01:25.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.124" endtime="20201115 23:01:25.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.127" endtime="20201115 23:01:25.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.125" endtime="20201115 23:01:25.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.122" endtime="20201115 23:01:25.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.754" endtime="20201115 23:01:25.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.752" endtime="20201115 23:01:25.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.751" endtime="20201115 23:01:25.148"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.159" endtime="20201115 23:01:25.177"></status>
</kw>
<msg timestamp="20201115 23:01:25.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.157" endtime="20201115 23:01:25.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.178" endtime="20201115 23:01:25.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.181" endtime="20201115 23:01:25.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.155" endtime="20201115 23:01:25.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.152" endtime="20201115 23:01:25.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.190" endtime="20201115 23:01:25.475"></status>
</kw>
<msg timestamp="20201115 23:01:25.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.188" endtime="20201115 23:01:25.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.479" endtime="20201115 23:01:25.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.488" endtime="20201115 23:01:25.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.186" endtime="20201115 23:01:25.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.184" endtime="20201115 23:01:25.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.494" level="INFO">${RESULT} = [{'time': 0.021956806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.352799999999938e-05, 'source_diff': 8.352799999999938e-05}, {'time': 0.022049806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.491" endtime="20201115 23:01:25.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.508" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:25.495" endtime="20201115 23:01:25.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.512" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.511" endtime="20201115 23:01:25.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.515" level="INFO">VALUE: [8.352799999999938e-05, 8.330600000000174e-05, 8.330599999999827e-05, 8.373600000000092e-05, 8.324999999999999e-05, 8.404199999999945e-05, 8.401400000000031e-05, 8.386100000000105e-05, 8.34309999999984e-05, 8.327799999999913e-05, 8.377799999999963e-05, 8.36110000000008e-05, 8.35980000000007e-05, 8.4153e-05, 8.344499999999797e-05, 8.408299999999869e-05, 8.336100000000055e-05, 8.397199999999813e-05, 8.372200000000135e-05, 8.408299999999869e-05, 8.337500000000012e-05, 8.368099999999865e-05, 8.337500000000012e-05, 8.33469999999975e-05, 8.380599999999877e-05, 8.41249999999974e-05, 8.324999999999999e-05, 8.351300000000034e-05, 8.33049999999988e-05, 8.391599999999985e-05, 8.379099999999973e-05, 8.397199999999813e-05, 8.400000000000074e-05, 8.32780000000026e-05, 8.41110000000013e-05, 8.369499999999822e-05, 8.375000000000049e-05, 8.358399999999766e-05, 8.348700000000014e-05, 8.358300000000166e-05, 8.39720000000016e-05, 8.352699999999991e-05, 8.388900000000019e-05, 8.37919999999992e-05, 8.419400000000271e-05, 8.418099999999915e-05, 8.377799999999963e-05, 8.413900000000044e-05, 8.351400000000328e-05, 8.334700000000098e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.513" endtime="20201115 23:01:25.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.509" endtime="20201115 23:01:25.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.518" endtime="20201115 23:01:25.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.521" endtime="20201115 23:01:25.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.520" endtime="20201115 23:01:25.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.516" endtime="20201115 23:01:25.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.151" endtime="20201115 23:01:25.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.149" endtime="20201115 23:01:25.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.149" endtime="20201115 23:01:25.542"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.545" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.553" endtime="20201115 23:01:25.571"></status>
</kw>
<msg timestamp="20201115 23:01:25.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.551" endtime="20201115 23:01:25.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.573" endtime="20201115 23:01:25.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.575" endtime="20201115 23:01:25.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.549" endtime="20201115 23:01:25.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.547" endtime="20201115 23:01:25.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.585" endtime="20201115 23:01:25.871"></status>
</kw>
<msg timestamp="20201115 23:01:25.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.583" endtime="20201115 23:01:25.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022896764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.875" endtime="20201115 23:01:25.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.883" endtime="20201115 23:01:25.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.580" endtime="20201115 23:01:25.885"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.579" endtime="20201115 23:01:25.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.890" level="INFO">${RESULT} = [{'time': 0.022896764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.455599999999952e-05, 'source_diff': 8.455599999999952e-05}, {'time': 0.022987764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.887" endtime="20201115 23:01:25.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.903" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:25.891" endtime="20201115 23:01:25.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.908" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.907" endtime="20201115 23:01:25.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.910" level="INFO">VALUE: [8.455599999999952e-05, 8.487500000000162e-05, 8.425000000000099e-05, 8.480599999999977e-05, 8.495899999999904e-05, 8.450000000000124e-05, 8.476400000000106e-05, 8.519400000000024e-05, 8.437500000000112e-05, 8.498600000000217e-05, 8.427800000000013e-05, 8.438900000000069e-05, 8.487499999999815e-05, 8.451400000000081e-05, 8.47920000000002e-05, 8.46110000000018e-05, 8.473600000000192e-05, 8.509700000000273e-05, 8.42919999999997e-05, 8.461099999999833e-05, 8.447199999999863e-05, 8.44720000000021e-05, 8.479100000000073e-05, 8.452800000000038e-05, 8.437500000000112e-05, 8.477800000000063e-05, 8.427800000000013e-05, 8.502800000000088e-05, 8.422299999999786e-05, 8.481899999999987e-05, 8.495899999999904e-05, 8.43469999999985e-05, 8.41660000000001e-05, 8.470800000000278e-05, 8.431899999999937e-05, 8.450000000000124e-05, 8.47920000000002e-05, 8.488900000000119e-05, 8.494499999999947e-05, 8.494499999999947e-05, 8.436100000000155e-05, 8.451300000000134e-05, 8.441699999999983e-05, 8.494399999999999e-05, 8.450000000000124e-05, 8.46249999999979e-05, 8.429100000000023e-05, 8.502799999999741e-05, 8.454199999999995e-05, 8.477800000000063e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.909" endtime="20201115 23:01:25.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.904" endtime="20201115 23:01:25.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.913" endtime="20201115 23:01:25.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.917" endtime="20201115 23:01:25.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.915" endtime="20201115 23:01:25.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.911" endtime="20201115 23:01:25.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.545" endtime="20201115 23:01:25.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.543" endtime="20201115 23:01:25.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.543" endtime="20201115 23:01:25.938"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.940" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.948" endtime="20201115 23:01:25.967"></status>
</kw>
<msg timestamp="20201115 23:01:25.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.947" endtime="20201115 23:01:25.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.969" endtime="20201115 23:01:25.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.972" endtime="20201115 23:01:25.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.944" endtime="20201115 23:01:25.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.942" endtime="20201115 23:01:25.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.981" endtime="20201115 23:01:26.266"></status>
</kw>
<msg timestamp="20201115 23:01:26.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.979" endtime="20201115 23:01:26.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.270" endtime="20201115 23:01:26.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.278" endtime="20201115 23:01:26.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.977" endtime="20201115 23:01:26.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.975" endtime="20201115 23:01:26.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.284" level="INFO">${RESULT} = [{'time': 0.021942931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.559799999999923e-05, 'source_diff': 8.559799999999923e-05}, {'time': 0.022034931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.281" endtime="20201115 23:01:26.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.298" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:26.285" endtime="20201115 23:01:26.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.302" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.301" endtime="20201115 23:01:26.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.305" level="INFO">VALUE: [8.559799999999923e-05, 8.59310000000009e-05, 8.568000000000117e-05, 8.525000000000199e-05, 8.575000000000249e-05, 8.522199999999938e-05, 8.559699999999976e-05, 8.527799999999766e-05, 8.619500000000072e-05, 8.594500000000047e-05, 8.594500000000047e-05, 8.613900000000244e-05, 8.538799999999874e-05, 8.570800000000031e-05, 8.531900000000037e-05, 8.577700000000216e-05, 8.561099999999933e-05, 8.56530000000015e-05, 8.536099999999908e-05, 8.613899999999897e-05, 8.530600000000027e-05, 8.608400000000016e-05, 8.536099999999908e-05, 8.54859999999992e-05, 8.56119999999988e-05, 8.537499999999865e-05, 8.573599999999945e-05, 8.541600000000135e-05, 8.53469999999995e-05, 8.558300000000019e-05, 8.541699999999736e-05, 8.569500000000022e-05, 8.593099999999743e-05, 8.549999999999877e-05, 8.594399999999752e-05, 8.58189999999974e-05, 8.601400000000231e-05, 8.540199999999831e-05, 8.522200000000285e-05, 8.604100000000198e-05, 8.601400000000231e-05, 8.574999999999902e-05, 8.54859999999992e-05, 8.583399999999991e-05, 8.527800000000113e-05, 8.586099999999958e-05, 8.540300000000126e-05, 8.573699999999893e-05, 8.551399999999834e-05, 8.59859999999997e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.303" endtime="20201115 23:01:26.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.299" endtime="20201115 23:01:26.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.308" endtime="20201115 23:01:26.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.311" endtime="20201115 23:01:26.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.310" endtime="20201115 23:01:26.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.306" endtime="20201115 23:01:26.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.941" endtime="20201115 23:01:26.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.939" endtime="20201115 23:01:26.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.938" endtime="20201115 23:01:26.332"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.335" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.345" endtime="20201115 23:01:26.365"></status>
</kw>
<msg timestamp="20201115 23:01:26.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.343" endtime="20201115 23:01:26.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.366" endtime="20201115 23:01:26.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.369" endtime="20201115 23:01:26.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.340" endtime="20201115 23:01:26.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.337" endtime="20201115 23:01:26.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.378" endtime="20201115 23:01:26.663"></status>
</kw>
<msg timestamp="20201115 23:01:26.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024631181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024717792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.376" endtime="20201115 23:01:26.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024631181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024717792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.667" endtime="20201115 23:01:26.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.675" endtime="20201115 23:01:26.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.373" endtime="20201115 23:01:26.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.372" endtime="20201115 23:01:26.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.682" level="INFO">${RESULT} = [{'time': 0.024717792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.661100000000033e-05, 'source_diff': 8.661100000000033e-05}, {'time': 0.024807806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.679" endtime="20201115 23:01:26.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.696" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:26.683" endtime="20201115 23:01:26.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.701" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.700" endtime="20201115 23:01:26.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.703" level="INFO">VALUE: [8.661100000000033e-05, 8.67370000000034e-05, 8.64310000000014e-05, 8.641599999999888e-05, 8.627799999999866e-05, 8.640300000000226e-05, 8.633300000000094e-05, 8.623599999999995e-05, 8.644399999999802e-05, 8.661100000000033e-05, 8.718099999999868e-05, 8.675000000000002e-05, 8.687500000000015e-05, 8.63470000000005e-05, 8.659800000000023e-05, 8.670800000000131e-05, 8.630499999999833e-05, 8.645800000000106e-05, 8.629199999999823e-05, 8.711100000000083e-05, 8.677799999999916e-05, 8.64860000000002e-05, 8.665299999999904e-05, 8.652799999999891e-05, 8.649999999999977e-05, 8.634799999999998e-05, 8.713899999999997e-05, 8.647200000000063e-05, 8.704099999999951e-05, 8.68050000000023e-05, 8.701399999999984e-05, 8.655499999999858e-05, 8.66669999999986e-05, 8.663899999999947e-05, 8.676399999999959e-05, 8.693099999999843e-05, 8.719500000000172e-05, 8.652799999999891e-05, 8.672200000000088e-05, 8.66799999999987e-05, 8.654099999999901e-05, 8.675000000000002e-05, 8.63470000000005e-05, 8.673600000000045e-05, 8.66669999999986e-05, 8.694500000000147e-05, 8.64860000000002e-05, 8.679199999999873e-05, 8.686099999999711e-05, 8.638899999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.702" endtime="20201115 23:01:26.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.697" endtime="20201115 23:01:26.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.706" endtime="20201115 23:01:26.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.710" endtime="20201115 23:01:26.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.708" endtime="20201115 23:01:26.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.705" endtime="20201115 23:01:26.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.336" endtime="20201115 23:01:26.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.334" endtime="20201115 23:01:26.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.333" endtime="20201115 23:01:26.731"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.742" endtime="20201115 23:01:26.762"></status>
</kw>
<msg timestamp="20201115 23:01:26.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.740" endtime="20201115 23:01:26.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.764" endtime="20201115 23:01:26.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.766" endtime="20201115 23:01:26.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.738" endtime="20201115 23:01:26.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.736" endtime="20201115 23:01:26.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.775" endtime="20201115 23:01:27.061"></status>
</kw>
<msg timestamp="20201115 23:01:27.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.774" endtime="20201115 23:01:27.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023425125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.065" endtime="20201115 23:01:27.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.073" endtime="20201115 23:01:27.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.771" endtime="20201115 23:01:27.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.769" endtime="20201115 23:01:27.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.080" level="INFO">${RESULT} = [{'time': 0.023425125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.800000000000127e-05, 'source_diff': 8.800000000000127e-05}, {'time': 0.023517181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:27.076" endtime="20201115 23:01:27.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.093" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:27.080" endtime="20201115 23:01:27.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.097" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.096" endtime="20201115 23:01:27.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.100" level="INFO">VALUE: [8.800000000000127e-05, 8.791699999999986e-05, 8.74999999999973e-05, 8.741700000000283e-05, 8.74310000000024e-05, 8.78059999999993e-05, 8.763900000000047e-05, 8.765300000000004e-05, 8.798700000000118e-05, 8.806899999999965e-05, 8.780499999999983e-05, 8.772200000000188e-05, 8.744400000000249e-05, 8.763900000000047e-05, 8.740299999999979e-05, 8.737500000000065e-05, 8.809699999999879e-05, 8.811099999999836e-05, 8.770899999999832e-05, 8.751300000000087e-05, 8.817999999999673e-05, 8.752700000000044e-05, 8.741599999999988e-05, 8.822199999999891e-05, 8.793099999999943e-05, 8.776400000000059e-05, 8.763900000000047e-05, 8.815299999999707e-05, 8.819499999999925e-05, 8.815300000000054e-05, 8.781999999999887e-05, 8.7944999999999e-05, 8.766600000000013e-05, 8.73470000000015e-05, 8.741599999999988e-05, 8.795800000000256e-05, 8.76799999999997e-05, 8.737500000000065e-05, 8.73470000000015e-05, 8.773600000000145e-05, 8.808399999999869e-05, 8.733299999999847e-05, 8.779199999999973e-05, 8.745799999999859e-05, 8.801400000000084e-05, 8.801399999999737e-05, 8.748599999999773e-05, 8.770800000000231e-05, 8.772199999999841e-05, 8.769499999999875e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.098" endtime="20201115 23:01:27.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.094" endtime="20201115 23:01:27.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.103" endtime="20201115 23:01:27.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.107" endtime="20201115 23:01:27.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.105" endtime="20201115 23:01:27.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.102" endtime="20201115 23:01:27.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.734" endtime="20201115 23:01:27.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.733" endtime="20201115 23:01:27.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.732" endtime="20201115 23:01:27.128"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.130" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.138" endtime="20201115 23:01:27.157"></status>
</kw>
<msg timestamp="20201115 23:01:27.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.137" endtime="20201115 23:01:27.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.158" endtime="20201115 23:01:27.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.161" endtime="20201115 23:01:27.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.134" endtime="20201115 23:01:27.163"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.132" endtime="20201115 23:01:27.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.170" endtime="20201115 23:01:27.455"></status>
</kw>
<msg timestamp="20201115 23:01:27.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.168" endtime="20201115 23:01:27.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.459" endtime="20201115 23:01:27.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.467" endtime="20201115 23:01:27.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.166" endtime="20201115 23:01:27.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.164" endtime="20201115 23:01:27.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.474" level="INFO">${RESULT} = [{'time': 0.021966139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.862499999999843e-05, 'source_diff': 8.862499999999843e-05}, {'time': 0.022061153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:27.470" endtime="20201115 23:01:27.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.487" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:27.475" endtime="20201115 23:01:27.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.491" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.490" endtime="20201115 23:01:27.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.494" level="INFO">VALUE: [8.862499999999843e-05, 8.870899999999932e-05, 8.883399999999944e-05, 8.841600000000088e-05, 8.926399999999862e-05, 8.848599999999873e-05, 8.905600000000055e-05, 8.89999999999988e-05, 8.838899999999775e-05, 8.91800000000012e-05, 8.884699999999954e-05, 8.88060000000003e-05, 8.823599999999848e-05, 8.847199999999916e-05, 8.823700000000143e-05, 8.870799999999984e-05, 8.861099999999886e-05, 8.866600000000113e-05, 8.843099999999993e-05, 8.89999999999988e-05, 8.823599999999848e-05, 8.891699999999739e-05, 8.905600000000055e-05, 8.893100000000043e-05, 8.8945e-05, 8.831999999999937e-05, 8.888799999999877e-05, 8.901399999999837e-05, 8.894400000000052e-05, 8.875000000000202e-05, 8.858299999999972e-05, 8.856999999999962e-05, 8.869400000000027e-05, 8.851400000000134e-05, 8.859799999999876e-05, 8.901399999999837e-05, 8.848599999999873e-05, 8.843000000000045e-05, 8.920899999999982e-05, 8.905500000000108e-05, 8.911099999999936e-05, 8.897199999999966e-05, 8.920799999999687e-05, 8.838900000000122e-05, 8.880500000000083e-05, 8.84999999999983e-05, 8.836099999999861e-05, 8.851400000000134e-05, 8.895899999999957e-05, 8.84999999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.492" endtime="20201115 23:01:27.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.488" endtime="20201115 23:01:27.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.497" endtime="20201115 23:01:27.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.501" endtime="20201115 23:01:27.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.499" endtime="20201115 23:01:27.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.496" endtime="20201115 23:01:27.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.131" endtime="20201115 23:01:27.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.129" endtime="20201115 23:01:27.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.128" endtime="20201115 23:01:27.522"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.524" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.532" endtime="20201115 23:01:27.551"></status>
</kw>
<msg timestamp="20201115 23:01:27.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.531" endtime="20201115 23:01:27.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.553" endtime="20201115 23:01:27.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.556" endtime="20201115 23:01:27.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.528" endtime="20201115 23:01:27.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.526" endtime="20201115 23:01:27.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.564" endtime="20201115 23:01:27.852"></status>
</kw>
<msg timestamp="20201115 23:01:27.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.563" endtime="20201115 23:01:27.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.856" endtime="20201115 23:01:27.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.864" endtime="20201115 23:01:27.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.560" endtime="20201115 23:01:27.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.559" endtime="20201115 23:01:27.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.871" level="INFO">${RESULT} = [{'time': 0.022167583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.952700000000244e-05, 'source_diff': 8.952700000000244e-05}, {'time': 0.022260667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:27.868" endtime="20201115 23:01:27.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.885" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:27.872" endtime="20201115 23:01:27.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.889" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.888" endtime="20201115 23:01:27.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.892" level="INFO">VALUE: [8.952700000000244e-05, 8.93060000000008e-05, 8.945800000000059e-05, 8.934700000000004e-05, 8.984699999999707e-05, 8.991700000000186e-05, 9.009700000000079e-05, 8.987499999999968e-05, 8.930500000000133e-05, 9.008300000000122e-05, 8.95129999999994e-05, 8.955499999999811e-05, 8.970800000000084e-05, 8.948599999999973e-05, 9.002799999999894e-05, 8.941700000000136e-05, 8.995800000000109e-05, 8.94999999999993e-05, 8.997300000000014e-05, 8.98060000000013e-05, 8.938899999999875e-05, 8.959700000000029e-05, 9.011100000000036e-05, 8.923599999999948e-05, 9.012499999999993e-05, 9.001399999999937e-05, 8.976399999999912e-05, 8.966699999999814e-05, 8.979200000000173e-05, 8.986100000000011e-05, 8.951399999999887e-05, 9.004199999999851e-05, 8.976299999999965e-05, 9.002700000000294e-05, 8.997200000000066e-05, 8.965300000000204e-05, 8.927799999999819e-05, 8.983300000000097e-05, 8.962499999999943e-05, 8.954200000000148e-05, 8.984700000000054e-05, 8.977799999999869e-05, 8.945900000000007e-05, 8.9945000000001e-05, 9.008300000000122e-05, 8.992999999999848e-05, 8.955500000000158e-05, 8.984700000000054e-05, 8.956900000000115e-05, 8.922199999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.890" endtime="20201115 23:01:27.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.886" endtime="20201115 23:01:27.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.895" endtime="20201115 23:01:27.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.898" endtime="20201115 23:01:27.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.897" endtime="20201115 23:01:27.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.893" endtime="20201115 23:01:27.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.525" endtime="20201115 23:01:27.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.523" endtime="20201115 23:01:27.919"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.522" endtime="20201115 23:01:27.920"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.922" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.930" endtime="20201115 23:01:27.950"></status>
</kw>
<msg timestamp="20201115 23:01:27.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.928" endtime="20201115 23:01:27.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.952" endtime="20201115 23:01:27.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.954" endtime="20201115 23:01:27.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.926" endtime="20201115 23:01:27.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.924" endtime="20201115 23:01:27.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.963" endtime="20201115 23:01:28.247"></status>
</kw>
<msg timestamp="20201115 23:01:28.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022778083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.962" endtime="20201115 23:01:28.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022778083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.251" endtime="20201115 23:01:28.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.260" endtime="20201115 23:01:28.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.959" endtime="20201115 23:01:28.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.957" endtime="20201115 23:01:28.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.267" level="INFO">${RESULT} = [{'time': 0.022868833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.075000000000055e-05, 'source_diff': 9.075000000000055e-05}, {'time': 0.022968833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.263" endtime="20201115 23:01:28.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.281" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:28.268" endtime="20201115 23:01:28.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.286" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.285" endtime="20201115 23:01:28.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.288" level="INFO">VALUE: [9.075000000000055e-05, 9.051399999999987e-05, 9.104199999999951e-05, 9.115300000000007e-05, 9.034700000000104e-05, 9.079199999999926e-05, 9.088900000000025e-05, 9.056999999999815e-05, 9.076400000000012e-05, 9.084800000000101e-05, 9.117999999999973e-05, 9.11390000000005e-05, 9.11939999999993e-05, 9.116600000000016e-05, 9.052799999999944e-05, 9.020799999999787e-05, 9.048600000000073e-05, 9.062500000000043e-05, 9.062500000000043e-05, 9.113899999999703e-05, 9.077799999999969e-05, 9.048600000000073e-05, 9.08329999999985e-05, 9.052699999999997e-05, 9.041600000000288e-05, 9.104199999999951e-05, 9.10000000000008e-05, 9.036100000000061e-05, 9.116699999999964e-05, 9.11390000000005e-05, 9.03060000000018e-05, 9.118099999999921e-05, 9.106899999999918e-05, 9.095799999999862e-05, 9.034700000000104e-05, 9.116600000000016e-05, 9.087500000000068e-05, 9.062500000000043e-05, 9.062500000000043e-05, 9.094499999999853e-05, 9.03060000000018e-05, 9.038899999999975e-05, 9.088900000000025e-05, 9.101400000000037e-05, 9.073600000000098e-05, 9.102700000000047e-05, 9.070799999999837e-05, 9.070800000000184e-05, 9.090300000000329e-05, 9.112500000000093e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.287" endtime="20201115 23:01:28.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.282" endtime="20201115 23:01:28.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.291" endtime="20201115 23:01:28.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.295" endtime="20201115 23:01:28.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.293" endtime="20201115 23:01:28.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.290" endtime="20201115 23:01:28.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.923" endtime="20201115 23:01:28.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.921" endtime="20201115 23:01:28.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.920" endtime="20201115 23:01:28.316"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.318" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.326" endtime="20201115 23:01:28.345"></status>
</kw>
<msg timestamp="20201115 23:01:28.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.325" endtime="20201115 23:01:28.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.346" endtime="20201115 23:01:28.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.349" endtime="20201115 23:01:28.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.322" endtime="20201115 23:01:28.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.320" endtime="20201115 23:01:28.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.358" endtime="20201115 23:01:28.643"></status>
</kw>
<msg timestamp="20201115 23:01:28.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.356" endtime="20201115 23:01:28.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.647" endtime="20201115 23:01:28.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.655" endtime="20201115 23:01:28.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.354" endtime="20201115 23:01:28.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.352" endtime="20201115 23:01:28.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.662" level="INFO">${RESULT} = [{'time': 0.022090264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.219499999999978e-05, 'source_diff': 9.219499999999978e-05}, {'time': 0.022191292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.659" endtime="20201115 23:01:28.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.676" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:28.663" endtime="20201115 23:01:28.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.680" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.679" endtime="20201115 23:01:28.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.682" level="INFO">VALUE: [9.219499999999978e-05, 9.140300000000032e-05, 9.177800000000069e-05, 9.138900000000075e-05, 9.133399999999847e-05, 9.205500000000061e-05, 9.172299999999842e-05, 9.136100000000161e-05, 9.123599999999801e-05, 9.21940000000003e-05, 9.21529999999976e-05, 9.208299999999975e-05, 9.187499999999821e-05, 9.188899999999778e-05, 9.191700000000039e-05, 9.188900000000125e-05, 9.125000000000105e-05, 9.16520000000011e-05, 9.195799999999962e-05, 9.208299999999975e-05, 9.223599999999901e-05, 9.184700000000254e-05, 9.218100000000021e-05, 9.14719999999987e-05, 9.187500000000168e-05, 9.177800000000069e-05, 9.151400000000087e-05, 9.199999999999833e-05, 9.212499999999846e-05, 9.173599999999851e-05, 9.125000000000105e-05, 9.151400000000087e-05, 9.21940000000003e-05, 9.198599999999876e-05, 9.134699999999857e-05, 9.179200000000026e-05, 9.18329999999995e-05, 9.122300000000139e-05, 9.170900000000232e-05, 9.155500000000011e-05, 9.16520000000011e-05, 9.195799999999962e-05, 9.134699999999857e-05, 9.133300000000247e-05, 9.152800000000044e-05, 9.180599999999983e-05, 9.137499999999771e-05, 9.143099999999946e-05, 9.168100000000318e-05, 9.144499999999903e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.681" endtime="20201115 23:01:28.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.676" endtime="20201115 23:01:28.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.686" endtime="20201115 23:01:28.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.689" endtime="20201115 23:01:28.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.688" endtime="20201115 23:01:28.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.684" endtime="20201115 23:01:28.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.319" endtime="20201115 23:01:28.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.317" endtime="20201115 23:01:28.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.316" endtime="20201115 23:01:28.710"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.712" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.721" endtime="20201115 23:01:28.740"></status>
</kw>
<msg timestamp="20201115 23:01:28.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.719" endtime="20201115 23:01:28.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.741" endtime="20201115 23:01:28.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.744" endtime="20201115 23:01:28.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.717" endtime="20201115 23:01:28.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.714" endtime="20201115 23:01:28.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.753" endtime="20201115 23:01:29.038"></status>
</kw>
<msg timestamp="20201115 23:01:29.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.752" endtime="20201115 23:01:29.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022268083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.042" endtime="20201115 23:01:29.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.051" endtime="20201115 23:01:29.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.749" endtime="20201115 23:01:29.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.747" endtime="20201115 23:01:29.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.057" level="INFO">${RESULT} = [{'time': 0.022268083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277700000000222e-05, 'source_diff': 9.277700000000222e-05}, {'time': 0.022366083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.054" endtime="20201115 23:01:29.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.071" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:29.058" endtime="20201115 23:01:29.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.075" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.074" endtime="20201115 23:01:29.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.078" level="INFO">VALUE: [9.277700000000222e-05, 9.263899999999853e-05, 9.290299999999835e-05, 9.241700000000089e-05, 9.299999999999933e-05, 9.220899999999935e-05, 9.277699999999875e-05, 9.28200000000004e-05, 9.241700000000089e-05, 9.280599999999736e-05, 9.304099999999857e-05, 9.234699999999957e-05, 9.229100000000129e-05, 9.227800000000119e-05, 9.224999999999858e-05, 9.279200000000126e-05, 9.261099999999939e-05, 9.280600000000083e-05, 9.274999999999908e-05, 9.23199999999999e-05, 9.320900000000035e-05, 9.301299999999943e-05, 9.223599999999901e-05, 9.247200000000316e-05, 9.237500000000218e-05, 9.276399999999865e-05, 9.291700000000139e-05, 9.284700000000007e-05, 9.273599999999951e-05, 9.25269999999985e-05, 9.276400000000212e-05, 9.254200000000101e-05, 9.226400000000162e-05, 9.23879999999988e-05, 9.28330000000005e-05, 9.230500000000086e-05, 9.309700000000032e-05, 9.277800000000169e-05, 9.231899999999696e-05, 9.230599999999686e-05, 9.261199999999886e-05, 9.307000000000065e-05, 9.291699999999792e-05, 9.298699999999924e-05, 9.26940000000008e-05, 9.261100000000286e-05, 9.308300000000075e-05, 9.255600000000058e-05, 9.243100000000046e-05, 9.238900000000175e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.076" endtime="20201115 23:01:29.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.072" endtime="20201115 23:01:29.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.081" endtime="20201115 23:01:29.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.084" endtime="20201115 23:01:29.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.083" endtime="20201115 23:01:29.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.079" endtime="20201115 23:01:29.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.713" endtime="20201115 23:01:29.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.711" endtime="20201115 23:01:29.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.710" endtime="20201115 23:01:29.105"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.120" endtime="20201115 23:01:29.139"></status>
</kw>
<msg timestamp="20201115 23:01:29.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.119" endtime="20201115 23:01:29.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.141" endtime="20201115 23:01:29.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.143" endtime="20201115 23:01:29.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.112" endtime="20201115 23:01:29.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.110" endtime="20201115 23:01:29.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.152" endtime="20201115 23:01:29.438"></status>
</kw>
<msg timestamp="20201115 23:01:29.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02665175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:29.151" endtime="20201115 23:01:29.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026557958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02665175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:29.442" endtime="20201115 23:01:29.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.450" endtime="20201115 23:01:29.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.148" endtime="20201115 23:01:29.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.147" endtime="20201115 23:01:29.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.457" level="INFO">${RESULT} = [{'time': 0.02665175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.379199999999879e-05, 'source_diff': 9.379199999999879e-05}, {'time': 0.026752778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:29.453" endtime="20201115 23:01:29.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.470" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:29.458" endtime="20201115 23:01:29.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.475" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.474" endtime="20201115 23:01:29.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.477" level="INFO">VALUE: [9.379199999999879e-05, 9.415300000000307e-05, 9.343099999999799e-05, 9.391700000000239e-05, 9.409800000000079e-05, 9.420800000000187e-05, 9.338899999999928e-05, 9.380500000000236e-05, 9.361099999999692e-05, 9.41529999999996e-05, 9.324999999999958e-05, 9.419399999999883e-05, 9.337499999999971e-05, 9.398600000000076e-05, 9.413900000000003e-05, 9.375000000000008e-05, 9.3333000000001e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.338899999999928e-05, 9.408299999999828e-05, 9.331899999999796e-05, 9.372200000000094e-05, 9.355599999999811e-05, 9.420900000000135e-05, 9.333400000000047e-05, 9.337499999999971e-05, 9.379200000000226e-05, 9.40139999999999e-05, 9.390199999999987e-05, 9.375000000000008e-05, 9.326399999999915e-05, 9.408300000000175e-05, 9.38469999999976e-05, 9.355600000000158e-05, 9.340299999999885e-05, 9.349999999999983e-05, 9.375000000000008e-05, 9.409800000000079e-05, 9.355499999999864e-05, 9.405499999999914e-05, 9.3333000000001e-05, 9.406899999999871e-05, 9.336100000000014e-05, 9.375000000000008e-05, 9.361100000000039e-05, 9.337499999999971e-05, 9.375000000000355e-05, 9.357000000000115e-05, 9.354100000000254e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.476" endtime="20201115 23:01:29.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.471" endtime="20201115 23:01:29.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.480" endtime="20201115 23:01:29.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.484" endtime="20201115 23:01:29.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.482" endtime="20201115 23:01:29.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.479" endtime="20201115 23:01:29.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.108" endtime="20201115 23:01:29.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.107" endtime="20201115 23:01:29.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.106" endtime="20201115 23:01:29.505"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.508" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.516" endtime="20201115 23:01:29.536"></status>
</kw>
<msg timestamp="20201115 23:01:29.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.514" endtime="20201115 23:01:29.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.537" endtime="20201115 23:01:29.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.540" endtime="20201115 23:01:29.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.512" endtime="20201115 23:01:29.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.510" endtime="20201115 23:01:29.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.549" endtime="20201115 23:01:29.834"></status>
</kw>
<msg timestamp="20201115 23:01:29.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023272444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.547" endtime="20201115 23:01:29.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023177403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023272444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.838" endtime="20201115 23:01:29.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.846" endtime="20201115 23:01:29.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.545" endtime="20201115 23:01:29.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.543" endtime="20201115 23:01:29.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.853" level="INFO">${RESULT} = [{'time': 0.023272444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.504100000000057e-05, 'source_diff': 9.504100000000057e-05}, {'time': 0.023371486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.850" endtime="20201115 23:01:29.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.867" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:29.854" endtime="20201115 23:01:29.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.872" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.871" endtime="20201115 23:01:29.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.874" level="INFO">VALUE: [9.504100000000057e-05, 9.497199999999872e-05, 9.434700000000157e-05, 9.479100000000032e-05, 9.426400000000015e-05, 9.423600000000101e-05, 9.513899999999756e-05, 9.477800000000022e-05, 9.461100000000139e-05, 9.434799999999757e-05, 9.509799999999832e-05, 9.441600000000341e-05, 9.490200000000087e-05, 9.490300000000035e-05, 9.477800000000022e-05, 9.508299999999928e-05, 9.470900000000185e-05, 9.502800000000047e-05, 9.490300000000035e-05, 9.525000000000158e-05, 9.49859999999983e-05, 9.472199999999847e-05, 9.513900000000103e-05, 9.467999999999976e-05, 9.477700000000075e-05, 9.483299999999903e-05, 9.459700000000182e-05, 9.502800000000047e-05, 9.45140000000004e-05, 9.423599999999754e-05, 9.469500000000228e-05, 9.525000000000158e-05, 9.461200000000086e-05, 9.472199999999847e-05, 9.518000000000026e-05, 9.490300000000035e-05, 9.454199999999954e-05, 9.512500000000146e-05, 9.45140000000004e-05, 9.437500000000071e-05, 9.509700000000232e-05, 9.518099999999974e-05, 9.483400000000197e-05, 9.511200000000136e-05, 9.427699999999678e-05, 9.519399999999983e-05, 9.459699999999835e-05, 9.475000000000108e-05, 9.504200000000004e-05, 9.444400000000255e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.873" endtime="20201115 23:01:29.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.868" endtime="20201115 23:01:29.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.878" endtime="20201115 23:01:29.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.881" endtime="20201115 23:01:29.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.880" endtime="20201115 23:01:29.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.876" endtime="20201115 23:01:29.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.508" endtime="20201115 23:01:29.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.506" endtime="20201115 23:01:29.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.506" endtime="20201115 23:01:29.903"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.913" endtime="20201115 23:01:29.933"></status>
</kw>
<msg timestamp="20201115 23:01:29.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.911" endtime="20201115 23:01:29.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.934" endtime="20201115 23:01:29.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.937" endtime="20201115 23:01:29.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.909" endtime="20201115 23:01:29.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.907" endtime="20201115 23:01:29.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.946" endtime="20201115 23:01:30.231"></status>
</kw>
<msg timestamp="20201115 23:01:30.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:29.944" endtime="20201115 23:01:30.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02197625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:30.235" endtime="20201115 23:01:30.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.243" endtime="20201115 23:01:30.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.942" endtime="20201115 23:01:30.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.940" endtime="20201115 23:01:30.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.250" level="INFO">${RESULT} = [{'time': 0.02197625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.622199999999997e-05, 'source_diff': 9.622199999999997e-05}, {'time': 0.022078292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:30.246" endtime="20201115 23:01:30.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.263" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:30.251" endtime="20201115 23:01:30.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.268" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.267" endtime="20201115 23:01:30.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.270" level="INFO">VALUE: [9.622199999999997e-05, 9.623599999999954e-05, 9.544400000000008e-05, 9.53469999999991e-05, 9.54720000000027e-05, 9.56530000000011e-05, 9.590200000000187e-05, 9.550000000000183e-05, 9.601299999999896e-05, 9.556900000000021e-05, 9.522199999999897e-05, 9.569400000000033e-05, 9.545799999999965e-05, 9.609699999999985e-05, 9.593000000000101e-05, 9.531899999999996e-05, 9.576399999999818e-05, 9.605500000000114e-05, 9.626399999999868e-05, 9.550000000000183e-05, 9.594400000000058e-05, 9.555499999999717e-05, 9.58469999999996e-05, 9.616700000000117e-05, 9.538900000000128e-05, 9.559699999999935e-05, 9.575000000000208e-05, 9.53469999999991e-05, 9.531999999999943e-05, 9.549999999999836e-05, 9.562500000000196e-05, 9.550000000000183e-05, 9.536099999999867e-05, 9.554200000000054e-05, 9.618100000000074e-05, 9.602800000000147e-05, 9.55140000000014e-05, 9.575000000000208e-05, 9.576399999999818e-05, 9.594500000000006e-05, 9.558299999999978e-05, 9.583300000000003e-05, 9.576399999999818e-05, 9.579099999999785e-05, 9.605600000000061e-05, 9.544400000000008e-05, 9.607000000000018e-05, 9.556999999999968e-05, 9.608399999999975e-05, 9.61530000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.269" endtime="20201115 23:01:30.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.264" endtime="20201115 23:01:30.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.274" endtime="20201115 23:01:30.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.277" endtime="20201115 23:01:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.276" endtime="20201115 23:01:30.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.272" endtime="20201115 23:01:30.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.906" endtime="20201115 23:01:30.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.904" endtime="20201115 23:01:30.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.903" endtime="20201115 23:01:30.298"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.301" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.309" endtime="20201115 23:01:30.327"></status>
</kw>
<msg timestamp="20201115 23:01:30.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.307" endtime="20201115 23:01:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.329" endtime="20201115 23:01:30.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.331" endtime="20201115 23:01:30.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.305" endtime="20201115 23:01:30.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.303" endtime="20201115 23:01:30.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.340" endtime="20201115 23:01:30.625"></status>
</kw>
<msg timestamp="20201115 23:01:30.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.339" endtime="20201115 23:01:30.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.630" endtime="20201115 23:01:30.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.638" endtime="20201115 23:01:30.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.336" endtime="20201115 23:01:30.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.335" endtime="20201115 23:01:30.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.644" level="INFO">${RESULT} = [{'time': 0.022024708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.633300000000053e-05, 'source_diff': 9.633300000000053e-05}, {'time': 0.022126736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:30.641" endtime="20201115 23:01:30.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.658" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:30.646" endtime="20201115 23:01:30.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.663" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.662" endtime="20201115 23:01:30.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.665" level="INFO">VALUE: [9.633300000000053e-05, 9.683300000000103e-05, 9.72219999999975e-05, 9.719400000000183e-05, 9.688899999999931e-05, 9.637499999999924e-05, 9.7027999999999e-05, 9.706900000000171e-05, 9.627800000000172e-05, 9.655499999999817e-05, 9.67080000000009e-05, 9.686100000000017e-05, 9.719400000000183e-05, 9.638899999999881e-05, 9.677799999999875e-05, 9.626399999999868e-05, 9.708300000000128e-05, 9.626399999999868e-05, 9.638899999999881e-05, 9.711199999999989e-05, 9.672200000000047e-05, 9.701299999999996e-05, 9.668000000000176e-05, 9.672200000000047e-05, 9.70140000000029e-05, 9.693100000000149e-05, 9.640299999999838e-05, 9.665299999999863e-05, 9.640300000000185e-05, 9.699999999999986e-05, 9.624999999999911e-05, 9.662499999999949e-05, 9.709699999999738e-05, 9.65409999999986e-05, 9.63470000000001e-05, 9.651399999999893e-05, 9.702800000000247e-05, 9.66530000000021e-05, 9.665299999999863e-05, 9.649999999999936e-05, 9.654200000000154e-05, 9.672299999999995e-05, 9.72219999999975e-05, 9.637499999999924e-05, 9.656900000000121e-05, 9.681899999999799e-05, 9.705599999999814e-05, 9.669500000000081e-05, 9.677799999999875e-05, 9.720899999999741e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.664" endtime="20201115 23:01:30.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.659" endtime="20201115 23:01:30.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.668" endtime="20201115 23:01:30.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.672" endtime="20201115 23:01:30.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.670" endtime="20201115 23:01:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.667" endtime="20201115 23:01:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.301" endtime="20201115 23:01:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.299" endtime="20201115 23:01:30.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.299" endtime="20201115 23:01:30.693"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.695" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.703" endtime="20201115 23:01:30.723"></status>
</kw>
<msg timestamp="20201115 23:01:30.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.702" endtime="20201115 23:01:30.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.725" endtime="20201115 23:01:30.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.728" endtime="20201115 23:01:30.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.699" endtime="20201115 23:01:30.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.697" endtime="20201115 23:01:30.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.736" endtime="20201115 23:01:31.022"></status>
</kw>
<msg timestamp="20201115 23:01:31.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.735" endtime="20201115 23:01:31.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.026" endtime="20201115 23:01:31.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.035" endtime="20201115 23:01:31.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.732" endtime="20201115 23:01:31.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.731" endtime="20201115 23:01:31.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.041" level="INFO">${RESULT} = [{'time': 0.022027736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.745799999999818e-05, 'source_diff': 9.745799999999818e-05}, {'time': 0.022133736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.038" endtime="20201115 23:01:31.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.055" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:31.042" endtime="20201115 23:01:31.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.059" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.058" endtime="20201115 23:01:31.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.062" level="INFO">VALUE: [9.745799999999818e-05, 9.773600000000104e-05, 9.75279999999995e-05, 9.794399999999912e-05, 9.76669999999992e-05, 9.75279999999995e-05, 9.816700000000317e-05, 9.792999999999955e-05, 9.74999999999969e-05, 9.805499999999967e-05, 9.819399999999937e-05, 9.792999999999955e-05, 9.8028e-05, 9.791699999999945e-05, 9.745799999999818e-05, 9.798599999999782e-05, 9.736100000000067e-05, 9.820900000000188e-05, 9.772200000000147e-05, 9.791599999999998e-05, 9.788900000000031e-05, 9.759699999999788e-05, 9.783300000000203e-05, 9.75140000000034e-05, 9.78059999999989e-05, 9.795800000000215e-05, 9.776400000000018e-05, 9.793099999999902e-05, 9.805499999999967e-05, 9.801300000000096e-05, 9.737500000000024e-05, 9.725000000000011e-05, 9.737500000000024e-05, 9.801400000000043e-05, 9.736200000000014e-05, 9.794500000000206e-05, 9.78470000000016e-05, 9.759799999999735e-05, 9.777799999999975e-05, 9.751399999999993e-05, 9.727699999999978e-05, 9.779099999999985e-05, 9.800000000000086e-05, 9.805600000000261e-05, 9.74999999999969e-05, 9.815300000000013e-05, 9.790299999999988e-05, 9.769400000000233e-05, 9.783300000000203e-05, 9.73059999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.060" endtime="20201115 23:01:31.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.056" endtime="20201115 23:01:31.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.065" endtime="20201115 23:01:31.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.068" endtime="20201115 23:01:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.067" endtime="20201115 23:01:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.063" endtime="20201115 23:01:31.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.696" endtime="20201115 23:01:31.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.694" endtime="20201115 23:01:31.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.693" endtime="20201115 23:01:31.089"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.092" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.100" endtime="20201115 23:01:31.120"></status>
</kw>
<msg timestamp="20201115 23:01:31.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.098" endtime="20201115 23:01:31.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.122" endtime="20201115 23:01:31.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.124" endtime="20201115 23:01:31.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.096" endtime="20201115 23:01:31.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.094" endtime="20201115 23:01:31.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.134" endtime="20201115 23:01:31.419"></status>
</kw>
<msg timestamp="20201115 23:01:31.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.132" endtime="20201115 23:01:31.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.423" endtime="20201115 23:01:31.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.432" endtime="20201115 23:01:31.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.129" endtime="20201115 23:01:31.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.128" endtime="20201115 23:01:31.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.438" level="INFO">${RESULT} = [{'time': 0.022849556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.833399999999853e-05, 'source_diff': 9.833399999999853e-05}, {'time': 0.022953556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.435" endtime="20201115 23:01:31.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.453" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:31.439" endtime="20201115 23:01:31.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.457" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.456" endtime="20201115 23:01:31.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.460" level="INFO">VALUE: [9.833399999999853e-05, 9.840300000000038e-05, 9.86800000000003e-05, 9.881899999999999e-05, 9.89999999999984e-05, 9.827800000000025e-05, 9.826399999999721e-05, 9.912499999999852e-05, 9.863900000000106e-05, 9.86800000000003e-05, 9.863900000000106e-05, 9.883399999999903e-05, 9.876299999999824e-05, 9.881899999999999e-05, 9.841600000000048e-05, 9.838900000000081e-05, 9.85280000000005e-05, 9.88059999999999e-05, 9.829199999999982e-05, 9.844500000000256e-05, 9.851400000000093e-05, 9.9028000000001e-05, 9.902699999999806e-05, 9.87080000000029e-05, 9.824999999999764e-05, 9.823600000000154e-05, 9.8721999999999e-05, 9.84860000000018e-05, 9.918100000000027e-05, 9.847200000000222e-05, 9.901400000000143e-05, 9.830600000000286e-05, 9.861200000000139e-05, 9.831899999999949e-05, 9.830499999999992e-05, 9.844399999999962e-05, 9.844399999999962e-05, 9.912500000000199e-05, 9.833300000000253e-05, 9.881999999999946e-05, 9.909699999999938e-05, 9.904200000000057e-05, 9.888899999999784e-05, 9.88479999999986e-05, 9.865200000000116e-05, 9.875000000000161e-05, 9.912499999999852e-05, 9.879200000000032e-05, 9.854200000000007e-05, 9.881899999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.459" endtime="20201115 23:01:31.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.454" endtime="20201115 23:01:31.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.463" endtime="20201115 23:01:31.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.466" endtime="20201115 23:01:31.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.465" endtime="20201115 23:01:31.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.461" endtime="20201115 23:01:31.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.092" endtime="20201115 23:01:31.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.090" endtime="20201115 23:01:31.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.090" endtime="20201115 23:01:31.488"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.490" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.498" endtime="20201115 23:01:31.518"></status>
</kw>
<msg timestamp="20201115 23:01:31.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.497" endtime="20201115 23:01:31.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.519" endtime="20201115 23:01:31.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.522" endtime="20201115 23:01:31.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.494" endtime="20201115 23:01:31.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.492" endtime="20201115 23:01:31.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.531" endtime="20201115 23:01:31.817"></status>
</kw>
<msg timestamp="20201115 23:01:31.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.530" endtime="20201115 23:01:31.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.821" endtime="20201115 23:01:31.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.830" endtime="20201115 23:01:31.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.527" endtime="20201115 23:01:31.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.525" endtime="20201115 23:01:31.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.836" level="INFO">${RESULT} = [{'time': 0.021975514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.970800000000044e-05, 'source_diff': 9.970800000000044e-05}, {'time': 0.022078486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.833" endtime="20201115 23:01:31.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.850" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:31.837" endtime="20201115 23:01:31.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.854" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.853" endtime="20201115 23:01:31.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.857" level="INFO">VALUE: [9.970800000000044e-05, 9.995800000000069e-05, 9.965199999999869e-05, 9.947199999999976e-05, 9.945899999999966e-05, 9.945899999999966e-05, 9.975000000000261e-05, 9.981900000000099e-05, 9.984700000000013e-05, 9.952699999999856e-05, 9.994400000000112e-05, 0.0001002220000000005, 9.98060000000009e-05, 9.958300000000031e-05, 9.933399999999953e-05, 9.993100000000102e-05, 9.950000000000236e-05, 9.962499999999902e-05, 9.952700000000203e-05, 9.970800000000044e-05, 9.931900000000049e-05, 9.93060000000004e-05, 9.93609999999992e-05, 0.00010011099999999995, 9.979200000000132e-05, 0.000100028000000002, 9.937500000000224e-05, 9.965299999999816e-05, 9.937499999999877e-05, 9.9415999999998e-05, 9.994400000000112e-05, 9.95549999999977e-05, 9.962499999999902e-05, 9.987499999999927e-05, 9.929200000000082e-05, 9.926400000000168e-05, 9.95419999999976e-05, 9.924999999999864e-05, 9.979099999999838e-05, 9.923599999999907e-05, 9.926399999999821e-05, 9.962499999999902e-05, 9.984700000000013e-05, 9.997200000000026e-05, 9.948599999999932e-05, 9.929200000000082e-05, 9.982000000000046e-05, 9.94999999999989e-05, 9.980599999999742e-05, 9.948599999999932e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.855" endtime="20201115 23:01:31.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.851" endtime="20201115 23:01:31.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.860" endtime="20201115 23:01:31.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.863" endtime="20201115 23:01:31.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.862" endtime="20201115 23:01:31.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.858" endtime="20201115 23:01:31.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.491" endtime="20201115 23:01:31.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.489" endtime="20201115 23:01:31.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.488" endtime="20201115 23:01:31.884"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.887" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.895" endtime="20201115 23:01:31.915"></status>
</kw>
<msg timestamp="20201115 23:01:31.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.894" endtime="20201115 23:01:31.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.916" endtime="20201115 23:01:31.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.919" endtime="20201115 23:01:31.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.891" endtime="20201115 23:01:31.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.889" endtime="20201115 23:01:31.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.928" endtime="20201115 23:01:32.213"></status>
</kw>
<msg timestamp="20201115 23:01:32.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.926" endtime="20201115 23:01:32.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022563931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.217" endtime="20201115 23:01:32.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.225" endtime="20201115 23:01:32.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.924" endtime="20201115 23:01:32.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.922" endtime="20201115 23:01:32.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.231" level="INFO">${RESULT} = [{'time': 0.022563931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001004999999999999, 'source_diff': 0.0001004999999999999}, {'time': 0.022670931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.228" endtime="20201115 23:01:32.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.244" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:32.232" endtime="20201115 23:01:32.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.249" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.248" endtime="20201115 23:01:32.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.251" level="INFO">VALUE: [0.0001004999999999999, 0.00010063899999999959, 0.00010048700000000327, 0.00010084700000000113, 0.00010033299999999759, 0.00010048599999999686, 0.00010038899999999934, 0.00010115300000000313, 0.00010120799999999847, 0.00010075000000000014, 0.00010097300000000073, 0.00010051399999999946, 0.00010022299999999998, 0.00010031900000000149, 0.0001010000000000004, 0.00010120799999999847, 0.00010083299999999809, 0.00010038899999999934, 0.00010024999999999964, 0.00010048599999999686, 0.00010029199999999835, 0.00010097300000000073, 0.00010109799999999738, 0.00010109700000000138, 0.00010023600000000008, 0.00010052799999999903, 0.0001010000000000004, 0.00010031900000000149, 0.00010031899999999802, 0.00010066699999999873, 0.00010076399999999971, 0.00010082000000000146, 0.00010025000000000311, 0.00010116599999999976, 0.00010070800000000144, 0.00010030499999999845, 0.00010048600000000033, 0.0001010000000000004, 0.00010052799999999903, 0.00010113900000000009, 0.00010040300000000238, 0.0001003610000000002, 0.00010029200000000182, 0.00010075000000000014, 0.00010083299999999809, 0.00010026399999999921, 0.00010055500000000217, 0.00010090299999999941, 0.00010041700000000195, 0.00010052799999999903]</msg>
<status status="PASS" starttime="20201115 23:01:32.250" endtime="20201115 23:01:32.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.245" endtime="20201115 23:01:32.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.254" endtime="20201115 23:01:32.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.258" endtime="20201115 23:01:32.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.256" endtime="20201115 23:01:32.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.253" endtime="20201115 23:01:32.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.887" endtime="20201115 23:01:32.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.886" endtime="20201115 23:01:32.279"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.885" endtime="20201115 23:01:32.279"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.282" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.290" endtime="20201115 23:01:32.309"></status>
</kw>
<msg timestamp="20201115 23:01:32.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.288" endtime="20201115 23:01:32.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.310" endtime="20201115 23:01:32.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.313" endtime="20201115 23:01:32.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.286" endtime="20201115 23:01:32.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.284" endtime="20201115 23:01:32.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.322" endtime="20201115 23:01:32.607"></status>
</kw>
<msg timestamp="20201115 23:01:32.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:32.320" endtime="20201115 23:01:32.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:32.611" endtime="20201115 23:01:32.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.619" endtime="20201115 23:01:32.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.318" endtime="20201115 23:01:32.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.316" endtime="20201115 23:01:32.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.625" level="INFO">${RESULT} = [{'time': 0.022469, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010126400000000021, 'source_diff': 0.00010126400000000021}, {'time': 0.022576028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:32.622" endtime="20201115 23:01:32.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.638" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:32.626" endtime="20201115 23:01:32.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.643" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.642" endtime="20201115 23:01:32.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.645" level="INFO">VALUE: [0.00010126400000000021, 0.00010213900000000109, 0.00010206999999999924, 0.0001016809999999993, 0.00010179100000000038, 0.00010152699999999709, 0.000101416, 0.00010154100000000013, 0.00010182000000000246, 0.00010202800000000053, 0.00010197200000000226, 0.00010208399999999881, 0.00010127799999999978, 0.00010188899999999737, 0.0001015000000000009, 0.00010180499999999995, 0.00010159699999999841, 0.00010161099999999798, 0.0001015549999999997, 0.00010158299999999884, 0.00010208299999999934, 0.00010180599999999942, 0.00010194500000000259, 0.00010158299999999884, 0.00010209799999999838, 0.00010133300000000206, 0.00010161099999999798, 0.000101722000000002, 0.00010144399999999915, 0.00010147199999999829, 0.00010131899999999902, 0.0001020420000000001, 0.00010176400000000071, 0.00010155599999999917, 0.00010136099999999773, 0.00010125000000000065, 0.00010198600000000183, 0.00010127700000000031, 0.00010162500000000102, 0.00010127799999999978, 0.00010161100000000145, 0.00010187500000000127, 0.00010143100000000252, 0.00010208399999999881, 0.00010125000000000065, 0.00010163900000000059, 0.00010220799999999947, 0.0001016939999999994, 0.00010211100000000195, 0.00010208299999999934]</msg>
<status status="PASS" starttime="20201115 23:01:32.644" endtime="20201115 23:01:32.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.639" endtime="20201115 23:01:32.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.649" endtime="20201115 23:01:32.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.652" endtime="20201115 23:01:32.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.651" endtime="20201115 23:01:32.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.647" endtime="20201115 23:01:32.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.282" endtime="20201115 23:01:32.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.281" endtime="20201115 23:01:32.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.280" endtime="20201115 23:01:32.673"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.676" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.684" endtime="20201115 23:01:32.705"></status>
</kw>
<msg timestamp="20201115 23:01:32.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.683" endtime="20201115 23:01:32.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.707" endtime="20201115 23:01:32.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.709" endtime="20201115 23:01:32.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.680" endtime="20201115 23:01:32.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.678" endtime="20201115 23:01:32.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.718" endtime="20201115 23:01:33.005"></status>
</kw>
<msg timestamp="20201115 23:01:33.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023998944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.717" endtime="20201115 23:01:33.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023998944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.009" endtime="20201115 23:01:33.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.017" endtime="20201115 23:01:33.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.714" endtime="20201115 23:01:33.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.713" endtime="20201115 23:01:33.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.023" level="INFO">${RESULT} = [{'time': 0.023998944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010273600000000258, 'source_diff': 0.00010273600000000258}, {'time': 0.024104958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.020" endtime="20201115 23:01:33.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.038" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:33.024" endtime="20201115 23:01:33.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.042" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.041" endtime="20201115 23:01:33.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.045" level="INFO">VALUE: [0.00010273600000000258, 0.00010288899999999837, 0.0001025550000000007, 0.00010229200000000035, 0.0001025420000000006, 0.00010270799999999997, 0.000102513999999998, 0.00010270899999999944, 0.00010305499999999773, 0.00010261099999999898, 0.00010248599999999886, 0.00010286099999999923, 0.00010276400000000172, 0.00010295800000000022, 0.00010277799999999782, 0.00010240200000000144, 0.00010256900000000027, 0.00010311099999999948, 0.00010251300000000199, 0.00010262499999999855, 0.0001030550000000012, 0.00010265200000000169, 0.00010238899999999787, 0.00010288900000000184, 0.00010243100000000005, 0.00010240300000000091, 0.00010248599999999886, 0.00010266700000000073, 0.00010277800000000128, 0.00010230500000000045, 0.00010261099999999898, 0.00010248599999999886, 0.00010298599999999936, 0.00010231900000000002, 0.00010265300000000116, 0.0001023199999999995, 0.00010266700000000073, 0.00010225000000000165, 0.00010269499999999987, 0.00010244499999999962, 0.00010251400000000147, 0.00010287500000000227, 0.00010248599999999886, 0.00010263900000000159, 0.0001030420000000011, 0.00010316700000000123, 0.00010280600000000042, 0.00010272199999999954, 0.00010312499999999905, 0.00010266700000000073]</msg>
<status status="PASS" starttime="20201115 23:01:33.043" endtime="20201115 23:01:33.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.039" endtime="20201115 23:01:33.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.048" endtime="20201115 23:01:33.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.051" endtime="20201115 23:01:33.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.050" endtime="20201115 23:01:33.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.047" endtime="20201115 23:01:33.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.677" endtime="20201115 23:01:33.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.675" endtime="20201115 23:01:33.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.674" endtime="20201115 23:01:33.073"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.075" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.083" endtime="20201115 23:01:33.102"></status>
</kw>
<msg timestamp="20201115 23:01:33.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.082" endtime="20201115 23:01:33.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.104" endtime="20201115 23:01:33.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.107" endtime="20201115 23:01:33.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.079" endtime="20201115 23:01:33.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.077" endtime="20201115 23:01:33.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.116" endtime="20201115 23:01:33.400"></status>
</kw>
<msg timestamp="20201115 23:01:33.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.114" endtime="20201115 23:01:33.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.404" endtime="20201115 23:01:33.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.412" endtime="20201115 23:01:33.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.112" endtime="20201115 23:01:33.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.110" endtime="20201115 23:01:33.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.419" level="INFO">${RESULT} = [{'time': 0.022217764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010329200000000135, 'source_diff': 0.00010329200000000135}, {'time': 0.022325778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.416" endtime="20201115 23:01:33.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.432" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:33.420" endtime="20201115 23:01:33.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.437" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.436" endtime="20201115 23:01:33.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.439" level="INFO">VALUE: [0.00010329200000000135, 0.0001035420000000016, 0.00010408400000000081, 0.00010422200000000104, 0.00010413800000000015, 0.00010401300000000002, 0.00010338900000000234, 0.00010416699999999876, 0.00010402800000000254, 0.00010419500000000137, 0.00010381999999999753, 0.00010365300000000216, 0.00010402800000000254, 0.00010349999999999943, 0.00010365300000000216, 0.00010409700000000091, 0.00010395800000000122, 0.00010331999999999703, 0.0001035420000000016, 0.00010390300000000241, 0.0001040139999999995, 0.000103820000000001, 0.00010409799999999692, 0.00010366700000000173, 0.00010409799999999692, 0.00010402699999999959, 0.00010341599999999854, 0.0001032359999999996, 0.00010331900000000102, 0.00010384700000000066, 0.0001040139999999995, 0.00010365300000000216, 0.00010420900000000094, 0.00010381900000000152, 0.00010372200000000054, 0.00010418000000000233, 0.000103513999999999, 0.00010324999999999918, 0.00010349999999999943, 0.00010336099999999973, 0.00010408300000000134, 0.0001036810000000013, 0.00010334799999999963, 0.00010383400000000056, 0.00010408299999999787, 0.00010402700000000306, 0.00010377800000000229, 0.00010345800000000072, 0.00010391699999999851, 0.00010362499999999955]</msg>
<status status="PASS" starttime="20201115 23:01:33.438" endtime="20201115 23:01:33.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.433" endtime="20201115 23:01:33.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.443" endtime="20201115 23:01:33.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.447" endtime="20201115 23:01:33.466"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.445" endtime="20201115 23:01:33.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.441" endtime="20201115 23:01:33.467"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.076" endtime="20201115 23:01:33.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.074" endtime="20201115 23:01:33.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.073" endtime="20201115 23:01:33.468"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.470" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.479" endtime="20201115 23:01:33.497"></status>
</kw>
<msg timestamp="20201115 23:01:33.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.477" endtime="20201115 23:01:33.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.499" endtime="20201115 23:01:33.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.501" endtime="20201115 23:01:33.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.474" endtime="20201115 23:01:33.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.472" endtime="20201115 23:01:33.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.510" endtime="20201115 23:01:33.797"></status>
</kw>
<msg timestamp="20201115 23:01:33.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.509" endtime="20201115 23:01:33.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.801" endtime="20201115 23:01:33.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.809" endtime="20201115 23:01:33.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.506" endtime="20201115 23:01:33.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.505" endtime="20201115 23:01:33.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.816" level="INFO">${RESULT} = [{'time': 0.022741556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010447300000000076, 'source_diff': 0.00010447300000000076}, {'time': 0.022852569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:33.812" endtime="20201115 23:01:33.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.829" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:33.817" endtime="20201115 23:01:33.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.833" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.832" endtime="20201115 23:01:33.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.836" level="INFO">VALUE: [0.00010447300000000076, 0.00010516600000000029, 0.0001047079999999985, 0.00010448600000000086, 0.00010429099999999941, 0.00010511099999999801, 0.00010423599999999714, 0.00010450000000000043, 0.00010440299999999944, 0.00010473700000000058, 0.0001043750000000003, 0.00010488900000000037, 0.00010440199999999997, 0.0001045689999999988, 0.00010512500000000105, 0.0001047360000000011, 0.000104514, 0.00010470900000000144, 0.00010518099999999933, 0.00010416699999999876, 0.00010476400000000025, 0.0001042360000000006, 0.00010466599999999979, 0.00010497199999999832, 0.00010480499999999948, 0.00010426399999999975, 0.0001043200000000015, 0.00010513899999999715, 0.0001046949999999984, 0.00010495899999999822, 0.00010440199999999997, 0.00010431899999999855, 0.000104514, 0.00010436100000000073, 0.00010490299999999994, 0.00010508299999999887, 0.00010447200000000129, 0.00010519500000000237, 0.00010433400000000106, 0.000104514, 0.00010431999999999803, 0.00010430599999999846, 0.00010513900000000062, 0.00010441599999999954, 0.00010515300000000019, 0.00010483299999999862, 0.00010511099999999801, 0.00010497299999999779, 0.00010426399999999975, 0.00010422299999999704]</msg>
<status status="PASS" starttime="20201115 23:01:33.834" endtime="20201115 23:01:33.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.830" endtime="20201115 23:01:33.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.839" endtime="20201115 23:01:33.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.842" endtime="20201115 23:01:33.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.840" endtime="20201115 23:01:33.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.837" endtime="20201115 23:01:33.862"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.471" endtime="20201115 23:01:33.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.469" endtime="20201115 23:01:33.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.468" endtime="20201115 23:01:33.863"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.866" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.874" endtime="20201115 23:01:33.893"></status>
</kw>
<msg timestamp="20201115 23:01:33.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.872" endtime="20201115 23:01:33.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.895" endtime="20201115 23:01:33.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.897" endtime="20201115 23:01:33.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.870" endtime="20201115 23:01:33.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.868" endtime="20201115 23:01:33.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.907" endtime="20201115 23:01:34.192"></status>
</kw>
<msg timestamp="20201115 23:01:34.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.905" endtime="20201115 23:01:34.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.196" endtime="20201115 23:01:34.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.204" endtime="20201115 23:01:34.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.902" endtime="20201115 23:01:34.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.900" endtime="20201115 23:01:34.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.211" level="INFO">${RESULT} = [{'time': 0.022125806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010608400000000281, 'source_diff': 0.00010608400000000281}, {'time': 0.022237806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.208" endtime="20201115 23:01:34.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.224" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:34.212" endtime="20201115 23:01:34.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.229" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.228" endtime="20201115 23:01:34.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.231" level="INFO">VALUE: [0.00010608400000000281, 0.00010565299999999722, 0.0001052360000000016, 0.0001060140000000015, 0.00010531899999999955, 0.00010594499999999965, 0.00010594400000000018, 0.00010583400000000256, 0.00010552800000000057, 0.00010534800000000163, 0.00010527699999999737, 0.00010529199999999989, 0.00010561099999999851, 0.00010543000000000011, 0.00010622199999999957, 0.00010525000000000118, 0.00010555500000000023, 0.00010615300000000119, 0.0001060140000000015, 0.00010545900000000219, 0.00010561200000000145, 0.0001053750000000013, 0.00010566600000000079, 0.00010550000000000143, 0.00010562500000000155, 0.00010556999999999928, 0.00010562500000000155, 0.00010522200000000204, 0.00010531999999999903, 0.00010537499999999783, 0.00010554200000000014, 0.00010554100000000066, 0.00010616599999999782, 0.00010597199999999932, 0.00010533299999999912, 0.00010554200000000014, 0.00010548599999999839, 0.0001061949999999999, 0.00010602800000000107, 0.00010584799999999867, 0.00010541700000000001, 0.00010562499999999808, 0.00010580500000000048, 0.00010548599999999839, 0.0001055689999999998, 0.00010618100000000033, 0.00010595899999999922, 0.00010559699999999894, 0.00010612499999999858, 0.0001060279999999976]</msg>
<status status="PASS" starttime="20201115 23:01:34.230" endtime="20201115 23:01:34.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.225" endtime="20201115 23:01:34.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.234" endtime="20201115 23:01:34.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.238" endtime="20201115 23:01:34.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.236" endtime="20201115 23:01:34.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.233" endtime="20201115 23:01:34.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.866" endtime="20201115 23:01:34.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.864" endtime="20201115 23:01:34.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.864" endtime="20201115 23:01:34.259"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.261" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.269" endtime="20201115 23:01:34.290"></status>
</kw>
<msg timestamp="20201115 23:01:34.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.268" endtime="20201115 23:01:34.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.292" endtime="20201115 23:01:34.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.299" endtime="20201115 23:01:34.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.265" endtime="20201115 23:01:34.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.263" endtime="20201115 23:01:34.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.308" endtime="20201115 23:01:34.594"></status>
</kw>
<msg timestamp="20201115 23:01:34.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.306" endtime="20201115 23:01:34.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.598" endtime="20201115 23:01:34.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.606" endtime="20201115 23:01:34.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.304" endtime="20201115 23:01:34.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.302" endtime="20201115 23:01:34.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.612" level="INFO">${RESULT} = [{'time': 0.023665014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010684700000000019, 'source_diff': 0.00010684700000000019}, {'time': 0.023775986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:34.609" endtime="20201115 23:01:34.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.626" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:34.613" endtime="20201115 23:01:34.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.631" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.630" endtime="20201115 23:01:34.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.633" level="INFO">VALUE: [0.00010684700000000019, 0.0001070829999999974, 0.00010708300000000087, 0.00010697200000000032, 0.00010715299999999872, 0.0001070279999999986, 0.00010695799999999728, 0.00010669399999999746, 0.00010681900000000105, 0.00010666599999999832, 0.00010652800000000157, 0.00010644400000000068, 0.00010701399999999903, 0.00010679200000000139, 0.00010699999999999946, 0.00010645899999999972, 0.00010704200000000164, 0.00010638799999999893, 0.00010669400000000093, 0.00010665300000000169, 0.00010709700000000044, 0.00010641700000000101, 0.00010641700000000101, 0.00010673599999999964, 0.00010661100000000298, 0.0001065560000000007, 0.00010627800000000132, 0.00010686099999999976, 0.00010711100000000001, 0.000106514000000002, 0.00010634700000000316, 0.00010677799999999835, 0.00010687499999999933, 0.0001070699999999973, 0.00010666700000000126, 0.00010701399999999903, 0.00010630600000000046, 0.00010692999999999814, 0.00010705500000000173, 0.00010651399999999853, 0.0001072219999999971, 0.00010691700000000151, 0.00010697200000000032, 0.00010688900000000237, 0.00010668099999999736, 0.0001067499999999992, 0.00010654099999999819, 0.00010629099999999794, 0.00010683300000000062, 0.00010725000000000318]</msg>
<status status="PASS" starttime="20201115 23:01:34.632" endtime="20201115 23:01:34.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.627" endtime="20201115 23:01:34.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.636" endtime="20201115 23:01:34.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.640" endtime="20201115 23:01:34.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.638" endtime="20201115 23:01:34.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.635" endtime="20201115 23:01:34.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.262" endtime="20201115 23:01:34.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.260" endtime="20201115 23:01:34.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.259" endtime="20201115 23:01:34.661"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.672" endtime="20201115 23:01:34.692"></status>
</kw>
<msg timestamp="20201115 23:01:34.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.670" endtime="20201115 23:01:34.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.693" endtime="20201115 23:01:34.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.696" endtime="20201115 23:01:34.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.668" endtime="20201115 23:01:34.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.665" endtime="20201115 23:01:34.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.705" endtime="20201115 23:01:34.989"></status>
</kw>
<msg timestamp="20201115 23:01:34.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.703" endtime="20201115 23:01:34.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.993" endtime="20201115 23:01:35.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.001" endtime="20201115 23:01:35.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.701" endtime="20201115 23:01:35.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.699" endtime="20201115 23:01:35.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.007" level="INFO">${RESULT} = [{'time': 0.022873319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010748600000000039, 'source_diff': 0.00010748600000000039}, {'time': 0.022983306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.004" endtime="20201115 23:01:35.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.020" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:35.008" endtime="20201115 23:01:35.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.025" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.024" endtime="20201115 23:01:35.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.027" level="INFO">VALUE: [0.00010748600000000039, 0.00010727799999999885, 0.00010722200000000057, 0.00010823599999999767, 0.00010779200000000239, 0.00010784700000000119, 0.0001078889999999999, 0.00010755599999999824, 0.0001073889999999994, 0.0001073340000000006, 0.00010754199999999867, 0.00010794399999999871, 0.00010798600000000089, 0.00010745799999999778, 0.00010741699999999854, 0.00010769399999999846, 0.00010812500000000058, 0.00010757000000000128, 0.00010740299999999897, 0.00010811099999999754, 0.00010755499999999876, 0.00010769399999999846, 0.00010783299999999815, 0.00010798600000000089, 0.00010761100000000051, 0.00010777799999999935, 0.00010820799999999853, 0.0001072499999999997, 0.0001076950000000014, 0.00010815299999999972, 0.00010794500000000165, 0.00010758300000000137, 0.0001077500000000002, 0.00010805499999999926, 0.00010779199999999892, 0.0001077500000000002, 0.00010723600000000014, 0.00010804199999999917, 0.00010773599999999717, 0.00010766699999999879, 0.00010731899999999808, 0.00010741600000000254, 0.0001072499999999997, 0.00010815299999999972, 0.00010731999999999756, 0.0001072499999999997, 0.00010733300000000112, 0.00010786099999999729, 0.00010804199999999917, 0.0001077500000000002]</msg>
<status status="PASS" starttime="20201115 23:01:35.026" endtime="20201115 23:01:35.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.021" endtime="20201115 23:01:35.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.030" endtime="20201115 23:01:35.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.034" endtime="20201115 23:01:35.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.032" endtime="20201115 23:01:35.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.029" endtime="20201115 23:01:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.664" endtime="20201115 23:01:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.662" endtime="20201115 23:01:35.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.661" endtime="20201115 23:01:35.055"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.066" endtime="20201115 23:01:35.085"></status>
</kw>
<msg timestamp="20201115 23:01:35.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.064" endtime="20201115 23:01:35.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.087" endtime="20201115 23:01:35.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.089" endtime="20201115 23:01:35.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.062" endtime="20201115 23:01:35.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.060" endtime="20201115 23:01:35.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.098" endtime="20201115 23:01:35.383"></status>
</kw>
<msg timestamp="20201115 23:01:35.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.097" endtime="20201115 23:01:35.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.387" endtime="20201115 23:01:35.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.395" endtime="20201115 23:01:35.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.094" endtime="20201115 23:01:35.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.092" endtime="20201115 23:01:35.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.402" level="INFO">${RESULT} = [{'time': 0.022144583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010830499999999951, 'source_diff': 0.00010830499999999951}, {'time': 0.022256583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.399" endtime="20201115 23:01:35.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.415" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:35.403" endtime="20201115 23:01:35.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.419" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.418" endtime="20201115 23:01:35.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.422" level="INFO">VALUE: [0.00010830499999999951, 0.0001082500000000007, 0.00010854100000000019, 0.00010876400000000078, 0.00010880600000000296, 0.00010854199999999967, 0.0001087219999999986, 0.00010874999999999774, 0.00010900000000000146, 0.00010847299999999782, 0.00010904099999999722, 0.00010831899999999908, 0.00010851400000000053, 0.00010875000000000121, 0.0001090829999999994, 0.0001090280000000006, 0.00010898600000000189, 0.00010895899999999875, 0.00010863900000000065, 0.00010859700000000194, 0.00010880500000000001, 0.00010866699999999979, 0.00010867999999999989, 0.00010827799999999985, 0.00010827799999999985, 0.000109208999999999, 0.00010884800000000167, 0.00010877800000000035, 0.00010904200000000017, 0.00010861099999999804, 0.00010854099999999672, 0.00010837500000000083, 0.00010879199999999992, 0.00010900000000000146, 0.00010884699999999872, 0.00010844500000000215, 0.00010873599999999817, 0.00010922200000000257, 0.00010830499999999951, 0.00010855499999999976, 0.00010883299999999915, 0.00010912500000000158, 0.00010908300000000287, 0.00010831899999999908, 0.00010873600000000164, 0.00010844500000000215, 0.00010855599999999924, 0.00010875000000000121, 0.00010908300000000287, 0.00010897199999999885]</msg>
<status status="PASS" starttime="20201115 23:01:35.420" endtime="20201115 23:01:35.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.416" endtime="20201115 23:01:35.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.425" endtime="20201115 23:01:35.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.429" endtime="20201115 23:01:35.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.427" endtime="20201115 23:01:35.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.424" endtime="20201115 23:01:35.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.058" endtime="20201115 23:01:35.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.057" endtime="20201115 23:01:35.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.056" endtime="20201115 23:01:35.450"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.461" endtime="20201115 23:01:35.479"></status>
</kw>
<msg timestamp="20201115 23:01:35.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.459" endtime="20201115 23:01:35.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.481" endtime="20201115 23:01:35.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.484" endtime="20201115 23:01:35.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.456" endtime="20201115 23:01:35.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.454" endtime="20201115 23:01:35.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.493" endtime="20201115 23:01:35.779"></status>
</kw>
<msg timestamp="20201115 23:01:35.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.492" endtime="20201115 23:01:35.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.783" endtime="20201115 23:01:35.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.791" endtime="20201115 23:01:35.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.489" endtime="20201115 23:01:35.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.487" endtime="20201115 23:01:35.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.798" level="INFO">${RESULT} = [{'time': 0.022082111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011013900000000215, 'source_diff': 0.00011013900000000215}, {'time': 0.022196111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:35.795" endtime="20201115 23:01:35.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.811" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:35.799" endtime="20201115 23:01:35.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.815" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.814" endtime="20201115 23:01:35.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.818" level="INFO">VALUE: [0.00011013900000000215, 0.00010959699999999947, 0.00011013899999999868, 0.0001093890000000014, 0.000109902999999998, 0.00010979200000000092, 0.00010980600000000049, 0.00010948599999999892, 0.00011002699999999865, 0.00011013899999999868, 0.00010962499999999861, 0.00011020799999999706, 0.00010948599999999892, 0.00010944499999999968, 0.00010931900000000008, 0.00010944499999999968, 0.00010966699999999732, 0.00010930500000000051, 0.00010936099999999879, 0.00010948599999999892, 0.00010968000000000089, 0.00011009699999999997, 0.00011019500000000043, 0.00010955600000000024, 0.00010983300000000015, 0.00010963899999999818, 0.00010974999999999874, 0.0001092219999999991, 0.00010968000000000089, 0.00010949999999999849, 0.00011015299999999825, 0.00011013899999999868, 0.00010970800000000003, 0.00010955600000000024, 0.00010974999999999874, 0.00011019500000000043, 0.00010983300000000015, 0.00010925000000000171, 0.00010976399999999831, 0.00010991700000000104, 0.00010951400000000153, 0.0001097219999999996, 0.00010951400000000153, 0.00010931999999999956, 0.00010987499999999886, 0.00010950000000000196, 0.00011012499999999911, 0.00010955500000000076, 0.00010938899999999793, 0.00010931999999999956]</msg>
<status status="PASS" starttime="20201115 23:01:35.816" endtime="20201115 23:01:35.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.812" endtime="20201115 23:01:35.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.821" endtime="20201115 23:01:35.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.825" endtime="20201115 23:01:35.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.823" endtime="20201115 23:01:35.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.820" endtime="20201115 23:01:35.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.453" endtime="20201115 23:01:35.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.451" endtime="20201115 23:01:35.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.450" endtime="20201115 23:01:35.846"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.848" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.857" endtime="20201115 23:01:35.877"></status>
</kw>
<msg timestamp="20201115 23:01:35.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.855" endtime="20201115 23:01:35.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.879" endtime="20201115 23:01:35.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.881" endtime="20201115 23:01:35.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.852" endtime="20201115 23:01:35.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.850" endtime="20201115 23:01:35.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.890" endtime="20201115 23:01:36.176"></status>
</kw>
<msg timestamp="20201115 23:01:36.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022944139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.889" endtime="20201115 23:01:36.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022833389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022944139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.180" endtime="20201115 23:01:36.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.188" endtime="20201115 23:01:36.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.886" endtime="20201115 23:01:36.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.884" endtime="20201115 23:01:36.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.194" level="INFO">${RESULT} = [{'time': 0.022944139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011074999999999974, 'source_diff': 0.00011074999999999974}, {'time': 0.023064125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.191" endtime="20201115 23:01:36.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.209" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:36.196" endtime="20201115 23:01:36.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.214" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.213" endtime="20201115 23:01:36.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.216" level="INFO">VALUE: [0.00011074999999999974, 0.00011034700000000022, 0.00011073600000000017, 0.00011077799999999888, 0.00011031900000000108, 0.00011091699999999857, 0.00011119500000000143, 0.00011069499999999746, 0.00011037499999999936, 0.00011038899999999893, 0.00011043000000000164, 0.00011023599999999967, 0.00011062499999999961, 0.00011051399999999906, 0.00011055599999999777, 0.00011045900000000025, 0.00011069500000000093, 0.00011030599999999752, 0.00011051399999999906, 0.00011109700000000097, 0.00011101399999999956, 0.00011038899999999893, 0.00011073600000000017, 0.00011099999999999999, 0.00011094500000000118, 0.00011033400000000013, 0.00011061100000000004, 0.00011036099999999979, 0.00011034700000000022, 0.00011083300000000115, 0.00011051399999999906, 0.00011029099999999847, 0.00011036099999999979, 0.00011116700000000229, 0.0001105280000000021, 0.00011063899999999918, 0.00011033400000000013, 0.00011023700000000261, 0.00011098600000000042, 0.00011079099999999897, 0.00011106899999999836, 0.00011061100000000004, 0.0001105700000000008, 0.00011029199999999795, 0.00011095899999999728, 0.00011099999999999999, 0.00011026399999999881, 0.0001104159999999986, 0.00011063900000000265, 0.00011045800000000078]</msg>
<status status="PASS" starttime="20201115 23:01:36.215" endtime="20201115 23:01:36.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.210" endtime="20201115 23:01:36.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.219" endtime="20201115 23:01:36.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.223" endtime="20201115 23:01:36.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.221" endtime="20201115 23:01:36.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.218" endtime="20201115 23:01:36.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.849" endtime="20201115 23:01:36.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.847" endtime="20201115 23:01:36.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.846" endtime="20201115 23:01:36.244"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.254" endtime="20201115 23:01:36.274"></status>
</kw>
<msg timestamp="20201115 23:01:36.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.253" endtime="20201115 23:01:36.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.276" endtime="20201115 23:01:36.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.278" endtime="20201115 23:01:36.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.250" endtime="20201115 23:01:36.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.248" endtime="20201115 23:01:36.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.287" endtime="20201115 23:01:36.572"></status>
</kw>
<msg timestamp="20201115 23:01:36.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.286" endtime="20201115 23:01:36.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.576" endtime="20201115 23:01:36.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.584" endtime="20201115 23:01:36.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.283" endtime="20201115 23:01:36.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.281" endtime="20201115 23:01:36.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.591" level="INFO">${RESULT} = [{'time': 0.022155917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011137500000000036, 'source_diff': 0.00011137500000000036}, {'time': 0.022274944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:36.588" endtime="20201115 23:01:36.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.604" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201115 23:01:36.592" endtime="20201115 23:01:36.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.608" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.607" endtime="20201115 23:01:36.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.611" level="INFO">VALUE: [0.00011137500000000036, 0.00011217999999999992, 0.0001112769999999999, 0.00011169400000000246, 0.00011134700000000122, 0.00011162500000000061, 0.00011147199999999788, 0.00011125000000000024, 0.00011127799999999938, 0.00011151400000000006, 0.00011144400000000221, 0.00011194499999999871, 0.00011154099999999972, 0.00011173600000000117, 0.00011219399999999949, 0.0001120830000000024, 0.00011213900000000068, 0.00011136099999999732, 0.0001120419999999997, 0.0001120969999999985, 0.00011212500000000111, 0.00011151300000000058, 0.00011152700000000015, 0.00011172199999999813, 0.00011217999999999992, 0.00011151400000000006, 0.00011173600000000117, 0.0001117359999999977, 0.00011215200000000078, 0.00011129099999999947, 0.00011131899999999861, 0.00011127799999999938, 0.00011177799999999988, 0.0001114159999999996, 0.0001117220000000016, 0.00011161100000000104, 0.00011195799999999881, 0.00011200000000000099, 0.0001113480000000007, 0.00011159700000000147, 0.00011201400000000056, 0.00011180499999999954, 0.00011159700000000147, 0.00011188900000000043, 0.00011138899999999993, 0.00011136099999999732, 0.00011218099999999939, 0.0001120419999999997, 0.00011187500000000086, 0.00011155500000000276]</msg>
<status status="PASS" starttime="20201115 23:01:36.609" endtime="20201115 23:01:36.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.605" endtime="20201115 23:01:36.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.614" endtime="20201115 23:01:36.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.617" endtime="20201115 23:01:36.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.616" endtime="20201115 23:01:36.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.612" endtime="20201115 23:01:36.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.247" endtime="20201115 23:01:36.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.245" endtime="20201115 23:01:36.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.244" endtime="20201115 23:01:36.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:00:57.044" endtime="20201115 23:01:36.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.643" endtime="20201115 23:01:36.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.642" endtime="20201115 23:01:36.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.640" endtime="20201115 23:01:36.664"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:00:53.948" endtime="20201115 23:01:36.664" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:00:06.776" endtime="20201115 23:01:36.669"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 22:59:55.538" endtime="20201115 23:01:36.682"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_arduino-due</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
