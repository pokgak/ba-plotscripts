<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201117 14:46:49.719" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:46:53.327" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:46:53.335" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:46:54.419" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:46:53.325" endtime="20201117 14:46:54.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:46:54.426" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:46:54.423" endtime="20201117 14:46:54.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.324" endtime="20201117 14:46:54.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:54.432" endtime="20201117 14:46:54.675"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.429" endtime="20201117 14:46:54.676"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:54.689" endtime="20201117 14:46:57.713"></status>
</kw>
<msg timestamp="20201117 14:46:57.714" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:54.687" endtime="20201117 14:46:57.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.720" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.717" endtime="20201117 14:46:57.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:46:57.727" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:46:57.722" endtime="20201117 14:46:57.727"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.685" endtime="20201117 14:46:57.729"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:54.682" endtime="20201117 14:46:57.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.681" endtime="20201117 14:46:57.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:46:57.739" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:46:57.738" endtime="20201117 14:46:57.740"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.733" endtime="20201117 14:46:57.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.680" endtime="20201117 14:46:57.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.679" endtime="20201117 14:46:57.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.743" endtime="20201117 14:46:57.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.678" endtime="20201117 14:46:57.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.749" endtime="20201117 14:46:57.753"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:54.676" endtime="20201117 14:46:57.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:53.322" endtime="20201117 14:46:57.755"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:46:57.768" endtime="20201117 14:46:57.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.765" endtime="20201117 14:46:57.792"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:46:57.824" endtime="20201117 14:47:00.847"></status>
</kw>
<msg timestamp="20201117 14:47:00.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:46:57.818" endtime="20201117 14:47:00.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.851" endtime="20201117 14:47:00.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.861" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:00.856" endtime="20201117 14:47:00.861"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.812" endtime="20201117 14:47:00.863"></status>
</kw>
<status status="FAIL" starttime="20201117 14:46:57.807" endtime="20201117 14:47:00.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.803" endtime="20201117 14:47:00.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:00.873" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:00.871" endtime="20201117 14:47:00.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.867" endtime="20201117 14:47:00.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.801" endtime="20201117 14:47:00.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.800" endtime="20201117 14:47:00.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.877" endtime="20201117 14:47:00.880"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.797" endtime="20201117 14:47:00.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.793" endtime="20201117 14:47:00.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:46:57.762" endtime="20201117 14:47:00.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.900" endtime="20201117 14:47:00.915"></status>
</kw>
<msg timestamp="20201117 14:47:00.916" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.897" endtime="20201117 14:47:00.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.922" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:00.919" endtime="20201117 14:47:00.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:00.925" endtime="20201117 14:47:00.928"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.891" endtime="20201117 14:47:00.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.885" endtime="20201117 14:47:00.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.940" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201117 14:47:00.938" endtime="20201117 14:47:00.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:00.945" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201117 14:47:00.942" endtime="20201117 14:47:00.945"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:00.932" endtime="20201117 14:47:00.946"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:46:57.755" endtime="20201117 14:47:00.948" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:46:49.832" endtime="20201117 14:47:00.956"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201117 14:47:01.032" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201117 14:47:01.039" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201117 14:47:02.182" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201117 14:47:01.030" endtime="20201117 14:47:02.183"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201117 14:47:02.185" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201117 14:47:02.184" endtime="20201117 14:47:02.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.029" endtime="20201117 14:47:02.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:02.188" endtime="20201117 14:47:02.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.187" endtime="20201117 14:47:02.409"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:02.421" endtime="20201117 14:47:05.442"></status>
</kw>
<msg timestamp="20201117 14:47:05.443" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:02.420" endtime="20201117 14:47:05.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.445" endtime="20201117 14:47:05.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:05.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:05.450" endtime="20201117 14:47:05.455"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:02.417" endtime="20201117 14:47:05.456"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:02.415" endtime="20201117 14:47:05.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.414" endtime="20201117 14:47:05.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:05.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:05.464" endtime="20201117 14:47:05.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.460" endtime="20201117 14:47:05.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.413" endtime="20201117 14:47:05.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.413" endtime="20201117 14:47:05.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.469" endtime="20201117 14:47:05.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.411" endtime="20201117 14:47:05.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.475" endtime="20201117 14:47:05.478"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:02.410" endtime="20201117 14:47:05.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:01.028" endtime="20201117 14:47:05.479"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:05.492" endtime="20201117 14:47:05.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.488" endtime="20201117 14:47:05.517"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:05.542" endtime="20201117 14:47:08.564"></status>
</kw>
<msg timestamp="20201117 14:47:08.565" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:05.540" endtime="20201117 14:47:08.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.568" endtime="20201117 14:47:08.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.577" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:08.573" endtime="20201117 14:47:08.578"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:05.535" endtime="20201117 14:47:08.579"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:05.530" endtime="20201117 14:47:08.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.527" endtime="20201117 14:47:08.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:08.588" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:08.587" endtime="20201117 14:47:08.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.583" endtime="20201117 14:47:08.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.525" endtime="20201117 14:47:08.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.524" endtime="20201117 14:47:08.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.592" endtime="20201117 14:47:08.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.521" endtime="20201117 14:47:08.596"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.518" endtime="20201117 14:47:08.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:05.486" endtime="20201117 14:47:08.598"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.624" endtime="20201117 14:47:08.639"></status>
</kw>
<msg timestamp="20201117 14:47:08.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.619" endtime="20201117 14:47:08.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:08.641" endtime="20201117 14:47:08.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.643" endtime="20201117 14:47:08.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.613" endtime="20201117 14:47:08.645"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.609" endtime="20201117 14:47:08.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.652" endtime="20201117 14:47:08.961"></status>
</kw>
<msg timestamp="20201117 14:47:08.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.120567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.120582139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.651" endtime="20201117 14:47:08.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.120567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.120582139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:08.965" endtime="20201117 14:47:08.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:08.973" endtime="20201117 14:47:08.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.648" endtime="20201117 14:47:08.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.646" endtime="20201117 14:47:08.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:08.980" level="INFO">${RESULT} = [{'time': 3.120582139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4152999999961224e-05, 'source_diff': 1.4152999999961224e-05}, {'time': 3.120608153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:08.976" endtime="20201117 14:47:08.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:08.994" level="INFO">${ACCURACY} = {'diff': [1.4152999999961224e-05, 1.4403000000218213e-05, 1.4138000000052386e-05, 1.5013999999702321e-05, 1.4889000000017916e-05, 1.4653000000031113e-05, 1.4278000000089719e-05, 1.4681000000127398e-05...</msg>
<status status="PASS" starttime="20201117 14:47:08.981" endtime="20201117 14:47:08.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:08.998" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:08.997" endtime="20201117 14:47:08.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.001" level="INFO">VALUE: [1.4152999999961224e-05, 1.4403000000218213e-05, 1.4138000000052386e-05, 1.5013999999702321e-05, 1.4889000000017916e-05, 1.4653000000031113e-05, 1.4278000000089719e-05, 1.4681000000127398e-05, 1.4097999999851396e-05, 1.4806000000255892e-05, 1.4653000000031113e-05, 1.4070000000199201e-05, 1.4444000000057855e-05, 1.4680000000044657e-05, 1.43200000000121e-05, 1.4209000000153793e-05, 1.4945000000210484e-05, 1.4707999999696852e-05, 1.447200000015414e-05, 1.4305000000103263e-05, 1.476300000025077e-05, 1.4681000000127398e-05, 1.4152000000322573e-05, 1.4167000000231411e-05, 1.4707999999696852e-05, 1.4401999999691384e-05, 1.412499999986494e-05, 1.4054999999846274e-05, 1.4624999999934829e-05, 1.4763999999889421e-05, 1.4791999999985705e-05, 1.4236000000167337e-05, 1.4485999999980237e-05, 1.5027999999972508e-05, 1.4555999999998903e-05, 1.4485999999980237e-05, 1.4235999999723248e-05, 1.4971999999779939e-05, 1.4653000000031113e-05, 1.4957999999953842e-05, 1.4527000000263968e-05, 1.4264000000263621e-05, 1.4070000000199201e-05, 1.4402999999774124e-05, 1.5041999999798605e-05, 1.4763999999889421e-05, 1.472300000004978e-05, 1.4360999999851742e-05, 1.4055999999929014e-05, 1.4569999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:47:08.999" endtime="20201117 14:47:09.001"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.995" endtime="20201117 14:47:09.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.004" endtime="20201117 14:47:09.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.007" endtime="20201117 14:47:09.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.006" endtime="20201117 14:47:09.027"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.002" endtime="20201117 14:47:09.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.606" endtime="20201117 14:47:09.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.602" endtime="20201117 14:47:09.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.600" endtime="20201117 14:47:09.028"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.031" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.040" endtime="20201117 14:47:09.054"></status>
</kw>
<msg timestamp="20201117 14:47:09.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.037" endtime="20201117 14:47:09.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.056" endtime="20201117 14:47:09.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.058" endtime="20201117 14:47:09.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.035" endtime="20201117 14:47:09.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.033" endtime="20201117 14:47:09.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.067" endtime="20201117 14:47:09.353"></status>
</kw>
<msg timestamp="20201117 14:47:09.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.066" endtime="20201117 14:47:09.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.358" endtime="20201117 14:47:09.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.366" endtime="20201117 14:47:09.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.063" endtime="20201117 14:47:09.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.061" endtime="20201117 14:47:09.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.373" level="INFO">${RESULT} = [{'time': 0.022407236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4957999999998944e-05, 'source_diff': 1.4957999999998944e-05}, {'time': 0.02243325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:09.370" endtime="20201117 14:47:09.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.386" level="INFO">${ACCURACY} = {'diff': [1.4957999999998944e-05, 1.4707999999998694e-05, 1.4736000000001304e-05, 1.4986000000001554e-05, 1.4250000000000373e-05, 1.4666999999999458e-05, 1.4125000000000248e-05, 1.4042000000002303e-05...</msg>
<status status="PASS" starttime="20201117 14:47:09.374" endtime="20201117 14:47:09.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.391" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.390" endtime="20201117 14:47:09.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.393" level="INFO">VALUE: [1.4957999999998944e-05, 1.4707999999998694e-05, 1.4736000000001304e-05, 1.4986000000001554e-05, 1.4250000000000373e-05, 1.4666999999999458e-05, 1.4125000000000248e-05, 1.4042000000002303e-05, 1.4667000000002928e-05, 1.4750000000000874e-05, 1.4945000000002318e-05, 1.4903000000000138e-05, 1.4916999999999708e-05, 1.4666999999999458e-05, 1.4527999999999763e-05, 1.4263999999999943e-05, 1.4791999999999583e-05, 1.4709000000001637e-05, 1.4625000000000749e-05, 1.4555999999998903e-05, 1.4916999999999708e-05, 1.4430999999998778e-05, 1.4639000000000318e-05, 1.4749999999997404e-05, 1.4916000000000235e-05, 1.4749999999997404e-05, 1.4625000000000749e-05, 1.4986000000001554e-05, 1.4514000000000193e-05, 1.479100000000011e-05, 1.4722000000001734e-05, 1.4971999999998514e-05, 1.4929999999999805e-05, 1.4111000000000679e-05, 1.4180000000002524e-05, 1.4236000000000804e-05, 1.4221999999997764e-05, 1.4943999999999374e-05, 1.4903000000000138e-05, 1.4263999999999943e-05, 1.4333000000001789e-05, 1.4291999999999083e-05, 1.4652999999999888e-05, 1.4111000000000679e-05, 1.4430000000002774e-05, 1.4639000000000318e-05, 1.4471999999998014e-05, 1.4222000000001234e-05, 1.4445000000001817e-05, 1.4292000000002553e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.392" endtime="20201117 14:47:09.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.387" endtime="20201117 14:47:09.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.396" endtime="20201117 14:47:09.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.400" endtime="20201117 14:47:09.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.398" endtime="20201117 14:47:09.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.395" endtime="20201117 14:47:09.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.031" endtime="20201117 14:47:09.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.030" endtime="20201117 14:47:09.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.029" endtime="20201117 14:47:09.421"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.431" endtime="20201117 14:47:09.447"></status>
</kw>
<msg timestamp="20201117 14:47:09.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.430" endtime="20201117 14:47:09.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.449" endtime="20201117 14:47:09.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.451" endtime="20201117 14:47:09.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.427" endtime="20201117 14:47:09.453"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.425" endtime="20201117 14:47:09.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.461" endtime="20201117 14:47:09.745"></status>
</kw>
<msg timestamp="20201117 14:47:09.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.459" endtime="20201117 14:47:09.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.749" endtime="20201117 14:47:09.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.758" endtime="20201117 14:47:09.759"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.456" endtime="20201117 14:47:09.760"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.454" endtime="20201117 14:47:09.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:09.764" level="INFO">${RESULT} = [{'time': 0.022446944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.022471944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:09.761" endtime="20201117 14:47:09.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:09.779" level="INFO">${ACCURACY} = {'diff': [1.4151999999999915e-05, 1.4138000000000345e-05, 1.401300000000022e-05, 1.455499999999943e-05, 1.4736000000001304e-05, 1.4277999999999513e-05, 1.40689999999985e-05, 1.4375000000000498e-05, 1....</msg>
<status status="PASS" starttime="20201117 14:47:09.765" endtime="20201117 14:47:09.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.783" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:09.782" endtime="20201117 14:47:09.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.786" level="INFO">VALUE: [1.4151999999999915e-05, 1.4138000000000345e-05, 1.401300000000022e-05, 1.455499999999943e-05, 1.4736000000001304e-05, 1.4277999999999513e-05, 1.40689999999985e-05, 1.4375000000000498e-05, 1.4207999999998194e-05, 1.483299999999882e-05, 1.4778000000000013e-05, 1.4013999999999693e-05, 1.4707999999998694e-05, 1.480499999999968e-05, 1.4527999999999763e-05, 1.4389000000000068e-05, 1.4679999999999555e-05, 1.4125000000000248e-05, 1.4416999999999208e-05, 1.5000000000001124e-05, 1.4735999999997834e-05, 1.4347000000001359e-05, 1.4416999999999208e-05, 1.4708000000002164e-05, 1.4930999999999278e-05, 1.427700000000004e-05, 1.4125000000000248e-05, 1.4306000000002123e-05, 1.4486000000001054e-05, 1.4639000000000318e-05, 1.4597999999997613e-05, 1.4473000000000957e-05, 1.486099999999796e-05, 1.4901999999997195e-05, 1.4056000000001873e-05, 1.501300000000122e-05, 1.4848000000001332e-05, 1.4848000000001332e-05, 1.4458999999997918e-05, 1.4889000000000568e-05, 1.486099999999796e-05, 1.4597000000001609e-05, 1.476300000000097e-05, 1.4568999999999e-05, 1.461099999999771e-05, 1.4722000000001734e-05, 1.4083000000001539e-05, 1.4638000000000845e-05, 1.4943999999999374e-05, 1.5014000000000693e-05]</msg>
<status status="PASS" starttime="20201117 14:47:09.784" endtime="20201117 14:47:09.786"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.780" endtime="20201117 14:47:09.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.789" endtime="20201117 14:47:09.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:09.792" endtime="20201117 14:47:09.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.791" endtime="20201117 14:47:09.812"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.787" endtime="20201117 14:47:09.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.424" endtime="20201117 14:47:09.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.422" endtime="20201117 14:47:09.813"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.421" endtime="20201117 14:47:09.813"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.816" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.824" endtime="20201117 14:47:09.839"></status>
</kw>
<msg timestamp="20201117 14:47:09.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.822" endtime="20201117 14:47:09.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:09.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:09.840" endtime="20201117 14:47:09.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.843" endtime="20201117 14:47:09.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.820" endtime="20201117 14:47:09.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.818" endtime="20201117 14:47:09.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:09.852" endtime="20201117 14:47:10.138"></status>
</kw>
<msg timestamp="20201117 14:47:10.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:09.851" endtime="20201117 14:47:10.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.142" endtime="20201117 14:47:10.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.150" endtime="20201117 14:47:10.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.848" endtime="20201117 14:47:10.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.846" endtime="20201117 14:47:10.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.157" level="INFO">${RESULT} = [{'time': 0.021677097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4903000000000138e-05, 'source_diff': 1.4903000000000138e-05}, {'time': 0.021701111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.153" endtime="20201117 14:47:10.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.170" level="INFO">${ACCURACY} = {'diff': [1.4903000000000138e-05, 1.4402999999999638e-05, 1.4527999999999763e-05, 1.4971999999998514e-05, 1.5014000000000693e-05, 1.4166999999998958e-05, 1.4277999999999513e-05, 1.4568999999999e-05, 1...</msg>
<status status="PASS" starttime="20201117 14:47:10.158" endtime="20201117 14:47:10.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.175" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.174" endtime="20201117 14:47:10.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.177" level="INFO">VALUE: [1.4903000000000138e-05, 1.4402999999999638e-05, 1.4527999999999763e-05, 1.4971999999998514e-05, 1.5014000000000693e-05, 1.4166999999998958e-05, 1.4277999999999513e-05, 1.4568999999999e-05, 1.480499999999968e-05, 1.4527999999999763e-05, 1.4319000000002219e-05, 1.4416999999999208e-05, 1.4750000000000874e-05, 1.4694000000002594e-05, 1.4263999999999943e-05, 1.4138999999999818e-05, 1.4195000000001567e-05, 1.4541999999999333e-05, 1.4901999999997195e-05, 1.4459000000001387e-05, 1.4916999999999708e-05, 1.4320000000001692e-05, 1.4181000000001998e-05, 1.4445000000001817e-05, 1.4458999999997918e-05, 1.4791999999999583e-05, 1.4430999999998778e-05, 1.4972999999997988e-05, 1.4112000000000152e-05, 1.4750000000000874e-05, 1.4999999999997654e-05, 1.4069000000001969e-05, 1.4401999999996695e-05, 1.4125000000000248e-05, 1.4930999999999278e-05, 1.477700000000054e-05, 1.4943999999999374e-05, 1.4444000000002344e-05, 1.452700000000029e-05, 1.4236000000000804e-05, 1.4875000000000999e-05, 1.4861000000001429e-05, 1.4165999999999485e-05, 1.502700000000079e-05, 1.4874999999997529e-05, 1.5013999999997224e-05, 1.4124999999996779e-05, 1.4222000000001234e-05, 1.4916000000000235e-05, 1.4889000000000568e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.176" endtime="20201117 14:47:10.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.171" endtime="20201117 14:47:10.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.180" endtime="20201117 14:47:10.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.184" endtime="20201117 14:47:10.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.182" endtime="20201117 14:47:10.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.179" endtime="20201117 14:47:10.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.816" endtime="20201117 14:47:10.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.815" endtime="20201117 14:47:10.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:09.814" endtime="20201117 14:47:10.205"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.216" endtime="20201117 14:47:10.230"></status>
</kw>
<msg timestamp="20201117 14:47:10.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.214" endtime="20201117 14:47:10.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.231" endtime="20201117 14:47:10.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.234" endtime="20201117 14:47:10.236"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.212" endtime="20201117 14:47:10.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.209" endtime="20201117 14:47:10.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.244" endtime="20201117 14:47:10.531"></status>
</kw>
<msg timestamp="20201117 14:47:10.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.243" endtime="20201117 14:47:10.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022519514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.535" endtime="20201117 14:47:10.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.543" endtime="20201117 14:47:10.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.240" endtime="20201117 14:47:10.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.238" endtime="20201117 14:47:10.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.550" level="INFO">${RESULT} = [{'time': 0.022519514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.022541514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.547" endtime="20201117 14:47:10.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.563" level="INFO">${ACCURACY} = {'diff': [1.4416999999999208e-05, 1.4305999999998653e-05, 1.4945000000002318e-05, 1.4209000000001137e-05, 1.484699999999839e-05, 1.4306000000002123e-05, 1.4416999999999208e-05, 1.4972999999997988e-05,...</msg>
<status status="PASS" starttime="20201117 14:47:10.551" endtime="20201117 14:47:10.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.568" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.567" endtime="20201117 14:47:10.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.570" level="INFO">VALUE: [1.4416999999999208e-05, 1.4305999999998653e-05, 1.4945000000002318e-05, 1.4209000000001137e-05, 1.484699999999839e-05, 1.4306000000002123e-05, 1.4416999999999208e-05, 1.4972999999997988e-05, 1.4125000000000248e-05, 1.4236000000000804e-05, 1.4459000000001387e-05, 1.4402999999999638e-05, 1.4138999999999818e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4542000000002803e-05, 1.5000000000001124e-05, 1.4666999999999458e-05, 1.4166999999998958e-05, 1.4888000000001095e-05, 1.4945000000002318e-05, 1.4957999999998944e-05, 1.4514000000000193e-05, 1.4625000000000749e-05, 1.4207999999998194e-05, 1.4638000000000845e-05, 1.4250000000000373e-05, 1.454099999999986e-05, 1.4778000000000013e-05, 1.4263999999999943e-05, 1.454099999999986e-05, 1.480499999999968e-05, 1.433299999999832e-05, 1.431899999999875e-05, 1.4597000000001609e-05, 1.4736000000001304e-05, 1.481899999999925e-05, 1.4957999999998944e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.4958000000002414e-05, 1.4708000000002164e-05, 1.5014000000000693e-05, 1.4750000000000874e-05, 1.4735999999997834e-05, 1.4709000000001637e-05, 1.4360999999997459e-05, 1.4666999999999458e-05, 1.4291999999999083e-05, 1.4805999999999153e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.569" endtime="20201117 14:47:10.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.564" endtime="20201117 14:47:10.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.573" endtime="20201117 14:47:10.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.577" endtime="20201117 14:47:10.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.575" endtime="20201117 14:47:10.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.572" endtime="20201117 14:47:10.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.208" endtime="20201117 14:47:10.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.206" endtime="20201117 14:47:10.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.205" endtime="20201117 14:47:10.599"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.601" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.609" endtime="20201117 14:47:10.623"></status>
</kw>
<msg timestamp="20201117 14:47:10.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.607" endtime="20201117 14:47:10.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.625" endtime="20201117 14:47:10.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.627" endtime="20201117 14:47:10.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.605" endtime="20201117 14:47:10.629"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.603" endtime="20201117 14:47:10.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.636" endtime="20201117 14:47:10.920"></status>
</kw>
<msg timestamp="20201117 14:47:10.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.635" endtime="20201117 14:47:10.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022031056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:10.924" endtime="20201117 14:47:10.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.932" endtime="20201117 14:47:10.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.632" endtime="20201117 14:47:10.934"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.630" endtime="20201117 14:47:10.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:10.939" level="INFO">${RESULT} = [{'time': 0.022031056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.022052125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:10.935" endtime="20201117 14:47:10.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:10.952" level="INFO">${ACCURACY} = {'diff': [1.4541999999999333e-05, 1.431899999999875e-05, 1.4069000000001969e-05, 1.486099999999796e-05, 1.4429999999999304e-05, 1.458299999999857e-05, 1.502700000000079e-05, 1.4889000000000568e-05, 1....</msg>
<status status="PASS" starttime="20201117 14:47:10.940" endtime="20201117 14:47:10.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.957" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:10.956" endtime="20201117 14:47:10.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.959" level="INFO">VALUE: [1.4541999999999333e-05, 1.431899999999875e-05, 1.4069000000001969e-05, 1.486099999999796e-05, 1.4429999999999304e-05, 1.458299999999857e-05, 1.502700000000079e-05, 1.4889000000000568e-05, 1.4097000000001109e-05, 1.455499999999943e-05, 1.4375000000000498e-05, 1.4694000000002594e-05, 1.483299999999882e-05, 1.4943999999999374e-05, 1.4929999999999805e-05, 1.4833000000002289e-05, 1.4125000000000248e-05, 1.4430000000002774e-05, 1.4568999999999e-05, 1.405499999999893e-05, 1.408299999999807e-05, 1.4806000000002623e-05, 1.4306000000002123e-05, 1.4222000000001234e-05, 1.483299999999882e-05, 1.4111000000000679e-05, 1.4263999999999943e-05, 1.4639000000000318e-05, 1.4486000000001054e-05, 1.4972000000001984e-05, 1.4652999999999888e-05, 1.484699999999839e-05, 1.4666999999999458e-05, 1.5041999999999833e-05, 1.4277999999999513e-05, 1.4541999999999333e-05, 1.4292000000002553e-05, 1.4320000000001692e-05, 1.4055999999998403e-05, 1.4097000000001109e-05, 1.4527999999999763e-05, 1.4987000000001027e-05, 1.484699999999839e-05, 1.4639000000000318e-05, 1.4916000000000235e-05, 1.4429999999999304e-05, 1.4165999999999485e-05, 1.4652000000000415e-05, 1.4429999999999304e-05, 1.4458000000001914e-05]</msg>
<status status="PASS" starttime="20201117 14:47:10.958" endtime="20201117 14:47:10.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.953" endtime="20201117 14:47:10.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.963" endtime="20201117 14:47:10.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:10.966" endtime="20201117 14:47:10.985"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.964" endtime="20201117 14:47:10.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.961" endtime="20201117 14:47:10.986"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.602" endtime="20201117 14:47:10.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.600" endtime="20201117 14:47:10.987"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.599" endtime="20201117 14:47:10.987"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:10.989" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:10.997" endtime="20201117 14:47:11.013"></status>
</kw>
<msg timestamp="20201117 14:47:11.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:10.996" endtime="20201117 14:47:11.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.015" endtime="20201117 14:47:11.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.017" endtime="20201117 14:47:11.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.993" endtime="20201117 14:47:11.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.991" endtime="20201117 14:47:11.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.026" endtime="20201117 14:47:11.313"></status>
</kw>
<msg timestamp="20201117 14:47:11.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.024" endtime="20201117 14:47:11.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023149486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.317" endtime="20201117 14:47:11.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.325" endtime="20201117 14:47:11.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.022" endtime="20201117 14:47:11.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.020" endtime="20201117 14:47:11.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.332" level="INFO">${RESULT} = [{'time': 0.023149486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4429999999999304e-05, 'source_diff': 1.4429999999999304e-05}, {'time': 0.023177472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:11.328" endtime="20201117 14:47:11.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.346" level="INFO">${ACCURACY} = {'diff': [1.4429999999999304e-05, 1.4778000000000013e-05, 1.404099999999936e-05, 1.4999999999997654e-05, 1.4903000000000138e-05, 1.4971999999998514e-05, 1.4735999999997834e-05, 1.4069000000001969e-05,...</msg>
<status status="PASS" starttime="20201117 14:47:11.333" endtime="20201117 14:47:11.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.351" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.350" endtime="20201117 14:47:11.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.354" level="INFO">VALUE: [1.4429999999999304e-05, 1.4778000000000013e-05, 1.404099999999936e-05, 1.4999999999997654e-05, 1.4903000000000138e-05, 1.4971999999998514e-05, 1.4735999999997834e-05, 1.4069000000001969e-05, 1.4971999999998514e-05, 1.4943999999999374e-05, 1.4999999999997654e-05, 1.4971999999998514e-05, 1.4722000000001734e-05, 1.4527999999999763e-05, 1.4541999999999333e-05, 1.4903000000000138e-05, 1.4486000000001054e-05, 1.4680999999999028e-05, 1.4471999999998014e-05, 1.4471999999998014e-05, 1.4791999999999583e-05, 1.4402999999999638e-05, 1.4680999999999028e-05, 1.4958999999998418e-05, 1.4930000000003274e-05, 1.4361000000000929e-05, 1.4305999999998653e-05, 1.4637999999997375e-05, 1.4069999999997973e-05, 1.4194999999998098e-05, 1.4639000000000318e-05, 1.4348000000000832e-05, 1.454099999999986e-05, 1.5000000000001124e-05, 1.4208999999997668e-05, 1.4097999999997113e-05, 1.4487000000000527e-05, 1.4277999999999513e-05, 1.4138999999999818e-05, 1.4888000000001095e-05, 1.458299999999857e-05, 1.4972000000001984e-05, 1.4583000000002039e-05, 1.4402000000000165e-05, 1.4943999999999374e-05, 1.4958000000002414e-05, 1.4402999999999638e-05, 1.4125000000000248e-05, 1.4152999999999388e-05, 1.4389000000000068e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.352" endtime="20201117 14:47:11.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.347" endtime="20201117 14:47:11.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.357" endtime="20201117 14:47:11.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.360" endtime="20201117 14:47:11.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.359" endtime="20201117 14:47:11.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.356" endtime="20201117 14:47:11.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.990" endtime="20201117 14:47:11.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.988" endtime="20201117 14:47:11.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:10.987" endtime="20201117 14:47:11.382"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.384" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.392" endtime="20201117 14:47:11.408"></status>
</kw>
<msg timestamp="20201117 14:47:11.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.390" endtime="20201117 14:47:11.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.410" endtime="20201117 14:47:11.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.412" endtime="20201117 14:47:11.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.388" endtime="20201117 14:47:11.415"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.386" endtime="20201117 14:47:11.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.421" endtime="20201117 14:47:11.707"></status>
</kw>
<msg timestamp="20201117 14:47:11.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.420" endtime="20201117 14:47:11.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022497681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.711" endtime="20201117 14:47:11.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.719" endtime="20201117 14:47:11.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.417" endtime="20201117 14:47:11.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.416" endtime="20201117 14:47:11.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:11.726" level="INFO">${RESULT} = [{'time': 0.022512056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.022535069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:11.722" endtime="20201117 14:47:11.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:11.740" level="INFO">${ACCURACY} = {'diff': [1.4375000000000498e-05, 1.4347000000001359e-05, 1.4665999999999985e-05, 1.4737000000000777e-05, 1.454099999999986e-05, 1.431899999999875e-05, 1.484699999999839e-05, 1.4624999999997279e-05, 1...</msg>
<status status="PASS" starttime="20201117 14:47:11.727" endtime="20201117 14:47:11.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.744" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:11.743" endtime="20201117 14:47:11.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.747" level="INFO">VALUE: [1.4375000000000498e-05, 1.4347000000001359e-05, 1.4665999999999985e-05, 1.4737000000000777e-05, 1.454099999999986e-05, 1.431899999999875e-05, 1.484699999999839e-05, 1.4624999999997279e-05, 1.4943999999999374e-05, 1.4958000000002414e-05, 1.4597000000001609e-05, 1.4679999999999555e-05, 1.4833000000002289e-05, 1.4847000000001859e-05, 1.4791999999999583e-05, 1.4500000000000624e-05, 1.4250000000000373e-05, 1.4943999999999374e-05, 1.4444000000002344e-05, 1.4943999999999374e-05, 1.5028000000000263e-05, 1.4263999999999943e-05, 1.4889000000000568e-05, 1.4111000000000679e-05, 1.4611999999997183e-05, 1.4986000000001554e-05, 1.4500000000000624e-05, 1.483299999999882e-05, 1.4916999999999708e-05, 1.4084000000001012e-05, 1.4291999999999083e-05, 1.4820000000002193e-05, 1.4207999999998194e-05, 1.5014000000000693e-05, 1.4111000000000679e-05, 1.4764000000000443e-05, 1.4527999999999763e-05, 1.4223000000000707e-05, 1.4417000000002678e-05, 1.4306000000002123e-05, 1.4999999999997654e-05, 1.4875000000000999e-05, 1.4888999999997099e-05, 1.4527999999999763e-05, 1.4389000000000068e-05, 1.4069999999997973e-05, 1.4263999999999943e-05, 1.4375000000000498e-05, 1.4681000000002498e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201117 14:47:11.745" endtime="20201117 14:47:11.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.741" endtime="20201117 14:47:11.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.750" endtime="20201117 14:47:11.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:11.753" endtime="20201117 14:47:11.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.751" endtime="20201117 14:47:11.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.748" endtime="20201117 14:47:11.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.385" endtime="20201117 14:47:11.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.383" endtime="20201117 14:47:11.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.382" endtime="20201117 14:47:11.774"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.777" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.785" endtime="20201117 14:47:11.799"></status>
</kw>
<msg timestamp="20201117 14:47:11.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.783" endtime="20201117 14:47:11.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:11.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:11.801" endtime="20201117 14:47:11.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.803" endtime="20201117 14:47:11.805"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.781" endtime="20201117 14:47:11.806"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.779" endtime="20201117 14:47:11.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:11.812" endtime="20201117 14:47:12.099"></status>
</kw>
<msg timestamp="20201117 14:47:12.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:11.811" endtime="20201117 14:47:12.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.103" endtime="20201117 14:47:12.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.112" endtime="20201117 14:47:12.113"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.808" endtime="20201117 14:47:12.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.807" endtime="20201117 14:47:12.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.118" level="INFO">${RESULT} = [{'time': 0.021584083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4429999999999304e-05, 'source_diff': 1.4429999999999304e-05}, {'time': 0.021604139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:12.115" endtime="20201117 14:47:12.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.132" level="INFO">${ACCURACY} = {'diff': [1.4429999999999304e-05, 1.4236000000000804e-05, 1.4749999999997404e-05, 1.4250000000000373e-05, 1.4721999999998264e-05, 1.405499999999893e-05, 1.404099999999936e-05, 1.4764000000000443e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:12.119" endtime="20201117 14:47:12.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.136" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.135" endtime="20201117 14:47:12.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.139" level="INFO">VALUE: [1.4429999999999304e-05, 1.4236000000000804e-05, 1.4749999999997404e-05, 1.4250000000000373e-05, 1.4721999999998264e-05, 1.405499999999893e-05, 1.404099999999936e-05, 1.4764000000000443e-05, 1.4249999999996904e-05, 1.4764000000000443e-05, 1.4235999999997334e-05, 1.4679999999999555e-05, 1.4389000000000068e-05, 1.4971999999998514e-05, 1.4667000000002928e-05, 1.4943999999999374e-05, 1.4445000000001817e-05, 1.4527999999999763e-05, 1.4181000000001998e-05, 1.4375000000000498e-05, 1.4973000000001457e-05, 1.4139000000003288e-05, 1.4249999999996904e-05, 1.4209000000001137e-05, 1.4527999999999763e-05, 1.4278000000002983e-05, 1.4291999999999083e-05, 1.4194999999998098e-05, 1.4222000000001234e-05, 1.4486000000001054e-05, 1.4263999999999943e-05, 1.4985999999998084e-05, 1.4750000000000874e-05, 1.4944999999998848e-05, 1.5041999999999833e-05, 1.4207999999998194e-05, 1.4458999999997918e-05, 1.483299999999882e-05, 1.4500000000000624e-05, 1.4679999999999555e-05, 1.4694000000002594e-05, 1.452700000000029e-05, 1.4721999999998264e-05, 1.4360999999997459e-05, 1.4263999999999943e-05, 1.4597000000001609e-05, 1.5014000000000693e-05, 1.4319000000002219e-05, 1.4360999999997459e-05, 1.4957999999998944e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.137" endtime="20201117 14:47:12.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.133" endtime="20201117 14:47:12.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.142" endtime="20201117 14:47:12.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.145" endtime="20201117 14:47:12.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.144" endtime="20201117 14:47:12.165"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.140" endtime="20201117 14:47:12.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.777" endtime="20201117 14:47:12.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.776" endtime="20201117 14:47:12.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:11.775" endtime="20201117 14:47:12.166"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.169" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.177" endtime="20201117 14:47:12.192"></status>
</kw>
<msg timestamp="20201117 14:47:12.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.175" endtime="20201117 14:47:12.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.194" endtime="20201117 14:47:12.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.196" endtime="20201117 14:47:12.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.173" endtime="20201117 14:47:12.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.171" endtime="20201117 14:47:12.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.206" endtime="20201117 14:47:12.490"></status>
</kw>
<msg timestamp="20201117 14:47:12.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.204" endtime="20201117 14:47:12.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.494" endtime="20201117 14:47:12.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.503" endtime="20201117 14:47:12.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.201" endtime="20201117 14:47:12.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.199" endtime="20201117 14:47:12.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.509" level="INFO">${RESULT} = [{'time': 0.021643875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4957999999998944e-05, 'source_diff': 1.4957999999998944e-05}, {'time': 0.021664875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:12.506" endtime="20201117 14:47:12.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.523" level="INFO">${ACCURACY} = {'diff': [1.4957999999998944e-05, 1.4125000000000248e-05, 1.408299999999807e-05, 1.4569999999998473e-05, 1.4875000000000999e-05, 1.4389000000000068e-05, 1.4944999999998848e-05, 1.4986000000001554e-05,...</msg>
<status status="PASS" starttime="20201117 14:47:12.510" endtime="20201117 14:47:12.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.527" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.526" endtime="20201117 14:47:12.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.530" level="INFO">VALUE: [1.4957999999998944e-05, 1.4125000000000248e-05, 1.408299999999807e-05, 1.4569999999998473e-05, 1.4875000000000999e-05, 1.4389000000000068e-05, 1.4944999999998848e-05, 1.4986000000001554e-05, 1.4305999999998653e-05, 1.3986000000000554e-05, 1.4778000000000013e-05, 1.4500000000000624e-05, 1.4944999999998848e-05, 1.4431000000002248e-05, 1.4320000000001692e-05, 1.4209000000001137e-05, 1.5014000000000693e-05, 1.4541999999999333e-05, 1.4278000000002983e-05, 1.4570000000001943e-05, 1.4666999999999458e-05, 1.452700000000029e-05, 1.4680999999999028e-05, 1.502700000000079e-05, 1.452699999999682e-05, 1.4194000000002094e-05, 1.4111000000000679e-05, 1.4471999999998014e-05, 1.479100000000011e-05, 1.4902000000000665e-05, 1.4097000000001109e-05, 1.4263999999999943e-05, 1.4125000000000248e-05, 1.4707999999998694e-05, 1.4972000000001984e-05, 1.4429999999999304e-05, 1.4069000000001969e-05, 1.4639000000000318e-05, 1.4972000000001984e-05, 1.4986000000001554e-05, 1.5014000000000693e-05, 1.4180000000002524e-05, 1.4111000000000679e-05, 1.4207999999998194e-05, 1.4152999999999388e-05, 1.4707999999998694e-05, 1.5000000000001124e-05, 1.4416999999999208e-05, 1.4721999999998264e-05, 1.4111000000000679e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.528" endtime="20201117 14:47:12.530"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.524" endtime="20201117 14:47:12.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.533" endtime="20201117 14:47:12.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.536" endtime="20201117 14:47:12.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.535" endtime="20201117 14:47:12.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.531" endtime="20201117 14:47:12.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.169" endtime="20201117 14:47:12.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.168" endtime="20201117 14:47:12.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.167" endtime="20201117 14:47:12.557"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.560" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.568" endtime="20201117 14:47:12.583"></status>
</kw>
<msg timestamp="20201117 14:47:12.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.566" endtime="20201117 14:47:12.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.585" endtime="20201117 14:47:12.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.588" endtime="20201117 14:47:12.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.564" endtime="20201117 14:47:12.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.562" endtime="20201117 14:47:12.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.597" endtime="20201117 14:47:12.882"></status>
</kw>
<msg timestamp="20201117 14:47:12.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.595" endtime="20201117 14:47:12.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.886" endtime="20201117 14:47:12.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.895" endtime="20201117 14:47:12.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.593" endtime="20201117 14:47:12.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.591" endtime="20201117 14:47:12.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:12.901" level="INFO">${RESULT} = [{'time': 0.022503097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.022531097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:12.898" endtime="20201117 14:47:12.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:12.916" level="INFO">${ACCURACY} = {'diff': [1.538900000000107e-05, 1.5764000000001444e-05, 1.5444000000003344e-05, 1.5680000000000555e-05, 1.5985999999999084e-05, 1.5569999999999473e-05, 1.5722000000002734e-05, 1.566699999999699e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:12.902" endtime="20201117 14:47:12.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.920" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:12.919" endtime="20201117 14:47:12.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.923" level="INFO">VALUE: [1.538900000000107e-05, 1.5764000000001444e-05, 1.5444000000003344e-05, 1.5680000000000555e-05, 1.5985999999999084e-05, 1.5569999999999473e-05, 1.5722000000002734e-05, 1.566699999999699e-05, 1.5486000000002054e-05, 1.5221999999998764e-05, 1.583299999999982e-05, 1.509699999999864e-05, 1.583299999999982e-05, 1.5861999999998433e-05, 1.590300000000114e-05, 1.5249999999997904e-05, 1.6000000000002124e-05, 1.566700000000046e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.5778000000001013e-05, 1.6028000000001263e-05, 1.591700000000071e-05, 1.5819999999999723e-05, 1.5555999999999903e-05, 1.536100000000193e-05, 1.5694999999999598e-05, 1.541699999999674e-05, 1.5763999999997974e-05, 1.5708999999999168e-05, 1.5513999999997724e-05, 1.5319999999999223e-05, 1.5249999999997904e-05, 1.509699999999864e-05, 1.580500000000068e-05, 1.533299999999932e-05, 1.5180000000000055e-05, 1.526300000000147e-05, 1.5999999999998654e-05, 1.5222000000002234e-05, 1.5514000000001194e-05, 1.6014000000001694e-05, 1.5430000000000305e-05, 1.5972999999998988e-05, 1.5443999999999874e-05, 1.5180000000000055e-05, 1.504100000000036e-05, 1.590299999999767e-05, 1.5471999999999014e-05, 1.580500000000068e-05]</msg>
<status status="PASS" starttime="20201117 14:47:12.921" endtime="20201117 14:47:12.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.917" endtime="20201117 14:47:12.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.926" endtime="20201117 14:47:12.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:12.929" endtime="20201117 14:47:12.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.928" endtime="20201117 14:47:12.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.924" endtime="20201117 14:47:12.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.560" endtime="20201117 14:47:12.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.559" endtime="20201117 14:47:12.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.558" endtime="20201117 14:47:12.950"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.953" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.961" endtime="20201117 14:47:12.977"></status>
</kw>
<msg timestamp="20201117 14:47:12.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.960" endtime="20201117 14:47:12.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:12.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:12.978" endtime="20201117 14:47:12.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.981" endtime="20201117 14:47:12.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.957" endtime="20201117 14:47:12.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.955" endtime="20201117 14:47:12.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:12.990" endtime="20201117 14:47:13.276"></status>
</kw>
<msg timestamp="20201117 14:47:13.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:12.988" endtime="20201117 14:47:13.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.280" endtime="20201117 14:47:13.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.289" endtime="20201117 14:47:13.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.986" endtime="20201117 14:47:13.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.984" endtime="20201117 14:47:13.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.296" level="INFO">${RESULT} = [{'time': 0.023088181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6556000000000903e-05, 'source_diff': 1.6556000000000903e-05}, {'time': 0.023115153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:13.292" endtime="20201117 14:47:13.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.310" level="INFO">${ACCURACY} = {'diff': [1.6556000000000903e-05, 1.6221999999999764e-05, 1.615299999999792e-05, 1.663899999999885e-05, 1.687499999999953e-05, 1.6959000000000418e-05, 1.6736000000003304e-05, 1.6651999999998945e-05, 1...</msg>
<status status="PASS" starttime="20201117 14:47:13.297" endtime="20201117 14:47:13.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.314" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.313" endtime="20201117 14:47:13.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.317" level="INFO">VALUE: [1.6556000000000903e-05, 1.6221999999999764e-05, 1.615299999999792e-05, 1.663899999999885e-05, 1.687499999999953e-05, 1.6959000000000418e-05, 1.6736000000003304e-05, 1.6651999999998945e-05, 1.7042000000001833e-05, 1.6472000000000014e-05, 1.6597999999999613e-05, 1.6111999999998683e-05, 1.6208999999999668e-05, 1.6999999999999654e-05, 1.6249999999998904e-05, 1.6986000000000084e-05, 1.7028000000002264e-05, 1.6847999999999863e-05, 1.6458999999999918e-05, 1.6388000000002595e-05, 1.629099999999814e-05, 1.6249999999998904e-05, 1.6986000000000084e-05, 1.637499999999903e-05, 1.6972000000000514e-05, 1.6221999999999764e-05, 1.686099999999996e-05, 1.636099999999946e-05, 1.6513999999998724e-05, 1.6763999999998974e-05, 1.665299999999842e-05, 1.636099999999946e-05, 1.6235999999999334e-05, 1.6195000000000098e-05, 1.6986000000000084e-05, 1.6943999999997905e-05, 1.609699999999964e-05, 1.6193999999997155e-05, 1.659700000000014e-05, 1.644499999999688e-05, 1.659700000000014e-05, 1.6292000000001083e-05, 1.6541999999997864e-05, 1.6249999999998904e-05, 1.6806000000001153e-05, 1.6999999999999654e-05, 1.6749999999999404e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.615299999999792e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.315" endtime="20201117 14:47:13.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.311" endtime="20201117 14:47:13.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.320" endtime="20201117 14:47:13.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.324" endtime="20201117 14:47:13.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.322" endtime="20201117 14:47:13.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.318" endtime="20201117 14:47:13.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.953" endtime="20201117 14:47:13.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.952" endtime="20201117 14:47:13.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:12.951" endtime="20201117 14:47:13.345"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.347" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.356" endtime="20201117 14:47:13.370"></status>
</kw>
<msg timestamp="20201117 14:47:13.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.354" endtime="20201117 14:47:13.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.372" endtime="20201117 14:47:13.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.374" endtime="20201117 14:47:13.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.351" endtime="20201117 14:47:13.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.349" endtime="20201117 14:47:13.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.383" endtime="20201117 14:47:13.666"></status>
</kw>
<msg timestamp="20201117 14:47:13.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.382" endtime="20201117 14:47:13.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.670" endtime="20201117 14:47:13.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.678" endtime="20201117 14:47:13.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.379" endtime="20201117 14:47:13.680"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.377" endtime="20201117 14:47:13.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:13.685" level="INFO">${RESULT} = [{'time': 0.021873542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.021897556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:13.682" endtime="20201117 14:47:13.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:13.699" level="INFO">${ACCURACY} = {'diff': [1.78890000000001e-05, 1.73889999999996e-05, 1.7264000000002944e-05, 1.715300000000239e-05, 1.733299999999785e-05, 1.7222000000000764e-05, 1.7487000000000058e-05, 1.7513999999999724e-05, 1.71...</msg>
<status status="PASS" starttime="20201117 14:47:13.686" endtime="20201117 14:47:13.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.703" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:13.702" endtime="20201117 14:47:13.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.705" level="INFO">VALUE: [1.78890000000001e-05, 1.73889999999996e-05, 1.7264000000002944e-05, 1.715300000000239e-05, 1.733299999999785e-05, 1.7222000000000764e-05, 1.7487000000000058e-05, 1.7513999999999724e-05, 1.718100000000153e-05, 1.729099999999914e-05, 1.7929999999999335e-05, 1.783299999999835e-05, 1.7166000000002485e-05, 1.7472000000001014e-05, 1.7208000000001195e-05, 1.7485999999997115e-05, 1.759700000000114e-05, 1.730499999999871e-05, 1.7958000000001945e-05, 1.766699999999899e-05, 1.706899999999803e-05, 1.7569000000002e-05, 1.7750000000000404e-05, 1.7929999999999335e-05, 1.7806000000002153e-05, 1.7944000000002375e-05, 1.787499999999706e-05, 1.7999999999997185e-05, 1.7971999999998045e-05, 1.7805999999998684e-05, 1.793099999999881e-05, 1.741699999999874e-05, 1.78890000000001e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.7777999999999544e-05, 1.7472000000001014e-05, 1.709700000000064e-05, 1.762500000000028e-05, 1.7305999999998184e-05, 1.7473000000000488e-05, 1.7487000000000058e-05, 1.713899999999935e-05, 1.8000000000000654e-05, 1.743100000000178e-05, 1.727699999999957e-05, 1.7915999999999765e-05, 1.7459000000000918e-05, 1.736100000000046e-05]</msg>
<status status="PASS" starttime="20201117 14:47:13.704" endtime="20201117 14:47:13.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.699" endtime="20201117 14:47:13.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.714" endtime="20201117 14:47:13.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:13.717" endtime="20201117 14:47:13.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.715" endtime="20201117 14:47:13.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.712" endtime="20201117 14:47:13.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.348" endtime="20201117 14:47:13.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.346" endtime="20201117 14:47:13.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.345" endtime="20201117 14:47:13.738"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.740" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.749" endtime="20201117 14:47:13.763"></status>
</kw>
<msg timestamp="20201117 14:47:13.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.747" endtime="20201117 14:47:13.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:13.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:13.765" endtime="20201117 14:47:13.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.767" endtime="20201117 14:47:13.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.745" endtime="20201117 14:47:13.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.742" endtime="20201117 14:47:13.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:13.776" endtime="20201117 14:47:14.061"></status>
</kw>
<msg timestamp="20201117 14:47:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:13.775" endtime="20201117 14:47:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021682069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.065" endtime="20201117 14:47:14.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.073" endtime="20201117 14:47:14.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.772" endtime="20201117 14:47:14.075"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.771" endtime="20201117 14:47:14.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.080" level="INFO">${RESULT} = [{'time': 0.021700431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8361999999997464e-05, 'source_diff': 1.8361999999997464e-05}, {'time': 0.021730375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.076" endtime="20201117 14:47:14.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.093" level="INFO">${ACCURACY} = {'diff': [1.8361999999997464e-05, 1.8457999999998975e-05, 1.8249999999997435e-05, 1.8778000000000544e-05, 1.8362000000000933e-05, 1.8971999999999045e-05, 1.82089999999982e-05, 1.8721999999998795e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:14.081" endtime="20201117 14:47:14.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.098" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.097" endtime="20201117 14:47:14.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.101" level="INFO">VALUE: [1.8361999999997464e-05, 1.8457999999998975e-05, 1.8249999999997435e-05, 1.8778000000000544e-05, 1.8362000000000933e-05, 1.8971999999999045e-05, 1.82089999999982e-05, 1.8721999999998795e-05, 1.8985999999998615e-05, 1.8235999999997865e-05, 1.834700000000189e-05, 1.82089999999982e-05, 1.897299999999852e-05, 1.8249999999997435e-05, 1.8500000000001154e-05, 1.8764000000000974e-05, 1.8749999999997935e-05, 1.8973000000001988e-05, 1.8930000000000335e-05, 1.880500000000021e-05, 1.8680000000000085e-05, 1.8500000000001154e-05, 1.901299999999828e-05, 1.8152000000000446e-05, 1.8221999999998295e-05, 1.837499999999756e-05, 1.8180000000003055e-05, 1.8402000000000696e-05, 1.881899999999978e-05, 1.8166000000000015e-05, 1.8485999999998115e-05, 1.841699999999974e-05, 1.9014000000001224e-05, 1.8680000000000085e-05, 1.8541999999999864e-05, 1.859700000000214e-05, 1.8721999999998795e-05, 1.8680000000000085e-05, 1.8207999999998725e-05, 1.811099999999774e-05, 1.8499999999997685e-05, 1.893099999999981e-05, 1.8901999999997726e-05, 1.8235999999997865e-05, 1.834699999999842e-05, 1.8819999999999254e-05, 1.8209000000001668e-05, 1.8319999999998754e-05, 1.8792000000000114e-05, 1.87089999999987e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.099" endtime="20201117 14:47:14.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.094" endtime="20201117 14:47:14.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.104" endtime="20201117 14:47:14.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.107" endtime="20201117 14:47:14.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.106" endtime="20201117 14:47:14.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.102" endtime="20201117 14:47:14.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.741" endtime="20201117 14:47:14.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.739" endtime="20201117 14:47:14.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:13.738" endtime="20201117 14:47:14.128"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.131" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.139" endtime="20201117 14:47:14.154"></status>
</kw>
<msg timestamp="20201117 14:47:14.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.137" endtime="20201117 14:47:14.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.156" endtime="20201117 14:47:14.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.158" endtime="20201117 14:47:14.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.135" endtime="20201117 14:47:14.160"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.133" endtime="20201117 14:47:14.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.167" endtime="20201117 14:47:14.454"></status>
</kw>
<msg timestamp="20201117 14:47:14.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.166" endtime="20201117 14:47:14.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023049069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.458" endtime="20201117 14:47:14.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.466" endtime="20201117 14:47:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.163" endtime="20201117 14:47:14.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.161" endtime="20201117 14:47:14.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.473" level="INFO">${RESULT} = [{'time': 0.023049069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9165999999997546e-05, 'source_diff': 1.9165999999997546e-05}, {'time': 0.023076069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.469" endtime="20201117 14:47:14.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.488" level="INFO">${ACCURACY} = {'diff': [1.9165999999997546e-05, 1.9236000000002335e-05, 1.961099999999924e-05, 1.9291999999997145e-05, 1.9401999999998226e-05, 2.0055999999997465e-05, 1.954100000000139e-05, 1.931899999999681e-05, 1...</msg>
<status status="PASS" starttime="20201117 14:47:14.474" endtime="20201117 14:47:14.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.492" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.491" endtime="20201117 14:47:14.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.495" level="INFO">VALUE: [1.9165999999997546e-05, 1.9236000000002335e-05, 1.961099999999924e-05, 1.9291999999997145e-05, 1.9401999999998226e-05, 2.0055999999997465e-05, 1.954100000000139e-05, 1.931899999999681e-05, 1.986099999999949e-05, 1.980499999999774e-05, 2.0000000000002655e-05, 1.9680000000001086e-05, 1.986099999999949e-05, 1.9166000000001016e-05, 1.966700000000099e-05, 1.9930000000001336e-05, 1.934699999999942e-05, 1.9721999999999795e-05, 1.990300000000167e-05, 1.9680000000001086e-05, 1.931900000000028e-05, 1.909699999999917e-05, 1.9444000000000405e-05, 1.9735999999999365e-05, 1.9472000000003015e-05, 1.969500000000013e-05, 1.9556000000000434e-05, 1.9499999999998685e-05, 1.941700000000074e-05, 2.0028000000001794e-05, 1.976299999999903e-05, 1.9083999999999074e-05, 1.9542000000000864e-05, 2.0027999999998325e-05, 1.9513999999998255e-05, 1.9097999999998644e-05, 1.973699999999884e-05, 1.959699999999967e-05, 1.9527999999997825e-05, 1.98890000000021e-05, 1.916700000000049e-05, 1.9444000000000405e-05, 2.002699999999885e-05, 1.9429999999997366e-05, 1.9485999999999115e-05, 1.9680000000001086e-05, 1.9444000000000405e-05, 1.9944000000000905e-05, 1.934699999999942e-05, 1.9471999999999545e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.493" endtime="20201117 14:47:14.495"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.489" endtime="20201117 14:47:14.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.498" endtime="20201117 14:47:14.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.501" endtime="20201117 14:47:14.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.500" endtime="20201117 14:47:14.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.496" endtime="20201117 14:47:14.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.131" endtime="20201117 14:47:14.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.130" endtime="20201117 14:47:14.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.129" endtime="20201117 14:47:14.522"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.525" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.533" endtime="20201117 14:47:14.547"></status>
</kw>
<msg timestamp="20201117 14:47:14.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.531" endtime="20201117 14:47:14.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.549" endtime="20201117 14:47:14.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.551" endtime="20201117 14:47:14.553"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.529" endtime="20201117 14:47:14.554"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.527" endtime="20201117 14:47:14.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.560" endtime="20201117 14:47:14.847"></status>
</kw>
<msg timestamp="20201117 14:47:14.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.559" endtime="20201117 14:47:14.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022277375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.852" endtime="20201117 14:47:14.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.861" endtime="20201117 14:47:14.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.556" endtime="20201117 14:47:14.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.555" endtime="20201117 14:47:14.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:14.868" level="INFO">${RESULT} = [{'time': 0.022277375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0207999999997256e-05, 'source_diff': 2.0207999999997256e-05}, {'time': 0.022304389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:14.864" endtime="20201117 14:47:14.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:14.882" level="INFO">${ACCURACY} = {'diff': [2.0207999999997256e-05, 2.0763999999999505e-05, 2.0320000000000754e-05, 2.0943999999998436e-05, 2.038899999999913e-05, 2.0056000000000934e-05, 2.0222000000000295e-05, 2.034700000000042e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:14.869" endtime="20201117 14:47:14.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.886" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:14.885" endtime="20201117 14:47:14.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.889" level="INFO">VALUE: [2.0207999999997256e-05, 2.0763999999999505e-05, 2.0320000000000754e-05, 2.0943999999998436e-05, 2.038899999999913e-05, 2.0056000000000934e-05, 2.0222000000000295e-05, 2.034700000000042e-05, 2.044499999999741e-05, 2.1055999999998465e-05, 2.0292000000001614e-05, 2.0207999999997256e-05, 2.0292000000001614e-05, 2.0263999999999005e-05, 2.063899999999938e-05, 2.0222000000000295e-05, 2.013899999999888e-05, 2.034700000000042e-05, 2.081899999999831e-05, 2.0556000000001434e-05, 2.037499999999956e-05, 2.0861999999999964e-05, 2.0194000000001155e-05, 2.079099999999917e-05, 2.0207999999997256e-05, 2.00830000000006e-05, 2.0320000000000754e-05, 2.0472000000000545e-05, 2.037499999999956e-05, 2.1028000000002794e-05, 2.0957999999998006e-05, 2.0486000000000115e-05, 2.0263999999999005e-05, 2.1013999999999755e-05, 2.0430000000001836e-05, 2.016700000000149e-05, 2.0556000000001434e-05, 2.011099999999974e-05, 2.09029999999992e-05, 2.009700000000017e-05, 2.0527999999998825e-05, 2.058299999999763e-05, 2.0972000000001045e-05, 2.0749999999999935e-05, 2.02090000000002e-05, 2.020899999999673e-05, 2.072300000000027e-05, 2.012500000000278e-05, 2.0792000000002114e-05, 2.0986000000000615e-05]</msg>
<status status="PASS" starttime="20201117 14:47:14.887" endtime="20201117 14:47:14.889"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.883" endtime="20201117 14:47:14.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.892" endtime="20201117 14:47:14.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:14.895" endtime="20201117 14:47:14.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.894" endtime="20201117 14:47:14.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.890" endtime="20201117 14:47:14.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.525" endtime="20201117 14:47:14.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.524" endtime="20201117 14:47:14.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.523" endtime="20201117 14:47:14.917"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.919" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.927" endtime="20201117 14:47:14.943"></status>
</kw>
<msg timestamp="20201117 14:47:14.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.925" endtime="20201117 14:47:14.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:14.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:14.945" endtime="20201117 14:47:14.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.947" endtime="20201117 14:47:14.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.923" endtime="20201117 14:47:14.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.921" endtime="20201117 14:47:14.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:14.957" endtime="20201117 14:47:15.243"></status>
</kw>
<msg timestamp="20201117 14:47:15.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:14.955" endtime="20201117 14:47:15.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.248" endtime="20201117 14:47:15.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.256" endtime="20201117 14:47:15.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.952" endtime="20201117 14:47:15.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.950" endtime="20201117 14:47:15.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.262" level="INFO">${RESULT} = [{'time': 0.022210181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1527999999999825e-05, 'source_diff': 2.1527999999999825e-05}, {'time': 0.022241194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:15.259" endtime="20201117 14:47:15.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.276" level="INFO">${ACCURACY} = {'diff': [2.1527999999999825e-05, 2.184699999999845e-05, 2.1999999999997716e-05, 2.158299999999863e-05, 2.180499999999974e-05, 2.1472000000001545e-05, 2.1929999999999866e-05, 2.1138000000000406e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:15.263" endtime="20201117 14:47:15.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.280" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.279" endtime="20201117 14:47:15.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.283" level="INFO">VALUE: [2.1527999999999825e-05, 2.184699999999845e-05, 2.1999999999997716e-05, 2.158299999999863e-05, 2.180499999999974e-05, 2.1472000000001545e-05, 2.1929999999999866e-05, 2.1138000000000406e-05, 2.159700000000167e-05, 2.1472000000001545e-05, 2.111100000000074e-05, 2.1916000000000296e-05, 2.1457999999998506e-05, 2.10830000000016e-05, 2.131899999999881e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.187500000000106e-05, 2.1957999999999006e-05, 2.106900000000203e-05, 2.1222000000001295e-05, 2.1722000000001795e-05, 2.119500000000163e-05, 2.1764000000000505e-05, 2.1485999999997646e-05, 2.1236000000000865e-05, 2.195899999999848e-05, 2.134700000000142e-05, 2.1457999999998506e-05, 2.1570000000002004e-05, 2.163900000000038e-05, 2.1819999999998785e-05, 2.162499999999734e-05, 2.1986000000001615e-05, 2.1929999999999866e-05, 2.1235999999997396e-05, 2.17090000000017e-05, 2.118100000000206e-05, 2.19030000000002e-05, 2.1264000000000005e-05, 2.1957999999999006e-05, 2.188900000000063e-05, 2.138900000000013e-05, 2.184700000000192e-05, 2.129099999999967e-05, 2.181899999999931e-05, 2.1180000000002586e-05, 2.1013999999999755e-05, 2.19030000000002e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.281" endtime="20201117 14:47:15.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.277" endtime="20201117 14:47:15.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.286" endtime="20201117 14:47:15.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.289" endtime="20201117 14:47:15.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.288" endtime="20201117 14:47:15.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.284" endtime="20201117 14:47:15.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.919" endtime="20201117 14:47:15.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.918" endtime="20201117 14:47:15.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:14.917" endtime="20201117 14:47:15.310"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.313" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.322" endtime="20201117 14:47:15.337"></status>
</kw>
<msg timestamp="20201117 14:47:15.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.320" endtime="20201117 14:47:15.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.339" endtime="20201117 14:47:15.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.342" endtime="20201117 14:47:15.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.317" endtime="20201117 14:47:15.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.315" endtime="20201117 14:47:15.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.350" endtime="20201117 14:47:15.636"></status>
</kw>
<msg timestamp="20201117 14:47:15.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023041792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023064611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.349" endtime="20201117 14:47:15.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023041792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023064611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:15.640" endtime="20201117 14:47:15.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.648" endtime="20201117 14:47:15.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.346" endtime="20201117 14:47:15.650"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.345" endtime="20201117 14:47:15.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:15.655" level="INFO">${RESULT} = [{'time': 0.023064611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.281900000000031e-05, 'source_diff': 2.281900000000031e-05}, {'time': 0.023095681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:15.651" endtime="20201117 14:47:15.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:15.668" level="INFO">${ACCURACY} = {'diff': [2.281900000000031e-05, 2.2555999999999965e-05, 2.215300000000045e-05, 2.291700000000077e-05, 2.287499999999859e-05, 2.2264000000001005e-05, 2.256900000000006e-05, 2.238899999999766e-05, 2.29...</msg>
<status status="PASS" starttime="20201117 14:47:15.656" endtime="20201117 14:47:15.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.673" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:15.672" endtime="20201117 14:47:15.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.675" level="INFO">VALUE: [2.281900000000031e-05, 2.2555999999999965e-05, 2.215300000000045e-05, 2.291700000000077e-05, 2.287499999999859e-05, 2.2264000000001005e-05, 2.256900000000006e-05, 2.238899999999766e-05, 2.2971999999999576e-05, 2.286099999999902e-05, 2.248700000000159e-05, 2.2472000000002545e-05, 2.258299999999963e-05, 2.2319999999999285e-05, 2.241700000000027e-05, 2.268100000000009e-05, 2.2735999999998896e-05, 2.263900000000138e-05, 2.298700000000209e-05, 2.2402000000001226e-05, 2.297299999999905e-05, 2.256900000000006e-05, 2.279100000000117e-05, 2.2666000000001046e-05, 2.233299999999938e-05, 2.255500000000049e-05, 2.25969999999992e-05, 2.2902000000001727e-05, 2.236100000000199e-05, 2.2944000000000436e-05, 2.212499999999784e-05, 2.2735999999998896e-05, 2.24030000000007e-05, 2.3028000000001325e-05, 2.2707999999999756e-05, 2.256900000000006e-05, 2.288900000000163e-05, 2.212500000000131e-05, 2.2763999999998036e-05, 2.2305999999999715e-05, 2.29030000000012e-05, 2.215299999999698e-05, 2.211100000000174e-05, 2.2915999999997827e-05, 2.20830000000026e-05, 2.2070000000002504e-05, 2.288899999999816e-05, 2.2971999999999576e-05, 2.218099999999959e-05, 2.244499999999941e-05]</msg>
<status status="PASS" starttime="20201117 14:47:15.674" endtime="20201117 14:47:15.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.669" endtime="20201117 14:47:15.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.678" endtime="20201117 14:47:15.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:15.682" endtime="20201117 14:47:15.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.680" endtime="20201117 14:47:15.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.677" endtime="20201117 14:47:15.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.314" endtime="20201117 14:47:15.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.312" endtime="20201117 14:47:15.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.311" endtime="20201117 14:47:15.703"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.705" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.714" endtime="20201117 14:47:15.730"></status>
</kw>
<msg timestamp="20201117 14:47:15.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.712" endtime="20201117 14:47:15.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:15.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:15.731" endtime="20201117 14:47:15.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.734" endtime="20201117 14:47:15.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.710" endtime="20201117 14:47:15.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.707" endtime="20201117 14:47:15.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:15.743" endtime="20201117 14:47:16.029"></status>
</kw>
<msg timestamp="20201117 14:47:16.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023035222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:15.741" endtime="20201117 14:47:16.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023035222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:16.033" endtime="20201117 14:47:16.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.041" endtime="20201117 14:47:16.043"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.739" endtime="20201117 14:47:16.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.737" endtime="20201117 14:47:16.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.048" level="INFO">${RESULT} = [{'time': 0.0230585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3277999999998106e-05, 'source_diff': 2.3277999999998106e-05}, {'time': 0.0230955, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:16.045" endtime="20201117 14:47:16.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.063" level="INFO">${ACCURACY} = {'diff': [2.3277999999998106e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.3749999999999466e-05, 2.313899999999841e-05, 2.362499999999934e-05, 2.3820000000000785e-05, 2.308300000000013e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:16.049" endtime="20201117 14:47:16.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.067" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.066" endtime="20201117 14:47:16.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.070" level="INFO">VALUE: [2.3277999999998106e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.3749999999999466e-05, 2.313899999999841e-05, 2.362499999999934e-05, 2.3820000000000785e-05, 2.308300000000013e-05, 2.3512999999999312e-05, 2.3986000000000146e-05, 2.366700000000152e-05, 2.340299999999823e-05, 2.393099999999787e-05, 2.3347999999999425e-05, 2.4027999999998856e-05, 2.343100000000084e-05, 2.331900000000081e-05, 2.329100000000167e-05, 2.35970000000002e-05, 2.384700000000045e-05, 2.3763999999999036e-05, 2.3818999999997842e-05, 2.4013999999999286e-05, 2.384700000000045e-05, 2.388899999999916e-05, 2.3722000000000326e-05, 2.34030000000017e-05, 2.3972000000000576e-05, 2.3749999999999466e-05, 2.333300000000038e-05, 2.361099999999977e-05, 2.3986000000000146e-05, 2.30969999999997e-05, 2.3596999999996732e-05, 2.334699999999995e-05, 2.3221999999999826e-05, 2.3972000000000576e-05, 2.3735999999999896e-05, 2.393099999999787e-05, 2.3306000000000715e-05, 2.3556000000000965e-05, 2.313899999999841e-05, 2.3791999999998176e-05, 2.393099999999787e-05, 2.313899999999841e-05, 2.320899999999973e-05, 2.348699999999912e-05, 2.394500000000091e-05, 2.361099999999977e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.068" endtime="20201117 14:47:16.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.064" endtime="20201117 14:47:16.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.073" endtime="20201117 14:47:16.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.076" endtime="20201117 14:47:16.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.075" endtime="20201117 14:47:16.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.071" endtime="20201117 14:47:16.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.706" endtime="20201117 14:47:16.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.704" endtime="20201117 14:47:16.098"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:15.703" endtime="20201117 14:47:16.098"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.100" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.108" endtime="20201117 14:47:16.123"></status>
</kw>
<msg timestamp="20201117 14:47:16.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.107" endtime="20201117 14:47:16.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.125" endtime="20201117 14:47:16.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.127" endtime="20201117 14:47:16.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.104" endtime="20201117 14:47:16.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.102" endtime="20201117 14:47:16.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.136" endtime="20201117 14:47:16.422"></status>
</kw>
<msg timestamp="20201117 14:47:16.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02176575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:16.135" endtime="20201117 14:47:16.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02176575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:16.426" endtime="20201117 14:47:16.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.435" endtime="20201117 14:47:16.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.132" endtime="20201117 14:47:16.437"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.131" endtime="20201117 14:47:16.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.441" level="INFO">${RESULT} = [{'time': 0.02176575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4791999999999176e-05, 'source_diff': 2.4791999999999176e-05}, {'time': 0.021800708, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:16.438" endtime="20201117 14:47:16.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.455" level="INFO">${ACCURACY} = {'diff': [2.4791999999999176e-05, 2.4401999999999757e-05, 2.456900000000206e-05, 2.4986000000001146e-05, 2.458300000000163e-05, 2.4277999999999106e-05, 2.4291999999998676e-05, 2.5027999999999856e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:16.442" endtime="20201117 14:47:16.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.459" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.458" endtime="20201117 14:47:16.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.461" level="INFO">VALUE: [2.4791999999999176e-05, 2.4401999999999757e-05, 2.456900000000206e-05, 2.4986000000001146e-05, 2.458300000000163e-05, 2.4277999999999106e-05, 2.4291999999998676e-05, 2.5027999999999856e-05, 2.4708000000001756e-05, 2.4972000000001576e-05, 2.4944000000002436e-05, 2.4291999999998676e-05, 2.406900000000156e-05, 2.415299999999898e-05, 2.4042000000001895e-05, 2.4472000000001076e-05, 2.494500000000191e-05, 2.412499999999984e-05, 2.4292000000002145e-05, 2.466699999999905e-05, 2.4860999999997552e-05, 2.4833999999997886e-05, 2.42230000000003e-05, 2.443100000000184e-05, 2.4056000000001465e-05, 2.4513999999999786e-05, 2.4598000000000675e-05, 2.4750000000000466e-05, 2.4540999999999452e-05, 2.4848000000000925e-05, 2.4332999999997912e-05, 2.463899999999991e-05, 2.4638000000000437e-05, 2.440299999999923e-05, 2.463899999999991e-05, 2.4665999999999577e-05, 2.4971999999998107e-05, 2.4721999999997857e-05, 2.47230000000008e-05, 2.4416000000002797e-05, 2.4235999999996927e-05, 2.415300000000245e-05, 2.4804999999999272e-05, 2.4750000000000466e-05, 2.4555999999998496e-05, 2.4833999999997886e-05, 2.431900000000181e-05, 2.44169999999988e-05, 2.4415999999999327e-05, 2.4318999999998342e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.460" endtime="20201117 14:47:16.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.455" endtime="20201117 14:47:16.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.465" endtime="20201117 14:47:16.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.468" endtime="20201117 14:47:16.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.467" endtime="20201117 14:47:16.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.463" endtime="20201117 14:47:16.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.101" endtime="20201117 14:47:16.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.099" endtime="20201117 14:47:16.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.098" endtime="20201117 14:47:16.490"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.492" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.500" endtime="20201117 14:47:16.517"></status>
</kw>
<msg timestamp="20201117 14:47:16.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.498" endtime="20201117 14:47:16.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.518" endtime="20201117 14:47:16.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.521" endtime="20201117 14:47:16.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.496" endtime="20201117 14:47:16.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.494" endtime="20201117 14:47:16.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.530" endtime="20201117 14:47:16.815"></status>
</kw>
<msg timestamp="20201117 14:47:16.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:16.528" endtime="20201117 14:47:16.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:16.819" endtime="20201117 14:47:16.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.827" endtime="20201117 14:47:16.829"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.526" endtime="20201117 14:47:16.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.524" endtime="20201117 14:47:16.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:16.834" level="INFO">${RESULT} = [{'time': 0.022506708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5207999999998787e-05, 'source_diff': 2.5207999999998787e-05}, {'time': 0.022538722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:16.831" endtime="20201117 14:47:16.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:16.848" level="INFO">${ACCURACY} = {'diff': [2.5207999999998787e-05, 2.5750000000001466e-05, 2.5179999999999647e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.512500000000084e-05, 2.5749999999997997e-05, 2.5458000000002506e-05,...</msg>
<status status="PASS" starttime="20201117 14:47:16.835" endtime="20201117 14:47:16.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.852" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:16.851" endtime="20201117 14:47:16.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.855" level="INFO">VALUE: [2.5207999999998787e-05, 2.5750000000001466e-05, 2.5179999999999647e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.512500000000084e-05, 2.5749999999997997e-05, 2.5458000000002506e-05, 2.5943999999999967e-05, 2.5986000000002146e-05, 2.5693999999999717e-05, 2.5527999999996887e-05, 2.5972000000002576e-05, 2.5069999999998566e-05, 2.5070000000002035e-05, 2.50970000000017e-05, 2.588900000000116e-05, 2.5070000000002035e-05, 2.568099999999962e-05, 2.5874999999998122e-05, 2.543099999999937e-05, 2.511100000000127e-05, 2.5556000000002965e-05, 2.5320000000002285e-05, 2.5429999999999897e-05, 2.587500000000159e-05, 2.523700000000087e-05, 2.566700000000005e-05, 2.5486000000001646e-05, 2.5236000000001396e-05, 2.6014000000001286e-05, 2.5721999999998857e-05, 2.5528000000000356e-05, 2.5624999999997872e-05, 2.5236000000001396e-05, 2.513900000000041e-05, 2.5763999999997567e-05, 2.5250000000000966e-05, 2.5277000000000632e-05, 2.5721999999998857e-05, 2.6042000000000426e-05, 2.5708000000002756e-05, 2.5193999999999217e-05, 2.5735999999998427e-05, 2.544499999999894e-05, 2.5222000000001826e-05, 2.537499999999762e-05, 2.5777999999997137e-05, 2.5764000000001036e-05, 2.5318999999999342e-05]</msg>
<status status="PASS" starttime="20201117 14:47:16.853" endtime="20201117 14:47:16.855"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.849" endtime="20201117 14:47:16.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.858" endtime="20201117 14:47:16.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:16.862" endtime="20201117 14:47:16.881"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.860" endtime="20201117 14:47:16.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.857" endtime="20201117 14:47:16.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.493" endtime="20201117 14:47:16.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.491" endtime="20201117 14:47:16.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.490" endtime="20201117 14:47:16.883"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.885" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.893" endtime="20201117 14:47:16.910"></status>
</kw>
<msg timestamp="20201117 14:47:16.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.892" endtime="20201117 14:47:16.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:16.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:16.911" endtime="20201117 14:47:16.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.914" endtime="20201117 14:47:16.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.889" endtime="20201117 14:47:16.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.887" endtime="20201117 14:47:16.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:16.923" endtime="20201117 14:47:17.208"></status>
</kw>
<msg timestamp="20201117 14:47:17.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:16.921" endtime="20201117 14:47:17.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.212" endtime="20201117 14:47:17.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.220" endtime="20201117 14:47:17.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.919" endtime="20201117 14:47:17.222"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.917" endtime="20201117 14:47:17.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.227" level="INFO">${RESULT} = [{'time': 0.021778111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.021816111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:17.223" endtime="20201117 14:47:17.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.241" level="INFO">${ACCURACY} = {'diff': [2.6596999999999732e-05, 2.6471999999999607e-05, 2.640300000000123e-05, 2.615300000000098e-05, 2.666700000000105e-05, 2.6124999999998372e-05, 2.6485999999999177e-05, 2.6735999999999427e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:17.228" endtime="20201117 14:47:17.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.245" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.244" endtime="20201117 14:47:17.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.247" level="INFO">VALUE: [2.6596999999999732e-05, 2.6471999999999607e-05, 2.640300000000123e-05, 2.615300000000098e-05, 2.666700000000105e-05, 2.6124999999998372e-05, 2.6485999999999177e-05, 2.6735999999999427e-05, 2.697299999999958e-05, 2.6069999999999566e-05, 2.6805999999997276e-05, 2.6806000000000746e-05, 2.6638999999998442e-05, 2.6652000000002007e-05, 2.6597999999999206e-05, 2.694500000000044e-05, 2.6570000000000066e-05, 2.6597999999999206e-05, 2.6374999999998622e-05, 2.665300000000148e-05, 2.6360999999999052e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6958000000000537e-05, 2.6471999999999607e-05, 2.6665999999998108e-05, 2.6596999999999732e-05, 2.6264000000001536e-05, 2.6180000000000647e-05, 2.6444000000000467e-05, 2.6846999999999982e-05, 2.691699999999783e-05, 2.6458000000000037e-05, 2.6318999999996873e-05, 2.6360999999999052e-05, 2.6708000000000287e-05, 2.6527999999997887e-05, 2.6513999999998317e-05, 2.6264000000001536e-05, 2.6874999999999122e-05, 2.6749999999998997e-05, 2.612500000000184e-05, 2.6944000000000967e-05, 2.6110999999998802e-05, 2.6915999999998358e-05, 2.6360999999999052e-05, 2.6110999999998802e-05, 2.622299999999883e-05, 2.6569000000000592e-05, 2.6277999999997637e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.246" endtime="20201117 14:47:17.248"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.241" endtime="20201117 14:47:17.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.251" endtime="20201117 14:47:17.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.254" endtime="20201117 14:47:17.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.252" endtime="20201117 14:47:17.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.249" endtime="20201117 14:47:17.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.886" endtime="20201117 14:47:17.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.884" endtime="20201117 14:47:17.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:16.883" endtime="20201117 14:47:17.275"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.278" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.286" endtime="20201117 14:47:17.302"></status>
</kw>
<msg timestamp="20201117 14:47:17.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.284" endtime="20201117 14:47:17.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.304" endtime="20201117 14:47:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.306" endtime="20201117 14:47:17.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.281" endtime="20201117 14:47:17.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.279" endtime="20201117 14:47:17.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.315" endtime="20201117 14:47:17.600"></status>
</kw>
<msg timestamp="20201117 14:47:17.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.313" endtime="20201117 14:47:17.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.604" endtime="20201117 14:47:17.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.613" endtime="20201117 14:47:17.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.311" endtime="20201117 14:47:17.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.309" endtime="20201117 14:47:17.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:17.620" level="INFO">${RESULT} = [{'time': 0.022545444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.022586444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:17.616" endtime="20201117 14:47:17.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:17.634" level="INFO">${ACCURACY} = {'diff': [2.7847000000000982e-05, 2.7972000000001107e-05, 2.7068999999997623e-05, 2.7068999999997623e-05, 2.7665999999999108e-05, 2.7986000000000677e-05, 2.7777999999999137e-05, 2.7694000000001717e-05...</msg>
<status status="PASS" starttime="20201117 14:47:17.621" endtime="20201117 14:47:17.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.639" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201117 14:47:17.638" endtime="20201117 14:47:17.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.641" level="INFO">VALUE: [2.7847000000000982e-05, 2.7972000000001107e-05, 2.7068999999997623e-05, 2.7068999999997623e-05, 2.7665999999999108e-05, 2.7986000000000677e-05, 2.7777999999999137e-05, 2.7694000000001717e-05, 2.7736000000000427e-05, 2.7888999999999692e-05, 2.7306000000001246e-05, 2.7944000000001967e-05, 2.7554999999998553e-05, 2.7361000000000052e-05, 2.7611000000000302e-05, 2.715299999999851e-05, 2.716700000000155e-05, 2.7778000000002606e-05, 2.7652999999999012e-05, 2.7930000000002397e-05, 2.719500000000069e-05, 2.8013999999999817e-05, 2.7124999999999372e-05, 2.790300000000273e-05, 2.8027999999999387e-05, 2.7777999999999137e-05, 2.7888999999999692e-05, 2.7194000000001217e-05, 2.772300000000033e-05, 2.7930000000002397e-05, 2.7512999999999843e-05, 2.7457999999997568e-05, 2.7055000000001522e-05, 2.7875000000000122e-05, 2.7736000000000427e-05, 2.7235999999999927e-05, 2.7805000000002272e-05, 2.7097000000000232e-05, 2.7278000000002106e-05, 2.7222000000000357e-05, 2.7055000000001522e-05, 2.7388999999999192e-05, 2.7986000000000677e-05, 2.7555999999998027e-05, 2.7263999999999067e-05, 2.7721999999997388e-05, 2.7056000000000996e-05, 2.743100000000137e-05, 2.719500000000069e-05, 2.7708000000001287e-05]</msg>
<status status="PASS" starttime="20201117 14:47:17.640" endtime="20201117 14:47:17.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.635" endtime="20201117 14:47:17.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.644" endtime="20201117 14:47:17.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:17.648" endtime="20201117 14:47:17.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.646" endtime="20201117 14:47:17.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.643" endtime="20201117 14:47:17.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.278" endtime="20201117 14:47:17.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.276" endtime="20201117 14:47:17.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.276" endtime="20201117 14:47:17.669"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.679" endtime="20201117 14:47:17.696"></status>
</kw>
<msg timestamp="20201117 14:47:17.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.678" endtime="20201117 14:47:17.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:17.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:17.697" endtime="20201117 14:47:17.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.700" endtime="20201117 14:47:17.701"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.675" endtime="20201117 14:47:17.702"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.673" endtime="20201117 14:47:17.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:17.709" endtime="20201117 14:47:17.995"></status>
</kw>
<msg timestamp="20201117 14:47:17.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.707" endtime="20201117 14:47:17.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022064208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022093028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:17.999" endtime="20201117 14:47:18.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.007" endtime="20201117 14:47:18.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.704" endtime="20201117 14:47:18.009"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.703" endtime="20201117 14:47:18.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.014" level="INFO">${RESULT} = [{'time': 0.022093028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8820000000002316e-05, 'source_diff': 2.8820000000002316e-05}, {'time': 0.022127028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:18.011" endtime="20201117 14:47:18.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.027" level="INFO">${ACCURACY} = {'diff': [2.8820000000002316e-05, 2.8097000000001232e-05, 2.8096999999997763e-05, 2.8361000000001052e-05, 2.8903000000000262e-05, 2.820900000000126e-05, 2.820900000000126e-05, 2.8903000000000262e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:18.015" endtime="20201117 14:47:18.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.032" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.031" endtime="20201117 14:47:18.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.034" level="INFO">VALUE: [2.8820000000002316e-05, 2.8097000000001232e-05, 2.8096999999997763e-05, 2.8361000000001052e-05, 2.8903000000000262e-05, 2.820900000000126e-05, 2.820900000000126e-05, 2.8903000000000262e-05, 2.8639000000000442e-05, 2.9013999999997347e-05, 2.8402999999999762e-05, 2.8541999999999457e-05, 2.8611000000001302e-05, 2.8514000000000317e-05, 2.8083000000001662e-05, 2.8611000000001302e-05, 2.8125000000000372e-05, 2.8138999999999942e-05, 2.8527999999999887e-05, 2.8486000000001177e-05, 2.8429999999999428e-05, 2.8236000000000927e-05, 2.8179999999999178e-05, 2.8929999999999928e-05, 2.8429999999999428e-05, 2.8722000000001857e-05, 2.9028000000000387e-05, 2.8250000000000497e-05, 2.868100000000262e-05, 2.816700000000255e-05, 2.8763999999997097e-05, 2.9028000000000387e-05, 2.8306000000002246e-05, 2.9014000000000817e-05, 2.844500000000194e-05, 2.8834000000001886e-05, 2.8848000000001456e-05, 2.8138999999999942e-05, 2.8221999999997888e-05, 2.8388000000000718e-05, 2.8679999999999678e-05, 2.9027000000000913e-05, 2.888799999999775e-05, 2.8610999999997833e-05, 2.8804999999999803e-05, 2.8389000000000192e-05, 2.8999999999997778e-05, 2.8597000000001732e-05, 2.9014000000000817e-05, 2.8707999999998818e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.033" endtime="20201117 14:47:18.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.028" endtime="20201117 14:47:18.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.037" endtime="20201117 14:47:18.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.041" endtime="20201117 14:47:18.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.039" endtime="20201117 14:47:18.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.036" endtime="20201117 14:47:18.061"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.672" endtime="20201117 14:47:18.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.670" endtime="20201117 14:47:18.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:17.669" endtime="20201117 14:47:18.062"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.064" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.072" endtime="20201117 14:47:18.089"></status>
</kw>
<msg timestamp="20201117 14:47:18.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.071" endtime="20201117 14:47:18.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.091" endtime="20201117 14:47:18.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.094" endtime="20201117 14:47:18.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.068" endtime="20201117 14:47:18.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.066" endtime="20201117 14:47:18.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.102" endtime="20201117 14:47:18.389"></status>
</kw>
<msg timestamp="20201117 14:47:18.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.101" endtime="20201117 14:47:18.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.393" endtime="20201117 14:47:18.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.401" endtime="20201117 14:47:18.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.098" endtime="20201117 14:47:18.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.097" endtime="20201117 14:47:18.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.408" level="INFO">${RESULT} = [{'time': 0.022333889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.022371903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:18.405" endtime="20201117 14:47:18.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.422" level="INFO">${ACCURACY} = {'diff': [2.9332999999999443e-05, 2.9610999999998833e-05, 2.9971999999999638e-05, 2.945899999999904e-05, 2.9806000000000277e-05, 2.9264000000001067e-05, 2.972299999999886e-05, 2.9082999999999193e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:18.409" endtime="20201117 14:47:18.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.426" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.425" endtime="20201117 14:47:18.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.429" level="INFO">VALUE: [2.9332999999999443e-05, 2.9610999999998833e-05, 2.9971999999999638e-05, 2.945899999999904e-05, 2.9806000000000277e-05, 2.9264000000001067e-05, 2.972299999999886e-05, 2.9082999999999193e-05, 2.9917000000000832e-05, 2.995899999999954e-05, 2.918099999999965e-05, 2.9750000000001997e-05, 2.9180000000000178e-05, 2.9762999999998624e-05, 2.9707999999999818e-05, 2.9193999999999748e-05, 2.9110999999998333e-05, 2.9540999999997514e-05, 2.9888999999998223e-05, 2.9221999999998888e-05, 2.9930000000000928e-05, 2.9542000000000457e-05, 2.94309999999999e-05, 2.9082999999999193e-05, 2.9111000000001802e-05, 2.9110999999998333e-05, 2.9167000000000082e-05, 2.9083999999998666e-05, 3.0028000000001387e-05, 2.9514000000001317e-05, 2.9860999999999083e-05, 2.9500000000001747e-05, 2.9985999999999208e-05, 2.9860999999999083e-05, 2.945900000000251e-05, 2.970899999999929e-05, 2.9971999999999638e-05, 2.916599999999714e-05, 2.9902000000001788e-05, 2.9153000000000512e-05, 2.9931000000000402e-05, 2.9055000000000053e-05, 2.9096999999998763e-05, 2.9666000000001108e-05, 2.916599999999714e-05, 2.9055000000000053e-05, 2.9374999999998153e-05, 2.9541999999996987e-05, 2.9999999999998778e-05, 2.9596999999999263e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.427" endtime="20201117 14:47:18.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.423" endtime="20201117 14:47:18.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.432" endtime="20201117 14:47:18.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.435" endtime="20201117 14:47:18.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.434" endtime="20201117 14:47:18.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.430" endtime="20201117 14:47:18.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.065" endtime="20201117 14:47:18.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.063" endtime="20201117 14:47:18.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.062" endtime="20201117 14:47:18.456"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.459" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.467" endtime="20201117 14:47:18.483"></status>
</kw>
<msg timestamp="20201117 14:47:18.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.466" endtime="20201117 14:47:18.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.484" endtime="20201117 14:47:18.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.487" endtime="20201117 14:47:18.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.463" endtime="20201117 14:47:18.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.461" endtime="20201117 14:47:18.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.496" endtime="20201117 14:47:18.781"></status>
</kw>
<msg timestamp="20201117 14:47:18.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.494" endtime="20201117 14:47:18.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.786" endtime="20201117 14:47:18.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.794" endtime="20201117 14:47:18.795"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.492" endtime="20201117 14:47:18.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.490" endtime="20201117 14:47:18.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:18.800" level="INFO">${RESULT} = [{'time': 0.022216097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0083000000000193e-05, 'source_diff': 3.0083000000000193e-05}, {'time': 0.022258097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:18.797" endtime="20201117 14:47:18.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:18.814" level="INFO">${ACCURACY} = {'diff': [3.0083000000000193e-05, 3.0208000000000318e-05, 3.073599999999996e-05, 3.0347000000000013e-05, 3.073599999999996e-05, 3.0332999999996973e-05, 3.0139000000001942e-05, 3.098600000000021e-05, 3...</msg>
<status status="PASS" starttime="20201117 14:47:18.801" endtime="20201117 14:47:18.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.818" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201117 14:47:18.817" endtime="20201117 14:47:18.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.821" level="INFO">VALUE: [3.0083000000000193e-05, 3.0208000000000318e-05, 3.073599999999996e-05, 3.0347000000000013e-05, 3.073599999999996e-05, 3.0332999999996973e-05, 3.0139000000001942e-05, 3.098600000000021e-05, 3.0167000000001082e-05, 3.0332999999996973e-05, 3.091700000000183e-05, 3.098600000000021e-05, 3.069500000000072e-05, 3.0083999999999667e-05, 3.0139000000001942e-05, 3.0263999999998598e-05, 3.0042000000000957e-05, 3.05700000000006e-05, 3.0181000000000652e-05, 3.072299999999986e-05, 3.092999999999846e-05, 3.023699999999893e-05, 3.065200000000254e-05, 3.1012999999999874e-05, 3.0472000000000138e-05, 3.054100000000198e-05, 3.0402999999998293e-05, 3.0166000000001608e-05, 3.0138999999998473e-05, 3.077799999999867e-05, 3.0540999999998514e-05, 3.074999999999953e-05, 3.083400000000042e-05, 3.0235999999999458e-05, 3.097199999999717e-05, 3.0320000000000347e-05, 3.0292000000001207e-05, 3.0221999999999888e-05, 3.07639999999991e-05, 3.094500000000097e-05, 3.0153000000001512e-05, 3.07639999999991e-05, 3.072200000000039e-05, 3.0264000000002067e-05, 3.080600000000128e-05, 3.066700000000158e-05, 3.091699999999836e-05, 3.0013999999998348e-05, 3.0305999999997307e-05, 3.070900000000029e-05]</msg>
<status status="PASS" starttime="20201117 14:47:18.819" endtime="20201117 14:47:18.821"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.815" endtime="20201117 14:47:18.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.824" endtime="20201117 14:47:18.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:18.836" endtime="20201117 14:47:18.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.826" endtime="20201117 14:47:18.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.822" endtime="20201117 14:47:18.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.459" endtime="20201117 14:47:18.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.457" endtime="20201117 14:47:18.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.457" endtime="20201117 14:47:18.858"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.860" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.868" endtime="20201117 14:47:18.885"></status>
</kw>
<msg timestamp="20201117 14:47:18.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.867" endtime="20201117 14:47:18.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:18.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:18.887" endtime="20201117 14:47:18.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.889" endtime="20201117 14:47:18.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.864" endtime="20201117 14:47:18.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.862" endtime="20201117 14:47:18.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:18.898" endtime="20201117 14:47:19.183"></status>
</kw>
<msg timestamp="20201117 14:47:19.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:18.897" endtime="20201117 14:47:19.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.187" endtime="20201117 14:47:19.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.195" endtime="20201117 14:47:19.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.894" endtime="20201117 14:47:19.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.892" endtime="20201117 14:47:19.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.202" level="INFO">${RESULT} = [{'time': 0.022592083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.148599999999724e-05, 'source_diff': 3.148599999999724e-05}, {'time': 0.022630069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.199" endtime="20201117 14:47:19.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.217" level="INFO">${ACCURACY} = {'diff': [3.148599999999724e-05, 3.197199999999817e-05, 3.1846999999998044e-05, 3.1582999999998224e-05, 3.150000000000028e-05, 3.173600000000096e-05, 3.184800000000099e-05, 3.172199999999792e-05, 3.14...</msg>
<status status="PASS" starttime="20201117 14:47:19.203" endtime="20201117 14:47:19.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.221" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.220" endtime="20201117 14:47:19.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.224" level="INFO">VALUE: [3.148599999999724e-05, 3.197199999999817e-05, 3.1846999999998044e-05, 3.1582999999998224e-05, 3.150000000000028e-05, 3.173600000000096e-05, 3.184800000000099e-05, 3.172199999999792e-05, 3.142999999999896e-05, 3.134700000000101e-05, 3.195800000000207e-05, 3.191700000000283e-05, 3.198700000000068e-05, 3.173599999999749e-05, 3.109700000000076e-05, 3.141700000000233e-05, 3.138899999999972e-05, 3.17640000000001e-05, 3.190299999999979e-05, 3.141699999999886e-05, 3.150000000000028e-05, 3.187500000000065e-05, 3.19310000000024e-05, 3.148700000000018e-05, 3.123699999999993e-05, 3.1804999999999334e-05, 3.165200000000007e-05, 3.190200000000032e-05, 3.122200000000089e-05, 3.134700000000101e-05, 3.141599999999939e-05, 3.137500000000015e-05, 3.125000000000003e-05, 3.133300000000144e-05, 3.115299999999904e-05, 3.194399999999903e-05, 3.136100000000058e-05, 3.169399999999878e-05, 3.136100000000058e-05, 3.122200000000089e-05, 3.141700000000233e-05, 3.109700000000076e-05, 3.125000000000003e-05, 3.204199999999949e-05, 3.118099999999818e-05, 3.15839999999977e-05, 3.1598000000000737e-05, 3.118100000000165e-05, 3.113899999999947e-05, 3.109700000000076e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.222" endtime="20201117 14:47:19.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.218" endtime="20201117 14:47:19.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.227" endtime="20201117 14:47:19.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.230" endtime="20201117 14:47:19.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.229" endtime="20201117 14:47:19.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.225" endtime="20201117 14:47:19.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.861" endtime="20201117 14:47:19.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.859" endtime="20201117 14:47:19.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:18.858" endtime="20201117 14:47:19.252"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.254" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.262" endtime="20201117 14:47:19.278"></status>
</kw>
<msg timestamp="20201117 14:47:19.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.260" endtime="20201117 14:47:19.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.280" endtime="20201117 14:47:19.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.282" endtime="20201117 14:47:19.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.258" endtime="20201117 14:47:19.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.256" endtime="20201117 14:47:19.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.291" endtime="20201117 14:47:19.577"></status>
</kw>
<msg timestamp="20201117 14:47:19.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.290" endtime="20201117 14:47:19.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.581" endtime="20201117 14:47:19.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.589" endtime="20201117 14:47:19.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.287" endtime="20201117 14:47:19.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.285" endtime="20201117 14:47:19.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.596" level="INFO">${RESULT} = [{'time': 0.021709875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2318999999999404e-05, 'source_diff': 3.2318999999999404e-05}, {'time': 0.021748861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:19.593" endtime="20201117 14:47:19.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:19.609" level="INFO">${ACCURACY} = {'diff': [3.2318999999999404e-05, 3.26250000000014e-05, 3.233300000000244e-05, 3.275000000000153e-05, 3.281999999999938e-05, 3.280599999999981e-05, 3.213900000000047e-05, 3.270799999999935e-05, 3.2721...</msg>
<status status="PASS" starttime="20201117 14:47:19.597" endtime="20201117 14:47:19.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.614" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201117 14:47:19.613" endtime="20201117 14:47:19.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.617" level="INFO">VALUE: [3.2318999999999404e-05, 3.26250000000014e-05, 3.233300000000244e-05, 3.275000000000153e-05, 3.281999999999938e-05, 3.280599999999981e-05, 3.213900000000047e-05, 3.270799999999935e-05, 3.272199999999892e-05, 3.280599999999981e-05, 3.223600000000146e-05, 3.304200000000049e-05, 3.225000000000103e-05, 3.222199999999842e-05, 3.286200000000156e-05, 3.231999999999888e-05, 3.26250000000014e-05, 3.2555000000000084e-05, 3.299999999999831e-05, 3.247199999999867e-05, 3.240200000000082e-05, 3.251400000000085e-05, 3.254199999999999e-05, 3.268000000000021e-05, 3.245800000000257e-05, 3.216600000000014e-05, 3.216699999999961e-05, 3.277800000000067e-05, 3.2068999999999154e-05, 3.272199999999892e-05, 3.26250000000014e-05, 3.299999999999831e-05, 3.223600000000146e-05, 3.216699999999961e-05, 3.243099999999943e-05, 3.222200000000189e-05, 3.243099999999943e-05, 3.293099999999993e-05, 3.25839999999987e-05, 3.249999999999781e-05, 3.283399999999895e-05, 3.283400000000242e-05, 3.230599999999931e-05, 3.251400000000085e-05, 3.261100000000183e-05, 3.2318999999999404e-05, 3.2624999999997933e-05, 3.2541000000000514e-05, 3.286100000000208e-05, 3.202799999999992e-05]</msg>
<status status="PASS" starttime="20201117 14:47:19.615" endtime="20201117 14:47:19.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.610" endtime="20201117 14:47:19.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.620" endtime="20201117 14:47:19.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:19.623" endtime="20201117 14:47:19.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.622" endtime="20201117 14:47:19.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.618" endtime="20201117 14:47:19.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.255" endtime="20201117 14:47:19.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.253" endtime="20201117 14:47:19.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.252" endtime="20201117 14:47:19.645"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.647" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.655" endtime="20201117 14:47:19.671"></status>
</kw>
<msg timestamp="20201117 14:47:19.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.653" endtime="20201117 14:47:19.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:19.673" endtime="20201117 14:47:19.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.676" endtime="20201117 14:47:19.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.651" endtime="20201117 14:47:19.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.649" endtime="20201117 14:47:19.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.684" endtime="20201117 14:47:19.969"></status>
</kw>
<msg timestamp="20201117 14:47:19.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.683" endtime="20201117 14:47:19.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:19.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:19.973" endtime="20201117 14:47:19.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:19.982" endtime="20201117 14:47:19.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.680" endtime="20201117 14:47:19.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.679" endtime="20201117 14:47:19.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:19.988" level="INFO">${RESULT} = [{'time': 0.021784861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347199999999967e-05, 'source_diff': 3.347199999999967e-05}, {'time': 0.021826806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:19.985" endtime="20201117 14:47:19.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.002" level="INFO">${ACCURACY} = {'diff': [3.347199999999967e-05, 3.404200000000149e-05, 3.3346999999999544e-05, 3.3305000000000834e-05, 3.361100000000283e-05, 3.3124999999998433e-05, 3.325000000000203e-05, 3.340299999999782e-05, 3.3...</msg>
<status status="PASS" starttime="20201117 14:47:19.990" endtime="20201117 14:47:20.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.007" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.006" endtime="20201117 14:47:20.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.009" level="INFO">VALUE: [3.347199999999967e-05, 3.404200000000149e-05, 3.3346999999999544e-05, 3.3305000000000834e-05, 3.361100000000283e-05, 3.3124999999998433e-05, 3.325000000000203e-05, 3.340299999999782e-05, 3.3374999999998683e-05, 3.386100000000308e-05, 3.3596999999999794e-05, 3.3110999999998864e-05, 3.4041000000002014e-05, 3.397200000000017e-05, 3.391700000000136e-05, 3.313900000000147e-05, 3.340299999999782e-05, 3.380600000000081e-05, 3.395900000000007e-05, 3.401399999999888e-05, 3.323699999999846e-05, 3.3860999999999614e-05, 3.372299999999939e-05, 3.368000000000121e-05, 3.3860999999999614e-05, 3.341600000000139e-05, 3.3762999999999155e-05, 3.369500000000025e-05, 3.3762999999999155e-05, 3.343000000000096e-05, 3.329199999999727e-05, 3.3082999999999724e-05, 3.313900000000147e-05, 3.337500000000215e-05, 3.354200000000099e-05, 3.349999999999881e-05, 3.397200000000017e-05, 3.377800000000167e-05, 3.377800000000167e-05, 3.39450000000005e-05, 3.336100000000258e-05, 3.3374999999998683e-05, 3.365300000000154e-05, 3.399999999999931e-05, 3.370800000000035e-05, 3.3888999999998753e-05, 3.323599999999899e-05, 3.374999999999906e-05, 3.347199999999967e-05, 3.352800000000142e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.008" endtime="20201117 14:47:20.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.003" endtime="20201117 14:47:20.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.012" endtime="20201117 14:47:20.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.016" endtime="20201117 14:47:20.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.014" endtime="20201117 14:47:20.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.011" endtime="20201117 14:47:20.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.648" endtime="20201117 14:47:20.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.646" endtime="20201117 14:47:20.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:19.645" endtime="20201117 14:47:20.037"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.039" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.047" endtime="20201117 14:47:20.063"></status>
</kw>
<msg timestamp="20201117 14:47:20.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.046" endtime="20201117 14:47:20.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.065" endtime="20201117 14:47:20.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.067" endtime="20201117 14:47:20.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.043" endtime="20201117 14:47:20.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.041" endtime="20201117 14:47:20.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.077" endtime="20201117 14:47:20.361"></status>
</kw>
<msg timestamp="20201117 14:47:20.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.075" endtime="20201117 14:47:20.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021934264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.365" endtime="20201117 14:47:20.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.373" endtime="20201117 14:47:20.375"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.072" endtime="20201117 14:47:20.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.071" endtime="20201117 14:47:20.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.380" level="INFO">${RESULT} = [{'time': 0.021968681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.441700000000186e-05, 'source_diff': 3.441700000000186e-05}, {'time': 0.022009736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.377" endtime="20201117 14:47:20.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.394" level="INFO">${ACCURACY} = {'diff': [3.441700000000186e-05, 3.4304999999998365e-05, 3.4652999999999073e-05, 3.463800000000003e-05, 3.5026999999999975e-05, 3.476399999999963e-05, 3.448600000000024e-05, 3.469400000000178e-05, 3.4...</msg>
<status status="PASS" starttime="20201117 14:47:20.381" endtime="20201117 14:47:20.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.399" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.398" endtime="20201117 14:47:20.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.401" level="INFO">VALUE: [3.441700000000186e-05, 3.4304999999998365e-05, 3.4652999999999073e-05, 3.463800000000003e-05, 3.5026999999999975e-05, 3.476399999999963e-05, 3.448600000000024e-05, 3.469400000000178e-05, 3.449999999999981e-05, 3.4861000000000614e-05, 3.467999999999874e-05, 3.444399999999806e-05, 3.469500000000125e-05, 3.472200000000092e-05, 3.491700000000236e-05, 3.476399999999963e-05, 3.429200000000174e-05, 3.438900000000272e-05, 3.500000000000031e-05, 3.483400000000095e-05, 3.468100000000168e-05, 3.500000000000031e-05, 3.4583000000001224e-05, 3.419500000000075e-05, 3.4902999999999323e-05, 3.473699999999996e-05, 3.469499999999778e-05, 3.4277000000002694e-05, 3.4512999999999905e-05, 3.4124999999999434e-05, 3.473600000000049e-05, 3.4083000000000724e-05, 3.493000000000246e-05, 3.423599999999999e-05, 3.4333000000000974e-05, 3.442999999999849e-05, 3.437500000000315e-05, 3.416699999999814e-05, 3.4152999999998573e-05, 3.49450000000015e-05, 3.449999999999981e-05, 3.452799999999895e-05, 3.4875000000000184e-05, 3.451400000000285e-05, 3.448600000000024e-05, 3.45840000000007e-05, 3.4445000000001e-05, 3.473600000000049e-05, 3.4361000000000114e-05, 3.433399999999698e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.400" endtime="20201117 14:47:20.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.395" endtime="20201117 14:47:20.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.405" endtime="20201117 14:47:20.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.408" endtime="20201117 14:47:20.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.407" endtime="20201117 14:47:20.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.403" endtime="20201117 14:47:20.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.040" endtime="20201117 14:47:20.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.038" endtime="20201117 14:47:20.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.037" endtime="20201117 14:47:20.430"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.432" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.440" endtime="20201117 14:47:20.457"></status>
</kw>
<msg timestamp="20201117 14:47:20.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.438" endtime="20201117 14:47:20.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.459" endtime="20201117 14:47:20.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.461" endtime="20201117 14:47:20.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.436" endtime="20201117 14:47:20.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.434" endtime="20201117 14:47:20.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.471" endtime="20201117 14:47:20.757"></status>
</kw>
<msg timestamp="20201117 14:47:20.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023090444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023125958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.469" endtime="20201117 14:47:20.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023090444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023125958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.761" endtime="20201117 14:47:20.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.769" endtime="20201117 14:47:20.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.466" endtime="20201117 14:47:20.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.464" endtime="20201117 14:47:20.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:20.776" level="INFO">${RESULT} = [{'time': 0.023125958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.551399999999691e-05, 'source_diff': 3.551399999999691e-05}, {'time': 0.023169958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:20.773" endtime="20201117 14:47:20.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:20.791" level="INFO">${ACCURACY} = {'diff': [3.551399999999691e-05, 3.5597000000001794e-05, 3.548599999999777e-05, 3.576400000000063e-05, 3.5318999999998935e-05, 3.5111000000000864e-05, 3.5833000000002474e-05, 3.522199999999795e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:47:20.777" endtime="20201117 14:47:20.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.795" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201117 14:47:20.794" endtime="20201117 14:47:20.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.798" level="INFO">VALUE: [3.551399999999691e-05, 3.5597000000001794e-05, 3.548599999999777e-05, 3.576400000000063e-05, 3.5318999999998935e-05, 3.5111000000000864e-05, 3.5833000000002474e-05, 3.522199999999795e-05, 3.598600000000174e-05, 3.519399999999881e-05, 3.5360999999997644e-05, 3.5666999999999643e-05, 3.569499999999878e-05, 3.506999999999816e-05, 3.559800000000127e-05, 3.532000000000188e-05, 3.545900000000157e-05, 3.544499999999853e-05, 3.595900000000207e-05, 3.551400000000038e-05, 3.5389000000000254e-05, 3.600000000000131e-05, 3.6055000000000115e-05, 3.5582999999998755e-05, 3.566600000000017e-05, 3.519400000000228e-05, 3.5639000000000504e-05, 3.566600000000017e-05, 3.5846999999998574e-05, 3.566600000000017e-05, 3.5068999999998685e-05, 3.57780000000002e-05, 3.5846999999998574e-05, 3.520799999999838e-05, 3.52779999999997e-05, 3.5402999999999823e-05, 3.5139000000000004e-05, 3.530600000000231e-05, 3.5389000000000254e-05, 3.573700000000096e-05, 3.529199999999927e-05, 3.548600000000124e-05, 3.576400000000063e-05, 3.6041000000000545e-05, 3.570799999999888e-05, 3.576400000000063e-05, 3.554199999999952e-05, 3.5318999999998935e-05, 3.519399999999881e-05, 3.550000000000081e-05]</msg>
<status status="PASS" starttime="20201117 14:47:20.796" endtime="20201117 14:47:20.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.792" endtime="20201117 14:47:20.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.801" endtime="20201117 14:47:20.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:20.804" endtime="20201117 14:47:20.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.802" endtime="20201117 14:47:20.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.799" endtime="20201117 14:47:20.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.432" endtime="20201117 14:47:20.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.431" endtime="20201117 14:47:20.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.430" endtime="20201117 14:47:20.825"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.836" endtime="20201117 14:47:20.851"></status>
</kw>
<msg timestamp="20201117 14:47:20.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.834" endtime="20201117 14:47:20.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:20.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:20.852" endtime="20201117 14:47:20.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.855" endtime="20201117 14:47:20.857"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.832" endtime="20201117 14:47:20.858"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.830" endtime="20201117 14:47:20.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:20.864" endtime="20201117 14:47:21.149"></status>
</kw>
<msg timestamp="20201117 14:47:21.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:20.863" endtime="20201117 14:47:21.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.154" endtime="20201117 14:47:21.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.162" endtime="20201117 14:47:21.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.860" endtime="20201117 14:47:21.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.859" endtime="20201117 14:47:21.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.169" level="INFO">${RESULT} = [{'time': 0.021657347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6889000000001754e-05, 'source_diff': 3.6889000000001754e-05}, {'time': 0.021705278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:21.165" endtime="20201117 14:47:21.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.182" level="INFO">${ACCURACY} = {'diff': [3.6889000000001754e-05, 3.6681000000000213e-05, 3.620899999999885e-05, 3.6125000000001434e-05, 3.624999999999809e-05, 3.619499999999928e-05, 3.670899999999935e-05, 3.695800000000013e-05, 3.6...</msg>
<status status="PASS" starttime="20201117 14:47:21.169" endtime="20201117 14:47:21.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.187" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.186" endtime="20201117 14:47:21.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.189" level="INFO">VALUE: [3.6889000000001754e-05, 3.6681000000000213e-05, 3.620899999999885e-05, 3.6125000000001434e-05, 3.624999999999809e-05, 3.619499999999928e-05, 3.670899999999935e-05, 3.695800000000013e-05, 3.6375000000001684e-05, 3.669400000000031e-05, 3.672199999999945e-05, 3.6790999999997825e-05, 3.644400000000006e-05, 3.6527000000001475e-05, 3.647200000000267e-05, 3.641600000000092e-05, 3.616600000000067e-05, 3.6375000000001684e-05, 3.694500000000003e-05, 3.680600000000034e-05, 3.6652999999997604e-05, 3.611200000000134e-05, 3.658399999999923e-05, 3.6430999999999963e-05, 3.67780000000012e-05, 3.622299999999842e-05, 3.65979999999988e-05, 3.701400000000188e-05, 3.648599999999877e-05, 3.675000000000206e-05, 3.60979999999983e-05, 3.644499999999953e-05, 3.6625000000001934e-05, 3.676400000000163e-05, 3.6763000000002155e-05, 3.704200000000102e-05, 3.6846999999999575e-05, 3.624999999999809e-05, 3.648600000000224e-05, 3.702800000000145e-05, 3.625000000000156e-05, 3.6430999999999963e-05, 3.680599999999687e-05, 3.62780000000007e-05, 3.629200000000027e-05, 3.644499999999953e-05, 3.6874999999998714e-05, 3.654200000000052e-05, 3.6374999999998214e-05, 3.698599999999927e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.188" endtime="20201117 14:47:21.189"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.183" endtime="20201117 14:47:21.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.192" endtime="20201117 14:47:21.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.195" endtime="20201117 14:47:21.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.194" endtime="20201117 14:47:21.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.190" endtime="20201117 14:47:21.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.828" endtime="20201117 14:47:21.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.826" endtime="20201117 14:47:21.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:20.826" endtime="20201117 14:47:21.216"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.219" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.227" endtime="20201117 14:47:21.244"></status>
</kw>
<msg timestamp="20201117 14:47:21.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.226" endtime="20201117 14:47:21.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.246" endtime="20201117 14:47:21.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.248" endtime="20201117 14:47:21.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.223" endtime="20201117 14:47:21.250"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.221" endtime="20201117 14:47:21.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.257" endtime="20201117 14:47:21.544"></status>
</kw>
<msg timestamp="20201117 14:47:21.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02305975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:21.256" endtime="20201117 14:47:21.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02305975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:21.548" endtime="20201117 14:47:21.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.556" endtime="20201117 14:47:21.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.253" endtime="20201117 14:47:21.558"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.251" endtime="20201117 14:47:21.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.563" level="INFO">${RESULT} = [{'time': 0.023097278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.752799999999848e-05, 'source_diff': 3.752799999999848e-05}, {'time': 0.023142292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:21.560" endtime="20201117 14:47:21.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.576" level="INFO">${ACCURACY} = {'diff': [3.752799999999848e-05, 3.801399999999941e-05, 3.711199999999887e-05, 3.72780000000017e-05, 3.751399999999891e-05, 3.797300000000017e-05, 3.7931000000001464e-05, 3.7110999999999394e-05, 3.727...</msg>
<status status="PASS" starttime="20201117 14:47:21.564" endtime="20201117 14:47:21.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.581" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.580" endtime="20201117 14:47:21.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.583" level="INFO">VALUE: [3.752799999999848e-05, 3.801399999999941e-05, 3.711199999999887e-05, 3.72780000000017e-05, 3.751399999999891e-05, 3.797300000000017e-05, 3.7931000000001464e-05, 3.7110999999999394e-05, 3.7277000000002225e-05, 3.7318999999997465e-05, 3.7624999999999464e-05, 3.744399999999759e-05, 3.768000000000174e-05, 3.7874999999999714e-05, 3.7374999999999214e-05, 3.7847000000000575e-05, 3.7861000000000145e-05, 3.749999999999934e-05, 3.7596999999996855e-05, 3.7152999999998104e-05, 3.718000000000124e-05, 3.726399999999866e-05, 3.805600000000159e-05, 3.708399999999973e-05, 3.7403000000001824e-05, 3.732000000000041e-05, 3.783400000000048e-05, 3.702800000000145e-05, 3.799999999999984e-05, 3.8069000000001685e-05, 3.763799999999956e-05, 3.7695000000000783e-05, 3.770900000000035e-05, 3.71520000000021e-05, 3.720800000000038e-05, 3.7290999999998325e-05, 3.7805000000001865e-05, 3.727799999999823e-05, 3.8054999999998645e-05, 3.795800000000113e-05, 3.7916999999998424e-05, 3.774999999999959e-05, 3.7403000000001824e-05, 3.7431000000000964e-05, 3.7139000000002004e-05, 3.776400000000263e-05, 3.711200000000234e-05, 3.723599999999952e-05, 3.7555000000001615e-05, 3.7290999999998325e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.582" endtime="20201117 14:47:21.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.577" endtime="20201117 14:47:21.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.586" endtime="20201117 14:47:21.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.590" endtime="20201117 14:47:21.609"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.588" endtime="20201117 14:47:21.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.585" endtime="20201117 14:47:21.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.219" endtime="20201117 14:47:21.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.218" endtime="20201117 14:47:21.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.217" endtime="20201117 14:47:21.611"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.614" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.622" endtime="20201117 14:47:21.638"></status>
</kw>
<msg timestamp="20201117 14:47:21.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.620" endtime="20201117 14:47:21.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:21.639" endtime="20201117 14:47:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.642" endtime="20201117 14:47:21.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.618" endtime="20201117 14:47:21.644"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.616" endtime="20201117 14:47:21.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.650" endtime="20201117 14:47:21.936"></status>
</kw>
<msg timestamp="20201117 14:47:21.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.649" endtime="20201117 14:47:21.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:21.941" endtime="20201117 14:47:21.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.949" endtime="20201117 14:47:21.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.646" endtime="20201117 14:47:21.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.645" endtime="20201117 14:47:21.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:21.955" level="INFO">${RESULT} = [{'time': 0.022117917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8402999999999354e-05, 'source_diff': 3.8402999999999354e-05}, {'time': 0.022161917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:21.952" endtime="20201117 14:47:21.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:21.969" level="INFO">${ACCURACY} = {'diff': [3.8402999999999354e-05, 3.805599999999812e-05, 3.854199999999905e-05, 3.87919999999993e-05, 3.8597000000001325e-05, 3.86659999999997e-05, 3.8818999999998965e-05, 3.8875000000000715e-05, 3.82...</msg>
<status status="PASS" starttime="20201117 14:47:21.956" endtime="20201117 14:47:21.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.973" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201117 14:47:21.972" endtime="20201117 14:47:21.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:21.976" level="INFO">VALUE: [3.8402999999999354e-05, 3.805599999999812e-05, 3.854199999999905e-05, 3.87919999999993e-05, 3.8597000000001325e-05, 3.86659999999997e-05, 3.8818999999998965e-05, 3.8875000000000715e-05, 3.825000000000009e-05, 3.891599999999995e-05, 3.900000000000084e-05, 3.8111000000000395e-05, 3.818000000000224e-05, 3.825000000000009e-05, 3.8860999999997675e-05, 3.842999999999902e-05, 3.873599999999755e-05, 3.8138999999999534e-05, 3.852799999999948e-05, 3.8861000000001145e-05, 3.822200000000095e-05, 3.883399999999801e-05, 3.8652999999999604e-05, 3.8681000000002214e-05, 3.904200000000302e-05, 3.8652999999999604e-05, 3.8195000000001283e-05, 3.8430999999998494e-05, 3.850000000000034e-05, 3.89859999999978e-05, 3.826400000000313e-05, 3.875000000000059e-05, 3.872200000000145e-05, 3.8347000000001075e-05, 3.8166999999998674e-05, 3.8652999999999604e-05, 3.854199999999905e-05, 3.8625000000000465e-05, 3.8124999999999964e-05, 3.8332999999998035e-05, 3.873600000000102e-05, 3.8180999999998244e-05, 3.876400000000016e-05, 3.8195000000001283e-05, 3.872200000000145e-05, 3.8166999999998674e-05, 3.806999999999769e-05, 3.8639000000000034e-05, 3.901400000000041e-05, 3.8833000000002005e-05]</msg>
<status status="PASS" starttime="20201117 14:47:21.974" endtime="20201117 14:47:21.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.970" endtime="20201117 14:47:21.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:21.979" endtime="20201117 14:47:21.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:21.983" endtime="20201117 14:47:22.002"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.981" endtime="20201117 14:47:22.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.978" endtime="20201117 14:47:22.003"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.614" endtime="20201117 14:47:22.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.612" endtime="20201117 14:47:22.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:21.612" endtime="20201117 14:47:22.004"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.006" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.014" endtime="20201117 14:47:22.031"></status>
</kw>
<msg timestamp="20201117 14:47:22.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.013" endtime="20201117 14:47:22.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.033" endtime="20201117 14:47:22.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.035" endtime="20201117 14:47:22.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.010" endtime="20201117 14:47:22.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.008" endtime="20201117 14:47:22.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.044" endtime="20201117 14:47:22.329"></status>
</kw>
<msg timestamp="20201117 14:47:22.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.042" endtime="20201117 14:47:22.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.333" endtime="20201117 14:47:22.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.341" endtime="20201117 14:47:22.343"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.040" endtime="20201117 14:47:22.344"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.038" endtime="20201117 14:47:22.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.348" level="INFO">${RESULT} = [{'time': 0.022713861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.997199999999923e-05, 'source_diff': 3.997199999999923e-05}, {'time': 0.022764861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.345" endtime="20201117 14:47:22.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.363" level="INFO">${ACCURACY} = {'diff': [3.997199999999923e-05, 3.9639000000001035e-05, 3.94859999999983e-05, 3.9318999999999465e-05, 3.994400000000009e-05, 4.004199999999708e-05, 3.973599999999855e-05, 3.905599999999912e-05, 4.000...</msg>
<status status="PASS" starttime="20201117 14:47:22.349" endtime="20201117 14:47:22.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.367" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.366" endtime="20201117 14:47:22.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.370" level="INFO">VALUE: [3.997199999999923e-05, 3.9639000000001035e-05, 3.94859999999983e-05, 3.9318999999999465e-05, 3.994400000000009e-05, 4.004199999999708e-05, 3.973599999999855e-05, 3.905599999999912e-05, 4.000000000000184e-05, 3.9972999999998704e-05, 3.9694999999999314e-05, 3.956999999999919e-05, 3.9430999999999494e-05, 3.9374999999997745e-05, 3.926400000000066e-05, 3.976400000000116e-05, 3.9597000000002325e-05, 3.97920000000003e-05, 3.994400000000009e-05, 3.9653000000000604e-05, 3.9139000000000534e-05, 3.977800000000073e-05, 3.9902999999997385e-05, 3.9304999999999896e-05, 3.9194999999998814e-05, 3.919399999999934e-05, 3.951400000000091e-05, 3.951400000000091e-05, 4.002800000000098e-05, 3.9167000000003144e-05, 3.973599999999855e-05, 3.954200000000005e-05, 3.9722999999998454e-05, 3.9416999999999924e-05, 3.9444999999999064e-05, 3.926400000000066e-05, 3.92919999999998e-05, 3.9875000000001715e-05, 3.920799999999891e-05, 3.9416999999999924e-05, 3.9333000000002505e-05, 3.943000000000002e-05, 3.997199999999923e-05, 3.950000000000134e-05, 3.9582999999999285e-05, 3.948600000000177e-05, 3.950000000000134e-05, 3.922200000000195e-05, 3.998600000000227e-05, 3.9110999999997925e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.368" endtime="20201117 14:47:22.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.364" endtime="20201117 14:47:22.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.373" endtime="20201117 14:47:22.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.377" endtime="20201117 14:47:22.396"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.375" endtime="20201117 14:47:22.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.372" endtime="20201117 14:47:22.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.007" endtime="20201117 14:47:22.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.005" endtime="20201117 14:47:22.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.004" endtime="20201117 14:47:22.398"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.400" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.408" endtime="20201117 14:47:22.424"></status>
</kw>
<msg timestamp="20201117 14:47:22.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.407" endtime="20201117 14:47:22.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.426" endtime="20201117 14:47:22.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.429" endtime="20201117 14:47:22.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.404" endtime="20201117 14:47:22.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.402" endtime="20201117 14:47:22.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.438" endtime="20201117 14:47:22.723"></status>
</kw>
<msg timestamp="20201117 14:47:22.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.437" endtime="20201117 14:47:22.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:22.727" endtime="20201117 14:47:22.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.736" endtime="20201117 14:47:22.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.434" endtime="20201117 14:47:22.738"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.432" endtime="20201117 14:47:22.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:22.742" level="INFO">${RESULT} = [{'time': 0.021660306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.011200000000187e-05, 'source_diff': 4.011200000000187e-05}, {'time': 0.021709292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:22.739" endtime="20201117 14:47:22.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:22.756" level="INFO">${ACCURACY} = {'diff': [4.011200000000187e-05, 4.008400000000273e-05, 4.0624999999998995e-05, 4.0472999999999204e-05, 4.0986999999999274e-05, 4.08059999999974e-05, 4.045800000000016e-05, 4.090199999999891e-05, 4.03...</msg>
<status status="PASS" starttime="20201117 14:47:22.744" endtime="20201117 14:47:22.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.761" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201117 14:47:22.760" endtime="20201117 14:47:22.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.763" level="INFO">VALUE: [4.011200000000187e-05, 4.008400000000273e-05, 4.0624999999998995e-05, 4.0472999999999204e-05, 4.0986999999999274e-05, 4.08059999999974e-05, 4.045800000000016e-05, 4.090199999999891e-05, 4.0347000000003075e-05, 4.09859999999998e-05, 4.04859999999993e-05, 4.0554999999997676e-05, 4.050000000000234e-05, 4.055600000000062e-05, 4.051399999999844e-05, 4.0610999999999425e-05, 4.070800000000041e-05, 4.09859999999998e-05, 4.077799999999826e-05, 4.0096999999999355e-05, 4.007000000000316e-05, 4.09859999999998e-05, 4.057000000000019e-05, 4.050000000000234e-05, 4.009799999999883e-05, 4.0888999999998815e-05, 4.0486999999998774e-05, 4.0472999999999204e-05, 4.051400000000191e-05, 4.1012999999999467e-05, 4.054199999999758e-05, 4.016599999999773e-05, 4.075000000000259e-05, 4.099999999999937e-05, 4.0791000000001826e-05, 4.047199999999973e-05, 4.0625000000002465e-05, 4.0653000000001605e-05, 4.0762999999999217e-05, 4.008399999999926e-05, 4.0874999999999245e-05, 4.0389000000001785e-05, 4.083400000000001e-05, 4.07920000000013e-05, 4.074999999999912e-05, 4.0138999999998065e-05, 4.054200000000105e-05, 4.005600000000012e-05, 4.06660000000017e-05, 4.0722999999999454e-05]</msg>
<status status="PASS" starttime="20201117 14:47:22.762" endtime="20201117 14:47:22.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.757" endtime="20201117 14:47:22.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.766" endtime="20201117 14:47:22.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:22.770" endtime="20201117 14:47:22.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.768" endtime="20201117 14:47:22.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.765" endtime="20201117 14:47:22.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.401" endtime="20201117 14:47:22.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.399" endtime="20201117 14:47:22.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.398" endtime="20201117 14:47:22.791"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.793" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.801" endtime="20201117 14:47:22.817"></status>
</kw>
<msg timestamp="20201117 14:47:22.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.800" endtime="20201117 14:47:22.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:22.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:22.819" endtime="20201117 14:47:22.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.821" endtime="20201117 14:47:22.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.797" endtime="20201117 14:47:22.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.795" endtime="20201117 14:47:22.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:22.830" endtime="20201117 14:47:23.116"></status>
</kw>
<msg timestamp="20201117 14:47:23.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02168575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:22.829" endtime="20201117 14:47:23.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02168575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:23.120" endtime="20201117 14:47:23.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.128" endtime="20201117 14:47:23.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.826" endtime="20201117 14:47:23.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.825" endtime="20201117 14:47:23.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.135" level="INFO">${RESULT} = [{'time': 0.02168575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1666999999998705e-05, 'source_diff': 4.1666999999998705e-05}, {'time': 0.021734764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201117 14:47:23.132" endtime="20201117 14:47:23.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.149" level="INFO">${ACCURACY} = {'diff': [4.1666999999998705e-05, 4.200000000000037e-05, 4.17920000000023e-05, 4.151399999999944e-05, 4.151399999999944e-05, 4.126399999999919e-05, 4.1459000000000634e-05, 4.105600000000112e-05, 4.104...</msg>
<status status="PASS" starttime="20201117 14:47:23.136" endtime="20201117 14:47:23.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.153" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.152" endtime="20201117 14:47:23.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.156" level="INFO">VALUE: [4.1666999999998705e-05, 4.200000000000037e-05, 4.17920000000023e-05, 4.151399999999944e-05, 4.151399999999944e-05, 4.126399999999919e-05, 4.1459000000000634e-05, 4.105600000000112e-05, 4.104200000000155e-05, 4.1262999999999717e-05, 4.1402999999998885e-05, 4.1417000000001924e-05, 4.152799999999901e-05, 4.194399999999862e-05, 4.143000000000202e-05, 4.1291000000002326e-05, 4.1290999999998856e-05, 4.147200000000073e-05, 4.1568999999998246e-05, 4.14860000000003e-05, 4.197199999999776e-05, 4.1402999999998885e-05, 4.1124999999999495e-05, 4.176399999999969e-05, 4.172200000000098e-05, 4.197199999999776e-05, 4.1624999999999995e-05, 4.158400000000076e-05, 4.1709000000000884e-05, 4.1790999999999356e-05, 4.1638999999999565e-05, 4.197200000000123e-05, 4.170799999999794e-05, 4.1791000000002826e-05, 4.124999999999962e-05, 4.2027000000000037e-05, 4.188800000000034e-05, 4.132000000000094e-05, 4.1110999999999925e-05, 4.201399999999994e-05, 4.197200000000123e-05, 4.1790999999999356e-05, 4.170800000000141e-05, 4.123600000000005e-05, 4.1902999999999385e-05, 4.173600000000055e-05, 4.1944999999998095e-05, 4.1445000000001064e-05, 4.19860000000008e-05, 4.175000000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.154" endtime="20201117 14:47:23.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.150" endtime="20201117 14:47:23.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.159" endtime="20201117 14:47:23.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.162" endtime="20201117 14:47:23.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.161" endtime="20201117 14:47:23.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.157" endtime="20201117 14:47:23.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.794" endtime="20201117 14:47:23.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.792" endtime="20201117 14:47:23.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:22.791" endtime="20201117 14:47:23.183"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.186" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.194" endtime="20201117 14:47:23.211"></status>
</kw>
<msg timestamp="20201117 14:47:23.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.192" endtime="20201117 14:47:23.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.212" endtime="20201117 14:47:23.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.215" endtime="20201117 14:47:23.216"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.190" endtime="20201117 14:47:23.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.188" endtime="20201117 14:47:23.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.224" endtime="20201117 14:47:23.510"></status>
</kw>
<msg timestamp="20201117 14:47:23.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.222" endtime="20201117 14:47:23.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.514" endtime="20201117 14:47:23.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.523" endtime="20201117 14:47:23.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.219" endtime="20201117 14:47:23.525"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.218" endtime="20201117 14:47:23.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.529" level="INFO">${RESULT} = [{'time': 0.021896514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2096999999997886e-05, 'source_diff': 4.2096999999997886e-05}, {'time': 0.0219475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:23.526" endtime="20201117 14:47:23.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.543" level="INFO">${ACCURACY} = {'diff': [4.2096999999997886e-05, 4.230600000000237e-05, 4.2568999999999246e-05, 4.279199999999983e-05, 4.29860000000018e-05, 4.223600000000105e-05, 4.2431000000002494e-05, 4.302800000000051e-05, 4.21...</msg>
<status status="PASS" starttime="20201117 14:47:23.530" endtime="20201117 14:47:23.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.547" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.546" endtime="20201117 14:47:23.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.550" level="INFO">VALUE: [4.2096999999997886e-05, 4.230600000000237e-05, 4.2568999999999246e-05, 4.279199999999983e-05, 4.29860000000018e-05, 4.223600000000105e-05, 4.2431000000002494e-05, 4.302800000000051e-05, 4.2166999999999205e-05, 4.2709000000001884e-05, 4.2209000000001384e-05, 4.250000000000087e-05, 4.254200000000305e-05, 4.2209000000001384e-05, 4.251400000000044e-05, 4.241599999999998e-05, 4.276299999999775e-05, 4.2319000000002466e-05, 4.256999999999872e-05, 4.298599999999833e-05, 4.269399999999937e-05, 4.2903000000000385e-05, 4.272199999999851e-05, 4.226400000000019e-05, 4.222200000000148e-05, 4.288799999999787e-05, 4.295800000000266e-05, 4.2180999999998775e-05, 4.2473000000001204e-05, 4.2180999999998775e-05, 4.2194999999998345e-05, 4.252800000000001e-05, 4.2209000000001384e-05, 4.2444999999998595e-05, 4.23059999999989e-05, 4.273600000000155e-05, 4.251300000000097e-05, 4.301400000000094e-05, 4.2097000000001356e-05, 4.277699999999732e-05, 4.225000000000062e-05, 4.274999999999765e-05, 4.2097000000001356e-05, 4.2305000000002896e-05, 4.2083000000001786e-05, 4.2818999999999496e-05, 4.205600000000212e-05, 4.225000000000062e-05, 4.220800000000191e-05, 4.275000000000112e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.548" endtime="20201117 14:47:23.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.544" endtime="20201117 14:47:23.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.553" endtime="20201117 14:47:23.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.556" endtime="20201117 14:47:23.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.555" endtime="20201117 14:47:23.576"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.551" endtime="20201117 14:47:23.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.186" endtime="20201117 14:47:23.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.184" endtime="20201117 14:47:23.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.184" endtime="20201117 14:47:23.577"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.580" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.588" endtime="20201117 14:47:23.604"></status>
</kw>
<msg timestamp="20201117 14:47:23.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.586" endtime="20201117 14:47:23.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.606" endtime="20201117 14:47:23.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.609" endtime="20201117 14:47:23.610"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.584" endtime="20201117 14:47:23.611"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.582" endtime="20201117 14:47:23.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.618" endtime="20201117 14:47:23.903"></status>
</kw>
<msg timestamp="20201117 14:47:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.616" endtime="20201117 14:47:23.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022392389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:23.907" endtime="20201117 14:47:23.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.915" endtime="20201117 14:47:23.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.614" endtime="20201117 14:47:23.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.612" endtime="20201117 14:47:23.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:23.922" level="INFO">${RESULT} = [{'time': 0.022435944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3555000000000677e-05, 'source_diff': 4.3555000000000677e-05}, {'time': 0.022488889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:23.919" endtime="20201117 14:47:23.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:23.937" level="INFO">${ACCURACY} = {'diff': [4.3555000000000677e-05, 4.376400000000169e-05, 4.402800000000151e-05, 4.390199999999844e-05, 4.3388999999997846e-05, 4.3375000000001745e-05, 4.3736999999998555e-05, 4.325000000000162e-05, 4....</msg>
<status status="PASS" starttime="20201117 14:47:23.923" endtime="20201117 14:47:23.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.941" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201117 14:47:23.940" endtime="20201117 14:47:23.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.944" level="INFO">VALUE: [4.3555000000000677e-05, 4.376400000000169e-05, 4.402800000000151e-05, 4.390199999999844e-05, 4.3388999999997846e-05, 4.3375000000001745e-05, 4.3736999999998555e-05, 4.325000000000162e-05, 4.3888999999998346e-05, 4.376299999999875e-05, 4.3305000000000426e-05, 4.3875000000002246e-05, 4.366599999999776e-05, 4.3139000000001065e-05, 4.370799999999994e-05, 4.393000000000105e-05, 4.3167000000000205e-05, 4.374999999999865e-05, 4.3666999999997236e-05, 4.3847000000003106e-05, 4.3153000000000635e-05, 4.347200000000273e-05, 4.3931000000000525e-05, 4.351400000000144e-05, 4.3972999999999235e-05, 4.3305000000000426e-05, 4.404200000000108e-05, 4.376400000000169e-05, 4.323600000000205e-05, 4.374999999999865e-05, 4.316600000000073e-05, 4.3639000000001565e-05, 4.3082999999999316e-05, 4.39999999999989e-05, 4.391600000000148e-05, 4.319399999999987e-05, 4.324999999999815e-05, 4.31800000000003e-05, 4.319400000000334e-05, 4.3318999999999996e-05, 4.3596999999999386e-05, 4.3888999999998346e-05, 4.322199999999901e-05, 4.3819000000000496e-05, 4.373600000000255e-05, 4.3958999999999665e-05, 4.3487000000001774e-05, 4.3902999999997916e-05, 4.394400000000062e-05, 4.326399999999772e-05]</msg>
<status status="PASS" starttime="20201117 14:47:23.942" endtime="20201117 14:47:23.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.938" endtime="20201117 14:47:23.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.947" endtime="20201117 14:47:23.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:23.950" endtime="20201117 14:47:23.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.949" endtime="20201117 14:47:23.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.945" endtime="20201117 14:47:23.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.580" endtime="20201117 14:47:23.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.578" endtime="20201117 14:47:23.971"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.578" endtime="20201117 14:47:23.972"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:23.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:23.987" endtime="20201117 14:47:24.005"></status>
</kw>
<msg timestamp="20201117 14:47:24.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:23.986" endtime="20201117 14:47:24.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.006" endtime="20201117 14:47:24.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.009" endtime="20201117 14:47:24.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.983" endtime="20201117 14:47:24.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.976" endtime="20201117 14:47:24.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.018" endtime="20201117 14:47:24.302"></status>
</kw>
<msg timestamp="20201117 14:47:24.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027791597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027836319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.016" endtime="20201117 14:47:24.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027791597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027836319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.306" endtime="20201117 14:47:24.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.315" endtime="20201117 14:47:24.316"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.014" endtime="20201117 14:47:24.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.012" endtime="20201117 14:47:24.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.321" level="INFO">${RESULT} = [{'time': 0.027836319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472200000000051e-05, 'source_diff': 4.472200000000051e-05}, {'time': 0.027891333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.318" endtime="20201117 14:47:24.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.335" level="INFO">${ACCURACY} = {'diff': [4.472200000000051e-05, 4.4847000000000636e-05, 4.429199999999786e-05, 4.445800000000069e-05, 4.4389000000002315e-05, 4.4583000000000816e-05, 4.444400000000112e-05, 4.498600000000033e-05, 4.5...</msg>
<status status="PASS" starttime="20201117 14:47:24.322" endtime="20201117 14:47:24.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.339" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.338" endtime="20201117 14:47:24.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.342" level="INFO">VALUE: [4.472200000000051e-05, 4.4847000000000636e-05, 4.429199999999786e-05, 4.445800000000069e-05, 4.4389000000002315e-05, 4.4583000000000816e-05, 4.444400000000112e-05, 4.498600000000033e-05, 4.502799999999904e-05, 4.457000000000072e-05, 4.424999999999915e-05, 4.44999999999994e-05, 4.480599999999793e-05, 4.4666999999998236e-05, 4.4445000000000595e-05, 4.433400000000004e-05, 4.4388999999998846e-05, 4.432000000000047e-05, 4.427800000000176e-05, 4.405499999999771e-05, 4.4819000000001497e-05, 4.452699999999907e-05, 4.4388999999998846e-05, 4.4874999999999776e-05, 4.4319000000000996e-05, 4.494400000000162e-05, 4.495800000000119e-05, 4.445800000000069e-05, 4.4445000000000595e-05, 4.419400000000087e-05, 4.4417000000001455e-05, 4.4930999999998056e-05, 4.4847000000000636e-05, 4.4624999999999526e-05, 4.4986999999999805e-05, 4.409800000000283e-05, 4.494399999999815e-05, 4.4681000000001275e-05, 4.429199999999786e-05, 4.411199999999893e-05, 4.479100000000236e-05, 4.4555000000001677e-05, 4.497200000000076e-05, 4.4639000000002566e-05, 4.476399999999922e-05, 4.4555000000001677e-05, 4.4681000000001275e-05, 4.4888999999999346e-05, 4.4360999999999706e-05, 4.4139000000002065e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.340" endtime="20201117 14:47:24.342"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.336" endtime="20201117 14:47:24.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.345" endtime="20201117 14:47:24.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.348" endtime="20201117 14:47:24.368"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.347" endtime="20201117 14:47:24.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.343" endtime="20201117 14:47:24.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.975" endtime="20201117 14:47:24.369"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.973" endtime="20201117 14:47:24.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:23.972" endtime="20201117 14:47:24.370"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.372" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.380" endtime="20201117 14:47:24.398"></status>
</kw>
<msg timestamp="20201117 14:47:24.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.379" endtime="20201117 14:47:24.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.399" endtime="20201117 14:47:24.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.402" endtime="20201117 14:47:24.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.376" endtime="20201117 14:47:24.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.374" endtime="20201117 14:47:24.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.411" endtime="20201117 14:47:24.697"></status>
</kw>
<msg timestamp="20201117 14:47:24.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.409" endtime="20201117 14:47:24.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.701" endtime="20201117 14:47:24.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.709" endtime="20201117 14:47:24.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.407" endtime="20201117 14:47:24.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.405" endtime="20201117 14:47:24.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:24.716" level="INFO">${RESULT} = [{'time': 0.021792694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.505500000000218e-05, 'source_diff': 4.505500000000218e-05}, {'time': 0.021850694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:24.712" endtime="20201117 14:47:24.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:24.729" level="INFO">${ACCURACY} = {'diff': [4.505500000000218e-05, 4.577700000000032e-05, 4.563800000000062e-05, 4.566599999999976e-05, 4.5625000000000526e-05, 4.53329999999981e-05, 4.605499999999971e-05, 4.5431000000002025e-05, 4.506...</msg>
<status status="PASS" starttime="20201117 14:47:24.717" endtime="20201117 14:47:24.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.734" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201117 14:47:24.733" endtime="20201117 14:47:24.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.736" level="INFO">VALUE: [4.505500000000218e-05, 4.577700000000032e-05, 4.563800000000062e-05, 4.566599999999976e-05, 4.5625000000000526e-05, 4.53329999999981e-05, 4.605499999999971e-05, 4.5431000000002025e-05, 4.506899999999828e-05, 4.586099999999774e-05, 4.504199999999861e-05, 4.525000000000015e-05, 4.5111000000000456e-05, 4.5861000000001206e-05, 4.5375000000000276e-05, 4.5861000000001206e-05, 4.5959000000001665e-05, 4.5333000000001566e-05, 4.576300000000075e-05, 4.5388999999999846e-05, 4.573600000000108e-05, 4.536099999999724e-05, 4.527699999999982e-05, 4.602800000000004e-05, 4.576400000000022e-05, 4.5569000000002247e-05, 4.55000000000004e-05, 4.552799999999954e-05, 4.597199999999829e-05, 4.588899999999688e-05, 4.526400000000319e-05, 4.588899999999688e-05, 4.5417000000002455e-05, 4.562499999999706e-05, 4.508400000000079e-05, 4.520799999999797e-05, 4.58190000000025e-05, 4.5194999999997876e-05, 4.5958999999998196e-05, 4.5138999999999596e-05, 4.5125000000000026e-05, 4.577700000000032e-05, 4.520800000000144e-05, 4.577799999999979e-05, 4.5889000000000346e-05, 4.5583000000001817e-05, 4.574999999999718e-05, 4.5597000000001386e-05, 4.597200000000176e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201117 14:47:24.735" endtime="20201117 14:47:24.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.730" endtime="20201117 14:47:24.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.740" endtime="20201117 14:47:24.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:24.743" endtime="20201117 14:47:24.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.741" endtime="20201117 14:47:24.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.738" endtime="20201117 14:47:24.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.373" endtime="20201117 14:47:24.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.371" endtime="20201117 14:47:24.764"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.370" endtime="20201117 14:47:24.764"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.767" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.775" endtime="20201117 14:47:24.791"></status>
</kw>
<msg timestamp="20201117 14:47:24.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.773" endtime="20201117 14:47:24.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:24.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:24.792" endtime="20201117 14:47:24.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.795" endtime="20201117 14:47:24.796"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.771" endtime="20201117 14:47:24.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.768" endtime="20201117 14:47:24.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:24.804" endtime="20201117 14:47:25.089"></status>
</kw>
<msg timestamp="20201117 14:47:25.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:24.802" endtime="20201117 14:47:25.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021953944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.093" endtime="20201117 14:47:25.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.101" endtime="20201117 14:47:25.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.799" endtime="20201117 14:47:25.103"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.798" endtime="20201117 14:47:25.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.108" level="INFO">${RESULT} = [{'time': 0.021953944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679100000000089e-05, 'source_diff': 4.679100000000089e-05}, {'time': 0.022012944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:25.104" endtime="20201117 14:47:25.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.121" level="INFO">${ACCURACY} = {'diff': [4.679100000000089e-05, 4.695799999999972e-05, 4.704099999999767e-05, 4.695799999999972e-05, 4.637499999999781e-05, 4.695799999999972e-05, 4.61939999999994e-05, 4.626400000000072e-05, 4.68329...</msg>
<status status="PASS" starttime="20201117 14:47:25.109" endtime="20201117 14:47:25.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.126" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.125" endtime="20201117 14:47:25.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.129" level="INFO">VALUE: [4.679100000000089e-05, 4.695799999999972e-05, 4.704099999999767e-05, 4.695799999999972e-05, 4.637499999999781e-05, 4.695799999999972e-05, 4.61939999999994e-05, 4.626400000000072e-05, 4.68329999999996e-05, 4.651400000000097e-05, 4.6389000000000846e-05, 4.626400000000072e-05, 4.638899999999738e-05, 4.6667000000000236e-05, 4.6708999999998946e-05, 4.704200000000061e-05, 4.630599999999943e-05, 4.663800000000162e-05, 4.698600000000233e-05, 4.668000000000033e-05, 4.620799999999897e-05, 4.608299999999885e-05, 4.679100000000089e-05, 4.61529999999967e-05, 4.61939999999994e-05, 4.629100000000039e-05, 4.673599999999861e-05, 4.670799999999947e-05, 4.6875000000001776e-05, 4.622199999999854e-05, 4.655599999999968e-05, 4.677800000000079e-05, 4.691699999999702e-05, 4.6097000000001886e-05, 4.623599999999811e-05, 4.705499999999724e-05, 4.6389000000000846e-05, 4.640299999999695e-05, 4.680499999999699e-05, 4.615199999999722e-05, 4.627700000000082e-05, 4.636099999999824e-05, 4.687499999999831e-05, 4.681900000000003e-05, 4.649999999999793e-05, 4.6889000000001346e-05, 4.61939999999994e-05, 4.654200000000011e-05, 4.63329999999991e-05, 4.6111000000001456e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.127" endtime="20201117 14:47:25.129"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.122" endtime="20201117 14:47:25.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.132" endtime="20201117 14:47:25.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.135" endtime="20201117 14:47:25.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.134" endtime="20201117 14:47:25.155"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.130" endtime="20201117 14:47:25.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.767" endtime="20201117 14:47:25.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.765" endtime="20201117 14:47:25.156"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:24.765" endtime="20201117 14:47:25.156"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.167" endtime="20201117 14:47:25.184"></status>
</kw>
<msg timestamp="20201117 14:47:25.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.165" endtime="20201117 14:47:25.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.186" endtime="20201117 14:47:25.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.188" endtime="20201117 14:47:25.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.163" endtime="20201117 14:47:25.190"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.161" endtime="20201117 14:47:25.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.197" endtime="20201117 14:47:25.483"></status>
</kw>
<msg timestamp="20201117 14:47:25.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.196" endtime="20201117 14:47:25.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023139931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.487" endtime="20201117 14:47:25.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.495" endtime="20201117 14:47:25.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.193" endtime="20201117 14:47:25.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.191" endtime="20201117 14:47:25.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.502" level="INFO">${RESULT} = [{'time': 0.023139931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7472999999999266e-05, 'source_diff': 4.7472999999999266e-05}, {'time': 0.023193958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:25.498" endtime="20201117 14:47:25.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.517" level="INFO">${ACCURACY} = {'diff': [4.7472999999999266e-05, 4.747199999999979e-05, 4.731900000000053e-05, 4.752799999999807e-05, 4.781900000000103e-05, 4.802799999999857e-05, 4.777799999999832e-05, 4.794400000000115e-05, 4.740...</msg>
<status status="PASS" starttime="20201117 14:47:25.503" endtime="20201117 14:47:25.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.521" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.520" endtime="20201117 14:47:25.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.524" level="INFO">VALUE: [4.7472999999999266e-05, 4.747199999999979e-05, 4.731900000000053e-05, 4.752799999999807e-05, 4.781900000000103e-05, 4.802799999999857e-05, 4.777799999999832e-05, 4.794400000000115e-05, 4.740299999999795e-05, 4.780599999999746e-05, 4.772200000000004e-05, 4.761099999999949e-05, 4.797200000000029e-05, 4.8013999999999e-05, 4.774999999999918e-05, 4.75000000000024e-05, 4.740299999999795e-05, 4.779200000000136e-05, 4.7445000000000126e-05, 4.76940000000009e-05, 4.730600000000043e-05, 4.75139999999985e-05, 4.7389000000001846e-05, 4.711099999999899e-05, 4.802799999999857e-05, 4.7653000000001666e-05, 4.723599999999911e-05, 4.801400000000247e-05, 4.732e-05, 4.801400000000247e-05, 4.772200000000004e-05, 4.76529999999982e-05, 4.773599999999961e-05, 4.78200000000005e-05, 4.730600000000043e-05, 4.7445000000000126e-05, 4.708399999999932e-05, 4.799999999999943e-05, 4.802800000000204e-05, 4.745800000000022e-05, 4.752700000000207e-05, 4.7931000000001056e-05, 4.802799999999857e-05, 4.748599999999936e-05, 4.756900000000078e-05, 4.744400000000065e-05, 4.7972999999999766e-05, 4.720799999999997e-05, 4.805599999999771e-05, 4.770800000000047e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.522" endtime="20201117 14:47:25.524"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.518" endtime="20201117 14:47:25.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.527" endtime="20201117 14:47:25.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.530" endtime="20201117 14:47:25.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.529" endtime="20201117 14:47:25.550"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.525" endtime="20201117 14:47:25.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.159" endtime="20201117 14:47:25.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.157" endtime="20201117 14:47:25.551"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.157" endtime="20201117 14:47:25.552"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.554" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.562" endtime="20201117 14:47:25.578"></status>
</kw>
<msg timestamp="20201117 14:47:25.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.560" endtime="20201117 14:47:25.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.579" endtime="20201117 14:47:25.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.582" endtime="20201117 14:47:25.583"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.558" endtime="20201117 14:47:25.584"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.556" endtime="20201117 14:47:25.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.591" endtime="20201117 14:47:25.876"></status>
</kw>
<msg timestamp="20201117 14:47:25.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.589" endtime="20201117 14:47:25.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.880" endtime="20201117 14:47:25.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.889" endtime="20201117 14:47:25.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.587" endtime="20201117 14:47:25.891"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.585" endtime="20201117 14:47:25.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:25.895" level="INFO">${RESULT} = [{'time': 0.021698944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.848600000000036e-05, 'source_diff': 4.848600000000036e-05}, {'time': 0.021755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:25.892" endtime="20201117 14:47:25.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:25.909" level="INFO">${ACCURACY} = {'diff': [4.848600000000036e-05, 4.83330000000011e-05, 4.861100000000049e-05, 4.823600000000011e-05, 4.876399999999975e-05, 4.877799999999932e-05, 4.851400000000297e-05, 4.8417000000001986e-05, 4.8277...</msg>
<status status="PASS" starttime="20201117 14:47:25.896" endtime="20201117 14:47:25.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.913" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201117 14:47:25.912" endtime="20201117 14:47:25.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.916" level="INFO">VALUE: [4.848600000000036e-05, 4.83330000000011e-05, 4.861100000000049e-05, 4.823600000000011e-05, 4.876399999999975e-05, 4.877799999999932e-05, 4.851400000000297e-05, 4.8417000000001986e-05, 4.827799999999882e-05, 4.819399999999793e-05, 4.8417000000001986e-05, 4.823600000000011e-05, 4.811099999999999e-05, 4.8473000000000266e-05, 4.866699999999877e-05, 4.8403000000002416e-05, 4.809799999999989e-05, 4.8473000000000266e-05, 4.834700000000067e-05, 4.806900000000128e-05, 4.824999999999968e-05, 4.831900000000153e-05, 4.829099999999892e-05, 4.876399999999975e-05, 4.83330000000011e-05, 4.818000000000183e-05, 4.88469999999977e-05, 4.870800000000147e-05, 4.898600000000086e-05, 4.898600000000086e-05, 4.849999999999993e-05, 4.900000000000043e-05, 4.811099999999999e-05, 4.841699999999852e-05, 4.875000000000018e-05, 4.824999999999968e-05, 4.830499999999849e-05, 4.867999999999886e-05, 4.81940000000014e-05, 4.826399999999925e-05, 4.879099999999942e-05, 4.848600000000036e-05, 4.900000000000043e-05, 4.902799999999957e-05, 4.838899999999938e-05, 4.905599999999871e-05, 4.859699999999745e-05, 4.805600000000118e-05, 4.838899999999938e-05, 4.830599999999796e-05]</msg>
<status status="PASS" starttime="20201117 14:47:25.915" endtime="20201117 14:47:25.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.910" endtime="20201117 14:47:25.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.919" endtime="20201117 14:47:25.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:25.922" endtime="20201117 14:47:25.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.921" endtime="20201117 14:47:25.942"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.917" endtime="20201117 14:47:25.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.555" endtime="20201117 14:47:25.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.553" endtime="20201117 14:47:25.943"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.552" endtime="20201117 14:47:25.943"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.954" endtime="20201117 14:47:25.971"></status>
</kw>
<msg timestamp="20201117 14:47:25.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.952" endtime="20201117 14:47:25.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:25.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:25.973" endtime="20201117 14:47:25.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.975" endtime="20201117 14:47:25.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.950" endtime="20201117 14:47:25.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.948" endtime="20201117 14:47:25.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:25.985" endtime="20201117 14:47:26.269"></status>
</kw>
<msg timestamp="20201117 14:47:26.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:25.982" endtime="20201117 14:47:26.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.274" endtime="20201117 14:47:26.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.282" endtime="20201117 14:47:26.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.980" endtime="20201117 14:47:26.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.978" endtime="20201117 14:47:26.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.289" level="INFO">${RESULT} = [{'time': 0.022650597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.91940000000024e-05, 'source_diff': 4.91940000000024e-05}, {'time': 0.022707639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:26.285" endtime="20201117 14:47:26.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.302" level="INFO">${ACCURACY} = {'diff': [4.91940000000024e-05, 5.005600000000318e-05, 4.976400000000075e-05, 4.943099999999909e-05, 4.908299999999838e-05, 4.916699999999927e-05, 4.979199999999989e-05, 4.959799999999792e-05, 4.93750...</msg>
<status status="PASS" starttime="20201117 14:47:26.289" endtime="20201117 14:47:26.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.307" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.306" endtime="20201117 14:47:26.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.309" level="INFO">VALUE: [4.91940000000024e-05, 5.005600000000318e-05, 4.976400000000075e-05, 4.943099999999909e-05, 4.908299999999838e-05, 4.916699999999927e-05, 4.979199999999989e-05, 4.959799999999792e-05, 4.937500000000081e-05, 4.98339999999986e-05, 5.0014000000001e-05, 4.9737000000001086e-05, 4.984800000000164e-05, 4.9487000000000836e-05, 4.976300000000128e-05, 4.947200000000179e-05, 4.995799999999925e-05, 4.973600000000161e-05, 4.973600000000161e-05, 5.00409999999972e-05, 4.96530000000002e-05, 4.975000000000118e-05, 4.936100000000124e-05, 4.96530000000002e-05, 4.95140000000005e-05, 4.956999999999878e-05, 4.972200000000204e-05, 4.91529999999997e-05, 4.944499999999866e-05, 4.9473000000001266e-05, 4.919399999999893e-05, 4.926400000000025e-05, 4.976400000000075e-05, 4.944399999999918e-05, 4.993000000000011e-05, 4.929099999999992e-05, 4.923600000000111e-05, 4.973599999999814e-05, 4.944400000000265e-05, 4.91529999999997e-05, 4.999999999999796e-05, 4.948599999999789e-05, 4.990299999999698e-05, 4.962500000000106e-05, 4.940299999999995e-05, 4.906999999999828e-05, 4.9320000000002e-05, 4.926400000000025e-05, 4.908399999999785e-05, 5.001299999999806e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.308" endtime="20201117 14:47:26.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.303" endtime="20201117 14:47:26.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.312" endtime="20201117 14:47:26.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.316" endtime="20201117 14:47:26.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.314" endtime="20201117 14:47:26.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.310" endtime="20201117 14:47:26.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.946" endtime="20201117 14:47:26.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.945" endtime="20201117 14:47:26.337"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:25.944" endtime="20201117 14:47:26.337"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.347" endtime="20201117 14:47:26.364"></status>
</kw>
<msg timestamp="20201117 14:47:26.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.346" endtime="20201117 14:47:26.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.366" endtime="20201117 14:47:26.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.368" endtime="20201117 14:47:26.370"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.343" endtime="20201117 14:47:26.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.341" endtime="20201117 14:47:26.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.377" endtime="20201117 14:47:26.664"></status>
</kw>
<msg timestamp="20201117 14:47:26.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02167275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:26.376" endtime="20201117 14:47:26.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02167275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:26.669" endtime="20201117 14:47:26.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.677" endtime="20201117 14:47:26.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.373" endtime="20201117 14:47:26.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.372" endtime="20201117 14:47:26.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:26.683" level="INFO">${RESULT} = [{'time': 0.02167275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0708e-05, 'source_diff': 5.0708e-05}, {'time': 0.02173175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.100000000000243e-05...</msg>
<status status="PASS" starttime="20201117 14:47:26.680" endtime="20201117 14:47:26.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:26.697" level="INFO">${ACCURACY} = {'diff': [5.0708e-05, 5.100000000000243e-05, 5.056900000000031e-05, 5.090299999999798e-05, 5.079200000000089e-05, 5.027800000000082e-05, 5.09729999999993e-05, 5.01530000000007e-05, 5.05140000000015e-0...</msg>
<status status="PASS" starttime="20201117 14:47:26.684" endtime="20201117 14:47:26.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.701" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201117 14:47:26.700" endtime="20201117 14:47:26.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.704" level="INFO">VALUE: [5.0708e-05, 5.100000000000243e-05, 5.056900000000031e-05, 5.090299999999798e-05, 5.079200000000089e-05, 5.027800000000082e-05, 5.09729999999993e-05, 5.01530000000007e-05, 5.05140000000015e-05, 5.038899999999791e-05, 5.031900000000006e-05, 5.0679999999997394e-05, 5.05279999999976e-05, 5.069400000000043e-05, 5.005500000000024e-05, 5.041600000000104e-05, 5.0708e-05, 5.101399999999853e-05, 5.023599999999864e-05, 5.08469999999997e-05, 5.045899999999923e-05, 5.073599999999914e-05, 5.066700000000077e-05, 5.088899999999841e-05, 5.037500000000181e-05, 5.027800000000082e-05, 5.063900000000163e-05, 5.009700000000242e-05, 5.023599999999864e-05, 5.088900000000188e-05, 5.0652000000001723e-05, 5.026400000000125e-05, 5.0415999999997574e-05, 5.048599999999889e-05, 5.056900000000031e-05, 5.037499999999834e-05, 5.08469999999997e-05, 5.012499999999809e-05, 5.008299999999938e-05, 5.094500000000016e-05, 5.013899999999766e-05, 5.030599999999996e-05, 5.047199999999932e-05, 5.084800000000264e-05, 5.076400000000175e-05, 5.101399999999853e-05, 5.03339999999991e-05, 5.094400000000068e-05, 5.097199999999982e-05, 5.05270000000016e-05]</msg>
<status status="PASS" starttime="20201117 14:47:26.703" endtime="20201117 14:47:26.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.698" endtime="20201117 14:47:26.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.707" endtime="20201117 14:47:26.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:26.710" endtime="20201117 14:47:26.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.709" endtime="20201117 14:47:26.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.705" endtime="20201117 14:47:26.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.340" endtime="20201117 14:47:26.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.338" endtime="20201117 14:47:26.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.337" endtime="20201117 14:47:26.732"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.735" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.743" endtime="20201117 14:47:26.761"></status>
</kw>
<msg timestamp="20201117 14:47:26.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.742" endtime="20201117 14:47:26.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:26.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:26.763" endtime="20201117 14:47:26.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.766" endtime="20201117 14:47:26.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.739" endtime="20201117 14:47:26.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.737" endtime="20201117 14:47:26.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:26.774" endtime="20201117 14:47:27.060"></status>
</kw>
<msg timestamp="20201117 14:47:27.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024780167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024832167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:26.773" endtime="20201117 14:47:27.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024780167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024832167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.064" endtime="20201117 14:47:27.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.072" endtime="20201117 14:47:27.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.770" endtime="20201117 14:47:27.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.769" endtime="20201117 14:47:27.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.079" level="INFO">${RESULT} = [{'time': 0.024832167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.199999999999996e-05, 'source_diff': 5.199999999999996e-05}, {'time': 0.024893181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.075" endtime="20201117 14:47:27.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.093" level="INFO">${ACCURACY} = {'diff': [5.199999999999996e-05, 5.141700000000152e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.145800000000075e-05, 5.197200000000082e-05, 5.1665999999998824e-05, 5.197200000000082e-05, 5.199...</msg>
<status status="PASS" starttime="20201117 14:47:27.080" endtime="20201117 14:47:27.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.098" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.097" endtime="20201117 14:47:27.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.100" level="INFO">VALUE: [5.199999999999996e-05, 5.141700000000152e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.145800000000075e-05, 5.197200000000082e-05, 5.1665999999998824e-05, 5.197200000000082e-05, 5.199999999999996e-05, 5.147200000000032e-05, 5.190300000000245e-05, 5.177800000000232e-05, 5.174999999999971e-05, 5.157000000000078e-05, 5.10279999999981e-05, 5.126399999999878e-05, 5.176399999999928e-05, 5.112500000000256e-05, 5.19730000000003e-05, 5.18340000000006e-05, 5.122299999999955e-05, 5.195800000000125e-05, 5.13470000000002e-05, 5.130500000000149e-05, 5.1401999999999004e-05, 5.108300000000038e-05, 5.122200000000007e-05, 5.1957999999997784e-05, 5.193000000000211e-05, 5.124999999999921e-05, 5.18340000000006e-05, 5.195900000000073e-05, 5.105600000000071e-05, 5.161100000000002e-05, 5.141700000000152e-05, 5.138899999999891e-05, 5.186199999999974e-05, 5.149999999999946e-05, 5.1152000000002223e-05, 5.198600000000039e-05, 5.12080000000005e-05, 5.148599999999989e-05, 5.138899999999891e-05, 5.173600000000014e-05, 5.177799999999885e-05, 5.13470000000002e-05, 5.155500000000174e-05, 5.1971999999997354e-05, 5.190299999999898e-05, 5.148599999999989e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.099" endtime="20201117 14:47:27.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.094" endtime="20201117 14:47:27.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.103" endtime="20201117 14:47:27.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.107" endtime="20201117 14:47:27.126"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.105" endtime="20201117 14:47:27.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.102" endtime="20201117 14:47:27.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.735" endtime="20201117 14:47:27.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.734" endtime="20201117 14:47:27.128"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:26.733" endtime="20201117 14:47:27.128"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.131" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.139" endtime="20201117 14:47:27.155"></status>
</kw>
<msg timestamp="20201117 14:47:27.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.137" endtime="20201117 14:47:27.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.157" endtime="20201117 14:47:27.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.159" endtime="20201117 14:47:27.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.135" endtime="20201117 14:47:27.161"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.133" endtime="20201117 14:47:27.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.168" endtime="20201117 14:47:27.454"></status>
</kw>
<msg timestamp="20201117 14:47:27.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.167" endtime="20201117 14:47:27.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.458" endtime="20201117 14:47:27.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.466" endtime="20201117 14:47:27.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.164" endtime="20201117 14:47:27.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.162" endtime="20201117 14:47:27.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.473" level="INFO">${RESULT} = [{'time': 0.022246458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.301400000000053e-05, 'source_diff': 5.301400000000053e-05}, {'time': 0.022310458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:27.469" endtime="20201117 14:47:27.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.486" level="INFO">${ACCURACY} = {'diff': [5.301400000000053e-05, 5.2207999999998034e-05, 5.219400000000193e-05, 5.234699999999773e-05, 5.206900000000181e-05, 5.219400000000193e-05, 5.276400000000028e-05, 5.223600000000064e-05, 5.283...</msg>
<status status="PASS" starttime="20201117 14:47:27.474" endtime="20201117 14:47:27.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.491" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.490" endtime="20201117 14:47:27.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.493" level="INFO">VALUE: [5.301400000000053e-05, 5.2207999999998034e-05, 5.219400000000193e-05, 5.234699999999773e-05, 5.206900000000181e-05, 5.219400000000193e-05, 5.276400000000028e-05, 5.223600000000064e-05, 5.283299999999866e-05, 5.233299999999816e-05, 5.272200000000157e-05, 5.288900000000041e-05, 5.225000000000021e-05, 5.2457999999998284e-05, 5.291699999999955e-05, 5.25279999999996e-05, 5.2707999999998534e-05, 5.28479999999977e-05, 5.29730000000013e-05, 5.262500000000059e-05, 5.227699999999988e-05, 5.302700000000063e-05, 5.2665999999999824e-05, 5.290299999999998e-05, 5.262500000000059e-05, 5.2430000000002613e-05, 5.22080000000015e-05, 5.244500000000166e-05, 5.2957999999998784e-05, 5.2707999999998534e-05, 5.279199999999942e-05, 5.275000000000071e-05, 5.2971999999998354e-05, 5.258399999999788e-05, 5.208400000000085e-05, 5.234800000000067e-05, 5.266700000000277e-05, 5.300000000000096e-05, 5.2902000000000504e-05, 5.208300000000138e-05, 5.250000000000046e-05, 5.255499999999927e-05, 5.252800000000307e-05, 5.243100000000209e-05, 5.2693999999998964e-05, 5.211100000000052e-05, 5.213899999999966e-05, 5.2443999999998714e-05, 5.263900000000016e-05, 5.295899999999826e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.492" endtime="20201117 14:47:27.494"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.487" endtime="20201117 14:47:27.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.497" endtime="20201117 14:47:27.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.501" endtime="20201117 14:47:27.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.499" endtime="20201117 14:47:27.521"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.495" endtime="20201117 14:47:27.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.131" endtime="20201117 14:47:27.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.130" endtime="20201117 14:47:27.522"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.129" endtime="20201117 14:47:27.522"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.525" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.533" endtime="20201117 14:47:27.551"></status>
</kw>
<msg timestamp="20201117 14:47:27.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.531" endtime="20201117 14:47:27.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.552" endtime="20201117 14:47:27.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.555" endtime="20201117 14:47:27.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.529" endtime="20201117 14:47:27.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.527" endtime="20201117 14:47:27.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.564" endtime="20201117 14:47:27.849"></status>
</kw>
<msg timestamp="20201117 14:47:27.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.562" endtime="20201117 14:47:27.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:27.853" endtime="20201117 14:47:27.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.862" endtime="20201117 14:47:27.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.560" endtime="20201117 14:47:27.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.558" endtime="20201117 14:47:27.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:27.868" level="INFO">${RESULT} = [{'time': 0.022166139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.35280000000006e-05, 'source_diff': 5.35280000000006e-05}, {'time': 0.022230167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:27.865" endtime="20201117 14:47:27.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:27.882" level="INFO">${ACCURACY} = {'diff': [5.35280000000006e-05, 5.347299999999833e-05, 5.387499999999837e-05, 5.359799999999845e-05, 5.319500000000241e-05, 5.338899999999744e-05, 5.383299999999966e-05, 5.359699999999898e-05, 5.37079...</msg>
<status status="PASS" starttime="20201117 14:47:27.869" endtime="20201117 14:47:27.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.886" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201117 14:47:27.885" endtime="20201117 14:47:27.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.889" level="INFO">VALUE: [5.35280000000006e-05, 5.347299999999833e-05, 5.387499999999837e-05, 5.359799999999845e-05, 5.319500000000241e-05, 5.338899999999744e-05, 5.383299999999966e-05, 5.359699999999898e-05, 5.3707999999999534e-05, 5.3930000000000644e-05, 5.3680000000000394e-05, 5.3457999999999284e-05, 5.3944000000000214e-05, 5.354200000000017e-05, 5.355599999999974e-05, 5.366699999999683e-05, 5.356999999999931e-05, 5.309700000000195e-05, 5.332000000000253e-05, 5.388899999999794e-05, 5.369499999999944e-05, 5.373600000000214e-05, 5.3235999999998174e-05, 5.315300000000023e-05, 5.331899999999959e-05, 5.3957999999999784e-05, 5.311099999999805e-05, 5.3930000000000644e-05, 5.3166000000000324e-05, 5.3721999999999104e-05, 5.305499999999977e-05, 5.361099999999855e-05, 5.327800000000035e-05, 5.3235999999998174e-05, 5.323600000000164e-05, 5.341700000000005e-05, 5.381900000000009e-05, 5.329199999999992e-05, 5.340299999999701e-05, 5.327800000000035e-05, 5.386100000000227e-05, 5.348600000000189e-05, 5.3887999999998465e-05, 5.3971999999999354e-05, 5.388900000000141e-05, 5.336100000000177e-05, 5.3513999999997564e-05, 5.359699999999898e-05, 5.3957999999999784e-05, 5.31669999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:27.887" endtime="20201117 14:47:27.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.883" endtime="20201117 14:47:27.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.892" endtime="20201117 14:47:27.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:27.896" endtime="20201117 14:47:27.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.894" endtime="20201117 14:47:27.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.891" endtime="20201117 14:47:27.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.525" endtime="20201117 14:47:27.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.524" endtime="20201117 14:47:27.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.523" endtime="20201117 14:47:27.917"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.919" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.927" endtime="20201117 14:47:27.945"></status>
</kw>
<msg timestamp="20201117 14:47:27.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.926" endtime="20201117 14:47:27.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:27.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:27.946" endtime="20201117 14:47:27.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.949" endtime="20201117 14:47:27.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.923" endtime="20201117 14:47:27.951"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.921" endtime="20201117 14:47:27.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:27.958" endtime="20201117 14:47:28.244"></status>
</kw>
<msg timestamp="20201117 14:47:28.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:27.956" endtime="20201117 14:47:28.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:28.248" endtime="20201117 14:47:28.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.256" endtime="20201117 14:47:28.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.954" endtime="20201117 14:47:28.258"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.952" endtime="20201117 14:47:28.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.263" level="INFO">${RESULT} = [{'time': 0.021790097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.459699999999998e-05, 'source_diff': 5.459699999999998e-05}, {'time': 0.021857097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.259" endtime="20201117 14:47:28.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.277" level="INFO">${ACCURACY} = {'diff': [5.459699999999998e-05, 5.4415999999998105e-05, 5.412499999999862e-05, 5.425000000000221e-05, 5.4791999999997953e-05, 5.412500000000209e-05, 5.459699999999998e-05, 5.416699999999733e-05, 5.45...</msg>
<status status="PASS" starttime="20201117 14:47:28.264" endtime="20201117 14:47:28.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.281" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.280" endtime="20201117 14:47:28.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.284" level="INFO">VALUE: [5.459699999999998e-05, 5.4415999999998105e-05, 5.412499999999862e-05, 5.425000000000221e-05, 5.4791999999997953e-05, 5.412500000000209e-05, 5.459699999999998e-05, 5.416699999999733e-05, 5.450000000000246e-05, 5.445899999999976e-05, 5.469500000000044e-05, 5.4235999999999174e-05, 5.419499999999994e-05, 5.4749999999999244e-05, 5.438900000000191e-05, 5.4679999999997925e-05, 5.434699999999973e-05, 5.484700000000023e-05, 5.5027999999998634e-05, 5.406899999999687e-05, 5.409699999999948e-05, 5.4180000000000894e-05, 5.465300000000173e-05, 5.461099999999955e-05, 5.480600000000099e-05, 5.4485999999999424e-05, 5.462499999999912e-05, 5.4943999999997745e-05, 5.481999999999709e-05, 5.4694000000000964e-05, 5.504200000000167e-05, 5.48609999999998e-05, 5.4958000000000784e-05, 5.455500000000127e-05, 5.488899999999894e-05, 5.4957999999997315e-05, 5.4999999999999494e-05, 5.470900000000001e-05, 5.461099999999955e-05, 5.41670000000008e-05, 5.4471999999999854e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.494499999999722e-05, 5.429200000000092e-05, 5.426400000000178e-05, 5.426299999999884e-05, 5.4943999999997745e-05, 5.4499999999998994e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.282" endtime="20201117 14:47:28.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.277" endtime="20201117 14:47:28.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.287" endtime="20201117 14:47:28.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.290" endtime="20201117 14:47:28.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.289" endtime="20201117 14:47:28.310"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.285" endtime="20201117 14:47:28.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.920" endtime="20201117 14:47:28.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.918" endtime="20201117 14:47:28.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:27.917" endtime="20201117 14:47:28.311"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.314" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.322" endtime="20201117 14:47:28.339"></status>
</kw>
<msg timestamp="20201117 14:47:28.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.320" endtime="20201117 14:47:28.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.341" endtime="20201117 14:47:28.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.343" endtime="20201117 14:47:28.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.318" endtime="20201117 14:47:28.345"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.316" endtime="20201117 14:47:28.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.352" endtime="20201117 14:47:28.638"></status>
</kw>
<msg timestamp="20201117 14:47:28.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.350" endtime="20201117 14:47:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022535667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022590986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.642" endtime="20201117 14:47:28.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.651" endtime="20201117 14:47:28.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.348" endtime="20201117 14:47:28.653"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.346" endtime="20201117 14:47:28.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:28.657" level="INFO">${RESULT} = [{'time': 0.022590986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.531900000000159e-05, 'source_diff': 5.531900000000159e-05}, {'time': 0.022658958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:28.654" endtime="20201117 14:47:28.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:28.672" level="INFO">${ACCURACY} = {'diff': [5.531900000000159e-05, 5.5194000000001464e-05, 5.583300000000166e-05, 5.5472000000000854e-05, 5.5763999999999814e-05, 5.558299999999794e-05, 5.531900000000159e-05, 5.594499999999822e-05, 5.5...</msg>
<status status="PASS" starttime="20201117 14:47:28.658" endtime="20201117 14:47:28.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.677" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201117 14:47:28.676" endtime="20201117 14:47:28.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.679" level="INFO">VALUE: [5.531900000000159e-05, 5.5194000000001464e-05, 5.583300000000166e-05, 5.5472000000000854e-05, 5.5763999999999814e-05, 5.558299999999794e-05, 5.531900000000159e-05, 5.594499999999822e-05, 5.5236000000000174e-05, 5.513899999999919e-05, 5.519500000000094e-05, 5.530499999999855e-05, 5.545900000000076e-05, 5.519500000000094e-05, 5.501299999999959e-05, 5.577800000000285e-05, 5.5708000000001534e-05, 5.6041999999999204e-05, 5.579099999999948e-05, 5.5194000000001464e-05, 5.588899999999994e-05, 5.5236000000000174e-05, 5.5291999999998453e-05, 5.509700000000048e-05, 5.519500000000094e-05, 5.5486000000000424e-05, 5.6000000000000494e-05, 5.515300000000223e-05, 5.513899999999919e-05, 5.573700000000015e-05, 5.602700000000016e-05, 5.5750000000000244e-05, 5.602700000000016e-05, 5.5736000000000674e-05, 5.5457999999997815e-05, 5.588899999999994e-05, 5.583300000000166e-05, 5.590299999999951e-05, 5.588899999999994e-05, 5.568100000000187e-05, 5.5972000000001354e-05, 5.5972000000001354e-05, 5.513900000000266e-05, 5.51809999999979e-05, 5.5944000000002214e-05, 5.538899999999944e-05, 5.5541999999998704e-05, 5.5401999999999535e-05, 5.60549999999993e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:47:28.678" endtime="20201117 14:47:28.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.673" endtime="20201117 14:47:28.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.682" endtime="20201117 14:47:28.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:28.686" endtime="20201117 14:47:28.705"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.684" endtime="20201117 14:47:28.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.680" endtime="20201117 14:47:28.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.314" endtime="20201117 14:47:28.706"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.312" endtime="20201117 14:47:28.707"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.312" endtime="20201117 14:47:28.707"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.709" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.717" endtime="20201117 14:47:28.735"></status>
</kw>
<msg timestamp="20201117 14:47:28.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.716" endtime="20201117 14:47:28.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:28.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:28.737" endtime="20201117 14:47:28.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.739" endtime="20201117 14:47:28.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.713" endtime="20201117 14:47:28.741"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.711" endtime="20201117 14:47:28.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:28.748" endtime="20201117 14:47:29.034"></status>
</kw>
<msg timestamp="20201117 14:47:29.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:28.747" endtime="20201117 14:47:29.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.038" endtime="20201117 14:47:29.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.046" endtime="20201117 14:47:29.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.744" endtime="20201117 14:47:29.048"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.742" endtime="20201117 14:47:29.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.053" level="INFO">${RESULT} = [{'time': 0.021698292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.695900000000226e-05, 'source_diff': 5.695900000000226e-05}, {'time': 0.021768292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.049" endtime="20201117 14:47:29.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.066" level="INFO">${ACCURACY} = {'diff': [5.695900000000226e-05, 5.690300000000051e-05, 5.6764000000000814e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6888000000001465e-05, 5.60549999999993e-05, 5.606899999999887e-05, 5.6...</msg>
<status status="PASS" starttime="20201117 14:47:29.054" endtime="20201117 14:47:29.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.071" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.070" endtime="20201117 14:47:29.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.073" level="INFO">VALUE: [5.695900000000226e-05, 5.690300000000051e-05, 5.6764000000000814e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6888000000001465e-05, 5.60549999999993e-05, 5.606899999999887e-05, 5.6778000000000384e-05, 5.6764000000000814e-05, 5.641699999999958e-05, 5.6236000000001174e-05, 5.6555999999999274e-05, 5.6763999999997344e-05, 5.6722000000002104e-05, 5.684699999999876e-05, 5.609700000000148e-05, 5.6666000000000355e-05, 5.640300000000001e-05, 5.690300000000051e-05, 5.683400000000213e-05, 5.6679999999999925e-05, 5.608299999999844e-05, 5.6457999999998815e-05, 5.65549999999998e-05, 5.6721999999998635e-05, 5.6264000000000314e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.690299999999704e-05, 5.641699999999958e-05, 5.630600000000249e-05, 5.695900000000226e-05, 5.640300000000001e-05, 5.6485999999997955e-05, 5.7055999999999774e-05, 5.6555999999999274e-05, 5.6165999999999855e-05, 5.604099999999973e-05, 5.613900000000019e-05, 5.6472000000001854e-05, 5.611099999999758e-05, 5.655500000000327e-05, 5.643099999999915e-05, 5.6986000000001924e-05, 5.681899999999962e-05, 5.6971999999998885e-05, 5.6555999999999274e-05, 5.61809999999989e-05, 5.6264000000000314e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.072" endtime="20201117 14:47:29.074"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.067" endtime="20201117 14:47:29.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.076" endtime="20201117 14:47:29.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.080" endtime="20201117 14:47:29.099"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.078" endtime="20201117 14:47:29.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.075" endtime="20201117 14:47:29.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.710" endtime="20201117 14:47:29.100"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.708" endtime="20201117 14:47:29.101"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:28.707" endtime="20201117 14:47:29.101"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.103" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.111" endtime="20201117 14:47:29.129"></status>
</kw>
<msg timestamp="20201117 14:47:29.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.110" endtime="20201117 14:47:29.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.131" endtime="20201117 14:47:29.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.137" endtime="20201117 14:47:29.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.107" endtime="20201117 14:47:29.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.105" endtime="20201117 14:47:29.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.146" endtime="20201117 14:47:29.431"></status>
</kw>
<msg timestamp="20201117 14:47:29.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.145" endtime="20201117 14:47:29.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.436" endtime="20201117 14:47:29.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.444" endtime="20201117 14:47:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.142" endtime="20201117 14:47:29.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.141" endtime="20201117 14:47:29.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.451" level="INFO">${RESULT} = [{'time': 0.021844778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.734699999999926e-05, 'source_diff': 5.734699999999926e-05}, {'time': 0.021908764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.447" endtime="20201117 14:47:29.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.464" level="INFO">${ACCURACY} = {'diff': [5.734699999999926e-05, 5.7236000000002174e-05, 5.7083999999998913e-05, 5.737500000000187e-05, 5.795899999999979e-05, 5.784799999999923e-05, 5.779100000000148e-05, 5.7401999999998066e-05, 5.7...</msg>
<status status="PASS" starttime="20201117 14:47:29.452" endtime="20201117 14:47:29.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.469" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.468" endtime="20201117 14:47:29.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.471" level="INFO">VALUE: [5.734699999999926e-05, 5.7236000000002174e-05, 5.7083999999998913e-05, 5.737500000000187e-05, 5.795899999999979e-05, 5.784799999999923e-05, 5.779100000000148e-05, 5.7401999999998066e-05, 5.7180000000000425e-05, 5.7971999999999885e-05, 5.761100000000255e-05, 5.7278000000000884e-05, 5.7415999999997636e-05, 5.7791999999997484e-05, 5.7264000000001314e-05, 5.7207999999999565e-05, 5.7514000000001564e-05, 5.7971999999999885e-05, 5.788900000000194e-05, 5.763899999999822e-05, 5.7721999999999635e-05, 5.722299999999861e-05, 5.743100000000015e-05, 5.733299999999969e-05, 5.711099999999858e-05, 5.7193999999999995e-05, 5.780500000000105e-05, 5.761099999999908e-05, 5.7528000000001134e-05, 5.738900000000144e-05, 5.7264000000001314e-05, 5.790300000000151e-05, 5.7999999999999025e-05, 5.7542000000000704e-05, 5.7485999999998955e-05, 5.759699999999951e-05, 5.784699999999976e-05, 5.7764000000001814e-05, 5.716700000000033e-05, 5.783300000000019e-05, 5.7235999999998705e-05, 5.756900000000037e-05, 5.7014000000001064e-05, 5.7986000000002924e-05, 5.786099999999933e-05, 5.709700000000248e-05, 5.766700000000083e-05, 5.7527999999997664e-05, 5.7820000000000094e-05, 5.794500000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.470" endtime="20201117 14:47:29.471"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.465" endtime="20201117 14:47:29.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.474" endtime="20201117 14:47:29.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.478" endtime="20201117 14:47:29.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.476" endtime="20201117 14:47:29.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.473" endtime="20201117 14:47:29.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.104" endtime="20201117 14:47:29.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.102" endtime="20201117 14:47:29.499"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.101" endtime="20201117 14:47:29.499"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.501" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.510" endtime="20201117 14:47:29.527"></status>
</kw>
<msg timestamp="20201117 14:47:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.508" endtime="20201117 14:47:29.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.529" endtime="20201117 14:47:29.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.531" endtime="20201117 14:47:29.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.505" endtime="20201117 14:47:29.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.503" endtime="20201117 14:47:29.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.541" endtime="20201117 14:47:29.827"></status>
</kw>
<msg timestamp="20201117 14:47:29.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.540" endtime="20201117 14:47:29.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022158125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.831" endtime="20201117 14:47:29.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.840" endtime="20201117 14:47:29.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.537" endtime="20201117 14:47:29.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.535" endtime="20201117 14:47:29.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:29.846" level="INFO">${RESULT} = [{'time': 0.022158125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.816700000000133e-05, 'source_diff': 5.816700000000133e-05}, {'time': 0.022227139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:29.843" endtime="20201117 14:47:29.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:29.860" level="INFO">${ACCURACY} = {'diff': [5.816700000000133e-05, 5.843100000000115e-05, 5.8833999999997194e-05, 5.8485999999999955e-05, 5.890299999999904e-05, 5.8347999999999733e-05, 5.8235999999999705e-05, 5.808300000000044e-05, 5....</msg>
<status status="PASS" starttime="20201117 14:47:29.847" endtime="20201117 14:47:29.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.864" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201117 14:47:29.863" endtime="20201117 14:47:29.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.867" level="INFO">VALUE: [5.816700000000133e-05, 5.843100000000115e-05, 5.8833999999997194e-05, 5.8485999999999955e-05, 5.890299999999904e-05, 5.8347999999999733e-05, 5.8235999999999705e-05, 5.808300000000044e-05, 5.9000000000000025e-05, 5.8387999999999496e-05, 5.8763999999999345e-05, 5.8763999999999345e-05, 5.9027999999999164e-05, 5.815300000000176e-05, 5.8194000000000995e-05, 5.8041999999997734e-05, 5.8207999999997095e-05, 5.8415999999998636e-05, 5.883300000000119e-05, 5.8222000000000135e-05, 5.866700000000183e-05, 5.890299999999904e-05, 5.858299999999747e-05, 5.86810000000014e-05, 5.869500000000097e-05, 5.811099999999958e-05, 5.9069999999997874e-05, 5.8736000000000205e-05, 5.8749999999999775e-05, 5.8194000000000995e-05, 5.861100000000008e-05, 5.816700000000133e-05, 5.8707999999997595e-05, 5.843100000000115e-05, 5.819500000000047e-05, 5.8500000000002994e-05, 5.816700000000133e-05, 5.8306000000001024e-05, 5.819500000000047e-05, 5.883300000000119e-05, 5.8235999999999705e-05, 5.8680000000001925e-05, 5.8986000000000455e-05, 5.852699999999919e-05, 5.8929999999998706e-05, 5.8278000000001884e-05, 5.886099999999686e-05, 5.8541999999998234e-05, 5.8736000000000205e-05, 5.866699999999836e-05]</msg>
<status status="PASS" starttime="20201117 14:47:29.865" endtime="20201117 14:47:29.867"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.861" endtime="20201117 14:47:29.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.870" endtime="20201117 14:47:29.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:29.873" endtime="20201117 14:47:29.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.872" endtime="20201117 14:47:29.893"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.868" endtime="20201117 14:47:29.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.502" endtime="20201117 14:47:29.894"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.500" endtime="20201117 14:47:29.895"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.499" endtime="20201117 14:47:29.895"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.897" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.905" endtime="20201117 14:47:29.924"></status>
</kw>
<msg timestamp="20201117 14:47:29.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.904" endtime="20201117 14:47:29.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:29.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:29.925" endtime="20201117 14:47:29.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.928" endtime="20201117 14:47:29.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.901" endtime="20201117 14:47:29.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.899" endtime="20201117 14:47:29.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:29.937" endtime="20201117 14:47:30.222"></status>
</kw>
<msg timestamp="20201117 14:47:30.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:29.935" endtime="20201117 14:47:30.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022999361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.227" endtime="20201117 14:47:30.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.235" endtime="20201117 14:47:30.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.933" endtime="20201117 14:47:30.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.931" endtime="20201117 14:47:30.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.241" level="INFO">${RESULT} = [{'time': 0.023058681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9320000000001594e-05, 'source_diff': 5.9320000000001594e-05}, {'time': 0.023129694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:30.238" endtime="20201117 14:47:30.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.256" level="INFO">${ACCURACY} = {'diff': [5.9320000000001594e-05, 5.9887999999997527e-05, 5.930500000000255e-05, 5.9500000000000525e-05, 5.909700000000101e-05, 6.0027999999996695e-05, 5.9457999999998346e-05, 5.912500000000015e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:47:30.242" endtime="20201117 14:47:30.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.261" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.260" endtime="20201117 14:47:30.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.263" level="INFO">VALUE: [5.9320000000001594e-05, 5.9887999999997527e-05, 5.930500000000255e-05, 5.9500000000000525e-05, 5.909700000000101e-05, 6.0027999999996695e-05, 5.9457999999998346e-05, 5.912500000000015e-05, 5.919500000000147e-05, 5.93750000000004e-05, 5.96810000000024e-05, 5.9222000000001135e-05, 5.9777999999999915e-05, 5.916699999999886e-05, 5.9194999999998e-05, 5.9098000000000483e-05, 5.9278000000002884e-05, 5.934699999999779e-05, 5.962500000000065e-05, 5.952700000000019e-05, 5.9764000000000345e-05, 5.9277999999999414e-05, 5.9320000000001594e-05, 5.905499999999883e-05, 5.9277999999999414e-05, 5.981899999999915e-05, 5.9527999999999665e-05, 5.988900000000047e-05, 5.9986000000001455e-05, 5.988900000000047e-05, 5.920900000000104e-05, 5.995900000000179e-05, 5.9777999999999915e-05, 5.9151999999999816e-05, 6.005499999999983e-05, 5.9764000000000345e-05, 5.9527999999999665e-05, 5.9472000000001385e-05, 5.943100000000215e-05, 5.906900000000187e-05, 5.9555999999998804e-05, 5.984700000000176e-05, 5.990300000000004e-05, 5.9222000000001135e-05, 5.9320000000001594e-05, 5.912500000000015e-05, 5.972299999999764e-05, 5.9777999999999915e-05, 5.943099999999868e-05, 5.934699999999779e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.262" endtime="20201117 14:47:30.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.257" endtime="20201117 14:47:30.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.267" endtime="20201117 14:47:30.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.270" endtime="20201117 14:47:30.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.269" endtime="20201117 14:47:30.290"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.265" endtime="20201117 14:47:30.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.898" endtime="20201117 14:47:30.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.896" endtime="20201117 14:47:30.291"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:29.895" endtime="20201117 14:47:30.291"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.294" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.302" endtime="20201117 14:47:30.320"></status>
</kw>
<msg timestamp="20201117 14:47:30.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.300" endtime="20201117 14:47:30.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.322" endtime="20201117 14:47:30.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.324" endtime="20201117 14:47:30.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.298" endtime="20201117 14:47:30.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.296" endtime="20201117 14:47:30.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.333" endtime="20201117 14:47:30.619"></status>
</kw>
<msg timestamp="20201117 14:47:30.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.332" endtime="20201117 14:47:30.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.624" endtime="20201117 14:47:30.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.632" endtime="20201117 14:47:30.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.329" endtime="20201117 14:47:30.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.327" endtime="20201117 14:47:30.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:30.638" level="INFO">${RESULT} = [{'time': 0.021673361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055500000000033e-05, 'source_diff': 6.055500000000033e-05}, {'time': 0.021744347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:30.635" endtime="20201117 14:47:30.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:30.652" level="INFO">${ACCURACY} = {'diff': [6.055500000000033e-05, 6.0916000000001136e-05, 6.0916000000001136e-05, 6.0680000000000456e-05, 6.0721999999999166e-05, 6.030500000000008e-05, 6.036099999999836e-05, 6.0528000000000665e-05, 6...</msg>
<status status="PASS" starttime="20201117 14:47:30.639" endtime="20201117 14:47:30.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.656" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201117 14:47:30.655" endtime="20201117 14:47:30.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.659" level="INFO">VALUE: [6.055500000000033e-05, 6.0916000000001136e-05, 6.0916000000001136e-05, 6.0680000000000456e-05, 6.0721999999999166e-05, 6.030500000000008e-05, 6.036099999999836e-05, 6.0528000000000665e-05, 6.036099999999836e-05, 6.031899999999965e-05, 6.06949999999995e-05, 6.0735999999998735e-05, 6.020899999999857e-05, 6.072299999999864e-05, 6.012500000000115e-05, 6.0679999999996986e-05, 6.0971999999999416e-05, 6.0430000000000206e-05, 6.0902000000001566e-05, 6.081900000000015e-05, 6.0694000000000026e-05, 6.0749999999998305e-05, 6.0944000000000276e-05, 6.051299999999815e-05, 6.0985999999998985e-05, 6.1014000000001595e-05, 6.036099999999836e-05, 6.0569999999999374e-05, 6.0179999999999956e-05, 6.016699999999986e-05, 6.0083999999998444e-05, 6.0041999999999734e-05, 6.0666000000000886e-05, 6.0763999999997875e-05, 6.0194000000002995e-05, 6.1013999999998125e-05, 6.055500000000033e-05, 6.013900000000072e-05, 6.083299999999972e-05, 6.0291999999999984e-05, 6.0707999999999596e-05, 6.1028000000001165e-05, 6.018099999999943e-05, 6.088900000000147e-05, 6.022299999999814e-05, 6.090300000000104e-05, 6.044499999999925e-05, 6.073700000000168e-05, 6.086099999999886e-05, 6.03889999999975e-05]</msg>
<status status="PASS" starttime="20201117 14:47:30.658" endtime="20201117 14:47:30.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.653" endtime="20201117 14:47:30.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.662" endtime="20201117 14:47:30.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:30.666" endtime="20201117 14:47:30.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.664" endtime="20201117 14:47:30.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.661" endtime="20201117 14:47:30.686"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.294" endtime="20201117 14:47:30.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.292" endtime="20201117 14:47:30.687"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.292" endtime="20201117 14:47:30.687"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.689" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.698" endtime="20201117 14:47:30.715"></status>
</kw>
<msg timestamp="20201117 14:47:30.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.696" endtime="20201117 14:47:30.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:30.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:30.717" endtime="20201117 14:47:30.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.719" endtime="20201117 14:47:30.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.693" endtime="20201117 14:47:30.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.691" endtime="20201117 14:47:30.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:30.728" endtime="20201117 14:47:31.014"></status>
</kw>
<msg timestamp="20201117 14:47:31.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:30.726" endtime="20201117 14:47:31.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.018" endtime="20201117 14:47:31.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.026" endtime="20201117 14:47:31.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.724" endtime="20201117 14:47:31.028"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.722" endtime="20201117 14:47:31.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.033" level="INFO">${RESULT} = [{'time': 0.021839736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165299999999832e-05, 'source_diff': 6.165299999999832e-05}, {'time': 0.021914764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.029" endtime="20201117 14:47:31.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.047" level="INFO">${ACCURACY} = {'diff': [6.165299999999832e-05, 6.184700000000029e-05, 6.10690000000004e-05, 6.147199999999992e-05, 6.12499999999988e-05, 6.190299999999857e-05, 6.154199999999777e-05, 6.176399999999888e-05, 6.184699...</msg>
<status status="PASS" starttime="20201117 14:47:31.034" endtime="20201117 14:47:31.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.051" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.050" endtime="20201117 14:47:31.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.054" level="INFO">VALUE: [6.165299999999832e-05, 6.184700000000029e-05, 6.10690000000004e-05, 6.147199999999992e-05, 6.12499999999988e-05, 6.190299999999857e-05, 6.154199999999777e-05, 6.176399999999888e-05, 6.184699999999682e-05, 6.161099999999961e-05, 6.151399999999863e-05, 6.13880000000025e-05, 6.183300000000072e-05, 6.120799999999663e-05, 6.186099999999986e-05, 6.113900000000172e-05, 6.181900000000115e-05, 6.161099999999961e-05, 6.143100000000068e-05, 6.194500000000075e-05, 6.182000000000062e-05, 6.197200000000042e-05, 6.155599999999734e-05, 6.172299999999964e-05, 6.12499999999988e-05, 6.191599999999867e-05, 6.141600000000164e-05, 6.195799999999738e-05, 6.119399999999706e-05, 6.14300000000012e-05, 6.184700000000029e-05, 6.149999999999906e-05, 6.183300000000072e-05, 6.173599999999974e-05, 6.16950000000005e-05, 6.157000000000037e-05, 6.136100000000283e-05, 6.115299999999782e-05, 6.113899999999825e-05, 6.14019999999986e-05, 6.123599999999924e-05, 6.177700000000244e-05, 6.129100000000151e-05, 6.147199999999992e-05, 6.129199999999752e-05, 6.123599999999924e-05, 6.1888999999999e-05, 6.20140000000026e-05, 6.10560000000003e-05, 6.199999999999956e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.052" endtime="20201117 14:47:31.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.048" endtime="20201117 14:47:31.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.057" endtime="20201117 14:47:31.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.060" endtime="20201117 14:47:31.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.059" endtime="20201117 14:47:31.080"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.055" endtime="20201117 14:47:31.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.690" endtime="20201117 14:47:31.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.688" endtime="20201117 14:47:31.081"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:30.687" endtime="20201117 14:47:31.081"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.084" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.092" endtime="20201117 14:47:31.109"></status>
</kw>
<msg timestamp="20201117 14:47:31.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.090" endtime="20201117 14:47:31.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.110" endtime="20201117 14:47:31.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.113" endtime="20201117 14:47:31.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.088" endtime="20201117 14:47:31.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.086" endtime="20201117 14:47:31.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.122" endtime="20201117 14:47:31.407"></status>
</kw>
<msg timestamp="20201117 14:47:31.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.120" endtime="20201117 14:47:31.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.411" endtime="20201117 14:47:31.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.419" endtime="20201117 14:47:31.421"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.118" endtime="20201117 14:47:31.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.116" endtime="20201117 14:47:31.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.426" level="INFO">${RESULT} = [{'time': 0.021862625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.261100000000061e-05, 'source_diff': 6.261100000000061e-05}, {'time': 0.021936625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:31.423" endtime="20201117 14:47:31.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.440" level="INFO">${ACCURACY} = {'diff': [6.261100000000061e-05, 6.245800000000135e-05, 6.266699999999889e-05, 6.287500000000043e-05, 6.280599999999859e-05, 6.268099999999846e-05, 6.209800000000001e-05, 6.211199999999958e-05, 6.2527...</msg>
<status status="PASS" starttime="20201117 14:47:31.427" endtime="20201117 14:47:31.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.444" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.443" endtime="20201117 14:47:31.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.447" level="INFO">VALUE: [6.261100000000061e-05, 6.245800000000135e-05, 6.266699999999889e-05, 6.287500000000043e-05, 6.280599999999859e-05, 6.268099999999846e-05, 6.209800000000001e-05, 6.211199999999958e-05, 6.25279999999992e-05, 6.250000000000006e-05, 6.236100000000036e-05, 6.302700000000022e-05, 6.247199999999745e-05, 6.27500000000003e-05, 6.230599999999809e-05, 6.227799999999895e-05, 6.241700000000211e-05, 6.30690000000024e-05, 6.226399999999938e-05, 6.244499999999778e-05, 6.295900000000132e-05, 6.23889999999995e-05, 6.250000000000006e-05, 6.213799999999978e-05, 6.306899999999893e-05, 6.217999999999849e-05, 6.24439999999983e-05, 6.292999999999924e-05, 6.29439999999988e-05, 6.27219999999977e-05, 6.266699999999889e-05, 6.290299999999957e-05, 6.293099999999871e-05, 6.234699999999732e-05, 6.240300000000254e-05, 6.272300000000064e-05, 6.301400000000013e-05, 6.219399999999806e-05, 6.263800000000028e-05, 6.269400000000203e-05, 6.274999999999684e-05, 6.255500000000233e-05, 6.297200000000142e-05, 6.269400000000203e-05, 6.234700000000079e-05, 6.269400000000203e-05, 6.254199999999877e-05, 6.212499999999968e-05, 6.283300000000172e-05, 6.234699999999732e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.445" endtime="20201117 14:47:31.447"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.441" endtime="20201117 14:47:31.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.450" endtime="20201117 14:47:31.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.453" endtime="20201117 14:47:31.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.452" endtime="20201117 14:47:31.473"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.448" endtime="20201117 14:47:31.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.084" endtime="20201117 14:47:31.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.082" endtime="20201117 14:47:31.474"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.082" endtime="20201117 14:47:31.474"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.477" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.485" endtime="20201117 14:47:31.503"></status>
</kw>
<msg timestamp="20201117 14:47:31.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.483" endtime="20201117 14:47:31.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.505" endtime="20201117 14:47:31.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.507" endtime="20201117 14:47:31.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.481" endtime="20201117 14:47:31.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.479" endtime="20201117 14:47:31.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.517" endtime="20201117 14:47:31.803"></status>
</kw>
<msg timestamp="20201117 14:47:31.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.515" endtime="20201117 14:47:31.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.807" endtime="20201117 14:47:31.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.815" endtime="20201117 14:47:31.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.512" endtime="20201117 14:47:31.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.510" endtime="20201117 14:47:31.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:31.822" level="INFO">${RESULT} = [{'time': 0.022664986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.362500000000118e-05, 'source_diff': 6.362500000000118e-05}, {'time': 0.022737, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:31.818" endtime="20201117 14:47:31.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:31.837" level="INFO">${ACCURACY} = {'diff': [6.362500000000118e-05, 6.379200000000002e-05, 6.313900000000025e-05, 6.345899999999835e-05, 6.37500000000013e-05, 6.330599999999909e-05, 6.318099999999896e-05, 6.37219999999987e-05, 6.341699...</msg>
<status status="PASS" starttime="20201117 14:47:31.823" endtime="20201117 14:47:31.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.841" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201117 14:47:31.840" endtime="20201117 14:47:31.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.843" level="INFO">VALUE: [6.362500000000118e-05, 6.379200000000002e-05, 6.313900000000025e-05, 6.345899999999835e-05, 6.37500000000013e-05, 6.330599999999909e-05, 6.318099999999896e-05, 6.37219999999987e-05, 6.341699999999964e-05, 6.351400000000063e-05, 6.348599999999802e-05, 6.399999999999809e-05, 6.305499999999936e-05, 6.384699999999882e-05, 6.37089999999986e-05, 6.34439999999993e-05, 6.334699999999832e-05, 6.37500000000013e-05, 6.341699999999964e-05, 6.32500000000008e-05, 6.311100000000111e-05, 6.344500000000225e-05, 6.384699999999882e-05, 6.394500000000275e-05, 6.323599999999777e-05, 6.38479999999983e-05, 6.393099999999971e-05, 6.323700000000071e-05, 6.370799999999913e-05, 6.37219999999987e-05, 6.317999999999949e-05, 6.309699999999807e-05, 6.312500000000068e-05, 6.40280000000007e-05, 6.355599999999934e-05, 6.32500000000008e-05, 6.361100000000161e-05, 6.336100000000136e-05, 6.377800000000045e-05, 6.393099999999971e-05, 6.309800000000101e-05, 6.319399999999906e-05, 6.341700000000311e-05, 6.311099999999764e-05, 6.334699999999832e-05, 6.397199999999895e-05, 6.351399999999716e-05, 6.3195000000002e-05, 6.308300000000197e-05, 6.36950000000025e-05]</msg>
<status status="PASS" starttime="20201117 14:47:31.842" endtime="20201117 14:47:31.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.837" endtime="20201117 14:47:31.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.847" endtime="20201117 14:47:31.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:31.850" endtime="20201117 14:47:31.869"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.848" endtime="20201117 14:47:31.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.845" endtime="20201117 14:47:31.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.477" endtime="20201117 14:47:31.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.476" endtime="20201117 14:47:31.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.475" endtime="20201117 14:47:31.871"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.873" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.881" endtime="20201117 14:47:31.898"></status>
</kw>
<msg timestamp="20201117 14:47:31.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.880" endtime="20201117 14:47:31.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:31.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:31.899" endtime="20201117 14:47:31.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.902" endtime="20201117 14:47:31.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.877" endtime="20201117 14:47:31.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.875" endtime="20201117 14:47:31.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:31.911" endtime="20201117 14:47:32.198"></status>
</kw>
<msg timestamp="20201117 14:47:32.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:31.910" endtime="20201117 14:47:32.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.202" endtime="20201117 14:47:32.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.210" endtime="20201117 14:47:32.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.907" endtime="20201117 14:47:32.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.906" endtime="20201117 14:47:32.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.217" level="INFO">${RESULT} = [{'time': 0.021919417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.468100000000046e-05, 'source_diff': 6.468100000000046e-05}, {'time': 0.021991431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:32.213" endtime="20201117 14:47:32.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.230" level="INFO">${ACCURACY} = {'diff': [6.468100000000046e-05, 6.472299999999917e-05, 6.42639999999979e-05, 6.450000000000206e-05, 6.490199999999863e-05, 6.493000000000124e-05, 6.470800000000013e-05, 6.426400000000138e-05, 6.41670...</msg>
<status status="PASS" starttime="20201117 14:47:32.218" endtime="20201117 14:47:32.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.235" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.234" endtime="20201117 14:47:32.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.237" level="INFO">VALUE: [6.468100000000046e-05, 6.472299999999917e-05, 6.42639999999979e-05, 6.450000000000206e-05, 6.490199999999863e-05, 6.493000000000124e-05, 6.470800000000013e-05, 6.426400000000138e-05, 6.416700000000039e-05, 6.441700000000064e-05, 6.443100000000021e-05, 6.423599999999877e-05, 6.472200000000317e-05, 6.426400000000138e-05, 6.40419999999968e-05, 6.45280000000012e-05, 6.423600000000224e-05, 6.480500000000111e-05, 6.491600000000167e-05, 6.497199999999995e-05, 6.437500000000193e-05, 6.419400000000006e-05, 6.452799999999773e-05, 6.430500000000061e-05, 6.495800000000038e-05, 6.440199999999813e-05, 6.491699999999767e-05, 6.458399999999948e-05, 6.42219999999992e-05, 6.437499999999846e-05, 6.501399999999866e-05, 6.476400000000188e-05, 6.47639999999984e-05, 6.488799999999906e-05, 6.413900000000125e-05, 6.42639999999979e-05, 6.495800000000038e-05, 6.431900000000018e-05, 6.469400000000056e-05, 6.420799999999963e-05, 6.465300000000132e-05, 6.465299999999785e-05, 6.412500000000168e-05, 6.498599999999952e-05, 6.416700000000039e-05, 6.415199999999788e-05, 6.443100000000021e-05, 6.42500000000018e-05, 6.459699999999957e-05, 6.44440000000003e-05]</msg>
<status status="PASS" starttime="20201117 14:47:32.236" endtime="20201117 14:47:32.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.231" endtime="20201117 14:47:32.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.240" endtime="20201117 14:47:32.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.244" endtime="20201117 14:47:32.263"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.242" endtime="20201117 14:47:32.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.239" endtime="20201117 14:47:32.264"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.874" endtime="20201117 14:47:32.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.872" endtime="20201117 14:47:32.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:31.871" endtime="20201117 14:47:32.265"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.267" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.276" endtime="20201117 14:47:32.294"></status>
</kw>
<msg timestamp="20201117 14:47:32.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.274" endtime="20201117 14:47:32.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.295" endtime="20201117 14:47:32.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.298" endtime="20201117 14:47:32.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.271" endtime="20201117 14:47:32.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.269" endtime="20201117 14:47:32.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.307" endtime="20201117 14:47:32.593"></status>
</kw>
<msg timestamp="20201117 14:47:32.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02226975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:32.305" endtime="20201117 14:47:32.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02226975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:32.597" endtime="20201117 14:47:32.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.605" endtime="20201117 14:47:32.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.303" endtime="20201117 14:47:32.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.301" endtime="20201117 14:47:32.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:32.612" level="INFO">${RESULT} = [{'time': 0.022335417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.566699999999842e-05, 'source_diff': 6.566699999999842e-05}, {'time': 0.022407361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:32.608" endtime="20201117 14:47:32.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:32.625" level="INFO">${ACCURACY} = {'diff': [6.566699999999842e-05, 6.538899999999903e-05, 6.60419999999988e-05, 6.536099999999989e-05, 6.537499999999946e-05, 6.563900000000275e-05, 6.502799999999823e-05, 6.529200000000152e-05, 6.57639...</msg>
<status status="PASS" starttime="20201117 14:47:32.613" endtime="20201117 14:47:32.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.630" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201117 14:47:32.629" endtime="20201117 14:47:32.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.632" level="INFO">VALUE: [6.566699999999842e-05, 6.538899999999903e-05, 6.60419999999988e-05, 6.536099999999989e-05, 6.537499999999946e-05, 6.563900000000275e-05, 6.502799999999823e-05, 6.529200000000152e-05, 6.57639999999994e-05, 6.558299999999753e-05, 6.526299999999943e-05, 6.595800000000138e-05, 6.580499999999864e-05, 6.57220000000007e-05, 6.577799999999898e-05, 6.59029999999991e-05, 6.54029999999986e-05, 6.581900000000168e-05, 6.57359999999968e-05, 6.581999999999769e-05, 6.52220000000002e-05, 6.604200000000227e-05, 6.565300000000232e-05, 6.574999999999984e-05, 6.556900000000143e-05, 6.574999999999984e-05, 6.573600000000027e-05, 6.534700000000032e-05, 6.569399999999809e-05, 6.573600000000027e-05, 6.552799999999873e-05, 6.555599999999787e-05, 6.524999999999934e-05, 6.566699999999842e-05, 6.518000000000149e-05, 6.515299999999835e-05, 6.566699999999842e-05, 6.547299999999992e-05, 6.566700000000189e-05, 6.584700000000082e-05, 6.579099999999907e-05, 6.529100000000204e-05, 6.57220000000007e-05, 6.509700000000007e-05, 6.531999999999719e-05, 6.583300000000125e-05, 6.593100000000171e-05, 6.602799999999923e-05, 6.523599999999977e-05, 6.580600000000159e-05]</msg>
<status status="PASS" starttime="20201117 14:47:32.631" endtime="20201117 14:47:32.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.626" endtime="20201117 14:47:32.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.635" endtime="20201117 14:47:32.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:32.639" endtime="20201117 14:47:32.658"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.637" endtime="20201117 14:47:32.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.634" endtime="20201117 14:47:32.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.268" endtime="20201117 14:47:32.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.266" endtime="20201117 14:47:32.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.265" endtime="20201117 14:47:32.660"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.663" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.671" endtime="20201117 14:47:32.688"></status>
</kw>
<msg timestamp="20201117 14:47:32.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.669" endtime="20201117 14:47:32.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:32.690" endtime="20201117 14:47:32.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.692" endtime="20201117 14:47:32.694"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.667" endtime="20201117 14:47:32.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.665" endtime="20201117 14:47:32.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.701" endtime="20201117 14:47:32.985"></status>
</kw>
<msg timestamp="20201117 14:47:32.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.700" endtime="20201117 14:47:32.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:32.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022822278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:32.990" endtime="20201117 14:47:32.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:32.998" endtime="20201117 14:47:32.999"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.697" endtime="20201117 14:47:33.000"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.696" endtime="20201117 14:47:33.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.005" level="INFO">${RESULT} = [{'time': 0.022822278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.616700000000239e-05, 'source_diff': 6.616700000000239e-05}, {'time': 0.022895306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.001" endtime="20201117 14:47:33.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.018" level="INFO">${ACCURACY} = {'diff': [6.616700000000239e-05, 6.616700000000239e-05, 6.670899999999813e-05, 6.697200000000195e-05, 6.617999999999902e-05, 6.670800000000213e-05, 6.608299999999803e-05, 6.630500000000261e-05, 6.6749...</msg>
<status status="PASS" starttime="20201117 14:47:33.006" endtime="20201117 14:47:33.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.023" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.022" endtime="20201117 14:47:33.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.025" level="INFO">VALUE: [6.616700000000239e-05, 6.616700000000239e-05, 6.670899999999813e-05, 6.697200000000195e-05, 6.617999999999902e-05, 6.670800000000213e-05, 6.608299999999803e-05, 6.630500000000261e-05, 6.674999999999737e-05, 6.669399999999909e-05, 6.698600000000152e-05, 6.620800000000163e-05, 6.697199999999848e-05, 6.645899999999788e-05, 6.647200000000145e-05, 6.613899999999978e-05, 6.616599999999945e-05, 6.648700000000049e-05, 6.700000000000109e-05, 6.619400000000206e-05, 6.680499999999964e-05, 6.666599999999995e-05, 6.612500000000021e-05, 6.662500000000071e-05, 6.677799999999998e-05, 6.602799999999923e-05, 6.652799999999973e-05, 6.648600000000102e-05, 6.691699999999967e-05, 6.62639999999999e-05, 6.67640000000004e-05, 6.636200000000037e-05, 6.619500000000153e-05, 6.625000000000034e-05, 6.634699999999785e-05, 6.667999999999952e-05, 6.633299999999828e-05, 6.666599999999995e-05, 6.62639999999999e-05, 6.665299999999985e-05, 6.65419999999993e-05, 6.67640000000004e-05, 6.675000000000084e-05, 6.668099999999899e-05, 6.669499999999856e-05, 6.665299999999985e-05, 6.630500000000261e-05, 6.6277e-05, 6.698600000000152e-05, 6.679100000000007e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.024" endtime="20201117 14:47:33.026"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.019" endtime="20201117 14:47:33.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.029" endtime="20201117 14:47:33.030"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.032" endtime="20201117 14:47:33.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.030" endtime="20201117 14:47:33.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.027" endtime="20201117 14:47:33.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.663" endtime="20201117 14:47:33.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.661" endtime="20201117 14:47:33.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:32.661" endtime="20201117 14:47:33.053"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.056" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.064" endtime="20201117 14:47:33.082"></status>
</kw>
<msg timestamp="20201117 14:47:33.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.062" endtime="20201117 14:47:33.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.084" endtime="20201117 14:47:33.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.086" endtime="20201117 14:47:33.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.060" endtime="20201117 14:47:33.089"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.057" endtime="20201117 14:47:33.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.095" endtime="20201117 14:47:33.380"></status>
</kw>
<msg timestamp="20201117 14:47:33.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.094" endtime="20201117 14:47:33.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023623264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.385" endtime="20201117 14:47:33.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.393" endtime="20201117 14:47:33.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.091" endtime="20201117 14:47:33.395"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.090" endtime="20201117 14:47:33.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.399" level="INFO">${RESULT} = [{'time': 0.023623264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.733300000000275e-05, 'source_diff': 6.733300000000275e-05}, {'time': 0.02369725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:33.396" endtime="20201117 14:47:33.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.414" level="INFO">${ACCURACY} = {'diff': [6.733300000000275e-05, 6.770799999999966e-05, 6.755599999999987e-05, 6.786099999999892e-05, 6.769499999999956e-05, 6.75420000000003e-05, 6.738900000000103e-05, 6.765300000000085e-05, 6.75000...</msg>
<status status="PASS" starttime="20201117 14:47:33.400" endtime="20201117 14:47:33.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.419" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.418" endtime="20201117 14:47:33.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.422" level="INFO">VALUE: [6.733300000000275e-05, 6.770799999999966e-05, 6.755599999999987e-05, 6.786099999999892e-05, 6.769499999999956e-05, 6.75420000000003e-05, 6.738900000000103e-05, 6.765300000000085e-05, 6.750000000000159e-05, 6.791599999999773e-05, 6.797199999999948e-05, 6.801399999999819e-05, 6.749999999999812e-05, 6.790299999999763e-05, 6.743099999999974e-05, 6.781900000000021e-05, 6.766700000000042e-05, 6.769499999999956e-05, 6.791700000000067e-05, 6.804199999999733e-05, 6.747299999999845e-05, 6.744499999999931e-05, 6.712499999999774e-05, 6.749999999999812e-05, 6.790200000000163e-05, 6.798599999999905e-05, 6.801400000000166e-05, 6.793000000000077e-05, 6.706900000000293e-05, 6.731899999999971e-05, 6.772199999999923e-05, 6.794499999999981e-05, 6.709799999999808e-05, 6.750000000000159e-05, 6.766700000000042e-05, 6.706999999999894e-05, 6.747199999999898e-05, 6.797199999999948e-05, 6.788800000000206e-05, 6.770799999999966e-05, 6.797199999999948e-05, 6.750000000000159e-05, 6.793100000000024e-05, 6.75969999999991e-05, 6.787499999999849e-05, 6.758299999999953e-05, 6.766700000000042e-05, 6.713900000000078e-05, 6.715300000000035e-05, 6.776399999999794e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.420" endtime="20201117 14:47:33.422"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.415" endtime="20201117 14:47:33.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.425" endtime="20201117 14:47:33.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.428" endtime="20201117 14:47:33.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.427" endtime="20201117 14:47:33.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.423" endtime="20201117 14:47:33.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.056" endtime="20201117 14:47:33.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.054" endtime="20201117 14:47:33.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.054" endtime="20201117 14:47:33.449"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.452" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.460" endtime="20201117 14:47:33.478"></status>
</kw>
<msg timestamp="20201117 14:47:33.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.458" endtime="20201117 14:47:33.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.480" endtime="20201117 14:47:33.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.482" endtime="20201117 14:47:33.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.456" endtime="20201117 14:47:33.484"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.454" endtime="20201117 14:47:33.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.491" endtime="20201117 14:47:33.776"></status>
</kw>
<msg timestamp="20201117 14:47:33.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.490" endtime="20201117 14:47:33.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:33.781" endtime="20201117 14:47:33.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.789" endtime="20201117 14:47:33.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.487" endtime="20201117 14:47:33.791"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.485" endtime="20201117 14:47:33.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:33.796" level="INFO">${RESULT} = [{'time': 0.021731208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.867999999999805e-05, 'source_diff': 6.867999999999805e-05}, {'time': 0.021807208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:33.792" endtime="20201117 14:47:33.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:33.809" level="INFO">${ACCURACY} = {'diff': [6.867999999999805e-05, 6.893000000000177e-05, 6.813800000000231e-05, 6.895800000000091e-05, 6.886099999999992e-05, 6.854099999999835e-05, 6.893100000000124e-05, 6.852800000000173e-05, 6.8416...</msg>
<status status="PASS" starttime="20201117 14:47:33.797" endtime="20201117 14:47:33.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.814" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201117 14:47:33.813" endtime="20201117 14:47:33.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.816" level="INFO">VALUE: [6.867999999999805e-05, 6.893000000000177e-05, 6.813800000000231e-05, 6.895800000000091e-05, 6.886099999999992e-05, 6.854099999999835e-05, 6.893100000000124e-05, 6.852800000000173e-05, 6.84169999999977e-05, 6.841700000000117e-05, 6.874999999999937e-05, 6.880599999999765e-05, 6.85559999999974e-05, 6.895900000000038e-05, 6.877799999999851e-05, 6.838800000000256e-05, 6.812499999999874e-05, 6.856899999999749e-05, 6.904199999999833e-05, 6.859699999999663e-05, 6.880600000000112e-05, 6.874999999999937e-05, 6.815299999999788e-05, 6.82359999999993e-05, 6.844500000000031e-05, 6.879199999999808e-05, 6.80839999999995e-05, 6.901399999999919e-05, 6.887499999999949e-05, 6.872200000000023e-05, 6.874999999999937e-05, 6.806900000000046e-05, 6.826399999999844e-05, 6.845899999999988e-05, 6.868099999999752e-05, 6.882000000000069e-05, 6.858300000000053e-05, 6.809700000000307e-05, 6.837499999999899e-05, 6.899999999999962e-05, 6.87229999999997e-05, 6.826399999999844e-05, 6.866599999999848e-05, 6.87359999999998e-05, 6.904100000000232e-05, 6.80969999999996e-05, 6.877799999999851e-05, 6.837500000000246e-05, 6.841700000000117e-05, 6.830600000000062e-05]</msg>
<status status="PASS" starttime="20201117 14:47:33.815" endtime="20201117 14:47:33.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.810" endtime="20201117 14:47:33.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.819" endtime="20201117 14:47:33.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:33.823" endtime="20201117 14:47:33.842"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.821" endtime="20201117 14:47:33.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.818" endtime="20201117 14:47:33.843"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.452" endtime="20201117 14:47:33.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.451" endtime="20201117 14:47:33.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.450" endtime="20201117 14:47:33.844"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.846" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.854" endtime="20201117 14:47:33.872"></status>
</kw>
<msg timestamp="20201117 14:47:33.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.853" endtime="20201117 14:47:33.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:33.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:33.874" endtime="20201117 14:47:33.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.876" endtime="20201117 14:47:33.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.850" endtime="20201117 14:47:33.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.848" endtime="20201117 14:47:33.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:33.885" endtime="20201117 14:47:34.171"></status>
</kw>
<msg timestamp="20201117 14:47:34.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:33.884" endtime="20201117 14:47:34.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:34.175" endtime="20201117 14:47:34.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.184" endtime="20201117 14:47:34.185"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.881" endtime="20201117 14:47:34.186"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.880" endtime="20201117 14:47:34.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.191" level="INFO">${RESULT} = [{'time': 0.021795236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.97360000000008e-05, 'source_diff': 6.97360000000008e-05}, {'time': 0.021874236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:34.187" endtime="20201117 14:47:34.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.204" level="INFO">${ACCURACY} = {'diff': [6.97360000000008e-05, 6.913899999999931e-05, 6.950000000000012e-05, 6.927799999999901e-05, 6.970900000000113e-05, 6.982000000000169e-05, 6.975000000000037e-05, 6.927799999999901e-05, 7.00140...</msg>
<status status="PASS" starttime="20201117 14:47:34.192" endtime="20201117 14:47:34.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.209" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.208" endtime="20201117 14:47:34.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.211" level="INFO">VALUE: [6.97360000000008e-05, 6.913899999999931e-05, 6.950000000000012e-05, 6.927799999999901e-05, 6.970900000000113e-05, 6.982000000000169e-05, 6.975000000000037e-05, 6.927799999999901e-05, 7.001400000000019e-05, 6.94299999999988e-05, 6.948600000000055e-05, 6.995800000000191e-05, 6.980499999999917e-05, 6.931900000000171e-05, 6.950000000000012e-05, 6.922199999999726e-05, 6.962499999999677e-05, 6.990299999999963e-05, 7.001400000000019e-05, 7.002700000000028e-05, 7.002800000000323e-05, 6.999999999999715e-05, 6.92360000000003e-05, 6.998600000000105e-05, 6.991599999999973e-05, 6.947200000000098e-05, 6.944400000000184e-05, 6.967999999999905e-05, 6.945800000000141e-05, 6.980599999999865e-05, 6.940299999999913e-05, 6.993099999999877e-05, 6.943099999999827e-05, 6.998600000000105e-05, 6.907000000000094e-05, 6.977799999999951e-05, 6.976399999999994e-05, 6.994399999999887e-05, 6.933299999999781e-05, 6.94160000000027e-05, 6.908300000000103e-05, 6.955499999999892e-05, 6.929199999999858e-05, 6.969499999999809e-05, 7.000000000000062e-05, 6.972199999999776e-05, 6.986100000000092e-05, 6.911100000000017e-05, 6.970899999999766e-05, 6.980600000000212e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.210" endtime="20201117 14:47:34.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.205" endtime="20201117 14:47:34.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.214" endtime="20201117 14:47:34.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.218" endtime="20201117 14:47:34.237"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.216" endtime="20201117 14:47:34.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.213" endtime="20201117 14:47:34.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.847" endtime="20201117 14:47:34.238"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.845" endtime="20201117 14:47:34.239"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:33.844" endtime="20201117 14:47:34.239"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.241" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.249" endtime="20201117 14:47:34.267"></status>
</kw>
<msg timestamp="20201117 14:47:34.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.248" endtime="20201117 14:47:34.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.268" endtime="20201117 14:47:34.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.271" endtime="20201117 14:47:34.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.245" endtime="20201117 14:47:34.273"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.243" endtime="20201117 14:47:34.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.280" endtime="20201117 14:47:34.565"></status>
</kw>
<msg timestamp="20201117 14:47:34.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.278" endtime="20201117 14:47:34.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.569" endtime="20201117 14:47:34.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.577" endtime="20201117 14:47:34.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.276" endtime="20201117 14:47:34.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.274" endtime="20201117 14:47:34.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.584" level="INFO">${RESULT} = [{'time': 0.021851653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.012499999999727e-05, 'source_diff': 7.012499999999727e-05}, {'time': 0.021929681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.580" endtime="20201117 14:47:34.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.597" level="INFO">${ACCURACY} = {'diff': [7.012499999999727e-05, 7.072299999999823e-05, 7.00559999999989e-05, 7.036199999999743e-05, 7.070799999999919e-05, 7.015200000000041e-05, 7.083300000000278e-05, 7.072200000000223e-05, 7.01529...</msg>
<status status="PASS" starttime="20201117 14:47:34.585" endtime="20201117 14:47:34.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.602" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201117 14:47:34.601" endtime="20201117 14:47:34.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.605" level="INFO">VALUE: [7.012499999999727e-05, 7.072299999999823e-05, 7.00559999999989e-05, 7.036199999999743e-05, 7.070799999999919e-05, 7.015200000000041e-05, 7.083300000000278e-05, 7.072200000000223e-05, 7.015299999999988e-05, 7.034800000000133e-05, 7.05689999999995e-05, 7.06109999999982e-05, 7.062500000000124e-05, 7.034700000000185e-05, 7.05970000000021e-05, 7.047300000000145e-05, 7.09300000000003e-05, 7.019499999999859e-05, 7.011100000000117e-05, 7.079099999999713e-05, 7.016599999999998e-05, 7.050000000000112e-05, 7.075000000000137e-05, 7.031899999999924e-05, 7.015299999999988e-05, 7.062500000000124e-05, 7.023599999999783e-05, 7.013900000000031e-05, 7.054199999999983e-05, 7.016700000000292e-05, 7.068000000000005e-05, 7.045799999999894e-05, 7.105500000000042e-05, 7.084699999999888e-05, 7.077800000000051e-05, 7.091600000000073e-05, 7.09300000000003e-05, 7.030500000000314e-05, 7.100000000000162e-05, 7.093099999999977e-05, 7.101400000000119e-05, 7.048599999999808e-05, 7.10970000000026e-05, 7.0584000000002e-05, 7.059699999999863e-05, 7.087500000000149e-05, 7.070799999999919e-05, 7.020800000000216e-05, 7.009699999999813e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:47:34.603" endtime="20201117 14:47:34.605"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.598" endtime="20201117 14:47:34.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.608" endtime="20201117 14:47:34.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:34.612" endtime="20201117 14:47:34.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.610" endtime="20201117 14:47:34.632"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.607" endtime="20201117 14:47:34.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.242" endtime="20201117 14:47:34.633"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.240" endtime="20201117 14:47:34.634"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.239" endtime="20201117 14:47:34.634"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.636" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.644" endtime="20201117 14:47:34.663"></status>
</kw>
<msg timestamp="20201117 14:47:34.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.643" endtime="20201117 14:47:34.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:34.665" endtime="20201117 14:47:34.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.668" endtime="20201117 14:47:34.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.640" endtime="20201117 14:47:34.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.638" endtime="20201117 14:47:34.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.677" endtime="20201117 14:47:34.963"></status>
</kw>
<msg timestamp="20201117 14:47:34.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023106958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.675" endtime="20201117 14:47:34.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:34.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023106958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023178389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:34.967" endtime="20201117 14:47:34.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:34.975" endtime="20201117 14:47:34.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.673" endtime="20201117 14:47:34.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.671" endtime="20201117 14:47:34.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:34.982" level="INFO">${RESULT} = [{'time': 0.023178389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.143100000000027e-05, 'source_diff': 7.143100000000027e-05}, {'time': 0.023262431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:34.978" endtime="20201117 14:47:34.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:34.997" level="INFO">${ACCURACY} = {'diff': [7.143100000000027e-05, 7.126400000000144e-05, 7.179200000000108e-05, 7.147299999999898e-05, 7.172199999999976e-05, 7.166699999999748e-05, 7.123599999999883e-05, 7.195800000000044e-05, 7.1610...</msg>
<status status="PASS" starttime="20201117 14:47:34.983" endtime="20201117 14:47:34.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.001" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.000" endtime="20201117 14:47:35.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.004" level="INFO">VALUE: [7.143100000000027e-05, 7.126400000000144e-05, 7.179200000000108e-05, 7.147299999999898e-05, 7.172199999999976e-05, 7.166699999999748e-05, 7.123599999999883e-05, 7.195800000000044e-05, 7.16109999999992e-05, 7.147200000000298e-05, 7.113900000000131e-05, 7.129200000000058e-05, 7.123599999999883e-05, 7.19170000000012e-05, 7.19309999999973e-05, 7.127799999999754e-05, 7.120899999999916e-05, 7.194500000000034e-05, 7.184799999999936e-05, 7.108300000000303e-05, 7.123599999999883e-05, 7.13049999999972e-05, 7.151399999999822e-05, 7.190299999999816e-05, 7.147199999999951e-05, 7.16109999999992e-05, 7.125000000000187e-05, 7.10559999999999e-05, 7.122199999999926e-05, 7.147300000000245e-05, 7.197200000000001e-05, 7.172200000000323e-05, 7.195899999999991e-05, 7.109699999999913e-05, 7.199999999999915e-05, 7.145799999999994e-05, 7.202800000000176e-05, 7.175000000000237e-05, 7.198599999999958e-05, 7.184699999999988e-05, 7.106999999999947e-05, 7.141699999999723e-05, 7.134699999999938e-05, 7.17230000000027e-05, 7.188899999999859e-05, 7.202699999999881e-05, 7.181900000000074e-05, 7.158300000000006e-05, 7.183300000000031e-05, 7.162500000000224e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.002" endtime="20201117 14:47:35.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.997" endtime="20201117 14:47:35.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.007" endtime="20201117 14:47:35.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.010" endtime="20201117 14:47:35.029"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.008" endtime="20201117 14:47:35.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.005" endtime="20201117 14:47:35.030"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.637" endtime="20201117 14:47:35.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.635" endtime="20201117 14:47:35.031"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:34.634" endtime="20201117 14:47:35.031"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.034" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.042" endtime="20201117 14:47:35.060"></status>
</kw>
<msg timestamp="20201117 14:47:35.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.041" endtime="20201117 14:47:35.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.062" endtime="20201117 14:47:35.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.065" endtime="20201117 14:47:35.066"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.038" endtime="20201117 14:47:35.067"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.036" endtime="20201117 14:47:35.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.073" endtime="20201117 14:47:35.360"></status>
</kw>
<msg timestamp="20201117 14:47:35.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:35.072" endtime="20201117 14:47:35.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02249775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:35.364" endtime="20201117 14:47:35.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.372" endtime="20201117 14:47:35.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.069" endtime="20201117 14:47:35.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.068" endtime="20201117 14:47:35.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.379" level="INFO">${RESULT} = [{'time': 0.02249775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.247200000000051e-05, 'source_diff': 7.247200000000051e-05}, {'time': 0.022582736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:47:35.375" endtime="20201117 14:47:35.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.392" level="INFO">${ACCURACY} = {'diff': [7.247200000000051e-05, 7.265299999999891e-05, 7.269400000000162e-05, 7.25560000000014e-05, 7.295800000000144e-05, 7.204200000000133e-05, 7.290300000000263e-05, 7.304199999999886e-05, 7.20979...</msg>
<status status="PASS" starttime="20201117 14:47:35.380" endtime="20201117 14:47:35.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.397" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.396" endtime="20201117 14:47:35.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.399" level="INFO">VALUE: [7.247200000000051e-05, 7.265299999999891e-05, 7.269400000000162e-05, 7.25560000000014e-05, 7.295800000000144e-05, 7.204200000000133e-05, 7.290300000000263e-05, 7.304199999999886e-05, 7.209799999999961e-05, 7.215200000000241e-05, 7.244400000000137e-05, 7.302699999999981e-05, 7.211100000000317e-05, 7.240299999999866e-05, 7.297200000000101e-05, 7.269399999999815e-05, 7.245800000000094e-05, 7.29309999999983e-05, 7.244499999999737e-05, 7.304199999999886e-05, 7.266700000000195e-05, 7.297300000000048e-05, 7.233299999999734e-05, 7.29439999999984e-05, 7.249999999999965e-05, 7.247200000000051e-05, 7.25690000000015e-05, 7.262499999999977e-05, 7.259700000000063e-05, 7.269399999999815e-05, 7.262499999999977e-05, 7.219500000000059e-05, 7.288899999999959e-05, 7.223700000000277e-05, 7.252799999999879e-05, 7.245900000000041e-05, 7.205500000000142e-05, 7.213899999999884e-05, 7.262499999999977e-05, 7.273600000000033e-05, 7.222200000000026e-05, 7.215300000000188e-05, 7.242999999999833e-05, 7.215300000000188e-05, 7.240300000000213e-05, 7.301399999999972e-05, 7.286100000000045e-05, 7.272300000000023e-05, 7.287500000000002e-05, 7.248699999999955e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.398" endtime="20201117 14:47:35.399"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.393" endtime="20201117 14:47:35.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.402" endtime="20201117 14:47:35.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.406" endtime="20201117 14:47:35.425"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.404" endtime="20201117 14:47:35.426"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.400" endtime="20201117 14:47:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.034" endtime="20201117 14:47:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.032" endtime="20201117 14:47:35.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.031" endtime="20201117 14:47:35.427"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.430" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.438" endtime="20201117 14:47:35.457"></status>
</kw>
<msg timestamp="20201117 14:47:35.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.436" endtime="20201117 14:47:35.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.458" endtime="20201117 14:47:35.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.461" endtime="20201117 14:47:35.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.434" endtime="20201117 14:47:35.463"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.431" endtime="20201117 14:47:35.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.470" endtime="20201117 14:47:35.757"></status>
</kw>
<msg timestamp="20201117 14:47:35.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:35.468" endtime="20201117 14:47:35.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:35.761" endtime="20201117 14:47:35.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.769" endtime="20201117 14:47:35.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.466" endtime="20201117 14:47:35.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.464" endtime="20201117 14:47:35.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:35.776" level="INFO">${RESULT} = [{'time': 0.022135097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.384699999999841e-05, 'source_diff': 7.384699999999841e-05}, {'time': 0.022219097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:35.773" endtime="20201117 14:47:35.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:35.790" level="INFO">${ACCURACY} = {'diff': [7.384699999999841e-05, 7.312500000000027e-05, 7.35829999999986e-05, 7.384700000000188e-05, 7.387500000000102e-05, 7.323600000000083e-05, 7.351400000000022e-05, 7.352799999999979e-05, 7.40000...</msg>
<status status="PASS" starttime="20201117 14:47:35.777" endtime="20201117 14:47:35.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.794" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201117 14:47:35.793" endtime="20201117 14:47:35.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.797" level="INFO">VALUE: [7.384699999999841e-05, 7.312500000000027e-05, 7.35829999999986e-05, 7.384700000000188e-05, 7.387500000000102e-05, 7.323600000000083e-05, 7.351400000000022e-05, 7.352799999999979e-05, 7.400000000000115e-05, 7.330599999999868e-05, 7.34309999999988e-05, 7.331899999999877e-05, 7.362500000000077e-05, 7.384700000000188e-05, 7.344400000000237e-05, 7.379100000000013e-05, 7.316599999999951e-05, 7.395900000000191e-05, 7.308300000000156e-05, 7.363900000000034e-05, 7.36110000000012e-05, 7.384800000000136e-05, 7.351400000000022e-05, 7.316599999999951e-05, 7.387500000000102e-05, 7.306899999999852e-05, 7.320800000000169e-05, 7.338900000000009e-05, 7.369399999999915e-05, 7.404199999999986e-05, 7.376400000000047e-05, 7.329199999999911e-05, 7.350000000000065e-05, 7.373600000000133e-05, 7.32500000000004e-05, 7.372300000000123e-05, 7.387499999999755e-05, 7.361200000000068e-05, 7.319400000000212e-05, 7.367999999999958e-05, 7.348600000000108e-05, 7.398599999999811e-05, 7.333300000000181e-05, 7.391699999999973e-05, 7.331899999999877e-05, 7.320899999999769e-05, 7.327799999999954e-05, 7.309800000000061e-05, 7.333400000000129e-05, 7.351300000000074e-05]</msg>
<status status="PASS" starttime="20201117 14:47:35.795" endtime="20201117 14:47:35.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.791" endtime="20201117 14:47:35.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.800" endtime="20201117 14:47:35.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:35.804" endtime="20201117 14:47:35.823"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.802" endtime="20201117 14:47:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.799" endtime="20201117 14:47:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.430" endtime="20201117 14:47:35.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.428" endtime="20201117 14:47:35.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.428" endtime="20201117 14:47:35.825"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.827" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.835" endtime="20201117 14:47:35.854"></status>
</kw>
<msg timestamp="20201117 14:47:35.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.834" endtime="20201117 14:47:35.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:35.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:35.856" endtime="20201117 14:47:35.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.858" endtime="20201117 14:47:35.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.831" endtime="20201117 14:47:35.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.829" endtime="20201117 14:47:35.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:35.867" endtime="20201117 14:47:36.152"></status>
</kw>
<msg timestamp="20201117 14:47:36.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:35.866" endtime="20201117 14:47:36.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021755431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.156" endtime="20201117 14:47:36.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.164" endtime="20201117 14:47:36.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.863" endtime="20201117 14:47:36.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.861" endtime="20201117 14:47:36.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.171" level="INFO">${RESULT} = [{'time': 0.021830236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.48050000000007e-05, 'source_diff': 7.48050000000007e-05}, {'time': 0.02191425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:36.168" endtime="20201117 14:47:36.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.184" level="INFO">${ACCURACY} = {'diff': [7.48050000000007e-05, 7.45829999999996e-05, 7.498599999999911e-05, 7.450000000000165e-05, 7.432000000000272e-05, 7.499999999999868e-05, 7.422300000000173e-05, 7.452800000000079e-05, 7.470799...</msg>
<status status="PASS" starttime="20201117 14:47:36.172" endtime="20201117 14:47:36.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.189" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.188" endtime="20201117 14:47:36.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.192" level="INFO">VALUE: [7.48050000000007e-05, 7.45829999999996e-05, 7.498599999999911e-05, 7.450000000000165e-05, 7.432000000000272e-05, 7.499999999999868e-05, 7.422300000000173e-05, 7.452800000000079e-05, 7.470799999999972e-05, 7.495799999999997e-05, 7.450000000000165e-05, 7.479099999999766e-05, 7.427800000000054e-05, 7.476400000000147e-05, 7.41110000000017e-05, 7.462500000000177e-05, 7.438899999999762e-05, 7.501399999999825e-05, 7.463900000000134e-05, 7.42370000000013e-05, 7.481999999999975e-05, 7.501299999999878e-05, 7.454100000000088e-05, 7.42500000000014e-05, 7.413900000000084e-05, 7.422200000000226e-05, 7.430599999999968e-05, 7.491699999999726e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.501400000000172e-05, 7.477800000000104e-05, 7.415299999999694e-05, 7.417999999999661e-05, 7.405599999999943e-05, 7.468100000000005e-05, 7.413900000000084e-05, 7.423599999999836e-05, 7.470800000000319e-05, 7.463899999999787e-05, 7.429200000000011e-05, 7.434699999999891e-05, 7.411099999999823e-05, 7.480600000000018e-05, 7.452800000000079e-05, 7.504200000000086e-05, 7.469499999999962e-05, 7.495799999999997e-05, 7.452800000000079e-05, 7.479100000000113e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.190" endtime="20201117 14:47:36.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.185" endtime="20201117 14:47:36.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.195" endtime="20201117 14:47:36.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.198" endtime="20201117 14:47:36.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.197" endtime="20201117 14:47:36.218"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.193" endtime="20201117 14:47:36.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.828" endtime="20201117 14:47:36.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.826" endtime="20201117 14:47:36.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:35.825" endtime="20201117 14:47:36.220"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.222" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.230" endtime="20201117 14:47:36.249"></status>
</kw>
<msg timestamp="20201117 14:47:36.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.228" endtime="20201117 14:47:36.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.250" endtime="20201117 14:47:36.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.253" endtime="20201117 14:47:36.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.226" endtime="20201117 14:47:36.255"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.224" endtime="20201117 14:47:36.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.262" endtime="20201117 14:47:36.547"></status>
</kw>
<msg timestamp="20201117 14:47:36.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.260" endtime="20201117 14:47:36.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022619222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.551" endtime="20201117 14:47:36.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.560" endtime="20201117 14:47:36.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.258" endtime="20201117 14:47:36.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.256" endtime="20201117 14:47:36.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.566" level="INFO">${RESULT} = [{'time': 0.022694903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568099999999758e-05, 'source_diff': 7.568099999999758e-05}, {'time': 0.022778917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.563" endtime="20201117 14:47:36.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.582" level="INFO">${ACCURACY} = {'diff': [7.568099999999758e-05, 7.574999999999943e-05, 7.573599999999986e-05, 7.54310000000008e-05, 7.563899999999887e-05, 7.601399999999925e-05, 7.52769999999986e-05, 7.524999999999893e-05, 7.572200...</msg>
<status status="PASS" starttime="20201117 14:47:36.568" endtime="20201117 14:47:36.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.586" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.585" endtime="20201117 14:47:36.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.589" level="INFO">VALUE: [7.568099999999758e-05, 7.574999999999943e-05, 7.573599999999986e-05, 7.54310000000008e-05, 7.563899999999887e-05, 7.601399999999925e-05, 7.52769999999986e-05, 7.524999999999893e-05, 7.572200000000029e-05, 7.541699999999776e-05, 7.550000000000265e-05, 7.590300000000216e-05, 7.591700000000173e-05, 7.595900000000044e-05, 7.569499999999715e-05, 7.548600000000308e-05, 7.584799999999989e-05, 7.583300000000084e-05, 7.579099999999866e-05, 7.504099999999791e-05, 7.577800000000204e-05, 7.592999999999836e-05, 7.533300000000034e-05, 7.59449999999974e-05, 7.572200000000029e-05, 7.568100000000105e-05, 7.522199999999979e-05, 7.577800000000204e-05, 7.548599999999961e-05, 7.532000000000025e-05, 7.506900000000052e-05, 7.506899999999705e-05, 7.541600000000176e-05, 7.598600000000011e-05, 7.598600000000011e-05, 7.529200000000111e-05, 7.523599999999936e-05, 7.520800000000022e-05, 7.519500000000012e-05, 7.595900000000044e-05, 7.570900000000019e-05, 7.5763000000003e-05, 7.594500000000087e-05, 7.50830000000001e-05, 7.544399999999743e-05, 7.536099999999948e-05, 7.544399999999743e-05, 7.531900000000077e-05, 7.547200000000004e-05, 7.520800000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.587" endtime="20201117 14:47:36.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.583" endtime="20201117 14:47:36.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.592" endtime="20201117 14:47:36.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.595" endtime="20201117 14:47:36.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.594" endtime="20201117 14:47:36.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.590" endtime="20201117 14:47:36.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.222" endtime="20201117 14:47:36.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.221" endtime="20201117 14:47:36.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.220" endtime="20201117 14:47:36.616"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.627" endtime="20201117 14:47:36.646"></status>
</kw>
<msg timestamp="20201117 14:47:36.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.625" endtime="20201117 14:47:36.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:36.647" endtime="20201117 14:47:36.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.650" endtime="20201117 14:47:36.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.623" endtime="20201117 14:47:36.652"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.621" endtime="20201117 14:47:36.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.659" endtime="20201117 14:47:36.944"></status>
</kw>
<msg timestamp="20201117 14:47:36.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.657" endtime="20201117 14:47:36.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021670792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:36.948" endtime="20201117 14:47:36.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.956" endtime="20201117 14:47:36.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.655" endtime="20201117 14:47:36.959"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.653" endtime="20201117 14:47:36.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:36.963" level="INFO">${RESULT} = [{'time': 0.021747236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.644399999999843e-05, 'source_diff': 7.644399999999843e-05}, {'time': 0.021835194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:36.960" endtime="20201117 14:47:36.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:36.977" level="INFO">${ACCURACY} = {'diff': [7.644399999999843e-05, 7.620799999999775e-05, 7.691699999999926e-05, 7.651399999999975e-05, 7.611100000000023e-05, 7.665299999999944e-05, 7.666699999999901e-05, 7.673600000000086e-05, 7.6291...</msg>
<status status="PASS" starttime="20201117 14:47:36.964" endtime="20201117 14:47:36.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.981" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201117 14:47:36.980" endtime="20201117 14:47:36.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:36.984" level="INFO">VALUE: [7.644399999999843e-05, 7.620799999999775e-05, 7.691699999999926e-05, 7.651399999999975e-05, 7.611100000000023e-05, 7.665299999999944e-05, 7.666699999999901e-05, 7.673600000000086e-05, 7.629199999999864e-05, 7.64310000000018e-05, 7.684700000000141e-05, 7.673600000000086e-05, 7.697200000000154e-05, 7.698700000000058e-05, 7.647300000000051e-05, 7.6070000000001e-05, 7.651399999999975e-05, 7.679099999999967e-05, 7.638899999999962e-05, 7.705499999999949e-05, 7.655599999999846e-05, 7.663899999999987e-05, 7.652699999999985e-05, 7.634700000000091e-05, 7.663899999999987e-05, 7.669499999999815e-05, 7.645900000000094e-05, 7.688900000000012e-05, 7.680499999999923e-05, 7.616599999999904e-05, 7.679099999999967e-05, 7.684700000000141e-05, 7.622200000000079e-05, 7.701400000000025e-05, 7.648600000000061e-05, 7.681999999999828e-05, 7.709700000000166e-05, 7.682000000000175e-05, 7.683299999999837e-05, 7.619500000000112e-05, 7.630600000000168e-05, 7.68189999999988e-05, 7.659700000000116e-05, 7.677800000000304e-05, 7.675000000000043e-05, 7.637500000000005e-05, 7.641700000000223e-05, 7.641699999999876e-05, 7.648600000000061e-05, 7.652799999999932e-05]</msg>
<status status="PASS" starttime="20201117 14:47:36.982" endtime="20201117 14:47:36.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.978" endtime="20201117 14:47:36.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:36.987" endtime="20201117 14:47:36.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:36.990" endtime="20201117 14:47:37.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.988" endtime="20201117 14:47:37.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.985" endtime="20201117 14:47:37.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.619" endtime="20201117 14:47:37.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.617" endtime="20201117 14:47:37.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:36.617" endtime="20201117 14:47:37.011"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.014" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.022" endtime="20201117 14:47:37.039"></status>
</kw>
<msg timestamp="20201117 14:47:37.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.020" endtime="20201117 14:47:37.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.040" endtime="20201117 14:47:37.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.043" endtime="20201117 14:47:37.044"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.018" endtime="20201117 14:47:37.045"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.016" endtime="20201117 14:47:37.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.052" endtime="20201117 14:47:37.338"></status>
</kw>
<msg timestamp="20201117 14:47:37.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.050" endtime="20201117 14:47:37.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.342" endtime="20201117 14:47:37.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.350" endtime="20201117 14:47:37.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.048" endtime="20201117 14:47:37.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.046" endtime="20201117 14:47:37.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.357" level="INFO">${RESULT} = [{'time': 0.022066111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.755499999999999e-05, 'source_diff': 7.755499999999999e-05}, {'time': 0.022152125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.353" endtime="20201117 14:47:37.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.370" level="INFO">${ACCURACY} = {'diff': [7.755499999999999e-05, 7.784700000000241e-05, 7.804200000000039e-05, 7.780599999999971e-05, 7.743099999999933e-05, 7.72640000000005e-05, 7.712499999999733e-05, 7.734800000000139e-05, 7.77220...</msg>
<status status="PASS" starttime="20201117 14:47:37.358" endtime="20201117 14:47:37.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.375" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.374" endtime="20201117 14:47:37.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.377" level="INFO">VALUE: [7.755499999999999e-05, 7.784700000000241e-05, 7.804200000000039e-05, 7.780599999999971e-05, 7.743099999999933e-05, 7.72640000000005e-05, 7.712499999999733e-05, 7.734800000000139e-05, 7.772200000000229e-05, 7.76519999999975e-05, 7.7764000000001e-05, 7.798600000000211e-05, 7.793000000000036e-05, 7.765300000000044e-05, 7.791700000000026e-05, 7.798600000000211e-05, 7.754199999999989e-05, 7.724999999999746e-05, 7.786199999999799e-05, 7.797299999999854e-05, 7.754199999999989e-05, 7.70830000000021e-05, 7.770799999999925e-05, 7.719399999999918e-05, 7.727800000000007e-05, 7.79030000000007e-05, 7.773600000000186e-05, 7.711100000000123e-05, 7.727800000000007e-05, 7.766700000000001e-05, 7.733400000000182e-05, 7.737500000000105e-05, 7.74449999999989e-05, 7.713900000000037e-05, 7.804200000000039e-05, 7.775000000000143e-05, 7.738900000000062e-05, 7.727800000000007e-05, 7.71250000000008e-05, 7.737500000000105e-05, 7.7457999999999e-05, 7.779200000000014e-05, 7.805599999999996e-05, 7.719500000000212e-05, 7.704199999999939e-05, 7.772199999999882e-05, 7.748599999999814e-05, 7.72770000000006e-05, 7.798600000000211e-05, 7.71250000000008e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.376" endtime="20201117 14:47:37.378"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.371" endtime="20201117 14:47:37.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.380" endtime="20201117 14:47:37.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.384" endtime="20201117 14:47:37.403"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.382" endtime="20201117 14:47:37.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.379" endtime="20201117 14:47:37.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.014" endtime="20201117 14:47:37.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.012" endtime="20201117 14:47:37.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.012" endtime="20201117 14:47:37.405"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.407" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.415" endtime="20201117 14:47:37.434"></status>
</kw>
<msg timestamp="20201117 14:47:37.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.414" endtime="20201117 14:47:37.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.436" endtime="20201117 14:47:37.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.439" endtime="20201117 14:47:37.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.411" endtime="20201117 14:47:37.441"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.409" endtime="20201117 14:47:37.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.448" endtime="20201117 14:47:37.732"></status>
</kw>
<msg timestamp="20201117 14:47:37.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.446" endtime="20201117 14:47:37.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.736" endtime="20201117 14:47:37.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.744" endtime="20201117 14:47:37.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.444" endtime="20201117 14:47:37.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.442" endtime="20201117 14:47:37.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:37.751" level="INFO">${RESULT} = [{'time': 0.022310264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.884699999999994e-05, 'source_diff': 7.884699999999994e-05}, {'time': 0.022402278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:37.748" endtime="20201117 14:47:37.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:37.765" level="INFO">${ACCURACY} = {'diff': [7.884699999999994e-05, 7.884699999999994e-05, 7.905600000000096e-05, 7.873599999999939e-05, 7.855599999999699e-05, 7.898599999999964e-05, 7.898599999999964e-05, 7.869400000000068e-05, 7.8569...</msg>
<status status="PASS" starttime="20201117 14:47:37.752" endtime="20201117 14:47:37.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.769" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201117 14:47:37.768" endtime="20201117 14:47:37.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.771" level="INFO">VALUE: [7.884699999999994e-05, 7.884699999999994e-05, 7.905600000000096e-05, 7.873599999999939e-05, 7.855599999999699e-05, 7.898599999999964e-05, 7.898599999999964e-05, 7.869400000000068e-05, 7.856900000000056e-05, 7.822200000000279e-05, 7.873600000000286e-05, 7.8458e-05, 7.911099999999976e-05, 7.840299999999772e-05, 7.863900000000187e-05, 7.895899999999997e-05, 7.820899999999922e-05, 7.824999999999846e-05, 7.854099999999795e-05, 7.8764000000002e-05, 7.812499999999833e-05, 7.824999999999846e-05, 7.8764000000002e-05, 7.847199999999957e-05, 7.879199999999767e-05, 7.811099999999876e-05, 7.826399999999803e-05, 7.847299999999904e-05, 7.893099999999736e-05, 7.887499999999908e-05, 7.847199999999957e-05, 7.85969999999997e-05, 7.902800000000182e-05, 7.867999999999764e-05, 7.844400000000043e-05, 7.822199999999932e-05, 7.826399999999803e-05, 7.812499999999833e-05, 7.874999999999896e-05, 7.891700000000126e-05, 7.881999999999681e-05, 7.893100000000083e-05, 7.837499999999858e-05, 7.849999999999871e-05, 7.850000000000218e-05, 7.898599999999964e-05, 7.854100000000142e-05, 7.834699999999944e-05, 7.854200000000089e-05, 7.825000000000193e-05]</msg>
<status status="PASS" starttime="20201117 14:47:37.770" endtime="20201117 14:47:37.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.765" endtime="20201117 14:47:37.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.775" endtime="20201117 14:47:37.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:37.778" endtime="20201117 14:47:37.797"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.776" endtime="20201117 14:47:37.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.773" endtime="20201117 14:47:37.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.408" endtime="20201117 14:47:37.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.406" endtime="20201117 14:47:37.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.405" endtime="20201117 14:47:37.799"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.801" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.810" endtime="20201117 14:47:37.829"></status>
</kw>
<msg timestamp="20201117 14:47:37.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.808" endtime="20201117 14:47:37.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:37.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:37.830" endtime="20201117 14:47:37.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.833" endtime="20201117 14:47:37.834"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.805" endtime="20201117 14:47:37.835"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.803" endtime="20201117 14:47:37.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:37.842" endtime="20201117 14:47:38.127"></status>
</kw>
<msg timestamp="20201117 14:47:38.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:37.840" endtime="20201117 14:47:38.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.131" endtime="20201117 14:47:38.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.139" endtime="20201117 14:47:38.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.838" endtime="20201117 14:47:38.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.836" endtime="20201117 14:47:38.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.146" level="INFO">${RESULT} = [{'time': 0.023052194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.974999999999996e-05, 'source_diff': 7.974999999999996e-05}, {'time': 0.023139194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.143" endtime="20201117 14:47:38.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.161" level="INFO">${ACCURACY} = {'diff': [7.974999999999996e-05, 7.920799999999728e-05, 7.941600000000229e-05, 7.933300000000088e-05, 7.90970000000002e-05, 7.96389999999994e-05, 7.980499999999877e-05, 7.99030000000027e-05, 7.9264000...</msg>
<status status="PASS" starttime="20201117 14:47:38.147" endtime="20201117 14:47:38.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.165" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.164" endtime="20201117 14:47:38.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.168" level="INFO">VALUE: [7.974999999999996e-05, 7.920799999999728e-05, 7.941600000000229e-05, 7.933300000000088e-05, 7.90970000000002e-05, 7.96389999999994e-05, 7.980499999999877e-05, 7.99030000000027e-05, 7.92640000000025e-05, 7.987500000000008e-05, 7.987500000000008e-05, 7.943000000000186e-05, 8.004199999999892e-05, 7.976399999999953e-05, 7.917999999999814e-05, 7.949999999999971e-05, 7.970800000000125e-05, 7.955500000000199e-05, 7.905499999999802e-05, 7.980500000000224e-05, 7.998600000000064e-05, 8.002799999999935e-05, 7.907000000000053e-05, 7.916699999999804e-05, 8.000000000000021e-05, 7.979200000000214e-05, 7.923699999999936e-05, 7.980499999999877e-05, 7.972200000000082e-05, 7.991599999999932e-05, 7.920799999999728e-05, 7.924999999999946e-05, 7.930600000000121e-05, 7.926399999999903e-05, 7.952800000000232e-05, 7.923599999999989e-05, 7.961100000000026e-05, 7.934700000000044e-05, 7.993099999999836e-05, 7.920799999999728e-05, 7.937499999999958e-05, 7.966599999999907e-05, 7.924999999999946e-05, 7.929200000000164e-05, 7.962499999999983e-05, 7.922200000000032e-05, 7.998600000000064e-05, 7.982000000000128e-05, 7.943099999999786e-05, 7.977800000000257e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.166" endtime="20201117 14:47:38.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.162" endtime="20201117 14:47:38.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.171" endtime="20201117 14:47:38.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.174" endtime="20201117 14:47:38.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.172" endtime="20201117 14:47:38.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.169" endtime="20201117 14:47:38.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.802" endtime="20201117 14:47:38.195"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.800" endtime="20201117 14:47:38.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:37.799" endtime="20201117 14:47:38.196"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.198" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.206" endtime="20201117 14:47:38.223"></status>
</kw>
<msg timestamp="20201117 14:47:38.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.205" endtime="20201117 14:47:38.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.225" endtime="20201117 14:47:38.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.227" endtime="20201117 14:47:38.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.202" endtime="20201117 14:47:38.230"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.200" endtime="20201117 14:47:38.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.236" endtime="20201117 14:47:38.522"></status>
</kw>
<msg timestamp="20201117 14:47:38.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.235" endtime="20201117 14:47:38.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.526" endtime="20201117 14:47:38.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.534" endtime="20201117 14:47:38.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.232" endtime="20201117 14:47:38.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.231" endtime="20201117 14:47:38.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.541" level="INFO">${RESULT} = [{'time': 0.022165764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.09450000000024e-05, 'source_diff': 8.09450000000024e-05}, {'time': 0.022253778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:38.537" endtime="20201117 14:47:38.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.554" level="INFO">${ACCURACY} = {'diff': [8.09450000000024e-05, 8.029199999999917e-05, 8.094499999999893e-05, 8.070899999999825e-05, 8.073700000000086e-05, 8.013800000000043e-05, 8.076300000000106e-05, 8.037500000000058e-05, 8.07360...</msg>
<status status="PASS" starttime="20201117 14:47:38.542" endtime="20201117 14:47:38.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.559" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.558" endtime="20201117 14:47:38.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.561" level="INFO">VALUE: [8.09450000000024e-05, 8.029199999999917e-05, 8.094499999999893e-05, 8.070899999999825e-05, 8.073700000000086e-05, 8.013800000000043e-05, 8.076300000000106e-05, 8.037500000000058e-05, 8.073600000000139e-05, 8.025000000000046e-05, 8.050000000000071e-05, 8.066699999999954e-05, 8.098600000000164e-05, 8.033300000000188e-05, 8.076400000000053e-05, 8.023600000000089e-05, 8.047300000000104e-05, 8.020799999999828e-05, 8.097200000000207e-05, 8.011100000000076e-05, 8.069399999999921e-05, 8.055499999999952e-05, 8.038900000000015e-05, 8.105600000000296e-05, 8.038900000000015e-05, 8.102800000000035e-05, 8.00840000000011e-05, 8.032000000000178e-05, 8.099999999999774e-05, 8.030600000000221e-05, 8.083300000000238e-05, 8.088799999999771e-05, 8.092999999999989e-05, 8.04719999999981e-05, 8.03190000000023e-05, 8.084700000000195e-05, 8.055599999999899e-05, 8.069499999999868e-05, 8.016699999999904e-05, 8.069500000000215e-05, 8.088900000000065e-05, 8.065299999999997e-05, 8.0152e-05, 8.03190000000023e-05, 8.061100000000126e-05, 8.074999999999749e-05, 8.012500000000033e-05, 8.075000000000096e-05, 8.030600000000221e-05, 8.056900000000256e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.560" endtime="20201117 14:47:38.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.555" endtime="20201117 14:47:38.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.565" endtime="20201117 14:47:38.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.568" endtime="20201117 14:47:38.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.566" endtime="20201117 14:47:38.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.563" endtime="20201117 14:47:38.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.199" endtime="20201117 14:47:38.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.197" endtime="20201117 14:47:38.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.196" endtime="20201117 14:47:38.589"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.591" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.600" endtime="20201117 14:47:38.619"></status>
</kw>
<msg timestamp="20201117 14:47:38.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.598" endtime="20201117 14:47:38.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.620" endtime="20201117 14:47:38.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.623" endtime="20201117 14:47:38.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.596" endtime="20201117 14:47:38.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.593" endtime="20201117 14:47:38.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.632" endtime="20201117 14:47:38.916"></status>
</kw>
<msg timestamp="20201117 14:47:38.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.630" endtime="20201117 14:47:38.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:38.920" endtime="20201117 14:47:38.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.929" endtime="20201117 14:47:38.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.628" endtime="20201117 14:47:38.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.626" endtime="20201117 14:47:38.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:38.936" level="INFO">${RESULT} = [{'time': 0.021756181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.134799999999845e-05, 'source_diff': 8.134799999999845e-05}, {'time': 0.021847194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:38.932" endtime="20201117 14:47:38.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:38.949" level="INFO">${ACCURACY} = {'diff': [8.134799999999845e-05, 8.163800000000193e-05, 8.131899999999984e-05, 8.136099999999855e-05, 8.126399999999756e-05, 8.199999999999874e-05, 8.12780000000006e-05, 8.169499999999968e-05, 8.14860...</msg>
<status status="PASS" starttime="20201117 14:47:38.936" endtime="20201117 14:47:38.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.953" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201117 14:47:38.952" endtime="20201117 14:47:38.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.956" level="INFO">VALUE: [8.134799999999845e-05, 8.163800000000193e-05, 8.131899999999984e-05, 8.136099999999855e-05, 8.126399999999756e-05, 8.199999999999874e-05, 8.12780000000006e-05, 8.169499999999968e-05, 8.148600000000214e-05, 8.125000000000146e-05, 8.118099999999961e-05, 8.165300000000097e-05, 8.150000000000171e-05, 8.15130000000018e-05, 8.19719999999996e-05, 8.188900000000165e-05, 8.12780000000006e-05, 8.186100000000252e-05, 8.173600000000239e-05, 8.179200000000067e-05, 8.200000000000221e-05, 8.19170000000008e-05, 8.187500000000208e-05, 8.105599999999949e-05, 8.198700000000211e-05, 8.11390000000009e-05, 8.20269999999984e-05, 8.123600000000189e-05, 8.19170000000008e-05, 8.198599999999917e-05, 8.161200000000174e-05, 8.194499999999993e-05, 8.143099999999986e-05, 8.194499999999993e-05, 8.148599999999867e-05, 8.15979999999987e-05, 8.118000000000014e-05, 8.17910000000012e-05, 8.19719999999996e-05, 8.12910000000007e-05, 8.190300000000122e-05, 8.148599999999867e-05, 8.125000000000146e-05, 8.188900000000165e-05, 8.180600000000024e-05, 8.11390000000009e-05, 8.172200000000282e-05, 8.154100000000095e-05, 8.161100000000227e-05, 8.156900000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:47:38.955" endtime="20201117 14:47:38.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.950" endtime="20201117 14:47:38.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.959" endtime="20201117 14:47:38.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:38.963" endtime="20201117 14:47:38.982"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.961" endtime="20201117 14:47:38.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.958" endtime="20201117 14:47:38.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.592" endtime="20201117 14:47:38.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.590" endtime="20201117 14:47:38.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.589" endtime="20201117 14:47:38.984"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:38.986" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:38.995" endtime="20201117 14:47:39.013"></status>
</kw>
<msg timestamp="20201117 14:47:39.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:38.993" endtime="20201117 14:47:39.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.015" endtime="20201117 14:47:39.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.017" endtime="20201117 14:47:39.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.990" endtime="20201117 14:47:39.019"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.988" endtime="20201117 14:47:39.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.026" endtime="20201117 14:47:39.311"></status>
</kw>
<msg timestamp="20201117 14:47:39.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.025" endtime="20201117 14:47:39.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.316" endtime="20201117 14:47:39.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.324" endtime="20201117 14:47:39.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.022" endtime="20201117 14:47:39.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.020" endtime="20201117 14:47:39.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.331" level="INFO">${RESULT} = [{'time': 0.021833667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.250000000000271e-05, 'source_diff': 8.250000000000271e-05}, {'time': 0.021926653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.327" endtime="20201117 14:47:39.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.349" level="INFO">${ACCURACY} = {'diff': [8.250000000000271e-05, 8.222199999999985e-05, 8.280600000000124e-05, 8.232000000000031e-05, 8.213899999999844e-05, 8.281900000000134e-05, 8.252799999999838e-05, 8.276399999999906e-05, 8.2139...</msg>
<status status="PASS" starttime="20201117 14:47:39.336" endtime="20201117 14:47:39.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.353" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.352" endtime="20201117 14:47:39.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.356" level="INFO">VALUE: [8.250000000000271e-05, 8.222199999999985e-05, 8.280600000000124e-05, 8.232000000000031e-05, 8.213899999999844e-05, 8.281900000000134e-05, 8.252799999999838e-05, 8.276399999999906e-05, 8.21390000000019e-05, 8.251400000000228e-05, 8.293100000000136e-05, 8.255600000000099e-05, 8.215199999999853e-05, 8.21390000000019e-05, 8.258400000000013e-05, 8.219500000000018e-05, 8.27910000000022e-05, 8.208300000000016e-05, 8.277799999999863e-05, 8.220800000000028e-05, 8.227799999999813e-05, 8.290299999999876e-05, 8.265300000000197e-05, 8.272200000000035e-05, 8.207000000000006e-05, 8.208399999999963e-05, 8.205600000000049e-05, 8.282000000000081e-05, 8.305499999999855e-05, 8.212500000000234e-05, 8.277799999999863e-05, 8.299999999999974e-05, 8.248599999999967e-05, 8.272200000000035e-05, 8.22780000000016e-05, 8.284700000000048e-05, 8.212499999999887e-05, 8.294500000000093e-05, 8.268100000000111e-05, 8.273599999999992e-05, 8.213899999999844e-05, 8.234699999999998e-05, 8.223599999999942e-05, 8.29590000000005e-05, 8.286100000000005e-05, 8.26390000000024e-05, 8.220799999999681e-05, 8.24170000000013e-05, 8.276399999999906e-05, 8.274999999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.354" endtime="20201117 14:47:39.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.350" endtime="20201117 14:47:39.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.359" endtime="20201117 14:47:39.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.362" endtime="20201117 14:47:39.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.361" endtime="20201117 14:47:39.382"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.357" endtime="20201117 14:47:39.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.987" endtime="20201117 14:47:39.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.985" endtime="20201117 14:47:39.383"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:38.984" endtime="20201117 14:47:39.383"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.386" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.394" endtime="20201117 14:47:39.413"></status>
</kw>
<msg timestamp="20201117 14:47:39.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.392" endtime="20201117 14:47:39.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.415" endtime="20201117 14:47:39.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.417" endtime="20201117 14:47:39.419"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.390" endtime="20201117 14:47:39.420"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.388" endtime="20201117 14:47:39.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.426" endtime="20201117 14:47:39.712"></status>
</kw>
<msg timestamp="20201117 14:47:39.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.425" endtime="20201117 14:47:39.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.716" endtime="20201117 14:47:39.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.725" endtime="20201117 14:47:39.726"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.422" endtime="20201117 14:47:39.727"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.421" endtime="20201117 14:47:39.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:39.731" level="INFO">${RESULT} = [{'time': 0.022674694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.397199999999813e-05, 'source_diff': 8.397199999999813e-05}, {'time': 0.022766681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:39.728" endtime="20201117 14:47:39.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:39.746" level="INFO">${ACCURACY} = {'diff': [8.397199999999813e-05, 8.404199999999945e-05, 8.370799999999831e-05, 8.388800000000071e-05, 8.329099999999923e-05, 8.344400000000196e-05, 8.320800000000128e-05, 8.304200000000192e-05, 8.3403...</msg>
<status status="PASS" starttime="20201117 14:47:39.732" endtime="20201117 14:47:39.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.751" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201117 14:47:39.750" endtime="20201117 14:47:39.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.753" level="INFO">VALUE: [8.397199999999813e-05, 8.404199999999945e-05, 8.370799999999831e-05, 8.388800000000071e-05, 8.329099999999923e-05, 8.344400000000196e-05, 8.320800000000128e-05, 8.304200000000192e-05, 8.340300000000272e-05, 8.374999999999702e-05, 8.348600000000067e-05, 8.347300000000057e-05, 8.306999999999759e-05, 8.355599999999852e-05, 8.384700000000148e-05, 8.365200000000003e-05, 8.33330000000014e-05, 8.33469999999975e-05, 8.352799999999938e-05, 8.326399999999956e-05, 8.38330000000019e-05, 8.334700000000098e-05, 8.387500000000062e-05, 8.39590000000015e-05, 8.375000000000049e-05, 8.30980000000002e-05, 8.404099999999998e-05, 8.365300000000297e-05, 8.398600000000117e-05, 8.334700000000098e-05, 8.3846999999998e-05, 8.32919999999987e-05, 8.404199999999945e-05, 8.354199999999895e-05, 8.351399999999981e-05, 8.388900000000019e-05, 8.370900000000125e-05, 8.311199999999977e-05, 8.39859999999977e-05, 8.3846999999998e-05, 8.373599999999745e-05, 8.36659999999996e-05, 8.365300000000297e-05, 8.323600000000042e-05, 8.317999999999867e-05, 8.359700000000123e-05, 8.395899999999804e-05, 8.3152999999999e-05, 8.370900000000125e-05, 8.318100000000161e-05]</msg>
<status status="PASS" starttime="20201117 14:47:39.752" endtime="20201117 14:47:39.754"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.747" endtime="20201117 14:47:39.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.756" endtime="20201117 14:47:39.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:39.760" endtime="20201117 14:47:39.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.758" endtime="20201117 14:47:39.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.755" endtime="20201117 14:47:39.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.386" endtime="20201117 14:47:39.780"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.384" endtime="20201117 14:47:39.781"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.384" endtime="20201117 14:47:39.781"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.783" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.791" endtime="20201117 14:47:39.811"></status>
</kw>
<msg timestamp="20201117 14:47:39.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.790" endtime="20201117 14:47:39.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:39.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:39.812" endtime="20201117 14:47:39.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.815" endtime="20201117 14:47:39.816"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.787" endtime="20201117 14:47:39.817"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.785" endtime="20201117 14:47:39.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:39.824" endtime="20201117 14:47:40.110"></status>
</kw>
<msg timestamp="20201117 14:47:40.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:39.822" endtime="20201117 14:47:40.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021575056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.114" endtime="20201117 14:47:40.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.122" endtime="20201117 14:47:40.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.820" endtime="20201117 14:47:40.124"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.818" endtime="20201117 14:47:40.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.129" level="INFO">${RESULT} = [{'time': 0.021659542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.448600000000167e-05, 'source_diff': 8.448600000000167e-05}, {'time': 0.021755528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.126" endtime="20201117 14:47:40.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.142" level="INFO">${ACCURACY} = {'diff': [8.448600000000167e-05, 8.497199999999913e-05, 8.49590000000025e-05, 8.468000000000017e-05, 8.426400000000056e-05, 8.502799999999741e-05, 8.43049999999998e-05, 8.468000000000017e-05, 8.495799...</msg>
<status status="PASS" starttime="20201117 14:47:40.130" endtime="20201117 14:47:40.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.147" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.146" endtime="20201117 14:47:40.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.149" level="INFO">VALUE: [8.448600000000167e-05, 8.497199999999913e-05, 8.49590000000025e-05, 8.468000000000017e-05, 8.426400000000056e-05, 8.502799999999741e-05, 8.43049999999998e-05, 8.468000000000017e-05, 8.495799999999956e-05, 8.44720000000021e-05, 8.46530000000005e-05, 8.472199999999888e-05, 8.497199999999913e-05, 8.499999999999827e-05, 8.497300000000207e-05, 8.484799999999848e-05, 8.49859999999987e-05, 8.422199999999838e-05, 8.48050000000003e-05, 8.488900000000119e-05, 8.470799999999931e-05, 8.456899999999962e-05, 8.42919999999997e-05, 8.44859999999982e-05, 8.483399999999891e-05, 8.420899999999829e-05, 8.442999999999992e-05, 8.443100000000286e-05, 8.476300000000159e-05, 8.481899999999987e-05, 8.454199999999995e-05, 8.4846999999999e-05, 8.477800000000063e-05, 8.427800000000013e-05, 8.451400000000081e-05, 8.451399999999734e-05, 8.404200000000292e-05, 8.477800000000063e-05, 8.504100000000098e-05, 8.479100000000073e-05, 8.441600000000035e-05, 8.479100000000073e-05, 8.405499999999955e-05, 8.42919999999997e-05, 8.436100000000155e-05, 8.470800000000278e-05, 8.46249999999979e-05, 8.454199999999995e-05, 8.505600000000002e-05, 8.483399999999891e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.148" endtime="20201117 14:47:40.150"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.143" endtime="20201117 14:47:40.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.152" endtime="20201117 14:47:40.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.156" endtime="20201117 14:47:40.175"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.154" endtime="20201117 14:47:40.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.151" endtime="20201117 14:47:40.176"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.784" endtime="20201117 14:47:40.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.782" endtime="20201117 14:47:40.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:39.781" endtime="20201117 14:47:40.177"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.179" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.187" endtime="20201117 14:47:40.206"></status>
</kw>
<msg timestamp="20201117 14:47:40.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.186" endtime="20201117 14:47:40.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.207" endtime="20201117 14:47:40.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.210" endtime="20201117 14:47:40.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.183" endtime="20201117 14:47:40.212"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.181" endtime="20201117 14:47:40.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.219" endtime="20201117 14:47:40.505"></status>
</kw>
<msg timestamp="20201117 14:47:40.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.218" endtime="20201117 14:47:40.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021654139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.509" endtime="20201117 14:47:40.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.517" endtime="20201117 14:47:40.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.215" endtime="20201117 14:47:40.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.213" endtime="20201117 14:47:40.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.524" level="INFO">${RESULT} = [{'time': 0.021739833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.569400000000074e-05, 'source_diff': 8.569400000000074e-05}, {'time': 0.021834833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.520" endtime="20201117 14:47:40.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.537" level="INFO">${ACCURACY} = {'diff': [8.569400000000074e-05, 8.565200000000203e-05, 8.604200000000145e-05, 8.590299999999829e-05, 8.588900000000219e-05, 8.580600000000077e-05, 8.601399999999884e-05, 8.54310000000004e-05, 8.53889...</msg>
<status status="PASS" starttime="20201117 14:47:40.525" endtime="20201117 14:47:40.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.542" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.541" endtime="20201117 14:47:40.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.544" level="INFO">VALUE: [8.569400000000074e-05, 8.565200000000203e-05, 8.604200000000145e-05, 8.590299999999829e-05, 8.588900000000219e-05, 8.580600000000077e-05, 8.601399999999884e-05, 8.54310000000004e-05, 8.538899999999822e-05, 8.529199999999723e-05, 8.570899999999979e-05, 8.513799999999849e-05, 8.531900000000037e-05, 8.583300000000044e-05, 8.520799999999981e-05, 8.508300000000316e-05, 8.533299999999994e-05, 8.582000000000034e-05, 8.56669999999976e-05, 8.558399999999966e-05, 8.555600000000052e-05, 8.56799999999977e-05, 8.56660000000016e-05, 8.568000000000117e-05, 8.579199999999773e-05, 8.516599999999763e-05, 8.520799999999981e-05, 8.597200000000013e-05, 8.591700000000133e-05, 8.548699999999868e-05, 8.582000000000034e-05, 8.570899999999979e-05, 8.56530000000015e-05, 8.554100000000148e-05, 8.555499999999758e-05, 8.569400000000074e-05, 8.574999999999902e-05, 8.519399999999677e-05, 8.576399999999859e-05, 8.570799999999684e-05, 8.54859999999992e-05, 8.527799999999766e-05, 8.602800000000188e-05, 8.594500000000047e-05, 8.54729999999991e-05, 8.595900000000004e-05, 8.555499999999758e-05, 8.522199999999938e-05, 8.523600000000242e-05, 8.554200000000095e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.543" endtime="20201117 14:47:40.545"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.538" endtime="20201117 14:47:40.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.547" endtime="20201117 14:47:40.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.551" endtime="20201117 14:47:40.570"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.549" endtime="20201117 14:47:40.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.546" endtime="20201117 14:47:40.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.180" endtime="20201117 14:47:40.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.178" endtime="20201117 14:47:40.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.177" endtime="20201117 14:47:40.572"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.574" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.583" endtime="20201117 14:47:40.602"></status>
</kw>
<msg timestamp="20201117 14:47:40.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.581" endtime="20201117 14:47:40.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.603" endtime="20201117 14:47:40.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.606" endtime="20201117 14:47:40.607"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.578" endtime="20201117 14:47:40.608"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.576" endtime="20201117 14:47:40.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.615" endtime="20201117 14:47:40.900"></status>
</kw>
<msg timestamp="20201117 14:47:40.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.613" endtime="20201117 14:47:40.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:40.905" endtime="20201117 14:47:40.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.913" endtime="20201117 14:47:40.914"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.611" endtime="20201117 14:47:40.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.609" endtime="20201117 14:47:40.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:40.919" level="INFO">${RESULT} = [{'time': 0.022298208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.630499999999833e-05, 'source_diff': 8.630499999999833e-05}, {'time': 0.022396292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:40.916" endtime="20201117 14:47:40.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:40.933" level="INFO">${ACCURACY} = {'diff': [8.630499999999833e-05, 8.654200000000195e-05, 8.688899999999972e-05, 8.695800000000156e-05, 8.633299999999747e-05, 8.624999999999952e-05, 8.672300000000036e-05, 8.701399999999984e-05, 8.6472...</msg>
<status status="PASS" starttime="20201117 14:47:40.920" endtime="20201117 14:47:40.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.937" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201117 14:47:40.936" endtime="20201117 14:47:40.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.940" level="INFO">VALUE: [8.630499999999833e-05, 8.654200000000195e-05, 8.688899999999972e-05, 8.695800000000156e-05, 8.633299999999747e-05, 8.624999999999952e-05, 8.672300000000036e-05, 8.701399999999984e-05, 8.647200000000063e-05, 8.61119999999993e-05, 8.636100000000008e-05, 8.691599999999938e-05, 8.647200000000063e-05, 8.68189999999984e-05, 8.66530000000025e-05, 8.663899999999947e-05, 8.630600000000127e-05, 8.643099999999793e-05, 8.690299999999929e-05, 8.697299999999714e-05, 8.649999999999977e-05, 8.688800000000024e-05, 8.691599999999938e-05, 8.655499999999858e-05, 8.605499999999808e-05, 8.637499999999965e-05, 8.705599999999855e-05, 8.633300000000094e-05, 8.608400000000016e-05, 8.675000000000002e-05, 8.640299999999879e-05, 8.618099999999768e-05, 8.615199999999906e-05, 8.680499999999883e-05, 8.638899999999922e-05, 8.606900000000112e-05, 8.68189999999984e-05, 8.672199999999741e-05, 8.682000000000134e-05, 8.69310000000019e-05, 8.702799999999941e-05, 8.643099999999793e-05, 8.618100000000115e-05, 8.691599999999938e-05, 8.630600000000127e-05, 8.622200000000038e-05, 8.687500000000015e-05, 8.636100000000008e-05, 8.672199999999741e-05, 8.69310000000019e-05]</msg>
<status status="PASS" starttime="20201117 14:47:40.938" endtime="20201117 14:47:40.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.934" endtime="20201117 14:47:40.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.943" endtime="20201117 14:47:40.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:40.946" endtime="20201117 14:47:40.966"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.945" endtime="20201117 14:47:40.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.941" endtime="20201117 14:47:40.967"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.575" endtime="20201117 14:47:40.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.573" endtime="20201117 14:47:40.968"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.572" endtime="20201117 14:47:40.968"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:40.970" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:40.978" endtime="20201117 14:47:40.998"></status>
</kw>
<msg timestamp="20201117 14:47:40.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:40.977" endtime="20201117 14:47:40.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.000" endtime="20201117 14:47:41.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.003" endtime="20201117 14:47:41.004"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.974" endtime="20201117 14:47:41.005"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.972" endtime="20201117 14:47:41.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.012" endtime="20201117 14:47:41.297"></status>
</kw>
<msg timestamp="20201117 14:47:41.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.010" endtime="20201117 14:47:41.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.301" endtime="20201117 14:47:41.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.309" endtime="20201117 14:47:41.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.008" endtime="20201117 14:47:41.312"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.006" endtime="20201117 14:47:41.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.316" level="INFO">${RESULT} = [{'time': 0.023030764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.761099999999786e-05, 'source_diff': 8.761099999999786e-05}, {'time': 0.023127764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:41.313" endtime="20201117 14:47:41.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.331" level="INFO">${ACCURACY} = {'diff': [8.761099999999786e-05, 8.713899999999997e-05, 8.741599999999988e-05, 8.709800000000073e-05, 8.729199999999923e-05, 8.78189999999994e-05, 8.73189999999989e-05, 8.795799999999909e-05, 8.704099...</msg>
<status status="PASS" starttime="20201117 14:47:41.317" endtime="20201117 14:47:41.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.335" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.334" endtime="20201117 14:47:41.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.338" level="INFO">VALUE: [8.761099999999786e-05, 8.713899999999997e-05, 8.741599999999988e-05, 8.709800000000073e-05, 8.729199999999923e-05, 8.78189999999994e-05, 8.73189999999989e-05, 8.795799999999909e-05, 8.704099999999951e-05, 8.798599999999823e-05, 8.773599999999798e-05, 8.731900000000237e-05, 8.802800000000041e-05, 8.711100000000083e-05, 8.719499999999825e-05, 8.736200000000055e-05, 8.790300000000029e-05, 8.727799999999966e-05, 8.727700000000019e-05, 8.748599999999773e-05, 8.773599999999798e-05, 8.734699999999804e-05, 8.756999999999862e-05, 8.777800000000016e-05, 8.71250000000004e-05, 8.784699999999854e-05, 8.795900000000204e-05, 8.733299999999847e-05, 8.798599999999823e-05, 8.736100000000108e-05, 8.719399999999877e-05, 8.708299999999822e-05, 8.795799999999909e-05, 8.773600000000145e-05, 8.804199999999998e-05, 8.768099999999918e-05, 8.801399999999737e-05, 8.768099999999918e-05, 8.800000000000127e-05, 8.758299999999872e-05, 8.788800000000124e-05, 8.759700000000176e-05, 8.770799999999884e-05, 8.780499999999983e-05, 8.706900000000212e-05, 8.743099999999893e-05, 8.733400000000141e-05, 8.719500000000172e-05, 8.800000000000127e-05, 8.748700000000068e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.336" endtime="20201117 14:47:41.338"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.332" endtime="20201117 14:47:41.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.341" endtime="20201117 14:47:41.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.345" endtime="20201117 14:47:41.364"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.343" endtime="20201117 14:47:41.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.340" endtime="20201117 14:47:41.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.971" endtime="20201117 14:47:41.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.969" endtime="20201117 14:47:41.366"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:40.968" endtime="20201117 14:47:41.366"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.368" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.376" endtime="20201117 14:47:41.396"></status>
</kw>
<msg timestamp="20201117 14:47:41.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.375" endtime="20201117 14:47:41.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.398" endtime="20201117 14:47:41.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.400" endtime="20201117 14:47:41.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.372" endtime="20201117 14:47:41.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.370" endtime="20201117 14:47:41.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.409" endtime="20201117 14:47:41.695"></status>
</kw>
<msg timestamp="20201117 14:47:41.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.408" endtime="20201117 14:47:41.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.699" endtime="20201117 14:47:41.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.707" endtime="20201117 14:47:41.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.405" endtime="20201117 14:47:41.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.403" endtime="20201117 14:47:41.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:41.714" level="INFO">${RESULT} = [{'time': 0.022745417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.848599999999873e-05, 'source_diff': 8.848599999999873e-05}, {'time': 0.022846444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:41.711" endtime="20201117 14:47:41.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:41.728" level="INFO">${ACCURACY} = {'diff': [8.848599999999873e-05, 8.851300000000187e-05, 8.89999999999988e-05, 8.856900000000015e-05, 8.811099999999836e-05, 8.901399999999837e-05, 8.880500000000083e-05, 8.808300000000269e-05, 8.87920...</msg>
<status status="PASS" starttime="20201117 14:47:41.715" endtime="20201117 14:47:41.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.733" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201117 14:47:41.732" endtime="20201117 14:47:41.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.736" level="INFO">VALUE: [8.848599999999873e-05, 8.851300000000187e-05, 8.89999999999988e-05, 8.856900000000015e-05, 8.811099999999836e-05, 8.901399999999837e-05, 8.880500000000083e-05, 8.808300000000269e-05, 8.879200000000073e-05, 8.84449999999995e-05, 8.877799999999769e-05, 8.845899999999907e-05, 8.81250000000014e-05, 8.809800000000173e-05, 8.861099999999886e-05, 8.893000000000095e-05, 8.854100000000101e-05, 8.811099999999836e-05, 8.897199999999966e-05, 8.898599999999923e-05, 8.868100000000018e-05, 8.851400000000134e-05, 8.84999999999983e-05, 8.876399999999812e-05, 8.851400000000134e-05, 8.859699999999929e-05, 8.824999999999805e-05, 8.863900000000147e-05, 8.843000000000045e-05, 8.855500000000058e-05, 8.888900000000172e-05, 8.848599999999873e-05, 8.856999999999962e-05, 8.831999999999937e-05, 8.86250000000019e-05, 8.902700000000194e-05, 8.824999999999805e-05, 8.902699999999847e-05, 8.888899999999825e-05, 8.829200000000023e-05, 8.869400000000027e-05, 8.826399999999762e-05, 8.865300000000104e-05, 8.869499999999975e-05, 8.891700000000086e-05, 8.900000000000227e-05, 8.88060000000003e-05, 8.874999999999855e-05, 8.891599999999791e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201117 14:47:41.734" endtime="20201117 14:47:41.736"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.729" endtime="20201117 14:47:41.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.739" endtime="20201117 14:47:41.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:41.742" endtime="20201117 14:47:41.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.741" endtime="20201117 14:47:41.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.737" endtime="20201117 14:47:41.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.369" endtime="20201117 14:47:41.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.367" endtime="20201117 14:47:41.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.366" endtime="20201117 14:47:41.763"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.766" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.774" endtime="20201117 14:47:41.793"></status>
</kw>
<msg timestamp="20201117 14:47:41.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.772" endtime="20201117 14:47:41.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:41.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:41.795" endtime="20201117 14:47:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.797" endtime="20201117 14:47:41.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.770" endtime="20201117 14:47:41.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.768" endtime="20201117 14:47:41.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:41.806" endtime="20201117 14:47:42.091"></status>
</kw>
<msg timestamp="20201117 14:47:42.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:41.805" endtime="20201117 14:47:42.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021803736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.095" endtime="20201117 14:47:42.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.103" endtime="20201117 14:47:42.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.802" endtime="20201117 14:47:42.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.800" endtime="20201117 14:47:42.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.110" level="INFO">${RESULT} = [{'time': 0.021893736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.99999999999998e-05, 'source_diff': 8.99999999999998e-05}, {'time': 0.021995778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:42.107" endtime="20201117 14:47:42.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.124" level="INFO">${ACCURACY} = {'diff': [8.99999999999998e-05, 8.983400000000044e-05, 8.922199999999991e-05, 8.972200000000041e-05, 8.920800000000034e-05, 8.91120000000023e-05, 8.907000000000012e-05, 8.915299999999807e-05, 8.948599...</msg>
<status status="PASS" starttime="20201117 14:47:42.111" endtime="20201117 14:47:42.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.128" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.127" endtime="20201117 14:47:42.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.131" level="INFO">VALUE: [8.99999999999998e-05, 8.983400000000044e-05, 8.922199999999991e-05, 8.972200000000041e-05, 8.920800000000034e-05, 8.91120000000023e-05, 8.907000000000012e-05, 8.915299999999807e-05, 8.948599999999973e-05, 8.927700000000219e-05, 8.974999999999955e-05, 8.988899999999925e-05, 8.911099999999936e-05, 8.95129999999994e-05, 8.995900000000057e-05, 8.93060000000008e-05, 8.972299999999989e-05, 8.99999999999998e-05, 8.919499999999678e-05, 8.948599999999973e-05, 8.91519999999986e-05, 8.93190000000009e-05, 8.972200000000041e-05, 8.962499999999943e-05, 8.9945000000001e-05, 8.979200000000173e-05, 8.947200000000016e-05, 9.005600000000155e-05, 8.912499999999893e-05, 8.954199999999801e-05, 8.956900000000115e-05, 8.983300000000097e-05, 8.945900000000007e-05, 8.988900000000272e-05, 8.96670000000016e-05, 8.970800000000084e-05, 8.970800000000084e-05, 8.941699999999789e-05, 8.957000000000062e-05, 8.962499999999943e-05, 8.948599999999973e-05, 8.991600000000238e-05, 8.947200000000016e-05, 8.919400000000077e-05, 8.927799999999819e-05, 8.970800000000084e-05, 8.909699999999979e-05, 9.004199999999851e-05, 8.905600000000055e-05, 8.997200000000066e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.129" endtime="20201117 14:47:42.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.125" endtime="20201117 14:47:42.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.134" endtime="20201117 14:47:42.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.137" endtime="20201117 14:47:42.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.136" endtime="20201117 14:47:42.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.132" endtime="20201117 14:47:42.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.766" endtime="20201117 14:47:42.158"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.765" endtime="20201117 14:47:42.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:41.764" endtime="20201117 14:47:42.159"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.161" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.170" endtime="20201117 14:47:42.190"></status>
</kw>
<msg timestamp="20201117 14:47:42.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.168" endtime="20201117 14:47:42.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.192" endtime="20201117 14:47:42.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.195" endtime="20201117 14:47:42.196"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.166" endtime="20201117 14:47:42.197"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.163" endtime="20201117 14:47:42.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.203" endtime="20201117 14:47:42.489"></status>
</kw>
<msg timestamp="20201117 14:47:42.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:42.202" endtime="20201117 14:47:42.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023742833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:42.493" endtime="20201117 14:47:42.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.502" endtime="20201117 14:47:42.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.199" endtime="20201117 14:47:42.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.198" endtime="20201117 14:47:42.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.508" level="INFO">${RESULT} = [{'time': 0.023742833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.033300000000147e-05, 'source_diff': 9.033300000000147e-05}, {'time': 0.023843833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:42.505" endtime="20201117 14:47:42.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.522" level="INFO">${ACCURACY} = {'diff': [9.033300000000147e-05, 9.066599999999966e-05, 9.077799999999969e-05, 9.094399999999905e-05, 9.041699999999889e-05, 9.041699999999889e-05, 9.011099999999689e-05, 9.026399999999962e-05, 9.0181...</msg>
<status status="PASS" starttime="20201117 14:47:42.509" endtime="20201117 14:47:42.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.526" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.525" endtime="20201117 14:47:42.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.529" level="INFO">VALUE: [9.033300000000147e-05, 9.066599999999966e-05, 9.077799999999969e-05, 9.094399999999905e-05, 9.041699999999889e-05, 9.041699999999889e-05, 9.011099999999689e-05, 9.026399999999962e-05, 9.018100000000168e-05, 9.054199999999901e-05, 9.045900000000107e-05, 9.098600000000123e-05, 9.061100000000086e-05, 9.043000000000245e-05, 9.022200000000091e-05, 9.06670000000026e-05, 9.027799999999919e-05, 9.048600000000073e-05, 9.012499999999993e-05, 9.034700000000104e-05, 9.08060000000023e-05, 9.087499999999721e-05, 9.073700000000046e-05, 9.090200000000034e-05, 9.075000000000055e-05, 9.030599999999833e-05, 9.027799999999919e-05, 9.072200000000141e-05, 9.052800000000291e-05, 9.052799999999944e-05, 9.026399999999962e-05, 9.073600000000098e-05, 9.056899999999868e-05, 9.086099999999764e-05, 9.026300000000015e-05, 9.020800000000134e-05, 9.068099999999871e-05, 9.020799999999787e-05, 9.095799999999862e-05, 9.070800000000184e-05, 9.048600000000073e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.052699999999997e-05, 9.091599999999991e-05, 9.097199999999819e-05, 9.095800000000209e-05, 9.012499999999993e-05, 9.073600000000098e-05, 9.019400000000177e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.527" endtime="20201117 14:47:42.529"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.523" endtime="20201117 14:47:42.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.532" endtime="20201117 14:47:42.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.535" endtime="20201117 14:47:42.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.534" endtime="20201117 14:47:42.555"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.530" endtime="20201117 14:47:42.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.162" endtime="20201117 14:47:42.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.160" endtime="20201117 14:47:42.556"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.159" endtime="20201117 14:47:42.557"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.559" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.567" endtime="20201117 14:47:42.586"></status>
</kw>
<msg timestamp="20201117 14:47:42.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.566" endtime="20201117 14:47:42.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.587" endtime="20201117 14:47:42.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.590" endtime="20201117 14:47:42.591"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.563" endtime="20201117 14:47:42.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.561" endtime="20201117 14:47:42.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.599" endtime="20201117 14:47:42.885"></status>
</kw>
<msg timestamp="20201117 14:47:42.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.597" endtime="20201117 14:47:42.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.890" endtime="20201117 14:47:42.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.898" endtime="20201117 14:47:42.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.595" endtime="20201117 14:47:42.900"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.593" endtime="20201117 14:47:42.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:42.905" level="INFO">${RESULT} = [{'time': 0.022655847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.154100000000054e-05, 'source_diff': 9.154100000000054e-05}, {'time': 0.022754861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:42.901" endtime="20201117 14:47:42.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:42.919" level="INFO">${ACCURACY} = {'diff': [9.154100000000054e-05, 9.154200000000001e-05, 9.180599999999983e-05, 9.168099999999971e-05, 9.11939999999993e-05, 9.15000000000013e-05, 9.188899999999778e-05, 9.111100000000136e-05, 9.105600...</msg>
<status status="PASS" starttime="20201117 14:47:42.906" endtime="20201117 14:47:42.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.924" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201117 14:47:42.923" endtime="20201117 14:47:42.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.926" level="INFO">VALUE: [9.154100000000054e-05, 9.154200000000001e-05, 9.180599999999983e-05, 9.168099999999971e-05, 9.11939999999993e-05, 9.15000000000013e-05, 9.188899999999778e-05, 9.111100000000136e-05, 9.105600000000255e-05, 9.154100000000054e-05, 9.16939999999998e-05, 9.138899999999728e-05, 9.13190000000029e-05, 9.162499999999796e-05, 9.204200000000051e-05, 9.173599999999851e-05, 9.129199999999976e-05, 9.148600000000173e-05, 9.133399999999847e-05, 9.197299999999867e-05, 9.151299999999793e-05, 9.198599999999876e-05, 9.177799999999722e-05, 9.162500000000143e-05, 9.127800000000019e-05, 9.20139999999979e-05, 9.206999999999965e-05, 9.194499999999953e-05, 9.184799999999854e-05, 9.141600000000041e-05, 9.170899999999885e-05, 9.204200000000051e-05, 9.158299999999925e-05, 9.166600000000066e-05, 9.188900000000125e-05, 9.120799999999887e-05, 9.136099999999814e-05, 9.170899999999885e-05, 9.20000000000018e-05, 9.14450000000025e-05, 9.193099999999996e-05, 9.117999999999973e-05, 9.191700000000039e-05, 9.117999999999973e-05, 9.190300000000082e-05, 9.162499999999796e-05, 9.170799999999937e-05, 9.125000000000105e-05, 9.123600000000148e-05, 9.137500000000118e-05]</msg>
<status status="PASS" starttime="20201117 14:47:42.925" endtime="20201117 14:47:42.927"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.920" endtime="20201117 14:47:42.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.929" endtime="20201117 14:47:42.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:42.933" endtime="20201117 14:47:42.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.931" endtime="20201117 14:47:42.953"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.928" endtime="20201117 14:47:42.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.560" endtime="20201117 14:47:42.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.558" endtime="20201117 14:47:42.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.557" endtime="20201117 14:47:42.954"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.957" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.965" endtime="20201117 14:47:42.983"></status>
</kw>
<msg timestamp="20201117 14:47:42.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.963" endtime="20201117 14:47:42.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:42.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:42.985" endtime="20201117 14:47:42.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.987" endtime="20201117 14:47:42.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.961" endtime="20201117 14:47:42.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.959" endtime="20201117 14:47:42.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:42.996" endtime="20201117 14:47:43.281"></status>
</kw>
<msg timestamp="20201117 14:47:43.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:42.995" endtime="20201117 14:47:43.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021862833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.286" endtime="20201117 14:47:43.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.294" endtime="20201117 14:47:43.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.992" endtime="20201117 14:47:43.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.991" endtime="20201117 14:47:43.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.300" level="INFO">${RESULT} = [{'time': 0.021955306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.247299999999917e-05, 'source_diff': 9.247299999999917e-05}, {'time': 0.022054306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:43.297" endtime="20201117 14:47:43.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.314" level="INFO">${ACCURACY} = {'diff': [9.247299999999917e-05, 9.263899999999853e-05, 9.299999999999933e-05, 9.245800000000012e-05, 9.293000000000148e-05, 9.21940000000003e-05, 9.234700000000304e-05, 9.280499999999789e-05, 9.27779...</msg>
<status status="PASS" starttime="20201117 14:47:43.301" endtime="20201117 14:47:43.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.318" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.317" endtime="20201117 14:47:43.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.321" level="INFO">VALUE: [9.247299999999917e-05, 9.263899999999853e-05, 9.299999999999933e-05, 9.245800000000012e-05, 9.293000000000148e-05, 9.21940000000003e-05, 9.234700000000304e-05, 9.280499999999789e-05, 9.277799999999822e-05, 9.263899999999853e-05, 9.241700000000089e-05, 9.248599999999926e-05, 9.304200000000151e-05, 9.29720000000002e-05, 9.291599999999844e-05, 9.3026999999999e-05, 9.290200000000234e-05, 9.222200000000291e-05, 9.294400000000105e-05, 9.243100000000046e-05, 9.213899999999803e-05, 9.248599999999926e-05, 9.293099999999749e-05, 9.212499999999846e-05, 9.277800000000169e-05, 9.280499999999789e-05, 9.30139999999989e-05, 9.304099999999857e-05, 9.222199999999944e-05, 9.216700000000064e-05, 9.291700000000139e-05, 9.220800000000334e-05, 9.299999999999933e-05, 9.24870000000022e-05, 9.216700000000064e-05, 9.269500000000028e-05, 9.26940000000008e-05, 9.302799999999847e-05, 9.25139999999984e-05, 9.244400000000055e-05, 9.298599999999976e-05, 9.266699999999767e-05, 9.26529999999981e-05, 9.266699999999767e-05, 9.263899999999853e-05, 9.209799999999879e-05, 9.284700000000007e-05, 9.301299999999943e-05, 9.209699999999932e-05, 9.223599999999901e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.319" endtime="20201117 14:47:43.321"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.315" endtime="20201117 14:47:43.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.324" endtime="20201117 14:47:43.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.327" endtime="20201117 14:47:43.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.326" endtime="20201117 14:47:43.347"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.322" endtime="20201117 14:47:43.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.957" endtime="20201117 14:47:43.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.955" endtime="20201117 14:47:43.348"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:42.955" endtime="20201117 14:47:43.348"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.351" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.359" endtime="20201117 14:47:43.379"></status>
</kw>
<msg timestamp="20201117 14:47:43.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.358" endtime="20201117 14:47:43.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.380" endtime="20201117 14:47:43.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.383" endtime="20201117 14:47:43.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.355" endtime="20201117 14:47:43.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.353" endtime="20201117 14:47:43.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.392" endtime="20201117 14:47:43.678"></status>
</kw>
<msg timestamp="20201117 14:47:43.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.390" endtime="20201117 14:47:43.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.682" endtime="20201117 14:47:43.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.690" endtime="20201117 14:47:43.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.388" endtime="20201117 14:47:43.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.386" endtime="20201117 14:47:43.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:43.697" level="INFO">${RESULT} = [{'time': 0.022273903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.398600000000076e-05, 'source_diff': 9.398600000000076e-05}, {'time': 0.022375917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:43.694" endtime="20201117 14:47:43.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:43.710" level="INFO">${ACCURACY} = {'diff': [9.398600000000076e-05, 9.349999999999983e-05, 9.391699999999892e-05, 9.392999999999901e-05, 9.326299999999968e-05, 9.363899999999953e-05, 9.39720000000012e-05, 9.375000000000008e-05, 9.38059...</msg>
<status status="PASS" starttime="20201117 14:47:43.698" endtime="20201117 14:47:43.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.715" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201117 14:47:43.714" endtime="20201117 14:47:43.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.717" level="INFO">VALUE: [9.398600000000076e-05, 9.349999999999983e-05, 9.391699999999892e-05, 9.392999999999901e-05, 9.326299999999968e-05, 9.363899999999953e-05, 9.39720000000012e-05, 9.375000000000008e-05, 9.380599999999836e-05, 9.326399999999915e-05, 9.384800000000054e-05, 9.305600000000108e-05, 9.375000000000008e-05, 9.340199999999937e-05, 9.347300000000017e-05, 9.343000000000198e-05, 9.386100000000064e-05, 9.333299999999753e-05, 9.308300000000075e-05, 9.323600000000001e-05, 9.340300000000232e-05, 9.343099999999799e-05, 9.326399999999915e-05, 9.404199999999904e-05, 9.390299999999935e-05, 9.39720000000012e-05, 9.395799999999815e-05, 9.326399999999915e-05, 9.35139999999994e-05, 9.317999999999826e-05, 9.318099999999774e-05, 9.315300000000207e-05, 9.347300000000017e-05, 9.375000000000008e-05, 9.355600000000158e-05, 9.387500000000021e-05, 9.38330000000015e-05, 9.344500000000103e-05, 9.336100000000014e-05, 9.405600000000208e-05, 9.38330000000015e-05, 9.363899999999953e-05, 9.375000000000008e-05, 9.357000000000115e-05, 9.366700000000214e-05, 9.39720000000012e-05, 9.391599999999944e-05, 9.375000000000008e-05, 9.368000000000223e-05, 9.312499999999946e-05]</msg>
<status status="PASS" starttime="20201117 14:47:43.716" endtime="20201117 14:47:43.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.711" endtime="20201117 14:47:43.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.720" endtime="20201117 14:47:43.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:43.724" endtime="20201117 14:47:43.743"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.722" endtime="20201117 14:47:43.744"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.719" endtime="20201117 14:47:43.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.351" endtime="20201117 14:47:43.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.350" endtime="20201117 14:47:43.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.349" endtime="20201117 14:47:43.746"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.748" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.757" endtime="20201117 14:47:43.776"></status>
</kw>
<msg timestamp="20201117 14:47:43.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.755" endtime="20201117 14:47:43.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:43.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:43.778" endtime="20201117 14:47:43.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.780" endtime="20201117 14:47:43.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.753" endtime="20201117 14:47:43.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.751" endtime="20201117 14:47:43.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:43.789" endtime="20201117 14:47:44.074"></status>
</kw>
<msg timestamp="20201117 14:47:44.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023090333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:43.788" endtime="20201117 14:47:44.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023090333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.078" endtime="20201117 14:47:44.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.086" endtime="20201117 14:47:44.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.785" endtime="20201117 14:47:44.088"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.783" endtime="20201117 14:47:44.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.093" level="INFO">${RESULT} = [{'time': 0.023184542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.420899999999788e-05, 'source_diff': 9.420899999999788e-05}, {'time': 0.023288542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.090" endtime="20201117 14:47:44.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.106" level="INFO">${ACCURACY} = {'diff': [9.420899999999788e-05, 9.46530000000001e-05, 9.427799999999972e-05, 9.504100000000057e-05, 9.423600000000101e-05, 9.455499999999964e-05, 9.45140000000004e-05, 9.418099999999874e-05, 9.488900...</msg>
<status status="PASS" starttime="20201117 14:47:44.094" endtime="20201117 14:47:44.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.111" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.110" endtime="20201117 14:47:44.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.113" level="INFO">VALUE: [9.420899999999788e-05, 9.46530000000001e-05, 9.427799999999972e-05, 9.504100000000057e-05, 9.423600000000101e-05, 9.455499999999964e-05, 9.45140000000004e-05, 9.418099999999874e-05, 9.488900000000078e-05, 9.486099999999817e-05, 9.468099999999924e-05, 9.452799999999997e-05, 9.458400000000172e-05, 9.476300000000118e-05, 9.442999999999951e-05, 9.469499999999881e-05, 9.472200000000194e-05, 9.427799999999972e-05, 9.46940000000028e-05, 9.409700000000132e-05, 9.463900000000053e-05, 9.473599999999804e-05, 9.470899999999838e-05, 9.487500000000121e-05, 9.44019999999969e-05, 9.411100000000089e-05, 9.481900000000293e-05, 9.504100000000057e-05, 9.423600000000101e-05, 9.454199999999954e-05, 9.472200000000194e-05, 9.423600000000101e-05, 9.493099999999949e-05, 9.479199999999979e-05, 9.495899999999863e-05, 9.502800000000047e-05, 9.434700000000157e-05, 9.456899999999921e-05, 9.477800000000022e-05, 9.476400000000065e-05, 9.466699999999967e-05, 9.430599999999886e-05, 9.470899999999838e-05, 9.413900000000003e-05, 9.481900000000293e-05, 9.491600000000044e-05, 9.450000000000083e-05, 9.433299999999853e-05, 9.423600000000101e-05, 9.50140000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.112" endtime="20201117 14:47:44.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.107" endtime="20201117 14:47:44.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.117" endtime="20201117 14:47:44.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.120" endtime="20201117 14:47:44.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.119" endtime="20201117 14:47:44.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.115" endtime="20201117 14:47:44.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.749" endtime="20201117 14:47:44.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.747" endtime="20201117 14:47:44.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:43.746" endtime="20201117 14:47:44.141"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.152" endtime="20201117 14:47:44.173"></status>
</kw>
<msg timestamp="20201117 14:47:44.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.150" endtime="20201117 14:47:44.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.175" endtime="20201117 14:47:44.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.177" endtime="20201117 14:47:44.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.148" endtime="20201117 14:47:44.179"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.146" endtime="20201117 14:47:44.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.186" endtime="20201117 14:47:44.471"></status>
</kw>
<msg timestamp="20201117 14:47:44.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023634556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.185" endtime="20201117 14:47:44.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023634556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.475" endtime="20201117 14:47:44.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.484" endtime="20201117 14:47:44.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.182" endtime="20201117 14:47:44.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.180" endtime="20201117 14:47:44.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.490" level="INFO">${RESULT} = [{'time': 0.023729917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.536099999999867e-05, 'source_diff': 9.536099999999867e-05}, {'time': 0.023833917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.487" endtime="20201117 14:47:44.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.505" level="INFO">${ACCURACY} = {'diff': [9.536099999999867e-05, 9.511099999999842e-05, 9.593099999999702e-05, 9.54729999999987e-05, 9.504200000000004e-05, 9.534799999999857e-05, 9.591599999999798e-05, 9.554200000000054e-05, 9.56529...</msg>
<status status="PASS" starttime="20201117 14:47:44.491" endtime="20201117 14:47:44.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.509" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.508" endtime="20201117 14:47:44.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.516" level="INFO">VALUE: [9.536099999999867e-05, 9.511099999999842e-05, 9.593099999999702e-05, 9.54729999999987e-05, 9.504200000000004e-05, 9.534799999999857e-05, 9.591599999999798e-05, 9.554200000000054e-05, 9.565299999999763e-05, 9.591699999999745e-05, 9.590300000000135e-05, 9.580600000000036e-05, 9.59859999999993e-05, 9.524999999999811e-05, 9.555500000000064e-05, 9.519499999999931e-05, 9.561099999999892e-05, 9.544400000000008e-05, 9.518000000000026e-05, 9.575000000000208e-05, 9.54859999999988e-05, 9.544400000000008e-05, 9.56530000000011e-05, 9.523599999999854e-05, 9.55270000000015e-05, 9.522299999999845e-05, 9.558299999999978e-05, 9.552699999999803e-05, 9.590299999999788e-05, 9.569400000000033e-05, 9.566700000000067e-05, 9.573599999999904e-05, 9.523600000000201e-05, 9.569499999999981e-05, 9.580499999999742e-05, 9.558399999999925e-05, 9.598700000000224e-05, 9.57079999999999e-05, 9.531899999999996e-05, 9.590299999999788e-05, 9.512499999999799e-05, 9.569400000000033e-05, 9.509699999999885e-05, 9.544499999999956e-05, 9.579200000000079e-05, 9.506999999999918e-05, 9.513900000000103e-05, 9.59590000000031e-05, 9.52079999999994e-05, 9.602699999999853e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.510" endtime="20201117 14:47:44.516"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.506" endtime="20201117 14:47:44.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.519" endtime="20201117 14:47:44.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.523" endtime="20201117 14:47:44.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.521" endtime="20201117 14:47:44.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.518" endtime="20201117 14:47:44.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.144" endtime="20201117 14:47:44.543"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.142" endtime="20201117 14:47:44.544"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.142" endtime="20201117 14:47:44.544"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.554" endtime="20201117 14:47:44.575"></status>
</kw>
<msg timestamp="20201117 14:47:44.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.553" endtime="20201117 14:47:44.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.576" endtime="20201117 14:47:44.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.579" endtime="20201117 14:47:44.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.550" endtime="20201117 14:47:44.581"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.548" endtime="20201117 14:47:44.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.587" endtime="20201117 14:47:44.873"></status>
</kw>
<msg timestamp="20201117 14:47:44.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.586" endtime="20201117 14:47:44.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022626944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:44.877" endtime="20201117 14:47:44.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.885" endtime="20201117 14:47:44.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.583" endtime="20201117 14:47:44.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.582" endtime="20201117 14:47:44.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:44.892" level="INFO">${RESULT} = [{'time': 0.022626944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.633300000000053e-05, 'source_diff': 9.633300000000053e-05}, {'time': 0.022733944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:44.888" endtime="20201117 14:47:44.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:44.906" level="INFO">${ACCURACY} = {'diff': [9.633300000000053e-05, 9.681899999999799e-05, 9.66799999999983e-05, 9.633300000000053e-05, 9.673600000000004e-05, 9.691700000000192e-05, 9.645799999999718e-05, 9.619500000000031e-05, 9.70700...</msg>
<status status="PASS" starttime="20201117 14:47:44.893" endtime="20201117 14:47:44.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.910" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201117 14:47:44.909" endtime="20201117 14:47:44.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.912" level="INFO">VALUE: [9.633300000000053e-05, 9.681899999999799e-05, 9.66799999999983e-05, 9.633300000000053e-05, 9.673600000000004e-05, 9.691700000000192e-05, 9.645799999999718e-05, 9.619500000000031e-05, 9.707000000000118e-05, 9.69730000000002e-05, 9.64729999999997e-05, 9.669399999999786e-05, 9.649999999999936e-05, 9.626399999999868e-05, 9.656900000000121e-05, 9.684699999999713e-05, 9.658300000000078e-05, 9.702800000000247e-05, 9.705600000000161e-05, 9.659700000000035e-05, 9.631999999999696e-05, 9.655600000000111e-05, 9.64859999999998e-05, 9.706899999999824e-05, 9.637499999999924e-05, 9.681900000000146e-05, 9.643100000000099e-05, 9.694499999999759e-05, 9.607000000000018e-05, 9.67920000000018e-05, 9.669500000000081e-05, 9.674999999999961e-05, 9.687499999999974e-05, 9.61530000000016e-05, 9.659700000000035e-05, 9.641599999999848e-05, 9.658299999999731e-05, 9.633300000000053e-05, 9.690200000000287e-05, 9.616700000000117e-05, 9.607000000000018e-05, 9.61530000000016e-05, 9.62080000000004e-05, 9.665200000000262e-05, 9.622199999999997e-05, 9.681899999999799e-05, 9.68609999999967e-05, 9.672200000000047e-05, 9.627800000000172e-05, 9.65140000000024e-05]</msg>
<status status="PASS" starttime="20201117 14:47:44.911" endtime="20201117 14:47:44.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.907" endtime="20201117 14:47:44.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.916" endtime="20201117 14:47:44.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:44.919" endtime="20201117 14:47:44.938"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.917" endtime="20201117 14:47:44.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.914" endtime="20201117 14:47:44.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.547" endtime="20201117 14:47:44.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.545" endtime="20201117 14:47:44.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.544" endtime="20201117 14:47:44.940"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.942" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.951" endtime="20201117 14:47:44.970"></status>
</kw>
<msg timestamp="20201117 14:47:44.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.949" endtime="20201117 14:47:44.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:44.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:44.971" endtime="20201117 14:47:44.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.974" endtime="20201117 14:47:44.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.947" endtime="20201117 14:47:44.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.944" endtime="20201117 14:47:44.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:44.983" endtime="20201117 14:47:45.268"></status>
</kw>
<msg timestamp="20201117 14:47:45.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:44.981" endtime="20201117 14:47:45.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022751583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:45.272" endtime="20201117 14:47:45.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.281" endtime="20201117 14:47:45.282"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.979" endtime="20201117 14:47:45.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.977" endtime="20201117 14:47:45.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.287" level="INFO">${RESULT} = [{'time': 0.022751583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708299999999781e-05, 'source_diff': 9.708299999999781e-05}, {'time': 0.022861583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.284" endtime="20201117 14:47:45.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.301" level="INFO">${ACCURACY} = {'diff': [9.708299999999781e-05, 9.779099999999985e-05, 9.788900000000031e-05, 9.755499999999917e-05, 9.71669999999987e-05, 9.741700000000242e-05, 9.744499999999809e-05, 9.744499999999809e-05, 9.77230...</msg>
<status status="PASS" starttime="20201117 14:47:45.288" endtime="20201117 14:47:45.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.305" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.304" endtime="20201117 14:47:45.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.308" level="INFO">VALUE: [9.708299999999781e-05, 9.779099999999985e-05, 9.788900000000031e-05, 9.755499999999917e-05, 9.71669999999987e-05, 9.741700000000242e-05, 9.744499999999809e-05, 9.744499999999809e-05, 9.772300000000095e-05, 9.787499999999727e-05, 9.733299999999806e-05, 9.80410000000001e-05, 9.74019999999999e-05, 9.769399999999887e-05, 9.73609999999972e-05, 9.759700000000135e-05, 9.758300000000178e-05, 9.754199999999907e-05, 9.775000000000061e-05, 9.713899999999956e-05, 9.747199999999775e-05, 9.783300000000203e-05, 9.726399999999968e-05, 9.708300000000128e-05, 9.804199999999957e-05, 9.706899999999824e-05, 9.74730000000007e-05, 9.737500000000024e-05, 9.737500000000024e-05, 9.711100000000042e-05, 9.71669999999987e-05, 9.769400000000233e-05, 9.744400000000208e-05, 9.777799999999975e-05, 9.730499999999892e-05, 9.706900000000171e-05, 9.725000000000011e-05, 9.797299999999773e-05, 9.80410000000001e-05, 9.780600000000236e-05, 9.791699999999945e-05, 9.74860000000008e-05, 9.751399999999993e-05, 9.761100000000092e-05, 9.76669999999992e-05, 9.711100000000042e-05, 9.736100000000067e-05, 9.713899999999956e-05, 9.770900000000138e-05, 9.716599999999923e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.307" endtime="20201117 14:47:45.308"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.302" endtime="20201117 14:47:45.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.311" endtime="20201117 14:47:45.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.314" endtime="20201117 14:47:45.334"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.313" endtime="20201117 14:47:45.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.309" endtime="20201117 14:47:45.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.943" endtime="20201117 14:47:45.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.941" endtime="20201117 14:47:45.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:44.940" endtime="20201117 14:47:45.336"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.338" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.346" endtime="20201117 14:47:45.366"></status>
</kw>
<msg timestamp="20201117 14:47:45.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.344" endtime="20201117 14:47:45.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.367" endtime="20201117 14:47:45.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.370" endtime="20201117 14:47:45.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.342" endtime="20201117 14:47:45.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.340" endtime="20201117 14:47:45.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.379" endtime="20201117 14:47:45.664"></status>
</kw>
<msg timestamp="20201117 14:47:45.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.377" endtime="20201117 14:47:45.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021604403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021702556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.668" endtime="20201117 14:47:45.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.677" endtime="20201117 14:47:45.678"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.374" endtime="20201117 14:47:45.679"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.373" endtime="20201117 14:47:45.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:45.683" level="INFO">${RESULT} = [{'time': 0.021702556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.815300000000013e-05, 'source_diff': 9.815300000000013e-05}, {'time': 0.021809528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:45.680" endtime="20201117 14:47:45.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:45.697" level="INFO">${ACCURACY} = {'diff': [9.815300000000013e-05, 9.825000000000111e-05, 9.883399999999903e-05, 9.877799999999728e-05, 9.844499999999909e-05, 9.820799999999894e-05, 9.816600000000023e-05, 9.851400000000093e-05, 9.9028...</msg>
<status status="PASS" starttime="20201117 14:47:45.684" endtime="20201117 14:47:45.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.701" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201117 14:47:45.700" endtime="20201117 14:47:45.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.704" level="INFO">VALUE: [9.815300000000013e-05, 9.825000000000111e-05, 9.883399999999903e-05, 9.877799999999728e-05, 9.844499999999909e-05, 9.820799999999894e-05, 9.816600000000023e-05, 9.851400000000093e-05, 9.9028000000001e-05, 9.818100000000274e-05, 9.897199999999926e-05, 9.876400000000118e-05, 9.819499999999884e-05, 9.843099999999952e-05, 9.879200000000032e-05, 9.854200000000007e-05, 9.829099999999688e-05, 9.901400000000143e-05, 9.89999999999984e-05, 9.826400000000068e-05, 9.877800000000075e-05, 9.805599999999914e-05, 9.873599999999857e-05, 9.876400000000118e-05, 9.823599999999807e-05, 9.881899999999999e-05, 9.827800000000025e-05, 9.8721999999999e-05, 9.854200000000007e-05, 9.816600000000023e-05, 9.873599999999857e-05, 9.825000000000111e-05, 9.806999999999871e-05, 9.887500000000174e-05, 9.855599999999964e-05, 9.82219999999985e-05, 9.876400000000118e-05, 9.808299999999881e-05, 9.830499999999992e-05, 9.825000000000111e-05, 9.870899999999891e-05, 9.838900000000081e-05, 9.883399999999903e-05, 9.883299999999956e-05, 9.898599999999882e-05, 9.845799999999919e-05, 9.827700000000078e-05, 9.865200000000116e-05, 9.81799999999998e-05, 9.873599999999857e-05]</msg>
<status status="PASS" starttime="20201117 14:47:45.702" endtime="20201117 14:47:45.704"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.698" endtime="20201117 14:47:45.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.707" endtime="20201117 14:47:45.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:45.710" endtime="20201117 14:47:45.729"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.708" endtime="20201117 14:47:45.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.705" endtime="20201117 14:47:45.730"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.339" endtime="20201117 14:47:45.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.337" endtime="20201117 14:47:45.731"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.336" endtime="20201117 14:47:45.731"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.742" endtime="20201117 14:47:45.763"></status>
</kw>
<msg timestamp="20201117 14:47:45.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.740" endtime="20201117 14:47:45.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:45.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:45.764" endtime="20201117 14:47:45.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.767" endtime="20201117 14:47:45.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.738" endtime="20201117 14:47:45.770"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.736" endtime="20201117 14:47:45.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:45.777" endtime="20201117 14:47:46.063"></status>
</kw>
<msg timestamp="20201117 14:47:46.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:45.776" endtime="20201117 14:47:46.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.067" endtime="20201117 14:47:46.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.076" endtime="20201117 14:47:46.077"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.773" endtime="20201117 14:47:46.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.771" endtime="20201117 14:47:46.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.082" level="INFO">${RESULT} = [{'time': 0.022663806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000100028000000002, 'source_diff': 0.000100028000000002}, {'time': 0.022774806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:46.079" endtime="20201117 14:47:46.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.097" level="INFO">${ACCURACY} = {'diff': [0.000100028000000002, 9.977800000000175e-05, 9.934699999999963e-05, 9.919400000000037e-05, 9.963899999999859e-05, 9.92219999999995e-05, 9.977800000000175e-05, 9.945800000000019e-05, 9.988900...</msg>
<status status="PASS" starttime="20201117 14:47:46.083" endtime="20201117 14:47:46.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.102" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.101" endtime="20201117 14:47:46.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.104" level="INFO">VALUE: [0.000100028000000002, 9.977800000000175e-05, 9.934699999999963e-05, 9.919400000000037e-05, 9.963899999999859e-05, 9.92219999999995e-05, 9.977800000000175e-05, 9.945800000000019e-05, 9.988900000000231e-05, 9.919499999999984e-05, 9.913899999999809e-05, 9.905600000000014e-05, 9.988900000000231e-05, 9.927799999999778e-05, 9.93609999999992e-05, 9.926400000000168e-05, 9.923599999999907e-05, 9.997200000000026e-05, 9.920899999999941e-05, 9.952799999999803e-05, 9.963899999999859e-05, 9.972299999999948e-05, 9.980500000000142e-05, 9.93609999999992e-05, 9.92219999999995e-05, 9.909699999999938e-05, 9.906900000000024e-05, 9.941700000000095e-05, 9.937499999999877e-05, 9.931999999999996e-05, 9.983400000000003e-05, 9.976299999999924e-05, 9.95549999999977e-05, 9.92219999999995e-05, 9.94999999999989e-05, 9.998599999999983e-05, 9.993100000000102e-05, 9.947199999999976e-05, 0.00010005600000000114, 9.995900000000016e-05, 9.951400000000193e-05, 9.92219999999995e-05, 9.981900000000099e-05, 9.915200000000166e-05, 9.905500000000067e-05, 0.00010001399999999896, 9.943000000000105e-05, 9.93470000000031e-05, 9.99999999999994e-05, 9.961099999999945e-05]</msg>
<status status="PASS" starttime="20201117 14:47:46.103" endtime="20201117 14:47:46.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.098" endtime="20201117 14:47:46.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.107" endtime="20201117 14:47:46.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.110" endtime="20201117 14:47:46.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.109" endtime="20201117 14:47:46.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.105" endtime="20201117 14:47:46.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.734" endtime="20201117 14:47:46.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.732" endtime="20201117 14:47:46.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:45.732" endtime="20201117 14:47:46.132"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.134" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.143" endtime="20201117 14:47:46.164"></status>
</kw>
<msg timestamp="20201117 14:47:46.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.141" endtime="20201117 14:47:46.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.165" endtime="20201117 14:47:46.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.168" endtime="20201117 14:47:46.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.138" endtime="20201117 14:47:46.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.136" endtime="20201117 14:47:46.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.177" endtime="20201117 14:47:46.461"></status>
</kw>
<msg timestamp="20201117 14:47:46.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023339833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023440694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.175" endtime="20201117 14:47:46.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023339833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023440694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.466" endtime="20201117 14:47:46.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.474" endtime="20201117 14:47:46.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.173" endtime="20201117 14:47:46.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.171" endtime="20201117 14:47:46.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.480" level="INFO">${RESULT} = [{'time': 0.023440694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001008610000000007, 'source_diff': 0.0001008610000000007}, {'time': 0.023546722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:46.477" endtime="20201117 14:47:46.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.493" level="INFO">${ACCURACY} = {'diff': [0.0001008610000000007, 0.00010023600000000008, 0.00010066599999999926, 0.0001004999999999999, 0.00010040300000000238, 0.00010054200000000207, 0.0001008480000000006, 0.00010007000000000071, 0...</msg>
<status status="PASS" starttime="20201117 14:47:46.481" endtime="20201117 14:47:46.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.498" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.497" endtime="20201117 14:47:46.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.500" level="INFO">VALUE: [0.0001008610000000007, 0.00010023600000000008, 0.00010066599999999926, 0.0001004999999999999, 0.00010040300000000238, 0.00010054200000000207, 0.0001008480000000006, 0.00010007000000000071, 0.00010079200000000232, 0.00010015299999999866, 0.00010026299999999974, 0.00010083300000000156, 0.00010008300000000081, 0.00010041700000000195, 0.00010033300000000106, 0.00010076399999999971, 0.00010026399999999921, 0.00010094500000000159, 0.00010082000000000146, 0.00010070800000000144, 0.00010023600000000008, 0.00010094400000000212, 0.00010037499999999977, 0.00010058299999999784, 0.00010041700000000195, 0.00010094399999999865, 0.00010024999999999964, 0.00010040299999999891, 0.00010024999999999964, 0.00010017999999999833, 0.00010011099999999995, 0.00010054099999999913, 0.0001005549999999987, 0.00010102799999999953, 0.00010088899999999984, 0.00010061100000000045, 0.0001003610000000002, 0.00010079199999999885, 0.00010031899999999802, 0.00010090299999999941, 0.00010051399999999946, 0.0001005280000000025, 0.00010067999999999883, 0.0001006809999999983, 0.00010061099999999698, 0.0001006670000000022, 0.00010020899999999694, 0.00010012499999999952, 0.00010063899999999959, 0.00010030499999999845]</msg>
<status status="PASS" starttime="20201117 14:47:46.499" endtime="20201117 14:47:46.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.494" endtime="20201117 14:47:46.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.503" endtime="20201117 14:47:46.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.507" endtime="20201117 14:47:46.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.505" endtime="20201117 14:47:46.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.502" endtime="20201117 14:47:46.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.135" endtime="20201117 14:47:46.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.133" endtime="20201117 14:47:46.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.132" endtime="20201117 14:47:46.528"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.531" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.539" endtime="20201117 14:47:46.558"></status>
</kw>
<msg timestamp="20201117 14:47:46.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.537" endtime="20201117 14:47:46.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.560" endtime="20201117 14:47:46.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.562" endtime="20201117 14:47:46.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.535" endtime="20201117 14:47:46.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.533" endtime="20201117 14:47:46.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.571" endtime="20201117 14:47:46.857"></status>
</kw>
<msg timestamp="20201117 14:47:46.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.570" endtime="20201117 14:47:46.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022362694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.861" endtime="20201117 14:47:46.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.869" endtime="20201117 14:47:46.870"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.567" endtime="20201117 14:47:46.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.565" endtime="20201117 14:47:46.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:46.875" level="INFO">${RESULT} = [{'time': 0.022362694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010161099999999798, 'source_diff': 0.00010161099999999798}, {'time': 0.022475708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:46.872" endtime="20201117 14:47:46.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:46.888" level="INFO">${ACCURACY} = {'diff': [0.00010161099999999798, 0.00010151400000000046, 0.00010106899999999877, 0.00010184700000000213, 0.00010124999999999718, 0.00010197200000000226, 0.00010188900000000084, 0.00010143100000000252...</msg>
<status status="PASS" starttime="20201117 14:47:46.876" endtime="20201117 14:47:46.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.893" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201117 14:47:46.892" endtime="20201117 14:47:46.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.895" level="INFO">VALUE: [0.00010161099999999798, 0.00010151400000000046, 0.00010106899999999877, 0.00010184700000000213, 0.00010124999999999718, 0.00010197200000000226, 0.00010188900000000084, 0.00010143100000000252, 0.00010176400000000071, 0.00010184699999999866, 0.00010158300000000231, 0.00010129099999999988, 0.00010163900000000059, 0.00010154200000000307, 0.00010193099999999955, 0.00010115299999999966, 0.0001015000000000009, 0.00010154200000000307, 0.00010108400000000128, 0.00010188900000000084, 0.00010172199999999854, 0.0001015000000000009, 0.00010127799999999978, 0.00010106899999999877, 0.0001017359999999981, 0.00010133399999999806, 0.0001013610000000012, 0.00010170899999999844, 0.00010157000000000221, 0.00010126400000000021, 0.00010126400000000021, 0.00010148600000000133, 0.00010108300000000181, 0.00010117999999999933, 0.00010116699999999923, 0.00010140200000000044, 0.00010175000000000115, 0.00010156899999999927, 0.00010116699999999923, 0.00010180499999999995, 0.00010152700000000056, 0.00010109700000000138, 0.00010134699999999816, 0.0001015419999999996, 0.00010112500000000052, 0.00010127799999999978, 0.0001012220000000015, 0.00010172199999999854, 0.0001013749999999973, 0.00010197199999999879]</msg>
<status status="PASS" starttime="20201117 14:47:46.894" endtime="20201117 14:47:46.896"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.889" endtime="20201117 14:47:46.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.899" endtime="20201117 14:47:46.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:46.902" endtime="20201117 14:47:46.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.901" endtime="20201117 14:47:46.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.897" endtime="20201117 14:47:46.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.531" endtime="20201117 14:47:46.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.529" endtime="20201117 14:47:46.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.529" endtime="20201117 14:47:46.923"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.934" endtime="20201117 14:47:46.955"></status>
</kw>
<msg timestamp="20201117 14:47:46.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.932" endtime="20201117 14:47:46.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:46.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:46.956" endtime="20201117 14:47:46.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.959" endtime="20201117 14:47:46.960"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.930" endtime="20201117 14:47:46.961"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.928" endtime="20201117 14:47:46.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:46.968" endtime="20201117 14:47:47.252"></status>
</kw>
<msg timestamp="20201117 14:47:47.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:46.966" endtime="20201117 14:47:47.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.256" endtime="20201117 14:47:47.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.264" endtime="20201117 14:47:47.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.963" endtime="20201117 14:47:47.267"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.962" endtime="20201117 14:47:47.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.271" level="INFO">${RESULT} = [{'time': 0.021966736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010240300000000091, 'source_diff': 0.00010240300000000091}, {'time': 0.022081722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:47.268" endtime="20201117 14:47:47.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.284" level="INFO">${ACCURACY} = {'diff': [0.00010240300000000091, 0.00010262500000000202, 0.00010216700000000023, 0.00010294500000000012, 0.00010291699999999751, 0.00010208399999999881, 0.0001025550000000007, 0.00010240300000000091,...</msg>
<status status="PASS" starttime="20201117 14:47:47.272" endtime="20201117 14:47:47.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.289" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.288" endtime="20201117 14:47:47.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.292" level="INFO">VALUE: [0.00010240300000000091, 0.00010262500000000202, 0.00010216700000000023, 0.00010294500000000012, 0.00010291699999999751, 0.00010208399999999881, 0.0001025550000000007, 0.00010240300000000091, 0.00010206899999999977, 0.00010223600000000208, 0.00010213900000000109, 0.0001028879999999989, 0.00010291700000000098, 0.00010245799999999972, 0.00010282, 0.00010244500000000309, 0.00010222299999999851, 0.00010263900000000159, 0.00010216600000000076, 0.00010259699999999941, 0.00010248699999999833, 0.00010263899999999812, 0.00010281900000000052, 0.00010279200000000085, 0.00010263899999999812, 0.00010225000000000165, 0.00010261099999999898, 0.00010238899999999787, 0.00010286099999999923, 0.0001029160000000015, 0.00010293099999999708, 0.0001022359999999986, 0.00010297200000000326, 0.00010212499999999805, 0.00010225000000000165, 0.00010283399999999956, 0.00010295899999999969, 0.0001023879999999984, 0.00010231900000000002, 0.00010224999999999818, 0.00010263900000000159, 0.00010298599999999936, 0.00010298600000000283, 0.00010255600000000017, 0.00010229200000000035, 0.00010293100000000055, 0.00010212499999999805, 0.00010244400000000015, 0.00010215200000000119, 0.00010256900000000027]</msg>
<status status="PASS" starttime="20201117 14:47:47.290" endtime="20201117 14:47:47.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.285" endtime="20201117 14:47:47.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.295" endtime="20201117 14:47:47.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.298" endtime="20201117 14:47:47.317"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.297" endtime="20201117 14:47:47.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.293" endtime="20201117 14:47:47.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.926" endtime="20201117 14:47:47.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.925" endtime="20201117 14:47:47.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:46.924" endtime="20201117 14:47:47.319"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.322" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.330" endtime="20201117 14:47:47.350"></status>
</kw>
<msg timestamp="20201117 14:47:47.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.328" endtime="20201117 14:47:47.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.351" endtime="20201117 14:47:47.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.354" endtime="20201117 14:47:47.355"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.326" endtime="20201117 14:47:47.356"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.324" endtime="20201117 14:47:47.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.363" endtime="20201117 14:47:47.648"></status>
</kw>
<msg timestamp="20201117 14:47:47.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.361" endtime="20201117 14:47:47.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.652" endtime="20201117 14:47:47.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.660" endtime="20201117 14:47:47.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.359" endtime="20201117 14:47:47.662"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.357" endtime="20201117 14:47:47.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:47.667" level="INFO">${RESULT} = [{'time': 0.022836389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001035559999999977, 'source_diff': 0.0001035559999999977}, {'time': 0.022951458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:47.663" endtime="20201117 14:47:47.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:47.682" level="INFO">${ACCURACY} = {'diff': [0.0001035559999999977, 0.00010348599999999986, 0.00010313900000000209, 0.00010326399999999875, 0.00010380600000000142, 0.00010311099999999948, 0.00010343000000000158, 0.00010354099999999866,...</msg>
<status status="PASS" starttime="20201117 14:47:47.668" endtime="20201117 14:47:47.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.686" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201117 14:47:47.685" endtime="20201117 14:47:47.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.688" level="INFO">VALUE: [0.0001035559999999977, 0.00010348599999999986, 0.00010313900000000209, 0.00010326399999999875, 0.00010380600000000142, 0.00010311099999999948, 0.00010343000000000158, 0.00010354099999999866, 0.00010325000000000265, 0.00010404099999999916, 0.00010345800000000072, 0.0001033749999999993, 0.00010388899999999937, 0.00010370900000000044, 0.00010380600000000142, 0.00010329200000000135, 0.00010330499999999798, 0.00010315200000000219, 0.00010330600000000092, 0.00010315299999999819, 0.00010365300000000216, 0.00010324999999999918, 0.00010348599999999986, 0.00010394500000000112, 0.0001037360000000001, 0.00010340299999999844, 0.00010374999999999968, 0.00010347200000000029, 0.00010306900000000077, 0.00010384700000000066, 0.00010333300000000059, 0.00010381900000000152, 0.00010347200000000029, 0.00010323600000000308, 0.00010391699999999851, 0.00010384800000000013, 0.00010348599999999986, 0.00010315199999999872, 0.00010327800000000179, 0.00010349999999999943, 0.00010359700000000041, 0.00010330599999999746, 0.00010307000000000024, 0.00010309799999999938, 0.00010399999999999993, 0.00010374999999999968, 0.00010404099999999916, 0.0001037360000000001, 0.00010306900000000077, 0.00010376400000000272]</msg>
<status status="PASS" starttime="20201117 14:47:47.687" endtime="20201117 14:47:47.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.683" endtime="20201117 14:47:47.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.692" endtime="20201117 14:47:47.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:47.695" endtime="20201117 14:47:47.714"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.693" endtime="20201117 14:47:47.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.690" endtime="20201117 14:47:47.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.322" endtime="20201117 14:47:47.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.320" endtime="20201117 14:47:47.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.320" endtime="20201117 14:47:47.716"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.718" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.727" endtime="20201117 14:47:47.746"></status>
</kw>
<msg timestamp="20201117 14:47:47.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.725" endtime="20201117 14:47:47.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:47.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:47.748" endtime="20201117 14:47:47.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.750" endtime="20201117 14:47:47.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.722" endtime="20201117 14:47:47.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.720" endtime="20201117 14:47:47.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:47.759" endtime="20201117 14:47:48.044"></status>
</kw>
<msg timestamp="20201117 14:47:48.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:47.758" endtime="20201117 14:47:48.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:48.048" endtime="20201117 14:47:48.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.056" endtime="20201117 14:47:48.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.755" endtime="20201117 14:47:48.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.753" endtime="20201117 14:47:48.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:48.063" level="INFO">${RESULT} = [{'time': 0.021870472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010412500000000005, 'source_diff': 0.00010412500000000005}, {'time': 0.021988486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:48.060" endtime="20201117 14:47:48.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:48.076" level="INFO">${ACCURACY} = {'diff': [0.00010412500000000005, 0.00010481900000000252, 0.00010433400000000106, 0.00010444500000000162, 0.00010495799999999875, 0.00010448600000000086, 0.00010422300000000051, 0.00010427699999999984...</msg>
<status status="PASS" starttime="20201117 14:47:48.064" endtime="20201117 14:47:48.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.081" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201117 14:47:48.080" endtime="20201117 14:47:48.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:48.083" level="INFO">VALUE: [0.00010412500000000005, 0.00010481900000000252, 0.00010433400000000106, 0.00010444500000000162, 0.00010495799999999875, 0.00010448600000000086, 0.00010422300000000051, 0.00010427699999999984, 0.00010498600000000136, 0.00010463900000000012, 0.00010436100000000073, 0.00010422199999999757, 0.00010425000000000018, 0.00010491699999999951, 0.00010415299999999919, 0.00010447200000000129, 0.00010444499999999815, 0.00010498699999999736, 0.0001046940000000024, 0.00010495800000000222, 0.00010423599999999714, 0.00010484699999999819, 0.00010486100000000123, 0.00010457000000000174, 0.00010445900000000119, 0.0001048339999999981, 0.00010495900000000169, 0.00010412500000000005, 0.00010433300000000159, 0.00010490299999999994, 0.00010480499999999948, 0.00010491700000000298, 0.00010455499999999923, 0.00010497199999999832, 0.00010452799999999957, 0.00010477799999999982, 0.0001041940000000019, 0.0001045689999999988, 0.00010458299999999837, 0.00010445799999999825, 0.00010447200000000129, 0.000104514, 0.00010462499999999708, 0.00010408400000000081, 0.0001048750000000008, 0.00010422300000000051, 0.00010418000000000233, 0.0001045689999999988, 0.00010450000000000043, 0.00010491600000000004]</msg>
<status status="PASS" starttime="20201117 14:47:48.082" endtime="20201117 14:47:48.083"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.077" endtime="20201117 14:47:48.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.086" endtime="20201117 14:47:48.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.090" endtime="20201117 14:47:48.109"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.088" endtime="20201117 14:47:48.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.085" endtime="20201117 14:47:48.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.719" endtime="20201117 14:47:48.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.717" endtime="20201117 14:47:48.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:47.716" endtime="20201117 14:47:48.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:08.599" endtime="20201117 14:47:48.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.115" endtime="20201117 14:47:48.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.114" endtime="20201117 14:47:48.135"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.112" endtime="20201117 14:47:48.136"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:05.480" endtime="20201117 14:47:48.136" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:48.143" endtime="20201117 14:47:48.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.142" endtime="20201117 14:47:48.163"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:48.177" endtime="20201117 14:47:51.198"></status>
</kw>
<msg timestamp="20201117 14:47:51.200" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:48.176" endtime="20201117 14:47:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.202" endtime="20201117 14:47:51.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.211" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201117 14:47:51.208" endtime="20201117 14:47:51.212"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:48.173" endtime="20201117 14:47:51.214"></status>
</kw>
<status status="FAIL" starttime="20201117 14:47:48.171" endtime="20201117 14:47:51.215"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.169" endtime="20201117 14:47:51.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201117 14:47:51.223" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201117 14:47:51.221" endtime="20201117 14:47:51.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.217" endtime="20201117 14:47:51.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.168" endtime="20201117 14:47:51.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.167" endtime="20201117 14:47:51.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.227" endtime="20201117 14:47:51.229"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.166" endtime="20201117 14:47:51.231"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.164" endtime="20201117 14:47:51.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:48.140" endtime="20201117 14:47:51.232"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.239" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.256" endtime="20201117 14:47:51.275"></status>
</kw>
<msg timestamp="20201117 14:47:51.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.253" endtime="20201117 14:47:51.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.278" endtime="20201117 14:47:51.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.283" endtime="20201117 14:47:51.286"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.248" endtime="20201117 14:47:51.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.243" endtime="20201117 14:47:51.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.304" endtime="20201117 14:47:51.600"></status>
</kw>
<msg timestamp="20201117 14:47:51.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104821111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104842708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.300" endtime="20201117 14:47:51.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104821111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104842708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.605" endtime="20201117 14:47:51.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.613" endtime="20201117 14:47:51.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.293" endtime="20201117 14:47:51.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.289" endtime="20201117 14:47:51.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:51.620" level="INFO">${RESULT} = [{'time': 3.104842708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1596999999928812e-05, 'source_diff': 2.1596999999928812e-05}, {'time': 3.104870722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:51.616" endtime="20201117 14:47:51.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:51.634" level="INFO">${ACCURACY} = {'diff': [2.1596999999928812e-05, 2.1221999999987418e-05, 2.1319000000019628e-05, 2.201399999979259e-05, 2.1527999999992886e-05, 2.1499999999896602e-05, 2.141700000013458e-05, 2.1874999999837996e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:51.621" endtime="20201117 14:47:51.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.638" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201117 14:47:51.637" endtime="20201117 14:47:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.640" level="INFO">VALUE: [2.1596999999928812e-05, 2.1221999999987418e-05, 2.1319000000019628e-05, 2.201399999979259e-05, 2.1527999999992886e-05, 2.1499999999896602e-05, 2.141700000013458e-05, 2.1874999999837996e-05, 2.1792000000075973e-05, 2.150000000034069e-05, 2.151400000016679e-05, 2.1833999999998355e-05, 2.220799999985701e-05, 2.1444000000148122e-05, 2.1735999999883404e-05, 2.199999999996649e-05, 2.2125000000094985e-05, 2.1527999999992886e-05, 2.1722000000057307e-05, 2.2083999999811255e-05, 2.2028000000062775e-05, 2.155600000008917e-05, 2.136099999994201e-05, 2.1569999999915268e-05, 2.1790999999993232e-05, 2.2124999999650896e-05, 2.1735999999883404e-05, 2.141700000013458e-05, 2.151400000016679e-05, 2.176399999997969e-05, 2.1389000000038294e-05, 2.1319000000019628e-05, 2.1568999999832528e-05, 2.130500000019353e-05, 2.169400000040511e-05, 2.2041999999888873e-05, 2.155500000000643e-05, 2.13610000003861e-05, 2.1290999999923343e-05, 2.195800000004411e-05, 2.1292000000006084e-05, 2.1346999999671823e-05, 2.1735999999883404e-05, 2.219400000003091e-05, 2.1429999999877936e-05, 2.215299999974718e-05, 2.18470000001858e-05, 2.1429999999877936e-05, 2.1638999999851194e-05, 2.1444000000148122e-05]</msg>
<status status="PASS" starttime="20201117 14:47:51.639" endtime="20201117 14:47:51.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.635" endtime="20201117 14:47:51.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.644" endtime="20201117 14:47:51.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:51.647" endtime="20201117 14:47:51.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.646" endtime="20201117 14:47:51.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.642" endtime="20201117 14:47:51.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.241" endtime="20201117 14:47:51.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.236" endtime="20201117 14:47:51.668"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.235" endtime="20201117 14:47:51.668"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.670" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.679" endtime="20201117 14:47:51.694"></status>
</kw>
<msg timestamp="20201117 14:47:51.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.677" endtime="20201117 14:47:51.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:51.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:51.696" endtime="20201117 14:47:51.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.698" endtime="20201117 14:47:51.699"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.675" endtime="20201117 14:47:51.700"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.672" endtime="20201117 14:47:51.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:51.708" endtime="20201117 14:47:51.992"></status>
</kw>
<msg timestamp="20201117 14:47:51.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.705" endtime="20201117 14:47:51.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:51.997" endtime="20201117 14:47:52.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.005" endtime="20201117 14:47:52.007"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.703" endtime="20201117 14:47:52.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.701" endtime="20201117 14:47:52.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.012" level="INFO">${RESULT} = [{'time': 0.021795694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.152700000000035e-05, 'source_diff': 2.152700000000035e-05}, {'time': 0.021823639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:52.009" endtime="20201117 14:47:52.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.025" level="INFO">${ACCURACY} = {'diff': [2.152700000000035e-05, 2.186099999999802e-05, 2.1250000000000435e-05, 2.130499999999924e-05, 2.1583999999998105e-05, 2.143099999999884e-05, 2.209700000000217e-05, 2.143100000000231e-05, 2.20...</msg>
<status status="PASS" starttime="20201117 14:47:52.013" endtime="20201117 14:47:52.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.030" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.029" endtime="20201117 14:47:52.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.032" level="INFO">VALUE: [2.152700000000035e-05, 2.186099999999802e-05, 2.1250000000000435e-05, 2.130499999999924e-05, 2.1583999999998105e-05, 2.143099999999884e-05, 2.209700000000217e-05, 2.143100000000231e-05, 2.2013999999997286e-05, 2.129099999999967e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.1958000000002476e-05, 2.2137999999997937e-05, 2.194499999999891e-05, 2.1805999999999215e-05, 2.12770000000001e-05, 2.1249999999996966e-05, 2.186100000000149e-05, 2.156900000000253e-05, 2.2165999999997077e-05, 2.206899999999956e-05, 2.161099999999777e-05, 2.213900000000088e-05, 2.1708000000002226e-05, 2.1527999999999825e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.1429999999999366e-05, 2.1207999999998256e-05, 2.1429999999999366e-05, 2.1708000000002226e-05, 2.1679999999999616e-05, 2.2000000000001185e-05, 2.1972000000002045e-05, 2.1750000000000935e-05, 2.193100000000281e-05, 2.193099999999934e-05, 2.1943999999999436e-05, 2.163900000000038e-05, 2.1819999999998785e-05, 2.162500000000081e-05, 2.2069999999999035e-05, 2.166699999999952e-05, 2.1319999999998285e-05, 2.1999999999997716e-05, 2.1250000000000435e-05, 2.220899999999873e-05, 2.1764000000000505e-05, 2.1527999999999825e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.031" endtime="20201117 14:47:52.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.026" endtime="20201117 14:47:52.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.035" endtime="20201117 14:47:52.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.039" endtime="20201117 14:47:52.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.037" endtime="20201117 14:47:52.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.034" endtime="20201117 14:47:52.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.671" endtime="20201117 14:47:52.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.669" endtime="20201117 14:47:52.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.668" endtime="20201117 14:47:52.060"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.062" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.070" endtime="20201117 14:47:52.085"></status>
</kw>
<msg timestamp="20201117 14:47:52.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.069" endtime="20201117 14:47:52.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.086" endtime="20201117 14:47:52.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.089" endtime="20201117 14:47:52.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.066" endtime="20201117 14:47:52.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.064" endtime="20201117 14:47:52.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.099" endtime="20201117 14:47:52.383"></status>
</kw>
<msg timestamp="20201117 14:47:52.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.097" endtime="20201117 14:47:52.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021810708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.387" endtime="20201117 14:47:52.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.396" endtime="20201117 14:47:52.397"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.094" endtime="20201117 14:47:52.398"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.092" endtime="20201117 14:47:52.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.402" level="INFO">${RESULT} = [{'time': 0.021810708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1652000000000476e-05, 'source_diff': 2.1652000000000476e-05}, {'time': 0.021837708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:52.399" endtime="20201117 14:47:52.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.417" level="INFO">${ACCURACY} = {'diff': [2.1652000000000476e-05, 2.212500000000131e-05, 2.1958000000002476e-05, 2.213900000000088e-05, 2.136100000000099e-05, 2.1443999999998936e-05, 2.136099999999752e-05, 2.2193999999999686e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:47:52.403" endtime="20201117 14:47:52.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.421" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.420" endtime="20201117 14:47:52.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.424" level="INFO">VALUE: [2.1652000000000476e-05, 2.212500000000131e-05, 2.1958000000002476e-05, 2.213900000000088e-05, 2.136100000000099e-05, 2.1443999999998936e-05, 2.136099999999752e-05, 2.2193999999999686e-05, 2.212500000000131e-05, 2.1291999999999145e-05, 2.20830000000026e-05, 2.1305999999998715e-05, 2.1291999999999145e-05, 2.1749999999997466e-05, 2.1305999999998715e-05, 2.1957999999999006e-05, 2.191699999999977e-05, 2.215300000000045e-05, 2.169499999999866e-05, 2.1236000000000865e-05, 2.1277999999999575e-05, 2.1221999999997826e-05, 2.2055999999999465e-05, 2.136099999999752e-05, 2.136100000000099e-05, 2.1612000000000714e-05, 2.145900000000145e-05, 2.1527999999999825e-05, 2.1512999999997312e-05, 2.20969999999987e-05, 2.213900000000088e-05, 2.14029999999997e-05, 2.1847999999997925e-05, 2.12770000000001e-05, 2.158299999999863e-05, 2.133300000000185e-05, 2.1708000000002226e-05, 2.133300000000185e-05, 2.180499999999974e-05, 2.161099999999777e-05, 2.202700000000085e-05, 2.181899999999931e-05, 2.1721999999998326e-05, 2.180499999999974e-05, 2.1429999999999366e-05, 2.1764000000000505e-05, 2.1514000000000255e-05, 2.208299999999913e-05, 2.1264000000000005e-05, 2.2221999999998826e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.423" endtime="20201117 14:47:52.424"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.418" endtime="20201117 14:47:52.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.427" endtime="20201117 14:47:52.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.430" endtime="20201117 14:47:52.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.429" endtime="20201117 14:47:52.450"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.425" endtime="20201117 14:47:52.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.063" endtime="20201117 14:47:52.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.061" endtime="20201117 14:47:52.451"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.060" endtime="20201117 14:47:52.451"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.454" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.462" endtime="20201117 14:47:52.476"></status>
</kw>
<msg timestamp="20201117 14:47:52.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.460" endtime="20201117 14:47:52.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.478" endtime="20201117 14:47:52.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.481" endtime="20201117 14:47:52.482"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.458" endtime="20201117 14:47:52.483"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.456" endtime="20201117 14:47:52.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.489" endtime="20201117 14:47:52.775"></status>
</kw>
<msg timestamp="20201117 14:47:52.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.488" endtime="20201117 14:47:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.779" endtime="20201117 14:47:52.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.787" endtime="20201117 14:47:52.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.485" endtime="20201117 14:47:52.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.484" endtime="20201117 14:47:52.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:52.794" level="INFO">${RESULT} = [{'time': 0.021744889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.021769875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:52.790" endtime="20201117 14:47:52.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:52.807" level="INFO">${ACCURACY} = {'diff': [2.1236000000000865e-05, 2.1306000000002184e-05, 2.1222000000001295e-05, 2.1235999999997396e-05, 2.1500000000000685e-05, 2.2069999999999035e-05, 2.1778000000000075e-05, 2.141700000000274e-05,...</msg>
<status status="PASS" starttime="20201117 14:47:52.795" endtime="20201117 14:47:52.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.811" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201117 14:47:52.810" endtime="20201117 14:47:52.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.814" level="INFO">VALUE: [2.1236000000000865e-05, 2.1306000000002184e-05, 2.1222000000001295e-05, 2.1235999999997396e-05, 2.1500000000000685e-05, 2.2069999999999035e-05, 2.1778000000000075e-05, 2.141700000000274e-05, 2.143099999999884e-05, 2.143099999999884e-05, 2.181899999999931e-05, 2.1555999999998965e-05, 2.2207999999999256e-05, 2.161099999999777e-05, 2.137500000000056e-05, 2.195900000000195e-05, 2.137500000000056e-05, 2.1236000000000865e-05, 2.1957999999999006e-05, 2.162500000000081e-05, 2.1916000000000296e-05, 2.1444000000002406e-05, 2.1943999999999436e-05, 2.208299999999913e-05, 2.156900000000253e-05, 2.204100000000042e-05, 2.1943999999999436e-05, 2.161099999999777e-05, 2.155499999999949e-05, 2.184699999999845e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1415999999999796e-05, 2.1527999999999825e-05, 2.2041999999999895e-05, 2.2193999999999686e-05, 2.208299999999913e-05, 2.2041999999999895e-05, 2.1750000000000935e-05, 2.156900000000253e-05, 2.184699999999845e-05, 2.1334000000001324e-05, 2.1457999999998506e-05, 2.1778000000000075e-05, 2.2208000000002726e-05, 2.2041999999999895e-05, 2.1527999999999825e-05, 2.193099999999934e-05, 2.137500000000056e-05, 2.1513999999996786e-05]</msg>
<status status="PASS" starttime="20201117 14:47:52.813" endtime="20201117 14:47:52.814"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.808" endtime="20201117 14:47:52.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.817" endtime="20201117 14:47:52.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:52.820" endtime="20201117 14:47:52.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.819" endtime="20201117 14:47:52.840"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.815" endtime="20201117 14:47:52.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.455" endtime="20201117 14:47:52.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.453" endtime="20201117 14:47:52.841"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.452" endtime="20201117 14:47:52.841"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.844" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.852" endtime="20201117 14:47:52.869"></status>
</kw>
<msg timestamp="20201117 14:47:52.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.851" endtime="20201117 14:47:52.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:52.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:52.870" endtime="20201117 14:47:52.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.873" endtime="20201117 14:47:52.874"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.848" endtime="20201117 14:47:52.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.846" endtime="20201117 14:47:52.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:52.881" endtime="20201117 14:47:53.167"></status>
</kw>
<msg timestamp="20201117 14:47:53.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:52.880" endtime="20201117 14:47:53.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.171" endtime="20201117 14:47:53.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.179" endtime="20201117 14:47:53.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.877" endtime="20201117 14:47:53.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.876" endtime="20201117 14:47:53.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.186" level="INFO">${RESULT} = [{'time': 0.022794681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1527999999999825e-05, 'source_diff': 2.1527999999999825e-05}, {'time': 0.022819694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.182" endtime="20201117 14:47:53.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.199" level="INFO">${ACCURACY} = {'diff': [2.1527999999999825e-05, 2.1166000000003016e-05, 2.156899999999906e-05, 2.1972000000002045e-05, 2.1222000000001295e-05, 2.1666000000000046e-05, 2.2014000000000755e-05, 2.1541999999999395e-05,...</msg>
<status status="PASS" starttime="20201117 14:47:53.187" endtime="20201117 14:47:53.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.203" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.202" endtime="20201117 14:47:53.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.206" level="INFO">VALUE: [2.1527999999999825e-05, 2.1166000000003016e-05, 2.156899999999906e-05, 2.1972000000002045e-05, 2.1222000000001295e-05, 2.1666000000000046e-05, 2.2014000000000755e-05, 2.1541999999999395e-05, 2.188900000000063e-05, 2.1750000000000935e-05, 2.1458000000001975e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.206900000000303e-05, 2.1778000000000075e-05, 2.1514000000000255e-05, 2.163900000000038e-05, 2.1499999999997216e-05, 2.1750000000000935e-05, 2.1291999999999145e-05, 2.1778000000000075e-05, 2.1264000000000005e-05, 2.138900000000013e-05, 2.1264000000000005e-05, 2.1319999999998285e-05, 2.166699999999952e-05, 2.1986000000001615e-05, 2.1250000000000435e-05, 2.218099999999959e-05, 2.1764000000000505e-05, 2.215300000000045e-05, 2.1749999999997466e-05, 2.1556000000002434e-05, 2.12770000000001e-05, 2.1527999999999825e-05, 2.170899999999823e-05, 2.1250000000000435e-05, 2.1249999999996966e-05, 2.2152000000000976e-05, 2.1887999999997687e-05, 2.186100000000149e-05, 2.1222000000001295e-05, 2.1985999999998146e-05, 2.183299999999888e-05, 2.187500000000106e-05, 2.130499999999924e-05, 2.137500000000056e-05, 2.184700000000192e-05, 2.134700000000142e-05, 2.155499999999949e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.205" endtime="20201117 14:47:53.206"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.200" endtime="20201117 14:47:53.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.209" endtime="20201117 14:47:53.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.213" endtime="20201117 14:47:53.232"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.211" endtime="20201117 14:47:53.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.207" endtime="20201117 14:47:53.233"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.845" endtime="20201117 14:47:53.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.843" endtime="20201117 14:47:53.234"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:52.842" endtime="20201117 14:47:53.234"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.236" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.245" endtime="20201117 14:47:53.259"></status>
</kw>
<msg timestamp="20201117 14:47:53.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.243" endtime="20201117 14:47:53.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.261" endtime="20201117 14:47:53.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.263" endtime="20201117 14:47:53.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.240" endtime="20201117 14:47:53.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.238" endtime="20201117 14:47:53.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.272" endtime="20201117 14:47:53.557"></status>
</kw>
<msg timestamp="20201117 14:47:53.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.271" endtime="20201117 14:47:53.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021774792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.562" endtime="20201117 14:47:53.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.570" endtime="20201117 14:47:53.571"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.268" endtime="20201117 14:47:53.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.267" endtime="20201117 14:47:53.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.576" level="INFO">${RESULT} = [{'time': 0.021774792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1527999999999825e-05, 'source_diff': 2.1527999999999825e-05}, {'time': 0.021800847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.573" endtime="20201117 14:47:53.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.590" level="INFO">${ACCURACY} = {'diff': [2.1527999999999825e-05, 2.1500000000000685e-05, 2.122300000000077e-05, 2.1888000000001157e-05, 2.1514000000000255e-05, 2.165300000000342e-05, 2.162500000000081e-05, 2.2013999999997286e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:53.577" endtime="20201117 14:47:53.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.594" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.593" endtime="20201117 14:47:53.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.597" level="INFO">VALUE: [2.1527999999999825e-05, 2.1500000000000685e-05, 2.122300000000077e-05, 2.1888000000001157e-05, 2.1514000000000255e-05, 2.165300000000342e-05, 2.162500000000081e-05, 2.2013999999997286e-05, 2.202700000000085e-05, 2.211099999999827e-05, 2.1638000000000907e-05, 2.1749999999997466e-05, 2.183300000000235e-05, 2.1680000000003086e-05, 2.138900000000013e-05, 2.159700000000167e-05, 2.206899999999956e-05, 2.1972000000002045e-05, 2.1985999999998146e-05, 2.183299999999888e-05, 2.163900000000038e-05, 2.1250000000000435e-05, 2.133299999999838e-05, 2.1764000000000505e-05, 2.184700000000192e-05, 2.2193999999999686e-05, 2.1306000000002184e-05, 2.2041999999999895e-05, 2.19030000000002e-05, 2.187500000000106e-05, 2.1971999999998576e-05, 2.188899999999716e-05, 2.165299999999995e-05, 2.1514000000000255e-05, 2.134699999999795e-05, 2.1320000000001754e-05, 2.169499999999866e-05, 2.143099999999884e-05, 2.162499999999734e-05, 2.1277999999999575e-05, 2.122300000000077e-05, 2.1278000000003044e-05, 2.141699999999927e-05, 2.187500000000106e-05, 2.2014000000000755e-05, 2.1457999999998506e-05, 2.138900000000013e-05, 2.137500000000056e-05, 2.1486000000001115e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.595" endtime="20201117 14:47:53.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.591" endtime="20201117 14:47:53.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.600" endtime="20201117 14:47:53.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.604" endtime="20201117 14:47:53.623"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.602" endtime="20201117 14:47:53.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.599" endtime="20201117 14:47:53.624"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.237" endtime="20201117 14:47:53.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.235" endtime="20201117 14:47:53.625"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.234" endtime="20201117 14:47:53.625"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.627" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.635" endtime="20201117 14:47:53.650"></status>
</kw>
<msg timestamp="20201117 14:47:53.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.634" endtime="20201117 14:47:53.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:53.652" endtime="20201117 14:47:53.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.654" endtime="20201117 14:47:53.656"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.631" endtime="20201117 14:47:53.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.629" endtime="20201117 14:47:53.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.663" endtime="20201117 14:47:53.948"></status>
</kw>
<msg timestamp="20201117 14:47:53.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.662" endtime="20201117 14:47:53.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:53.952" endtime="20201117 14:47:53.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.960" endtime="20201117 14:47:53.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.659" endtime="20201117 14:47:53.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.658" endtime="20201117 14:47:53.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:53.967" level="INFO">${RESULT} = [{'time': 0.021782458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1902000000000726e-05, 'source_diff': 2.1902000000000726e-05}, {'time': 0.021811472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:53.963" endtime="20201117 14:47:53.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:53.982" level="INFO">${ACCURACY} = {'diff': [2.1902000000000726e-05, 2.1985999999998146e-05, 2.194499999999891e-05, 2.1264000000000005e-05, 2.166699999999952e-05, 2.1527999999999825e-05, 2.1277999999999575e-05, 2.1707999999998756e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:53.968" endtime="20201117 14:47:53.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.986" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201117 14:47:53.985" endtime="20201117 14:47:53.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:53.989" level="INFO">VALUE: [2.1902000000000726e-05, 2.1985999999998146e-05, 2.194499999999891e-05, 2.1264000000000005e-05, 2.166699999999952e-05, 2.1527999999999825e-05, 2.1277999999999575e-05, 2.1707999999998756e-05, 2.165299999999995e-05, 2.17090000000017e-05, 2.1750000000000935e-05, 2.1362000000000464e-05, 2.1264000000000005e-05, 2.1500000000000685e-05, 2.176300000000103e-05, 2.1264000000000005e-05, 2.2193999999999686e-05, 2.180499999999974e-05, 2.206899999999956e-05, 2.1708000000002226e-05, 2.2250000000001435e-05, 2.1679999999999616e-05, 2.1693999999999186e-05, 2.1750000000000935e-05, 2.1555999999998965e-05, 2.2180000000000116e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.1291999999999145e-05, 2.1541999999999395e-05, 2.1778000000000075e-05, 2.2070000000002504e-05, 2.1250000000000435e-05, 2.1527999999999825e-05, 2.155499999999949e-05, 2.219499999999916e-05, 2.158299999999863e-05, 2.137500000000056e-05, 2.168100000000256e-05, 2.2014000000000755e-05, 2.156899999999906e-05, 2.1514000000000255e-05, 2.1555999999998965e-05, 2.1500000000000685e-05, 2.215300000000045e-05, 2.1750000000000935e-05, 2.186099999999802e-05, 2.188899999999716e-05, 2.20969999999987e-05, 2.1236000000000865e-05]</msg>
<status status="PASS" starttime="20201117 14:47:53.987" endtime="20201117 14:47:53.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.982" endtime="20201117 14:47:53.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:53.992" endtime="20201117 14:47:53.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:53.996" endtime="20201117 14:47:54.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.994" endtime="20201117 14:47:54.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.990" endtime="20201117 14:47:54.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.628" endtime="20201117 14:47:54.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.626" endtime="20201117 14:47:54.017"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:53.625" endtime="20201117 14:47:54.017"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.027" endtime="20201117 14:47:54.041"></status>
</kw>
<msg timestamp="20201117 14:47:54.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.026" endtime="20201117 14:47:54.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.043" endtime="20201117 14:47:54.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.045" endtime="20201117 14:47:54.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.023" endtime="20201117 14:47:54.047"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.021" endtime="20201117 14:47:54.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.054" endtime="20201117 14:47:54.339"></status>
</kw>
<msg timestamp="20201117 14:47:54.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:54.053" endtime="20201117 14:47:54.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:47:54.343" endtime="20201117 14:47:54.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.352" endtime="20201117 14:47:54.353"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.050" endtime="20201117 14:47:54.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.048" endtime="20201117 14:47:54.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.358" level="INFO">${RESULT} = [{'time': 0.0218625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.134700000000142e-05, 'source_diff': 2.134700000000142e-05}, {'time': 0.021891472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:54.355" endtime="20201117 14:47:54.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.372" level="INFO">${ACCURACY} = {'diff': [2.134700000000142e-05, 2.1249999999996966e-05, 2.166699999999952e-05, 2.216700000000002e-05, 2.1721999999998326e-05, 2.15830000000021e-05, 2.2028000000000325e-05, 2.20830000000026e-05, 2.134...</msg>
<status status="PASS" starttime="20201117 14:47:54.360" endtime="20201117 14:47:54.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.377" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.376" endtime="20201117 14:47:54.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.379" level="INFO">VALUE: [2.134700000000142e-05, 2.1249999999996966e-05, 2.166699999999952e-05, 2.216700000000002e-05, 2.1721999999998326e-05, 2.15830000000021e-05, 2.2028000000000325e-05, 2.20830000000026e-05, 2.134700000000142e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.186100000000149e-05, 2.1527999999999825e-05, 2.1750000000000935e-05, 2.137500000000056e-05, 2.1527999999999825e-05, 2.1305999999998715e-05, 2.1291999999999145e-05, 2.1250000000000435e-05, 2.218099999999959e-05, 2.2041999999999895e-05, 2.1834000000001824e-05, 2.186100000000149e-05, 2.1749999999997466e-05, 2.195899999999848e-05, 2.1612000000000714e-05, 2.1291999999999145e-05, 2.193099999999934e-05, 2.17770000000006e-05, 2.202700000000085e-05, 2.131899999999881e-05, 2.202700000000085e-05, 2.152700000000035e-05, 2.138900000000013e-05, 2.205499999999999e-05, 2.186099999999802e-05, 2.205499999999999e-05, 2.213900000000088e-05, 2.1971999999998576e-05, 2.212499999999784e-05, 2.1971999999998576e-05, 2.1471999999998076e-05, 2.184700000000192e-05, 2.14029999999997e-05, 2.1472000000001545e-05, 2.131899999999881e-05, 2.131899999999881e-05, 2.162500000000081e-05, 2.2014000000000755e-05, 2.1986000000001615e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.378" endtime="20201117 14:47:54.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.373" endtime="20201117 14:47:54.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.382" endtime="20201117 14:47:54.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.386" endtime="20201117 14:47:54.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.384" endtime="20201117 14:47:54.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.381" endtime="20201117 14:47:54.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.020" endtime="20201117 14:47:54.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.018" endtime="20201117 14:47:54.407"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.017" endtime="20201117 14:47:54.407"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.409" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.417" endtime="20201117 14:47:54.434"></status>
</kw>
<msg timestamp="20201117 14:47:54.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.416" endtime="20201117 14:47:54.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.435" endtime="20201117 14:47:54.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.437" endtime="20201117 14:47:54.439"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.413" endtime="20201117 14:47:54.440"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.411" endtime="20201117 14:47:54.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.446" endtime="20201117 14:47:54.733"></status>
</kw>
<msg timestamp="20201117 14:47:54.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.445" endtime="20201117 14:47:54.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.737" endtime="20201117 14:47:54.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.746" endtime="20201117 14:47:54.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.442" endtime="20201117 14:47:54.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.441" endtime="20201117 14:47:54.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:54.752" level="INFO">${RESULT} = [{'time': 0.022360625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.14029999999997e-05, 'source_diff': 2.14029999999997e-05}, {'time': 0.022385625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:47:54.749" endtime="20201117 14:47:54.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:54.766" level="INFO">${ACCURACY} = {'diff': [2.14029999999997e-05, 2.2014000000000755e-05, 2.1221999999997826e-05, 2.1805999999999215e-05, 2.1541999999999395e-05, 2.2013999999997286e-05, 2.191699999999977e-05, 2.187500000000106e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:47:54.754" endtime="20201117 14:47:54.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.770" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201117 14:47:54.769" endtime="20201117 14:47:54.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.773" level="INFO">VALUE: [2.14029999999997e-05, 2.2014000000000755e-05, 2.1221999999997826e-05, 2.1805999999999215e-05, 2.1541999999999395e-05, 2.2013999999997286e-05, 2.191699999999977e-05, 2.187500000000106e-05, 2.191699999999977e-05, 2.1999999999997716e-05, 2.220899999999873e-05, 2.213900000000088e-05, 2.2014000000000755e-05, 2.209700000000217e-05, 2.173700000000084e-05, 2.166700000000299e-05, 2.195900000000195e-05, 2.130499999999924e-05, 2.1943999999999436e-05, 2.184699999999845e-05, 2.130499999999924e-05, 2.197299999999805e-05, 2.17770000000006e-05, 2.1415999999999796e-05, 2.163900000000038e-05, 2.1776999999997132e-05, 2.1444000000002406e-05, 2.181899999999931e-05, 2.183300000000235e-05, 2.165299999999995e-05, 2.1499999999997216e-05, 2.2028000000000325e-05, 2.209700000000217e-05, 2.129100000000314e-05, 2.1943999999999436e-05, 2.1207999999998256e-05, 2.1500000000000685e-05, 2.1764000000000505e-05, 2.1527999999999825e-05, 2.138900000000013e-05, 2.1292000000002614e-05, 2.1541999999999395e-05, 2.1707999999998756e-05, 2.1764000000000505e-05, 2.119500000000163e-05, 2.143099999999884e-05, 2.2084000000002074e-05, 2.168100000000256e-05, 2.184699999999845e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201117 14:47:54.771" endtime="20201117 14:47:54.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.767" endtime="20201117 14:47:54.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.776" endtime="20201117 14:47:54.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:54.779" endtime="20201117 14:47:54.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.778" endtime="20201117 14:47:54.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.774" endtime="20201117 14:47:54.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.410" endtime="20201117 14:47:54.800"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.408" endtime="20201117 14:47:54.801"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.407" endtime="20201117 14:47:54.801"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.804" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.812" endtime="20201117 14:47:54.827"></status>
</kw>
<msg timestamp="20201117 14:47:54.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.810" endtime="20201117 14:47:54.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:54.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:54.829" endtime="20201117 14:47:54.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.831" endtime="20201117 14:47:54.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.808" endtime="20201117 14:47:54.833"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.806" endtime="20201117 14:47:54.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:54.841" endtime="20201117 14:47:55.126"></status>
</kw>
<msg timestamp="20201117 14:47:55.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:54.839" endtime="20201117 14:47:55.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.130" endtime="20201117 14:47:55.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.139" endtime="20201117 14:47:55.140"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.836" endtime="20201117 14:47:55.141"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.834" endtime="20201117 14:47:55.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.146" level="INFO">${RESULT} = [{'time': 0.022647625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1500000000000685e-05, 'source_diff': 2.1500000000000685e-05}, {'time': 0.022675625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:55.142" endtime="20201117 14:47:55.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.159" level="INFO">${ACCURACY} = {'diff': [2.1500000000000685e-05, 2.162500000000081e-05, 2.1472000000001545e-05, 2.2014000000000755e-05, 2.215300000000045e-05, 2.1958000000002476e-05, 2.2070000000002504e-05, 2.218099999999959e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:55.147" endtime="20201117 14:47:55.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.163" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.162" endtime="20201117 14:47:55.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.166" level="INFO">VALUE: [2.1500000000000685e-05, 2.162500000000081e-05, 2.1472000000001545e-05, 2.2014000000000755e-05, 2.215300000000045e-05, 2.1958000000002476e-05, 2.2070000000002504e-05, 2.218099999999959e-05, 2.2014000000000755e-05, 2.1820000000002254e-05, 2.2014000000000755e-05, 2.1472000000001545e-05, 2.156900000000253e-05, 2.1277999999999575e-05, 2.2000000000001185e-05, 2.1750000000000935e-05, 2.2000000000001185e-05, 2.144500000000188e-05, 2.126300000000053e-05, 2.1527999999999825e-05, 2.12770000000001e-05, 2.201300000000128e-05, 2.155499999999949e-05, 2.1486000000001115e-05, 2.162500000000081e-05, 2.155499999999949e-05, 2.133299999999838e-05, 2.1500000000000685e-05, 2.152700000000035e-05, 2.1666000000000046e-05, 2.1721999999998326e-05, 2.165299999999995e-05, 2.2207999999999256e-05, 2.2000000000001185e-05, 2.131899999999881e-05, 2.1679999999999616e-05, 2.1429999999999366e-05, 2.2000000000001185e-05, 2.1264000000000005e-05, 2.219499999999916e-05, 2.1221999999997826e-05, 2.1778000000000075e-05, 2.168099999999909e-05, 2.186100000000149e-05, 2.19030000000002e-05, 2.2014000000000755e-05, 2.15830000000021e-05, 2.162500000000081e-05, 2.2084000000002074e-05, 2.2083999999998605e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.165" endtime="20201117 14:47:55.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.160" endtime="20201117 14:47:55.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.169" endtime="20201117 14:47:55.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.172" endtime="20201117 14:47:55.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.171" endtime="20201117 14:47:55.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.167" endtime="20201117 14:47:55.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.804" endtime="20201117 14:47:55.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.802" endtime="20201117 14:47:55.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:54.801" endtime="20201117 14:47:55.194"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.196" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.204" endtime="20201117 14:47:55.221"></status>
</kw>
<msg timestamp="20201117 14:47:55.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.202" endtime="20201117 14:47:55.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.222" endtime="20201117 14:47:55.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.225" endtime="20201117 14:47:55.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.200" endtime="20201117 14:47:55.227"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.198" endtime="20201117 14:47:55.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.234" endtime="20201117 14:47:55.519"></status>
</kw>
<msg timestamp="20201117 14:47:55.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.233" endtime="20201117 14:47:55.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.523" endtime="20201117 14:47:55.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.531" endtime="20201117 14:47:55.533"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.230" endtime="20201117 14:47:55.534"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.228" endtime="20201117 14:47:55.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.538" level="INFO">${RESULT} = [{'time': 0.022760222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2985999999999146e-05, 'source_diff': 2.2985999999999146e-05}, {'time': 0.022786292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:55.535" endtime="20201117 14:47:55.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.553" level="INFO">${ACCURACY} = {'diff': [2.2985999999999146e-05, 2.286099999999902e-05, 2.3165999999998077e-05, 2.230500000000024e-05, 2.2985999999999146e-05, 2.288900000000163e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:55.539" endtime="20201117 14:47:55.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.557" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.556" endtime="20201117 14:47:55.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.560" level="INFO">VALUE: [2.2985999999999146e-05, 2.286099999999902e-05, 2.3165999999998077e-05, 2.230500000000024e-05, 2.2985999999999146e-05, 2.288900000000163e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.2264000000001005e-05, 2.262499999999834e-05, 2.281900000000031e-05, 2.287499999999859e-05, 2.236100000000199e-05, 2.236100000000199e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 2.266700000000052e-05, 2.2250000000001435e-05, 2.2528000000000825e-05, 2.313900000000188e-05, 2.293100000000034e-05, 2.313900000000188e-05, 2.2264000000001005e-05, 2.2499999999998216e-05, 2.288899999999816e-05, 2.312499999999884e-05, 2.2514000000001255e-05, 2.3165999999998077e-05, 2.2333999999998855e-05, 2.2971999999999576e-05, 2.238900000000113e-05, 2.3180000000001116e-05, 2.2540999999997452e-05, 2.254100000000092e-05, 2.2944000000000436e-05, 2.2402000000001226e-05, 2.3026999999998382e-05, 2.3027999999997856e-05, 2.3179999999997647e-05, 2.233300000000285e-05, 2.2250000000001435e-05, 2.2722000000002796e-05, 2.293100000000034e-05, 2.2749999999998466e-05, 2.261099999999877e-05, 2.2430000000000366e-05, 2.241700000000027e-05, 2.288899999999816e-05, 2.2499999999998216e-05, 2.2806000000000215e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.558" endtime="20201117 14:47:55.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.554" endtime="20201117 14:47:55.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.563" endtime="20201117 14:47:55.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.566" endtime="20201117 14:47:55.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.565" endtime="20201117 14:47:55.586"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.561" endtime="20201117 14:47:55.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.197" endtime="20201117 14:47:55.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.195" endtime="20201117 14:47:55.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.194" endtime="20201117 14:47:55.588"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.590" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.599" endtime="20201117 14:47:55.614"></status>
</kw>
<msg timestamp="20201117 14:47:55.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.597" endtime="20201117 14:47:55.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.616" endtime="20201117 14:47:55.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.618" endtime="20201117 14:47:55.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.595" endtime="20201117 14:47:55.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.592" endtime="20201117 14:47:55.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.627" endtime="20201117 14:47:55.912"></status>
</kw>
<msg timestamp="20201117 14:47:55.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.626" endtime="20201117 14:47:55.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022578111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:55.916" endtime="20201117 14:47:55.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.924" endtime="20201117 14:47:55.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.623" endtime="20201117 14:47:55.926"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.621" endtime="20201117 14:47:55.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:55.931" level="INFO">${RESULT} = [{'time': 0.022578111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.363900000000238e-05, 'source_diff': 2.363900000000238e-05}, {'time': 0.022608139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:55.927" endtime="20201117 14:47:55.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:55.944" level="INFO">${ACCURACY} = {'diff': [2.363900000000238e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3805999999997746e-05, 2.4096999999997232e-05, 2.344500000000041e-05, 2.3763999999999036e-05, 2.416699999999855e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:55.932" endtime="20201117 14:47:55.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.949" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201117 14:47:55.948" endtime="20201117 14:47:55.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.951" level="INFO">VALUE: [2.363900000000238e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3805999999997746e-05, 2.4096999999997232e-05, 2.344500000000041e-05, 2.3763999999999036e-05, 2.416699999999855e-05, 2.3542000000001395e-05, 2.35970000000002e-05, 2.345899999999998e-05, 2.4027999999998856e-05, 2.395900000000048e-05, 2.341700000000127e-05, 2.394500000000091e-05, 2.366700000000152e-05, 2.3305999999997246e-05, 2.37229999999998e-05, 2.3556000000000965e-05, 2.404100000000242e-05, 2.3347999999999425e-05, 2.337499999999909e-05, 2.362500000000281e-05, 2.3916000000002297e-05, 2.333300000000038e-05, 2.3694000000001186e-05, 2.40970000000007e-05, 2.358300000000063e-05, 2.3665999999998577e-05, 2.4013999999999286e-05, 2.3804999999998272e-05, 2.411100000000027e-05, 2.406900000000156e-05, 2.370900000000023e-05, 2.387499999999959e-05, 2.4194000000001686e-05, 2.411100000000027e-05, 2.3764000000002505e-05, 2.3792000000001645e-05, 2.366700000000152e-05, 2.336099999999952e-05, 2.3527999999998356e-05, 2.391700000000177e-05, 2.35970000000002e-05, 2.34030000000017e-05, 2.3221999999999826e-05, 2.3777999999998606e-05, 2.4222000000000826e-05, 2.4084000000000605e-05, 2.345899999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:47:55.950" endtime="20201117 14:47:55.952"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.945" endtime="20201117 14:47:55.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.955" endtime="20201117 14:47:55.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:55.959" endtime="20201117 14:47:55.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.957" endtime="20201117 14:47:55.979"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.953" endtime="20201117 14:47:55.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.591" endtime="20201117 14:47:55.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.589" endtime="20201117 14:47:55.980"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.588" endtime="20201117 14:47:55.980"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:55.983" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:55.991" endtime="20201117 14:47:56.007"></status>
</kw>
<msg timestamp="20201117 14:47:56.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:55.989" endtime="20201117 14:47:56.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.009" endtime="20201117 14:47:56.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.011" endtime="20201117 14:47:56.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.987" endtime="20201117 14:47:56.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.985" endtime="20201117 14:47:56.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.020" endtime="20201117 14:47:56.309"></status>
</kw>
<msg timestamp="20201117 14:47:56.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.019" endtime="20201117 14:47:56.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022025778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.313" endtime="20201117 14:47:56.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.321" endtime="20201117 14:47:56.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.016" endtime="20201117 14:47:56.323"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.014" endtime="20201117 14:47:56.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.328" level="INFO">${RESULT} = [{'time': 0.022050778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000000716e-05, 'source_diff': 2.5000000000000716e-05}, {'time': 0.022084764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:56.324" endtime="20201117 14:47:56.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.341" level="INFO">${ACCURACY} = {'diff': [2.5000000000000716e-05, 2.4291999999998676e-05, 2.4277999999999106e-05, 2.436100000000052e-05, 2.4306000000001715e-05, 2.4750000000000466e-05, 2.470899999999776e-05, 2.5084000000001605e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:56.329" endtime="20201117 14:47:56.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.346" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.345" endtime="20201117 14:47:56.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.348" level="INFO">VALUE: [2.5000000000000716e-05, 2.4291999999998676e-05, 2.4277999999999106e-05, 2.436100000000052e-05, 2.4306000000001715e-05, 2.4750000000000466e-05, 2.470899999999776e-05, 2.5084000000001605e-05, 2.4985999999997677e-05, 2.448700000000012e-05, 2.5070000000002035e-05, 2.4540999999999452e-05, 2.5012999999997343e-05, 2.512500000000084e-05, 2.4179999999998647e-05, 2.4750000000000466e-05, 2.455500000000249e-05, 2.4290999999999202e-05, 2.5054999999999522e-05, 2.4263999999999536e-05, 2.4568999999998592e-05, 2.5040999999999952e-05, 2.5264000000000536e-05, 2.5179999999999647e-05, 2.4542000000002395e-05, 2.5068999999999092e-05, 2.513900000000041e-05, 2.487500000000059e-05, 2.4429999999998897e-05, 2.5068999999999092e-05, 2.4846999999997982e-05, 2.483300000000188e-05, 2.4513999999999786e-05, 2.4986000000001146e-05, 2.4513999999999786e-05, 2.4306000000001715e-05, 2.5000000000000716e-05, 2.4263999999999536e-05, 2.5096999999998232e-05, 2.5084000000001605e-05, 2.465299999999948e-05, 2.437500000000009e-05, 2.4986000000001146e-05, 2.4500000000000216e-05, 2.437500000000009e-05, 2.45970000000012e-05, 2.5000000000000716e-05, 2.5041999999999426e-05, 2.469500000000166e-05, 2.486100000000102e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.347" endtime="20201117 14:47:56.354"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.342" endtime="20201117 14:47:56.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.356" endtime="20201117 14:47:56.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.360" endtime="20201117 14:47:56.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.358" endtime="20201117 14:47:56.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.355" endtime="20201117 14:47:56.380"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.983" endtime="20201117 14:47:56.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.982" endtime="20201117 14:47:56.381"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:55.981" endtime="20201117 14:47:56.381"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.383" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.392" endtime="20201117 14:47:56.408"></status>
</kw>
<msg timestamp="20201117 14:47:56.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.390" endtime="20201117 14:47:56.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.410" endtime="20201117 14:47:56.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.412" endtime="20201117 14:47:56.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.388" endtime="20201117 14:47:56.414"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.385" endtime="20201117 14:47:56.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.421" endtime="20201117 14:47:56.708"></status>
</kw>
<msg timestamp="20201117 14:47:56.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.420" endtime="20201117 14:47:56.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.712" endtime="20201117 14:47:56.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.720" endtime="20201117 14:47:56.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.417" endtime="20201117 14:47:56.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.415" endtime="20201117 14:47:56.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:56.727" level="INFO">${RESULT} = [{'time': 0.022706042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5249999999997497e-05, 'source_diff': 2.5249999999997497e-05}, {'time': 0.022738056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:56.724" endtime="20201117 14:47:56.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:56.741" level="INFO">${ACCURACY} = {'diff': [2.5249999999997497e-05, 2.570899999999876e-05, 2.5805999999999746e-05, 2.59170000000003e-05, 2.5762999999998093e-05, 2.5735999999998427e-05, 2.570899999999876e-05, 2.5624999999997872e-05, 2....</msg>
<status status="PASS" starttime="20201117 14:47:56.728" endtime="20201117 14:47:56.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.745" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201117 14:47:56.744" endtime="20201117 14:47:56.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.748" level="INFO">VALUE: [2.5249999999997497e-05, 2.570899999999876e-05, 2.5805999999999746e-05, 2.59170000000003e-05, 2.5762999999998093e-05, 2.5735999999998427e-05, 2.570899999999876e-05, 2.5624999999997872e-05, 2.5457999999999037e-05, 2.5930000000000397e-05, 2.5222000000001826e-05, 2.615300000000098e-05, 2.5707999999999287e-05, 2.5221999999998357e-05, 2.620899999999926e-05, 2.5235999999997927e-05, 2.6042000000000426e-05, 2.5443999999999467e-05, 2.5541000000000452e-05, 2.5735999999998427e-05, 2.615300000000098e-05, 2.6027999999997387e-05, 2.594499999999944e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.587500000000159e-05, 2.5236000000001396e-05, 2.595899999999901e-05, 2.5957999999999537e-05, 2.5832999999999412e-05, 2.6055999999999996e-05, 2.615300000000098e-05, 2.54169999999998e-05, 2.5277000000000632e-05, 2.618100000000012e-05, 2.5792000000000176e-05, 2.5514000000000786e-05, 2.620899999999926e-05, 2.612500000000184e-05, 2.6096999999999232e-05, 2.570899999999876e-05, 2.5528000000000356e-05, 2.6055000000000522e-05, 2.5499999999997747e-05, 2.5846999999998982e-05, 2.6027000000001382e-05, 2.5264000000000536e-05, 2.5874999999998122e-05, 2.5429999999999897e-05, 2.6055000000000522e-05]</msg>
<status status="PASS" starttime="20201117 14:47:56.746" endtime="20201117 14:47:56.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.742" endtime="20201117 14:47:56.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.751" endtime="20201117 14:47:56.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:56.755" endtime="20201117 14:47:56.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.753" endtime="20201117 14:47:56.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.750" endtime="20201117 14:47:56.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.384" endtime="20201117 14:47:56.775"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.382" endtime="20201117 14:47:56.776"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.381" endtime="20201117 14:47:56.776"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.778" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.786" endtime="20201117 14:47:56.802"></status>
</kw>
<msg timestamp="20201117 14:47:56.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.785" endtime="20201117 14:47:56.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:56.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:56.803" endtime="20201117 14:47:56.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.806" endtime="20201117 14:47:56.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.782" endtime="20201117 14:47:56.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.780" endtime="20201117 14:47:56.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:56.815" endtime="20201117 14:47:57.101"></status>
</kw>
<msg timestamp="20201117 14:47:57.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:56.813" endtime="20201117 14:47:57.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.106" endtime="20201117 14:47:57.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.114" endtime="20201117 14:47:57.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.811" endtime="20201117 14:47:57.116"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.809" endtime="20201117 14:47:57.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.121" level="INFO">${RESULT} = [{'time': 0.021855944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6304999999997303e-05, 'source_diff': 2.6304999999997303e-05}, {'time': 0.021885986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:57.117" endtime="20201117 14:47:57.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.136" level="INFO">${ACCURACY} = {'diff': [2.6304999999997303e-05, 2.7054999999998053e-05, 2.6444000000000467e-05, 2.6708000000000287e-05, 2.6680000000001147e-05, 2.6777999999998137e-05, 2.6360999999999052e-05, 2.6749999999998997e-05...</msg>
<status status="PASS" starttime="20201117 14:47:57.122" endtime="20201117 14:47:57.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.140" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.139" endtime="20201117 14:47:57.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.143" level="INFO">VALUE: [2.6304999999997303e-05, 2.7054999999998053e-05, 2.6444000000000467e-05, 2.6708000000000287e-05, 2.6680000000001147e-05, 2.6777999999998137e-05, 2.6360999999999052e-05, 2.6749999999998997e-05, 2.6666000000001577e-05, 2.6610999999999302e-05, 2.697299999999958e-05, 2.6708000000000287e-05, 2.6610999999999302e-05, 2.6527999999997887e-05, 2.7070000000000566e-05, 2.640300000000123e-05, 2.6888999999998692e-05, 2.636100000000252e-05, 2.719500000000069e-05, 2.6264000000001536e-05, 2.719500000000069e-05, 2.6348000000002425e-05, 2.6972000000000107e-05, 2.6750000000002466e-05, 2.7235999999999927e-05, 2.690300000000173e-05, 2.6790999999998233e-05, 2.6264000000001536e-05, 2.634700000000295e-05, 2.715299999999851e-05, 2.690299999999826e-05, 2.7124999999999372e-05, 2.6583000000000162e-05, 2.7097000000000232e-05, 2.663900000000191e-05, 2.6429999999997428e-05, 2.6985999999999677e-05, 2.690300000000173e-05, 2.6429999999997428e-05, 2.6736000000002896e-05, 2.661100000000277e-05, 2.6499999999998747e-05, 2.7208000000000787e-05, 2.6374999999998622e-05, 2.6514000000001786e-05, 2.6292000000000676e-05, 2.669500000000019e-05, 2.668100000000062e-05, 2.7097000000000232e-05, 2.6556000000000496e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.141" endtime="20201117 14:47:57.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.137" endtime="20201117 14:47:57.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.146" endtime="20201117 14:47:57.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.149" endtime="20201117 14:47:57.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.148" endtime="20201117 14:47:57.169"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.144" endtime="20201117 14:47:57.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.779" endtime="20201117 14:47:57.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.777" endtime="20201117 14:47:57.170"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:56.776" endtime="20201117 14:47:57.170"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.173" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.181" endtime="20201117 14:47:57.196"></status>
</kw>
<msg timestamp="20201117 14:47:57.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.179" endtime="20201117 14:47:57.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.197" endtime="20201117 14:47:57.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.200" endtime="20201117 14:47:57.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.177" endtime="20201117 14:47:57.202"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.175" endtime="20201117 14:47:57.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.209" endtime="20201117 14:47:57.494"></status>
</kw>
<msg timestamp="20201117 14:47:57.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.207" endtime="20201117 14:47:57.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.498" endtime="20201117 14:47:57.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.507" endtime="20201117 14:47:57.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.205" endtime="20201117 14:47:57.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.203" endtime="20201117 14:47:57.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.514" level="INFO">${RESULT} = [{'time': 0.022026625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7278000000002106e-05, 'source_diff': 2.7278000000002106e-05}, {'time': 0.022062653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:57.510" endtime="20201117 14:47:57.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.527" level="INFO">${ACCURACY} = {'diff': [2.7278000000002106e-05, 2.7806000000001746e-05, 2.7776999999999663e-05, 2.8082999999998193e-05, 2.7722000000000857e-05, 2.7596999999997263e-05, 2.7319000000001342e-05, 2.7832999999997943e-05...</msg>
<status status="PASS" starttime="20201117 14:47:57.515" endtime="20201117 14:47:57.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.532" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.531" endtime="20201117 14:47:57.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.534" level="INFO">VALUE: [2.7278000000002106e-05, 2.7806000000001746e-05, 2.7776999999999663e-05, 2.8082999999998193e-05, 2.7722000000000857e-05, 2.7596999999997263e-05, 2.7319000000001342e-05, 2.7832999999997943e-05, 2.8000000000000247e-05, 2.8165999999999608e-05, 2.7374999999999622e-05, 2.7986000000000677e-05, 2.7347999999999956e-05, 2.7804999999998803e-05, 2.7791999999998707e-05, 2.7277999999998637e-05, 2.8013999999999817e-05, 2.819499999999822e-05, 2.743100000000137e-05, 2.7361000000000052e-05, 2.7235999999999927e-05, 2.8042000000002426e-05, 2.819500000000169e-05, 2.7749999999999997e-05, 2.7820000000001316e-05, 2.7556000000001496e-05, 2.795900000000101e-05, 2.748699999999965e-05, 2.8083000000001662e-05, 2.722299999999983e-05, 2.795900000000101e-05, 2.7763999999999567e-05, 2.8026999999999913e-05, 2.8152000000000038e-05, 2.7637999999999968e-05, 2.7597000000000732e-05, 2.7499999999999747e-05, 2.7401999999999288e-05, 2.740299999999876e-05, 2.7680000000002147e-05, 2.7902999999999262e-05, 2.7888999999999692e-05, 2.7486000000000177e-05, 2.7791999999998707e-05, 2.741699999999833e-05, 2.8125000000000372e-05, 2.7221999999996888e-05, 2.7458000000001037e-05, 2.790300000000273e-05, 2.7361000000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.533" endtime="20201117 14:47:57.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.528" endtime="20201117 14:47:57.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.538" endtime="20201117 14:47:57.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.541" endtime="20201117 14:47:57.560"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.539" endtime="20201117 14:47:57.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.536" endtime="20201117 14:47:57.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.173" endtime="20201117 14:47:57.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.172" endtime="20201117 14:47:57.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.171" endtime="20201117 14:47:57.562"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.564" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.572" endtime="20201117 14:47:57.588"></status>
</kw>
<msg timestamp="20201117 14:47:57.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.571" endtime="20201117 14:47:57.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.590" endtime="20201117 14:47:57.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.592" endtime="20201117 14:47:57.594"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.568" endtime="20201117 14:47:57.595"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.566" endtime="20201117 14:47:57.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.602" endtime="20201117 14:47:57.889"></status>
</kw>
<msg timestamp="20201117 14:47:57.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:57.600" endtime="20201117 14:47:57.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:47:57.893" endtime="20201117 14:47:57.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.902" endtime="20201117 14:47:57.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.597" endtime="20201117 14:47:57.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.596" endtime="20201117 14:47:57.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:57.908" level="INFO">${RESULT} = [{'time': 0.02180075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8639000000000442e-05, 'source_diff': 2.8639000000000442e-05}, {'time': 0.02183475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:57.905" endtime="20201117 14:47:57.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:57.922" level="INFO">${ACCURACY} = {'diff': [2.8639000000000442e-05, 2.8347000000001482e-05, 2.841699999999933e-05, 2.8235999999997458e-05, 2.8458000000002037e-05, 2.8541999999999457e-05, 2.8903000000000262e-05, 2.84309999999989e-05, 2...</msg>
<status status="PASS" starttime="20201117 14:47:57.909" endtime="20201117 14:47:57.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.926" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201117 14:47:57.925" endtime="20201117 14:47:57.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.929" level="INFO">VALUE: [2.8639000000000442e-05, 2.8347000000001482e-05, 2.841699999999933e-05, 2.8235999999997458e-05, 2.8458000000002037e-05, 2.8541999999999457e-05, 2.8903000000000262e-05, 2.84309999999989e-05, 2.8736000000001427e-05, 2.894500000000244e-05, 2.8320000000001816e-05, 2.84309999999989e-05, 2.8319999999998346e-05, 2.9111000000001802e-05, 2.8624999999997403e-05, 2.9028000000000387e-05, 2.8832999999998943e-05, 2.8916999999999832e-05, 2.8847000000001982e-05, 2.8611000000001302e-05, 2.8249999999997027e-05, 2.8568999999999123e-05, 2.8305000000002772e-05, 2.8375000000000622e-05, 2.9222000000002357e-05, 2.840300000000323e-05, 2.8860999999998083e-05, 2.9000000000001247e-05, 2.8236000000000927e-05, 2.8500000000000747e-05, 2.8846999999998513e-05, 2.8305999999998777e-05, 2.8861000000001552e-05, 2.8277999999999637e-05, 2.84309999999989e-05, 2.8333000000001912e-05, 2.8764000000000567e-05, 2.9152999999997042e-05, 2.8347000000001482e-05, 2.8361000000001052e-05, 2.8653000000000012e-05, 2.8847000000001982e-05, 2.9125000000001372e-05, 2.820899999999779e-05, 2.8152999999999512e-05, 2.841699999999933e-05, 2.8903000000000262e-05, 2.868099999999915e-05, 2.9138000000001468e-05, 2.8333999999997916e-05]</msg>
<status status="PASS" starttime="20201117 14:47:57.927" endtime="20201117 14:47:57.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.923" endtime="20201117 14:47:57.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.932" endtime="20201117 14:47:57.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:57.935" endtime="20201117 14:47:57.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.934" endtime="20201117 14:47:57.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.930" endtime="20201117 14:47:57.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.565" endtime="20201117 14:47:57.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.563" endtime="20201117 14:47:57.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.562" endtime="20201117 14:47:57.957"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.967" endtime="20201117 14:47:57.983"></status>
</kw>
<msg timestamp="20201117 14:47:57.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.966" endtime="20201117 14:47:57.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:57.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:57.984" endtime="20201117 14:47:57.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.988" endtime="20201117 14:47:57.989"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.963" endtime="20201117 14:47:57.990"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.961" endtime="20201117 14:47:57.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:57.998" endtime="20201117 14:47:58.285"></status>
</kw>
<msg timestamp="20201117 14:47:58.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:57.996" endtime="20201117 14:47:58.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021884222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.289" endtime="20201117 14:47:58.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.297" endtime="20201117 14:47:58.299"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.993" endtime="20201117 14:47:58.300"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.991" endtime="20201117 14:47:58.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.304" level="INFO">${RESULT} = [{'time': 0.021913778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9556000000000027e-05, 'source_diff': 2.9556000000000027e-05}, {'time': 0.021948806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:58.301" endtime="20201117 14:47:58.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.317" level="INFO">${ACCURACY} = {'diff': [2.9556000000000027e-05, 2.94309999999999e-05, 2.9360999999998583e-05, 3.0013999999998348e-05, 2.9542000000000457e-05, 2.9819999999999847e-05, 2.9250000000001497e-05, 3.0208000000000318e-05, ...</msg>
<status status="PASS" starttime="20201117 14:47:58.305" endtime="20201117 14:47:58.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.322" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.321" endtime="20201117 14:47:58.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.324" level="INFO">VALUE: [2.9556000000000027e-05, 2.94309999999999e-05, 2.9360999999998583e-05, 3.0013999999998348e-05, 2.9542000000000457e-05, 2.9819999999999847e-05, 2.9250000000001497e-05, 3.0208000000000318e-05, 2.9361999999998056e-05, 3.0097999999999236e-05, 2.9750000000001997e-05, 2.9874999999998653e-05, 2.9735999999998958e-05, 2.9958000000000068e-05, 2.9611000000002302e-05, 3.016599999999814e-05, 2.9264000000001067e-05, 2.9290999999997264e-05, 3.0139000000001942e-05, 2.9514000000001317e-05, 2.9653000000001012e-05, 3.0027999999997917e-05, 2.9360999999998583e-05, 2.9542000000000457e-05, 2.9305999999999777e-05, 2.9875000000002122e-05, 2.9639000000001442e-05, 2.9985999999999208e-05, 3.0070000000000097e-05, 2.9819999999999847e-05, 3.0056000000000527e-05, 2.9346999999999013e-05, 2.9360999999998583e-05, 2.9346999999999013e-05, 2.9819999999999847e-05, 2.9860999999999083e-05, 2.9388999999997723e-05, 2.9778000000001137e-05, 2.9263000000001593e-05, 2.9291000000000733e-05, 2.9667000000000582e-05, 2.9555000000000553e-05, 2.9305000000000303e-05, 2.9569000000000123e-05, 2.9485999999998708e-05, 2.9639000000001442e-05, 2.9541000000000983e-05, 2.9499999999998278e-05, 3.0208000000000318e-05, 2.9457999999999568e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.323" endtime="20201117 14:47:58.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.318" endtime="20201117 14:47:58.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.327" endtime="20201117 14:47:58.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.331" endtime="20201117 14:47:58.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.329" endtime="20201117 14:47:58.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.326" endtime="20201117 14:47:58.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.960" endtime="20201117 14:47:58.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.958" endtime="20201117 14:47:58.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:57.957" endtime="20201117 14:47:58.352"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.363" endtime="20201117 14:47:58.379"></status>
</kw>
<msg timestamp="20201117 14:47:58.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.361" endtime="20201117 14:47:58.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.380" endtime="20201117 14:47:58.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.383" endtime="20201117 14:47:58.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.359" endtime="20201117 14:47:58.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.356" endtime="20201117 14:47:58.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.392" endtime="20201117 14:47:58.678"></status>
</kw>
<msg timestamp="20201117 14:47:58.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.390" endtime="20201117 14:47:58.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022363528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022394611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.682" endtime="20201117 14:47:58.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.690" endtime="20201117 14:47:58.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.388" endtime="20201117 14:47:58.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.386" endtime="20201117 14:47:58.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:58.697" level="INFO">${RESULT} = [{'time': 0.022394611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1082999999997724e-05, 'source_diff': 3.1082999999997724e-05}, {'time': 0.022434569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:47:58.694" endtime="20201117 14:47:58.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:58.712" level="INFO">${ACCURACY} = {'diff': [3.1082999999997724e-05, 3.083300000000094e-05, 3.0277999999998167e-05, 3.081900000000137e-05, 3.102700000000291e-05, 3.119399999999828e-05, 3.07639999999991e-05, 3.052800000000189e-05, 3.073...</msg>
<status status="PASS" starttime="20201117 14:47:58.698" endtime="20201117 14:47:58.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.716" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201117 14:47:58.715" endtime="20201117 14:47:58.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.719" level="INFO">VALUE: [3.1082999999997724e-05, 3.083300000000094e-05, 3.0277999999998167e-05, 3.081900000000137e-05, 3.102700000000291e-05, 3.119399999999828e-05, 3.07639999999991e-05, 3.052800000000189e-05, 3.073599999999996e-05, 3.0249999999999028e-05, 3.0444000000000998e-05, 3.119400000000175e-05, 3.0458000000000568e-05, 3.088899999999922e-05, 3.102799999999892e-05, 3.097199999999717e-05, 3.0472000000000138e-05, 3.102799999999892e-05, 3.079200000000171e-05, 3.073599999999996e-05, 3.070900000000029e-05, 3.108400000000067e-05, 3.102799999999892e-05, 3.087499999999965e-05, 3.0249999999999028e-05, 3.099999999999978e-05, 3.056900000000112e-05, 3.054200000000146e-05, 3.0861999999999556e-05, 3.0277999999998167e-05, 3.072200000000039e-05, 3.0276999999998694e-05, 3.109700000000076e-05, 3.084700000000051e-05, 3.0485999999999708e-05, 3.08050000000018e-05, 3.0318999999997404e-05, 3.102799999999892e-05, 3.113899999999947e-05, 3.083300000000094e-05, 3.0292000000001207e-05, 3.0374999999999153e-05, 3.0403000000001762e-05, 3.079200000000171e-05, 3.115300000000251e-05, 3.079200000000171e-05, 3.094500000000097e-05, 3.0361000000003052e-05, 3.0221999999999888e-05, 3.079200000000171e-05]</msg>
<status status="PASS" starttime="20201117 14:47:58.717" endtime="20201117 14:47:58.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.713" endtime="20201117 14:47:58.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.722" endtime="20201117 14:47:58.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:58.726" endtime="20201117 14:47:58.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.724" endtime="20201117 14:47:58.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.720" endtime="20201117 14:47:58.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.355" endtime="20201117 14:47:58.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.353" endtime="20201117 14:47:58.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.352" endtime="20201117 14:47:58.747"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.750" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.758" endtime="20201117 14:47:58.773"></status>
</kw>
<msg timestamp="20201117 14:47:58.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.756" endtime="20201117 14:47:58.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:58.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:58.774" endtime="20201117 14:47:58.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.777" endtime="20201117 14:47:58.778"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.754" endtime="20201117 14:47:58.779"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.752" endtime="20201117 14:47:58.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:58.786" endtime="20201117 14:47:59.072"></status>
</kw>
<msg timestamp="20201117 14:47:59.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:58.784" endtime="20201117 14:47:59.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021851889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.076" endtime="20201117 14:47:59.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.085" endtime="20201117 14:47:59.086"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.782" endtime="20201117 14:47:59.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.780" endtime="20201117 14:47:59.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.091" level="INFO">${RESULT} = [{'time': 0.021883681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179199999999924e-05, 'source_diff': 3.179199999999924e-05}, {'time': 0.021917736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.088" endtime="20201117 14:47:59.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.105" level="INFO">${ACCURACY} = {'diff': [3.179199999999924e-05, 3.148600000000071e-05, 3.1540999999999514e-05, 3.1290999999999264e-05, 3.136100000000058e-05, 3.169399999999878e-05, 3.154100000000298e-05, 3.169400000000225e-05, 3.21...</msg>
<status status="PASS" starttime="20201117 14:47:59.092" endtime="20201117 14:47:59.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.109" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.108" endtime="20201117 14:47:59.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.111" level="INFO">VALUE: [3.179199999999924e-05, 3.148600000000071e-05, 3.1540999999999514e-05, 3.1290999999999264e-05, 3.136100000000058e-05, 3.169399999999878e-05, 3.154100000000298e-05, 3.169400000000225e-05, 3.219399999999928e-05, 3.145800000000157e-05, 3.150000000000028e-05, 3.158300000000169e-05, 3.151399999999985e-05, 3.147199999999767e-05, 3.158300000000169e-05, 3.1582999999998224e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.163899999999997e-05, 3.191699999999936e-05, 3.155600000000203e-05, 3.165299999999954e-05, 3.179199999999924e-05, 3.15839999999977e-05, 3.148600000000071e-05, 3.158400000000117e-05, 3.123699999999993e-05, 3.148599999999724e-05, 3.122300000000036e-05, 3.190299999999979e-05, 3.223600000000146e-05, 3.136100000000058e-05, 3.1804999999999334e-05, 3.165200000000007e-05, 3.194399999999903e-05, 3.191599999999989e-05, 3.2082999999998724e-05, 3.1554999999999084e-05, 3.219399999999928e-05, 3.177799999999967e-05, 3.147199999999767e-05, 3.195800000000207e-05, 3.165299999999954e-05, 3.1444000000002e-05, 3.150000000000028e-05, 3.148600000000071e-05, 3.169399999999878e-05, 3.195900000000154e-05, 3.215300000000004e-05, 3.213900000000047e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.110" endtime="20201117 14:47:59.112"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.106" endtime="20201117 14:47:59.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.115" endtime="20201117 14:47:59.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.118" endtime="20201117 14:47:59.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.117" endtime="20201117 14:47:59.138"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.113" endtime="20201117 14:47:59.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.750" endtime="20201117 14:47:59.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.748" endtime="20201117 14:47:59.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:58.748" endtime="20201117 14:47:59.140"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.142" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.150" endtime="20201117 14:47:59.166"></status>
</kw>
<msg timestamp="20201117 14:47:59.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.149" endtime="20201117 14:47:59.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.167" endtime="20201117 14:47:59.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.170" endtime="20201117 14:47:59.171"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.146" endtime="20201117 14:47:59.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.144" endtime="20201117 14:47:59.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.179" endtime="20201117 14:47:59.465"></status>
</kw>
<msg timestamp="20201117 14:47:59.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:47:59.177" endtime="20201117 14:47:59.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02188325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:47:59.469" endtime="20201117 14:47:59.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.477" endtime="20201117 14:47:59.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.175" endtime="20201117 14:47:59.479"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.173" endtime="20201117 14:47:59.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.484" level="INFO">${RESULT} = [{'time': 0.021916, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.275000000000153e-05, 'source_diff': 3.275000000000153e-05}, {'time': 0.021955986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:47:59.480" endtime="20201117 14:47:59.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.497" level="INFO">${ACCURACY} = {'diff': [3.275000000000153e-05, 3.223600000000146e-05, 3.256900000000312e-05, 3.315300000000104e-05, 3.311100000000233e-05, 3.241699999999986e-05, 3.302800000000092e-05, 3.245899999999857e-05, 3.3082...</msg>
<status status="PASS" starttime="20201117 14:47:59.485" endtime="20201117 14:47:59.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.502" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.501" endtime="20201117 14:47:59.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.505" level="INFO">VALUE: [3.275000000000153e-05, 3.223600000000146e-05, 3.256900000000312e-05, 3.315300000000104e-05, 3.311100000000233e-05, 3.241699999999986e-05, 3.302800000000092e-05, 3.245899999999857e-05, 3.3082999999999724e-05, 3.2610999999998364e-05, 3.227800000000017e-05, 3.269499999999925e-05, 3.229199999999974e-05, 3.295900000000254e-05, 3.244500000000247e-05, 3.297299999999864e-05, 3.231999999999888e-05, 3.283400000000242e-05, 3.224999999999756e-05, 3.247300000000161e-05, 3.320799999999985e-05, 3.305600000000006e-05, 3.229199999999974e-05, 3.2846999999999044e-05, 3.272200000000239e-05, 3.2791000000000764e-05, 3.241600000000039e-05, 3.276399999999763e-05, 3.29579999999996e-05, 3.229199999999974e-05, 3.223600000000146e-05, 3.304200000000049e-05, 3.29579999999996e-05, 3.238900000000072e-05, 3.234700000000201e-05, 3.248600000000171e-05, 3.3096999999999294e-05, 3.298599999999874e-05, 3.2444999999999e-05, 3.29579999999996e-05, 3.279200000000024e-05, 3.280599999999981e-05, 3.255599999999956e-05, 3.2805000000000334e-05, 3.315300000000104e-05, 3.224999999999756e-05, 3.248700000000118e-05, 3.2832999999999474e-05, 3.30839999999992e-05, 3.2512999999997905e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.503" endtime="20201117 14:47:59.505"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.498" endtime="20201117 14:47:59.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.508" endtime="20201117 14:47:59.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.511" endtime="20201117 14:47:59.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.510" endtime="20201117 14:47:59.531"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.506" endtime="20201117 14:47:59.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.143" endtime="20201117 14:47:59.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.141" endtime="20201117 14:47:59.532"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.140" endtime="20201117 14:47:59.532"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.535" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.543" endtime="20201117 14:47:59.559"></status>
</kw>
<msg timestamp="20201117 14:47:59.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.541" endtime="20201117 14:47:59.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.560" endtime="20201117 14:47:59.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.563" endtime="20201117 14:47:59.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.539" endtime="20201117 14:47:59.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.537" endtime="20201117 14:47:59.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.572" endtime="20201117 14:47:59.857"></status>
</kw>
<msg timestamp="20201117 14:47:59.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.570" endtime="20201117 14:47:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.861" endtime="20201117 14:47:59.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.869" endtime="20201117 14:47:59.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.568" endtime="20201117 14:47:59.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.566" endtime="20201117 14:47:59.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:47:59.876" level="INFO">${RESULT} = [{'time': 0.022014167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.413900000000247e-05, 'source_diff': 3.413900000000247e-05}, {'time': 0.022052208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:47:59.872" endtime="20201117 14:47:59.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:47:59.889" level="INFO">${ACCURACY} = {'diff': [3.413900000000247e-05, 3.3527000000001944e-05, 3.336100000000258e-05, 3.367999999999774e-05, 3.390199999999885e-05, 3.348599999999924e-05, 3.3833000000000474e-05, 3.327800000000117e-05, 3.35...</msg>
<status status="PASS" starttime="20201117 14:47:59.877" endtime="20201117 14:47:59.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.894" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201117 14:47:59.893" endtime="20201117 14:47:59.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.896" level="INFO">VALUE: [3.413900000000247e-05, 3.3527000000001944e-05, 3.336100000000258e-05, 3.367999999999774e-05, 3.390199999999885e-05, 3.348599999999924e-05, 3.3833000000000474e-05, 3.327800000000117e-05, 3.3569000000000654e-05, 3.383399999999995e-05, 3.379200000000124e-05, 3.351400000000185e-05, 3.327800000000117e-05, 3.392999999999799e-05, 3.3583000000000224e-05, 3.3819000000000904e-05, 3.3568999999997184e-05, 3.379200000000124e-05, 3.4110999999999864e-05, 3.373599999999949e-05, 3.3346999999999544e-05, 3.330600000000031e-05, 3.3360999999999114e-05, 3.376399999999863e-05, 3.345899999999957e-05, 3.4124999999999434e-05, 3.407000000000063e-05, 3.365300000000154e-05, 3.372299999999939e-05, 3.377800000000167e-05, 3.3874999999999184e-05, 3.4026999999998975e-05, 3.402799999999845e-05, 3.399999999999931e-05, 3.349999999999881e-05, 3.375000000000253e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.322199999999942e-05, 3.347299999999914e-05, 3.388900000000222e-05, 3.323599999999899e-05, 3.340300000000129e-05, 3.380600000000081e-05, 3.3319000000000404e-05, 3.380600000000081e-05, 3.348600000000271e-05, 3.320799999999985e-05, 3.361100000000283e-05, 3.370800000000035e-05]</msg>
<status status="PASS" starttime="20201117 14:47:59.895" endtime="20201117 14:47:59.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.890" endtime="20201117 14:47:59.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.899" endtime="20201117 14:47:59.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:47:59.903" endtime="20201117 14:47:59.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.901" endtime="20201117 14:47:59.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.898" endtime="20201117 14:47:59.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.535" endtime="20201117 14:47:59.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.534" endtime="20201117 14:47:59.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.533" endtime="20201117 14:47:59.924"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.926" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.935" endtime="20201117 14:47:59.952"></status>
</kw>
<msg timestamp="20201117 14:47:59.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.933" endtime="20201117 14:47:59.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:47:59.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:47:59.953" endtime="20201117 14:47:59.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.956" endtime="20201117 14:47:59.957"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.931" endtime="20201117 14:47:59.958"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.928" endtime="20201117 14:47:59.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:47:59.964" endtime="20201117 14:48:00.251"></status>
</kw>
<msg timestamp="20201117 14:48:00.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:47:59.963" endtime="20201117 14:48:00.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022157764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.255" endtime="20201117 14:48:00.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.264" endtime="20201117 14:48:00.265"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.960" endtime="20201117 14:48:00.266"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.959" endtime="20201117 14:48:00.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.270" level="INFO">${RESULT} = [{'time': 0.022192458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.469400000000178e-05, 'source_diff': 3.469400000000178e-05}, {'time': 0.022230458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:00.267" endtime="20201117 14:48:00.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.285" level="INFO">${ACCURACY} = {'diff': [3.469400000000178e-05, 3.475000000000006e-05, 3.476399999999963e-05, 3.4610999999996894e-05, 3.4804999999998865e-05, 3.448600000000024e-05, 3.4611000000000364e-05, 3.491699999999889e-05, 3.4...</msg>
<status status="PASS" starttime="20201117 14:48:00.271" endtime="20201117 14:48:00.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.290" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.289" endtime="20201117 14:48:00.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.292" level="INFO">VALUE: [3.469400000000178e-05, 3.475000000000006e-05, 3.476399999999963e-05, 3.4610999999996894e-05, 3.4804999999998865e-05, 3.448600000000024e-05, 3.4611000000000364e-05, 3.491699999999889e-05, 3.448600000000024e-05, 3.424999999999956e-05, 3.4333000000000974e-05, 3.518100000000218e-05, 3.473599999999702e-05, 3.451399999999938e-05, 3.423599999999999e-05, 3.454200000000199e-05, 3.4624999999999934e-05, 3.50840000000012e-05, 3.4888999999999754e-05, 3.475000000000006e-05, 3.433400000000045e-05, 3.483399999999748e-05, 3.455599999999809e-05, 3.42779999999987e-05, 3.4346999999997074e-05, 3.466599999999917e-05, 3.444400000000153e-05, 3.466599999999917e-05, 3.465300000000254e-05, 3.420799999999738e-05, 3.42779999999987e-05, 3.491599999999942e-05, 3.42640000000026e-05, 3.498600000000074e-05, 3.502799999999945e-05, 3.447300000000014e-05, 3.451399999999938e-05, 3.452799999999895e-05, 3.457000000000113e-05, 3.452800000000242e-05, 3.449999999999981e-05, 3.443099999999796e-05, 3.473600000000049e-05, 3.483400000000095e-05, 3.472200000000092e-05, 3.4374999999999684e-05, 3.495900000000107e-05, 3.419499999999728e-05, 3.448699999999971e-05, 3.441600000000239e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.291" endtime="20201117 14:48:00.292"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.286" endtime="20201117 14:48:00.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.295" endtime="20201117 14:48:00.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.299" endtime="20201117 14:48:00.318"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.297" endtime="20201117 14:48:00.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.294" endtime="20201117 14:48:00.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.927" endtime="20201117 14:48:00.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.925" endtime="20201117 14:48:00.320"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:59.924" endtime="20201117 14:48:00.320"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.322" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.330" endtime="20201117 14:48:00.346"></status>
</kw>
<msg timestamp="20201117 14:48:00.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.329" endtime="20201117 14:48:00.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.348" endtime="20201117 14:48:00.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.350" endtime="20201117 14:48:00.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.326" endtime="20201117 14:48:00.352"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.324" endtime="20201117 14:48:00.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.359" endtime="20201117 14:48:00.645"></status>
</kw>
<msg timestamp="20201117 14:48:00.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.357" endtime="20201117 14:48:00.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.649" endtime="20201117 14:48:00.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.657" endtime="20201117 14:48:00.659"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.355" endtime="20201117 14:48:00.660"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.353" endtime="20201117 14:48:00.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:00.664" level="INFO">${RESULT} = [{'time': 0.021989319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5777000000000725e-05, 'source_diff': 3.5777000000000725e-05}, {'time': 0.022028319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:00.661" endtime="20201117 14:48:00.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:00.678" level="INFO">${ACCURACY} = {'diff': [3.5777000000000725e-05, 3.5791000000000295e-05, 3.5291000000003264e-05, 3.54719999999982e-05, 3.5568999999999185e-05, 3.57780000000002e-05, 3.575000000000106e-05, 3.5847000000002044e-05, 3.5...</msg>
<status status="PASS" starttime="20201117 14:48:00.665" endtime="20201117 14:48:00.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.682" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201117 14:48:00.681" endtime="20201117 14:48:00.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.685" level="INFO">VALUE: [3.5777000000000725e-05, 3.5791000000000295e-05, 3.5291000000003264e-05, 3.54719999999982e-05, 3.5568999999999185e-05, 3.57780000000002e-05, 3.575000000000106e-05, 3.5847000000002044e-05, 3.551399999999691e-05, 3.5903000000000324e-05, 3.550000000000081e-05, 3.569399999999931e-05, 3.5375000000000684e-05, 3.5402999999999823e-05, 3.533400000000145e-05, 3.548600000000124e-05, 3.529199999999927e-05, 3.548599999999777e-05, 3.619499999999928e-05, 3.5375000000000684e-05, 3.604200000000002e-05, 3.5445000000002e-05, 3.559800000000127e-05, 3.542999999999949e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.5568999999999185e-05, 3.6096999999998824e-05, 3.5804999999999865e-05, 3.570800000000235e-05, 3.5889000000000754e-05, 3.5889000000000754e-05, 3.5360999999997644e-05, 3.5597000000001794e-05, 3.5653000000000074e-05, 3.54580000000021e-05, 3.576400000000063e-05, 3.576400000000063e-05, 3.530599999999884e-05, 3.5375000000000684e-05, 3.551400000000038e-05, 3.555599999999909e-05, 3.6125000000001434e-05, 3.533400000000145e-05, 3.619499999999928e-05, 3.552799999999995e-05, 3.561199999999737e-05, 3.541599999999992e-05, 3.543099999999896e-05, 3.5916999999999893e-05]</msg>
<status status="PASS" starttime="20201117 14:48:00.683" endtime="20201117 14:48:00.685"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.679" endtime="20201117 14:48:00.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.688" endtime="20201117 14:48:00.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:00.691" endtime="20201117 14:48:00.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.690" endtime="20201117 14:48:00.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.686" endtime="20201117 14:48:00.711"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.323" endtime="20201117 14:48:00.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.321" endtime="20201117 14:48:00.712"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.320" endtime="20201117 14:48:00.712"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.715" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.723" endtime="20201117 14:48:00.739"></status>
</kw>
<msg timestamp="20201117 14:48:00.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.721" endtime="20201117 14:48:00.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:00.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:00.740" endtime="20201117 14:48:00.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.743" endtime="20201117 14:48:00.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.719" endtime="20201117 14:48:00.745"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.717" endtime="20201117 14:48:00.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:00.752" endtime="20201117 14:48:01.039"></status>
</kw>
<msg timestamp="20201117 14:48:01.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:00.751" endtime="20201117 14:48:01.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.043" endtime="20201117 14:48:01.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.052" endtime="20201117 14:48:01.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.748" endtime="20201117 14:48:01.054"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.746" endtime="20201117 14:48:01.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.058" level="INFO">${RESULT} = [{'time': 0.021841681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.720900000000332e-05, 'source_diff': 3.720900000000332e-05}, {'time': 0.021887764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.055" endtime="20201117 14:48:01.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.072" level="INFO">${ACCURACY} = {'diff': [3.720900000000332e-05, 3.62780000000007e-05, 3.6305000000000365e-05, 3.623600000000199e-05, 3.7111000000002864e-05, 3.674999999999859e-05, 3.675000000000206e-05, 3.702800000000145e-05, 3.659...</msg>
<status status="PASS" starttime="20201117 14:48:01.059" endtime="20201117 14:48:01.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.076" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.075" endtime="20201117 14:48:01.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.079" level="INFO">VALUE: [3.720900000000332e-05, 3.62780000000007e-05, 3.6305000000000365e-05, 3.623600000000199e-05, 3.7111000000002864e-05, 3.674999999999859e-05, 3.675000000000206e-05, 3.702800000000145e-05, 3.6597000000002794e-05, 3.648599999999877e-05, 3.702799999999798e-05, 3.623600000000199e-05, 3.7069000000000685e-05, 3.6860999999999144e-05, 3.623600000000199e-05, 3.62780000000007e-05, 3.6624999999998464e-05, 3.6833000000000005e-05, 3.6667000000000644e-05, 3.702799999999798e-05, 3.6916999999997424e-05, 3.64719999999992e-05, 3.701399999999841e-05, 3.704199999999755e-05, 3.673600000000249e-05, 3.6375000000001684e-05, 3.6653000000001074e-05, 3.659800000000227e-05, 3.692999999999752e-05, 3.7083000000000255e-05, 3.693000000000099e-05, 3.62780000000007e-05, 3.724999999999909e-05, 3.622199999999895e-05, 3.718000000000124e-05, 3.674999999999859e-05, 3.720800000000038e-05, 3.694400000000056e-05, 3.619399999999981e-05, 3.702800000000145e-05, 3.6318999999999935e-05, 3.6667000000000644e-05, 3.702800000000145e-05, 3.702799999999798e-05, 3.64719999999992e-05, 3.702799999999798e-05, 3.676399999999816e-05, 3.7110999999999394e-05, 3.70979999999993e-05, 3.648599999999877e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.077" endtime="20201117 14:48:01.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.073" endtime="20201117 14:48:01.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.082" endtime="20201117 14:48:01.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.085" endtime="20201117 14:48:01.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.084" endtime="20201117 14:48:01.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.080" endtime="20201117 14:48:01.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.715" endtime="20201117 14:48:01.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.713" endtime="20201117 14:48:01.106"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:00.712" endtime="20201117 14:48:01.106"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.117" endtime="20201117 14:48:01.133"></status>
</kw>
<msg timestamp="20201117 14:48:01.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.116" endtime="20201117 14:48:01.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.135" endtime="20201117 14:48:01.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.137" endtime="20201117 14:48:01.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.113" endtime="20201117 14:48:01.139"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.111" endtime="20201117 14:48:01.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.146" endtime="20201117 14:48:01.432"></status>
</kw>
<msg timestamp="20201117 14:48:01.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.144" endtime="20201117 14:48:01.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.436" endtime="20201117 14:48:01.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.444" endtime="20201117 14:48:01.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.142" endtime="20201117 14:48:01.446"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.140" endtime="20201117 14:48:01.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.451" level="INFO">${RESULT} = [{'time': 0.022506889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.797199999999723e-05, 'source_diff': 3.797199999999723e-05}, {'time': 0.022553917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.447" endtime="20201117 14:48:01.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.464" level="INFO">${ACCURACY} = {'diff': [3.797199999999723e-05, 3.777799999999873e-05, 3.7819000000001435e-05, 3.784800000000005e-05, 3.808399999999726e-05, 3.7667000000001644e-05, 3.7374999999999214e-05, 3.7444999999997064e-05, 3....</msg>
<status status="PASS" starttime="20201117 14:48:01.452" endtime="20201117 14:48:01.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.469" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.468" endtime="20201117 14:48:01.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.471" level="INFO">VALUE: [3.797199999999723e-05, 3.777799999999873e-05, 3.7819000000001435e-05, 3.784800000000005e-05, 3.808399999999726e-05, 3.7667000000001644e-05, 3.7374999999999214e-05, 3.7444999999997064e-05, 3.7417000000001394e-05, 3.773699999999949e-05, 3.744400000000106e-05, 3.7569000000001185e-05, 3.8124999999999964e-05, 3.801399999999941e-05, 3.769400000000131e-05, 3.749999999999934e-05, 3.805599999999812e-05, 3.799999999999984e-05, 3.7291000000001795e-05, 3.77780000000022e-05, 3.7652999999998604e-05, 3.7818999999997965e-05, 3.773600000000002e-05, 3.751400000000238e-05, 3.7445000000000533e-05, 3.7917000000001894e-05, 3.724999999999909e-05, 3.798600000000027e-05, 3.723599999999952e-05, 3.7931000000001464e-05, 3.784800000000005e-05, 3.725000000000256e-05, 3.74590000000001e-05, 3.8166999999998674e-05, 3.7805000000001865e-05, 3.770799999999741e-05, 3.7276999999998756e-05, 3.799999999999984e-05, 3.791599999999895e-05, 3.772200000000045e-05, 3.7583000000000755e-05, 3.7818999999997965e-05, 3.772200000000045e-05, 3.742999999999802e-05, 3.755599999999762e-05, 3.780599999999787e-05, 3.780600000000134e-05, 3.7319000000000935e-05, 3.72919999999978e-05, 3.797199999999723e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.470" endtime="20201117 14:48:01.472"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.465" endtime="20201117 14:48:01.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.474" endtime="20201117 14:48:01.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.478" endtime="20201117 14:48:01.497"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.476" endtime="20201117 14:48:01.498"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.473" endtime="20201117 14:48:01.502"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.110" endtime="20201117 14:48:01.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.108" endtime="20201117 14:48:01.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.107" endtime="20201117 14:48:01.503"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.506" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.514" endtime="20201117 14:48:01.530"></status>
</kw>
<msg timestamp="20201117 14:48:01.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.512" endtime="20201117 14:48:01.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.531" endtime="20201117 14:48:01.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.534" endtime="20201117 14:48:01.536"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.510" endtime="20201117 14:48:01.537"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.508" endtime="20201117 14:48:01.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.546" endtime="20201117 14:48:01.835"></status>
</kw>
<msg timestamp="20201117 14:48:01.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026410014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.544" endtime="20201117 14:48:01.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026410014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.839" endtime="20201117 14:48:01.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.848" endtime="20201117 14:48:01.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.541" endtime="20201117 14:48:01.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.539" endtime="20201117 14:48:01.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:01.855" level="INFO">${RESULT} = [{'time': 0.026449194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917999999999977e-05, 'source_diff': 3.917999999999977e-05}, {'time': 0.026495236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:01.851" endtime="20201117 14:48:01.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:01.870" level="INFO">${ACCURACY} = {'diff': [3.917999999999977e-05, 3.872199999999798e-05, 3.888799999999734e-05, 3.869399999999884e-05, 3.8847000000001575e-05, 3.852799999999948e-05, 3.826399999999966e-05, 3.822199999999748e-05, 3.899...</msg>
<status status="PASS" starttime="20201117 14:48:01.856" endtime="20201117 14:48:01.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.875" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201117 14:48:01.874" endtime="20201117 14:48:01.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.877" level="INFO">VALUE: [3.917999999999977e-05, 3.872199999999798e-05, 3.888799999999734e-05, 3.869399999999884e-05, 3.8847000000001575e-05, 3.852799999999948e-05, 3.826399999999966e-05, 3.822199999999748e-05, 3.899999999999737e-05, 3.854200000000252e-05, 3.8304999999998895e-05, 3.826399999999966e-05, 3.901400000000041e-05, 3.8388999999999784e-05, 3.8347000000001075e-05, 3.8360999999997175e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8347000000001075e-05, 3.8875000000000715e-05, 3.898600000000127e-05, 3.875000000000059e-05, 3.880599999999887e-05, 3.8902999999999854e-05, 3.850000000000034e-05, 3.851399999999991e-05, 3.84720000000012e-05, 3.8860999999997675e-05, 3.8832999999998535e-05, 3.8430999999998494e-05, 3.8846999999998105e-05, 3.8804999999999396e-05, 3.877799999999973e-05, 3.876400000000016e-05, 3.902799999999998e-05, 3.8361000000000645e-05, 3.919399999999934e-05, 3.875000000000059e-05, 3.875000000000059e-05, 3.880599999999887e-05, 3.8694999999998314e-05, 3.908399999999826e-05, 3.899999999999737e-05, 3.822300000000042e-05, 3.8709000000001353e-05, 3.8554999999999146e-05, 3.865200000000013e-05, 3.833400000000098e-05, 3.865200000000013e-05, 3.8861000000001145e-05]</msg>
<status status="PASS" starttime="20201117 14:48:01.876" endtime="20201117 14:48:01.878"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.871" endtime="20201117 14:48:01.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.881" endtime="20201117 14:48:01.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:01.885" endtime="20201117 14:48:01.904"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.883" endtime="20201117 14:48:01.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.879" endtime="20201117 14:48:01.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.506" endtime="20201117 14:48:01.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.504" endtime="20201117 14:48:01.906"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.504" endtime="20201117 14:48:01.906"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.908" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.917" endtime="20201117 14:48:01.937"></status>
</kw>
<msg timestamp="20201117 14:48:01.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.915" endtime="20201117 14:48:01.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:01.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:01.940" endtime="20201117 14:48:01.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.946" endtime="20201117 14:48:01.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.913" endtime="20201117 14:48:01.950"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.911" endtime="20201117 14:48:01.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:01.966" endtime="20201117 14:48:02.260"></status>
</kw>
<msg timestamp="20201117 14:48:02.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:01.962" endtime="20201117 14:48:02.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.265" endtime="20201117 14:48:02.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.273" endtime="20201117 14:48:02.274"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.957" endtime="20201117 14:48:02.275"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.953" endtime="20201117 14:48:02.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.279" level="INFO">${RESULT} = [{'time': 0.022707694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9304999999999896e-05, 'source_diff': 3.9304999999999896e-05}, {'time': 0.022753625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:02.276" endtime="20201117 14:48:02.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.293" level="INFO">${ACCURACY} = {'diff': [3.9304999999999896e-05, 3.944399999999959e-05, 3.9389000000000784e-05, 3.945800000000263e-05, 3.9582999999999285e-05, 4.01119999999984e-05, 3.931999999999894e-05, 3.973599999999855e-05, 3.95...</msg>
<status status="PASS" starttime="20201117 14:48:02.280" endtime="20201117 14:48:02.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.297" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.296" endtime="20201117 14:48:02.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.300" level="INFO">VALUE: [3.9304999999999896e-05, 3.944399999999959e-05, 3.9389000000000784e-05, 3.945800000000263e-05, 3.9582999999999285e-05, 4.01119999999984e-05, 3.931999999999894e-05, 3.973599999999855e-05, 3.955599999999962e-05, 3.9667000000000174e-05, 3.9861000000002145e-05, 4.0069000000000216e-05, 3.924999999999762e-05, 3.976400000000116e-05, 3.9762999999998216e-05, 3.995799999999966e-05, 3.9346999999998605e-05, 4.000000000000184e-05, 3.9846999999999105e-05, 4.0152999999997635e-05, 4.020799999999991e-05, 3.952800000000048e-05, 4.000000000000184e-05, 3.975000000000159e-05, 3.9860999999998675e-05, 3.9889000000001285e-05, 3.9347000000002075e-05, 3.9667000000000174e-05, 3.9930999999999994e-05, 3.926400000000066e-05, 3.9430999999999494e-05, 3.943000000000002e-05, 3.977800000000073e-05, 3.927800000000023e-05, 3.95980000000018e-05, 3.986200000000162e-05, 3.9416999999999924e-05, 3.9861000000002145e-05, 3.943000000000002e-05, 3.969399999999984e-05, 4.0069000000000216e-05, 3.94859999999983e-05, 4.0082999999999785e-05, 4.002799999999751e-05, 3.9917000000000424e-05, 3.994400000000009e-05, 3.927800000000023e-05, 3.947199999999873e-05, 3.9861000000002145e-05, 4.002799999999751e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.298" endtime="20201117 14:48:02.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.294" endtime="20201117 14:48:02.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.303" endtime="20201117 14:48:02.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.307" endtime="20201117 14:48:02.326"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.305" endtime="20201117 14:48:02.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.302" endtime="20201117 14:48:02.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.909" endtime="20201117 14:48:02.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.907" endtime="20201117 14:48:02.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:01.906" endtime="20201117 14:48:02.328"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.339" endtime="20201117 14:48:02.356"></status>
</kw>
<msg timestamp="20201117 14:48:02.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.337" endtime="20201117 14:48:02.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.357" endtime="20201117 14:48:02.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.360" endtime="20201117 14:48:02.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.335" endtime="20201117 14:48:02.362"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.333" endtime="20201117 14:48:02.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.369" endtime="20201117 14:48:02.656"></status>
</kw>
<msg timestamp="20201117 14:48:02.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.367" endtime="20201117 14:48:02.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.660" endtime="20201117 14:48:02.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.669" endtime="20201117 14:48:02.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.365" endtime="20201117 14:48:02.671"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.363" endtime="20201117 14:48:02.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:02.675" level="INFO">${RESULT} = [{'time': 0.023198069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.11660000000022e-05, 'source_diff': 4.11660000000022e-05}, {'time': 0.023242042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:02.672" endtime="20201117 14:48:02.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:02.689" level="INFO">${ACCURACY} = {'diff': [4.11660000000022e-05, 4.0458999999999634e-05, 4.024999999999862e-05, 4.026399999999819e-05, 4.1083000000000786e-05, 4.041600000000145e-05, 4.0776999999998786e-05, 4.1082999999997316e-05, 4.0...</msg>
<status status="PASS" starttime="20201117 14:48:02.677" endtime="20201117 14:48:02.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.694" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201117 14:48:02.693" endtime="20201117 14:48:02.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.696" level="INFO">VALUE: [4.11660000000022e-05, 4.0458999999999634e-05, 4.024999999999862e-05, 4.026399999999819e-05, 4.1083000000000786e-05, 4.041600000000145e-05, 4.0776999999998786e-05, 4.1082999999997316e-05, 4.0833000000000536e-05, 4.090199999999891e-05, 4.0568999999997246e-05, 4.0610999999999425e-05, 4.044400000000059e-05, 4.0333000000000035e-05, 4.0153000000001104e-05, 4.1083000000000786e-05, 4.0681000000000744e-05, 4.107000000000069e-05, 4.072199999999998e-05, 4.0347000000003075e-05, 4.0708999999999884e-05, 4.04859999999993e-05, 4.0472999999999204e-05, 4.104199999999808e-05, 4.059799999999933e-05, 4.099999999999937e-05, 4.0319000000000466e-05, 4.084799999999958e-05, 4.047199999999973e-05, 4.1040999999998606e-05, 4.0346999999999605e-05, 4.042999999999755e-05, 4.0833000000000536e-05, 4.101400000000241e-05, 4.09859999999998e-05, 4.0374999999998745e-05, 4.020799999999991e-05, 4.120799999999744e-05, 4.0610999999999425e-05, 4.0445000000000064e-05, 4.102799999999851e-05, 4.0389000000001785e-05, 4.0681000000000744e-05, 4.0624999999998995e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.0389000000001785e-05, 4.0986999999999274e-05, 4.0208999999999384e-05, 4.0458999999999634e-05]</msg>
<status status="PASS" starttime="20201117 14:48:02.695" endtime="20201117 14:48:02.697"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.690" endtime="20201117 14:48:02.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.699" endtime="20201117 14:48:02.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:02.703" endtime="20201117 14:48:02.722"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.701" endtime="20201117 14:48:02.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.698" endtime="20201117 14:48:02.723"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.331" endtime="20201117 14:48:02.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.329" endtime="20201117 14:48:02.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.329" endtime="20201117 14:48:02.724"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.726" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.736" endtime="20201117 14:48:02.755"></status>
</kw>
<msg timestamp="20201117 14:48:02.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.733" endtime="20201117 14:48:02.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:02.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:02.758" endtime="20201117 14:48:02.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.763" endtime="20201117 14:48:02.766"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.730" endtime="20201117 14:48:02.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.728" endtime="20201117 14:48:02.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:02.782" endtime="20201117 14:48:03.077"></status>
</kw>
<msg timestamp="20201117 14:48:03.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024806931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:02.779" endtime="20201117 14:48:03.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024806931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.081" endtime="20201117 14:48:03.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.090" endtime="20201117 14:48:03.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.773" endtime="20201117 14:48:03.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.770" endtime="20201117 14:48:03.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.096" level="INFO">${RESULT} = [{'time': 0.024848667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.173600000000055e-05, 'source_diff': 4.173600000000055e-05}, {'time': 0.024897667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.093" endtime="20201117 14:48:03.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.110" level="INFO">${ACCURACY} = {'diff': [4.173600000000055e-05, 4.1430999999998025e-05, 4.158400000000076e-05, 4.126399999999919e-05, 4.2082999999998316e-05, 4.165199999999966e-05, 4.1526999999999537e-05, 4.166599999999923e-05, 4.1...</msg>
<status status="PASS" starttime="20201117 14:48:03.097" endtime="20201117 14:48:03.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.114" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.113" endtime="20201117 14:48:03.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.117" level="INFO">VALUE: [4.173600000000055e-05, 4.1430999999998025e-05, 4.158400000000076e-05, 4.126399999999919e-05, 4.2082999999998316e-05, 4.165199999999966e-05, 4.1526999999999537e-05, 4.166599999999923e-05, 4.165199999999966e-05, 4.166599999999923e-05, 4.1597000000000856e-05, 4.141599999999898e-05, 4.143000000000202e-05, 4.176399999999969e-05, 4.126399999999919e-05, 4.177799999999926e-05, 4.170799999999794e-05, 4.1860999999997206e-05, 4.149999999999987e-05, 4.131999999999747e-05, 4.151399999999944e-05, 4.126400000000266e-05, 4.1875000000000245e-05, 4.1611000000000425e-05, 4.1431000000001494e-05, 4.1624999999999995e-05, 4.2054999999999176e-05, 4.1611000000000425e-05, 4.14860000000003e-05, 4.2040999999999606e-05, 4.194399999999862e-05, 4.149999999999987e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.1555000000002146e-05, 4.2068999999998746e-05, 4.1417000000001924e-05, 4.127799999999876e-05, 4.155599999999815e-05, 4.2125000000000495e-05, 4.1568999999998246e-05, 4.152800000000248e-05, 4.14860000000003e-05, 4.13059999999979e-05, 4.208399999999779e-05, 4.179199999999883e-05, 4.2096999999997886e-05, 4.182000000000144e-05, 4.16119999999999e-05, 4.1209000000000384e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.115" endtime="20201117 14:48:03.117"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.111" endtime="20201117 14:48:03.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.120" endtime="20201117 14:48:03.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.123" endtime="20201117 14:48:03.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.122" endtime="20201117 14:48:03.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.118" endtime="20201117 14:48:03.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.727" endtime="20201117 14:48:03.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.725" endtime="20201117 14:48:03.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:02.724" endtime="20201117 14:48:03.145"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.147" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.155" endtime="20201117 14:48:03.172"></status>
</kw>
<msg timestamp="20201117 14:48:03.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.153" endtime="20201117 14:48:03.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.173" endtime="20201117 14:48:03.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.176" endtime="20201117 14:48:03.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.151" endtime="20201117 14:48:03.178"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.149" endtime="20201117 14:48:03.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.185" endtime="20201117 14:48:03.471"></status>
</kw>
<msg timestamp="20201117 14:48:03.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.183" endtime="20201117 14:48:03.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.475" endtime="20201117 14:48:03.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.483" endtime="20201117 14:48:03.485"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.180" endtime="20201117 14:48:03.486"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.179" endtime="20201117 14:48:03.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.490" level="INFO">${RESULT} = [{'time': 0.021952736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.322199999999901e-05, 'source_diff': 4.322199999999901e-05}, {'time': 0.022002778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:03.487" endtime="20201117 14:48:03.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.505" level="INFO">${ACCURACY} = {'diff': [4.322199999999901e-05, 4.279199999999983e-05, 4.2903000000000385e-05, 4.300000000000137e-05, 4.276400000000069e-05, 4.2832999999999066e-05, 4.2930999999999525e-05, 4.281999999999897e-05, 4.2...</msg>
<status status="PASS" starttime="20201117 14:48:03.491" endtime="20201117 14:48:03.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.509" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.508" endtime="20201117 14:48:03.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.512" level="INFO">VALUE: [4.322199999999901e-05, 4.279199999999983e-05, 4.2903000000000385e-05, 4.300000000000137e-05, 4.276400000000069e-05, 4.2832999999999066e-05, 4.2930999999999525e-05, 4.281999999999897e-05, 4.254199999999958e-05, 4.248599999999783e-05, 4.2417000000002925e-05, 4.276400000000069e-05, 4.2360999999997706e-05, 4.3180999999999775e-05, 4.306999999999922e-05, 4.2959000000002134e-05, 4.307000000000269e-05, 4.251300000000097e-05, 4.2304999999999426e-05, 4.2666999999999705e-05, 4.3125000000001495e-05, 4.2375000000000745e-05, 4.3111000000001926e-05, 4.300000000000137e-05, 4.224999999999715e-05, 4.223600000000105e-05, 4.223600000000105e-05, 4.255599999999915e-05, 4.226400000000019e-05, 4.2444999999998595e-05, 4.230600000000237e-05, 4.2888999999997346e-05, 4.258399999999829e-05, 4.275000000000112e-05, 4.22920000000028e-05, 4.2430999999999025e-05, 4.2875000000001245e-05, 4.277700000000079e-05, 4.2722999999997985e-05, 4.2666999999999705e-05, 4.279199999999983e-05, 4.26799999999998e-05, 4.2554999999999676e-05, 4.2903000000000385e-05, 4.2875000000001245e-05, 4.2347000000001606e-05, 4.254199999999958e-05, 4.274999999999765e-05, 4.2416999999999455e-05, 4.272200000000198e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.510" endtime="20201117 14:48:03.512"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.506" endtime="20201117 14:48:03.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.515" endtime="20201117 14:48:03.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.518" endtime="20201117 14:48:03.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.517" endtime="20201117 14:48:03.538"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.513" endtime="20201117 14:48:03.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.148" endtime="20201117 14:48:03.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.146" endtime="20201117 14:48:03.539"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.145" endtime="20201117 14:48:03.540"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.542" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.550" endtime="20201117 14:48:03.566"></status>
</kw>
<msg timestamp="20201117 14:48:03.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.549" endtime="20201117 14:48:03.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.567" endtime="20201117 14:48:03.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.570" endtime="20201117 14:48:03.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.546" endtime="20201117 14:48:03.572"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.544" endtime="20201117 14:48:03.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.579" endtime="20201117 14:48:03.865"></status>
</kw>
<msg timestamp="20201117 14:48:03.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.578" endtime="20201117 14:48:03.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021984722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.869" endtime="20201117 14:48:03.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.877" endtime="20201117 14:48:03.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.575" endtime="20201117 14:48:03.879"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.574" endtime="20201117 14:48:03.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:03.884" level="INFO">${RESULT} = [{'time': 0.022028667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3944999999996626e-05, 'source_diff': 4.3944999999996626e-05}, {'time': 0.022076625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:03.880" endtime="20201117 14:48:03.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:03.897" level="INFO">${ACCURACY} = {'diff': [4.3944999999996626e-05, 4.3318999999999996e-05, 4.324999999999815e-05, 4.3360999999998706e-05, 4.3431000000000025e-05, 4.408299999999685e-05, 4.4195000000000345e-05, 4.356999999999972e-05, 4...</msg>
<status status="PASS" starttime="20201117 14:48:03.885" endtime="20201117 14:48:03.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.902" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201117 14:48:03.901" endtime="20201117 14:48:03.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.904" level="INFO">VALUE: [4.3944999999996626e-05, 4.3318999999999996e-05, 4.324999999999815e-05, 4.3360999999998706e-05, 4.3431000000000025e-05, 4.408299999999685e-05, 4.4195000000000345e-05, 4.356999999999972e-05, 4.3417000000000455e-05, 4.329200000000033e-05, 4.3402999999997416e-05, 4.351400000000144e-05, 4.395800000000019e-05, 4.3638999999998096e-05, 4.376299999999875e-05, 4.381999999999997e-05, 4.3555000000000677e-05, 4.352699999999807e-05, 4.365199999999819e-05, 4.3360999999998706e-05, 4.347199999999926e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.3889000000001815e-05, 4.3318999999999996e-05, 4.406899999999728e-05, 4.351400000000144e-05, 4.347199999999926e-05, 4.355600000000015e-05, 4.3459000000002634e-05, 4.324999999999815e-05, 4.3945000000000095e-05, 4.3459000000002634e-05, 4.4110999999999456e-05, 4.326400000000119e-05, 4.420800000000044e-05, 4.377699999999832e-05, 4.3722999999998985e-05, 4.379200000000083e-05, 4.398599999999933e-05, 4.41939999999974e-05, 4.397199999999976e-05, 4.3582999999999816e-05, 4.4167000000001205e-05, 4.3902999999997916e-05, 4.401399999999847e-05, 4.4083000000000316e-05, 4.375000000000212e-05, 4.3582999999999816e-05, 4.323599999999858e-05]</msg>
<status status="PASS" starttime="20201117 14:48:03.903" endtime="20201117 14:48:03.905"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.898" endtime="20201117 14:48:03.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.907" endtime="20201117 14:48:03.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:03.911" endtime="20201117 14:48:03.930"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.909" endtime="20201117 14:48:03.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.906" endtime="20201117 14:48:03.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.543" endtime="20201117 14:48:03.931"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.541" endtime="20201117 14:48:03.932"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.540" endtime="20201117 14:48:03.932"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.943" endtime="20201117 14:48:03.959"></status>
</kw>
<msg timestamp="20201117 14:48:03.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.941" endtime="20201117 14:48:03.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:03.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:03.960" endtime="20201117 14:48:03.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.963" endtime="20201117 14:48:03.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.939" endtime="20201117 14:48:03.965"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.936" endtime="20201117 14:48:03.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:03.972" endtime="20201117 14:48:04.258"></status>
</kw>
<msg timestamp="20201117 14:48:04.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:03.970" endtime="20201117 14:48:04.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022479458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022524069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.262" endtime="20201117 14:48:04.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.270" endtime="20201117 14:48:04.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.968" endtime="20201117 14:48:04.272"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.966" endtime="20201117 14:48:04.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.277" level="INFO">${RESULT} = [{'time': 0.022524069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.022571125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.274" endtime="20201117 14:48:04.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.290" level="INFO">${ACCURACY} = {'diff': [4.4610999999999956e-05, 4.472200000000051e-05, 4.4319000000000996e-05, 4.48329999999976e-05, 4.48329999999976e-05, 4.522200000000101e-05, 4.473600000000008e-05, 4.4847000000000636e-05, 4.443...</msg>
<status status="PASS" starttime="20201117 14:48:04.278" endtime="20201117 14:48:04.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.295" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.294" endtime="20201117 14:48:04.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.297" level="INFO">VALUE: [4.4610999999999956e-05, 4.472200000000051e-05, 4.4319000000000996e-05, 4.48329999999976e-05, 4.48329999999976e-05, 4.522200000000101e-05, 4.473600000000008e-05, 4.4847000000000636e-05, 4.443000000000155e-05, 4.5111000000000456e-05, 4.4403000000001885e-05, 4.476399999999922e-05, 4.477800000000226e-05, 4.424999999999915e-05, 4.456899999999778e-05, 4.4902999999998916e-05, 4.48060000000014e-05, 4.4667000000001705e-05, 4.479200000000183e-05, 4.455600000000115e-05, 4.424999999999915e-05, 4.4374999999999276e-05, 4.484699999999717e-05, 4.45129999999995e-05, 4.444400000000112e-05, 4.4555000000001677e-05, 4.511099999999699e-05, 4.4667000000001705e-05, 4.4874999999999776e-05, 4.459699999999692e-05, 4.454199999999811e-05, 4.4333000000000566e-05, 4.4861000000000206e-05, 4.479199999999836e-05, 4.454200000000158e-05, 4.4709000000000415e-05, 4.4888999999999346e-05, 4.504200000000208e-05, 4.4638999999999096e-05, 4.4736999999999555e-05, 4.424999999999915e-05, 4.424999999999915e-05, 4.474999999999965e-05, 4.474999999999965e-05, 4.427700000000229e-05, 4.454200000000158e-05, 4.422200000000001e-05, 4.5069000000001747e-05, 4.508299999999785e-05, 4.4653000000002135e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.296" endtime="20201117 14:48:04.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.291" endtime="20201117 14:48:04.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.300" endtime="20201117 14:48:04.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.304" endtime="20201117 14:48:04.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.302" endtime="20201117 14:48:04.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.299" endtime="20201117 14:48:04.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.935" endtime="20201117 14:48:04.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.933" endtime="20201117 14:48:04.325"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:03.932" endtime="20201117 14:48:04.326"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.328" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.336" endtime="20201117 14:48:04.352"></status>
</kw>
<msg timestamp="20201117 14:48:04.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.335" endtime="20201117 14:48:04.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.354" endtime="20201117 14:48:04.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.356" endtime="20201117 14:48:04.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.332" endtime="20201117 14:48:04.358"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.330" endtime="20201117 14:48:04.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.365" endtime="20201117 14:48:04.652"></status>
</kw>
<msg timestamp="20201117 14:48:04.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:04.364" endtime="20201117 14:48:04.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022113111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:04.656" endtime="20201117 14:48:04.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.664" endtime="20201117 14:48:04.666"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.361" endtime="20201117 14:48:04.667"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.359" endtime="20201117 14:48:04.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:04.671" level="INFO">${RESULT} = [{'time': 0.022113111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5361000000000706e-05, 'source_diff': 4.5361000000000706e-05}, {'time': 0.022163125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:04.668" endtime="20201117 14:48:04.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:04.685" level="INFO">${ACCURACY} = {'diff': [4.5361000000000706e-05, 4.601400000000047e-05, 4.576400000000022e-05, 4.5416999999998986e-05, 4.529200000000233e-05, 4.572200000000151e-05, 4.5416999999998986e-05, 4.579199999999936e-05, 4.5...</msg>
<status status="PASS" starttime="20201117 14:48:04.672" endtime="20201117 14:48:04.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.689" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201117 14:48:04.688" endtime="20201117 14:48:04.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.691" level="INFO">VALUE: [4.5361000000000706e-05, 4.601400000000047e-05, 4.576400000000022e-05, 4.5416999999998986e-05, 4.529200000000233e-05, 4.572200000000151e-05, 4.5416999999998986e-05, 4.579199999999936e-05, 4.5223000000000485e-05, 4.5639000000000096e-05, 4.5416999999998986e-05, 4.55000000000004e-05, 4.540199999999994e-05, 4.573599999999761e-05, 4.611099999999799e-05, 4.616600000000026e-05, 4.572200000000151e-05, 4.576400000000022e-05, 4.5597000000001386e-05, 4.548600000000083e-05, 4.558299999999835e-05, 4.576399999999675e-05, 4.558299999999835e-05, 4.56939999999989e-05, 4.544399999999865e-05, 4.529200000000233e-05, 4.604199999999961e-05, 4.572200000000151e-05, 4.6166999999999736e-05, 4.5361000000000706e-05, 4.523599999999711e-05, 4.527699999999982e-05, 4.5722999999997516e-05, 4.583400000000154e-05, 4.536099999999724e-05, 4.55000000000004e-05, 4.55000000000004e-05, 4.529099999999939e-05, 4.604100000000014e-05, 4.5597000000001386e-05, 4.554099999999964e-05, 4.599999999999743e-05, 4.5639000000000096e-05, 4.5875000000000776e-05, 4.561099999999749e-05, 4.577799999999979e-05, 4.53329999999981e-05, 4.554199999999911e-05, 4.557000000000172e-05, 4.522200000000101e-05]</msg>
<status status="PASS" starttime="20201117 14:48:04.690" endtime="20201117 14:48:04.692"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.685" endtime="20201117 14:48:04.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.695" endtime="20201117 14:48:04.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:04.698" endtime="20201117 14:48:04.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.697" endtime="20201117 14:48:04.718"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.693" endtime="20201117 14:48:04.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.329" endtime="20201117 14:48:04.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.327" endtime="20201117 14:48:04.719"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.326" endtime="20201117 14:48:04.720"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.722" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.730" endtime="20201117 14:48:04.746"></status>
</kw>
<msg timestamp="20201117 14:48:04.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.728" endtime="20201117 14:48:04.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:04.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:04.747" endtime="20201117 14:48:04.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.750" endtime="20201117 14:48:04.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.726" endtime="20201117 14:48:04.752"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.724" endtime="20201117 14:48:04.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:04.759" endtime="20201117 14:48:05.045"></status>
</kw>
<msg timestamp="20201117 14:48:05.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:04.757" endtime="20201117 14:48:05.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.049" endtime="20201117 14:48:05.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.058" endtime="20201117 14:48:05.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.755" endtime="20201117 14:48:05.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.753" endtime="20201117 14:48:05.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.064" level="INFO">${RESULT} = [{'time': 0.021963944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.663799999999815e-05, 'source_diff': 4.663799999999815e-05}, {'time': 0.022013958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.061" endtime="20201117 14:48:05.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.079" level="INFO">${ACCURACY} = {'diff': [4.663799999999815e-05, 4.652700000000107e-05, 4.675000000000165e-05, 4.702800000000104e-05, 4.709699999999942e-05, 4.7013999999998e-05, 4.6875000000001776e-05, 4.633400000000204e-05, 4.69030...</msg>
<status status="PASS" starttime="20201117 14:48:05.065" endtime="20201117 14:48:05.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.084" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.083" endtime="20201117 14:48:05.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.087" level="INFO">VALUE: [4.663799999999815e-05, 4.652700000000107e-05, 4.675000000000165e-05, 4.702800000000104e-05, 4.709699999999942e-05, 4.7013999999998e-05, 4.6875000000001776e-05, 4.633400000000204e-05, 4.6903000000000916e-05, 4.720799999999997e-05, 4.626400000000072e-05, 4.698599999999886e-05, 4.651400000000097e-05, 4.647200000000226e-05, 4.658400000000229e-05, 4.633400000000204e-05, 4.6931000000000056e-05, 4.70000000000019e-05, 4.676300000000175e-05, 4.657000000000272e-05, 4.644399999999965e-05, 4.652800000000054e-05, 4.674999999999818e-05, 4.677700000000132e-05, 4.654200000000011e-05, 4.659699999999892e-05, 4.677800000000079e-05, 4.630499999999996e-05, 4.629199999999986e-05, 4.6403000000000416e-05, 4.644399999999965e-05, 4.697200000000276e-05, 4.663899999999763e-05, 4.702800000000104e-05, 4.672200000000251e-05, 4.6723000000001985e-05, 4.6973000000002235e-05, 4.6694999999999376e-05, 4.626299999999778e-05, 4.655600000000315e-05, 4.708299999999985e-05, 4.699999999999843e-05, 4.643000000000008e-05, 4.631899999999953e-05, 4.629100000000039e-05, 4.658299999999935e-05, 4.620799999999897e-05, 4.670799999999947e-05, 4.708299999999985e-05, 4.647200000000226e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.085" endtime="20201117 14:48:05.087"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.080" endtime="20201117 14:48:05.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.090" endtime="20201117 14:48:05.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.094" endtime="20201117 14:48:05.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.092" endtime="20201117 14:48:05.114"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.088" endtime="20201117 14:48:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.722" endtime="20201117 14:48:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.721" endtime="20201117 14:48:05.115"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:04.720" endtime="20201117 14:48:05.116"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.126" endtime="20201117 14:48:05.142"></status>
</kw>
<msg timestamp="20201117 14:48:05.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.124" endtime="20201117 14:48:05.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.144" endtime="20201117 14:48:05.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.146" endtime="20201117 14:48:05.148"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.122" endtime="20201117 14:48:05.149"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.120" endtime="20201117 14:48:05.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.155" endtime="20201117 14:48:05.441"></status>
</kw>
<msg timestamp="20201117 14:48:05.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022083986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.154" endtime="20201117 14:48:05.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022083986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.446" endtime="20201117 14:48:05.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.454" endtime="20201117 14:48:05.455"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.151" endtime="20201117 14:48:05.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.150" endtime="20201117 14:48:05.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.460" level="INFO">${RESULT} = [{'time': 0.022083986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.76529999999982e-05, 'source_diff': 4.76529999999982e-05}, {'time': 0.022140986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:05.457" endtime="20201117 14:48:05.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.474" level="INFO">${ACCURACY} = {'diff': [4.76529999999982e-05, 4.801400000000247e-05, 4.8181000000001306e-05, 4.797200000000029e-05, 4.724999999999868e-05, 4.729200000000086e-05, 4.740299999999795e-05, 4.7889000000002346e-05, 4.743...</msg>
<status status="PASS" starttime="20201117 14:48:05.462" endtime="20201117 14:48:05.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.479" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.478" endtime="20201117 14:48:05.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.481" level="INFO">VALUE: [4.76529999999982e-05, 4.801400000000247e-05, 4.8181000000001306e-05, 4.797200000000029e-05, 4.724999999999868e-05, 4.729200000000086e-05, 4.740299999999795e-05, 4.7889000000002346e-05, 4.7431000000000556e-05, 4.7903000000001916e-05, 4.725000000000215e-05, 4.730600000000043e-05, 4.811199999999946e-05, 4.7431000000000556e-05, 4.731900000000053e-05, 4.763799999999915e-05, 4.816600000000226e-05, 4.736099999999924e-05, 4.75269999999986e-05, 4.75000000000024e-05, 4.81940000000014e-05, 4.8013999999999e-05, 4.7403000000001416e-05, 4.737499999999881e-05, 4.776399999999875e-05, 4.7653000000001666e-05, 4.7361000000002706e-05, 4.763899999999863e-05, 4.791699999999802e-05, 4.751400000000197e-05, 4.770800000000047e-05, 4.755500000000121e-05, 4.805499999999824e-05, 4.805599999999771e-05, 4.747199999999979e-05, 4.727699999999835e-05, 4.726399999999825e-05, 4.761099999999949e-05, 4.754100000000164e-05, 4.725000000000215e-05, 4.744399999999718e-05, 4.736099999999924e-05, 4.776399999999875e-05, 4.787499999999931e-05, 4.766699999999777e-05, 4.741699999999752e-05, 4.7417000000000986e-05, 4.793099999999759e-05, 4.762499999999906e-05, 4.776399999999875e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.480" endtime="20201117 14:48:05.481"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.475" endtime="20201117 14:48:05.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.484" endtime="20201117 14:48:05.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.488" endtime="20201117 14:48:05.507"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.486" endtime="20201117 14:48:05.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.483" endtime="20201117 14:48:05.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.119" endtime="20201117 14:48:05.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.117" endtime="20201117 14:48:05.509"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.116" endtime="20201117 14:48:05.509"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.511" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.519" endtime="20201117 14:48:05.536"></status>
</kw>
<msg timestamp="20201117 14:48:05.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.518" endtime="20201117 14:48:05.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.537" endtime="20201117 14:48:05.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.540" endtime="20201117 14:48:05.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.515" endtime="20201117 14:48:05.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.513" endtime="20201117 14:48:05.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.549" endtime="20201117 14:48:05.835"></status>
</kw>
<msg timestamp="20201117 14:48:05.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.547" endtime="20201117 14:48:05.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:05.839" endtime="20201117 14:48:05.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.848" endtime="20201117 14:48:05.849"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.545" endtime="20201117 14:48:05.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.543" endtime="20201117 14:48:05.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:05.855" level="INFO">${RESULT} = [{'time': 0.021977681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.879199999999889e-05, 'source_diff': 4.879199999999889e-05}, {'time': 0.022030694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:05.851" endtime="20201117 14:48:05.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:05.868" level="INFO">${ACCURACY} = {'diff': [4.879199999999889e-05, 4.876300000000028e-05, 4.88330000000016e-05, 4.911100000000099e-05, 4.900000000000043e-05, 4.836100000000024e-05, 4.842999999999861e-05, 4.847199999999732e-05, 4.91250...</msg>
<status status="PASS" starttime="20201117 14:48:05.856" endtime="20201117 14:48:05.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.872" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201117 14:48:05.871" endtime="20201117 14:48:05.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.875" level="INFO">VALUE: [4.879199999999889e-05, 4.876300000000028e-05, 4.88330000000016e-05, 4.911100000000099e-05, 4.900000000000043e-05, 4.836100000000024e-05, 4.842999999999861e-05, 4.847199999999732e-05, 4.912500000000056e-05, 4.897200000000129e-05, 4.920800000000197e-05, 4.855599999999821e-05, 4.908300000000185e-05, 4.8445000000001126e-05, 4.836100000000024e-05, 4.826400000000272e-05, 4.908400000000132e-05, 4.8709000000000946e-05, 4.8459000000000696e-05, 4.827800000000229e-05, 4.913800000000065e-05, 4.912500000000056e-05, 4.873600000000061e-05, 4.873600000000061e-05, 4.881900000000203e-05, 4.843099999999809e-05, 4.902800000000304e-05, 4.884700000000117e-05, 4.890299999999945e-05, 4.826399999999925e-05, 4.920800000000197e-05, 4.92079999999985e-05, 4.854200000000211e-05, 4.879200000000236e-05, 4.8445000000001126e-05, 4.8320000000001e-05, 4.873600000000061e-05, 4.837499999999981e-05, 4.866699999999877e-05, 4.913900000000013e-05, 4.849999999999993e-05, 4.829099999999892e-05, 4.837499999999981e-05, 4.879099999999942e-05, 4.909699999999795e-05, 4.819399999999793e-05, 4.886100000000074e-05, 4.849999999999993e-05, 4.898599999999739e-05, 4.844399999999818e-05]</msg>
<status status="PASS" starttime="20201117 14:48:05.874" endtime="20201117 14:48:05.875"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.869" endtime="20201117 14:48:05.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.878" endtime="20201117 14:48:05.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:05.881" endtime="20201117 14:48:05.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.880" endtime="20201117 14:48:05.901"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.876" endtime="20201117 14:48:05.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.512" endtime="20201117 14:48:05.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.510" endtime="20201117 14:48:05.902"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.509" endtime="20201117 14:48:05.903"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.905" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.913" endtime="20201117 14:48:05.929"></status>
</kw>
<msg timestamp="20201117 14:48:05.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.911" endtime="20201117 14:48:05.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:05.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:05.931" endtime="20201117 14:48:05.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.933" endtime="20201117 14:48:05.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.909" endtime="20201117 14:48:05.935"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.907" endtime="20201117 14:48:05.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:05.943" endtime="20201117 14:48:06.229"></status>
</kw>
<msg timestamp="20201117 14:48:06.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02187275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:05.941" endtime="20201117 14:48:06.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02187275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:06.233" endtime="20201117 14:48:06.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.241" endtime="20201117 14:48:06.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.938" endtime="20201117 14:48:06.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.936" endtime="20201117 14:48:06.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.248" level="INFO">${RESULT} = [{'time': 0.021922569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.981899999999956e-05, 'source_diff': 4.981899999999956e-05}, {'time': 0.021974597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.245" endtime="20201117 14:48:06.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.261" level="INFO">${ACCURACY} = {'diff': [4.981899999999956e-05, 4.969399999999943e-05, 4.969399999999943e-05, 4.945799999999875e-05, 4.955599999999921e-05, 4.966699999999977e-05, 4.95140000000005e-05, 4.923599999999764e-05, 5.00280...</msg>
<status status="PASS" starttime="20201117 14:48:06.249" endtime="20201117 14:48:06.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.266" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.265" endtime="20201117 14:48:06.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.268" level="INFO">VALUE: [4.981899999999956e-05, 4.969399999999943e-05, 4.969399999999943e-05, 4.945799999999875e-05, 4.955599999999921e-05, 4.966699999999977e-05, 4.95140000000005e-05, 4.923599999999764e-05, 5.002800000000057e-05, 4.98469999999987e-05, 4.948600000000136e-05, 4.979199999999989e-05, 4.937500000000081e-05, 4.9209000000001446e-05, 5.008399999999885e-05, 4.954100000000017e-05, 4.962499999999759e-05, 5.018099999999984e-05, 5.011100000000199e-05, 4.959700000000192e-05, 4.958299999999888e-05, 5.00270000000011e-05, 4.947199999999832e-05, 4.967999999999986e-05, 5.01530000000007e-05, 5.008299999999938e-05, 4.955500000000321e-05, 4.981899999999956e-05, 4.925000000000068e-05, 4.988900000000088e-05, 4.972199999999857e-05, 4.973600000000161e-05, 4.916699999999927e-05, 4.966699999999977e-05, 4.955600000000268e-05, 4.957000000000225e-05, 4.962500000000106e-05, 5.005599999999971e-05, 4.925000000000068e-05, 4.973599999999814e-05, 4.938900000000038e-05, 4.942999999999961e-05, 5.019399999999993e-05, 4.976400000000075e-05, 4.990299999999698e-05, 4.962499999999759e-05, 4.955499999999974e-05, 4.9681000000002806e-05, 4.931899999999906e-05, 4.999999999999796e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.267" endtime="20201117 14:48:06.269"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.262" endtime="20201117 14:48:06.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.271" endtime="20201117 14:48:06.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.275" endtime="20201117 14:48:06.294"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.273" endtime="20201117 14:48:06.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.270" endtime="20201117 14:48:06.295"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.906" endtime="20201117 14:48:06.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.904" endtime="20201117 14:48:06.296"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:05.903" endtime="20201117 14:48:06.296"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.298" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.307" endtime="20201117 14:48:06.323"></status>
</kw>
<msg timestamp="20201117 14:48:06.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.305" endtime="20201117 14:48:06.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.324" endtime="20201117 14:48:06.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.327" endtime="20201117 14:48:06.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.302" endtime="20201117 14:48:06.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.300" endtime="20201117 14:48:06.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.336" endtime="20201117 14:48:06.623"></status>
</kw>
<msg timestamp="20201117 14:48:06.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.335" endtime="20201117 14:48:06.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.627" endtime="20201117 14:48:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.635" endtime="20201117 14:48:06.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.332" endtime="20201117 14:48:06.637"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.330" endtime="20201117 14:48:06.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:06.642" level="INFO">${RESULT} = [{'time': 0.022008306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.095899999999973e-05, 'source_diff': 5.095899999999973e-05}, {'time': 0.022067292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:06.638" endtime="20201117 14:48:06.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:06.657" level="INFO">${ACCURACY} = {'diff': [5.095899999999973e-05, 5.024999999999821e-05, 5.056999999999978e-05, 5.0459000000002696e-05, 5.0986999999998867e-05, 5.051300000000203e-05, 5.068000000000086e-05, 5.094400000000068e-05, 5.04...</msg>
<status status="PASS" starttime="20201117 14:48:06.643" endtime="20201117 14:48:06.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.661" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201117 14:48:06.660" endtime="20201117 14:48:06.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.663" level="INFO">VALUE: [5.095899999999973e-05, 5.024999999999821e-05, 5.056999999999978e-05, 5.0459000000002696e-05, 5.0986999999998867e-05, 5.051300000000203e-05, 5.068000000000086e-05, 5.094400000000068e-05, 5.041699999999705e-05, 5.105500000000124e-05, 5.056900000000031e-05, 5.095800000000025e-05, 5.076399999999828e-05, 5.118000000000136e-05, 5.087499999999884e-05, 5.059699999999945e-05, 5.079199999999742e-05, 5.083299999999666e-05, 5.036100000000224e-05, 5.088899999999841e-05, 5.055600000000021e-05, 5.074999999999871e-05, 5.070899999999948e-05, 5.030500000000049e-05, 5.083300000000013e-05, 5.1165999999998324e-05, 5.044400000000018e-05, 5.083300000000013e-05, 5.094400000000068e-05, 5.08469999999997e-05, 5.072199999999957e-05, 5.058299999999988e-05, 5.040300000000095e-05, 5.061100000000249e-05, 5.072199999999957e-05, 5.095800000000025e-05, 5.080600000000046e-05, 5.062499999999859e-05, 5.044499999999966e-05, 5.027800000000082e-05, 5.052800000000107e-05, 5.08339999999996e-05, 5.1014000000002e-05, 5.1137999999999184e-05, 5.08469999999997e-05, 5.097199999999982e-05, 5.1014000000002e-05, 5.05140000000015e-05, 5.058299999999988e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201117 14:48:06.662" endtime="20201117 14:48:06.664"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.657" endtime="20201117 14:48:06.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.667" endtime="20201117 14:48:06.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:06.670" endtime="20201117 14:48:06.689"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.668" endtime="20201117 14:48:06.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.665" endtime="20201117 14:48:06.690"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.299" endtime="20201117 14:48:06.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.297" endtime="20201117 14:48:06.691"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.296" endtime="20201117 14:48:06.691"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.694" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.709" endtime="20201117 14:48:06.726"></status>
</kw>
<msg timestamp="20201117 14:48:06.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.708" endtime="20201117 14:48:06.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:06.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:06.728" endtime="20201117 14:48:06.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.730" endtime="20201117 14:48:06.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.698" endtime="20201117 14:48:06.732"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.696" endtime="20201117 14:48:06.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:06.739" endtime="20201117 14:48:07.025"></status>
</kw>
<msg timestamp="20201117 14:48:07.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029908875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029960514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:06.738" endtime="20201117 14:48:07.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029908875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029960514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.029" endtime="20201117 14:48:07.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.038" endtime="20201117 14:48:07.039"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.735" endtime="20201117 14:48:07.040"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.733" endtime="20201117 14:48:07.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.044" level="INFO">${RESULT} = [{'time': 0.029960514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.163899999999916e-05, 'source_diff': 5.163899999999916e-05}, {'time': 0.030021528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.041" endtime="20201117 14:48:07.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.058" level="INFO">${ACCURACY} = {'diff': [5.163899999999916e-05, 5.184699999999723e-05, 5.172300000000005e-05, 5.208399999999738e-05, 5.205599999999824e-05, 5.184800000000017e-05, 5.1236999999999117e-05, 5.1402000000002473e-05, 5.13...</msg>
<status status="PASS" starttime="20201117 14:48:07.045" endtime="20201117 14:48:07.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.062" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.061" endtime="20201117 14:48:07.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.065" level="INFO">VALUE: [5.163899999999916e-05, 5.184699999999723e-05, 5.172300000000005e-05, 5.208399999999738e-05, 5.205599999999824e-05, 5.184800000000017e-05, 5.1236999999999117e-05, 5.1402000000002473e-05, 5.1387999999999434e-05, 5.15140000000025e-05, 5.202699999999963e-05, 5.183300000000113e-05, 5.147200000000032e-05, 5.208399999999738e-05, 5.124999999999921e-05, 5.141699999999805e-05, 5.147200000000032e-05, 5.186100000000027e-05, 5.161100000000002e-05, 5.1708000000001e-05, 5.132000000000053e-05, 5.199999999999996e-05, 5.188899999999941e-05, 5.18340000000006e-05, 5.1457999999997284e-05, 5.195899999999726e-05, 5.1401999999999004e-05, 5.200000000000343e-05, 5.175000000000318e-05, 5.13340000000001e-05, 5.155500000000174e-05, 5.201399999999606e-05, 5.1917000000005487e-05, 5.143099999999762e-05, 5.155500000000174e-05, 5.133300000000063e-05, 5.1457999999997284e-05, 5.202799999999563e-05, 5.175000000000318e-05, 5.170899999999701e-05, 5.143099999999762e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.1235999999996173e-05, 5.125000000000268e-05, 5.191699999999855e-05, 5.1735999999996674e-05, 5.131900000000106e-05, 5.16940000000049e-05, 5.145800000000422e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.063" endtime="20201117 14:48:07.065"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.059" endtime="20201117 14:48:07.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.068" endtime="20201117 14:48:07.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.071" endtime="20201117 14:48:07.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.070" endtime="20201117 14:48:07.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.066" endtime="20201117 14:48:07.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.694" endtime="20201117 14:48:07.092"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.692" endtime="20201117 14:48:07.093"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:06.692" endtime="20201117 14:48:07.093"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.095" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.103" endtime="20201117 14:48:07.120"></status>
</kw>
<msg timestamp="20201117 14:48:07.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.102" endtime="20201117 14:48:07.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.122" endtime="20201117 14:48:07.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.125" endtime="20201117 14:48:07.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.099" endtime="20201117 14:48:07.127"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.097" endtime="20201117 14:48:07.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.135" endtime="20201117 14:48:07.422"></status>
</kw>
<msg timestamp="20201117 14:48:07.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023162278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.133" endtime="20201117 14:48:07.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023162278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.426" endtime="20201117 14:48:07.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.434" endtime="20201117 14:48:07.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.130" endtime="20201117 14:48:07.436"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.128" endtime="20201117 14:48:07.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.441" level="INFO">${RESULT} = [{'time': 0.023162278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.232000000000153e-05, 'source_diff': 5.232000000000153e-05}, {'time': 0.023224347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.437" endtime="20201117 14:48:07.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.454" level="INFO">${ACCURACY} = {'diff': [5.232000000000153e-05, 5.306899999999934e-05, 5.301300000000106e-05, 5.31669999999998e-05, 5.268099999999887e-05, 5.281999999999856e-05, 5.233299999999816e-05, 5.302700000000063e-05, 5.31249...</msg>
<status status="PASS" starttime="20201117 14:48:07.442" endtime="20201117 14:48:07.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.459" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.458" endtime="20201117 14:48:07.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.461" level="INFO">VALUE: [5.232000000000153e-05, 5.306899999999934e-05, 5.301300000000106e-05, 5.31669999999998e-05, 5.268099999999887e-05, 5.281999999999856e-05, 5.233299999999816e-05, 5.302700000000063e-05, 5.312499999999762e-05, 5.290299999999998e-05, 5.277799999999985e-05, 5.28470000000017e-05, 5.309699999999848e-05, 5.2943999999999214e-05, 5.3193999999999464e-05, 5.2735999999997674e-05, 5.311100000000152e-05, 5.288900000000041e-05, 5.270900000000148e-05, 5.262500000000059e-05, 5.279199999999942e-05, 5.308399999999838e-05, 5.222300000000055e-05, 5.31669999999998e-05, 5.261100000000102e-05, 5.227699999999988e-05, 5.256899999999884e-05, 5.2415999999999574e-05, 5.2693999999998964e-05, 5.250000000000046e-05, 5.2485999999997424e-05, 5.30280000000001e-05, 5.294400000000268e-05, 5.262500000000059e-05, 5.301400000000053e-05, 5.251400000000003e-05, 5.252800000000307e-05, 5.276400000000028e-05, 5.3166000000000324e-05, 5.250000000000046e-05, 5.276400000000028e-05, 5.229199999999892e-05, 5.252700000000013e-05, 5.255600000000221e-05, 5.2457999999998284e-05, 5.229099999999945e-05, 5.273600000000114e-05, 5.276400000000028e-05, 5.251400000000003e-05, 5.268100000000234e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.460" endtime="20201117 14:48:07.462"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.455" endtime="20201117 14:48:07.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.464" endtime="20201117 14:48:07.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.468" endtime="20201117 14:48:07.487"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.466" endtime="20201117 14:48:07.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.463" endtime="20201117 14:48:07.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.096" endtime="20201117 14:48:07.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.094" endtime="20201117 14:48:07.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.093" endtime="20201117 14:48:07.489"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.491" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.500" endtime="20201117 14:48:07.517"></status>
</kw>
<msg timestamp="20201117 14:48:07.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.498" endtime="20201117 14:48:07.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.519" endtime="20201117 14:48:07.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.521" endtime="20201117 14:48:07.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.495" endtime="20201117 14:48:07.523"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.493" endtime="20201117 14:48:07.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.530" endtime="20201117 14:48:07.815"></status>
</kw>
<msg timestamp="20201117 14:48:07.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.529" endtime="20201117 14:48:07.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:07.820" endtime="20201117 14:48:07.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.828" endtime="20201117 14:48:07.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.526" endtime="20201117 14:48:07.830"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.524" endtime="20201117 14:48:07.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:07.835" level="INFO">${RESULT} = [{'time': 0.022697292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.350000000000146e-05, 'source_diff': 5.350000000000146e-05}, {'time': 0.022755292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:07.831" endtime="20201117 14:48:07.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:07.848" level="INFO">${ACCURACY} = {'diff': [5.350000000000146e-05, 5.3749999999998244e-05, 5.408399999999938e-05, 5.39869999999984e-05, 5.3651999999997785e-05, 5.355500000000027e-05, 5.3527999999997133e-05, 5.3902000000001504e-05, 5.4...</msg>
<status status="PASS" starttime="20201117 14:48:07.836" endtime="20201117 14:48:07.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.853" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201117 14:48:07.852" endtime="20201117 14:48:07.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.856" level="INFO">VALUE: [5.350000000000146e-05, 5.3749999999998244e-05, 5.408399999999938e-05, 5.39869999999984e-05, 5.3651999999997785e-05, 5.355500000000027e-05, 5.3527999999997133e-05, 5.3902000000001504e-05, 5.408299999999991e-05, 5.40280000000011e-05, 5.400000000000196e-05, 5.331899999999959e-05, 5.369499999999944e-05, 5.379200000000042e-05, 5.338899999999744e-05, 5.35280000000006e-05, 5.394499999999969e-05, 5.3999999999998494e-05, 5.351400000000103e-05, 5.323699999999765e-05, 5.3957999999999784e-05, 5.351300000000156e-05, 5.3887999999998465e-05, 5.3430000000000144e-05, 5.3749999999998244e-05, 5.3416000000000574e-05, 5.3721999999999104e-05, 5.3916000000001074e-05, 5.36670000000003e-05, 5.358300000000288e-05, 5.4221999999999604e-05, 5.4194000000000464e-05, 5.326400000000078e-05, 5.343099999999962e-05, 5.343099999999962e-05, 5.418100000000037e-05, 5.3735999999998674e-05, 5.388899999999794e-05, 5.387499999999837e-05, 5.323600000000164e-05, 5.406999999999981e-05, 5.3901999999998035e-05, 5.40419999999972e-05, 5.358299999999941e-05, 5.338900000000091e-05, 5.379200000000042e-05, 5.3944000000000214e-05, 5.327800000000035e-05, 5.356899999999984e-05, 5.3457999999999284e-05]</msg>
<status status="PASS" starttime="20201117 14:48:07.854" endtime="20201117 14:48:07.856"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.849" endtime="20201117 14:48:07.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.859" endtime="20201117 14:48:07.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:07.862" endtime="20201117 14:48:07.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.861" endtime="20201117 14:48:07.882"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.857" endtime="20201117 14:48:07.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.492" endtime="20201117 14:48:07.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.490" endtime="20201117 14:48:07.883"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.489" endtime="20201117 14:48:07.883"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.886" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.894" endtime="20201117 14:48:07.911"></status>
</kw>
<msg timestamp="20201117 14:48:07.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.892" endtime="20201117 14:48:07.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:07.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:07.913" endtime="20201117 14:48:07.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.915" endtime="20201117 14:48:07.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.890" endtime="20201117 14:48:07.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.888" endtime="20201117 14:48:07.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:07.924" endtime="20201117 14:48:08.210"></status>
</kw>
<msg timestamp="20201117 14:48:08.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02285, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:48:07.923" endtime="20201117 14:48:08.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02285, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:48:08.214" endtime="20201117 14:48:08.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.222" endtime="20201117 14:48:08.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.920" endtime="20201117 14:48:08.224"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.918" endtime="20201117 14:48:08.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.229" level="INFO">${RESULT} = [{'time': 0.02285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.490299999999851e-05, 'source_diff': 5.490299999999851e-05}, {'time': 0.022906972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201117 14:48:08.225" endtime="20201117 14:48:08.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.244" level="INFO">${ACCURACY} = {'diff': [5.490299999999851e-05, 5.4666000000001824e-05, 5.515299999999876e-05, 5.438899999999844e-05, 5.516699999999833e-05, 5.438899999999844e-05, 5.470900000000001e-05, 5.511100000000005e-05, 5.434...</msg>
<status status="PASS" starttime="20201117 14:48:08.230" endtime="20201117 14:48:08.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.248" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.247" endtime="20201117 14:48:08.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.251" level="INFO">VALUE: [5.490299999999851e-05, 5.4666000000001824e-05, 5.515299999999876e-05, 5.438899999999844e-05, 5.516699999999833e-05, 5.438899999999844e-05, 5.470900000000001e-05, 5.511100000000005e-05, 5.434699999999973e-05, 5.462499999999912e-05, 5.470900000000001e-05, 5.43609999999993e-05, 5.469500000000044e-05, 5.508300000000091e-05, 5.452699999999866e-05, 5.4402000000002004e-05, 5.426400000000178e-05, 5.502699999999916e-05, 5.4527999999998134e-05, 5.4763999999998814e-05, 5.501400000000253e-05, 5.431900000000059e-05, 5.458300000000041e-05, 5.515299999999876e-05, 5.46809999999974e-05, 5.509799999999995e-05, 5.4235999999999174e-05, 5.461099999999955e-05, 5.438899999999844e-05, 5.463899999999869e-05, 5.458300000000041e-05, 5.477800000000185e-05, 5.508299999999744e-05, 5.50549999999983e-05, 5.4430000000001144e-05, 5.4513999999998564e-05, 5.4277999999997883e-05, 5.50280000000021e-05, 5.4485999999999424e-05, 5.513900000000266e-05, 5.484699999999676e-05, 5.4985999999999924e-05, 5.473600000000314e-05, 5.437499999999887e-05, 5.4791999999997953e-05, 5.515299999999876e-05, 5.4999999999999494e-05, 5.459799999999945e-05, 5.4749999999999244e-05, 5.429200000000092e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.250" endtime="20201117 14:48:08.251"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.245" endtime="20201117 14:48:08.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.254" endtime="20201117 14:48:08.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.257" endtime="20201117 14:48:08.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.256" endtime="20201117 14:48:08.277"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.252" endtime="20201117 14:48:08.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.886" endtime="20201117 14:48:08.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.884" endtime="20201117 14:48:08.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:07.884" endtime="20201117 14:48:08.279"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.281" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.289" endtime="20201117 14:48:08.305"></status>
</kw>
<msg timestamp="20201117 14:48:08.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.288" endtime="20201117 14:48:08.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.307" endtime="20201117 14:48:08.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.309" endtime="20201117 14:48:08.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.285" endtime="20201117 14:48:08.311"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.283" endtime="20201117 14:48:08.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.318" endtime="20201117 14:48:08.603"></status>
</kw>
<msg timestamp="20201117 14:48:08.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.317" endtime="20201117 14:48:08.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021935472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.607" endtime="20201117 14:48:08.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.616" endtime="20201117 14:48:08.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.314" endtime="20201117 14:48:08.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.312" endtime="20201117 14:48:08.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:08.623" level="INFO">${RESULT} = [{'time': 0.021991639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.616699999999933e-05, 'source_diff': 5.616699999999933e-05}, {'time': 0.022051653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:08.619" endtime="20201117 14:48:08.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:08.636" level="INFO">${ACCURACY} = {'diff': [5.616699999999933e-05, 5.537499999999987e-05, 5.609700000000148e-05, 5.591699999999908e-05, 5.6041999999999204e-05, 5.541700000000205e-05, 5.536199999999977e-05, 5.559700000000098e-05, 5.576...</msg>
<status status="PASS" starttime="20201117 14:48:08.624" endtime="20201117 14:48:08.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.640" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201117 14:48:08.639" endtime="20201117 14:48:08.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.643" level="INFO">VALUE: [5.616699999999933e-05, 5.537499999999987e-05, 5.609700000000148e-05, 5.591699999999908e-05, 5.6041999999999204e-05, 5.541700000000205e-05, 5.536199999999977e-05, 5.559700000000098e-05, 5.576300000000034e-05, 5.563899999999969e-05, 5.55549999999988e-05, 5.6027999999999634e-05, 5.5763999999999814e-05, 5.6027999999999634e-05, 5.555500000000227e-05, 5.608300000000191e-05, 5.568100000000187e-05, 5.615299999999976e-05, 5.540300000000248e-05, 5.590299999999951e-05, 5.608400000000138e-05, 5.613899999999672e-05, 5.591700000000255e-05, 5.5263999999999314e-05, 5.523699999999965e-05, 5.537499999999987e-05, 5.5749999999996774e-05, 5.529100000000245e-05, 5.559699999999751e-05, 5.591699999999908e-05, 5.558299999999794e-05, 5.5736000000000674e-05, 5.619500000000194e-05, 5.561100000000055e-05, 5.5791999999998954e-05, 5.5486000000000424e-05, 5.563899999999969e-05, 5.595900000000126e-05, 5.58619999999968e-05, 5.5249999999999744e-05, 5.6014000000000064e-05, 5.608400000000138e-05, 5.5499999999999994e-05, 5.533299999999769e-05, 5.5513999999999564e-05, 5.5249999999999744e-05, 5.580500000000252e-05, 5.6027999999999634e-05, 5.609700000000148e-05, 5.5750000000000244e-05]</msg>
<status status="PASS" starttime="20201117 14:48:08.641" endtime="20201117 14:48:08.643"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.637" endtime="20201117 14:48:08.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.646" endtime="20201117 14:48:08.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:08.649" endtime="20201117 14:48:08.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.648" endtime="20201117 14:48:08.669"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.645" endtime="20201117 14:48:08.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.281" endtime="20201117 14:48:08.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.280" endtime="20201117 14:48:08.670"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.279" endtime="20201117 14:48:08.671"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.673" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.681" endtime="20201117 14:48:08.697"></status>
</kw>
<msg timestamp="20201117 14:48:08.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.680" endtime="20201117 14:48:08.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:08.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:08.699" endtime="20201117 14:48:08.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.701" endtime="20201117 14:48:08.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.677" endtime="20201117 14:48:08.703"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.675" endtime="20201117 14:48:08.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:08.710" endtime="20201117 14:48:08.997"></status>
</kw>
<msg timestamp="20201117 14:48:09.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:08.708" endtime="20201117 14:48:09.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.001" endtime="20201117 14:48:09.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.009" endtime="20201117 14:48:09.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.706" endtime="20201117 14:48:09.011"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.704" endtime="20201117 14:48:09.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.016" level="INFO">${RESULT} = [{'time': 0.022025139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6569999999998843e-05, 'source_diff': 5.6569999999998843e-05}, {'time': 0.022090111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.013" endtime="20201117 14:48:09.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.030" level="INFO">${ACCURACY} = {'diff': [5.6569999999998843e-05, 5.6707999999999065e-05, 5.6277999999999884e-05, 5.68610000000018e-05, 5.662499999999765e-05, 5.665300000000026e-05, 5.63749999999974e-05, 5.694499999999922e-05, 5.676...</msg>
<status status="PASS" starttime="20201117 14:48:09.017" endtime="20201117 14:48:09.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.034" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.033" endtime="20201117 14:48:09.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.036" level="INFO">VALUE: [5.6569999999998843e-05, 5.6707999999999065e-05, 5.6277999999999884e-05, 5.68610000000018e-05, 5.662499999999765e-05, 5.665300000000026e-05, 5.63749999999974e-05, 5.694499999999922e-05, 5.6764000000000814e-05, 5.695899999999879e-05, 5.7000000000001494e-05, 5.6986000000001924e-05, 5.661099999999808e-05, 5.68749999999979e-05, 5.6750000000001244e-05, 5.6222000000001604e-05, 5.708299999999944e-05, 5.6764000000000814e-05, 5.65549999999998e-05, 5.719500000000294e-05, 5.641700000000305e-05, 5.7014000000001064e-05, 5.709700000000248e-05, 5.7083999999998913e-05, 5.709699999999901e-05, 5.7083999999998913e-05, 5.6778000000000384e-05, 5.680600000000299e-05, 5.6514000000000564e-05, 5.6651999999997316e-05, 5.6943999999999745e-05, 5.659699999999851e-05, 5.709699999999901e-05, 5.663900000000069e-05, 5.6305999999999023e-05, 5.6305999999999023e-05, 5.633300000000216e-05, 5.6443999999999245e-05, 5.6291999999999454e-05, 5.7028000000000634e-05, 5.693099999999965e-05, 5.6499999999997524e-05, 5.7083999999998913e-05, 5.637500000000087e-05, 5.693099999999965e-05, 5.694499999999922e-05, 5.637500000000087e-05, 5.65549999999998e-05, 5.6222000000001604e-05, 5.6958000000002784e-05]</msg>
<status status="PASS" starttime="20201117 14:48:09.035" endtime="20201117 14:48:09.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.030" endtime="20201117 14:48:09.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.039" endtime="20201117 14:48:09.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.043" endtime="20201117 14:48:09.062"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.041" endtime="20201117 14:48:09.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.038" endtime="20201117 14:48:09.063"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.674" endtime="20201117 14:48:09.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.672" endtime="20201117 14:48:09.064"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:08.671" endtime="20201117 14:48:09.064"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.066" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.075" endtime="20201117 14:48:09.090"></status>
</kw>
<msg timestamp="20201117 14:48:09.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.073" endtime="20201117 14:48:09.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.092" endtime="20201117 14:48:09.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.095" endtime="20201117 14:48:09.096"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.070" endtime="20201117 14:48:09.097"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.068" endtime="20201117 14:48:09.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.104" endtime="20201117 14:48:09.390"></status>
</kw>
<msg timestamp="20201117 14:48:09.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.102" endtime="20201117 14:48:09.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.394" endtime="20201117 14:48:09.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.402" endtime="20201117 14:48:09.404"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.100" endtime="20201117 14:48:09.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.098" endtime="20201117 14:48:09.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.409" level="INFO">${RESULT} = [{'time': 0.021994333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7514000000001564e-05, 'source_diff': 5.7514000000001564e-05}, {'time': 0.022059333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:09.406" endtime="20201117 14:48:09.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.422" level="INFO">${ACCURACY} = {'diff': [5.7514000000001564e-05, 5.7721999999999635e-05, 5.73610000000023e-05, 5.7430000000000675e-05, 5.7694000000000495e-05, 5.7694000000000495e-05, 5.781900000000062e-05, 5.7944000000000745e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:48:09.410" endtime="20201117 14:48:09.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.427" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.426" endtime="20201117 14:48:09.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.429" level="INFO">VALUE: [5.7514000000001564e-05, 5.7721999999999635e-05, 5.73610000000023e-05, 5.7430000000000675e-05, 5.7694000000000495e-05, 5.7694000000000495e-05, 5.781900000000062e-05, 5.7944000000000745e-05, 5.7985999999999455e-05, 5.770899999999954e-05, 5.763899999999822e-05, 5.761200000000202e-05, 5.736099999999883e-05, 5.78610000000028e-05, 5.78619999999988e-05, 5.779100000000148e-05, 5.7401999999998066e-05, 5.8014000000002064e-05, 5.727700000000141e-05, 5.736099999999883e-05, 5.7958000000000315e-05, 5.784699999999976e-05, 5.7236000000002174e-05, 5.8083999999999913e-05, 5.808300000000044e-05, 5.8027999999998164e-05, 5.790300000000151e-05, 5.734699999999926e-05, 5.8083999999999913e-05, 5.791700000000108e-05, 5.787500000000237e-05, 5.7735999999999205e-05, 5.783300000000019e-05, 5.804100000000173e-05, 5.780500000000105e-05, 5.809700000000001e-05, 5.754099999999776e-05, 5.7764000000001814e-05, 5.8179999999997956e-05, 5.791699999999761e-05, 5.738900000000144e-05, 5.759700000000298e-05, 5.788899999999847e-05, 5.7735999999999205e-05, 5.736099999999883e-05, 5.780500000000105e-05, 5.7541999999997234e-05, 5.7235999999998705e-05, 5.76810000000004e-05, 5.762500000000212e-05]</msg>
<status status="PASS" starttime="20201117 14:48:09.428" endtime="20201117 14:48:09.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.423" endtime="20201117 14:48:09.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.433" endtime="20201117 14:48:09.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.436" endtime="20201117 14:48:09.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.435" endtime="20201117 14:48:09.456"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.431" endtime="20201117 14:48:09.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.067" endtime="20201117 14:48:09.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.065" endtime="20201117 14:48:09.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.064" endtime="20201117 14:48:09.457"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.460" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.468" endtime="20201117 14:48:09.484"></status>
</kw>
<msg timestamp="20201117 14:48:09.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.467" endtime="20201117 14:48:09.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.486" endtime="20201117 14:48:09.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.488" endtime="20201117 14:48:09.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.464" endtime="20201117 14:48:09.490"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.462" endtime="20201117 14:48:09.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.497" endtime="20201117 14:48:09.785"></status>
</kw>
<msg timestamp="20201117 14:48:09.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.495" endtime="20201117 14:48:09.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.789" endtime="20201117 14:48:09.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.797" endtime="20201117 14:48:09.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.493" endtime="20201117 14:48:09.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.491" endtime="20201117 14:48:09.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:09.804" level="INFO">${RESULT} = [{'time': 0.022486722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.862499999999965e-05, 'source_diff': 5.862499999999965e-05}, {'time': 0.022554722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:09.800" endtime="20201117 14:48:09.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:09.819" level="INFO">${ACCURACY} = {'diff': [5.862499999999965e-05, 5.836099999999983e-05, 5.8458000000000815e-05, 5.8485999999999955e-05, 5.8264000000002314e-05, 5.831900000000112e-05, 5.9222000000001135e-05, 5.8820000000001094e-05, 5...</msg>
<status status="PASS" starttime="20201117 14:48:09.805" endtime="20201117 14:48:09.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.823" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201117 14:48:09.822" endtime="20201117 14:48:09.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.826" level="INFO">VALUE: [5.862499999999965e-05, 5.836099999999983e-05, 5.8458000000000815e-05, 5.8485999999999955e-05, 5.8264000000002314e-05, 5.831900000000112e-05, 5.9222000000001135e-05, 5.8820000000001094e-05, 5.866700000000183e-05, 5.8499999999999525e-05, 5.8319999999997124e-05, 5.872300000000011e-05, 5.862499999999965e-05, 5.911100000000058e-05, 5.9235999999997235e-05, 5.851299999999962e-05, 5.8722000000000635e-05, 5.88749999999999e-05, 5.8514000000002564e-05, 5.891700000000208e-05, 5.856900000000137e-05, 5.8263999999998844e-05, 5.8777999999998914e-05, 5.890300000000251e-05, 5.8235999999999705e-05, 5.840300000000201e-05, 5.8472000000000385e-05, 5.8542000000001704e-05, 5.8513999999999095e-05, 5.841700000000158e-05, 5.8722000000000635e-05, 5.8736000000000205e-05, 5.8472000000000385e-05, 5.8444000000001245e-05, 5.880499999999858e-05, 5.831900000000112e-05, 5.8764000000002814e-05, 5.909700000000101e-05, 5.856900000000137e-05, 5.9013999999999595e-05, 5.8749999999999775e-05, 5.8320000000000594e-05, 5.8249999999999275e-05, 5.8749999999999775e-05, 5.8763999999999345e-05, 5.88749999999999e-05, 5.8471999999996915e-05, 5.8944000000001745e-05, 5.8485999999999955e-05, 5.8651999999999316e-05]</msg>
<status status="PASS" starttime="20201117 14:48:09.824" endtime="20201117 14:48:09.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.820" endtime="20201117 14:48:09.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.829" endtime="20201117 14:48:09.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:09.833" endtime="20201117 14:48:09.852"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.831" endtime="20201117 14:48:09.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.827" endtime="20201117 14:48:09.853"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.460" endtime="20201117 14:48:09.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.458" endtime="20201117 14:48:09.854"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.458" endtime="20201117 14:48:09.854"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.856" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.864" endtime="20201117 14:48:09.881"></status>
</kw>
<msg timestamp="20201117 14:48:09.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.863" endtime="20201117 14:48:09.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:09.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:09.882" endtime="20201117 14:48:09.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.885" endtime="20201117 14:48:09.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.860" endtime="20201117 14:48:09.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.858" endtime="20201117 14:48:09.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:09.894" endtime="20201117 14:48:10.179"></status>
</kw>
<msg timestamp="20201117 14:48:10.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:09.892" endtime="20201117 14:48:10.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.183" endtime="20201117 14:48:10.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.191" endtime="20201117 14:48:10.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.890" endtime="20201117 14:48:10.194"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.888" endtime="20201117 14:48:10.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.198" level="INFO">${RESULT} = [{'time': 0.022229194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9665999999999886e-05, 'source_diff': 5.9665999999999886e-05}, {'time': 0.022298222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.195" endtime="20201117 14:48:10.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.211" level="INFO">${ACCURACY} = {'diff': [5.9665999999999886e-05, 5.955499999999933e-05, 5.9652000000000316e-05, 5.96949999999985e-05, 5.9457999999998346e-05, 5.9514000000000095e-05, 5.9444000000002245e-05, 5.944499999999825e-05, 5....</msg>
<status status="PASS" starttime="20201117 14:48:10.199" endtime="20201117 14:48:10.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.216" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.215" endtime="20201117 14:48:10.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.218" level="INFO">VALUE: [5.9665999999999886e-05, 5.955499999999933e-05, 5.9652000000000316e-05, 5.96949999999985e-05, 5.9457999999998346e-05, 5.9514000000000095e-05, 5.9444000000002245e-05, 5.944499999999825e-05, 5.9792000000002954e-05, 5.9957999999998846e-05, 5.9693999999999026e-05, 5.9471999999997915e-05, 5.9334000000001164e-05, 5.9457999999998346e-05, 5.962500000000065e-05, 5.990300000000004e-05, 6.008300000000244e-05, 5.9694000000002495e-05, 5.9986000000001455e-05, 5.9958000000002315e-05, 5.948700000000043e-05, 5.961099999999761e-05, 6.0028000000000165e-05, 6.009700000000201e-05, 5.983299999999872e-05, 5.994499999999875e-05, 5.9764000000000345e-05, 5.966699999999936e-05, 6.0194999999999e-05, 5.9500000000000525e-05, 5.988900000000047e-05, 5.961100000000108e-05, 5.930500000000255e-05, 5.9222000000001135e-05, 5.9443999999998776e-05, 5.9736000000001205e-05, 5.9486000000000955e-05, 6.0028000000000165e-05, 5.931899999999865e-05, 6.005499999999983e-05, 5.983299999999872e-05, 5.984700000000176e-05, 5.9791999999999484e-05, 5.9486000000000955e-05, 6.012500000000115e-05, 5.972300000000111e-05, 5.951300000000062e-05, 5.970900000000154e-05, 5.9541999999999234e-05, 5.9263999999999845e-05]</msg>
<status status="PASS" starttime="20201117 14:48:10.217" endtime="20201117 14:48:10.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.212" endtime="20201117 14:48:10.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.222" endtime="20201117 14:48:10.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.226" endtime="20201117 14:48:10.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.224" endtime="20201117 14:48:10.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.220" endtime="20201117 14:48:10.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.857" endtime="20201117 14:48:10.246"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.855" endtime="20201117 14:48:10.247"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:09.854" endtime="20201117 14:48:10.247"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.249" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.257" endtime="20201117 14:48:10.274"></status>
</kw>
<msg timestamp="20201117 14:48:10.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.256" endtime="20201117 14:48:10.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.276" endtime="20201117 14:48:10.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.278" endtime="20201117 14:48:10.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.253" endtime="20201117 14:48:10.280"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.251" endtime="20201117 14:48:10.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.287" endtime="20201117 14:48:10.575"></status>
</kw>
<msg timestamp="20201117 14:48:10.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.285" endtime="20201117 14:48:10.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022306375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.579" endtime="20201117 14:48:10.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.587" endtime="20201117 14:48:10.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.283" endtime="20201117 14:48:10.589"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.281" endtime="20201117 14:48:10.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.594" level="INFO">${RESULT} = [{'time': 0.022367375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0999999999998555e-05, 'source_diff': 6.0999999999998555e-05}, {'time': 0.022435417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:10.590" endtime="20201117 14:48:10.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:10.607" level="INFO">${ACCURACY} = {'diff': [6.0999999999998555e-05, 6.070899999999907e-05, 6.120899999999957e-05, 6.10560000000003e-05, 6.070899999999907e-05, 6.0792000000000485e-05, 6.104200000000073e-05, 6.093100000000018e-05, 6.054...</msg>
<status status="PASS" starttime="20201117 14:48:10.595" endtime="20201117 14:48:10.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.612" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201117 14:48:10.611" endtime="20201117 14:48:10.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.615" level="INFO">VALUE: [6.0999999999998555e-05, 6.070899999999907e-05, 6.120899999999957e-05, 6.10560000000003e-05, 6.070899999999907e-05, 6.0792000000000485e-05, 6.104200000000073e-05, 6.093100000000018e-05, 6.054100000000076e-05, 6.062500000000165e-05, 6.081900000000015e-05, 6.0430000000000206e-05, 6.062499999999818e-05, 6.0916000000001136e-05, 6.088900000000147e-05, 6.1014000000001595e-05, 6.118100000000043e-05, 6.115300000000129e-05, 6.0721999999999166e-05, 6.1014000000001595e-05, 6.0306000000003024e-05, 6.043099999999968e-05, 6.0792000000000485e-05, 6.088900000000147e-05, 6.055500000000033e-05, 6.0264000000000845e-05, 6.113799999999878e-05, 6.0416000000000636e-05, 6.055500000000033e-05, 6.029100000000051e-05, 6.033299999999922e-05, 6.088900000000147e-05, 6.0971999999999416e-05, 6.065300000000079e-05, 6.0528000000000665e-05, 6.0957999999999846e-05, 6.0486000000001955e-05, 6.0833999999999194e-05, 6.0806000000000054e-05, 6.0792000000000485e-05, 6.068099999999993e-05, 6.0402000000001066e-05, 6.05689999999999e-05, 6.0666000000000886e-05, 6.0236000000001705e-05, 6.0707999999999596e-05, 6.080500000000058e-05, 6.111100000000258e-05, 6.0792000000000485e-05, 6.036100000000183e-05]</msg>
<status status="PASS" starttime="20201117 14:48:10.613" endtime="20201117 14:48:10.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.608" endtime="20201117 14:48:10.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.618" endtime="20201117 14:48:10.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:10.621" endtime="20201117 14:48:10.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.620" endtime="20201117 14:48:10.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.616" endtime="20201117 14:48:10.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.250" endtime="20201117 14:48:10.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.248" endtime="20201117 14:48:10.642"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.247" endtime="20201117 14:48:10.642"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.645" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.653" endtime="20201117 14:48:10.670"></status>
</kw>
<msg timestamp="20201117 14:48:10.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.651" endtime="20201117 14:48:10.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:10.672" endtime="20201117 14:48:10.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.674" endtime="20201117 14:48:10.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.649" endtime="20201117 14:48:10.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.647" endtime="20201117 14:48:10.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.683" endtime="20201117 14:48:10.970"></status>
</kw>
<msg timestamp="20201117 14:48:10.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.682" endtime="20201117 14:48:10.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:10.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:10.974" endtime="20201117 14:48:10.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:10.982" endtime="20201117 14:48:10.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.679" endtime="20201117 14:48:10.984"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.678" endtime="20201117 14:48:10.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:10.989" level="INFO">${RESULT} = [{'time': 0.022136889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.147199999999992e-05, 'source_diff': 6.147199999999992e-05}, {'time': 0.022206903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:10.985" endtime="20201117 14:48:10.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.002" level="INFO">${ACCURACY} = {'diff': [6.147199999999992e-05, 6.194500000000075e-05, 6.182000000000062e-05, 6.222200000000067e-05, 6.205499999999836e-05, 6.129199999999752e-05, 6.168000000000146e-05, 6.209700000000054e-05, 6.1930...</msg>
<status status="PASS" starttime="20201117 14:48:10.990" endtime="20201117 14:48:11.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.007" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.006" endtime="20201117 14:48:11.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.010" level="INFO">VALUE: [6.147199999999992e-05, 6.194500000000075e-05, 6.182000000000062e-05, 6.222200000000067e-05, 6.205499999999836e-05, 6.129199999999752e-05, 6.168000000000146e-05, 6.209700000000054e-05, 6.19300000000017e-05, 6.126400000000184e-05, 6.152800000000166e-05, 6.212500000000315e-05, 6.182000000000062e-05, 6.215299999999882e-05, 6.20140000000026e-05, 6.194500000000075e-05, 6.143100000000068e-05, 6.177799999999845e-05, 6.168100000000093e-05, 6.2195000000001e-05, 6.194500000000075e-05, 6.177700000000244e-05, 6.213899999999925e-05, 6.180500000000158e-05, 6.141600000000164e-05, 6.202699999999922e-05, 6.22080000000011e-05, 6.179200000000148e-05, 6.204200000000173e-05, 6.209800000000001e-05, 6.15560000000008e-05, 6.147199999999992e-05, 6.166699999999789e-05, 6.187499999999943e-05, 6.159700000000004e-05, 6.177799999999845e-05, 6.173599999999974e-05, 6.145799999999688e-05, 6.17499999999993e-05, 6.184700000000029e-05, 6.133300000000022e-05, 6.165200000000232e-05, 6.144400000000078e-05, 6.175000000000277e-05, 6.15690000000009e-05, 6.206899999999793e-05, 6.173599999999974e-05, 6.20279999999987e-05, 6.197200000000042e-05, 6.144499999999678e-05]</msg>
<status status="PASS" starttime="20201117 14:48:11.008" endtime="20201117 14:48:11.010"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.003" endtime="20201117 14:48:11.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.013" endtime="20201117 14:48:11.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.016" endtime="20201117 14:48:11.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.015" endtime="20201117 14:48:11.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.011" endtime="20201117 14:48:11.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.645" endtime="20201117 14:48:11.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.644" endtime="20201117 14:48:11.037"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:10.643" endtime="20201117 14:48:11.037"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.040" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.048" endtime="20201117 14:48:11.065"></status>
</kw>
<msg timestamp="20201117 14:48:11.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.046" endtime="20201117 14:48:11.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.067" endtime="20201117 14:48:11.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.069" endtime="20201117 14:48:11.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.044" endtime="20201117 14:48:11.071"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.042" endtime="20201117 14:48:11.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.078" endtime="20201117 14:48:11.364"></status>
</kw>
<msg timestamp="20201117 14:48:11.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.076" endtime="20201117 14:48:11.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022564458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.369" endtime="20201117 14:48:11.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.377" endtime="20201117 14:48:11.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.074" endtime="20201117 14:48:11.379"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.072" endtime="20201117 14:48:11.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.384" level="INFO">${RESULT} = [{'time': 0.022627361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290299999999957e-05, 'source_diff': 6.290299999999957e-05}, {'time': 0.022695361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:11.380" endtime="20201117 14:48:11.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.399" level="INFO">${ACCURACY} = {'diff': [6.290299999999957e-05, 6.241700000000211e-05, 6.319399999999906e-05, 6.22219999999972e-05, 6.27080000000016e-05, 6.281999999999816e-05, 6.291699999999914e-05, 6.272200000000117e-05, 6.227699...</msg>
<status status="PASS" starttime="20201117 14:48:11.385" endtime="20201117 14:48:11.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.403" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.402" endtime="20201117 14:48:11.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.406" level="INFO">VALUE: [6.290299999999957e-05, 6.241700000000211e-05, 6.319399999999906e-05, 6.22219999999972e-05, 6.27080000000016e-05, 6.281999999999816e-05, 6.291699999999914e-05, 6.272200000000117e-05, 6.227699999999947e-05, 6.27089999999976e-05, 6.236100000000036e-05, 6.32080000000021e-05, 6.270799999999813e-05, 6.255500000000233e-05, 6.259699999999757e-05, 6.25279999999992e-05, 6.266599999999942e-05, 6.267999999999899e-05, 6.250000000000006e-05, 6.255500000000233e-05, 6.287500000000043e-05, 6.283300000000172e-05, 6.250000000000006e-05, 6.23889999999995e-05, 6.263800000000028e-05, 6.284699999999782e-05, 6.269499999999803e-05, 6.308300000000197e-05, 6.237499999999993e-05, 6.32219999999982e-05, 6.241599999999917e-05, 6.227799999999895e-05, 6.27219999999977e-05, 6.279200000000248e-05, 6.32219999999982e-05, 6.251399999999963e-05, 6.272200000000117e-05, 6.2889e-05, 6.315299999999982e-05, 6.273600000000074e-05, 6.245900000000082e-05, 6.301400000000013e-05, 6.265199999999985e-05, 6.276299999999693e-05, 6.227699999999947e-05, 6.22080000000011e-05, 6.298600000000099e-05, 6.292999999999924e-05, 6.237499999999993e-05, 6.261100000000061e-05]</msg>
<status status="PASS" starttime="20201117 14:48:11.404" endtime="20201117 14:48:11.406"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.400" endtime="20201117 14:48:11.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.409" endtime="20201117 14:48:11.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.412" endtime="20201117 14:48:11.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.411" endtime="20201117 14:48:11.432"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.407" endtime="20201117 14:48:11.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.040" endtime="20201117 14:48:11.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.038" endtime="20201117 14:48:11.433"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.038" endtime="20201117 14:48:11.433"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.436" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.444" endtime="20201117 14:48:11.461"></status>
</kw>
<msg timestamp="20201117 14:48:11.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.442" endtime="20201117 14:48:11.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.463" endtime="20201117 14:48:11.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.465" endtime="20201117 14:48:11.467"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.440" endtime="20201117 14:48:11.468"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.438" endtime="20201117 14:48:11.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.475" endtime="20201117 14:48:11.759"></status>
</kw>
<msg timestamp="20201117 14:48:11.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.473" endtime="20201117 14:48:11.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.764" endtime="20201117 14:48:11.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.772" endtime="20201117 14:48:11.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.470" endtime="20201117 14:48:11.774"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.469" endtime="20201117 14:48:11.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:11.779" level="INFO">${RESULT} = [{'time': 0.022056111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.420799999999963e-05, 'source_diff': 6.420799999999963e-05}, {'time': 0.022127097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:11.775" endtime="20201117 14:48:11.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:11.792" level="INFO">${ACCURACY} = {'diff': [6.420799999999963e-05, 6.415299999999735e-05, 6.340300000000007e-05, 6.326400000000038e-05, 6.409699999999907e-05, 6.358399999999848e-05, 6.368100000000293e-05, 6.395799999999938e-05, 6.3375...</msg>
<status status="PASS" starttime="20201117 14:48:11.780" endtime="20201117 14:48:11.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.797" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201117 14:48:11.796" endtime="20201117 14:48:11.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.799" level="INFO">VALUE: [6.420799999999963e-05, 6.415299999999735e-05, 6.340300000000007e-05, 6.326400000000038e-05, 6.409699999999907e-05, 6.358399999999848e-05, 6.368100000000293e-05, 6.395799999999938e-05, 6.337500000000093e-05, 6.365300000000032e-05, 6.399999999999809e-05, 6.395799999999938e-05, 6.367999999999999e-05, 6.351400000000063e-05, 6.412499999999821e-05, 6.420799999999963e-05, 6.373599999999827e-05, 6.340300000000007e-05, 6.374999999999784e-05, 6.326400000000038e-05, 6.358300000000247e-05, 6.380599999999959e-05, 6.411100000000211e-05, 6.33890000000005e-05, 6.380599999999959e-05, 6.379200000000002e-05, 6.359800000000151e-05, 6.38479999999983e-05, 6.331899999999918e-05, 6.348599999999802e-05, 6.345799999999888e-05, 6.348600000000149e-05, 6.416599999999745e-05, 6.379100000000054e-05, 6.374999999999784e-05, 6.370799999999913e-05, 6.40280000000007e-05, 6.361100000000161e-05, 6.394499999999928e-05, 6.366699999999989e-05, 6.37500000000013e-05, 6.330599999999909e-05, 6.356899999999943e-05, 6.372300000000164e-05, 6.399999999999809e-05, 6.365199999999738e-05, 6.351400000000063e-05, 6.369399999999956e-05, 6.331899999999918e-05, 6.408300000000297e-05]</msg>
<status status="PASS" starttime="20201117 14:48:11.798" endtime="20201117 14:48:11.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.793" endtime="20201117 14:48:11.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.802" endtime="20201117 14:48:11.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:11.806" endtime="20201117 14:48:11.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.804" endtime="20201117 14:48:11.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.800" endtime="20201117 14:48:11.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.436" endtime="20201117 14:48:11.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.435" endtime="20201117 14:48:11.827"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.434" endtime="20201117 14:48:11.827"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.829" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.837" endtime="20201117 14:48:11.855"></status>
</kw>
<msg timestamp="20201117 14:48:11.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.836" endtime="20201117 14:48:11.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:11.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:11.856" endtime="20201117 14:48:11.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.864" endtime="20201117 14:48:11.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.833" endtime="20201117 14:48:11.866"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.831" endtime="20201117 14:48:11.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:11.873" endtime="20201117 14:48:12.158"></status>
</kw>
<msg timestamp="20201117 14:48:12.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:11.871" endtime="20201117 14:48:12.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.162" endtime="20201117 14:48:12.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.170" endtime="20201117 14:48:12.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.869" endtime="20201117 14:48:12.172"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.867" endtime="20201117 14:48:12.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.177" level="INFO">${RESULT} = [{'time': 0.021868792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.423600000000224e-05, 'source_diff': 6.423600000000224e-05}, {'time': 0.021937847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:12.173" endtime="20201117 14:48:12.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.190" level="INFO">${ACCURACY} = {'diff': [6.423600000000224e-05, 6.441600000000117e-05, 6.481900000000068e-05, 6.429100000000104e-05, 6.424999999999834e-05, 6.497199999999995e-05, 6.44440000000003e-05, 6.484699999999982e-05, 6.41940...</msg>
<status status="PASS" starttime="20201117 14:48:12.178" endtime="20201117 14:48:12.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.195" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.194" endtime="20201117 14:48:12.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.198" level="INFO">VALUE: [6.423600000000224e-05, 6.441600000000117e-05, 6.481900000000068e-05, 6.429100000000104e-05, 6.424999999999834e-05, 6.497199999999995e-05, 6.44440000000003e-05, 6.484699999999982e-05, 6.419400000000006e-05, 6.430600000000009e-05, 6.52090000000001e-05, 6.452799999999773e-05, 6.461199999999861e-05, 6.45419999999973e-05, 6.486099999999939e-05, 6.501400000000213e-05, 6.44440000000003e-05, 6.449999999999859e-05, 6.47219999999997e-05, 6.518000000000149e-05, 6.487500000000243e-05, 6.452700000000172e-05, 6.429099999999757e-05, 6.454099999999782e-05, 6.42500000000018e-05, 6.459699999999957e-05, 6.431999999999966e-05, 6.50830000000005e-05, 6.430600000000009e-05, 6.505600000000084e-05, 6.434800000000226e-05, 6.433299999999975e-05, 6.495899999999985e-05, 6.438799999999856e-05, 6.430500000000061e-05, 6.467999999999752e-05, 6.516600000000192e-05, 6.473599999999927e-05, 6.481900000000068e-05, 6.504099999999832e-05, 6.484699999999982e-05, 6.484699999999982e-05, 6.440300000000107e-05, 6.491700000000114e-05, 6.429200000000052e-05, 6.429200000000052e-05, 6.50700000000004e-05, 6.42500000000018e-05, 6.519500000000053e-05, 6.504100000000179e-05]</msg>
<status status="PASS" starttime="20201117 14:48:12.196" endtime="20201117 14:48:12.198"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.191" endtime="20201117 14:48:12.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.201" endtime="20201117 14:48:12.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.205" endtime="20201117 14:48:12.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.203" endtime="20201117 14:48:12.225"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.199" endtime="20201117 14:48:12.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.830" endtime="20201117 14:48:12.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.828" endtime="20201117 14:48:12.226"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:11.827" endtime="20201117 14:48:12.226"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.229" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.237" endtime="20201117 14:48:12.253"></status>
</kw>
<msg timestamp="20201117 14:48:12.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.236" endtime="20201117 14:48:12.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.255" endtime="20201117 14:48:12.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.257" endtime="20201117 14:48:12.259"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.233" endtime="20201117 14:48:12.260"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.231" endtime="20201117 14:48:12.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.266" endtime="20201117 14:48:12.553"></status>
</kw>
<msg timestamp="20201117 14:48:12.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.265" endtime="20201117 14:48:12.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.557" endtime="20201117 14:48:12.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.565" endtime="20201117 14:48:12.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.262" endtime="20201117 14:48:12.567"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.261" endtime="20201117 14:48:12.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.572" level="INFO">${RESULT} = [{'time': 0.022485806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.562499999999971e-05, 'source_diff': 6.562499999999971e-05}, {'time': 0.022558847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:12.568" endtime="20201117 14:48:12.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:12.585" level="INFO">${ACCURACY} = {'diff': [6.562499999999971e-05, 6.54440000000013e-05, 6.580499999999864e-05, 6.574999999999984e-05, 6.579099999999907e-05, 6.598600000000052e-05, 6.526400000000238e-05, 6.52639999999989e-05, 6.598600...</msg>
<status status="PASS" starttime="20201117 14:48:12.573" endtime="20201117 14:48:12.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.590" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201117 14:48:12.589" endtime="20201117 14:48:12.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.592" level="INFO">VALUE: [6.562499999999971e-05, 6.54440000000013e-05, 6.580499999999864e-05, 6.574999999999984e-05, 6.579099999999907e-05, 6.598600000000052e-05, 6.526400000000238e-05, 6.52639999999989e-05, 6.598600000000052e-05, 6.584699999999735e-05, 6.563899999999928e-05, 6.613899999999978e-05, 6.57220000000007e-05, 6.593099999999824e-05, 6.548699999999949e-05, 6.527799999999848e-05, 6.555599999999787e-05, 6.590300000000257e-05, 6.552699999999925e-05, 6.568000000000199e-05, 6.598600000000052e-05, 6.530500000000161e-05, 6.617999999999902e-05, 6.548600000000002e-05, 6.619500000000153e-05, 6.566700000000189e-05, 6.612500000000021e-05, 6.524999999999934e-05, 6.577800000000245e-05, 6.545900000000035e-05, 6.574999999999984e-05, 6.558400000000048e-05, 6.616599999999945e-05, 6.570799999999766e-05, 6.579200000000202e-05, 6.569400000000156e-05, 6.605499999999889e-05, 6.583300000000125e-05, 6.580599999999812e-05, 6.616699999999892e-05, 6.57639999999994e-05, 6.544500000000078e-05, 6.613899999999978e-05, 6.54029999999986e-05, 6.60700000000014e-05, 6.533300000000075e-05, 6.548600000000002e-05, 6.593099999999824e-05, 6.544399999999784e-05, 6.598600000000052e-05]</msg>
<status status="PASS" starttime="20201117 14:48:12.591" endtime="20201117 14:48:12.592"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.586" endtime="20201117 14:48:12.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.595" endtime="20201117 14:48:12.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:12.599" endtime="20201117 14:48:12.618"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.597" endtime="20201117 14:48:12.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.594" endtime="20201117 14:48:12.619"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.229" endtime="20201117 14:48:12.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.228" endtime="20201117 14:48:12.620"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.227" endtime="20201117 14:48:12.620"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.622" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.631" endtime="20201117 14:48:12.649"></status>
</kw>
<msg timestamp="20201117 14:48:12.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.629" endtime="20201117 14:48:12.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:12.650" endtime="20201117 14:48:12.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.653" endtime="20201117 14:48:12.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.627" endtime="20201117 14:48:12.655"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.625" endtime="20201117 14:48:12.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.662" endtime="20201117 14:48:12.948"></status>
</kw>
<msg timestamp="20201117 14:48:12.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.660" endtime="20201117 14:48:12.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:12.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022500667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:12.952" endtime="20201117 14:48:12.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:12.961" endtime="20201117 14:48:12.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.658" endtime="20201117 14:48:12.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.656" endtime="20201117 14:48:12.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:12.967" level="INFO">${RESULT} = [{'time': 0.022500667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.649999999999712e-05, 'source_diff': 6.649999999999712e-05}, {'time': 0.022576653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:12.964" endtime="20201117 14:48:12.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.025" level="INFO">${ACCURACY} = {'diff': [6.649999999999712e-05, 6.683399999999826e-05, 6.672199999999823e-05, 6.69030000000001e-05, 6.64029999999996e-05, 6.675000000000084e-05, 6.720800000000263e-05, 6.702800000000023e-05, 6.619499...</msg>
<status status="PASS" starttime="20201117 14:48:12.968" endtime="20201117 14:48:13.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.029" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.028" endtime="20201117 14:48:13.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.032" level="INFO">VALUE: [6.649999999999712e-05, 6.683399999999826e-05, 6.672199999999823e-05, 6.69030000000001e-05, 6.64029999999996e-05, 6.675000000000084e-05, 6.720800000000263e-05, 6.702800000000023e-05, 6.619499999999806e-05, 6.630600000000209e-05, 6.716699999999992e-05, 6.684700000000182e-05, 6.625000000000034e-05, 6.70969999999986e-05, 6.62639999999999e-05, 6.65969999999981e-05, 6.679100000000007e-05, 6.666699999999942e-05, 6.684700000000182e-05, 6.641699999999917e-05, 6.64440000000023e-05, 6.680599999999912e-05, 6.682000000000216e-05, 6.676399999999694e-05, 6.644499999999831e-05, 6.636100000000089e-05, 6.641700000000264e-05, 6.666699999999942e-05, 6.651300000000068e-05, 6.629099999999957e-05, 6.686099999999792e-05, 6.72359999999983e-05, 6.666599999999995e-05, 6.708299999999903e-05, 6.67359999999978e-05, 6.661099999999767e-05, 6.686100000000139e-05, 6.648600000000102e-05, 6.693099999999924e-05, 6.67359999999978e-05, 6.62639999999999e-05, 6.613899999999978e-05, 6.638900000000003e-05, 6.679100000000007e-05, 6.70830000000025e-05, 6.650000000000059e-05, 6.623600000000077e-05, 6.695800000000238e-05, 6.648600000000102e-05, 6.636100000000089e-05]</msg>
<status status="PASS" starttime="20201117 14:48:13.030" endtime="20201117 14:48:13.032"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.026" endtime="20201117 14:48:13.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.035" endtime="20201117 14:48:13.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.039" endtime="20201117 14:48:13.058"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.037" endtime="20201117 14:48:13.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.034" endtime="20201117 14:48:13.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.623" endtime="20201117 14:48:13.059"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.621" endtime="20201117 14:48:13.060"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:12.620" endtime="20201117 14:48:13.060"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.062" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.070" endtime="20201117 14:48:13.089"></status>
</kw>
<msg timestamp="20201117 14:48:13.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.069" endtime="20201117 14:48:13.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.090" endtime="20201117 14:48:13.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.093" endtime="20201117 14:48:13.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.066" endtime="20201117 14:48:13.095"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.064" endtime="20201117 14:48:13.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.102" endtime="20201117 14:48:13.391"></status>
</kw>
<msg timestamp="20201117 14:48:13.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023512792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.100" endtime="20201117 14:48:13.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023445403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023512792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.395" endtime="20201117 14:48:13.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.403" endtime="20201117 14:48:13.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.098" endtime="20201117 14:48:13.405"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.096" endtime="20201117 14:48:13.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.410" level="INFO">${RESULT} = [{'time': 0.023512792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.738900000000103e-05, 'source_diff': 6.738900000000103e-05}, {'time': 0.023589806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:13.407" endtime="20201117 14:48:13.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.423" level="INFO">${ACCURACY} = {'diff': [6.738900000000103e-05, 6.729200000000005e-05, 6.804100000000132e-05, 6.820800000000016e-05, 6.815199999999841e-05, 6.745799999999941e-05, 6.744399999999984e-05, 6.799999999999862e-05, 6.8027...</msg>
<status status="PASS" starttime="20201117 14:48:13.411" endtime="20201117 14:48:13.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.428" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.427" endtime="20201117 14:48:13.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.431" level="INFO">VALUE: [6.738900000000103e-05, 6.729200000000005e-05, 6.804100000000132e-05, 6.820800000000016e-05, 6.815199999999841e-05, 6.745799999999941e-05, 6.744399999999984e-05, 6.799999999999862e-05, 6.802799999999776e-05, 6.798599999999905e-05, 6.794400000000034e-05, 6.75969999999991e-05, 6.736099999999842e-05, 6.77229999999987e-05, 6.818100000000049e-05, 6.769500000000303e-05, 6.806900000000046e-05, 6.820800000000016e-05, 6.751399999999769e-05, 6.804100000000132e-05, 6.722199999999873e-05, 6.820800000000016e-05, 6.725000000000134e-05, 6.781900000000021e-05, 6.801399999999819e-05, 6.733299999999928e-05, 6.719500000000253e-05, 6.732000000000266e-05, 6.780600000000012e-05, 6.80839999999995e-05, 6.802800000000123e-05, 6.725000000000134e-05, 6.779100000000107e-05, 6.795799999999991e-05, 6.79160000000012e-05, 6.765300000000085e-05, 6.752800000000073e-05, 6.780500000000064e-05, 6.805600000000037e-05, 6.75969999999991e-05, 6.741700000000017e-05, 6.729200000000005e-05, 6.743099999999974e-05, 6.748600000000202e-05, 6.755599999999987e-05, 6.72359999999983e-05, 6.750000000000159e-05, 6.737500000000146e-05, 6.788800000000206e-05, 6.749999999999812e-05]</msg>
<status status="PASS" starttime="20201117 14:48:13.429" endtime="20201117 14:48:13.431"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.424" endtime="20201117 14:48:13.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.434" endtime="20201117 14:48:13.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.437" endtime="20201117 14:48:13.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.436" endtime="20201117 14:48:13.457"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.432" endtime="20201117 14:48:13.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.063" endtime="20201117 14:48:13.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.061" endtime="20201117 14:48:13.458"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.060" endtime="20201117 14:48:13.458"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.461" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.470" endtime="20201117 14:48:13.486"></status>
</kw>
<msg timestamp="20201117 14:48:13.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.468" endtime="20201117 14:48:13.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.488" endtime="20201117 14:48:13.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.490" endtime="20201117 14:48:13.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.466" endtime="20201117 14:48:13.492"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.463" endtime="20201117 14:48:13.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.499" endtime="20201117 14:48:13.784"></status>
</kw>
<msg timestamp="20201117 14:48:13.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.498" endtime="20201117 14:48:13.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.788" endtime="20201117 14:48:13.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.796" endtime="20201117 14:48:13.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.495" endtime="20201117 14:48:13.798"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.494" endtime="20201117 14:48:13.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:13.803" level="INFO">${RESULT} = [{'time': 0.022946736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.917999999999855e-05, 'source_diff': 6.917999999999855e-05}, {'time': 0.023022708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:13.799" endtime="20201117 14:48:13.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:13.817" level="INFO">${ACCURACY} = {'diff': [6.917999999999855e-05, 6.845800000000041e-05, 6.908300000000103e-05, 6.87909999999986e-05, 6.849999999999912e-05, 6.877799999999851e-05, 6.870800000000066e-05, 6.84030000000016e-05, 6.899999...</msg>
<status status="PASS" starttime="20201117 14:48:13.804" endtime="20201117 14:48:13.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.821" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201117 14:48:13.820" endtime="20201117 14:48:13.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.824" level="INFO">VALUE: [6.917999999999855e-05, 6.845800000000041e-05, 6.908300000000103e-05, 6.87909999999986e-05, 6.849999999999912e-05, 6.877799999999851e-05, 6.870800000000066e-05, 6.84030000000016e-05, 6.899999999999962e-05, 6.884700000000035e-05, 6.833300000000028e-05, 6.918100000000149e-05, 6.829199999999758e-05, 6.911100000000017e-05, 6.84169999999977e-05, 6.834799999999933e-05, 6.87909999999986e-05, 6.833300000000028e-05, 6.850000000000259e-05, 6.911100000000017e-05, 6.895800000000091e-05, 6.844500000000031e-05, 6.888899999999906e-05, 6.854199999999783e-05, 6.855600000000087e-05, 6.912499999999974e-05, 6.90840000000005e-05, 6.868100000000099e-05, 6.899999999999962e-05, 6.844399999999737e-05, 6.90840000000005e-05, 6.868000000000152e-05, 6.82359999999993e-05, 6.85970000000001e-05, 6.82640000000019e-05, 6.898600000000005e-05, 6.901399999999919e-05, 6.829200000000105e-05, 6.869400000000109e-05, 6.900000000000309e-05, 6.916700000000192e-05, 6.915299999999888e-05, 6.838899999999856e-05, 6.87229999999997e-05, 6.874999999999937e-05, 6.901299999999971e-05, 6.874999999999937e-05, 6.915299999999888e-05, 6.826399999999844e-05, 6.826399999999844e-05]</msg>
<status status="PASS" starttime="20201117 14:48:13.822" endtime="20201117 14:48:13.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.818" endtime="20201117 14:48:13.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.827" endtime="20201117 14:48:13.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:13.830" endtime="20201117 14:48:13.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.829" endtime="20201117 14:48:13.850"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.825" endtime="20201117 14:48:13.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.461" endtime="20201117 14:48:13.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.460" endtime="20201117 14:48:13.851"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.459" endtime="20201117 14:48:13.851"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.854" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.863" endtime="20201117 14:48:13.879"></status>
</kw>
<msg timestamp="20201117 14:48:13.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.861" endtime="20201117 14:48:13.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:13.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:13.881" endtime="20201117 14:48:13.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.884" endtime="20201117 14:48:13.885"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.858" endtime="20201117 14:48:13.886"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.856" endtime="20201117 14:48:13.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:13.892" endtime="20201117 14:48:14.177"></status>
</kw>
<msg timestamp="20201117 14:48:14.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:13.891" endtime="20201117 14:48:14.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.181" endtime="20201117 14:48:14.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.190" endtime="20201117 14:48:14.191"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.888" endtime="20201117 14:48:14.192"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.887" endtime="20201117 14:48:14.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.196" level="INFO">${RESULT} = [{'time': 0.022952611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.976399999999994e-05, 'source_diff': 6.976399999999994e-05}, {'time': 0.023024611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:14.193" endtime="20201117 14:48:14.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:14.210" level="INFO">${ACCURACY} = {'diff': [6.976399999999994e-05, 6.927799999999901e-05, 6.962500000000024e-05, 6.975000000000037e-05, 7.002800000000323e-05, 6.972200000000123e-05, 6.988900000000006e-05, 7.02499999999974e-05, 7.01250...</msg>
<status status="PASS" starttime="20201117 14:48:14.197" endtime="20201117 14:48:14.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.214" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201117 14:48:14.213" endtime="20201117 14:48:14.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.217" level="INFO">VALUE: [6.976399999999994e-05, 6.927799999999901e-05, 6.962500000000024e-05, 6.975000000000037e-05, 7.002800000000323e-05, 6.972200000000123e-05, 6.988900000000006e-05, 7.02499999999974e-05, 7.012500000000074e-05, 6.95970000000011e-05, 6.956999999999797e-05, 6.936099999999695e-05, 6.94169999999987e-05, 7.019400000000259e-05, 7.002799999999976e-05, 6.988900000000006e-05, 6.938899999999956e-05, 6.941700000000217e-05, 6.972200000000123e-05, 6.962500000000024e-05, 6.970800000000166e-05, 7.002799999999976e-05, 6.988900000000006e-05, 7.005600000000237e-05, 6.92909999999991e-05, 6.970800000000166e-05, 6.97909999999996e-05, 6.983299999999831e-05, 6.951400000000316e-05, 6.962500000000024e-05, 7.01109999999977e-05, 6.926399999999944e-05, 6.986100000000092e-05, 6.975000000000037e-05, 6.952799999999926e-05, 6.972200000000123e-05, 6.999999999999715e-05, 6.934800000000033e-05, 6.979199999999908e-05, 6.95970000000011e-05, 7.025000000000087e-05, 6.97909999999996e-05, 7.009699999999813e-05, 6.961100000000067e-05, 6.969400000000209e-05, 6.970800000000166e-05, 6.926399999999944e-05, 6.975000000000037e-05, 6.957000000000144e-05, 6.976399999999994e-05]</msg>
<status status="PASS" starttime="20201117 14:48:14.216" endtime="20201117 14:48:14.217"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.211" endtime="20201117 14:48:14.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.220" endtime="20201117 14:48:14.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:14.223" endtime="20201117 14:48:14.243"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.222" endtime="20201117 14:48:14.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.218" endtime="20201117 14:48:14.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.854" endtime="20201117 14:48:14.244"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.853" endtime="20201117 14:48:14.245"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:13.852" endtime="20201117 14:48:14.245"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.247" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.256" endtime="20201117 14:48:14.273"></status>
</kw>
<msg timestamp="20201117 14:48:14.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.254" endtime="20201117 14:48:14.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.274" endtime="20201117 14:48:14.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.277" endtime="20201117 14:48:14.278"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.251" endtime="20201117 14:48:14.279"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.249" endtime="20201117 14:48:14.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.286" endtime="20201117 14:48:14.573"></status>
</kw>
<msg timestamp="20201117 14:48:14.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.284" endtime="20201117 14:48:14.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:14.577" endtime="20201117 14:48:14.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.586" endtime="20201117 14:48:14.587"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.282" endtime="20201117 14:48:14.588"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.280" endtime="20201117 14:48:14.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.592" level="INFO">${RESULT} = [{'time': 0.023188111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.05970000000021e-05, 'source_diff': 7.05970000000021e-05}, {'time': 0.023263125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:14.589" endtime="20201117 14:48:14.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:14.607" level="INFO">${ACCURACY} = {'diff': [7.05970000000021e-05, 7.059699999999863e-05, 7.040300000000013e-05, 7.056999999999897e-05, 7.108299999999956e-05, 7.048599999999808e-05, 7.038900000000056e-05, 7.059800000000158e-05, 7.09589...</msg>
<status status="PASS" starttime="20201117 14:48:14.593" endtime="20201117 14:48:14.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.611" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201117 14:48:14.610" endtime="20201117 14:48:14.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.614" level="INFO">VALUE: [7.05970000000021e-05, 7.059699999999863e-05, 7.040300000000013e-05, 7.056999999999897e-05, 7.108299999999956e-05, 7.048599999999808e-05, 7.038900000000056e-05, 7.059800000000158e-05, 7.095899999999891e-05, 7.108300000000303e-05, 7.115300000000088e-05, 7.086100000000192e-05, 7.073599999999833e-05, 7.029199999999958e-05, 7.112500000000174e-05, 7.072199999999876e-05, 7.026400000000044e-05, 7.108299999999956e-05, 7.040300000000013e-05, 7.025000000000087e-05, 7.09170000000002e-05, 7.026400000000044e-05, 7.063800000000134e-05, 7.095899999999891e-05, 7.052699999999731e-05, 7.119400000000012e-05, 7.026400000000044e-05, 7.027800000000001e-05, 7.038900000000056e-05, 7.047199999999851e-05, 7.084700000000235e-05, 7.05559999999994e-05, 7.072200000000223e-05, 7.037500000000099e-05, 7.033399999999829e-05, 7.104200000000033e-05, 7.080599999999965e-05, 7.051300000000121e-05, 7.108299999999956e-05, 7.097200000000248e-05, 7.054100000000035e-05, 7.122199999999926e-05, 7.034700000000185e-05, 7.027800000000001e-05, 7.031999999999872e-05, 7.07360000000018e-05, 7.101400000000119e-05, 7.05559999999994e-05, 7.080599999999965e-05, 7.12230000000022e-05]</msg>
<status status="PASS" starttime="20201117 14:48:14.612" endtime="20201117 14:48:14.614"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.608" endtime="20201117 14:48:14.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.617" endtime="20201117 14:48:14.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:14.620" endtime="20201117 14:48:14.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.619" endtime="20201117 14:48:14.640"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.615" endtime="20201117 14:48:14.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.248" endtime="20201117 14:48:14.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.246" endtime="20201117 14:48:14.641"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.245" endtime="20201117 14:48:14.641"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.652" endtime="20201117 14:48:14.670"></status>
</kw>
<msg timestamp="20201117 14:48:14.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.650" endtime="20201117 14:48:14.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:14.671" endtime="20201117 14:48:14.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.674" endtime="20201117 14:48:14.676"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.648" endtime="20201117 14:48:14.677"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.646" endtime="20201117 14:48:14.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.683" endtime="20201117 14:48:14.969"></status>
</kw>
<msg timestamp="20201117 14:48:14.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:14.682" endtime="20201117 14:48:14.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:14.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:14.973" endtime="20201117 14:48:14.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:14.981" endtime="20201117 14:48:14.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.679" endtime="20201117 14:48:14.983"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.678" endtime="20201117 14:48:14.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:14.988" level="INFO">${RESULT} = [{'time': 0.0234845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.188899999999859e-05, 'source_diff': 7.188899999999859e-05}, {'time': 0.023563528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:14.984" endtime="20201117 14:48:14.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:15.001" level="INFO">${ACCURACY} = {'diff': [7.188899999999859e-05, 7.143100000000027e-05, 7.184700000000335e-05, 7.12360000000023e-05, 7.209799999999961e-05, 7.129200000000058e-05, 7.144499999999984e-05, 7.122200000000273e-05, 7.13190...</msg>
<status status="PASS" starttime="20201117 14:48:14.989" endtime="20201117 14:48:15.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.006" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201117 14:48:15.005" endtime="20201117 14:48:15.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.008" level="INFO">VALUE: [7.188899999999859e-05, 7.143100000000027e-05, 7.184700000000335e-05, 7.12360000000023e-05, 7.209799999999961e-05, 7.129200000000058e-05, 7.144499999999984e-05, 7.122200000000273e-05, 7.131900000000024e-05, 7.184699999999988e-05, 7.145799999999994e-05, 7.219400000000112e-05, 7.215299999999841e-05, 7.19170000000012e-05, 7.21109999999997e-05, 7.184699999999988e-05, 7.166700000000095e-05, 7.188900000000206e-05, 7.175000000000237e-05, 7.161199999999868e-05, 7.168100000000052e-05, 7.165299999999791e-05, 7.17910000000016e-05, 7.147199999999951e-05, 7.19300000000013e-05, 7.192999999999783e-05, 7.219500000000059e-05, 7.176399999999847e-05, 7.182000000000022e-05, 7.173599999999933e-05, 7.144499999999984e-05, 7.162499999999877e-05, 7.182000000000022e-05, 7.12360000000023e-05, 7.202699999999881e-05, 7.208300000000056e-05, 7.191599999999826e-05, 7.154100000000135e-05, 7.150000000000212e-05, 7.161100000000267e-05, 7.17499999999989e-05, 7.140300000000113e-05, 7.151399999999822e-05, 7.169500000000009e-05, 7.176399999999847e-05, 7.170899999999966e-05, 7.205599999999743e-05, 7.201399999999872e-05, 7.154200000000083e-05, 7.20560000000009e-05]</msg>
<status status="PASS" starttime="20201117 14:48:15.007" endtime="20201117 14:48:15.008"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.002" endtime="20201117 14:48:15.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.011" endtime="20201117 14:48:15.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:15.015" endtime="20201117 14:48:15.034"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.013" endtime="20201117 14:48:15.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.010" endtime="20201117 14:48:15.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.644" endtime="20201117 14:48:15.035"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.642" endtime="20201117 14:48:15.036"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:14.642" endtime="20201117 14:48:15.036"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.038" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.047" endtime="20201117 14:48:15.063"></status>
</kw>
<msg timestamp="20201117 14:48:15.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.045" endtime="20201117 14:48:15.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.065" endtime="20201117 14:48:15.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.068" endtime="20201117 14:48:15.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.042" endtime="20201117 14:48:15.070"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.040" endtime="20201117 14:48:15.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.077" endtime="20201117 14:48:15.362"></status>
</kw>
<msg timestamp="20201117 14:48:15.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.075" endtime="20201117 14:48:15.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022409972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.366" endtime="20201117 14:48:15.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.374" endtime="20201117 14:48:15.376"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.072" endtime="20201117 14:48:15.377"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.071" endtime="20201117 14:48:15.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:15.381" level="INFO">${RESULT} = [{'time': 0.022483056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.308400000000104e-05, 'source_diff': 7.308400000000104e-05}, {'time': 0.022560069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:15.378" endtime="20201117 14:48:15.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:15.395" level="INFO">${ACCURACY} = {'diff': [7.308400000000104e-05, 7.30829999999981e-05, 7.272200000000076e-05, 7.263899999999934e-05, 7.22499999999994e-05, 7.229199999999811e-05, 7.281900000000174e-05, 7.319400000000212e-05, 7.313899...</msg>
<status status="PASS" starttime="20201117 14:48:15.382" endtime="20201117 14:48:15.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.399" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201117 14:48:15.398" endtime="20201117 14:48:15.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.401" level="INFO">VALUE: [7.308400000000104e-05, 7.30829999999981e-05, 7.272200000000076e-05, 7.263899999999934e-05, 7.22499999999994e-05, 7.229199999999811e-05, 7.281900000000174e-05, 7.319400000000212e-05, 7.313899999999984e-05, 7.24170000000017e-05, 7.31110000000007e-05, 7.259800000000011e-05, 7.27369999999998e-05, 7.230500000000167e-05, 7.254099999999888e-05, 7.269399999999815e-05, 7.286100000000045e-05, 7.315300000000288e-05, 7.28049999999987e-05, 7.291699999999873e-05, 7.237499999999952e-05, 7.243100000000127e-05, 7.233299999999734e-05, 7.218100000000102e-05, 7.287500000000002e-05, 7.226399999999897e-05, 7.302799999999929e-05, 7.319399999999865e-05, 7.243100000000127e-05, 7.28049999999987e-05, 7.255499999999845e-05, 7.31249999999968e-05, 7.227799999999854e-05, 7.306899999999852e-05, 7.270799999999772e-05, 7.223599999999983e-05, 7.30829999999981e-05, 7.252799999999879e-05, 7.229199999999811e-05, 7.251399999999922e-05, 7.298700000000005e-05, 7.272300000000023e-05, 7.283400000000079e-05, 7.276399999999947e-05, 7.267999999999858e-05, 7.259700000000063e-05, 7.248600000000008e-05, 7.287500000000002e-05, 7.277799999999904e-05, 7.236099999999995e-05]</msg>
<status status="PASS" starttime="20201117 14:48:15.400" endtime="20201117 14:48:15.402"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.395" endtime="20201117 14:48:15.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.405" endtime="20201117 14:48:15.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:15.408" endtime="20201117 14:48:15.427"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.406" endtime="20201117 14:48:15.428"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.403" endtime="20201117 14:48:15.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.039" endtime="20201117 14:48:15.429"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.037" endtime="20201117 14:48:15.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.036" endtime="20201117 14:48:15.430"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.432" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.440" endtime="20201117 14:48:15.459"></status>
</kw>
<msg timestamp="20201117 14:48:15.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.439" endtime="20201117 14:48:15.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.461" endtime="20201117 14:48:15.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.463" endtime="20201117 14:48:15.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.436" endtime="20201117 14:48:15.465"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.434" endtime="20201117 14:48:15.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.472" endtime="20201117 14:48:15.758"></status>
</kw>
<msg timestamp="20201117 14:48:15.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023233458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.471" endtime="20201117 14:48:15.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023160097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023233458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.762" endtime="20201117 14:48:15.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.770" endtime="20201117 14:48:15.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.468" endtime="20201117 14:48:15.773"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.467" endtime="20201117 14:48:15.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:15.777" level="INFO">${RESULT} = [{'time': 0.023233458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.336099999999748e-05, 'source_diff': 7.336099999999748e-05}, {'time': 0.023309444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:15.774" endtime="20201117 14:48:15.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:15.791" level="INFO">${ACCURACY} = {'diff': [7.336099999999748e-05, 7.341599999999976e-05, 7.404100000000038e-05, 7.323600000000083e-05, 7.377800000000004e-05, 7.32500000000004e-05, 7.323600000000083e-05, 7.327799999999954e-05, 7.32639...</msg>
<status status="PASS" starttime="20201117 14:48:15.778" endtime="20201117 14:48:15.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.795" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201117 14:48:15.794" endtime="20201117 14:48:15.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.798" level="INFO">VALUE: [7.336099999999748e-05, 7.341599999999976e-05, 7.404100000000038e-05, 7.323600000000083e-05, 7.377800000000004e-05, 7.32500000000004e-05, 7.323600000000083e-05, 7.327799999999954e-05, 7.326399999999997e-05, 7.359700000000163e-05, 7.401399999999725e-05, 7.331999999999825e-05, 7.329199999999911e-05, 7.369500000000209e-05, 7.41110000000017e-05, 7.354099999999988e-05, 7.355499999999945e-05, 7.392999999999983e-05, 7.405499999999995e-05, 7.367999999999958e-05, 7.369500000000209e-05, 7.40829999999991e-05, 7.381999999999875e-05, 7.365299999999991e-05, 7.402799999999682e-05, 7.344499999999837e-05, 7.391699999999973e-05, 7.35560000000024e-05, 7.366600000000001e-05, 7.388900000000059e-05, 7.419399999999965e-05, 7.327799999999954e-05, 7.348600000000108e-05, 7.367999999999958e-05, 7.366700000000295e-05, 7.379199999999961e-05, 7.368099999999905e-05, 7.379100000000013e-05, 7.402799999999682e-05, 7.348599999999761e-05, 7.376400000000047e-05, 7.39170000000032e-05, 7.340199999999672e-05, 7.401400000000072e-05, 7.402700000000081e-05, 7.35690000000025e-05, 7.348599999999761e-05, 7.397199999999854e-05, 7.420800000000269e-05, 7.368099999999905e-05]</msg>
<status status="PASS" starttime="20201117 14:48:15.797" endtime="20201117 14:48:15.799"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.792" endtime="20201117 14:48:15.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.801" endtime="20201117 14:48:15.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:15.805" endtime="20201117 14:48:15.824"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.803" endtime="20201117 14:48:15.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.800" endtime="20201117 14:48:15.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.433" endtime="20201117 14:48:15.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.431" endtime="20201117 14:48:15.826"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.430" endtime="20201117 14:48:15.826"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.836" endtime="20201117 14:48:15.854"></status>
</kw>
<msg timestamp="20201117 14:48:15.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.835" endtime="20201117 14:48:15.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:15.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:15.856" endtime="20201117 14:48:15.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.858" endtime="20201117 14:48:15.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.832" endtime="20201117 14:48:15.860"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.830" endtime="20201117 14:48:15.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:15.867" endtime="20201117 14:48:16.152"></status>
</kw>
<msg timestamp="20201117 14:48:16.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:15.866" endtime="20201117 14:48:16.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.156" endtime="20201117 14:48:16.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.164" endtime="20201117 14:48:16.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.863" endtime="20201117 14:48:16.166"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.861" endtime="20201117 14:48:16.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.171" level="INFO">${RESULT} = [{'time': 0.022835319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.484699999999941e-05, 'source_diff': 7.484699999999941e-05}, {'time': 0.022913347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:16.168" endtime="20201117 14:48:16.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.186" level="INFO">${ACCURACY} = {'diff': [7.484699999999941e-05, 7.456900000000002e-05, 7.458300000000306e-05, 7.486100000000245e-05, 7.463899999999787e-05, 7.429200000000011e-05, 7.470799999999972e-05, 7.484699999999941e-05, 7.4569...</msg>
<status status="PASS" starttime="20201117 14:48:16.172" endtime="20201117 14:48:16.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.190" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.189" endtime="20201117 14:48:16.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.193" level="INFO">VALUE: [7.484699999999941e-05, 7.456900000000002e-05, 7.458300000000306e-05, 7.486100000000245e-05, 7.463899999999787e-05, 7.429200000000011e-05, 7.470799999999972e-05, 7.484699999999941e-05, 7.45699999999995e-05, 7.465300000000091e-05, 7.483399999999932e-05, 7.454199999999689e-05, 7.433399999999882e-05, 7.427700000000106e-05, 7.452699999999784e-05, 7.451400000000122e-05, 7.441600000000076e-05, 7.474999999999843e-05, 7.455599999999993e-05, 7.520800000000022e-05, 7.473599999999886e-05, 7.459699999999916e-05, 7.491699999999726e-05, 7.466700000000048e-05, 7.437500000000152e-05, 7.493000000000083e-05, 7.472300000000223e-05, 7.462500000000177e-05, 7.472199999999929e-05, 7.419399999999965e-05, 7.448599999999861e-05, 7.429199999999664e-05, 7.433300000000281e-05, 7.487500000000202e-05, 7.45829999999996e-05, 7.495899999999944e-05, 7.42500000000014e-05, 7.427800000000054e-05, 7.502800000000129e-05, 7.518100000000055e-05, 7.517999999999761e-05, 7.488900000000159e-05, 7.422199999999879e-05, 7.470799999999972e-05, 7.427800000000054e-05, 7.423599999999836e-05, 7.429199999999664e-05, 7.476400000000147e-05, 7.486099999999898e-05, 7.504200000000086e-05]</msg>
<status status="PASS" starttime="20201117 14:48:16.191" endtime="20201117 14:48:16.193"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.186" endtime="20201117 14:48:16.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.196" endtime="20201117 14:48:16.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.199" endtime="20201117 14:48:16.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.198" endtime="20201117 14:48:16.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.194" endtime="20201117 14:48:16.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.829" endtime="20201117 14:48:16.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.827" endtime="20201117 14:48:16.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:15.826" endtime="20201117 14:48:16.221"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.223" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.231" endtime="20201117 14:48:16.250"></status>
</kw>
<msg timestamp="20201117 14:48:16.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.229" endtime="20201117 14:48:16.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.252" endtime="20201117 14:48:16.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.254" endtime="20201117 14:48:16.256"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.227" endtime="20201117 14:48:16.257"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.225" endtime="20201117 14:48:16.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.264" endtime="20201117 14:48:16.549"></status>
</kw>
<msg timestamp="20201117 14:48:16.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.263" endtime="20201117 14:48:16.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.554" endtime="20201117 14:48:16.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.562" endtime="20201117 14:48:16.563"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.260" endtime="20201117 14:48:16.564"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.258" endtime="20201117 14:48:16.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.568" level="INFO">${RESULT} = [{'time': 0.022672833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.602699999999935e-05, 'source_diff': 7.602699999999935e-05}, {'time': 0.022753861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:16.565" endtime="20201117 14:48:16.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.582" level="INFO">${ACCURACY} = {'diff': [7.602699999999935e-05, 7.59029999999987e-05, 7.538899999999862e-05, 7.606899999999805e-05, 7.529199999999764e-05, 7.622200000000079e-05, 7.60830000000011e-05, 7.6070000000001e-05, 7.55139999...</msg>
<status status="PASS" starttime="20201117 14:48:16.570" endtime="20201117 14:48:16.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.587" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.586" endtime="20201117 14:48:16.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.589" level="INFO">VALUE: [7.602699999999935e-05, 7.59029999999987e-05, 7.538899999999862e-05, 7.606899999999805e-05, 7.529199999999764e-05, 7.622200000000079e-05, 7.60830000000011e-05, 7.6070000000001e-05, 7.551399999999875e-05, 7.558400000000007e-05, 7.552700000000231e-05, 7.55830000000006e-05, 7.572200000000029e-05, 7.58890000000026e-05, 7.569400000000115e-05, 7.602799999999882e-05, 7.527800000000154e-05, 7.530600000000068e-05, 7.569400000000115e-05, 7.558400000000007e-05, 7.552699999999885e-05, 7.529200000000111e-05, 7.536099999999948e-05, 7.5763000000003e-05, 7.565299999999844e-05, 7.601299999999978e-05, 7.597199999999707e-05, 7.534699999999991e-05, 7.536100000000295e-05, 7.54440000000009e-05, 7.526400000000197e-05, 7.579199999999814e-05, 7.583400000000032e-05, 7.619500000000112e-05, 7.601399999999925e-05, 7.53890000000021e-05, 7.551399999999875e-05, 7.565200000000244e-05, 7.568000000000158e-05, 7.536099999999948e-05, 7.527799999999807e-05, 7.620800000000122e-05, 7.616700000000198e-05, 7.541700000000123e-05, 7.530600000000068e-05, 7.556899999999755e-05, 7.601399999999925e-05, 7.520900000000316e-05, 7.573599999999986e-05, 7.548599999999961e-05]</msg>
<status status="PASS" starttime="20201117 14:48:16.588" endtime="20201117 14:48:16.590"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.583" endtime="20201117 14:48:16.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.592" endtime="20201117 14:48:16.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.596" endtime="20201117 14:48:16.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.594" endtime="20201117 14:48:16.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.591" endtime="20201117 14:48:16.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.224" endtime="20201117 14:48:16.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.222" endtime="20201117 14:48:16.617"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.221" endtime="20201117 14:48:16.617"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.619" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.627" endtime="20201117 14:48:16.645"></status>
</kw>
<msg timestamp="20201117 14:48:16.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.626" endtime="20201117 14:48:16.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:16.647" endtime="20201117 14:48:16.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.649" endtime="20201117 14:48:16.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.623" endtime="20201117 14:48:16.651"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.621" endtime="20201117 14:48:16.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.658" endtime="20201117 14:48:16.944"></status>
</kw>
<msg timestamp="20201117 14:48:16.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.657" endtime="20201117 14:48:16.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022009264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:16.948" endtime="20201117 14:48:16.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.960" endtime="20201117 14:48:16.962"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.654" endtime="20201117 14:48:16.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.652" endtime="20201117 14:48:16.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:16.967" level="INFO">${RESULT} = [{'time': 0.022086056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679199999999914e-05, 'source_diff': 7.679199999999914e-05}, {'time': 0.022168069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:16.964" endtime="20201117 14:48:16.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:16.981" level="INFO">${ACCURACY} = {'diff': [7.679199999999914e-05, 7.638800000000015e-05, 7.668000000000258e-05, 7.647200000000104e-05, 7.6764e-05, 7.654199999999889e-05, 7.632000000000125e-05, 7.652800000000279e-05, 7.679200000000261...</msg>
<status status="PASS" starttime="20201117 14:48:16.968" endtime="20201117 14:48:16.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.986" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201117 14:48:16.984" endtime="20201117 14:48:16.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:16.988" level="INFO">VALUE: [7.679199999999914e-05, 7.638800000000015e-05, 7.668000000000258e-05, 7.647200000000104e-05, 7.6764e-05, 7.654199999999889e-05, 7.632000000000125e-05, 7.652800000000279e-05, 7.679200000000261e-05, 7.687500000000055e-05, 7.679200000000261e-05, 7.684700000000141e-05, 7.627799999999907e-05, 7.718099999999908e-05, 7.668000000000258e-05, 7.701300000000078e-05, 7.673600000000086e-05, 7.648600000000061e-05, 7.709700000000166e-05, 7.661100000000073e-05, 7.652799999999932e-05, 7.633400000000082e-05, 7.726300000000103e-05, 7.679199999999914e-05, 7.673600000000086e-05, 7.659800000000064e-05, 7.64449999999979e-05, 7.654199999999889e-05, 7.641699999999876e-05, 7.669399999999868e-05, 7.656899999999855e-05, 7.638899999999962e-05, 7.699999999999721e-05, 7.665300000000291e-05, 7.699999999999721e-05, 7.637500000000005e-05, 7.702799999999982e-05, 7.650000000000018e-05, 7.691699999999926e-05, 7.709799999999767e-05, 7.683399999999785e-05, 7.677799999999957e-05, 7.626300000000003e-05, 7.684699999999794e-05, 7.666599999999954e-05, 7.700000000000068e-05, 7.698600000000111e-05, 7.661100000000073e-05, 7.691699999999926e-05, 7.708299999999862e-05]</msg>
<status status="PASS" starttime="20201117 14:48:16.987" endtime="20201117 14:48:16.988"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.982" endtime="20201117 14:48:16.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:16.991" endtime="20201117 14:48:16.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:16.994" endtime="20201117 14:48:17.014"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.993" endtime="20201117 14:48:17.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.989" endtime="20201117 14:48:17.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.620" endtime="20201117 14:48:17.015"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.618" endtime="20201117 14:48:17.016"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:16.617" endtime="20201117 14:48:17.016"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.018" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.026" endtime="20201117 14:48:17.045"></status>
</kw>
<msg timestamp="20201117 14:48:17.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.025" endtime="20201117 14:48:17.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.046" endtime="20201117 14:48:17.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.049" endtime="20201117 14:48:17.050"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.022" endtime="20201117 14:48:17.051"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.020" endtime="20201117 14:48:17.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.058" endtime="20201117 14:48:17.345"></status>
</kw>
<msg timestamp="20201117 14:48:17.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.056" endtime="20201117 14:48:17.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022041472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.349" endtime="20201117 14:48:17.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.357" endtime="20201117 14:48:17.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.054" endtime="20201117 14:48:17.359"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.052" endtime="20201117 14:48:17.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:17.364" level="INFO">${RESULT} = [{'time': 0.022041472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.784699999999894e-05, 'source_diff': 7.784699999999894e-05}, {'time': 0.022128458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:17.360" endtime="20201117 14:48:17.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:17.377" level="INFO">${ACCURACY} = {'diff': [7.784699999999894e-05, 7.758299999999912e-05, 7.788899999999765e-05, 7.820799999999975e-05, 7.815299999999747e-05, 7.74449999999989e-05, 7.811100000000223e-05, 7.766700000000001e-05, 7.79449...</msg>
<status status="PASS" starttime="20201117 14:48:17.365" endtime="20201117 14:48:17.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.382" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201117 14:48:17.381" endtime="20201117 14:48:17.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.384" level="INFO">VALUE: [7.784699999999894e-05, 7.758299999999912e-05, 7.788899999999765e-05, 7.820799999999975e-05, 7.815299999999747e-05, 7.74449999999989e-05, 7.811100000000223e-05, 7.766700000000001e-05, 7.79449999999994e-05, 7.741600000000029e-05, 7.741699999999976e-05, 7.768099999999958e-05, 7.750000000000118e-05, 7.773600000000186e-05, 7.820799999999975e-05, 7.752800000000032e-05, 7.744399999999943e-05, 7.741699999999976e-05, 7.736099999999801e-05, 7.791700000000026e-05, 7.74310000000028e-05, 7.748599999999814e-05, 7.804200000000039e-05, 7.76250000000013e-05, 7.725000000000093e-05, 7.766600000000054e-05, 7.751400000000075e-05, 7.756899999999955e-05, 7.798600000000211e-05, 7.756899999999955e-05, 7.773599999999839e-05, 7.761099999999826e-05, 7.79579999999995e-05, 7.7457999999999e-05, 7.76389999999974e-05, 7.802800000000082e-05, 7.798600000000211e-05, 7.726299999999756e-05, 7.742999999999986e-05, 7.802700000000135e-05, 7.809700000000266e-05, 7.738900000000062e-05, 7.730499999999974e-05, 7.801399999999778e-05, 7.811100000000223e-05, 7.816700000000051e-05, 7.733299999999887e-05, 7.773599999999839e-05, 7.722300000000126e-05, 7.802800000000082e-05]</msg>
<status status="PASS" starttime="20201117 14:48:17.383" endtime="20201117 14:48:17.385"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.378" endtime="20201117 14:48:17.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.387" endtime="20201117 14:48:17.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:17.391" endtime="20201117 14:48:17.410"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.389" endtime="20201117 14:48:17.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.386" endtime="20201117 14:48:17.411"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.019" endtime="20201117 14:48:17.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.017" endtime="20201117 14:48:17.412"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.016" endtime="20201117 14:48:17.412"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.422" endtime="20201117 14:48:17.442"></status>
</kw>
<msg timestamp="20201117 14:48:17.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.421" endtime="20201117 14:48:17.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.443" endtime="20201117 14:48:17.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.446" endtime="20201117 14:48:17.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.418" endtime="20201117 14:48:17.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.416" endtime="20201117 14:48:17.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.455" endtime="20201117 14:48:17.740"></status>
</kw>
<msg timestamp="20201117 14:48:17.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.454" endtime="20201117 14:48:17.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.745" endtime="20201117 14:48:17.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.753" endtime="20201117 14:48:17.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.451" endtime="20201117 14:48:17.755"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.450" endtime="20201117 14:48:17.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:17.759" level="INFO">${RESULT} = [{'time': 0.022878639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.843100000000033e-05, 'source_diff': 7.843100000000033e-05}, {'time': 0.022964653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:17.756" endtime="20201117 14:48:17.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:17.774" level="INFO">${ACCURACY} = {'diff': [7.843100000000033e-05, 7.870900000000319e-05, 7.834799999999892e-05, 7.876299999999906e-05, 7.919400000000118e-05, 7.852699999999838e-05, 7.905499999999802e-05, 7.886099999999951e-05, 7.8346...</msg>
<status status="PASS" starttime="20201117 14:48:17.760" endtime="20201117 14:48:17.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.779" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201117 14:48:17.778" endtime="20201117 14:48:17.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.781" level="INFO">VALUE: [7.843100000000033e-05, 7.870900000000319e-05, 7.834799999999892e-05, 7.876299999999906e-05, 7.919400000000118e-05, 7.852699999999838e-05, 7.905499999999802e-05, 7.886099999999951e-05, 7.834699999999944e-05, 7.873599999999939e-05, 7.844400000000043e-05, 7.862499999999883e-05, 7.854199999999742e-05, 7.916700000000151e-05, 7.824999999999846e-05, 7.859799999999917e-05, 7.913799999999943e-05, 7.824999999999846e-05, 7.876299999999906e-05, 7.830500000000074e-05, 7.898599999999964e-05, 7.908300000000063e-05, 7.830500000000074e-05, 7.849999999999871e-05, 7.861100000000273e-05, 7.89169999999978e-05, 7.831999999999978e-05, 7.85969999999997e-05, 7.861199999999874e-05, 7.847299999999904e-05, 7.882000000000028e-05, 7.887500000000255e-05, 7.919400000000118e-05, 7.88190000000008e-05, 7.906900000000106e-05, 7.830500000000074e-05, 7.879200000000114e-05, 7.89580000000005e-05, 7.908300000000063e-05, 7.902800000000182e-05, 7.897200000000007e-05, 7.829199999999717e-05, 7.852700000000185e-05, 7.830500000000074e-05, 7.866600000000154e-05, 7.840200000000172e-05, 7.854099999999795e-05, 7.862499999999883e-05, 7.855499999999752e-05, 7.84030000000012e-05]</msg>
<status status="PASS" starttime="20201117 14:48:17.780" endtime="20201117 14:48:17.782"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.775" endtime="20201117 14:48:17.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.784" endtime="20201117 14:48:17.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:17.788" endtime="20201117 14:48:17.807"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.786" endtime="20201117 14:48:17.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.783" endtime="20201117 14:48:17.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.415" endtime="20201117 14:48:17.808"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.413" endtime="20201117 14:48:17.809"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.412" endtime="20201117 14:48:17.809"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.811" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.820" endtime="20201117 14:48:17.839"></status>
</kw>
<msg timestamp="20201117 14:48:17.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.818" endtime="20201117 14:48:17.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:17.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:17.840" endtime="20201117 14:48:17.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.843" endtime="20201117 14:48:17.844"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.815" endtime="20201117 14:48:17.845"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.813" endtime="20201117 14:48:17.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:17.852" endtime="20201117 14:48:18.137"></status>
</kw>
<msg timestamp="20201117 14:48:18.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:17.850" endtime="20201117 14:48:18.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.142" endtime="20201117 14:48:18.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.150" endtime="20201117 14:48:18.151"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.848" endtime="20201117 14:48:18.152"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.846" endtime="20201117 14:48:18.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:18.157" level="INFO">${RESULT} = [{'time': 0.022526083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.944399999999796e-05, 'source_diff': 7.944399999999796e-05}, {'time': 0.022614083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:18.153" endtime="20201117 14:48:18.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:18.170" level="INFO">${ACCURACY} = {'diff': [7.944399999999796e-05, 8.0152e-05, 7.958300000000113e-05, 7.965299999999897e-05, 7.969400000000168e-05, 8.00970000000012e-05, 7.948600000000014e-05, 7.923599999999989e-05, 7.984699999999748e...</msg>
<status status="PASS" starttime="20201117 14:48:18.158" endtime="20201117 14:48:18.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.175" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201117 14:48:18.174" endtime="20201117 14:48:18.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.177" level="INFO">VALUE: [7.944399999999796e-05, 8.0152e-05, 7.958300000000113e-05, 7.965299999999897e-05, 7.969400000000168e-05, 8.00970000000012e-05, 7.948600000000014e-05, 7.923599999999989e-05, 7.984699999999748e-05, 7.930600000000121e-05, 7.958300000000113e-05, 7.968099999999811e-05, 7.937500000000305e-05, 7.98329999999979e-05, 7.940299999999872e-05, 7.97909999999992e-05, 8.008299999999816e-05, 7.93190000000013e-05, 7.923599999999989e-05, 7.954199999999842e-05, 7.932000000000078e-05, 7.973600000000039e-05, 7.96519999999995e-05, 7.947300000000004e-05, 7.92779999999986e-05, 7.981899999999834e-05, 7.998600000000064e-05, 8.001399999999978e-05, 8.023599999999742e-05, 8.020799999999828e-05, 7.944399999999796e-05, 8.008299999999816e-05, 7.957000000000103e-05, 7.945900000000047e-05, 7.972299999999682e-05, 7.9458999999997e-05, 7.923599999999989e-05, 7.966700000000201e-05, 7.976300000000006e-05, 7.981899999999834e-05, 7.983300000000138e-05, 7.926399999999903e-05, 7.96389999999994e-05, 8.012500000000033e-05, 7.972200000000082e-05, 8.015299999999947e-05, 7.966700000000201e-05, 7.988899999999965e-05, 7.954199999999842e-05, 7.965300000000244e-05]</msg>
<status status="PASS" starttime="20201117 14:48:18.176" endtime="20201117 14:48:18.177"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.171" endtime="20201117 14:48:18.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.180" endtime="20201117 14:48:18.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:18.183" endtime="20201117 14:48:18.203"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.182" endtime="20201117 14:48:18.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.178" endtime="20201117 14:48:18.204"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.812" endtime="20201117 14:48:18.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.810" endtime="20201117 14:48:18.205"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:17.809" endtime="20201117 14:48:18.205"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.207" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.215" endtime="20201117 14:48:18.234"></status>
</kw>
<msg timestamp="20201117 14:48:18.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.214" endtime="20201117 14:48:18.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.236" endtime="20201117 14:48:18.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.238" endtime="20201117 14:48:18.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.211" endtime="20201117 14:48:18.240"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.209" endtime="20201117 14:48:18.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.247" endtime="20201117 14:48:18.533"></status>
</kw>
<msg timestamp="20201117 14:48:18.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023258667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.246" endtime="20201117 14:48:18.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023258667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.537" endtime="20201117 14:48:18.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.545" endtime="20201117 14:48:18.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.243" endtime="20201117 14:48:18.547"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.241" endtime="20201117 14:48:18.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:18.552" level="INFO">${RESULT} = [{'time': 0.023339583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.091600000000032e-05, 'source_diff': 8.091600000000032e-05}, {'time': 0.023429597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:18.548" endtime="20201117 14:48:18.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:18.565" level="INFO">${ACCURACY} = {'diff': [8.091600000000032e-05, 8.098600000000164e-05, 8.075000000000096e-05, 8.062500000000083e-05, 8.069399999999921e-05, 8.070799999999878e-05, 8.087500000000108e-05, 8.079199999999967e-05, 8.1084...</msg>
<status status="PASS" starttime="20201117 14:48:18.553" endtime="20201117 14:48:18.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.570" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201117 14:48:18.569" endtime="20201117 14:48:18.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.572" level="INFO">VALUE: [8.091600000000032e-05, 8.098600000000164e-05, 8.075000000000096e-05, 8.062500000000083e-05, 8.069399999999921e-05, 8.070799999999878e-05, 8.087500000000108e-05, 8.079199999999967e-05, 8.10840000000021e-05, 8.1152000000001e-05, 8.083399999999838e-05, 8.100000000000121e-05, 8.026400000000003e-05, 8.05970000000017e-05, 8.102800000000035e-05, 8.023599999999742e-05, 8.0458000000002e-05, 8.043099999999886e-05, 8.047200000000157e-05, 8.041599999999982e-05, 8.106999999999906e-05, 8.115300000000047e-05, 8.081899999999934e-05, 8.040299999999972e-05, 8.095799999999903e-05, 8.077700000000063e-05, 8.106899999999959e-05, 8.088900000000065e-05, 8.02779999999996e-05, 8.048599999999767e-05, 8.070799999999878e-05, 8.112499999999787e-05, 8.102800000000035e-05, 8.112500000000133e-05, 8.066700000000301e-05, 8.043099999999886e-05, 8.10130000000013e-05, 8.037500000000058e-05, 8.091600000000032e-05, 8.105500000000002e-05, 8.063899999999694e-05, 8.098599999999817e-05, 8.036100000000101e-05, 8.095900000000197e-05, 8.095900000000197e-05, 8.100000000000121e-05, 8.047300000000104e-05, 8.025000000000046e-05, 8.098600000000164e-05, 8.105500000000002e-05]</msg>
<status status="PASS" starttime="20201117 14:48:18.571" endtime="20201117 14:48:18.573"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.566" endtime="20201117 14:48:18.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.576" endtime="20201117 14:48:18.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:18.579" endtime="20201117 14:48:18.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.577" endtime="20201117 14:48:18.599"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.574" endtime="20201117 14:48:18.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.208" endtime="20201117 14:48:18.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.206" endtime="20201117 14:48:18.600"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.205" endtime="20201117 14:48:18.600"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.611" endtime="20201117 14:48:18.630"></status>
</kw>
<msg timestamp="20201117 14:48:18.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.609" endtime="20201117 14:48:18.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:18.631" endtime="20201117 14:48:18.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.634" endtime="20201117 14:48:18.635"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.607" endtime="20201117 14:48:18.636"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.605" endtime="20201117 14:48:18.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.643" endtime="20201117 14:48:18.930"></status>
</kw>
<msg timestamp="20201117 14:48:18.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.641" endtime="20201117 14:48:18.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:18.934" endtime="20201117 14:48:18.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.942" endtime="20201117 14:48:18.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.639" endtime="20201117 14:48:18.944"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.637" endtime="20201117 14:48:18.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:18.949" level="INFO">${RESULT} = [{'time': 0.021951028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.155599999999999e-05, 'source_diff': 8.155599999999999e-05}, {'time': 0.022042014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:18.945" endtime="20201117 14:48:18.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:18.962" level="INFO">${ACCURACY} = {'diff': [8.155599999999999e-05, 8.130599999999974e-05, 8.130599999999974e-05, 8.201299999999884e-05, 8.172299999999882e-05, 8.130599999999974e-05, 8.204099999999798e-05, 8.212500000000234e-05, 8.1263...</msg>
<status status="PASS" starttime="20201117 14:48:18.950" endtime="20201117 14:48:18.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.967" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201117 14:48:18.966" endtime="20201117 14:48:18.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:18.970" level="INFO">VALUE: [8.155599999999999e-05, 8.130599999999974e-05, 8.130599999999974e-05, 8.201299999999884e-05, 8.172299999999882e-05, 8.130599999999974e-05, 8.204099999999798e-05, 8.212500000000234e-05, 8.126399999999756e-05, 8.220800000000028e-05, 8.173599999999892e-05, 8.174999999999849e-05, 8.201400000000178e-05, 8.13329999999994e-05, 8.18329999999999e-05, 8.17780000000011e-05, 8.188900000000165e-05, 8.137499999999812e-05, 8.127700000000113e-05, 8.144399999999996e-05, 8.169400000000021e-05, 8.191600000000132e-05, 8.168000000000064e-05, 8.144499999999943e-05, 8.14170000000003e-05, 8.15970000000027e-05, 8.162499999999837e-05, 8.165300000000097e-05, 8.125000000000146e-05, 8.202800000000135e-05, 8.193100000000036e-05, 8.127700000000113e-05, 8.144399999999996e-05, 8.143000000000039e-05, 8.198599999999917e-05, 8.155500000000052e-05, 8.166600000000107e-05, 8.187499999999862e-05, 8.212499999999887e-05, 8.219499999999672e-05, 8.182000000000328e-05, 8.147300000000204e-05, 8.181900000000034e-05, 8.16529999999975e-05, 8.17780000000011e-05, 8.181900000000034e-05, 8.201400000000178e-05, 8.212499999999887e-05, 8.122199999999885e-05, 8.130599999999974e-05]</msg>
<status status="PASS" starttime="20201117 14:48:18.968" endtime="20201117 14:48:18.970"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.963" endtime="20201117 14:48:18.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:18.973" endtime="20201117 14:48:18.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:18.976" endtime="20201117 14:48:18.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.975" endtime="20201117 14:48:18.996"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.971" endtime="20201117 14:48:18.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.603" endtime="20201117 14:48:18.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.601" endtime="20201117 14:48:18.997"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.601" endtime="20201117 14:48:18.997"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.000" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.008" endtime="20201117 14:48:19.027"></status>
</kw>
<msg timestamp="20201117 14:48:19.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.006" endtime="20201117 14:48:19.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.029" endtime="20201117 14:48:19.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.031" endtime="20201117 14:48:19.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.004" endtime="20201117 14:48:19.033"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.002" endtime="20201117 14:48:19.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.040" endtime="20201117 14:48:19.325"></status>
</kw>
<msg timestamp="20201117 14:48:19.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022948819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.039" endtime="20201117 14:48:19.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022865875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022948819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.329" endtime="20201117 14:48:19.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.337" endtime="20201117 14:48:19.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.036" endtime="20201117 14:48:19.339"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.034" endtime="20201117 14:48:19.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:19.344" level="INFO">${RESULT} = [{'time': 0.022948819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.294399999999799e-05, 'source_diff': 8.294399999999799e-05}, {'time': 0.023036833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:19.341" endtime="20201117 14:48:19.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:19.359" level="INFO">${ACCURACY} = {'diff': [8.294399999999799e-05, 8.290199999999928e-05, 8.280500000000177e-05, 8.320800000000128e-05, 8.279200000000167e-05, 8.229200000000117e-05, 8.28330000000009e-05, 8.320900000000075e-05, 8.27229...</msg>
<status status="PASS" starttime="20201117 14:48:19.345" endtime="20201117 14:48:19.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.364" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201117 14:48:19.363" endtime="20201117 14:48:19.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.366" level="INFO">VALUE: [8.294399999999799e-05, 8.290199999999928e-05, 8.280500000000177e-05, 8.320800000000128e-05, 8.279200000000167e-05, 8.229200000000117e-05, 8.28330000000009e-05, 8.320900000000075e-05, 8.272299999999982e-05, 8.272200000000035e-05, 8.248599999999967e-05, 8.301399999999931e-05, 8.288799999999971e-05, 8.236099999999955e-05, 8.26390000000024e-05, 8.223600000000289e-05, 8.230500000000127e-05, 8.24309999999974e-05, 8.240199999999878e-05, 8.305600000000149e-05, 8.262499999999937e-05, 8.237499999999912e-05, 8.231900000000084e-05, 8.262499999999937e-05, 8.251399999999881e-05, 8.259700000000023e-05, 8.22910000000017e-05, 8.277799999999863e-05, 8.312499999999987e-05, 8.28049999999983e-05, 8.248599999999967e-05, 8.308300000000116e-05, 8.26390000000024e-05, 8.316699999999858e-05, 8.224999999999899e-05, 8.238900000000215e-05, 8.262499999999937e-05, 8.27910000000022e-05, 8.237499999999912e-05, 8.313899999999944e-05, 8.23330000000004e-05, 8.244400000000096e-05, 8.238900000000215e-05, 8.252799999999838e-05, 8.279200000000167e-05, 8.274999999999949e-05, 8.26390000000024e-05, 8.30980000000002e-05, 8.28330000000009e-05, 8.237499999999912e-05]</msg>
<status status="PASS" starttime="20201117 14:48:19.365" endtime="20201117 14:48:19.367"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.360" endtime="20201117 14:48:19.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.369" endtime="20201117 14:48:19.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:19.373" endtime="20201117 14:48:19.392"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.371" endtime="20201117 14:48:19.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.368" endtime="20201117 14:48:19.393"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.000" endtime="20201117 14:48:19.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.998" endtime="20201117 14:48:19.394"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:18.998" endtime="20201117 14:48:19.394"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.396" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.404" endtime="20201117 14:48:19.424"></status>
</kw>
<msg timestamp="20201117 14:48:19.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.403" endtime="20201117 14:48:19.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.426" endtime="20201117 14:48:19.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.428" endtime="20201117 14:48:19.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.400" endtime="20201117 14:48:19.430"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.398" endtime="20201117 14:48:19.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.437" endtime="20201117 14:48:19.722"></status>
</kw>
<msg timestamp="20201117 14:48:19.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.436" endtime="20201117 14:48:19.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022714444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.727" endtime="20201117 14:48:19.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.735" endtime="20201117 14:48:19.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.433" endtime="20201117 14:48:19.737"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.431" endtime="20201117 14:48:19.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:19.742" level="INFO">${RESULT} = [{'time': 0.022797903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.3459000000001e-05, 'source_diff': 8.3459000000001e-05}, {'time': 0.022890819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201117 14:48:19.739" endtime="20201117 14:48:19.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:19.756" level="INFO">${ACCURACY} = {'diff': [8.3459000000001e-05, 8.327699999999966e-05, 8.331900000000184e-05, 8.376400000000006e-05, 8.327799999999913e-05, 8.401400000000031e-05, 8.401400000000031e-05, 8.393100000000236e-05, 8.334700...</msg>
<status status="PASS" starttime="20201117 14:48:19.743" endtime="20201117 14:48:19.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.760" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201117 14:48:19.759" endtime="20201117 14:48:19.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.762" level="INFO">VALUE: [8.3459000000001e-05, 8.327699999999966e-05, 8.331900000000184e-05, 8.376400000000006e-05, 8.327799999999913e-05, 8.401400000000031e-05, 8.401400000000031e-05, 8.393100000000236e-05, 8.334700000000098e-05, 8.329200000000217e-05, 8.38049999999993e-05, 8.362500000000037e-05, 8.363899999999994e-05, 8.415200000000053e-05, 8.34720000000011e-05, 8.408299999999869e-05, 8.338899999999969e-05, 8.395800000000203e-05, 8.372199999999788e-05, 8.408300000000216e-05, 8.330599999999827e-05, 8.37370000000004e-05, 8.337500000000012e-05, 8.343000000000239e-05, 8.379099999999973e-05, 8.405499999999955e-05, 8.324999999999999e-05, 8.352799999999938e-05, 8.327799999999913e-05, 8.391699999999933e-05, 8.380599999999877e-05, 8.397199999999813e-05, 8.393100000000236e-05, 8.329200000000217e-05, 8.41110000000013e-05, 8.366699999999908e-05, 8.375000000000049e-05, 8.358299999999819e-05, 8.348600000000067e-05, 8.354099999999948e-05, 8.398600000000117e-05, 8.355599999999852e-05, 8.391699999999933e-05, 8.375000000000049e-05, 8.420900000000175e-05, 8.418100000000261e-05, 8.377799999999963e-05, 8.411099999999783e-05, 8.359700000000123e-05, 8.327699999999966e-05]</msg>
<status status="PASS" starttime="20201117 14:48:19.761" endtime="20201117 14:48:19.763"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.756" endtime="20201117 14:48:19.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.765" endtime="20201117 14:48:19.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:19.769" endtime="20201117 14:48:19.788"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.767" endtime="20201117 14:48:19.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.764" endtime="20201117 14:48:19.789"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.397" endtime="20201117 14:48:19.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.395" endtime="20201117 14:48:19.790"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.394" endtime="20201117 14:48:19.790"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.792" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.801" endtime="20201117 14:48:19.819"></status>
</kw>
<msg timestamp="20201117 14:48:19.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.799" endtime="20201117 14:48:19.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:19.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:19.821" endtime="20201117 14:48:19.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.823" endtime="20201117 14:48:19.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.797" endtime="20201117 14:48:19.825"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.794" endtime="20201117 14:48:19.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:19.833" endtime="20201117 14:48:20.117"></status>
</kw>
<msg timestamp="20201117 14:48:20.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022933444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023018639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:19.831" endtime="20201117 14:48:20.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022933444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023018639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.121" endtime="20201117 14:48:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.129" endtime="20201117 14:48:20.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.828" endtime="20201117 14:48:20.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.827" endtime="20201117 14:48:20.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:20.136" level="INFO">${RESULT} = [{'time': 0.023018639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.519499999999972e-05, 'source_diff': 8.519499999999972e-05}, {'time': 0.023109694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:20.133" endtime="20201117 14:48:20.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.150" level="INFO">${ACCURACY} = {'diff': [8.519499999999972e-05, 8.493000000000042e-05, 8.426400000000056e-05, 8.47920000000002e-05, 8.49729999999986e-05, 8.448700000000114e-05, 8.474999999999802e-05, 8.518000000000067e-05, 8.437500...</msg>
<status status="PASS" starttime="20201117 14:48:20.137" endtime="20201117 14:48:20.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.154" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.153" endtime="20201117 14:48:20.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.157" level="INFO">VALUE: [8.519499999999972e-05, 8.493000000000042e-05, 8.426400000000056e-05, 8.47920000000002e-05, 8.49729999999986e-05, 8.448700000000114e-05, 8.474999999999802e-05, 8.518000000000067e-05, 8.437500000000112e-05, 8.495799999999956e-05, 8.43049999999998e-05, 8.431899999999937e-05, 8.487500000000162e-05, 8.450000000000124e-05, 8.476400000000106e-05, 8.454199999999995e-05, 8.475000000000149e-05, 8.506900000000012e-05, 8.43049999999998e-05, 8.458299999999919e-05, 8.449999999999777e-05, 8.445800000000253e-05, 8.486100000000205e-05, 8.447199999999863e-05, 8.437500000000112e-05, 8.481999999999934e-05, 8.425000000000099e-05, 8.501400000000131e-05, 8.436100000000155e-05, 8.479100000000073e-05, 8.490300000000076e-05, 8.436099999999808e-05, 8.422199999999838e-05, 8.468000000000017e-05, 8.433299999999894e-05, 8.458399999999866e-05, 8.481999999999934e-05, 8.486100000000205e-05, 8.495799999999956e-05, 8.495899999999904e-05, 8.437499999999765e-05, 8.449999999999777e-05, 8.442999999999992e-05, 8.494399999999999e-05, 8.444399999999949e-05, 8.466599999999713e-05, 8.431899999999937e-05, 8.501400000000131e-05, 8.455599999999952e-05, 8.475000000000149e-05]</msg>
<status status="PASS" starttime="20201117 14:48:20.156" endtime="20201117 14:48:20.157"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.151" endtime="20201117 14:48:20.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.160" endtime="20201117 14:48:20.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.163" endtime="20201117 14:48:20.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.162" endtime="20201117 14:48:20.183"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.158" endtime="20201117 14:48:20.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.793" endtime="20201117 14:48:20.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.791" endtime="20201117 14:48:20.184"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:19.790" endtime="20201117 14:48:20.185"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.195" endtime="20201117 14:48:20.213"></status>
</kw>
<msg timestamp="20201117 14:48:20.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.193" endtime="20201117 14:48:20.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.214" endtime="20201117 14:48:20.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.217" endtime="20201117 14:48:20.219"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.191" endtime="20201117 14:48:20.220"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.189" endtime="20201117 14:48:20.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.226" endtime="20201117 14:48:20.512"></status>
</kw>
<msg timestamp="20201117 14:48:20.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.225" endtime="20201117 14:48:20.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.516" endtime="20201117 14:48:20.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.524" endtime="20201117 14:48:20.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.222" endtime="20201117 14:48:20.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.221" endtime="20201117 14:48:20.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:20.531" level="INFO">${RESULT} = [{'time': 0.021979292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609799999999973e-05, 'source_diff': 8.609799999999973e-05}, {'time': 0.022071292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:20.527" endtime="20201117 14:48:20.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.544" level="INFO">${ACCURACY} = {'diff': [8.609799999999973e-05, 8.594500000000047e-05, 8.568100000000065e-05, 8.524999999999852e-05, 8.574999999999902e-05, 8.522199999999938e-05, 8.56110000000028e-05, 8.527800000000113e-05, 8.61669...</msg>
<status status="PASS" starttime="20201117 14:48:20.532" endtime="20201117 14:48:20.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.549" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.548" endtime="20201117 14:48:20.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.551" level="INFO">VALUE: [8.609799999999973e-05, 8.594500000000047e-05, 8.568100000000065e-05, 8.524999999999852e-05, 8.574999999999902e-05, 8.522199999999938e-05, 8.56110000000028e-05, 8.527800000000113e-05, 8.61669999999981e-05, 8.600000000000274e-05, 8.601400000000231e-05, 8.607000000000059e-05, 8.537499999999865e-05, 8.570899999999979e-05, 8.526400000000156e-05, 8.579099999999826e-05, 8.559699999999976e-05, 8.569400000000074e-05, 8.538900000000169e-05, 8.613899999999897e-05, 8.522199999999938e-05, 8.608400000000016e-05, 8.537500000000212e-05, 8.549999999999877e-05, 8.569500000000022e-05, 8.52920000000007e-05, 8.572299999999936e-05, 8.541600000000135e-05, 8.533299999999994e-05, 8.56249999999989e-05, 8.545800000000006e-05, 8.565299999999804e-05, 8.590299999999829e-05, 8.544399999999702e-05, 8.590299999999829e-05, 8.580600000000077e-05, 8.599999999999927e-05, 8.536099999999908e-05, 8.518100000000015e-05, 8.604100000000198e-05, 8.601399999999884e-05, 8.576400000000206e-05, 8.555500000000105e-05, 8.58050000000013e-05, 8.533299999999994e-05, 8.5847e-05, 8.547199999999963e-05, 8.573599999999945e-05, 8.552800000000138e-05, 8.59859999999997e-05]</msg>
<status status="PASS" starttime="20201117 14:48:20.550" endtime="20201117 14:48:20.552"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.545" endtime="20201117 14:48:20.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.554" endtime="20201117 14:48:20.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.558" endtime="20201117 14:48:20.577"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.556" endtime="20201117 14:48:20.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.553" endtime="20201117 14:48:20.578"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.187" endtime="20201117 14:48:20.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.186" endtime="20201117 14:48:20.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.185" endtime="20201117 14:48:20.579"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.582" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.590" endtime="20201117 14:48:20.609"></status>
</kw>
<msg timestamp="20201117 14:48:20.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.589" endtime="20201117 14:48:20.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.611" endtime="20201117 14:48:20.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.614" endtime="20201117 14:48:20.615"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.586" endtime="20201117 14:48:20.616"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.584" endtime="20201117 14:48:20.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.622" endtime="20201117 14:48:20.908"></status>
</kw>
<msg timestamp="20201117 14:48:20.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.621" endtime="20201117 14:48:20.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023311625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:20.912" endtime="20201117 14:48:20.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.920" endtime="20201117 14:48:20.922"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.618" endtime="20201117 14:48:20.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.617" endtime="20201117 14:48:20.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:20.927" level="INFO">${RESULT} = [{'time': 0.023397944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.631900000000137e-05, 'source_diff': 8.631900000000137e-05}, {'time': 0.023487944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:20.924" endtime="20201117 14:48:20.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:20.942" level="INFO">${ACCURACY} = {'diff': [8.631900000000137e-05, 8.670800000000131e-05, 8.642999999999845e-05, 8.637499999999965e-05, 8.624999999999952e-05, 8.644399999999802e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.63890...</msg>
<status status="PASS" starttime="20201117 14:48:20.928" endtime="20201117 14:48:20.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.946" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201117 14:48:20.945" endtime="20201117 14:48:20.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.949" level="INFO">VALUE: [8.631900000000137e-05, 8.670800000000131e-05, 8.642999999999845e-05, 8.637499999999965e-05, 8.624999999999952e-05, 8.644399999999802e-05, 8.63470000000005e-05, 8.624999999999952e-05, 8.638900000000269e-05, 8.659700000000076e-05, 8.718100000000215e-05, 8.675000000000002e-05, 8.690200000000328e-05, 8.633300000000094e-05, 8.661099999999686e-05, 8.675000000000002e-05, 8.624999999999952e-05, 8.644400000000149e-05, 8.629199999999823e-05, 8.711099999999736e-05, 8.677799999999916e-05, 8.641700000000183e-05, 8.668100000000165e-05, 8.651399999999934e-05, 8.64860000000002e-05, 8.633300000000094e-05, 8.711100000000083e-05, 8.644399999999802e-05, 8.704199999999898e-05, 8.679199999999873e-05, 8.700000000000027e-05, 8.654200000000195e-05, 8.665299999999904e-05, 8.668100000000165e-05, 8.676399999999959e-05, 8.694399999999852e-05, 8.71799999999992e-05, 8.650000000000324e-05, 8.672199999999741e-05, 8.666599999999913e-05, 8.658300000000119e-05, 8.673600000000045e-05, 8.633300000000094e-05, 8.670799999999784e-05, 8.659700000000076e-05, 8.697200000000113e-05, 8.64860000000002e-05, 8.67920000000022e-05, 8.681900000000187e-05, 8.644399999999802e-05]</msg>
<status status="PASS" starttime="20201117 14:48:20.947" endtime="20201117 14:48:20.949"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.943" endtime="20201117 14:48:20.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.952" endtime="20201117 14:48:20.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:20.956" endtime="20201117 14:48:20.975"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.954" endtime="20201117 14:48:20.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.950" endtime="20201117 14:48:20.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.582" endtime="20201117 14:48:20.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.580" endtime="20201117 14:48:20.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.579" endtime="20201117 14:48:20.977"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:20.980" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:20.988" endtime="20201117 14:48:21.007"></status>
</kw>
<msg timestamp="20201117 14:48:21.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:20.986" endtime="20201117 14:48:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.008" endtime="20201117 14:48:21.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.011" endtime="20201117 14:48:21.012"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.984" endtime="20201117 14:48:21.013"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.982" endtime="20201117 14:48:21.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.020" endtime="20201117 14:48:21.305"></status>
</kw>
<msg timestamp="20201117 14:48:21.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.018" endtime="20201117 14:48:21.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.309" endtime="20201117 14:48:21.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.317" endtime="20201117 14:48:21.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.015" endtime="20201117 14:48:21.319"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.014" endtime="20201117 14:48:21.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:21.324" level="INFO">${RESULT} = [{'time': 0.022391764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.732000000000184e-05, 'source_diff': 8.732000000000184e-05}, {'time': 0.02248375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201117 14:48:21.320" endtime="20201117 14:48:21.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:21.337" level="INFO">${ACCURACY} = {'diff': [8.732000000000184e-05, 8.783299999999897e-05, 8.74449999999985e-05, 8.741699999999936e-05, 8.744500000000197e-05, 8.78059999999993e-05, 8.76120000000008e-05, 8.76519999999971e-05, 8.80139999...</msg>
<status status="PASS" starttime="20201117 14:48:21.325" endtime="20201117 14:48:21.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.342" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201117 14:48:21.341" endtime="20201117 14:48:21.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.345" level="INFO">VALUE: [8.732000000000184e-05, 8.783299999999897e-05, 8.74449999999985e-05, 8.741699999999936e-05, 8.744500000000197e-05, 8.78059999999993e-05, 8.76120000000008e-05, 8.76519999999971e-05, 8.801399999999737e-05, 8.809699999999879e-05, 8.784699999999854e-05, 8.776400000000059e-05, 8.745800000000206e-05, 8.758300000000219e-05, 8.743099999999893e-05, 8.729199999999923e-05, 8.811099999999836e-05, 8.81389999999975e-05, 8.770799999999884e-05, 8.747199999999816e-05, 8.824999999999805e-05, 8.752799999999991e-05, 8.741699999999936e-05, 8.819399999999977e-05, 8.786100000000158e-05, 8.776400000000059e-05, 8.761100000000133e-05, 8.81670000000001e-05, 8.819499999999925e-05, 8.815300000000054e-05, 8.779100000000026e-05, 8.795799999999909e-05, 8.766600000000013e-05, 8.731900000000237e-05, 8.741699999999936e-05, 8.797200000000213e-05, 8.768100000000265e-05, 8.736100000000108e-05, 8.738900000000022e-05, 8.772300000000136e-05, 8.806999999999912e-05, 8.729199999999923e-05, 8.779100000000026e-05, 8.74860000000012e-05, 8.801400000000084e-05, 8.797199999999866e-05, 8.751399999999687e-05, 8.779199999999973e-05, 8.770900000000179e-05, 8.76669999999996e-05]</msg>
<status status="PASS" starttime="20201117 14:48:21.344" endtime="20201117 14:48:21.346"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.338" endtime="20201117 14:48:21.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.349" endtime="20201117 14:48:21.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:21.352" endtime="20201117 14:48:21.371"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.350" endtime="20201117 14:48:21.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.347" endtime="20201117 14:48:21.372"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.980" endtime="20201117 14:48:21.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.979" endtime="20201117 14:48:21.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:20.978" endtime="20201117 14:48:21.373"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.376" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.384" endtime="20201117 14:48:21.403"></status>
</kw>
<msg timestamp="20201117 14:48:21.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.382" endtime="20201117 14:48:21.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.405" endtime="20201117 14:48:21.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.407" endtime="20201117 14:48:21.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.380" endtime="20201117 14:48:21.409"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.377" endtime="20201117 14:48:21.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.416" endtime="20201117 14:48:21.701"></status>
</kw>
<msg timestamp="20201117 14:48:21.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.415" endtime="20201117 14:48:21.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:21.705" endtime="20201117 14:48:21.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.714" endtime="20201117 14:48:21.715"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.412" endtime="20201117 14:48:21.716"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.410" endtime="20201117 14:48:21.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:21.720" level="INFO">${RESULT} = [{'time': 0.022168944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.870799999999984e-05, 'source_diff': 8.870799999999984e-05}, {'time': 0.022263903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:21.717" endtime="20201117 14:48:21.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:21.734" level="INFO">${ACCURACY} = {'diff': [8.870799999999984e-05, 8.870900000000279e-05, 8.884699999999954e-05, 8.836199999999808e-05, 8.922199999999991e-05, 8.847200000000263e-05, 8.89999999999988e-05, 8.89860000000027e-05, 8.838900...</msg>
<status status="PASS" starttime="20201117 14:48:21.721" endtime="20201117 14:48:21.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.738" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201117 14:48:21.737" endtime="20201117 14:48:21.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.741" level="INFO">VALUE: [8.870799999999984e-05, 8.870900000000279e-05, 8.884699999999954e-05, 8.836199999999808e-05, 8.922199999999991e-05, 8.847200000000263e-05, 8.89999999999988e-05, 8.89860000000027e-05, 8.838900000000122e-05, 8.920800000000034e-05, 8.883299999999997e-05, 8.88060000000003e-05, 8.822199999999891e-05, 8.84860000000022e-05, 8.819500000000272e-05, 8.868100000000018e-05, 8.86120000000018e-05, 8.869400000000027e-05, 8.837499999999818e-05, 8.902800000000141e-05, 8.81389999999975e-05, 8.888900000000172e-05, 8.908300000000022e-05, 8.895900000000304e-05, 8.891700000000086e-05, 8.833399999999894e-05, 8.887499999999868e-05, 8.902700000000194e-05, 8.894399999999705e-05, 8.876399999999812e-05, 8.855500000000058e-05, 8.851399999999787e-05, 8.870799999999984e-05, 8.852800000000091e-05, 8.858299999999972e-05, 8.902799999999794e-05, 8.84999999999983e-05, 8.838899999999775e-05, 8.919500000000025e-05, 8.911099999999936e-05, 8.909699999999979e-05, 8.894400000000052e-05, 8.919400000000077e-05, 8.836099999999861e-05, 8.879200000000073e-05, 8.84999999999983e-05, 8.834699999999904e-05, 8.84999999999983e-05, 8.895899999999957e-05, 8.855600000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:48:21.739" endtime="20201117 14:48:21.742"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.735" endtime="20201117 14:48:21.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.744" endtime="20201117 14:48:21.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:21.748" endtime="20201117 14:48:21.767"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.746" endtime="20201117 14:48:21.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.743" endtime="20201117 14:48:21.768"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.376" endtime="20201117 14:48:21.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.374" endtime="20201117 14:48:21.769"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.374" endtime="20201117 14:48:21.769"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.771" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.779" endtime="20201117 14:48:21.798"></status>
</kw>
<msg timestamp="20201117 14:48:21.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.778" endtime="20201117 14:48:21.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:21.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:21.799" endtime="20201117 14:48:21.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.802" endtime="20201117 14:48:21.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.775" endtime="20201117 14:48:21.804"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.773" endtime="20201117 14:48:21.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:21.811" endtime="20201117 14:48:22.096"></status>
</kw>
<msg timestamp="20201117 14:48:22.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:21.809" endtime="20201117 14:48:22.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021966931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201117 14:48:22.100" endtime="20201117 14:48:22.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.108" endtime="20201117 14:48:22.110"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.807" endtime="20201117 14:48:22.111"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.805" endtime="20201117 14:48:22.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.115" level="INFO">${RESULT} = [{'time': 0.02205625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.93190000000009e-05, 'source_diff': 8.93190000000009e-05}, {'time': 0.022149264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201117 14:48:22.112" endtime="20201117 14:48:22.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.129" level="INFO">${ACCURACY} = {'diff': [8.93190000000009e-05, 8.922199999999991e-05, 8.94450000000005e-05, 8.934799999999951e-05, 8.984800000000001e-05, 8.990299999999882e-05, 9.01670000000021e-05, 8.983300000000097e-05, 8.9249999...</msg>
<status status="PASS" starttime="20201117 14:48:22.117" endtime="20201117 14:48:22.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.134" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.133" endtime="20201117 14:48:22.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.136" level="INFO">VALUE: [8.93190000000009e-05, 8.922199999999991e-05, 8.94450000000005e-05, 8.934799999999951e-05, 8.984800000000001e-05, 8.990299999999882e-05, 9.01670000000021e-05, 8.983300000000097e-05, 8.924999999999905e-05, 9.006900000000165e-05, 8.955599999999758e-05, 8.957000000000062e-05, 8.970800000000084e-05, 8.945799999999712e-05, 9.002800000000241e-05, 8.943100000000093e-05, 8.991700000000186e-05, 8.951400000000234e-05, 8.995799999999762e-05, 8.977699999999922e-05, 8.937499999999918e-05, 8.963900000000247e-05, 9.01389999999995e-05, 8.920800000000034e-05, 9.011100000000036e-05, 9.002800000000241e-05, 8.977799999999869e-05, 8.965300000000204e-05, 8.980499999999836e-05, 8.983300000000097e-05, 8.952800000000191e-05, 9.002799999999894e-05, 8.974999999999955e-05, 9.001399999999937e-05, 8.990299999999882e-05, 8.966699999999814e-05, 8.924999999999905e-05, 8.984700000000054e-05, 8.959799999999976e-05, 8.948599999999973e-05, 8.98190000000014e-05, 8.980499999999836e-05, 8.947200000000016e-05, 8.994400000000152e-05, 9.005499999999861e-05, 8.986100000000011e-05, 8.956999999999715e-05, 8.984700000000054e-05, 8.959799999999976e-05, 8.927800000000166e-05]</msg>
<status status="PASS" starttime="20201117 14:48:22.135" endtime="20201117 14:48:22.137"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.130" endtime="20201117 14:48:22.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.140" endtime="20201117 14:48:22.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.143" endtime="20201117 14:48:22.162"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.141" endtime="20201117 14:48:22.163"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.138" endtime="20201117 14:48:22.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.772" endtime="20201117 14:48:22.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.770" endtime="20201117 14:48:22.164"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:21.769" endtime="20201117 14:48:22.164"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.167" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.175" endtime="20201117 14:48:22.195"></status>
</kw>
<msg timestamp="20201117 14:48:22.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.173" endtime="20201117 14:48:22.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.196" endtime="20201117 14:48:22.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.198" endtime="20201117 14:48:22.200"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.171" endtime="20201117 14:48:22.201"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.169" endtime="20201117 14:48:22.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.207" endtime="20201117 14:48:22.493"></status>
</kw>
<msg timestamp="20201117 14:48:22.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.206" endtime="20201117 14:48:22.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.498" endtime="20201117 14:48:22.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.506" endtime="20201117 14:48:22.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.203" endtime="20201117 14:48:22.508"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.202" endtime="20201117 14:48:22.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.513" level="INFO">${RESULT} = [{'time': 0.022873792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.058400000000119e-05, 'source_diff': 9.058400000000119e-05}, {'time': 0.022973778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:22.510" endtime="20201117 14:48:22.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.528" level="INFO">${ACCURACY} = {'diff': [9.058400000000119e-05, 9.052799999999944e-05, 9.097300000000114e-05, 9.113799999999755e-05, 9.034700000000104e-05, 9.075000000000055e-05, 9.094499999999853e-05, 9.061100000000086e-05, 9.0792...</msg>
<status status="PASS" starttime="20201117 14:48:22.514" endtime="20201117 14:48:22.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.532" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.531" endtime="20201117 14:48:22.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.535" level="INFO">VALUE: [9.058400000000119e-05, 9.052799999999944e-05, 9.097300000000114e-05, 9.113799999999755e-05, 9.034700000000104e-05, 9.075000000000055e-05, 9.094499999999853e-05, 9.061100000000086e-05, 9.079200000000273e-05, 9.077799999999969e-05, 9.116699999999964e-05, 9.115300000000007e-05, 9.118099999999921e-05, 9.119500000000225e-05, 9.048699999999674e-05, 9.027699999999972e-05, 9.05000000000003e-05, 9.061100000000086e-05, 9.065299999999957e-05, 9.106900000000265e-05, 9.077799999999969e-05, 9.051399999999987e-05, 9.08199999999984e-05, 9.052799999999944e-05, 9.04450000000015e-05, 9.104199999999951e-05, 9.10000000000008e-05, 9.037500000000018e-05, 9.120800000000234e-05, 9.11390000000005e-05, 9.023599999999701e-05, 9.120799999999887e-05, 9.105599999999908e-05, 9.097199999999819e-05, 9.034700000000104e-05, 9.118099999999921e-05, 9.086200000000058e-05, 9.059800000000076e-05, 9.061100000000086e-05, 9.094399999999905e-05, 9.030499999999886e-05, 9.037500000000018e-05, 9.093100000000243e-05, 9.101400000000037e-05, 9.065299999999957e-05, 9.104199999999951e-05, 9.073600000000098e-05, 9.070899999999785e-05, 9.088900000000025e-05, 9.11390000000005e-05]</msg>
<status status="PASS" starttime="20201117 14:48:22.533" endtime="20201117 14:48:22.535"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.529" endtime="20201117 14:48:22.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.538" endtime="20201117 14:48:22.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.541" endtime="20201117 14:48:22.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.540" endtime="20201117 14:48:22.561"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.536" endtime="20201117 14:48:22.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.167" endtime="20201117 14:48:22.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.165" endtime="20201117 14:48:22.562"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.165" endtime="20201117 14:48:22.562"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.573" endtime="20201117 14:48:22.592"></status>
</kw>
<msg timestamp="20201117 14:48:22.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.571" endtime="20201117 14:48:22.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.593" endtime="20201117 14:48:22.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.596" endtime="20201117 14:48:22.597"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.569" endtime="20201117 14:48:22.598"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.567" endtime="20201117 14:48:22.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.605" endtime="20201117 14:48:22.889"></status>
</kw>
<msg timestamp="20201117 14:48:22.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.603" endtime="20201117 14:48:22.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.893" endtime="20201117 14:48:22.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.901" endtime="20201117 14:48:22.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.601" endtime="20201117 14:48:22.903"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.599" endtime="20201117 14:48:22.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:22.908" level="INFO">${RESULT} = [{'time': 0.022029306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.122299999999792e-05, 'source_diff': 9.122299999999792e-05}, {'time': 0.022130333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:22.905" endtime="20201117 14:48:22.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:22.921" level="INFO">${ACCURACY} = {'diff': [9.122299999999792e-05, 9.138899999999728e-05, 9.179100000000079e-05, 9.144399999999955e-05, 9.129199999999976e-05, 9.201400000000137e-05, 9.175000000000155e-05, 9.137500000000118e-05, 9.1249...</msg>
<status status="PASS" starttime="20201117 14:48:22.909" endtime="20201117 14:48:22.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.926" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201117 14:48:22.925" endtime="20201117 14:48:22.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.928" level="INFO">VALUE: [9.122299999999792e-05, 9.138899999999728e-05, 9.179100000000079e-05, 9.144399999999955e-05, 9.129199999999976e-05, 9.201400000000137e-05, 9.175000000000155e-05, 9.137500000000118e-05, 9.124999999999758e-05, 9.21529999999976e-05, 9.21390000000015e-05, 9.208399999999922e-05, 9.191599999999744e-05, 9.18879999999983e-05, 9.191600000000091e-05, 9.188900000000125e-05, 9.125000000000105e-05, 9.165300000000057e-05, 9.195799999999962e-05, 9.209699999999932e-05, 9.218100000000021e-05, 9.187500000000168e-05, 9.220799999999987e-05, 9.15139999999974e-05, 9.181899999999993e-05, 9.181899999999993e-05, 9.157000000000262e-05, 9.202799999999747e-05, 9.211099999999889e-05, 9.175000000000155e-05, 9.120799999999887e-05, 9.151400000000087e-05, 9.219499999999978e-05, 9.20000000000018e-05, 9.1332999999999e-05, 9.179099999999732e-05, 9.184699999999907e-05, 9.125000000000105e-05, 9.172200000000241e-05, 9.159799999999829e-05, 9.169499999999928e-05, 9.194499999999953e-05, 9.138899999999728e-05, 9.133400000000194e-05, 9.147299999999817e-05, 9.179099999999732e-05, 9.130499999999986e-05, 9.148599999999826e-05, 9.16939999999998e-05, 9.142999999999998e-05]</msg>
<status status="PASS" starttime="20201117 14:48:22.927" endtime="20201117 14:48:22.929"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.922" endtime="20201117 14:48:22.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.932" endtime="20201117 14:48:22.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:22.935" endtime="20201117 14:48:22.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.934" endtime="20201117 14:48:22.955"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.930" endtime="20201117 14:48:22.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.565" endtime="20201117 14:48:22.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.564" endtime="20201117 14:48:22.956"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.563" endtime="20201117 14:48:22.956"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.959" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.967" endtime="20201117 14:48:22.985"></status>
</kw>
<msg timestamp="20201117 14:48:22.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.965" endtime="20201117 14:48:22.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:22.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:22.986" endtime="20201117 14:48:22.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.989" endtime="20201117 14:48:22.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.963" endtime="20201117 14:48:22.991"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.961" endtime="20201117 14:48:22.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:22.998" endtime="20201117 14:48:23.284"></status>
</kw>
<msg timestamp="20201117 14:48:23.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:22.997" endtime="20201117 14:48:23.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022232333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.288" endtime="20201117 14:48:23.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.296" endtime="20201117 14:48:23.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.994" endtime="20201117 14:48:23.298"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.992" endtime="20201117 14:48:23.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:23.303" level="INFO">${RESULT} = [{'time': 0.022232333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.261099999999939e-05, 'source_diff': 9.261099999999939e-05}, {'time': 0.022330347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:23.299" endtime="20201117 14:48:23.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:23.316" level="INFO">${ACCURACY} = {'diff': [9.261099999999939e-05, 9.265300000000157e-05, 9.29590000000001e-05, 9.241700000000089e-05, 9.302799999999847e-05, 9.230500000000086e-05, 9.272199999999994e-05, 9.28200000000004e-05, 9.243100...</msg>
<status status="PASS" starttime="20201117 14:48:23.304" endtime="20201117 14:48:23.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.321" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201117 14:48:23.320" endtime="20201117 14:48:23.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.323" level="INFO">VALUE: [9.261099999999939e-05, 9.265300000000157e-05, 9.29590000000001e-05, 9.241700000000089e-05, 9.302799999999847e-05, 9.230500000000086e-05, 9.272199999999994e-05, 9.28200000000004e-05, 9.243100000000046e-05, 9.280600000000083e-05, 9.302700000000247e-05, 9.2333e-05, 9.229199999999729e-05, 9.226400000000162e-05, 9.224999999999858e-05, 9.277799999999822e-05, 9.261099999999939e-05, 9.28200000000004e-05, 9.275000000000255e-05, 9.233399999999947e-05, 9.320800000000087e-05, 9.295800000000062e-05, 9.223599999999901e-05, 9.248599999999926e-05, 9.237499999999871e-05, 9.276399999999865e-05, 9.288899999999878e-05, 9.284700000000007e-05, 9.273599999999951e-05, 9.249999999999883e-05, 9.274999999999908e-05, 9.251299999999893e-05, 9.227700000000172e-05, 9.240300000000132e-05, 9.284700000000007e-05, 9.226399999999815e-05, 9.308299999999728e-05, 9.277799999999822e-05, 9.234699999999957e-05, 9.23199999999999e-05, 9.261100000000286e-05, 9.311099999999989e-05, 9.290300000000182e-05, 9.301299999999943e-05, 9.267999999999776e-05, 9.26940000000008e-05, 9.308300000000075e-05, 9.24719999999997e-05, 9.244399999999708e-05, 9.240300000000132e-05]</msg>
<status status="PASS" starttime="20201117 14:48:23.322" endtime="20201117 14:48:23.324"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.317" endtime="20201117 14:48:23.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.326" endtime="20201117 14:48:23.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:23.330" endtime="20201117 14:48:23.349"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.328" endtime="20201117 14:48:23.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.325" endtime="20201117 14:48:23.350"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.959" endtime="20201117 14:48:23.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.957" endtime="20201117 14:48:23.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:22.957" endtime="20201117 14:48:23.351"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.353" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.362" endtime="20201117 14:48:23.382"></status>
</kw>
<msg timestamp="20201117 14:48:23.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.361" endtime="20201117 14:48:23.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.384" endtime="20201117 14:48:23.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.386" endtime="20201117 14:48:23.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.357" endtime="20201117 14:48:23.388"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.355" endtime="20201117 14:48:23.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.395" endtime="20201117 14:48:23.681"></status>
</kw>
<msg timestamp="20201117 14:48:23.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.394" endtime="20201117 14:48:23.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022927569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023021611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.685" endtime="20201117 14:48:23.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.693" endtime="20201117 14:48:23.695"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.391" endtime="20201117 14:48:23.696"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.389" endtime="20201117 14:48:23.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:23.700" level="INFO">${RESULT} = [{'time': 0.023021611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.404200000000251e-05, 'source_diff': 9.404200000000251e-05}, {'time': 0.023122611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:23.697" endtime="20201117 14:48:23.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:23.714" level="INFO">${ACCURACY} = {'diff': [9.404200000000251e-05, 9.411100000000089e-05, 9.341699999999842e-05, 9.390299999999935e-05, 9.409699999999785e-05, 9.420900000000135e-05, 9.337499999999971e-05, 9.38200000000014e-05, 9.36529...</msg>
<status status="PASS" starttime="20201117 14:48:23.701" endtime="20201117 14:48:23.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.718" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201117 14:48:23.717" endtime="20201117 14:48:23.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.721" level="INFO">VALUE: [9.404200000000251e-05, 9.411100000000089e-05, 9.341699999999842e-05, 9.390299999999935e-05, 9.409699999999785e-05, 9.420900000000135e-05, 9.337499999999971e-05, 9.38200000000014e-05, 9.36529999999991e-05, 9.420800000000187e-05, 9.326399999999915e-05, 9.419399999999883e-05, 9.338899999999928e-05, 9.402799999999947e-05, 9.413900000000003e-05, 9.366699999999867e-05, 9.331900000000143e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.342999999999851e-05, 9.408299999999828e-05, 9.3333000000001e-05, 9.372200000000094e-05, 9.354200000000201e-05, 9.422199999999797e-05, 9.331999999999743e-05, 9.340300000000232e-05, 9.38200000000014e-05, 9.402799999999947e-05, 9.388899999999978e-05, 9.377800000000269e-05, 9.327699999999925e-05, 9.404100000000304e-05, 9.380499999999889e-05, 9.354100000000254e-05, 9.338899999999928e-05, 9.349999999999983e-05, 9.376399999999965e-05, 9.409700000000132e-05, 9.357000000000115e-05, 9.405599999999861e-05, 9.33200000000009e-05, 9.408299999999828e-05, 9.3333000000001e-05, 9.376399999999965e-05, 9.36529999999991e-05, 9.338900000000275e-05, 9.375000000000008e-05, 9.357000000000115e-05, 9.349999999999983e-05]</msg>
<status status="PASS" starttime="20201117 14:48:23.719" endtime="20201117 14:48:23.721"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.715" endtime="20201117 14:48:23.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.724" endtime="20201117 14:48:23.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:23.727" endtime="20201117 14:48:23.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.726" endtime="20201117 14:48:23.747"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.722" endtime="20201117 14:48:23.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.354" endtime="20201117 14:48:23.748"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.352" endtime="20201117 14:48:23.749"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.351" endtime="20201117 14:48:23.749"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.759" endtime="20201117 14:48:23.779"></status>
</kw>
<msg timestamp="20201117 14:48:23.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.758" endtime="20201117 14:48:23.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:23.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:23.781" endtime="20201117 14:48:23.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.783" endtime="20201117 14:48:23.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.755" endtime="20201117 14:48:23.785"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.753" endtime="20201117 14:48:23.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:23.792" endtime="20201117 14:48:24.077"></status>
</kw>
<msg timestamp="20201117 14:48:24.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023290917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023385639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:23.791" endtime="20201117 14:48:24.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023290917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023385639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.081" endtime="20201117 14:48:24.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.089" endtime="20201117 14:48:24.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.788" endtime="20201117 14:48:24.091"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.786" endtime="20201117 14:48:24.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:24.096" level="INFO">${RESULT} = [{'time': 0.023385639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.472199999999847e-05, 'source_diff': 9.472199999999847e-05}, {'time': 0.023484653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:24.092" endtime="20201117 14:48:24.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:24.111" level="INFO">${ACCURACY} = {'diff': [9.472199999999847e-05, 9.498600000000176e-05, 9.434800000000104e-05, 9.479199999999979e-05, 9.425000000000058e-05, 9.425000000000058e-05, 9.513899999999756e-05, 9.480599999999936e-05, 9.4625...</msg>
<status status="PASS" starttime="20201117 14:48:24.097" endtime="20201117 14:48:24.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.115" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201117 14:48:24.114" endtime="20201117 14:48:24.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.118" level="INFO">VALUE: [9.472199999999847e-05, 9.498600000000176e-05, 9.434800000000104e-05, 9.479199999999979e-05, 9.425000000000058e-05, 9.425000000000058e-05, 9.513899999999756e-05, 9.480599999999936e-05, 9.462500000000096e-05, 9.433299999999853e-05, 9.509699999999885e-05, 9.437500000000071e-05, 9.491699999999992e-05, 9.483400000000197e-05, 9.473700000000099e-05, 9.508400000000222e-05, 9.463800000000105e-05, 9.50140000000009e-05, 9.488900000000078e-05, 9.52079999999994e-05, 9.500000000000133e-05, 9.468099999999924e-05, 9.512499999999799e-05, 9.468099999999924e-05, 9.476400000000065e-05, 9.48469999999986e-05, 9.462500000000096e-05, 9.501299999999796e-05, 9.45140000000004e-05, 9.425000000000058e-05, 9.466699999999967e-05, 9.515299999999713e-05, 9.462500000000096e-05, 9.474999999999761e-05, 9.519499999999931e-05, 9.486099999999817e-05, 9.448600000000126e-05, 9.512500000000146e-05, 9.45140000000004e-05, 9.434700000000157e-05, 9.511100000000189e-05, 9.519399999999983e-05, 9.48469999999986e-05, 9.511100000000189e-05, 9.429199999999929e-05, 9.523600000000201e-05, 9.459800000000129e-05, 9.473700000000099e-05, 9.501299999999796e-05, 9.444400000000255e-05]</msg>
<status status="PASS" starttime="20201117 14:48:24.116" endtime="20201117 14:48:24.118"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.112" endtime="20201117 14:48:24.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.121" endtime="20201117 14:48:24.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:24.125" endtime="20201117 14:48:24.144"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.123" endtime="20201117 14:48:24.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.119" endtime="20201117 14:48:24.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.752" endtime="20201117 14:48:24.145"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.750" endtime="20201117 14:48:24.146"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:23.749" endtime="20201117 14:48:24.146"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.148" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.156" endtime="20201117 14:48:24.176"></status>
</kw>
<msg timestamp="20201117 14:48:24.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.155" endtime="20201117 14:48:24.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.177" endtime="20201117 14:48:24.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.180" endtime="20201117 14:48:24.181"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.152" endtime="20201117 14:48:24.182"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.150" endtime="20201117 14:48:24.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.189" endtime="20201117 14:48:24.474"></status>
</kw>
<msg timestamp="20201117 14:48:24.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.187" endtime="20201117 14:48:24.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.479" endtime="20201117 14:48:24.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.487" endtime="20201117 14:48:24.488"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.185" endtime="20201117 14:48:24.489"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.183" endtime="20201117 14:48:24.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:24.494" level="INFO">${RESULT} = [{'time': 0.021914486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.588900000000178e-05, 'source_diff': 9.588900000000178e-05}, {'time': 0.0220165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:24.490" endtime="20201117 14:48:24.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:24.507" level="INFO">${ACCURACY} = {'diff': [9.588900000000178e-05, 9.619400000000083e-05, 9.545799999999965e-05, 9.537499999999824e-05, 9.55140000000014e-05, 9.568100000000024e-05, 9.59019999999984e-05, 9.550000000000183e-05, 9.601299...</msg>
<status status="PASS" starttime="20201117 14:48:24.495" endtime="20201117 14:48:24.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.511" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201117 14:48:24.510" endtime="20201117 14:48:24.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.514" level="INFO">VALUE: [9.588900000000178e-05, 9.619400000000083e-05, 9.545799999999965e-05, 9.537499999999824e-05, 9.55140000000014e-05, 9.568100000000024e-05, 9.59019999999984e-05, 9.550000000000183e-05, 9.601299999999896e-05, 9.555500000000064e-05, 9.522199999999897e-05, 9.57079999999999e-05, 9.538899999999781e-05, 9.613900000000203e-05, 9.588899999999831e-05, 9.530499999999692e-05, 9.569499999999981e-05, 9.609699999999985e-05, 9.622199999999997e-05, 9.559699999999935e-05, 9.594400000000058e-05, 9.556900000000021e-05, 9.579099999999785e-05, 9.616700000000117e-05, 9.540300000000085e-05, 9.552800000000097e-05, 9.575000000000208e-05, 9.534800000000204e-05, 9.538899999999781e-05, 9.550000000000183e-05, 9.568100000000024e-05, 9.547199999999922e-05, 9.530500000000039e-05, 9.55279999999975e-05, 9.61669999999977e-05, 9.601399999999843e-05, 9.554200000000054e-05, 9.575000000000208e-05, 9.577800000000122e-05, 9.595800000000015e-05, 9.561100000000239e-05, 9.577700000000175e-05, 9.576400000000165e-05, 9.581900000000046e-05, 9.604200000000104e-05, 9.54859999999988e-05, 9.609699999999985e-05, 9.555600000000011e-05, 9.607000000000018e-05, 9.619500000000031e-05]</msg>
<status status="PASS" starttime="20201117 14:48:24.512" endtime="20201117 14:48:24.515"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.508" endtime="20201117 14:48:24.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.518" endtime="20201117 14:48:24.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:24.521" endtime="20201117 14:48:24.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.519" endtime="20201117 14:48:24.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.516" endtime="20201117 14:48:24.541"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.149" endtime="20201117 14:48:24.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.147" endtime="20201117 14:48:24.542"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.146" endtime="20201117 14:48:24.542"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.545" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.553" endtime="20201117 14:48:24.573"></status>
</kw>
<msg timestamp="20201117 14:48:24.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.551" endtime="20201117 14:48:24.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.575" endtime="20201117 14:48:24.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.577" endtime="20201117 14:48:24.579"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.549" endtime="20201117 14:48:24.580"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.547" endtime="20201117 14:48:24.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.586" endtime="20201117 14:48:24.873"></status>
</kw>
<msg timestamp="20201117 14:48:24.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.585" endtime="20201117 14:48:24.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.877" endtime="20201117 14:48:24.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.885" endtime="20201117 14:48:24.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.582" endtime="20201117 14:48:24.887"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.581" endtime="20201117 14:48:24.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:24.892" level="INFO">${RESULT} = [{'time': 0.023192431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.65279999999985e-05, 'source_diff': 9.65279999999985e-05}, {'time': 0.023294458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:24.889" endtime="20201117 14:48:24.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:24.906" level="INFO">${ACCURACY} = {'diff': [9.65279999999985e-05, 9.683300000000103e-05, 9.71799999999988e-05, 9.719399999999837e-05, 9.690300000000235e-05, 9.636099999999967e-05, 9.7027999999999e-05, 9.701399999999943e-05, 9.62779999...</msg>
<status status="PASS" starttime="20201117 14:48:24.893" endtime="20201117 14:48:24.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.910" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201117 14:48:24.909" endtime="20201117 14:48:24.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.913" level="INFO">VALUE: [9.65279999999985e-05, 9.683300000000103e-05, 9.71799999999988e-05, 9.719399999999837e-05, 9.690300000000235e-05, 9.636099999999967e-05, 9.7027999999999e-05, 9.701399999999943e-05, 9.627799999999825e-05, 9.656999999999721e-05, 9.67080000000009e-05, 9.684800000000007e-05, 9.722200000000097e-05, 9.630500000000139e-05, 9.677799999999875e-05, 9.626399999999868e-05, 9.708300000000128e-05, 9.624999999999911e-05, 9.636099999999967e-05, 9.711100000000042e-05, 9.672299999999995e-05, 9.702699999999953e-05, 9.66799999999983e-05, 9.673600000000004e-05, 9.704199999999857e-05, 9.691699999999845e-05, 9.636099999999967e-05, 9.66669999999982e-05, 9.643100000000099e-05, 9.7027999999999e-05, 9.623599999999954e-05, 9.662499999999949e-05, 9.715299999999913e-05, 9.656899999999774e-05, 9.637499999999924e-05, 9.65140000000024e-05, 9.701399999999943e-05, 9.661099999999992e-05, 9.66669999999982e-05, 9.647200000000022e-05, 9.65279999999985e-05, 9.676399999999918e-05, 9.719500000000131e-05, 9.637499999999924e-05, 9.65409999999986e-05, 9.693100000000149e-05, 9.70409999999991e-05, 9.668000000000176e-05, 9.677800000000222e-05, 9.729099999999935e-05]</msg>
<status status="PASS" starttime="20201117 14:48:24.911" endtime="20201117 14:48:24.913"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.907" endtime="20201117 14:48:24.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.916" endtime="20201117 14:48:24.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:24.919" endtime="20201117 14:48:24.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.918" endtime="20201117 14:48:24.939"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.914" endtime="20201117 14:48:24.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.545" endtime="20201117 14:48:24.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.543" endtime="20201117 14:48:24.940"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.543" endtime="20201117 14:48:24.940"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.943" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.951" endtime="20201117 14:48:24.971"></status>
</kw>
<msg timestamp="20201117 14:48:24.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.949" endtime="20201117 14:48:24.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:24.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:24.972" endtime="20201117 14:48:24.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.975" endtime="20201117 14:48:24.976"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.947" endtime="20201117 14:48:24.977"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.945" endtime="20201117 14:48:24.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:24.984" endtime="20201117 14:48:25.269"></status>
</kw>
<msg timestamp="20201117 14:48:25.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:24.982" endtime="20201117 14:48:25.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.273" endtime="20201117 14:48:25.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.282" endtime="20201117 14:48:25.283"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.980" endtime="20201117 14:48:25.284"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.978" endtime="20201117 14:48:25.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:25.288" level="INFO">${RESULT} = [{'time': 0.022105319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.815199999999719e-05, 'source_diff': 9.815199999999719e-05}, {'time': 0.022211333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:25.285" endtime="20201117 14:48:25.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:25.302" level="INFO">${ACCURACY} = {'diff': [9.815199999999719e-05, 9.772200000000147e-05, 9.751399999999993e-05, 9.788900000000031e-05, 9.766700000000267e-05, 9.74860000000008e-05, 9.819499999999884e-05, 9.788900000000031e-05, 9.75000...</msg>
<status status="PASS" starttime="20201117 14:48:25.289" endtime="20201117 14:48:25.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.306" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201117 14:48:25.305" endtime="20201117 14:48:25.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.309" level="INFO">VALUE: [9.815199999999719e-05, 9.772200000000147e-05, 9.751399999999993e-05, 9.788900000000031e-05, 9.766700000000267e-05, 9.74860000000008e-05, 9.819499999999884e-05, 9.788900000000031e-05, 9.750000000000036e-05, 9.805599999999914e-05, 9.819499999999884e-05, 9.791599999999998e-05, 9.802700000000053e-05, 9.793000000000301e-05, 9.741700000000242e-05, 9.808299999999881e-05, 9.736100000000067e-05, 9.819499999999884e-05, 9.7721999999998e-05, 9.788900000000031e-05, 9.790299999999988e-05, 9.758299999999831e-05, 9.784699999999813e-05, 9.750000000000036e-05, 9.781899999999899e-05, 9.795799999999869e-05, 9.779199999999932e-05, 9.794499999999859e-05, 9.804199999999957e-05, 9.800000000000086e-05, 9.73479999999971e-05, 9.724999999999664e-05, 9.737500000000024e-05, 9.805600000000261e-05, 9.727799999999925e-05, 9.795799999999869e-05, 9.793099999999902e-05, 9.758300000000178e-05, 9.777799999999975e-05, 9.751399999999993e-05, 9.725000000000011e-05, 9.780600000000236e-05, 9.8028e-05, 9.802700000000053e-05, 9.747200000000122e-05, 9.815300000000013e-05, 9.788900000000031e-05, 9.765299999999963e-05, 9.779199999999932e-05, 9.730600000000186e-05]</msg>
<status status="PASS" starttime="20201117 14:48:25.308" endtime="20201117 14:48:25.309"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.303" endtime="20201117 14:48:25.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.312" endtime="20201117 14:48:25.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:25.315" endtime="20201117 14:48:25.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.314" endtime="20201117 14:48:25.335"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.310" endtime="20201117 14:48:25.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.944" endtime="20201117 14:48:25.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.942" endtime="20201117 14:48:25.336"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:24.941" endtime="20201117 14:48:25.337"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.339" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.347" endtime="20201117 14:48:25.368"></status>
</kw>
<msg timestamp="20201117 14:48:25.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.345" endtime="20201117 14:48:25.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.369" endtime="20201117 14:48:25.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.372" endtime="20201117 14:48:25.373"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.343" endtime="20201117 14:48:25.374"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.341" endtime="20201117 14:48:25.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.381" endtime="20201117 14:48:25.667"></status>
</kw>
<msg timestamp="20201117 14:48:25.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.379" endtime="20201117 14:48:25.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.671" endtime="20201117 14:48:25.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.679" endtime="20201117 14:48:25.681"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.377" endtime="20201117 14:48:25.682"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.375" endtime="20201117 14:48:25.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:25.686" level="INFO">${RESULT} = [{'time': 0.022760167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.843100000000299e-05, 'source_diff': 9.843100000000299e-05}, {'time': 0.022864194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201117 14:48:25.683" endtime="20201117 14:48:25.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:25.701" level="INFO">${ACCURACY} = {'diff': [9.843100000000299e-05, 9.844399999999962e-05, 9.86670000000002e-05, 9.879100000000085e-05, 9.901399999999796e-05, 9.819400000000283e-05, 9.829199999999982e-05, 9.920799999999994e-05, 9.86390...</msg>
<status status="PASS" starttime="20201117 14:48:25.687" endtime="20201117 14:48:25.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.705" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201117 14:48:25.704" endtime="20201117 14:48:25.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.708" level="INFO">VALUE: [9.843100000000299e-05, 9.844399999999962e-05, 9.86670000000002e-05, 9.879100000000085e-05, 9.901399999999796e-05, 9.819400000000283e-05, 9.829199999999982e-05, 9.920799999999994e-05, 9.863900000000106e-05, 9.861099999999845e-05, 9.86670000000002e-05, 9.88609999999987e-05, 9.877800000000075e-05, 9.886100000000217e-05, 9.841600000000048e-05, 9.83609999999982e-05, 9.84999999999979e-05, 9.88059999999999e-05, 9.829199999999982e-05, 9.843099999999952e-05, 9.854200000000007e-05, 9.900000000000186e-05, 9.9028000000001e-05, 9.872299999999848e-05, 9.825000000000111e-05, 9.826399999999721e-05, 9.872200000000247e-05, 9.847199999999875e-05, 9.920799999999994e-05, 9.848599999999832e-05, 9.905600000000014e-05, 9.827800000000025e-05, 9.861100000000192e-05, 9.833300000000253e-05, 9.83609999999982e-05, 9.845800000000265e-05, 9.844399999999962e-05, 9.913900000000156e-05, 9.831899999999949e-05, 9.88470000000026e-05, 9.909799999999885e-05, 9.909699999999938e-05, 9.88340000000025e-05, 9.883399999999903e-05, 9.862500000000149e-05, 9.87080000000029e-05, 9.912500000000199e-05, 9.87080000000029e-05, 9.854200000000007e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201117 14:48:25.706" endtime="20201117 14:48:25.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.702" endtime="20201117 14:48:25.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.711" endtime="20201117 14:48:25.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:25.714" endtime="20201117 14:48:25.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.713" endtime="20201117 14:48:25.734"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.709" endtime="20201117 14:48:25.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.339" endtime="20201117 14:48:25.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.338" endtime="20201117 14:48:25.735"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.337" endtime="20201117 14:48:25.736"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.738" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.746" endtime="20201117 14:48:25.765"></status>
</kw>
<msg timestamp="20201117 14:48:25.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.744" endtime="20201117 14:48:25.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:25.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:25.767" endtime="20201117 14:48:25.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.770" endtime="20201117 14:48:25.771"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.742" endtime="20201117 14:48:25.772"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.740" endtime="20201117 14:48:25.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:25.779" endtime="20201117 14:48:26.065"></status>
</kw>
<msg timestamp="20201117 14:48:26.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:25.777" endtime="20201117 14:48:26.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.069" endtime="20201117 14:48:26.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.077" endtime="20201117 14:48:26.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.775" endtime="20201117 14:48:26.079"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.773" endtime="20201117 14:48:26.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.084" level="INFO">${RESULT} = [{'time': 0.021912389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.93609999999992e-05, 'source_diff': 9.93609999999992e-05}, {'time': 0.022015333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:26.080" endtime="20201117 14:48:26.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.097" level="INFO">${ACCURACY} = {'diff': [9.93609999999992e-05, 9.994400000000112e-05, 9.958300000000031e-05, 9.945800000000019e-05, 9.945800000000019e-05, 9.944400000000062e-05, 9.973599999999957e-05, 9.980599999999742e-05, 9.98609...</msg>
<status status="PASS" starttime="20201117 14:48:26.085" endtime="20201117 14:48:26.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.102" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.101" endtime="20201117 14:48:26.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.104" level="INFO">VALUE: [9.93609999999992e-05, 9.994400000000112e-05, 9.958300000000031e-05, 9.945800000000019e-05, 9.945800000000019e-05, 9.944400000000062e-05, 9.973599999999957e-05, 9.980599999999742e-05, 9.98609999999997e-05, 9.947200000000322e-05, 9.993100000000102e-05, 0.00010020800000000094, 9.987499999999927e-05, 9.959699999999988e-05, 9.931900000000049e-05, 9.990300000000188e-05, 9.950000000000236e-05, 9.957000000000021e-05, 9.95280000000015e-05, 9.972299999999948e-05, 9.93060000000004e-05, 9.926399999999821e-05, 9.937499999999877e-05, 0.00010009700000000038, 9.980500000000142e-05, 0.00010001400000000243, 9.934699999999963e-05, 9.965299999999816e-05, 9.93609999999992e-05, 9.941700000000095e-05, 9.990299999999841e-05, 9.956900000000074e-05, 9.963900000000206e-05, 9.995800000000069e-05, 9.927799999999778e-05, 9.924999999999864e-05, 9.952799999999803e-05, 9.924999999999864e-05, 9.983300000000056e-05, 9.924999999999864e-05, 9.93060000000004e-05, 9.955600000000064e-05, 9.98609999999997e-05, 9.99999999999994e-05, 9.951399999999846e-05, 9.929200000000082e-05, 9.973599999999957e-05, 9.948599999999932e-05, 9.983400000000003e-05, 9.94860000000028e-05]</msg>
<status status="PASS" starttime="20201117 14:48:26.103" endtime="20201117 14:48:26.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.098" endtime="20201117 14:48:26.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.107" endtime="20201117 14:48:26.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.111" endtime="20201117 14:48:26.130"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.109" endtime="20201117 14:48:26.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.106" endtime="20201117 14:48:26.131"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.739" endtime="20201117 14:48:26.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.737" endtime="20201117 14:48:26.132"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:25.736" endtime="20201117 14:48:26.132"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.135" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.143" endtime="20201117 14:48:26.162"></status>
</kw>
<msg timestamp="20201117 14:48:26.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.142" endtime="20201117 14:48:26.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.164" endtime="20201117 14:48:26.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.166" endtime="20201117 14:48:26.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.139" endtime="20201117 14:48:26.168"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.137" endtime="20201117 14:48:26.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.175" endtime="20201117 14:48:26.461"></status>
</kw>
<msg timestamp="20201117 14:48:26.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.174" endtime="20201117 14:48:26.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022607958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.465" endtime="20201117 14:48:26.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.474" endtime="20201117 14:48:26.475"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.171" endtime="20201117 14:48:26.476"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.170" endtime="20201117 14:48:26.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.480" level="INFO">${RESULT} = [{'time': 0.022607958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010117999999999933, 'source_diff': 0.00010117999999999933}, {'time': 0.022714958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:26.477" endtime="20201117 14:48:26.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.493" level="INFO">${ACCURACY} = {'diff': [0.00010117999999999933, 0.00010061100000000045, 0.00010048600000000033, 0.00010084699999999766, 0.00010037499999999977, 0.0001004999999999999, 0.00010037499999999977, 0.00010113900000000009,...</msg>
<status status="PASS" starttime="20201117 14:48:26.481" endtime="20201117 14:48:26.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.498" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.497" endtime="20201117 14:48:26.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.500" level="INFO">VALUE: [0.00010117999999999933, 0.00010061100000000045, 0.00010048600000000033, 0.00010084699999999766, 0.00010037499999999977, 0.0001004999999999999, 0.00010037499999999977, 0.00010113900000000009, 0.00010120900000000141, 0.00010066599999999926, 0.00010097199999999779, 0.0001005280000000025, 0.0001002220000000005, 0.00010033300000000106, 0.00010097200000000126, 0.00010119500000000184, 0.00010082000000000146, 0.00010032000000000096, 0.00010026399999999921, 0.00010054099999999913, 0.00010033299999999759, 0.00010097199999999779, 0.00010115299999999966, 0.00010108300000000181, 0.00010025000000000311, 0.00010051399999999946, 0.00010104200000000257, 0.0001003199999999975, 0.00010032000000000096, 0.00010066699999999873, 0.00010080499999999895, 0.00010084700000000113, 0.00010024999999999964, 0.00010109699999999791, 0.00010069400000000187, 0.00010029200000000182, 0.00010047299999999676, 0.0001010000000000004, 0.00010051400000000293, 0.00010112500000000052, 0.00010038799999999987, 0.00010031900000000149, 0.00010030499999999845, 0.00010076399999999971, 0.000100819999999998, 0.00010027799999999878, 0.0001005419999999986, 0.00010090299999999941, 0.00010041699999999848, 0.0001005419999999986]</msg>
<status status="PASS" starttime="20201117 14:48:26.499" endtime="20201117 14:48:26.501"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.494" endtime="20201117 14:48:26.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.503" endtime="20201117 14:48:26.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.507" endtime="20201117 14:48:26.526"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.505" endtime="20201117 14:48:26.527"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.502" endtime="20201117 14:48:26.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.135" endtime="20201117 14:48:26.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.133" endtime="20201117 14:48:26.528"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.132" endtime="20201117 14:48:26.528"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.531" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.539" endtime="20201117 14:48:26.559"></status>
</kw>
<msg timestamp="20201117 14:48:26.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.537" endtime="20201117 14:48:26.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.561" endtime="20201117 14:48:26.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.564" endtime="20201117 14:48:26.565"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.535" endtime="20201117 14:48:26.566"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.533" endtime="20201117 14:48:26.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.572" endtime="20201117 14:48:26.859"></status>
</kw>
<msg timestamp="20201117 14:48:26.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.571" endtime="20201117 14:48:26.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023213417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:26.863" endtime="20201117 14:48:26.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.871" endtime="20201117 14:48:26.872"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.568" endtime="20201117 14:48:26.873"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.567" endtime="20201117 14:48:26.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:26.877" level="INFO">${RESULT} = [{'time': 0.023213417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010198599999999836, 'source_diff': 0.00010198599999999836}, {'time': 0.023320417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:26.874" endtime="20201117 14:48:26.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:26.890" level="INFO">${ACCURACY} = {'diff': [0.00010198599999999836, 0.00010211099999999848, 0.00010201400000000097, 0.0001016809999999993, 0.00010172300000000148, 0.00010152700000000056, 0.000101416, 0.00010154100000000013, 0.00010172...</msg>
<status status="PASS" starttime="20201117 14:48:26.878" endtime="20201117 14:48:26.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.895" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201117 14:48:26.894" endtime="20201117 14:48:26.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.897" level="INFO">VALUE: [0.00010198599999999836, 0.00010211099999999848, 0.00010201400000000097, 0.0001016809999999993, 0.00010172300000000148, 0.00010152700000000056, 0.000101416, 0.00010154100000000013, 0.000101722000000002, 0.00010205599999999967, 0.00010195799999999922, 0.00010208399999999881, 0.00010133400000000153, 0.0001018610000000017, 0.00010142999999999958, 0.00010179100000000038, 0.00010165300000000016, 0.00010161100000000145, 0.00010156900000000274, 0.00010158300000000231, 0.00010208299999999934, 0.00010183299999999909, 0.00010194499999999912, 0.00010154200000000307, 0.00010212499999999805, 0.00010131900000000249, 0.00010161100000000145, 0.00010174999999999768, 0.00010145800000000219, 0.00010141699999999948, 0.0001013610000000012, 0.00010201400000000097, 0.00010176400000000071, 0.00010151400000000046, 0.00010136200000000067, 0.00010119400000000237, 0.00010197199999999879, 0.00010129099999999988, 0.00010161099999999798, 0.00010130499999999945, 0.00010156999999999874, 0.00010190300000000041, 0.00010144499999999862, 0.00010211200000000142, 0.00010124999999999718, 0.00010165199999999722, 0.00010222199999999904, 0.00010165300000000016, 0.0001020550000000002, 0.00010208299999999934]</msg>
<status status="PASS" starttime="20201117 14:48:26.896" endtime="20201117 14:48:26.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.891" endtime="20201117 14:48:26.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.901" endtime="20201117 14:48:26.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:26.904" endtime="20201117 14:48:26.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.903" endtime="20201117 14:48:26.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.899" endtime="20201117 14:48:26.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.531" endtime="20201117 14:48:26.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.530" endtime="20201117 14:48:26.925"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.529" endtime="20201117 14:48:26.926"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.928" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.936" endtime="20201117 14:48:26.957"></status>
</kw>
<msg timestamp="20201117 14:48:26.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.935" endtime="20201117 14:48:26.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:26.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:26.959" endtime="20201117 14:48:26.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.961" endtime="20201117 14:48:26.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.932" endtime="20201117 14:48:26.963"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.930" endtime="20201117 14:48:26.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:26.970" endtime="20201117 14:48:27.256"></status>
</kw>
<msg timestamp="20201117 14:48:27.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023736417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:26.969" endtime="20201117 14:48:27.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023736417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:27.260" endtime="20201117 14:48:27.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.268" endtime="20201117 14:48:27.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.966" endtime="20201117 14:48:27.270"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.964" endtime="20201117 14:48:27.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:27.275" level="INFO">${RESULT} = [{'time': 0.0238395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010308300000000034, 'source_diff': 0.00010308300000000034}, {'time': 0.0239455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201117 14:48:27.271" endtime="20201117 14:48:27.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:27.289" level="INFO">${ACCURACY} = {'diff': [0.00010308300000000034, 0.00010295800000000022, 0.000102513999999998, 0.00010227800000000078, 0.00010252799999999757, 0.00010272300000000248, 0.00010248599999999886, 0.00010265200000000169, ...</msg>
<status status="PASS" starttime="20201117 14:48:27.276" endtime="20201117 14:48:27.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.294" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201117 14:48:27.293" endtime="20201117 14:48:27.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.301" level="INFO">VALUE: [0.00010308300000000034, 0.00010295800000000022, 0.000102513999999998, 0.00010227800000000078, 0.00010252799999999757, 0.00010272300000000248, 0.00010248599999999886, 0.00010265200000000169, 0.00010298599999999936, 0.00010263900000000159, 0.00010248599999999886, 0.00010283300000000009, 0.00010276400000000172, 0.0001030000000000024, 0.00010277799999999782, 0.00010237500000000177, 0.00010247200000000276, 0.00010312499999999905, 0.00010245799999999972, 0.00010263900000000159, 0.00010307000000000024, 0.00010270899999999944, 0.00010238900000000134, 0.00010293100000000055, 0.00010248600000000233, 0.00010238800000000187, 0.00010247199999999929, 0.00010266599999999779, 0.00010281900000000052, 0.00010229099999999741, 0.00010261099999999898, 0.00010244400000000015, 0.00010298599999999936, 0.0001023480000000021, 0.00010265299999999769, 0.00010230599999999992, 0.00010266600000000126, 0.00010224999999999818, 0.00010262500000000202, 0.00010243000000000058, 0.0001025420000000006, 0.00010290299999999794, 0.00010252700000000156, 0.00010265299999999769, 0.0001030420000000011, 0.00010318000000000133, 0.00010283300000000009, 0.00010272199999999954, 0.00010309699999999991, 0.00010272199999999954]</msg>
<status status="PASS" starttime="20201117 14:48:27.295" endtime="20201117 14:48:27.301"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.290" endtime="20201117 14:48:27.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.304" endtime="20201117 14:48:27.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:27.308" endtime="20201117 14:48:27.327"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.306" endtime="20201117 14:48:27.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.303" endtime="20201117 14:48:27.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.929" endtime="20201117 14:48:27.328"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.927" endtime="20201117 14:48:27.329"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:26.926" endtime="20201117 14:48:27.329"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.339" endtime="20201117 14:48:27.359"></status>
</kw>
<msg timestamp="20201117 14:48:27.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.338" endtime="20201117 14:48:27.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.361" endtime="20201117 14:48:27.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.363" endtime="20201117 14:48:27.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.335" endtime="20201117 14:48:27.365"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.333" endtime="20201117 14:48:27.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.372" endtime="20201117 14:48:27.658"></status>
</kw>
<msg timestamp="20201117 14:48:27.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.371" endtime="20201117 14:48:27.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:27.663" endtime="20201117 14:48:27.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.671" endtime="20201117 14:48:27.672"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.368" endtime="20201117 14:48:27.673"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.366" endtime="20201117 14:48:27.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:27.677" level="INFO">${RESULT} = [{'time': 0.022062528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010376400000000272, 'source_diff': 0.00010376400000000272}, {'time': 0.022170556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:27.674" endtime="20201117 14:48:27.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:27.691" level="INFO">${ACCURACY} = {'diff': [0.00010376400000000272, 0.00010355600000000117, 0.00010406999999999778, 0.00010422200000000104, 0.00010417999999999886, 0.00010407000000000124, 0.00010338900000000234, 0.00010413899999999962...</msg>
<status status="PASS" starttime="20201117 14:48:27.679" endtime="20201117 14:48:27.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.696" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201117 14:48:27.695" endtime="20201117 14:48:27.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.698" level="INFO">VALUE: [0.00010376400000000272, 0.00010355600000000117, 0.00010406999999999778, 0.00010422200000000104, 0.00010417999999999886, 0.00010407000000000124, 0.00010338900000000234, 0.00010413899999999962, 0.0001040139999999995, 0.00010419500000000137, 0.00010377799999999882, 0.00010374999999999968, 0.00010408300000000134, 0.00010354199999999814, 0.00010368000000000183, 0.00010405499999999873, 0.00010394400000000165, 0.00010325000000000265, 0.00010354199999999814, 0.00010395800000000122, 0.0001040139999999995, 0.000103820000000001, 0.00010408399999999735, 0.00010358300000000084, 0.00010409699999999744, 0.0001040139999999995, 0.00010347200000000029, 0.00010324999999999918, 0.00010330599999999746, 0.00010384699999999719, 0.00010399999999999993, 0.00010363900000000259, 0.00010415300000000266, 0.00010380499999999848, 0.00010366599999999879, 0.00010416599999999929, 0.00010349999999999943, 0.00010324999999999918, 0.000103513999999999, 0.0001033749999999993, 0.00010408400000000081, 0.00010365299999999869, 0.00010334700000000016, 0.00010386100000000023, 0.00010404099999999916, 0.00010402799999999907, 0.00010377799999999882, 0.00010344400000000115, 0.00010386100000000023, 0.00010361099999999998]</msg>
<status status="PASS" starttime="20201117 14:48:27.697" endtime="20201117 14:48:27.698"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.692" endtime="20201117 14:48:27.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.701" endtime="20201117 14:48:27.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:27.704" endtime="20201117 14:48:27.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.703" endtime="20201117 14:48:27.724"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.699" endtime="20201117 14:48:27.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.332" endtime="20201117 14:48:27.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.330" endtime="20201117 14:48:27.725"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.329" endtime="20201117 14:48:27.726"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.736" endtime="20201117 14:48:27.756"></status>
</kw>
<msg timestamp="20201117 14:48:27.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.735" endtime="20201117 14:48:27.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:27.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:27.758" endtime="20201117 14:48:27.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.760" endtime="20201117 14:48:27.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.732" endtime="20201117 14:48:27.762"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.730" endtime="20201117 14:48:27.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:27.769" endtime="20201117 14:48:28.054"></status>
</kw>
<msg timestamp="20201117 14:48:28.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:48:27.767" endtime="20201117 14:48:28.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022085194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201117 14:48:28.058" endtime="20201117 14:48:28.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.067" endtime="20201117 14:48:28.068"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.765" endtime="20201117 14:48:28.069"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.763" endtime="20201117 14:48:28.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:28.073" level="INFO">${RESULT} = [{'time': 0.02219, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010480600000000242, 'source_diff': 0.00010480600000000242}, {'time': 0.022301, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0....</msg>
<status status="PASS" starttime="20201117 14:48:28.070" endtime="20201117 14:48:28.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:28.087" level="INFO">${ACCURACY} = {'diff': [0.00010480600000000242, 0.0001051810000000028, 0.00010472200000000154, 0.00010444500000000162, 0.00010430599999999846, 0.00010515200000000072, 0.00010422300000000051, 0.00010452700000000009,...</msg>
<status status="PASS" starttime="20201117 14:48:28.074" endtime="20201117 14:48:28.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.091" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201117 14:48:28.090" endtime="20201117 14:48:28.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.094" level="INFO">VALUE: [0.00010480600000000242, 0.0001051810000000028, 0.00010472200000000154, 0.00010444500000000162, 0.00010430599999999846, 0.00010515200000000072, 0.00010422300000000051, 0.00010452700000000009, 0.00010441699999999901, 0.00010476400000000025, 0.0001043750000000003, 0.00010484699999999819, 0.00010444500000000162, 0.00010457000000000174, 0.00010513900000000062, 0.0001047079999999985, 0.00010454099999999966, 0.00010466599999999979, 0.00010525000000000118, 0.00010425000000000018, 0.00010467999999999936, 0.0001042499999999967, 0.00010462500000000055, 0.00010490299999999994, 0.00010479199999999939, 0.00010420800000000147, 0.00010433300000000159, 0.00010516600000000029, 0.0001047079999999985, 0.00010495799999999875, 0.0001043750000000003, 0.00010433300000000159, 0.00010452799999999957, 0.00010433400000000106, 0.00010491699999999951, 0.0001050550000000032, 0.00010450000000000043, 0.000105207999999999, 0.00010431899999999855, 0.000104514, 0.00010430500000000245, 0.00010425000000000018, 0.00010509700000000191, 0.00010436099999999726, 0.00010512499999999758, 0.00010488900000000037, 0.00010508300000000234, 0.00010495800000000222, 0.00010425000000000018, 0.00010415299999999919]</msg>
<status status="PASS" starttime="20201117 14:48:28.092" endtime="20201117 14:48:28.094"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.087" endtime="20201117 14:48:28.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.097" endtime="20201117 14:48:28.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:28.100" endtime="20201117 14:48:28.119"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.099" endtime="20201117 14:48:28.120"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.095" endtime="20201117 14:48:28.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.729" endtime="20201117 14:48:28.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.727" endtime="20201117 14:48:28.121"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:27.726" endtime="20201117 14:48:28.121"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.124" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.132" endtime="20201117 14:48:28.153"></status>
</kw>
<msg timestamp="20201117 14:48:28.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.130" endtime="20201117 14:48:28.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.155" endtime="20201117 14:48:28.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.157" endtime="20201117 14:48:28.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.128" endtime="20201117 14:48:28.159"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.126" endtime="20201117 14:48:28.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.167" endtime="20201117 14:48:28.452"></status>
</kw>
<msg timestamp="20201117 14:48:28.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.165" endtime="20201117 14:48:28.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.456" endtime="20201117 14:48:28.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.464" endtime="20201117 14:48:28.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.162" endtime="20201117 14:48:28.466"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.160" endtime="20201117 14:48:28.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:28.471" level="INFO">${RESULT} = [{'time': 0.023100139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010604199999999717, 'source_diff': 0.00010604199999999717}, {'time': 0.023212153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:28.467" endtime="20201117 14:48:28.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:28.484" level="INFO">${ACCURACY} = {'diff': [0.00010604199999999717, 0.0001056949999999994, 0.00010525000000000118, 0.00010602700000000159, 0.00010533299999999912, 0.00010591600000000104, 0.00010595800000000322, 0.00010583299999999962,...</msg>
<status status="PASS" starttime="20201117 14:48:28.472" endtime="20201117 14:48:28.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.489" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201117 14:48:28.488" endtime="20201117 14:48:28.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.491" level="INFO">VALUE: [0.00010604199999999717, 0.0001056949999999994, 0.00010525000000000118, 0.00010602700000000159, 0.00010533299999999912, 0.00010591600000000104, 0.00010595800000000322, 0.00010583299999999962, 0.000105514000000001, 0.00010531900000000302, 0.00010526400000000075, 0.00010529199999999989, 0.00010563899999999765, 0.00010545799999999925, 0.00010618000000000086, 0.00010531899999999955, 0.00010548600000000186, 0.00010616700000000076, 0.0001060560000000002, 0.00010543099999999958, 0.00010559700000000241, 0.00010541600000000054, 0.00010570899999999897, 0.00010544499999999915, 0.00010563800000000165, 0.00010555500000000023, 0.00010563900000000112, 0.00010525000000000118, 0.00010533299999999912, 0.0001053889999999974, 0.00010554200000000014, 0.00010561100000000198, 0.00010622200000000304, 0.00010595899999999922, 0.00010531899999999955, 0.00010552700000000109, 0.00010550000000000143, 0.00010622199999999957, 0.00010600000000000193, 0.00010576399999999778, 0.00010543100000000305, 0.00010561099999999851, 0.00010580599999999996, 0.00010549999999999796, 0.0001055689999999998, 0.00010612499999999858, 0.0001060140000000015, 0.00010558299999999937, 0.00010612499999999858, 0.00010604200000000064]</msg>
<status status="PASS" starttime="20201117 14:48:28.490" endtime="20201117 14:48:28.491"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.485" endtime="20201117 14:48:28.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.494" endtime="20201117 14:48:28.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:28.498" endtime="20201117 14:48:28.517"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.496" endtime="20201117 14:48:28.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.492" endtime="20201117 14:48:28.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.124" endtime="20201117 14:48:28.518"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.122" endtime="20201117 14:48:28.519"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.122" endtime="20201117 14:48:28.519"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.521" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.529" endtime="20201117 14:48:28.551"></status>
</kw>
<msg timestamp="20201117 14:48:28.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.528" endtime="20201117 14:48:28.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.552" endtime="20201117 14:48:28.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.555" endtime="20201117 14:48:28.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.525" endtime="20201117 14:48:28.557"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.523" endtime="20201117 14:48:28.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.564" endtime="20201117 14:48:28.849"></status>
</kw>
<msg timestamp="20201117 14:48:28.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:28.562" endtime="20201117 14:48:28.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022922625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201117 14:48:28.854" endtime="20201117 14:48:28.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.862" endtime="20201117 14:48:28.863"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.560" endtime="20201117 14:48:28.864"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.558" endtime="20201117 14:48:28.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:28.868" level="INFO">${RESULT} = [{'time': 0.022922625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010712499999999958, 'source_diff': 0.00010712499999999958}, {'time': 0.023033625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:28.865" endtime="20201117 14:48:28.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:28.883" level="INFO">${ACCURACY} = {'diff': [0.00010712499999999958, 0.0001070829999999974, 0.00010708400000000035, 0.00010697299999999979, 0.00010712499999999958, 0.00010701299999999955, 0.00010695800000000075, 0.00010669400000000093,...</msg>
<status status="PASS" starttime="20201117 14:48:28.869" endtime="20201117 14:48:28.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.887" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201117 14:48:28.886" endtime="20201117 14:48:28.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.890" level="INFO">VALUE: [0.00010712499999999958, 0.0001070829999999974, 0.00010708400000000035, 0.00010697299999999979, 0.00010712499999999958, 0.00010701299999999955, 0.00010695800000000075, 0.00010669400000000093, 0.0001068750000000028, 0.00010669400000000093, 0.00010654200000000114, 0.00010649999999999896, 0.00010699999999999946, 0.00010682000000000053, 0.00010698599999999989, 0.00010644500000000015, 0.00010705500000000173, 0.00010641599999999807, 0.00010668000000000136, 0.00010661099999999951, 0.00010704200000000164, 0.00010647199999999982, 0.00010644500000000015, 0.00010679200000000139, 0.00010663899999999865, 0.00010659799999999942, 0.00010627700000000184, 0.00010684700000000019, 0.00010708300000000087, 0.00010652800000000157, 0.00010630600000000046, 0.00010677799999999835, 0.00010687499999999933, 0.00010708400000000035, 0.00010668000000000136, 0.0001070829999999974, 0.00010634699999999969, 0.00010692999999999814, 0.00010709700000000044, 0.00010651399999999853, 0.00010719399999999796, 0.00010693100000000108, 0.00010694500000000065, 0.00010690300000000194, 0.00010667999999999789, 0.00010676399999999878, 0.00010656899999999733, 0.00010627799999999785, 0.00010681900000000105, 0.000107208000000001]</msg>
<status status="PASS" starttime="20201117 14:48:28.888" endtime="20201117 14:48:28.890"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.884" endtime="20201117 14:48:28.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.893" endtime="20201117 14:48:28.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:28.896" endtime="20201117 14:48:28.915"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.895" endtime="20201117 14:48:28.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.891" endtime="20201117 14:48:28.916"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.522" endtime="20201117 14:48:28.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.520" endtime="20201117 14:48:28.917"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.519" endtime="20201117 14:48:28.917"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.919" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.928" endtime="20201117 14:48:28.948"></status>
</kw>
<msg timestamp="20201117 14:48:28.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.927" endtime="20201117 14:48:28.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:28.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:28.950" endtime="20201117 14:48:28.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.952" endtime="20201117 14:48:28.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.924" endtime="20201117 14:48:28.954"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.921" endtime="20201117 14:48:28.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:28.961" endtime="20201117 14:48:29.248"></status>
</kw>
<msg timestamp="20201117 14:48:29.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:28.960" endtime="20201117 14:48:29.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.252" endtime="20201117 14:48:29.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.260" endtime="20201117 14:48:29.261"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.957" endtime="20201117 14:48:29.262"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.955" endtime="20201117 14:48:29.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:29.266" level="INFO">${RESULT} = [{'time': 0.022594597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010815299999999972, 'source_diff': 0.00010815299999999972}, {'time': 0.022704625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:29.263" endtime="20201117 14:48:29.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:29.280" level="INFO">${ACCURACY} = {'diff': [0.00010815299999999972, 0.00010729199999999842, 0.00010723600000000014, 0.00010820799999999853, 0.00010783300000000162, 0.00010784800000000067, 0.00010787500000000033, 0.00010755499999999876...</msg>
<status status="PASS" starttime="20201117 14:48:29.267" endtime="20201117 14:48:29.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.284" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201117 14:48:29.283" endtime="20201117 14:48:29.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.287" level="INFO">VALUE: [0.00010815299999999972, 0.00010729199999999842, 0.00010723600000000014, 0.00010820799999999853, 0.00010783300000000162, 0.00010784800000000067, 0.00010787500000000033, 0.00010755499999999876, 0.00010737499999999983, 0.00010737499999999983, 0.0001075279999999991, 0.00010793099999999861, 0.00010790299999999947, 0.00010745900000000072, 0.00010743100000000158, 0.00010766700000000226, 0.00010811200000000049, 0.00010756899999999833, 0.00010742999999999864, 0.00010809699999999797, 0.00010751399999999953, 0.00010769399999999846, 0.00010782000000000153, 0.00010800000000000046, 0.00010759800000000042, 0.00010776399999999978, 0.00010818000000000286, 0.00010719400000000143, 0.00010777799999999935, 0.00010815299999999972, 0.00010797200000000132, 0.00010761099999999704, 0.0001077500000000002, 0.00010798600000000089, 0.00010776399999999978, 0.0001077500000000002, 0.00010729200000000189, 0.00010804099999999969, 0.00010779200000000239, 0.00010759700000000094, 0.00010730599999999799, 0.00010736100000000026, 0.0001072499999999997, 0.00010819400000000243, 0.0001072499999999997, 0.00010723699999999961, 0.00010733300000000112, 0.00010779099999999944, 0.00010801400000000003, 0.00010776399999999978]</msg>
<status status="PASS" starttime="20201117 14:48:29.285" endtime="20201117 14:48:29.287"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.280" endtime="20201117 14:48:29.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.290" endtime="20201117 14:48:29.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:29.293" endtime="20201117 14:48:29.313"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.292" endtime="20201117 14:48:29.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.288" endtime="20201117 14:48:29.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.920" endtime="20201117 14:48:29.314"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.918" endtime="20201117 14:48:29.315"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:28.917" endtime="20201117 14:48:29.315"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.317" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.325" endtime="20201117 14:48:29.345"></status>
</kw>
<msg timestamp="20201117 14:48:29.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.324" endtime="20201117 14:48:29.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.347" endtime="20201117 14:48:29.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.349" endtime="20201117 14:48:29.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.321" endtime="20201117 14:48:29.351"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.319" endtime="20201117 14:48:29.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.358" endtime="20201117 14:48:29.643"></status>
</kw>
<msg timestamp="20201117 14:48:29.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.357" endtime="20201117 14:48:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.647" endtime="20201117 14:48:29.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.655" endtime="20201117 14:48:29.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.354" endtime="20201117 14:48:29.657"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.352" endtime="20201117 14:48:29.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:29.662" level="INFO">${RESULT} = [{'time': 0.021961583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010897199999999885, 'source_diff': 0.00010897199999999885}, {'time': 0.022073597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:29.659" endtime="20201117 14:48:29.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:29.675" level="INFO">${ACCURACY} = {'diff': [0.00010897199999999885, 0.0001082500000000007, 0.00010850000000000096, 0.00010884699999999872, 0.00010877800000000035, 0.0001085280000000001, 0.00010868099999999936, 0.00010875000000000121, ...</msg>
<status status="PASS" starttime="20201117 14:48:29.663" endtime="20201117 14:48:29.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.680" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201117 14:48:29.679" endtime="20201117 14:48:29.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.682" level="INFO">VALUE: [0.00010897199999999885, 0.0001082500000000007, 0.00010850000000000096, 0.00010884699999999872, 0.00010877800000000035, 0.0001085280000000001, 0.00010868099999999936, 0.00010875000000000121, 0.00010902700000000112, 0.00010845799999999878, 0.00010906899999999983, 0.00010837500000000083, 0.00010856899999999933, 0.00010873599999999817, 0.00010908400000000235, 0.00010905599999999974, 0.00010900000000000146, 0.00010894399999999971, 0.00010863799999999771, 0.00010859700000000194, 0.00010879099999999697, 0.00010863900000000065, 0.00010865300000000022, 0.0001082500000000007, 0.00010829200000000289, 0.00010913900000000115, 0.00010887500000000133, 0.00010884699999999872, 0.00010909699999999897, 0.00010861099999999804, 0.00010854100000000019, 0.00010837499999999736, 0.00010881899999999958, 0.00010899999999999799, 0.00010884800000000167, 0.00010845899999999825, 0.00010876400000000078, 0.00010916599999999735, 0.00010829099999999994, 0.00010851400000000053, 0.00010880500000000001, 0.00010912499999999811, 0.0001090829999999994, 0.00010836100000000126, 0.00010875000000000121, 0.00010844499999999868, 0.00010854100000000019, 0.00010875000000000121, 0.00010909699999999897, 0.00010897199999999885]</msg>
<status status="PASS" starttime="20201117 14:48:29.681" endtime="20201117 14:48:29.683"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.676" endtime="20201117 14:48:29.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.686" endtime="20201117 14:48:29.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:29.689" endtime="20201117 14:48:29.708"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.687" endtime="20201117 14:48:29.709"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.684" endtime="20201117 14:48:29.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.318" endtime="20201117 14:48:29.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.316" endtime="20201117 14:48:29.710"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.315" endtime="20201117 14:48:29.710"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.713" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.721" endtime="20201117 14:48:29.740"></status>
</kw>
<msg timestamp="20201117 14:48:29.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.719" endtime="20201117 14:48:29.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:29.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:29.742" endtime="20201117 14:48:29.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.744" endtime="20201117 14:48:29.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.717" endtime="20201117 14:48:29.746"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.715" endtime="20201117 14:48:29.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:29.753" endtime="20201117 14:48:30.038"></status>
</kw>
<msg timestamp="20201117 14:48:30.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:29.751" endtime="20201117 14:48:30.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021945236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.043" endtime="20201117 14:48:30.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.051" endtime="20201117 14:48:30.052"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.749" endtime="20201117 14:48:30.053"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.747" endtime="20201117 14:48:30.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.057" level="INFO">${RESULT} = [{'time': 0.022054722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010948599999999892, 'source_diff': 0.00010948599999999892}, {'time': 0.022168722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:30.054" endtime="20201117 14:48:30.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:30.070" level="INFO">${ACCURACY} = {'diff': [0.00010948599999999892, 0.00010961099999999904, 0.00011009699999999997, 0.0001093890000000014, 0.00010993100000000061, 0.00010976400000000178, 0.00010979200000000092, 0.00010950000000000196,...</msg>
<status status="PASS" starttime="20201117 14:48:30.058" endtime="20201117 14:48:30.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.075" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201117 14:48:30.074" endtime="20201117 14:48:30.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.078" level="INFO">VALUE: [0.00010948599999999892, 0.00010961099999999904, 0.00011009699999999997, 0.0001093890000000014, 0.00010993100000000061, 0.00010976400000000178, 0.00010979200000000092, 0.00010950000000000196, 0.00011002700000000212, 0.00011013900000000215, 0.00010956899999999686, 0.00011019400000000096, 0.00010945799999999978, 0.00010941700000000054, 0.00010922200000000257, 0.00010948600000000239, 0.00010972299999999907, 0.00010930599999999999, 0.00010934699999999922, 0.00010951399999999806, 0.00010970800000000003, 0.00011015300000000172, 0.00011024999999999924, 0.00010962500000000208, 0.00010980599999999702, 0.00010965299999999775, 0.00010973700000000211, 0.00010922200000000257, 0.00010966599999999785, 0.00010948600000000239, 0.00011022300000000304, 0.00011011099999999954, 0.00010974999999999874, 0.00010951400000000153, 0.00010979200000000092, 0.000110209, 0.0001098479999999992, 0.00010929100000000094, 0.00010980500000000101, 0.00011000000000000246, 0.00010948599999999892, 0.00010973599999999917, 0.0001095699999999998, 0.00010933399999999913, 0.00010984800000000267, 0.00010950000000000196, 0.00011009799999999945, 0.00010952699999999815, 0.00010940300000000097, 0.00010926400000000128]</msg>
<status status="PASS" starttime="20201117 14:48:30.076" endtime="20201117 14:48:30.078"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.071" endtime="20201117 14:48:30.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.081" endtime="20201117 14:48:30.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.084" endtime="20201117 14:48:30.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.083" endtime="20201117 14:48:30.104"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.079" endtime="20201117 14:48:30.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.713" endtime="20201117 14:48:30.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.711" endtime="20201117 14:48:30.105"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:29.711" endtime="20201117 14:48:30.106"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.108" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.116" endtime="20201117 14:48:30.136"></status>
</kw>
<msg timestamp="20201117 14:48:30.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.114" endtime="20201117 14:48:30.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.138" endtime="20201117 14:48:30.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.140" endtime="20201117 14:48:30.142"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.112" endtime="20201117 14:48:30.143"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.110" endtime="20201117 14:48:30.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.149" endtime="20201117 14:48:30.435"></status>
</kw>
<msg timestamp="20201117 14:48:30.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.148" endtime="20201117 14:48:30.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.439" endtime="20201117 14:48:30.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.447" endtime="20201117 14:48:30.448"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.145" endtime="20201117 14:48:30.449"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.144" endtime="20201117 14:48:30.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.453" level="INFO">${RESULT} = [{'time': 0.022864569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011027700000000237, 'source_diff': 0.00011027700000000237}, {'time': 0.022984597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:30.450" endtime="20201117 14:48:30.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:30.468" level="INFO">${ACCURACY} = {'diff': [0.00011027700000000237, 0.00011030499999999804, 0.00011073600000000017, 0.0001107220000000006, 0.00011031900000000108, 0.00011095899999999728, 0.00011119500000000143, 0.00011070899999999703,...</msg>
<status status="PASS" starttime="20201117 14:48:30.455" endtime="20201117 14:48:30.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.473" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201117 14:48:30.472" endtime="20201117 14:48:30.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.476" level="INFO">VALUE: [0.00011027700000000237, 0.00011030499999999804, 0.00011073600000000017, 0.0001107220000000006, 0.00011031900000000108, 0.00011095899999999728, 0.00011119500000000143, 0.00011070899999999703, 0.00011040300000000197, 0.00011038899999999893, 0.0001104020000000025, 0.00011033400000000013, 0.00011067999999999842, 0.00011054200000000167, 0.00011055600000000124, 0.00011041699999999807, 0.00011068100000000136, 0.00011030599999999752, 0.00011052699999999915, 0.00011111100000000054, 0.00011098600000000042, 0.00011045899999999678, 0.00011065300000000222, 0.00011101399999999956, 0.00011093100000000161, 0.00011033400000000013, 0.00011061100000000004, 0.00011029200000000142, 0.00011033300000000065, 0.00011081900000000158, 0.00011049999999999949, 0.00011030499999999804, 0.00011034700000000022, 0.00011119500000000143, 0.0001105280000000021, 0.00011058400000000038, 0.00011033400000000013, 0.00011024999999999924, 0.00011098599999999695, 0.00011076399999999931, 0.0001110549999999988, 0.00011061100000000004, 0.00011055600000000124, 0.00011027799999999838, 0.00011098599999999695, 0.00011105600000000174, 0.00011022299999999957, 0.00011043000000000164, 0.00011059700000000047, 0.00011051399999999906]</msg>
<status status="PASS" starttime="20201117 14:48:30.475" endtime="20201117 14:48:30.477"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.469" endtime="20201117 14:48:30.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.480" endtime="20201117 14:48:30.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.483" endtime="20201117 14:48:30.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.482" endtime="20201117 14:48:30.503"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.478" endtime="20201117 14:48:30.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.108" endtime="20201117 14:48:30.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.107" endtime="20201117 14:48:30.504"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.106" endtime="20201117 14:48:30.505"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.507" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.515" endtime="20201117 14:48:30.534"></status>
</kw>
<msg timestamp="20201117 14:48:30.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.513" endtime="20201117 14:48:30.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201117 14:48:30.536" endtime="20201117 14:48:30.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.538" endtime="20201117 14:48:30.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.511" endtime="20201117 14:48:30.540"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.509" endtime="20201117 14:48:30.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.547" endtime="20201117 14:48:30.832"></status>
</kw>
<msg timestamp="20201117 14:48:30.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.546" endtime="20201117 14:48:30.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201117 14:48:30.836" endtime="20201117 14:48:30.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.844" endtime="20201117 14:48:30.846"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.543" endtime="20201117 14:48:30.847"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.541" endtime="20201117 14:48:30.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201117 14:48:30.851" level="INFO">${RESULT} = [{'time': 0.022173222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011129099999999947, 'source_diff': 0.00011129099999999947}, {'time': 0.022292222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201117 14:48:30.848" endtime="20201117 14:48:30.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201117 14:48:30.864" level="INFO">${ACCURACY} = {'diff': [0.00011129099999999947, 0.00011215300000000025, 0.00011127799999999938, 0.0001117359999999977, 0.00011136100000000079, 0.00011163900000000018, 0.00011148600000000092, 0.000111209000000001, 0...</msg>
<status status="PASS" starttime="20201117 14:48:30.852" endtime="20201117 14:48:30.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.869" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201117 14:48:30.868" endtime="20201117 14:48:30.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201117 14:48:30.871" level="INFO">VALUE: [0.00011129099999999947, 0.00011215300000000025, 0.00011127799999999938, 0.0001117359999999977, 0.00011136100000000079, 0.00011163900000000018, 0.00011148600000000092, 0.000111209000000001, 0.00011133300000000165, 0.00011151300000000058, 0.00011137500000000036, 0.00011195800000000228, 0.00011155600000000224, 0.00011168099999999889, 0.0001122229999999981, 0.00011213900000000068, 0.00011213800000000121, 0.00011137500000000036, 0.0001120549999999998, 0.0001120549999999998, 0.00011211099999999807, 0.00011148599999999745, 0.0001115419999999992, 0.00011170800000000203, 0.00011219499999999896, 0.0001115549999999993, 0.00011179199999999945, 0.00011173600000000117, 0.00011211100000000154, 0.00011127799999999938, 0.00011134700000000122, 0.00011125000000000024, 0.00011176400000000031, 0.00011143100000000211, 0.0001117090000000015, 0.00011155599999999877, 0.00011195900000000175, 0.00011201300000000108, 0.0001114029999999995, 0.00011165299999999975, 0.00011198600000000142, 0.00011179200000000292, 0.00011159700000000147, 0.00011187500000000086, 0.00011137500000000036, 0.00011127800000000285, 0.00011219399999999949, 0.00011206899999999936, 0.00011187500000000086, 0.0001115549999999993]</msg>
<status status="PASS" starttime="20201117 14:48:30.870" endtime="20201117 14:48:30.871"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.865" endtime="20201117 14:48:30.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201117 14:48:30.874" endtime="20201117 14:48:30.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.878" endtime="20201117 14:48:30.897"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.876" endtime="20201117 14:48:30.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.872" endtime="20201117 14:48:30.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.507" endtime="20201117 14:48:30.898"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.506" endtime="20201117 14:48:30.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.505" endtime="20201117 14:48:30.899"></status>
</kw>
<status status="PASS" starttime="20201117 14:47:51.233" endtime="20201117 14:48:30.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201117 14:48:30.903" endtime="20201117 14:48:30.923"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.902" endtime="20201117 14:48:30.924"></status>
</kw>
<status status="PASS" starttime="20201117 14:48:30.900" endtime="20201117 14:48:30.924"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201117 14:47:48.138" endtime="20201117 14:48:30.924" critical="yes"></status>
</test>
<status status="PASS" starttime="20201117 14:47:00.972" endtime="20201117 14:48:30.928"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201117 14:46:49.722" endtime="20201117 14:48:30.941"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_arduino-due</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
