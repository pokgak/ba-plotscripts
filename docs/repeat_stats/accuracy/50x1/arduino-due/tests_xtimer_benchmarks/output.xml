<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 23:01:52.486" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.117" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:56.126" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:57.257" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:56.116" endtime="20201115 23:01:57.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.260" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:57.259" endtime="20201115 23:01:57.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.114" endtime="20201115 23:01:57.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.263" endtime="20201115 23:01:57.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.262" endtime="20201115 23:01:57.490"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.502" endtime="20201115 23:02:00.520"></status>
</kw>
<msg timestamp="20201115 23:02:00.521" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.501" endtime="20201115 23:02:00.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.523" endtime="20201115 23:02:00.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:00.529" endtime="20201115 23:02:00.535"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:57.498" endtime="20201115 23:02:00.536"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:57.496" endtime="20201115 23:02:00.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.495" endtime="20201115 23:02:00.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:00.546" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:00.544" endtime="20201115 23:02:00.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.540" endtime="20201115 23:02:00.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.494" endtime="20201115 23:02:00.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.493" endtime="20201115 23:02:00.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.549" endtime="20201115 23:02:00.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.492" endtime="20201115 23:02:00.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.555" endtime="20201115 23:02:00.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.490" endtime="20201115 23:02:00.559"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.112" endtime="20201115 23:02:00.560"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.573" endtime="20201115 23:02:00.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.570" endtime="20201115 23:02:00.596"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.624" endtime="20201115 23:02:03.649"></status>
</kw>
<msg timestamp="20201115 23:02:03.650" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.621" endtime="20201115 23:02:03.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.652" endtime="20201115 23:02:03.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:03.657" endtime="20201115 23:02:03.662"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:00.615" endtime="20201115 23:02:03.663"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:00.610" endtime="20201115 23:02:03.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.607" endtime="20201115 23:02:03.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:03.672" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:03.671" endtime="20201115 23:02:03.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.667" endtime="20201115 23:02:03.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.605" endtime="20201115 23:02:03.674"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.604" endtime="20201115 23:02:03.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.676" endtime="20201115 23:02:03.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.601" endtime="20201115 23:02:03.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.598" endtime="20201115 23:02:03.681"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.567" endtime="20201115 23:02:03.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.694" endtime="20201115 23:02:03.706"></status>
</kw>
<msg timestamp="20201115 23:02:03.706" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.692" endtime="20201115 23:02:03.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.708" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.707" endtime="20201115 23:02:03.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.710" endtime="20201115 23:02:03.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.688" endtime="20201115 23:02:03.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.683" endtime="20201115 23:02:03.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.717" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:02:03.715" endtime="20201115 23:02:03.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.719" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:02:03.718" endtime="20201115 23:02:03.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.713" endtime="20201115 23:02:03.719"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:00.561" endtime="20201115 23:02:03.720" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:52.601" endtime="20201115 23:02:03.724"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.778" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:02:03.786" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:02:04.855" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:02:03.777" endtime="20201115 23:02:04.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.859" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:02:04.857" endtime="20201115 23:02:04.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.775" endtime="20201115 23:02:04.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.862" endtime="20201115 23:02:05.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.860" endtime="20201115 23:02:05.082"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.094" endtime="20201115 23:02:08.115"></status>
</kw>
<msg timestamp="20201115 23:02:08.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.092" endtime="20201115 23:02:08.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.118" endtime="20201115 23:02:08.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:08.124" endtime="20201115 23:02:08.128"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:05.090" endtime="20201115 23:02:08.130"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:05.088" endtime="20201115 23:02:08.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.087" endtime="20201115 23:02:08.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:08.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:08.137" endtime="20201115 23:02:08.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.133" endtime="20201115 23:02:08.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.086" endtime="20201115 23:02:08.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.085" endtime="20201115 23:02:08.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.142" endtime="20201115 23:02:08.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.084" endtime="20201115 23:02:08.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.148" endtime="20201115 23:02:08.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.082" endtime="20201115 23:02:08.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.774" endtime="20201115 23:02:08.153"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.166" endtime="20201115 23:02:08.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.162" endtime="20201115 23:02:08.190"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.217" endtime="20201115 23:02:11.239"></status>
</kw>
<msg timestamp="20201115 23:02:11.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.214" endtime="20201115 23:02:11.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.243" endtime="20201115 23:02:11.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.252" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:11.248" endtime="20201115 23:02:11.253"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:08.208" endtime="20201115 23:02:11.254"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:08.203" endtime="20201115 23:02:11.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.201" endtime="20201115 23:02:11.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:11.264" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:11.262" endtime="20201115 23:02:11.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.258" endtime="20201115 23:02:11.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.199" endtime="20201115 23:02:11.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.198" endtime="20201115 23:02:11.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.267" endtime="20201115 23:02:11.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.195" endtime="20201115 23:02:11.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.192" endtime="20201115 23:02:11.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.159" endtime="20201115 23:02:11.273"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.280" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.299" endtime="20201115 23:02:11.315"></status>
</kw>
<msg timestamp="20201115 23:02:11.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.294" endtime="20201115 23:02:11.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.317" endtime="20201115 23:02:11.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.319" endtime="20201115 23:02:11.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.288" endtime="20201115 23:02:11.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.284" endtime="20201115 23:02:11.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.328" endtime="20201115 23:02:11.639"></status>
</kw>
<msg timestamp="20201115 23:02:11.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.122417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.122419958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.327" endtime="20201115 23:02:11.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.122417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.122419958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.643" endtime="20201115 23:02:11.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.651" endtime="20201115 23:02:11.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.324" endtime="20201115 23:02:11.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.322" endtime="20201115 23:02:11.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.659" level="INFO">${RESULT} = [{'time': 3.122419958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7770000001758888e-06, 'source_diff': 2.7770000001758888e-06}, {'time': 3.122429069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.655" endtime="20201115 23:02:11.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.673" level="INFO">${ACCURACY} = {'source_diff': [2.7770000001758888e-06, 3.1659999999433808e-06, 2.7639999999884424e-06, 3.5839999998898975e-06, 3.167000000026121e-06, 3.5689999999810595e-06, 3.1529999997559344e-06, 3.5700000000638e...</msg>
<status status="PASS" starttime="20201115 23:02:11.660" endtime="20201115 23:02:11.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.677" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.676" endtime="20201115 23:02:11.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.680" level="INFO">VALUE: [2.7770000001758888e-06, 3.1659999999433808e-06, 2.7639999999884424e-06, 3.5839999998898975e-06, 3.167000000026121e-06, 3.5689999999810595e-06, 3.1529999997559344e-06, 3.5700000000638e-06, 3.1799999997694783e-06, 3.1530000002000236e-06, 2.778000000258629e-06, 3.5689999999810595e-06, 3.5139999998712312e-06, 3.5689999999810595e-06, 2.750000000162345e-06, 3.181000000296308e-06, 2.7639999999884424e-06, 3.16600000038747e-06, 3.5689999999810595e-06, 3.1950000001224055e-06, 2.763000000349791e-06, 3.5980000001600843e-06, 3.5700000000638e-06, 3.5700000000638e-06, 3.5139999998712312e-06, 3.167000000026121e-06, 3.167000000026121e-06, 2.7770000001758888e-06, 3.5689999999810595e-06, 2.7639999999884424e-06, 3.167000000026121e-06, 3.1949999996783163e-06, 3.528000000141418e-06, 3.138999999929837e-06, 2.750000000162345e-06, 3.167000000026121e-06, 3.1809999998522187e-06, 3.167000000026121e-06, 3.5689999999810595e-06, 2.8059999999108243e-06, 3.1800000002135675e-06, 3.5700000000638e-06, 3.1800000002135675e-06, 2.7639999999884424e-06, 3.152000000117283e-06, 2.77799999981454e-06, 2.7639999999884424e-06, 2.762999999905702e-06, 3.528000000141418e-06, 3.167000000026121e-06]</msg>
<status status="PASS" starttime="20201115 23:02:11.679" endtime="20201115 23:02:11.680"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.674" endtime="20201115 23:02:11.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.683" endtime="20201115 23:02:11.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.686" endtime="20201115 23:02:11.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.685" endtime="20201115 23:02:11.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.681" endtime="20201115 23:02:11.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.281" endtime="20201115 23:02:11.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.277" endtime="20201115 23:02:11.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.276" endtime="20201115 23:02:11.708"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.710" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.719" endtime="20201115 23:02:11.732"></status>
</kw>
<msg timestamp="20201115 23:02:11.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.717" endtime="20201115 23:02:11.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.734" endtime="20201115 23:02:11.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.737" endtime="20201115 23:02:11.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.714" endtime="20201115 23:02:11.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.712" endtime="20201115 23:02:11.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.745" endtime="20201115 23:02:12.031"></status>
</kw>
<msg timestamp="20201115 23:02:12.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.744" endtime="20201115 23:02:12.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022519597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.035" endtime="20201115 23:02:12.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.044" endtime="20201115 23:02:12.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.741" endtime="20201115 23:02:12.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.740" endtime="20201115 23:02:12.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.050" level="INFO">${RESULT} = [{'time': 0.022523167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.57000000000135e-06, 'source_diff': 3.57000000000135e-06}, {'time': 0.022533292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:12.047" endtime="20201115 23:02:12.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.065" level="INFO">${ACCURACY} = {'source_diff': [3.57000000000135e-06, 4.375000000000906e-06, 4.791999999999991e-06, 4.389000000000476e-06, 3.597000000001016e-06, 4.027999999999671e-06, 4.403000000000046e-06, 4.403000000000046e-06, ...</msg>
<status status="PASS" starttime="20201115 23:02:12.051" endtime="20201115 23:02:12.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.069" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.068" endtime="20201115 23:02:12.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.072" level="INFO">VALUE: [3.57000000000135e-06, 4.375000000000906e-06, 4.791999999999991e-06, 4.389000000000476e-06, 3.597000000001016e-06, 4.027999999999671e-06, 4.403000000000046e-06, 4.403000000000046e-06, 4.3749999999974365e-06, 3.986000000000961e-06, 3.973000000000865e-06, 3.987000000000435e-06, 3.971999999997922e-06, 3.972000000001391e-06, 4.333000000002196e-06, 3.972000000001391e-06, 3.971999999997922e-06, 3.986000000000961e-06, 3.9859999999974915e-06, 4.805999999999561e-06, 3.972000000001391e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.5699999999978804e-06, 4.360999999997867e-06, 3.972000000001391e-06, 4.389000000000476e-06, 4.361000000001336e-06, 3.972000000001391e-06, 4.375000000000906e-06, 3.972000000001391e-06, 4.389000000000476e-06, 4.791999999999991e-06, 3.9999999999970615e-06, 4.3199999999986305e-06, 3.957999999998352e-06, 4.014000000000101e-06, 4.361000000001336e-06, 3.986000000000961e-06, 4.375000000000906e-06, 4.791999999999991e-06, 4.360999999997867e-06, 4.375000000000906e-06, 4.403000000000046e-06, 3.5829999999979767e-06, 4.389000000000476e-06, 4.014000000000101e-06, 4.3749999999974365e-06, 4.000000000000531e-06, 4.375000000000906e-06]</msg>
<status status="PASS" starttime="20201115 23:02:12.070" endtime="20201115 23:02:12.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.066" endtime="20201115 23:02:12.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.075" endtime="20201115 23:02:12.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.078" endtime="20201115 23:02:12.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.077" endtime="20201115 23:02:12.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.073" endtime="20201115 23:02:12.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.711" endtime="20201115 23:02:12.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.709" endtime="20201115 23:02:12.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.708" endtime="20201115 23:02:12.100"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.102" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.110" endtime="20201115 23:02:12.124"></status>
</kw>
<msg timestamp="20201115 23:02:12.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.108" endtime="20201115 23:02:12.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.126" endtime="20201115 23:02:12.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.129" endtime="20201115 23:02:12.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.106" endtime="20201115 23:02:12.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.104" endtime="20201115 23:02:12.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.138" endtime="20201115 23:02:12.422"></status>
</kw>
<msg timestamp="20201115 23:02:12.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.136" endtime="20201115 23:02:12.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.426" endtime="20201115 23:02:12.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.434" endtime="20201115 23:02:12.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.133" endtime="20201115 23:02:12.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.132" endtime="20201115 23:02:12.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.441" level="INFO">${RESULT} = [{'time': 0.022479903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.022491028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.437" endtime="20201115 23:02:12.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.455" level="INFO">${ACCURACY} = {'source_diff': [5.610999999999117e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.1949999999995056e-06, 4.778000000000421e-06, 4.778000000000421e-06, 5.207999999999602e-06, 5.235999999998742e-06...</msg>
<status status="PASS" starttime="20201115 23:02:12.442" endtime="20201115 23:02:12.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.460" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.459" endtime="20201115 23:02:12.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.462" level="INFO">VALUE: [5.610999999999117e-06, 5.596999999999547e-06, 5.596999999999547e-06, 5.1949999999995056e-06, 4.778000000000421e-06, 4.778000000000421e-06, 5.207999999999602e-06, 5.235999999998742e-06, 5.556000000000311e-06, 5.180000000000462e-06, 5.610999999999117e-06, 5.569999999999881e-06, 5.542000000000741e-06, 5.582999999999977e-06, 5.236000000002211e-06, 5.1949999999995056e-06, 5.611000000002586e-06, 5.59800000000249e-06, 4.777999999996951e-06, 5.610999999999117e-06, 5.194000000000032e-06, 5.596999999999547e-06, 5.180000000000462e-06, 5.1949999999995056e-06, 4.805000000000087e-06, 5.207999999999602e-06, 5.180000000000462e-06, 5.207999999999602e-06, 5.139000000001226e-06, 4.778000000000421e-06, 4.7499999999978115e-06, 5.596999999999547e-06, 4.805000000000087e-06, 5.125000000001656e-06, 4.778000000000421e-06, 5.180999999999936e-06, 4.778000000000421e-06, 5.180999999999936e-06, 5.194000000000032e-06, 5.2089999999990755e-06, 5.194000000000032e-06, 5.610999999999117e-06, 5.596999999999547e-06, 5.194000000000032e-06, 5.569999999999881e-06, 5.5839999999994505e-06, 5.167000000000366e-06, 5.180999999999936e-06, 5.1949999999995056e-06, 5.61199999999859e-06]</msg>
<status status="PASS" starttime="20201115 23:02:12.461" endtime="20201115 23:02:12.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.456" endtime="20201115 23:02:12.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.465" endtime="20201115 23:02:12.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.469" endtime="20201115 23:02:12.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.467" endtime="20201115 23:02:12.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.464" endtime="20201115 23:02:12.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.102" endtime="20201115 23:02:12.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.101" endtime="20201115 23:02:12.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.100" endtime="20201115 23:02:12.490"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.493" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.501" endtime="20201115 23:02:12.515"></status>
</kw>
<msg timestamp="20201115 23:02:12.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.499" endtime="20201115 23:02:12.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.516" endtime="20201115 23:02:12.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.519" endtime="20201115 23:02:12.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.497" endtime="20201115 23:02:12.521"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.495" endtime="20201115 23:02:12.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.528" endtime="20201115 23:02:12.825"></status>
</kw>
<msg timestamp="20201115 23:02:12.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.527" endtime="20201115 23:02:12.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.829" endtime="20201115 23:02:12.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.837" endtime="20201115 23:02:12.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.524" endtime="20201115 23:02:12.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.522" endtime="20201115 23:02:12.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.844" level="INFO">${RESULT} = [{'time': 0.021714417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.021725625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:12.840" endtime="20201115 23:02:12.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.857" level="INFO">${ACCURACY} = {'source_diff': [5.5839999999994505e-06, 6.443999999997813e-06, 6.415999999998673e-06, 6.401999999999103e-06, 6.014000000002101e-06, 5.999999999999062e-06, 6.389000000002476e-06, 6.401999999999103e-06...</msg>
<status status="PASS" starttime="20201115 23:02:12.845" endtime="20201115 23:02:12.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.862" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.861" endtime="20201115 23:02:12.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.864" level="INFO">VALUE: [5.5839999999994505e-06, 6.443999999997813e-06, 6.415999999998673e-06, 6.401999999999103e-06, 6.014000000002101e-06, 5.999999999999062e-06, 6.389000000002476e-06, 6.401999999999103e-06, 6.000000000002531e-06, 6.416999999998146e-06, 6.417000000001616e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 5.596999999999547e-06, 5.985999999999492e-06, 6.416999999998146e-06, 5.999999999999062e-06, 5.999999999999062e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.443999999997813e-06, 6.401999999999103e-06, 5.597000000003016e-06, 6.417000000001616e-06, 6.346999999996827e-06, 6.403000000002046e-06, 6.028000000001671e-06, 6.4029999999985765e-06, 5.596999999999547e-06, 6.000000000002531e-06, 6.416000000002142e-06, 5.999999999999062e-06, 5.569000000000407e-06, 6.4029999999985765e-06, 5.985999999999492e-06, 6.403000000002046e-06, 5.999999999999062e-06, 6.4029999999985765e-06, 5.999999999999062e-06, 5.999999999999062e-06, 6.4029999999985765e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.556000000000311e-06, 5.597000000003016e-06, 5.985999999999492e-06, 5.5839999999994505e-06, 6.000000000002531e-06, 6.0139999999986316e-06, 6.415999999998673e-06]</msg>
<status status="PASS" starttime="20201115 23:02:12.863" endtime="20201115 23:02:12.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.858" endtime="20201115 23:02:12.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.867" endtime="20201115 23:02:12.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.871" endtime="20201115 23:02:12.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.869" endtime="20201115 23:02:12.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.866" endtime="20201115 23:02:12.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.493" endtime="20201115 23:02:12.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.491" endtime="20201115 23:02:12.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.491" endtime="20201115 23:02:12.892"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.903" endtime="20201115 23:02:12.917"></status>
</kw>
<msg timestamp="20201115 23:02:12.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.901" endtime="20201115 23:02:12.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.919" endtime="20201115 23:02:12.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.921" endtime="20201115 23:02:12.923"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.898" endtime="20201115 23:02:12.924"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.896" endtime="20201115 23:02:12.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.931" endtime="20201115 23:02:13.217"></status>
</kw>
<msg timestamp="20201115 23:02:13.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.929" endtime="20201115 23:02:13.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.221" endtime="20201115 23:02:13.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.229" endtime="20201115 23:02:13.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.927" endtime="20201115 23:02:13.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.925" endtime="20201115 23:02:13.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.236" level="INFO">${RESULT} = [{'time': 0.021989264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.022000083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:13.233" endtime="20201115 23:02:13.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.250" level="INFO">${ACCURACY} = {'source_diff': [7.208000000001602e-06, 7.179999999998993e-06, 6.819000000001657e-06, 7.639000000000257e-06, 7.236000000000742e-06, 7.625000000000687e-06, 6.790999999999048e-06, 7.625000000000687e-06,...</msg>
<status status="PASS" starttime="20201115 23:02:13.237" endtime="20201115 23:02:13.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.254" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.253" endtime="20201115 23:02:13.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.257" level="INFO">VALUE: [7.208000000001602e-06, 7.179999999998993e-06, 6.819000000001657e-06, 7.639000000000257e-06, 7.236000000000742e-06, 7.625000000000687e-06, 6.790999999999048e-06, 7.625000000000687e-06, 7.180999999998466e-06, 7.208000000001602e-06, 6.819000000001657e-06, 7.222999999997176e-06, 7.611000000001117e-06, 6.820000000001131e-06, 6.861000000000367e-06, 7.222000000001172e-06, 7.208999999997606e-06, 6.792000000001991e-06, 6.833999999997231e-06, 6.790999999999048e-06, 6.736000000000242e-06, 7.208000000001602e-06, 6.806000000001561e-06, 6.874999999999937e-06, 7.2230000000006456e-06, 7.2219999999977025e-06, 7.153000000002796e-06, 7.263000000000408e-06, 7.2219999999977025e-06, 7.2230000000006456e-06, 7.665999999999923e-06, 7.639000000000257e-06, 7.236000000000742e-06, 7.222000000001172e-06, 6.819999999997661e-06, 7.625000000000687e-06, 7.194000000002032e-06, 6.874999999999937e-06, 6.805000000002087e-06, 7.2219999999977025e-06, 6.820000000001131e-06, 6.792000000001991e-06, 7.625000000000687e-06, 7.639000000000257e-06, 6.819999999997661e-06, 6.874999999999937e-06, 7.625000000000687e-06, 7.193999999998563e-06, 7.2079999999981326e-06, 6.833000000001227e-06]</msg>
<status status="PASS" starttime="20201115 23:02:13.255" endtime="20201115 23:02:13.257"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.250" endtime="20201115 23:02:13.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.260" endtime="20201115 23:02:13.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.263" endtime="20201115 23:02:13.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.262" endtime="20201115 23:02:13.283"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.258" endtime="20201115 23:02:13.284"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.895" endtime="20201115 23:02:13.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.893" endtime="20201115 23:02:13.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.892" endtime="20201115 23:02:13.285"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.287" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.296" endtime="20201115 23:02:13.310"></status>
</kw>
<msg timestamp="20201115 23:02:13.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.294" endtime="20201115 23:02:13.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.312" endtime="20201115 23:02:13.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.314" endtime="20201115 23:02:13.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.291" endtime="20201115 23:02:13.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.289" endtime="20201115 23:02:13.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.323" endtime="20201115 23:02:13.629"></status>
</kw>
<msg timestamp="20201115 23:02:13.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.322" endtime="20201115 23:02:13.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022250514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.633" endtime="20201115 23:02:13.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.641" endtime="20201115 23:02:13.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.319" endtime="20201115 23:02:13.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.318" endtime="20201115 23:02:13.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.648" level="INFO">${RESULT} = [{'time': 0.022250514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.625000000000687e-06, 'source_diff': 7.625000000000687e-06}, {'time': 0.022261583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:13.644" endtime="20201115 23:02:13.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.661" level="INFO">${ACCURACY} = {'source_diff': [7.625000000000687e-06, 8.000000000001062e-06, 8.028000000000202e-06, 8.014000000000632e-06, 8.028000000000202e-06, 7.625000000000687e-06, 8.014000000000632e-06, 8.417000000000147e-06,...</msg>
<status status="PASS" starttime="20201115 23:02:13.649" endtime="20201115 23:02:13.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.666" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.665" endtime="20201115 23:02:13.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.668" level="INFO">VALUE: [7.625000000000687e-06, 8.000000000001062e-06, 8.028000000000202e-06, 8.014000000000632e-06, 8.028000000000202e-06, 7.625000000000687e-06, 8.014000000000632e-06, 8.417000000000147e-06, 7.5969999999980775e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.388999999997537e-06, 8.430000000000243e-06, 8.444999999999286e-06, 8.430000000000243e-06, 7.624999999997217e-06, 7.611000000001117e-06, 8.013999999997162e-06, 7.568999999998938e-06, 8.430999999999716e-06, 8.07000000000238e-06, 7.6120000000005905e-06, 8.430000000000243e-06, 8.430999999999716e-06, 8.027000000000728e-06, 7.527999999999702e-06, 8.041000000000298e-06, 8.416000000000673e-06, 8.028000000000202e-06, 8.415999999997203e-06, 8.041000000000298e-06, 7.542000000002741e-06, 8.013999999997162e-06, 8.430000000000243e-06, 8.431000000003186e-06, 8.445000000002756e-06, 7.6120000000005905e-06, 8.443999999999813e-06, 8.028000000000202e-06, 8.402999999997107e-06, 8.443999999999813e-06, 8.431000000003186e-06, 8.028000000000202e-06, 8.430999999999716e-06, 8.402999999997107e-06, 8.028000000000202e-06, 8.028000000000202e-06, 7.639000000000257e-06, 8.028000000000202e-06, 8.415999999997203e-06]</msg>
<status status="PASS" starttime="20201115 23:02:13.667" endtime="20201115 23:02:13.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.662" endtime="20201115 23:02:13.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.672" endtime="20201115 23:02:13.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.676" endtime="20201115 23:02:13.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.674" endtime="20201115 23:02:13.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.670" endtime="20201115 23:02:13.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.288" endtime="20201115 23:02:13.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.286" endtime="20201115 23:02:13.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.285" endtime="20201115 23:02:13.697"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.699" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.707" endtime="20201115 23:02:13.723"></status>
</kw>
<msg timestamp="20201115 23:02:13.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.706" endtime="20201115 23:02:13.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.725" endtime="20201115 23:02:13.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.728" endtime="20201115 23:02:13.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.703" endtime="20201115 23:02:13.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.701" endtime="20201115 23:02:13.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.737" endtime="20201115 23:02:14.021"></status>
</kw>
<msg timestamp="20201115 23:02:14.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023265319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.735" endtime="20201115 23:02:14.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023265319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023274556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.026" endtime="20201115 23:02:14.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.034" endtime="20201115 23:02:14.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.733" endtime="20201115 23:02:14.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.731" endtime="20201115 23:02:14.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.041" level="INFO">${RESULT} = [{'time': 0.023274556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.236999999998746e-06, 'source_diff': 9.236999999998746e-06}, {'time': 0.023290778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.037" endtime="20201115 23:02:14.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.055" level="INFO">${ACCURACY} = {'source_diff': [9.236999999998746e-06, 9.236000000002742e-06, 9.624999999999218e-06, 8.847000000002797e-06, 9.652000000002353e-06, 9.235999999999273e-06, 9.263999999998412e-06, 8.818999999996718e-06,...</msg>
<status status="PASS" starttime="20201115 23:02:14.042" endtime="20201115 23:02:14.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.060" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.059" endtime="20201115 23:02:14.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.063" level="INFO">VALUE: [9.236999999998746e-06, 9.236000000002742e-06, 9.624999999999218e-06, 8.847000000002797e-06, 9.652000000002353e-06, 9.235999999999273e-06, 9.263999999998412e-06, 8.818999999996718e-06, 9.638999999998787e-06, 8.806000000000092e-06, 9.263999999998412e-06, 9.249999999998842e-06, 8.846999999999328e-06, 8.847999999998801e-06, 9.221999999999703e-06, 8.832999999999758e-06, 9.235999999999273e-06, 9.222999999999176e-06, 8.833999999999231e-06, 9.667000000001397e-06, 8.832999999999758e-06, 8.846999999999328e-06, 9.651999999998884e-06, 8.8340000000027e-06, 8.833999999999231e-06, 9.652999999998357e-06, 9.235999999999273e-06, 9.653000000001827e-06, 8.792000000000522e-06, 8.833000000003227e-06, 9.653000000001827e-06, 8.819999999999661e-06, 9.237000000002216e-06, 9.236999999998746e-06, 8.749999999998342e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.833000000003227e-06, 8.875000000001937e-06, 9.277000000001978e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.235999999999273e-06, 9.305000000001118e-06, 9.235999999999273e-06, 9.250000000002312e-06, 9.237000000002216e-06, 8.832999999999758e-06]</msg>
<status status="PASS" starttime="20201115 23:02:14.061" endtime="20201115 23:02:14.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.056" endtime="20201115 23:02:14.064"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.066" endtime="20201115 23:02:14.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.070" endtime="20201115 23:02:14.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.068" endtime="20201115 23:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.064" endtime="20201115 23:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.700" endtime="20201115 23:02:14.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.698" endtime="20201115 23:02:14.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.697" endtime="20201115 23:02:14.091"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.093" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.101" endtime="20201115 23:02:14.117"></status>
</kw>
<msg timestamp="20201115 23:02:14.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.100" endtime="20201115 23:02:14.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.118" endtime="20201115 23:02:14.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.121" endtime="20201115 23:02:14.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.097" endtime="20201115 23:02:14.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.095" endtime="20201115 23:02:14.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.130" endtime="20201115 23:02:14.414"></status>
</kw>
<msg timestamp="20201115 23:02:14.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.128" endtime="20201115 23:02:14.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.419" endtime="20201115 23:02:14.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.427" endtime="20201115 23:02:14.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.126" endtime="20201115 23:02:14.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.124" endtime="20201115 23:02:14.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.434" level="INFO">${RESULT} = [{'time': 0.022614917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.022629167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.430" endtime="20201115 23:02:14.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.448" level="INFO">${ACCURACY} = {'source_diff': [1.0027999999998732e-05, 1.0041999999998302e-05, 1.0444000000001813e-05, 9.667000000001397e-06, 1.0055999999997872e-05, 9.639000000002257e-06, 1.0443999999998343e-05, 9.652999999998357...</msg>
<status status="PASS" starttime="20201115 23:02:14.435" endtime="20201115 23:02:14.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.452" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.451" endtime="20201115 23:02:14.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.455" level="INFO">VALUE: [1.0027999999998732e-05, 1.0041999999998302e-05, 1.0444000000001813e-05, 9.667000000001397e-06, 1.0055999999997872e-05, 9.639000000002257e-06, 1.0443999999998343e-05, 9.652999999998357e-06, 1.0457999999997913e-05, 1.0041999999998302e-05, 1.0457999999997913e-05, 1.0444999999997817e-05, 1.0124999999999718e-05, 1.0055000000001868e-05, 9.638999999998787e-06, 1.0042000000001772e-05, 1.0055000000001868e-05, 9.638999999998787e-06, 1.0457999999997913e-05, 1.0041999999998302e-05, 9.639000000002257e-06, 1.0430999999998247e-05, 1.0459000000000857e-05, 1.0445000000001287e-05, 9.624999999999218e-06, 1.0431000000001717e-05, 1.0027999999998732e-05, 1.0056000000001342e-05, 1.0445000000001287e-05, 1.0042000000001772e-05, 1.0457999999997913e-05, 1.0055999999997872e-05, 1.0040999999998829e-05, 1.0097000000000578e-05, 9.625000000002687e-06, 1.0027999999998732e-05, 1.0457999999997913e-05, 1.0055999999997872e-05, 1.0026999999999259e-05, 1.0459000000000857e-05, 9.667000000001397e-06, 1.0070000000000912e-05, 1.0013999999999162e-05, 9.653000000001827e-06, 1.0040999999998829e-05, 1.0458999999997387e-05, 9.680000000001493e-06, 9.639000000002257e-06, 9.986999999999496e-06, 1.0430000000002243e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.453" endtime="20201115 23:02:14.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.449" endtime="20201115 23:02:14.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.458" endtime="20201115 23:02:14.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.461" endtime="20201115 23:02:14.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.460" endtime="20201115 23:02:14.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.456" endtime="20201115 23:02:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.094" endtime="20201115 23:02:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.092" endtime="20201115 23:02:14.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.091" endtime="20201115 23:02:14.483"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.485" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.493" endtime="20201115 23:02:14.508"></status>
</kw>
<msg timestamp="20201115 23:02:14.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.492" endtime="20201115 23:02:14.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.510" endtime="20201115 23:02:14.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.513" endtime="20201115 23:02:14.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.489" endtime="20201115 23:02:14.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.487" endtime="20201115 23:02:14.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.522" endtime="20201115 23:02:14.808"></status>
</kw>
<msg timestamp="20201115 23:02:14.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.520" endtime="20201115 23:02:14.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.812" endtime="20201115 23:02:14.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.821" endtime="20201115 23:02:14.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.518" endtime="20201115 23:02:14.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.516" endtime="20201115 23:02:14.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.827" level="INFO">${RESULT} = [{'time': 0.022784389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.022797708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.824" endtime="20201115 23:02:14.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.841" level="INFO">${ACCURACY} = {'source_diff': [1.1263999999996943e-05, 1.0861000000000898e-05, 1.0847000000001328e-05, 1.1264000000000413e-05, 1.1194000000002563e-05, 1.1291000000000079e-05, 1.1666999999999927e-05, 1.1666999999999...</msg>
<status status="PASS" starttime="20201115 23:02:14.828" endtime="20201115 23:02:14.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.846" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.844" endtime="20201115 23:02:14.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.848" level="INFO">VALUE: [1.1263999999996943e-05, 1.0861000000000898e-05, 1.0847000000001328e-05, 1.1264000000000413e-05, 1.1194000000002563e-05, 1.1291000000000079e-05, 1.1666999999999927e-05, 1.1666999999999927e-05, 1.1264000000000413e-05, 1.1652000000000884e-05, 1.0832999999998288e-05, 1.0430999999998247e-05, 1.1264000000000413e-05, 1.0875000000000468e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.0848000000000801e-05, 1.1235999999997803e-05, 1.1264000000000413e-05, 1.0862000000000371e-05, 1.126299999999747e-05, 1.0847999999997332e-05, 1.0846999999997858e-05, 1.0861999999996902e-05, 1.1264000000000413e-05, 1.1639000000000788e-05, 1.1222000000001703e-05, 1.1653000000000358e-05, 1.0860999999997428e-05, 1.0861000000000898e-05, 1.1666999999999927e-05, 1.0861000000000898e-05, 1.0834000000001232e-05, 1.0861000000000898e-05, 1.1264000000000413e-05, 1.0875000000000468e-05, 1.0861000000000898e-05, 1.0861000000000898e-05, 1.1250000000000843e-05, 1.1235999999997803e-05, 1.1735999999998303e-05, 1.1277999999999982e-05, 1.1693999999999594e-05, 1.0444000000001813e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1250000000000843e-05, 1.1693999999999594e-05, 1.0875000000000468e-05, 1.1291999999999552e-05]</msg>
<status status="PASS" starttime="20201115 23:02:14.847" endtime="20201115 23:02:14.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.842" endtime="20201115 23:02:14.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.851" endtime="20201115 23:02:14.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.855" endtime="20201115 23:02:14.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.853" endtime="20201115 23:02:14.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.850" endtime="20201115 23:02:14.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.486" endtime="20201115 23:02:14.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.484" endtime="20201115 23:02:14.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.483" endtime="20201115 23:02:14.876"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.878" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.886" endtime="20201115 23:02:14.901"></status>
</kw>
<msg timestamp="20201115 23:02:14.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.885" endtime="20201115 23:02:14.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.903" endtime="20201115 23:02:14.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.905" endtime="20201115 23:02:14.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.882" endtime="20201115 23:02:14.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.880" endtime="20201115 23:02:14.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.915" endtime="20201115 23:02:15.201"></status>
</kw>
<msg timestamp="20201115 23:02:15.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.913" endtime="20201115 23:02:15.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022799167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.205" endtime="20201115 23:02:15.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.213" endtime="20201115 23:02:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.910" endtime="20201115 23:02:15.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.908" endtime="20201115 23:02:15.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.220" level="INFO">${RESULT} = [{'time': 0.022799167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2083999999999012e-05, 'source_diff': 1.2083999999999012e-05}, {'time': 0.022813944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.217" endtime="20201115 23:02:15.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.233" level="INFO">${ACCURACY} = {'source_diff': [1.2083999999999012e-05, 1.1652000000000884e-05, 1.1652000000000884e-05, 1.2055000000000399e-05, 1.2485999999999053e-05, 1.2110999999998678e-05, 1.2458999999999387e-05, 1.2082999999999...</msg>
<status status="PASS" starttime="20201115 23:02:15.221" endtime="20201115 23:02:15.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.238" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.237" endtime="20201115 23:02:15.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.241" level="INFO">VALUE: [1.2083999999999012e-05, 1.1652000000000884e-05, 1.1652000000000884e-05, 1.2055000000000399e-05, 1.2485999999999053e-05, 1.2110999999998678e-05, 1.2458999999999387e-05, 1.2082999999999539e-05, 1.2068999999999969e-05, 1.2069999999999442e-05, 1.2027000000001259e-05, 1.2013999999997693e-05, 1.2068999999999969e-05, 1.205499999999693e-05, 1.2083999999999012e-05, 1.2485999999999053e-05, 1.2068999999999969e-05, 1.1638999999997318e-05, 1.1611999999997652e-05, 1.2430000000000774e-05, 1.2068999999999969e-05, 1.2471999999999483e-05, 1.2084000000002482e-05, 1.2096999999999108e-05, 1.1680999999999497e-05, 1.2068999999999969e-05, 1.1667000000003397e-05, 1.2458999999999387e-05, 1.1652000000000884e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2430000000000774e-05, 1.2068999999999969e-05, 1.1639000000000788e-05, 1.2472000000002953e-05, 1.2069999999999442e-05, 1.2111999999998152e-05, 1.2069999999999442e-05, 1.2028000000000733e-05, 1.2082999999999539e-05, 1.2083000000003008e-05, 1.2472999999998957e-05, 1.2444000000000344e-05, 1.2471999999999483e-05, 1.2472999999998957e-05, 1.1680999999999497e-05, 1.1666999999999927e-05, 1.1666999999999927e-05, 1.1680999999999497e-05, 1.2069999999999442e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.239" endtime="20201115 23:02:15.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.234" endtime="20201115 23:02:15.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.244" endtime="20201115 23:02:15.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.247" endtime="20201115 23:02:15.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.246" endtime="20201115 23:02:15.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.242" endtime="20201115 23:02:15.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.879" endtime="20201115 23:02:15.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.877" endtime="20201115 23:02:15.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.876" endtime="20201115 23:02:15.268"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.271" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.279" endtime="20201115 23:02:15.294"></status>
</kw>
<msg timestamp="20201115 23:02:15.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.277" endtime="20201115 23:02:15.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.296" endtime="20201115 23:02:15.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.299" endtime="20201115 23:02:15.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.275" endtime="20201115 23:02:15.301"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.273" endtime="20201115 23:02:15.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.308" endtime="20201115 23:02:15.595"></status>
</kw>
<msg timestamp="20201115 23:02:15.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023723083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023736361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.307" endtime="20201115 23:02:15.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023723083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023736361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.599" endtime="20201115 23:02:15.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.608" endtime="20201115 23:02:15.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.304" endtime="20201115 23:02:15.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.302" endtime="20201115 23:02:15.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.614" level="INFO">${RESULT} = [{'time': 0.023736361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3278000000001983e-05, 'source_diff': 1.3278000000001983e-05}, {'time': 0.023756403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.611" endtime="20201115 23:02:15.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.629" level="INFO">${ACCURACY} = {'source_diff': [1.3278000000001983e-05, 1.3666999999998458e-05, 1.3695000000001067e-05, 1.3693999999998124e-05, 1.2500000000002093e-05, 1.2860999999999428e-05, 1.3277999999998513e-05, 1.3666999999998...</msg>
<status status="PASS" starttime="20201115 23:02:15.615" endtime="20201115 23:02:15.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.634" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.633" endtime="20201115 23:02:15.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.636" level="INFO">VALUE: [1.3278000000001983e-05, 1.3666999999998458e-05, 1.3695000000001067e-05, 1.3693999999998124e-05, 1.2500000000002093e-05, 1.2860999999999428e-05, 1.3277999999998513e-05, 1.3666999999998458e-05, 1.3278000000001983e-05, 1.2902000000002134e-05, 1.3291999999998083e-05, 1.2874999999998998e-05, 1.3695000000001067e-05, 1.2875000000002468e-05, 1.3222999999999707e-05, 1.3292000000001553e-05, 1.2833000000000289e-05, 1.329099999999861e-05, 1.2889000000002038e-05, 1.2833000000000289e-05, 1.2513999999998193e-05, 1.3319999999997223e-05, 1.2903000000001608e-05, 1.2860999999999428e-05, 1.2819000000000719e-05, 1.2847999999999332e-05, 1.3695000000001067e-05, 1.2874999999998998e-05, 1.2916999999997708e-05, 1.2875000000002468e-05, 1.2847999999999332e-05, 1.2569999999999942e-05, 1.3292000000001553e-05, 1.3292000000001553e-05, 1.2902999999998138e-05, 1.2889000000002038e-05, 1.2458999999999387e-05, 1.3277999999998513e-05, 1.3278000000001983e-05, 1.2903000000001608e-05, 1.3249999999999373e-05, 1.2473000000002427e-05, 1.2874999999998998e-05, 1.3277999999998513e-05, 1.2471999999999483e-05, 1.2874999999998998e-05, 1.2875000000002468e-05, 1.2888000000002564e-05, 1.2861999999998902e-05, 1.3291999999998083e-05]</msg>
<status status="PASS" starttime="20201115 23:02:15.635" endtime="20201115 23:02:15.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.630" endtime="20201115 23:02:15.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.639" endtime="20201115 23:02:15.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.643" endtime="20201115 23:02:15.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.641" endtime="20201115 23:02:15.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.638" endtime="20201115 23:02:15.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.271" endtime="20201115 23:02:15.663"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.270" endtime="20201115 23:02:15.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.269" endtime="20201115 23:02:15.664"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.666" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.675" endtime="20201115 23:02:15.691"></status>
</kw>
<msg timestamp="20201115 23:02:15.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.673" endtime="20201115 23:02:15.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.692" endtime="20201115 23:02:15.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.695" endtime="20201115 23:02:15.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.671" endtime="20201115 23:02:15.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.668" endtime="20201115 23:02:15.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.704" endtime="20201115 23:02:15.990"></status>
</kw>
<msg timestamp="20201115 23:02:15.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.702" endtime="20201115 23:02:15.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023231931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.994" endtime="20201115 23:02:16.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.003" endtime="20201115 23:02:16.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.700" endtime="20201115 23:02:16.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.698" endtime="20201115 23:02:16.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.010" level="INFO">${RESULT} = [{'time': 0.023246444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.451300000000072e-05, 'source_diff': 1.451300000000072e-05}, {'time': 0.023266417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:16.006" endtime="20201115 23:02:16.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.023" level="INFO">${ACCURACY} = {'source_diff': [1.451300000000072e-05, 1.4500000000000624e-05, 1.4443999999998874e-05, 1.4111000000000679e-05, 1.4111000000000679e-05, 1.4527999999999763e-05, 1.3707999999997694e-05, 1.45130000000007...</msg>
<status status="PASS" starttime="20201115 23:02:16.011" endtime="20201115 23:02:16.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.028" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.027" endtime="20201115 23:02:16.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.030" level="INFO">VALUE: [1.451300000000072e-05, 1.4500000000000624e-05, 1.4443999999998874e-05, 1.4111000000000679e-05, 1.4111000000000679e-05, 1.4527999999999763e-05, 1.3707999999997694e-05, 1.451300000000072e-05, 1.4112000000000152e-05, 1.4098000000000582e-05, 1.4444000000002344e-05, 1.4166999999998958e-05, 1.4083000000001539e-05, 1.4500000000000624e-05, 1.4097000000001109e-05, 1.3749999999999873e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4084000000001012e-05, 1.3708000000001164e-05, 1.408299999999807e-05, 1.4166999999998958e-05, 1.3708000000001164e-05, 1.3693999999998124e-05, 1.409699999999764e-05, 1.4569999999998473e-05, 1.3681000000001498e-05, 1.3681000000001498e-05, 1.4500000000000624e-05, 1.4527999999999763e-05, 1.4500000000000624e-05, 1.3667000000001928e-05, 1.4500000000000624e-05, 1.3679999999998554e-05, 1.4500000000000624e-05, 1.4097000000001109e-05, 1.4500000000000624e-05, 1.4110999999997209e-05, 1.4069999999997973e-05, 1.4527999999999763e-05, 1.4112000000000152e-05, 1.4083000000001539e-05, 1.4098000000000582e-05, 1.4471999999998014e-05, 1.4098000000000582e-05, 1.409699999999764e-05, 1.4097000000001109e-05, 1.4499999999997154e-05, 1.4151999999999915e-05, 1.4097000000001109e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.029" endtime="20201115 23:02:16.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.024" endtime="20201115 23:02:16.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.033" endtime="20201115 23:02:16.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.037" endtime="20201115 23:02:16.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.035" endtime="20201115 23:02:16.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.032" endtime="20201115 23:02:16.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.667" endtime="20201115 23:02:16.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.665" endtime="20201115 23:02:16.058"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.664" endtime="20201115 23:02:16.059"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.061" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.069" endtime="20201115 23:02:16.084"></status>
</kw>
<msg timestamp="20201115 23:02:16.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.068" endtime="20201115 23:02:16.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.086" endtime="20201115 23:02:16.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.088" endtime="20201115 23:02:16.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.065" endtime="20201115 23:02:16.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.063" endtime="20201115 23:02:16.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.097" endtime="20201115 23:02:16.383"></status>
</kw>
<msg timestamp="20201115 23:02:16.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.096" endtime="20201115 23:02:16.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021959708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.387" endtime="20201115 23:02:16.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.395" endtime="20201115 23:02:16.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.093" endtime="20201115 23:02:16.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.091" endtime="20201115 23:02:16.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.402" level="INFO">${RESULT} = [{'time': 0.021974611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4903000000000138e-05, 'source_diff': 1.4903000000000138e-05}, {'time': 0.021992931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.399" endtime="20201115 23:02:16.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.416" level="INFO">${ACCURACY} = {'source_diff': [1.4903000000000138e-05, 1.5348000000001832e-05, 1.4889000000000568e-05, 1.4889000000000568e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.4903000000000138e-05, 1.490199999999719...</msg>
<status status="PASS" starttime="20201115 23:02:16.403" endtime="20201115 23:02:16.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.420" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.419" endtime="20201115 23:02:16.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.423" level="INFO">VALUE: [1.4903000000000138e-05, 1.5348000000001832e-05, 1.4889000000000568e-05, 1.4889000000000568e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.4903000000000138e-05, 1.4901999999997195e-05, 1.4916999999999708e-05, 1.4958000000002414e-05, 1.4903000000000138e-05, 1.5250000000001374e-05, 1.4889000000000568e-05, 1.530500000000018e-05, 1.5319999999999223e-05, 1.530500000000018e-05, 1.5305999999999653e-05, 1.530500000000018e-05, 1.5305999999999653e-05, 1.4903000000000138e-05, 1.531899999999975e-05, 1.529100000000061e-05, 1.4916000000000235e-05, 1.4903000000000138e-05, 1.5319999999999223e-05, 1.5707999999999694e-05, 1.4903000000000138e-05, 1.4458000000001914e-05, 1.4943999999999374e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.5721999999999264e-05, 1.529100000000061e-05, 1.5347999999998363e-05, 1.530500000000018e-05, 1.4916000000000235e-05, 1.5721999999999264e-05, 1.536099999999846e-05, 1.4916000000000235e-05, 1.531899999999975e-05, 1.538900000000107e-05, 1.4929999999999805e-05, 1.5305999999999653e-05, 1.4889000000000568e-05, 1.5721999999999264e-05, 1.4916999999999708e-05, 1.4903000000000138e-05, 1.530500000000018e-05, 1.530500000000018e-05, 1.4887999999997625e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.421" endtime="20201115 23:02:16.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.417" endtime="20201115 23:02:16.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.426" endtime="20201115 23:02:16.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.430" endtime="20201115 23:02:16.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.428" endtime="20201115 23:02:16.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.425" endtime="20201115 23:02:16.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.062" endtime="20201115 23:02:16.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.060" endtime="20201115 23:02:16.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.059" endtime="20201115 23:02:16.451"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.453" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.461" endtime="20201115 23:02:16.477"></status>
</kw>
<msg timestamp="20201115 23:02:16.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.460" endtime="20201115 23:02:16.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.478" endtime="20201115 23:02:16.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.481" endtime="20201115 23:02:16.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.457" endtime="20201115 23:02:16.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.455" endtime="20201115 23:02:16.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.490" endtime="20201115 23:02:16.775"></status>
</kw>
<msg timestamp="20201115 23:02:16.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.488" endtime="20201115 23:02:16.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.779" endtime="20201115 23:02:16.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.787" endtime="20201115 23:02:16.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.486" endtime="20201115 23:02:16.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.484" endtime="20201115 23:02:16.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.794" level="INFO">${RESULT} = [{'time': 0.021894111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5707999999999694e-05, 'source_diff': 1.5707999999999694e-05}, {'time': 0.021916139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.791" endtime="20201115 23:02:16.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.807" level="INFO">${ACCURACY} = {'source_diff': [1.5707999999999694e-05, 1.611100000000268e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.6542000000001333e-05, 1.605500000000093e-05, 1.6500000000002624e-05, 1.615300000000139...</msg>
<status status="PASS" starttime="20201115 23:02:16.795" endtime="20201115 23:02:16.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.812" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.811" endtime="20201115 23:02:16.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.815" level="INFO">VALUE: [1.5707999999999694e-05, 1.611100000000268e-05, 1.5721999999999264e-05, 1.5707999999999694e-05, 1.6542000000001333e-05, 1.605500000000093e-05, 1.6500000000002624e-05, 1.615300000000139e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.6152000000001915e-05, 1.609699999999964e-05, 1.6528000000001764e-05, 1.604100000000136e-05, 1.5721999999999264e-05, 1.609699999999964e-05, 1.5694999999999598e-05, 1.652700000000229e-05, 1.652700000000229e-05, 1.613899999999835e-05, 1.6527999999998294e-05, 1.612499999999878e-05, 1.5722999999998738e-05, 1.612500000000225e-05, 1.5735999999998834e-05, 1.5665999999997515e-05, 1.6527999999998294e-05, 1.5721999999999264e-05, 1.5722000000002734e-05, 1.5721999999999264e-05, 1.655500000000143e-05, 1.612499999999878e-05, 1.608300000000007e-05, 1.5694999999999598e-05, 1.5721999999999264e-05, 1.5736000000002304e-05, 1.6556000000000903e-05, 1.5694999999999598e-05, 1.612500000000225e-05, 1.6569000000001e-05, 1.654099999999839e-05, 1.5707999999999694e-05, 1.611100000000268e-05, 1.5707999999999694e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.5708999999999168e-05, 1.6528000000001764e-05, 1.6527999999998294e-05, 1.652699999999882e-05]</msg>
<status status="PASS" starttime="20201115 23:02:16.813" endtime="20201115 23:02:16.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.808" endtime="20201115 23:02:16.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.818" endtime="20201115 23:02:16.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.822" endtime="20201115 23:02:16.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.820" endtime="20201115 23:02:16.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.817" endtime="20201115 23:02:16.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.454" endtime="20201115 23:02:16.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.452" endtime="20201115 23:02:16.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.451" endtime="20201115 23:02:16.843"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.854" endtime="20201115 23:02:16.870"></status>
</kw>
<msg timestamp="20201115 23:02:16.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.852" endtime="20201115 23:02:16.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.872" endtime="20201115 23:02:16.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.874" endtime="20201115 23:02:16.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.850" endtime="20201115 23:02:16.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.847" endtime="20201115 23:02:16.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.883" endtime="20201115 23:02:17.168"></status>
</kw>
<msg timestamp="20201115 23:02:17.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.882" endtime="20201115 23:02:17.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022854653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.172" endtime="20201115 23:02:17.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.180" endtime="20201115 23:02:17.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.879" endtime="20201115 23:02:17.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.877" endtime="20201115 23:02:17.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.187" level="INFO">${RESULT} = [{'time': 0.022871597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.022892653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:17.183" endtime="20201115 23:02:17.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.202" level="INFO">${ACCURACY} = {'source_diff': [1.6944000000001375e-05, 1.740299999999917e-05, 1.693100000000128e-05, 1.7750000000000404e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.68889999999991e-05, 1.690299999999867e-...</msg>
<status status="PASS" starttime="20201115 23:02:17.188" endtime="20201115 23:02:17.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.207" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.206" endtime="20201115 23:02:17.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.209" level="INFO">VALUE: [1.6944000000001375e-05, 1.740299999999917e-05, 1.693100000000128e-05, 1.7750000000000404e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.68889999999991e-05, 1.690299999999867e-05, 1.7348000000000363e-05, 1.729099999999914e-05, 1.7320000000001223e-05, 1.690299999999867e-05, 1.693099999999781e-05, 1.693100000000128e-05, 1.691699999999824e-05, 1.733300000000132e-05, 1.7334000000000793e-05, 1.7722000000001265e-05, 1.733300000000132e-05, 1.652699999999882e-05, 1.740299999999917e-05, 1.690300000000214e-05, 1.691699999999824e-05, 1.693099999999781e-05, 1.7319999999997754e-05, 1.733299999999785e-05, 1.7348000000000363e-05, 1.7333999999997324e-05, 1.6944000000001375e-05, 1.6943999999997905e-05, 1.6929999999998335e-05, 1.73889999999996e-05, 1.6500000000002624e-05, 1.733300000000132e-05, 1.733300000000132e-05, 1.658300000000057e-05, 1.7319999999997754e-05, 1.7750000000000404e-05, 1.6528000000001764e-05, 1.690299999999867e-05, 1.6929999999998335e-05, 1.7735999999997365e-05, 1.693099999999781e-05, 1.6528000000001764e-05, 1.6527999999998294e-05, 1.691700000000171e-05, 1.6513999999998724e-05, 1.736100000000046e-05, 1.7278000000002514e-05, 1.7277999999999044e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.208" endtime="20201115 23:02:17.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.203" endtime="20201115 23:02:17.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.212" endtime="20201115 23:02:17.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.216" endtime="20201115 23:02:17.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.214" endtime="20201115 23:02:17.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.211" endtime="20201115 23:02:17.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.846" endtime="20201115 23:02:17.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.844" endtime="20201115 23:02:17.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.843" endtime="20201115 23:02:17.237"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.239" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.247" endtime="20201115 23:02:17.263"></status>
</kw>
<msg timestamp="20201115 23:02:17.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.246" endtime="20201115 23:02:17.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.265" endtime="20201115 23:02:17.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.267" endtime="20201115 23:02:17.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.243" endtime="20201115 23:02:17.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.241" endtime="20201115 23:02:17.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.276" endtime="20201115 23:02:17.560"></status>
</kw>
<msg timestamp="20201115 23:02:17.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.275" endtime="20201115 23:02:17.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.565" endtime="20201115 23:02:17.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.573" endtime="20201115 23:02:17.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.272" endtime="20201115 23:02:17.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.271" endtime="20201115 23:02:17.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.580" level="INFO">${RESULT} = [{'time': 0.021923736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.855499999999996e-05, 'source_diff': 1.855499999999996e-05}, {'time': 0.021944639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.577" endtime="20201115 23:02:17.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.594" level="INFO">${ACCURACY} = {'source_diff': [1.855499999999996e-05, 1.80829999999986e-05, 1.813900000000035e-05, 1.7737000000000308e-05, 1.813900000000035e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.813900000000035e-0...</msg>
<status status="PASS" starttime="20201115 23:02:17.581" endtime="20201115 23:02:17.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.598" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.597" endtime="20201115 23:02:17.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.601" level="INFO">VALUE: [1.855499999999996e-05, 1.80829999999986e-05, 1.813900000000035e-05, 1.7737000000000308e-05, 1.813900000000035e-05, 1.8541999999999864e-05, 1.8541999999999864e-05, 1.813900000000035e-05, 1.8541999999999864e-05, 1.8083999999998074e-05, 1.854100000000039e-05, 1.813900000000035e-05, 1.7750000000000404e-05, 1.855499999999996e-05, 1.8555999999999434e-05, 1.7736000000000834e-05, 1.854100000000039e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.7736000000000834e-05, 1.852700000000082e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.8569000000003e-05, 1.8166000000000015e-05, 1.815299999999992e-05, 1.779099999999964e-05, 1.816699999999949e-05, 1.8541999999999864e-05, 1.813900000000035e-05, 1.815299999999992e-05, 1.855499999999996e-05, 1.812500000000078e-05, 1.855499999999996e-05, 1.812500000000078e-05, 1.8152000000000446e-05, 1.779099999999964e-05, 1.813900000000035e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.8166000000000015e-05, 1.8555999999999434e-05, 1.8471999999998545e-05, 1.812500000000078e-05, 1.7736000000000834e-05, 1.8541999999999864e-05, 1.7736000000000834e-05, 1.81950000000021e-05, 1.819499999999863e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.600" endtime="20201115 23:02:17.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.595" endtime="20201115 23:02:17.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.604" endtime="20201115 23:02:17.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.608" endtime="20201115 23:02:17.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.606" endtime="20201115 23:02:17.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.602" endtime="20201115 23:02:17.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.240" endtime="20201115 23:02:17.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.238" endtime="20201115 23:02:17.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.237" endtime="20201115 23:02:17.629"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.631" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.639" endtime="20201115 23:02:17.654"></status>
</kw>
<msg timestamp="20201115 23:02:17.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.638" endtime="20201115 23:02:17.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.656" endtime="20201115 23:02:17.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.658" endtime="20201115 23:02:17.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.635" endtime="20201115 23:02:17.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.633" endtime="20201115 23:02:17.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.668" endtime="20201115 23:02:17.953"></status>
</kw>
<msg timestamp="20201115 23:02:17.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.666" endtime="20201115 23:02:17.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022080181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.957" endtime="20201115 23:02:17.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.966" endtime="20201115 23:02:17.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.663" endtime="20201115 23:02:17.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.662" endtime="20201115 23:02:17.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.973" level="INFO">${RESULT} = [{'time': 0.022080181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.895900000000242e-05, 'source_diff': 1.895900000000242e-05}, {'time': 0.022104014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:17.969" endtime="20201115 23:02:17.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.986" level="INFO">${ACCURACY} = {'source_diff': [1.895900000000242e-05, 1.934700000000289e-05, 1.941700000000074e-05, 1.934699999999942e-05, 1.9347999999998894e-05, 1.894499999999938e-05, 1.8930000000000335e-05, 1.936100000000246e-0...</msg>
<status status="PASS" starttime="20201115 23:02:17.974" endtime="20201115 23:02:17.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.991" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.990" endtime="20201115 23:02:17.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.993" level="INFO">VALUE: [1.895900000000242e-05, 1.934700000000289e-05, 1.941700000000074e-05, 1.934699999999942e-05, 1.9347999999998894e-05, 1.894499999999938e-05, 1.8930000000000335e-05, 1.936100000000246e-05, 1.894499999999938e-05, 1.8987000000001558e-05, 1.894499999999938e-05, 1.937500000000203e-05, 1.8971999999999045e-05, 1.9750000000002405e-05, 1.856899999999953e-05, 1.8971999999999045e-05, 1.937500000000203e-05, 1.934699999999942e-05, 1.936099999999899e-05, 1.8943999999999905e-05, 1.9347999999998894e-05, 1.8528000000000294e-05, 1.8957999999999475e-05, 1.8943999999999905e-05, 1.9708000000000225e-05, 1.8957999999999475e-05, 1.9763999999998505e-05, 1.94029999999977e-05, 1.855499999999996e-05, 1.936099999999899e-05, 1.8972000000002515e-05, 1.8971999999999045e-05, 1.934699999999942e-05, 1.894499999999938e-05, 1.936099999999899e-05, 1.855499999999996e-05, 1.934699999999942e-05, 1.936099999999899e-05, 1.8957999999999475e-05, 1.893099999999981e-05, 1.855499999999996e-05, 1.934699999999942e-05, 1.8972000000002515e-05, 1.894499999999938e-05, 1.940300000000117e-05, 1.934699999999942e-05, 1.856899999999953e-05, 1.936099999999899e-05, 1.933299999999985e-05, 1.8957999999999475e-05]</msg>
<status status="PASS" starttime="20201115 23:02:17.992" endtime="20201115 23:02:17.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.987" endtime="20201115 23:02:17.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.996" endtime="20201115 23:02:17.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.000" endtime="20201115 23:02:18.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.998" endtime="20201115 23:02:18.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.995" endtime="20201115 23:02:18.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.632" endtime="20201115 23:02:18.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.630" endtime="20201115 23:02:18.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.629" endtime="20201115 23:02:18.021"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.023" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.032" endtime="20201115 23:02:18.046"></status>
</kw>
<msg timestamp="20201115 23:02:18.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.030" endtime="20201115 23:02:18.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.047" endtime="20201115 23:02:18.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.050" endtime="20201115 23:02:18.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.028" endtime="20201115 23:02:18.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.025" endtime="20201115 23:02:18.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.059" endtime="20201115 23:02:18.344"></status>
</kw>
<msg timestamp="20201115 23:02:18.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.058" endtime="20201115 23:02:18.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021786542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.348" endtime="20201115 23:02:18.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.357" endtime="20201115 23:02:18.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.055" endtime="20201115 23:02:18.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.053" endtime="20201115 23:02:18.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.363" level="INFO">${RESULT} = [{'time': 0.021786542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.016699999999802e-05, 'source_diff': 2.016699999999802e-05}, {'time': 0.021810403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.360" endtime="20201115 23:02:18.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.377" level="INFO">${ACCURACY} = {'source_diff': [2.016699999999802e-05, 1.9763999999998505e-05, 2.016700000000149e-05, 1.9749999999998935e-05, 2.062499999999981e-05, 2.0179999999998116e-05, 2.0165999999998546e-05, 2.0555999999997965...</msg>
<status status="PASS" starttime="20201115 23:02:18.364" endtime="20201115 23:02:18.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.381" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.380" endtime="20201115 23:02:18.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.384" level="INFO">VALUE: [2.016699999999802e-05, 1.9763999999998505e-05, 2.016700000000149e-05, 1.9749999999998935e-05, 2.062499999999981e-05, 2.0179999999998116e-05, 2.0165999999998546e-05, 2.0555999999997965e-05, 2.05830000000011e-05, 2.058299999999763e-05, 1.9764000000001974e-05, 2.05969999999972e-05, 2.0194000000001155e-05, 2.0166000000002016e-05, 2.05830000000011e-05, 1.9763999999998505e-05, 2.0179999999998116e-05, 2.02090000000002e-05, 2.0222000000000295e-05, 1.9763999999998505e-05, 2.0570000000001004e-05, 2.018100000000106e-05, 1.9749999999998935e-05, 2.016699999999802e-05, 2.056900000000153e-05, 1.9763999999998505e-05, 1.981900000000078e-05, 2.016699999999802e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 2.0556000000001434e-05, 2.0180000000001586e-05, 2.0166000000002016e-05, 1.9735999999999365e-05, 2.0527999999998825e-05, 2.016700000000149e-05, 2.018099999999759e-05, 1.9749999999998935e-05, 2.018099999999759e-05, 2.018100000000106e-05, 2.0569999999997535e-05, 2.054100000000239e-05, 2.056900000000153e-05, 2.0179999999998116e-05, 2.0165999999998546e-05, 2.0194000000001155e-05, 2.055500000000196e-05, 1.9763999999998505e-05, 1.981900000000078e-05, 2.0165999999998546e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.382" endtime="20201115 23:02:18.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.378" endtime="20201115 23:02:18.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.387" endtime="20201115 23:02:18.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.390" endtime="20201115 23:02:18.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.389" endtime="20201115 23:02:18.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.385" endtime="20201115 23:02:18.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.024" endtime="20201115 23:02:18.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.022" endtime="20201115 23:02:18.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.021" endtime="20201115 23:02:18.412"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.414" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.423" endtime="20201115 23:02:18.438"></status>
</kw>
<msg timestamp="20201115 23:02:18.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.421" endtime="20201115 23:02:18.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.440" endtime="20201115 23:02:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.442" endtime="20201115 23:02:18.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.418" endtime="20201115 23:02:18.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.416" endtime="20201115 23:02:18.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.451" endtime="20201115 23:02:18.736"></status>
</kw>
<msg timestamp="20201115 23:02:18.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023432458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.450" endtime="20201115 23:02:18.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023432458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023454208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.741" endtime="20201115 23:02:18.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.749" endtime="20201115 23:02:18.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.447" endtime="20201115 23:02:18.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.446" endtime="20201115 23:02:18.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.756" level="INFO">${RESULT} = [{'time': 0.023454208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1750000000000935e-05, 'source_diff': 2.1750000000000935e-05}, {'time': 0.023482042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:18.752" endtime="20201115 23:02:18.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.771" level="INFO">${ACCURACY} = {'source_diff': [2.1750000000000935e-05, 2.0986000000000615e-05, 2.14029999999997e-05, 2.0986000000000615e-05, 2.0958000000001475e-05, 2.136099999999752e-05, 2.1457999999998506e-05, 2.0972000000001045...</msg>
<status status="PASS" starttime="20201115 23:02:18.757" endtime="20201115 23:02:18.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.776" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.775" endtime="20201115 23:02:18.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.778" level="INFO">VALUE: [2.1750000000000935e-05, 2.0986000000000615e-05, 2.14029999999997e-05, 2.0986000000000615e-05, 2.0958000000001475e-05, 2.136099999999752e-05, 2.1457999999998506e-05, 2.0972000000001045e-05, 2.137500000000056e-05, 2.136100000000099e-05, 2.137500000000056e-05, 2.1388000000000656e-05, 2.1763999999997036e-05, 2.136100000000099e-05, 2.0971999999997576e-05, 2.0958000000001475e-05, 2.1791999999999645e-05, 2.1319999999998285e-05, 2.059700000000067e-05, 2.137500000000056e-05, 2.0986000000000615e-05, 2.0986000000000615e-05, 2.0972000000001045e-05, 2.137499999999709e-05, 2.138900000000013e-05, 2.1000000000000185e-05, 2.0972000000001045e-05, 2.137500000000056e-05, 2.134699999999795e-05, 2.137500000000056e-05, 2.0944000000001906e-05, 2.097300000000052e-05, 2.136100000000099e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.136100000000099e-05, 2.138900000000013e-05, 2.055500000000196e-05, 2.137500000000056e-05, 2.0972000000001045e-05, 2.1402000000000226e-05, 2.0986000000000615e-05, 2.061100000000024e-05, 2.056900000000153e-05, 2.179100000000017e-05, 2.138900000000013e-05, 2.05969999999972e-05, 2.137500000000056e-05, 2.0985999999997146e-05]</msg>
<status status="PASS" starttime="20201115 23:02:18.777" endtime="20201115 23:02:18.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.772" endtime="20201115 23:02:18.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.782" endtime="20201115 23:02:18.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.786" endtime="20201115 23:02:18.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.784" endtime="20201115 23:02:18.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.780" endtime="20201115 23:02:18.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.415" endtime="20201115 23:02:18.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.413" endtime="20201115 23:02:18.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.412" endtime="20201115 23:02:18.807"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.810" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.818" endtime="20201115 23:02:18.832"></status>
</kw>
<msg timestamp="20201115 23:02:18.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.817" endtime="20201115 23:02:18.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.834" endtime="20201115 23:02:18.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.837" endtime="20201115 23:02:18.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.814" endtime="20201115 23:02:18.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.812" endtime="20201115 23:02:18.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.846" endtime="20201115 23:02:19.133"></status>
</kw>
<msg timestamp="20201115 23:02:19.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023089681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.845" endtime="20201115 23:02:19.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023089681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.137" endtime="20201115 23:02:19.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.145" endtime="20201115 23:02:19.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.842" endtime="20201115 23:02:19.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.840" endtime="20201115 23:02:19.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.152" level="INFO">${RESULT} = [{'time': 0.023111875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2193999999999686e-05, 'source_diff': 2.2193999999999686e-05}, {'time': 0.023139847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:19.149" endtime="20201115 23:02:19.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.166" level="INFO">${ACCURACY} = {'source_diff': [2.2193999999999686e-05, 2.263900000000138e-05, 2.25830000000031e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.2597999999998675e-05, 2.2180000000000116e-05, 2.219500000000263e...</msg>
<status status="PASS" starttime="20201115 23:02:19.153" endtime="20201115 23:02:19.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.171" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.170" endtime="20201115 23:02:19.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.174" level="INFO">VALUE: [2.2193999999999686e-05, 2.263900000000138e-05, 2.25830000000031e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.2597999999998675e-05, 2.2180000000000116e-05, 2.219500000000263e-05, 2.180499999999974e-05, 2.218099999999959e-05, 2.1762999999997562e-05, 2.2598000000002144e-05, 2.216700000000002e-05, 2.181900000000278e-05, 2.25969999999992e-05, 2.2583999999999105e-05, 2.2555999999999965e-05, 2.25969999999992e-05, 2.2597999999998675e-05, 2.2180000000000116e-05, 2.2222000000002295e-05, 2.219499999999916e-05, 2.25969999999992e-05, 2.179100000000017e-05, 2.2193999999999686e-05, 2.1778000000000075e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.2222000000002295e-05, 2.265300000000095e-05, 2.2180000000000116e-05, 2.22229999999983e-05, 2.262500000000181e-05, 2.25969999999992e-05, 2.2236000000001865e-05, 2.219500000000263e-05, 2.184700000000192e-05, 2.2207999999999256e-05, 2.180499999999974e-05, 2.2193999999999686e-05, 2.25969999999992e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.218099999999959e-05, 2.218099999999959e-05, 2.1805999999999215e-05, 2.219499999999916e-05, 2.1791999999999645e-05, 2.219499999999916e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.172" endtime="20201115 23:02:19.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.167" endtime="20201115 23:02:19.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.177" endtime="20201115 23:02:19.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.181" endtime="20201115 23:02:19.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.179" endtime="20201115 23:02:19.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.176" endtime="20201115 23:02:19.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.810" endtime="20201115 23:02:19.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.809" endtime="20201115 23:02:19.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.808" endtime="20201115 23:02:19.202"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.205" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.213" endtime="20201115 23:02:19.228"></status>
</kw>
<msg timestamp="20201115 23:02:19.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.211" endtime="20201115 23:02:19.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.230" endtime="20201115 23:02:19.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.233" endtime="20201115 23:02:19.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.209" endtime="20201115 23:02:19.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.207" endtime="20201115 23:02:19.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.242" endtime="20201115 23:02:19.528"></status>
</kw>
<msg timestamp="20201115 23:02:19.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.240" endtime="20201115 23:02:19.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.532" endtime="20201115 23:02:19.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.540" endtime="20201115 23:02:19.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.238" endtime="20201115 23:02:19.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.236" endtime="20201115 23:02:19.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.547" level="INFO">${RESULT} = [{'time': 0.022515333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25969999999992e-05, 'source_diff': 2.25969999999992e-05}, {'time': 0.022541514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:19.543" endtime="20201115 23:02:19.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.560" level="INFO">${ACCURACY} = {'source_diff': [2.25969999999992e-05, 2.34169999999978e-05, 2.2985999999999146e-05, 2.261099999999877e-05, 2.2999999999998716e-05, 2.2999999999998716e-05, 2.3499999999999216e-05, 2.3387999999999187e-...</msg>
<status status="PASS" starttime="20201115 23:02:19.548" endtime="20201115 23:02:19.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.564" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.563" endtime="20201115 23:02:19.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.567" level="INFO">VALUE: [2.25969999999992e-05, 2.34169999999978e-05, 2.2985999999999146e-05, 2.261099999999877e-05, 2.2999999999998716e-05, 2.2999999999998716e-05, 2.3499999999999216e-05, 2.3387999999999187e-05, 2.34030000000017e-05, 2.302700000000185e-05, 2.305500000000099e-05, 2.2985999999999146e-05, 2.3806000000001215e-05, 2.3041999999997426e-05, 2.3402000000002227e-05, 2.341700000000127e-05, 2.3014000000001755e-05, 2.3000000000002185e-05, 2.3429999999997897e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.3026999999998382e-05, 2.34169999999978e-05, 2.3056000000000465e-05, 2.3014000000001755e-05, 2.338899999999866e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.2999999999998716e-05, 2.34169999999978e-05, 2.345899999999998e-05, 2.3014000000001755e-05, 2.3000000000002185e-05, 2.3387999999999187e-05, 2.2542000000000395e-05, 2.3818999999997842e-05, 2.3013999999998286e-05, 2.256900000000006e-05, 2.261099999999877e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.3070000000000035e-05, 2.3013999999998286e-05, 2.343100000000084e-05, 2.293099999999687e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.3028000000001325e-05, 2.3042000000000895e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.566" endtime="20201115 23:02:19.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.561" endtime="20201115 23:02:19.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.571" endtime="20201115 23:02:19.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.574" endtime="20201115 23:02:19.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.573" endtime="20201115 23:02:19.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.569" endtime="20201115 23:02:19.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.205" endtime="20201115 23:02:19.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.203" endtime="20201115 23:02:19.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.202" endtime="20201115 23:02:19.596"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.598" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.606" endtime="20201115 23:02:19.622"></status>
</kw>
<msg timestamp="20201115 23:02:19.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.604" endtime="20201115 23:02:19.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.623" endtime="20201115 23:02:19.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.626" endtime="20201115 23:02:19.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.602" endtime="20201115 23:02:19.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.600" endtime="20201115 23:02:19.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.635" endtime="20201115 23:02:19.920"></status>
</kw>
<msg timestamp="20201115 23:02:19.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.633" endtime="20201115 23:02:19.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.924" endtime="20201115 23:02:19.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.932" endtime="20201115 23:02:19.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.631" endtime="20201115 23:02:19.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.629" endtime="20201115 23:02:19.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.939" level="INFO">${RESULT} = [{'time': 0.022567125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.02259725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:19.936" endtime="20201115 23:02:19.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.953" level="INFO">${ACCURACY} = {'source_diff': [2.3792000000001645e-05, 2.4222000000000826e-05, 2.4221999999997357e-05, 2.4222000000000826e-05, 2.420900000000073e-05, 2.465299999999948e-05, 2.4208000000001256e-05, 2.422200000000082...</msg>
<status status="PASS" starttime="20201115 23:02:19.940" endtime="20201115 23:02:19.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.958" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.957" endtime="20201115 23:02:19.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.960" level="INFO">VALUE: [2.3792000000001645e-05, 2.4222000000000826e-05, 2.4221999999997357e-05, 2.4222000000000826e-05, 2.420900000000073e-05, 2.465299999999948e-05, 2.4208000000001256e-05, 2.4222000000000826e-05, 2.42230000000003e-05, 2.462500000000034e-05, 2.3806000000001215e-05, 2.3804999999998272e-05, 2.462500000000034e-05, 2.383300000000088e-05, 2.3806000000001215e-05, 2.461100000000077e-05, 2.462500000000034e-05, 2.384700000000045e-05, 2.419500000000116e-05, 2.4208000000001256e-05, 2.461100000000077e-05, 2.384700000000045e-05, 2.3834000000000355e-05, 2.3804999999998272e-05, 2.419500000000116e-05, 2.420900000000073e-05, 2.461100000000077e-05, 2.4555999999998496e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.4612000000000245e-05, 2.4276999999999632e-05, 2.3805999999997746e-05, 2.383300000000088e-05, 2.4222000000000826e-05, 2.4208000000001256e-05, 2.3805999999997746e-05, 2.381900000000131e-05, 2.4249999999999966e-05, 2.4193999999998217e-05, 2.420900000000073e-05, 2.420900000000073e-05, 2.462500000000034e-05, 2.386100000000002e-05, 2.387499999999959e-05, 2.3819999999997316e-05, 2.4612000000000245e-05, 2.462500000000034e-05, 2.3820000000000785e-05, 2.42230000000003e-05]</msg>
<status status="PASS" starttime="20201115 23:02:19.959" endtime="20201115 23:02:19.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.954" endtime="20201115 23:02:19.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.963" endtime="20201115 23:02:19.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.967" endtime="20201115 23:02:19.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.965" endtime="20201115 23:02:19.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.962" endtime="20201115 23:02:19.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.598" endtime="20201115 23:02:19.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.597" endtime="20201115 23:02:19.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.596" endtime="20201115 23:02:19.992"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.997" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.014" endtime="20201115 23:02:20.034"></status>
</kw>
<msg timestamp="20201115 23:02:20.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.011" endtime="20201115 23:02:20.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.037" endtime="20201115 23:02:20.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.042" endtime="20201115 23:02:20.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.005" endtime="20201115 23:02:20.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.001" endtime="20201115 23:02:20.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.061" endtime="20201115 23:02:20.353"></status>
</kw>
<msg timestamp="20201115 23:02:20.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040561417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.058" endtime="20201115 23:02:20.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040535986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040561417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.358" endtime="20201115 23:02:20.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.366" endtime="20201115 23:02:20.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.053" endtime="20201115 23:02:20.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.049" endtime="20201115 23:02:20.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.373" level="INFO">${RESULT} = [{'time': 0.040561417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.543099999999937e-05, 'source_diff': 2.543099999999937e-05}, {'time': 0.040593681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.370" endtime="20201115 23:02:20.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.388" level="INFO">${ACCURACY} = {'source_diff': [2.543099999999937e-05, 2.543099999999937e-05, 2.4972000000005046e-05, 2.462500000000034e-05, 2.54169999999998e-05, 2.461100000000077e-05, 2.545899999999851e-05, 2.54169999999998e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:20.374" endtime="20201115 23:02:20.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.392" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.391" endtime="20201115 23:02:20.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.395" level="INFO">VALUE: [2.543099999999937e-05, 2.543099999999937e-05, 2.4972000000005046e-05, 2.462500000000034e-05, 2.54169999999998e-05, 2.461100000000077e-05, 2.545899999999851e-05, 2.54169999999998e-05, 2.5443999999999467e-05, 2.5042000000002895e-05, 2.5471999999998607e-05, 2.5429999999999897e-05, 2.5027999999996386e-05, 2.462500000000034e-05, 2.543099999999937e-05, 2.506900000000256e-05, 2.45970000000012e-05, 2.5027000000003852e-05, 2.544500000000588e-05, 2.462500000000034e-05, 2.5443999999999467e-05, 2.5012999999997343e-05, 2.4570000000001535e-05, 2.543099999999937e-05, 2.5055999999995526e-05, 2.463899999999991e-05, 2.5416000000000327e-05, 2.5027999999996386e-05, 2.5042000000002895e-05, 2.463899999999991e-05, 2.543099999999937e-05, 2.543099999999937e-05, 2.508300000000213e-05, 2.543099999999937e-05, 2.5040999999996483e-05, 2.5027999999996386e-05, 2.5013999999996817e-05, 2.543099999999937e-05, 2.5429999999999897e-05, 2.5014000000003755e-05, 2.54169999999998e-05, 2.5028000000003325e-05, 2.5028000000003325e-05, 2.5443999999999467e-05, 2.5027000000003852e-05, 2.540300000000023e-05, 2.5014000000003755e-05, 2.5027999999996386e-05, 2.5013000000004282e-05, 2.463899999999991e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.393" endtime="20201115 23:02:20.395"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.389" endtime="20201115 23:02:20.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.398" endtime="20201115 23:02:20.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.402" endtime="20201115 23:02:20.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.400" endtime="20201115 23:02:20.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.396" endtime="20201115 23:02:20.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.998" endtime="20201115 23:02:20.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.994" endtime="20201115 23:02:20.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.992" endtime="20201115 23:02:20.423"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.425" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.433" endtime="20201115 23:02:20.450"></status>
</kw>
<msg timestamp="20201115 23:02:20.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.432" endtime="20201115 23:02:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.451" endtime="20201115 23:02:20.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.454" endtime="20201115 23:02:20.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.429" endtime="20201115 23:02:20.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.427" endtime="20201115 23:02:20.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.463" endtime="20201115 23:02:20.749"></status>
</kw>
<msg timestamp="20201115 23:02:20.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:20.461" endtime="20201115 23:02:20.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:02:20.753" endtime="20201115 23:02:20.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.762" endtime="20201115 23:02:20.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.459" endtime="20201115 23:02:20.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.457" endtime="20201115 23:02:20.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.769" level="INFO">${RESULT} = [{'time': 0.021976847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.584700000000245e-05, 'source_diff': 2.584700000000245e-05}, {'time': 0.022005625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.765" endtime="20201115 23:02:20.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.782" level="INFO">${ACCURACY} = {'source_diff': [2.584700000000245e-05, 2.6236000000002396e-05, 2.6652000000002007e-05, 2.6221999999999357e-05, 2.5834000000002355e-05, 2.616700000000055e-05, 2.6235999999998927e-05, 2.547200000000207...</msg>
<status status="PASS" starttime="20201115 23:02:20.770" endtime="20201115 23:02:20.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.787" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.786" endtime="20201115 23:02:20.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.789" level="INFO">VALUE: [2.584700000000245e-05, 2.6236000000002396e-05, 2.6652000000002007e-05, 2.6221999999999357e-05, 2.5834000000002355e-05, 2.616700000000055e-05, 2.6235999999998927e-05, 2.5472000000002076e-05, 2.662500000000234e-05, 2.5820000000002785e-05, 2.5834000000002355e-05, 2.6624999999998872e-05, 2.6624999999998872e-05, 2.5832999999999412e-05, 2.6235999999998927e-05, 2.6638999999998442e-05, 2.665299999999801e-05, 2.538900000000066e-05, 2.622299999999883e-05, 2.663900000000191e-05, 2.5805999999999746e-05, 2.6235999999998927e-05, 2.5834000000002355e-05, 2.6708000000000287e-05, 2.5834000000002355e-05, 2.5832999999999412e-05, 2.5833999999998886e-05, 2.6638999999998442e-05, 2.5818999999999842e-05, 2.5847999999998456e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.663900000000191e-05, 2.6249999999998497e-05, 2.5846999999998982e-05, 2.5805999999999746e-05, 2.6235999999998927e-05, 2.665300000000148e-05, 2.6264000000001536e-05, 2.5805999999999746e-05, 2.5846999999998982e-05, 2.62230000000023e-05, 2.6235999999998927e-05, 2.6638999999998442e-05, 2.623700000000187e-05, 2.6249999999998497e-05, 2.5833999999998886e-05, 2.6236000000002396e-05, 2.6221999999999357e-05, 2.665299999999801e-05]</msg>
<status status="PASS" starttime="20201115 23:02:20.788" endtime="20201115 23:02:20.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.783" endtime="20201115 23:02:20.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.793" endtime="20201115 23:02:20.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.796" endtime="20201115 23:02:20.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.794" endtime="20201115 23:02:20.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.791" endtime="20201115 23:02:20.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.426" endtime="20201115 23:02:20.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.424" endtime="20201115 23:02:20.817"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.423" endtime="20201115 23:02:20.817"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.820" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.828" endtime="20201115 23:02:20.844"></status>
</kw>
<msg timestamp="20201115 23:02:20.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.826" endtime="20201115 23:02:20.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.845" endtime="20201115 23:02:20.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.848" endtime="20201115 23:02:20.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.824" endtime="20201115 23:02:20.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.822" endtime="20201115 23:02:20.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.857" endtime="20201115 23:02:21.144"></status>
</kw>
<msg timestamp="20201115 23:02:21.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.856" endtime="20201115 23:02:21.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.148" endtime="20201115 23:02:21.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.157" endtime="20201115 23:02:21.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.853" endtime="20201115 23:02:21.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.851" endtime="20201115 23:02:21.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.164" level="INFO">${RESULT} = [{'time': 0.022125764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.022156861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:21.160" endtime="20201115 23:02:21.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.177" level="INFO">${ACCURACY} = {'source_diff': [2.6610999999999302e-05, 2.7069000000001092e-05, 2.7110999999999802e-05, 2.7042000000001426e-05, 2.7444000000001467e-05, 2.7069000000001092e-05, 2.7097999999999706e-05, 2.7472000000000...</msg>
<status status="PASS" starttime="20201115 23:02:21.165" endtime="20201115 23:02:21.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.182" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.181" endtime="20201115 23:02:21.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.184" level="INFO">VALUE: [2.6610999999999302e-05, 2.7069000000001092e-05, 2.7110999999999802e-05, 2.7042000000001426e-05, 2.7444000000001467e-05, 2.7069000000001092e-05, 2.7097999999999706e-05, 2.7472000000000607e-05, 2.6694000000000717e-05, 2.7054999999998053e-05, 2.745899999999704e-05, 2.7042000000001426e-05, 2.7430000000001897e-05, 2.7458000000001037e-05, 2.7443999999997998e-05, 2.7055000000001522e-05, 2.7041000000001952e-05, 2.665299999999801e-05, 2.7472000000000607e-05, 2.7042000000001426e-05, 2.7458000000001037e-05, 2.6651999999998538e-05, 2.7055000000001522e-05, 2.663900000000191e-05, 2.7388999999999192e-05, 2.7444000000001467e-05, 2.7472000000000607e-05, 2.7458000000001037e-05, 2.6597999999999206e-05, 2.665300000000148e-05, 2.744499999999747e-05, 2.7013999999998817e-05, 2.7458000000001037e-05, 2.7056000000000996e-05, 2.7444000000001467e-05, 2.745900000000051e-05, 2.7472000000000607e-05, 2.7069000000001092e-05, 2.745900000000051e-05, 2.7513999999999317e-05, 2.7027999999998387e-05, 2.7458000000001037e-05, 2.7458000000001037e-05, 2.7458000000001037e-05, 2.665299999999801e-05, 2.7110999999999802e-05, 2.6638999999998442e-05, 2.7041999999997957e-05, 2.663900000000191e-05, 2.7055000000001522e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.183" endtime="20201115 23:02:21.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.178" endtime="20201115 23:02:21.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.187" endtime="20201115 23:02:21.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.191" endtime="20201115 23:02:21.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.189" endtime="20201115 23:02:21.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.186" endtime="20201115 23:02:21.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.820" endtime="20201115 23:02:21.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.818" endtime="20201115 23:02:21.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.818" endtime="20201115 23:02:21.212"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.214" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.223" endtime="20201115 23:02:21.240"></status>
</kw>
<msg timestamp="20201115 23:02:21.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.221" endtime="20201115 23:02:21.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.242" endtime="20201115 23:02:21.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.244" endtime="20201115 23:02:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.219" endtime="20201115 23:02:21.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.216" endtime="20201115 23:02:21.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.253" endtime="20201115 23:02:21.539"></status>
</kw>
<msg timestamp="20201115 23:02:21.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.252" endtime="20201115 23:02:21.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023278139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.543" endtime="20201115 23:02:21.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.551" endtime="20201115 23:02:21.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.249" endtime="20201115 23:02:21.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.247" endtime="20201115 23:02:21.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.558" level="INFO">${RESULT} = [{'time': 0.023306014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.02334, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:21.554" endtime="20201115 23:02:21.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.572" level="INFO">${ACCURACY} = {'source_diff': [2.7875000000000122e-05, 2.7861000000000552e-05, 2.7846999999997513e-05, 2.7804999999998803e-05, 2.7888000000000218e-05, 2.8291999999999207e-05, 2.8250000000000497e-05, 2.8222000000001...</msg>
<status status="PASS" starttime="20201115 23:02:21.559" endtime="20201115 23:02:21.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.576" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.575" endtime="20201115 23:02:21.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.579" level="INFO">VALUE: [2.7875000000000122e-05, 2.7861000000000552e-05, 2.7846999999997513e-05, 2.7804999999998803e-05, 2.7888000000000218e-05, 2.8291999999999207e-05, 2.8250000000000497e-05, 2.8222000000001357e-05, 2.7847999999996986e-05, 2.8264000000000067e-05, 2.7875000000000122e-05, 2.8262999999997124e-05, 2.7861000000000552e-05, 2.868099999999915e-05, 2.8235999999997458e-05, 2.7847000000000982e-05, 2.7861000000000552e-05, 2.8264000000000067e-05, 2.8277000000000163e-05, 2.7861000000000552e-05, 2.7875000000000122e-05, 2.8306000000002246e-05, 2.8207999999998318e-05, 2.8277000000000163e-05, 2.8235999999997458e-05, 2.7833000000001412e-05, 2.8250000000000497e-05, 2.869500000000219e-05, 2.7902999999999262e-05, 2.7861000000000552e-05, 2.79170000000023e-05, 2.7861000000000552e-05, 2.7861000000000552e-05, 2.8207999999998318e-05, 2.8291999999999207e-05, 2.8666000000000108e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.7860999999997083e-05, 2.7834000000000886e-05, 2.8264000000000067e-05, 2.7847000000000982e-05, 2.7458000000001037e-05, 2.7875000000000122e-05, 2.7888999999999692e-05, 2.7861000000000552e-05, 2.7861000000000552e-05, 2.8250000000000497e-05, 2.8264000000000067e-05, 2.8264000000000067e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.577" endtime="20201115 23:02:21.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.572" endtime="20201115 23:02:21.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.582" endtime="20201115 23:02:21.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.586" endtime="20201115 23:02:21.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.584" endtime="20201115 23:02:21.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.580" endtime="20201115 23:02:21.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.215" endtime="20201115 23:02:21.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.213" endtime="20201115 23:02:21.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.212" endtime="20201115 23:02:21.607"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.610" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.619" endtime="20201115 23:02:21.637"></status>
</kw>
<msg timestamp="20201115 23:02:21.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.617" endtime="20201115 23:02:21.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.639" endtime="20201115 23:02:21.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.641" endtime="20201115 23:02:21.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.614" endtime="20201115 23:02:21.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.612" endtime="20201115 23:02:21.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.650" endtime="20201115 23:02:21.935"></status>
</kw>
<msg timestamp="20201115 23:02:21.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025415361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025444847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.649" endtime="20201115 23:02:21.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025415361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025444847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.939" endtime="20201115 23:02:21.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.948" endtime="20201115 23:02:21.949"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.646" endtime="20201115 23:02:21.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.644" endtime="20201115 23:02:21.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.955" level="INFO">${RESULT} = [{'time': 0.025444847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9485999999998708e-05, 'source_diff': 2.9485999999998708e-05}, {'time': 0.025476542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:21.951" endtime="20201115 23:02:21.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.969" level="INFO">${ACCURACY} = {'source_diff': [2.9485999999998708e-05, 2.9084000000002136e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 2.9070000000002566e-05, 2.9068999999999623e-05, 2.865199999999707e-05, 2.86809999999991...</msg>
<status status="PASS" starttime="20201115 23:02:21.956" endtime="20201115 23:02:21.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.974" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.973" endtime="20201115 23:02:21.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.976" level="INFO">VALUE: [2.9485999999998708e-05, 2.9084000000002136e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 2.9070000000002566e-05, 2.9068999999999623e-05, 2.865199999999707e-05, 2.868099999999915e-05, 2.9068999999999623e-05, 2.948700000000165e-05, 2.9068999999999623e-05, 2.9068999999999623e-05, 2.866700000000305e-05, 2.945899999999904e-05, 2.9471999999999138e-05, 2.8693999999999248e-05, 2.9457999999999568e-05, 2.9471999999999138e-05, 2.9068999999999623e-05, 2.8653000000000012e-05, 2.9055000000000053e-05, 2.8639000000000442e-05, 2.8666000000000108e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 2.868099999999915e-05, 2.8652000000000538e-05, 2.9068999999999623e-05, 2.9096999999998763e-05, 2.9013999999997347e-05, 2.9512999999998374e-05, 2.9097000000002232e-05, 2.944499999999947e-05, 2.8666000000000108e-05, 2.9139000000000942e-05, 2.8666000000000108e-05, 2.8653000000000012e-05, 2.9082999999999193e-05, 2.9471999999999138e-05, 2.9096999999998763e-05, 2.9082999999999193e-05, 2.8666000000000108e-05, 2.9485999999998708e-05, 2.8666999999999582e-05, 2.9485999999998708e-05, 2.8708000000002287e-05, 2.9082999999999193e-05, 2.8666999999999582e-05, 2.9486000000002177e-05]</msg>
<status status="PASS" starttime="20201115 23:02:21.975" endtime="20201115 23:02:21.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.970" endtime="20201115 23:02:21.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.980" endtime="20201115 23:02:21.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.983" endtime="20201115 23:02:22.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.982" endtime="20201115 23:02:22.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.978" endtime="20201115 23:02:22.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.611" endtime="20201115 23:02:22.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.609" endtime="20201115 23:02:22.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.608" endtime="20201115 23:02:22.005"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.007" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.015" endtime="20201115 23:02:22.031"></status>
</kw>
<msg timestamp="20201115 23:02:22.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.014" endtime="20201115 23:02:22.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.033" endtime="20201115 23:02:22.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.035" endtime="20201115 23:02:22.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.011" endtime="20201115 23:02:22.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.009" endtime="20201115 23:02:22.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.044" endtime="20201115 23:02:22.330"></status>
</kw>
<msg timestamp="20201115 23:02:22.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.043" endtime="20201115 23:02:22.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.335" endtime="20201115 23:02:22.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.343" endtime="20201115 23:02:22.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.040" endtime="20201115 23:02:22.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.038" endtime="20201115 23:02:22.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.350" level="INFO">${RESULT} = [{'time': 0.022097403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069500000000072e-05, 'source_diff': 3.069500000000072e-05}, {'time': 0.022130125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.346" endtime="20201115 23:02:22.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.363" level="INFO">${ACCURACY} = {'source_diff': [3.069500000000072e-05, 2.9875000000002122e-05, 3.0306000000000777e-05, 3.0292000000001207e-05, 2.9902999999997792e-05, 2.9888999999998223e-05, 3.0292000000001207e-05, 3.06249999999994...</msg>
<status status="PASS" starttime="20201115 23:02:22.350" endtime="20201115 23:02:22.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.368" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.367" endtime="20201115 23:02:22.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.371" level="INFO">VALUE: [3.069500000000072e-05, 2.9875000000002122e-05, 3.0306000000000777e-05, 3.0292000000001207e-05, 2.9902999999997792e-05, 2.9888999999998223e-05, 3.0292000000001207e-05, 3.06249999999994e-05, 3.0292000000001207e-05, 2.9457999999999568e-05, 3.0291000000001733e-05, 3.0306000000000777e-05, 3.0291000000001733e-05, 2.9874999999998653e-05, 3.0263999999998598e-05, 3.0292000000001207e-05, 3.0291000000001733e-05, 3.0291000000001733e-05, 2.9888999999998223e-05, 2.9917000000000832e-05, 2.9874999999998653e-05, 2.9457999999999568e-05, 2.9903000000001262e-05, 3.0276999999998694e-05, 3.068000000000168e-05, 2.947300000000208e-05, 3.070799999999735e-05, 3.068100000000115e-05, 3.0277999999998167e-05, 3.0276999999998694e-05, 2.9903000000001262e-05, 3.0278000000001637e-05, 2.9930000000000928e-05, 2.9860999999999083e-05, 2.9485999999998708e-05, 3.0277999999998167e-05, 2.9888999999998223e-05, 2.9874999999998653e-05, 3.0291000000001733e-05, 3.0306000000000777e-05, 2.9819999999999847e-05, 2.990199999999832e-05, 3.0278000000001637e-05, 2.9888999999998223e-05, 3.0249999999999028e-05, 3.0291999999997737e-05, 2.9903000000001262e-05, 3.070800000000082e-05, 3.0278000000001637e-05, 3.0277999999998167e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.369" endtime="20201115 23:02:22.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.364" endtime="20201115 23:02:22.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.374" endtime="20201115 23:02:22.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.377" endtime="20201115 23:02:22.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.376" endtime="20201115 23:02:22.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.372" endtime="20201115 23:02:22.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.008" endtime="20201115 23:02:22.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.006" endtime="20201115 23:02:22.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.005" endtime="20201115 23:02:22.399"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.401" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.409" endtime="20201115 23:02:22.425"></status>
</kw>
<msg timestamp="20201115 23:02:22.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.408" endtime="20201115 23:02:22.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.426" endtime="20201115 23:02:22.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.429" endtime="20201115 23:02:22.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.405" endtime="20201115 23:02:22.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.403" endtime="20201115 23:02:22.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.438" endtime="20201115 23:02:22.724"></status>
</kw>
<msg timestamp="20201115 23:02:22.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.437" endtime="20201115 23:02:22.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.728" endtime="20201115 23:02:22.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.737" endtime="20201115 23:02:22.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.434" endtime="20201115 23:02:22.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.432" endtime="20201115 23:02:22.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.743" level="INFO">${RESULT} = [{'time': 0.022029972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.149999999999681e-05, 'source_diff': 3.149999999999681e-05}, {'time': 0.022064861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:22.740" endtime="20201115 23:02:22.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.757" level="INFO">${ACCURACY} = {'source_diff': [3.149999999999681e-05, 3.11249999999999e-05, 3.070799999999735e-05, 3.065299999999854e-05, 3.1096999999997293e-05, 3.11249999999999e-05, 3.10839999999972e-05, 3.111100000000033e-05, 3...</msg>
<status status="PASS" starttime="20201115 23:02:22.745" endtime="20201115 23:02:22.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.762" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.761" endtime="20201115 23:02:22.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.765" level="INFO">VALUE: [3.149999999999681e-05, 3.11249999999999e-05, 3.070799999999735e-05, 3.065299999999854e-05, 3.1096999999997293e-05, 3.11249999999999e-05, 3.10839999999972e-05, 3.111100000000033e-05, 3.109700000000076e-05, 3.070900000000029e-05, 3.072200000000039e-05, 3.150000000000028e-05, 3.155600000000203e-05, 3.069400000000125e-05, 3.111100000000033e-05, 3.1513000000000374e-05, 3.102800000000239e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.1098000000000237e-05, 3.067999999999821e-05, 3.074999999999953e-05, 3.1513000000000374e-05, 3.1513000000000374e-05, 3.066599999999864e-05, 3.109799999999677e-05, 3.152799999999942e-05, 3.105599999999806e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.150000000000028e-05, 3.1526999999999944e-05, 3.069500000000072e-05, 3.151400000000332e-05, 3.144399999999853e-05, 3.070900000000029e-05, 3.108300000000119e-05, 3.070800000000082e-05, 3.070799999999735e-05, 3.1111999999999806e-05, 3.11249999999999e-05, 3.150000000000028e-05, 3.1096999999997293e-05, 3.147300000000061e-05, 3.149999999999681e-05, 3.150000000000028e-05, 3.111100000000033e-05, 3.109700000000076e-05, 3.150000000000028e-05]</msg>
<status status="PASS" starttime="20201115 23:02:22.763" endtime="20201115 23:02:22.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.758" endtime="20201115 23:02:22.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.768" endtime="20201115 23:02:22.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.771" endtime="20201115 23:02:22.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.770" endtime="20201115 23:02:22.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.766" endtime="20201115 23:02:22.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.402" endtime="20201115 23:02:22.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.400" endtime="20201115 23:02:22.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.399" endtime="20201115 23:02:22.792"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.795" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.803" endtime="20201115 23:02:22.818"></status>
</kw>
<msg timestamp="20201115 23:02:22.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.801" endtime="20201115 23:02:22.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.820" endtime="20201115 23:02:22.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.822" endtime="20201115 23:02:22.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.799" endtime="20201115 23:02:22.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.797" endtime="20201115 23:02:22.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.832" endtime="20201115 23:02:23.117"></status>
</kw>
<msg timestamp="20201115 23:02:23.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.830" endtime="20201115 23:02:23.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.121" endtime="20201115 23:02:23.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.130" endtime="20201115 23:02:23.131"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.827" endtime="20201115 23:02:23.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.826" endtime="20201115 23:02:23.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.137" level="INFO">${RESULT} = [{'time': 0.021832417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.483400000000095e-05, 'source_diff': 3.483400000000095e-05}, {'time': 0.021874431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.133" endtime="20201115 23:02:23.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.150" level="INFO">${ACCURACY} = {'source_diff': [3.483400000000095e-05, 3.4638999999999504e-05, 3.536200000000059e-05, 3.5026999999999975e-05, 3.448699999999971e-05, 3.529199999999927e-05, 3.475000000000006e-05, 3.5290999999999795e-...</msg>
<status status="PASS" starttime="20201115 23:02:23.138" endtime="20201115 23:02:23.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.155" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.154" endtime="20201115 23:02:23.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.157" level="INFO">VALUE: [3.483400000000095e-05, 3.4638999999999504e-05, 3.536200000000059e-05, 3.5026999999999975e-05, 3.448699999999971e-05, 3.529199999999927e-05, 3.475000000000006e-05, 3.5290999999999795e-05, 3.472200000000092e-05, 3.451399999999938e-05, 3.5290999999999795e-05, 3.5304999999999365e-05, 3.4819000000001904e-05, 3.492999999999899e-05, 3.5375000000000684e-05, 3.466699999999864e-05, 3.5068999999998685e-05, 3.5083000000001724e-05, 3.544399999999906e-05, 3.5139000000000004e-05, 3.518100000000218e-05, 3.545799999999863e-05, 3.457000000000113e-05, 3.519500000000175e-05, 3.500000000000031e-05, 3.466700000000211e-05, 3.525000000000056e-05, 3.4860999999997144e-05, 3.516599999999967e-05, 3.5082999999998254e-05, 3.493099999999846e-05, 3.523600000000099e-05, 3.5026999999999975e-05, 3.4583000000001224e-05, 3.523600000000099e-05, 3.5097000000001294e-05, 3.492999999999899e-05, 3.5083000000001724e-05, 3.476399999999963e-05, 3.5082999999998254e-05, 3.5152999999999573e-05, 3.455600000000156e-05, 3.473600000000049e-05, 3.49450000000015e-05, 3.452799999999895e-05, 3.507000000000163e-05, 3.506999999999816e-05, 3.491699999999889e-05, 3.4875000000000184e-05, 3.529199999999927e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.156" endtime="20201115 23:02:23.158"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.151" endtime="20201115 23:02:23.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.160" endtime="20201115 23:02:23.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.164" endtime="20201115 23:02:23.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.162" endtime="20201115 23:02:23.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.159" endtime="20201115 23:02:23.184"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.795" endtime="20201115 23:02:23.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.794" endtime="20201115 23:02:23.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.793" endtime="20201115 23:02:23.185"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.187" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.196" endtime="20201115 23:02:23.212"></status>
</kw>
<msg timestamp="20201115 23:02:23.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.194" endtime="20201115 23:02:23.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.213" endtime="20201115 23:02:23.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.216" endtime="20201115 23:02:23.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.191" endtime="20201115 23:02:23.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.189" endtime="20201115 23:02:23.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.226" endtime="20201115 23:02:23.510"></status>
</kw>
<msg timestamp="20201115 23:02:23.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.223" endtime="20201115 23:02:23.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.514" endtime="20201115 23:02:23.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.522" endtime="20201115 23:02:23.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.221" endtime="20201115 23:02:23.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.219" endtime="20201115 23:02:23.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.529" level="INFO">${RESULT} = [{'time': 0.022916083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6027000000000975e-05, 'source_diff': 3.6027000000000975e-05}, {'time': 0.022960111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:23.526" endtime="20201115 23:02:23.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.544" level="INFO">${ACCURACY} = {'source_diff': [3.6027000000000975e-05, 3.5666999999999643e-05, 3.6082999999999255e-05, 3.6291000000000795e-05, 3.5860999999998144e-05, 3.604200000000002e-05, 3.6180999999999713e-05, 3.62219999999989...</msg>
<status status="PASS" starttime="20201115 23:02:23.530" endtime="20201115 23:02:23.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.548" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.547" endtime="20201115 23:02:23.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.551" level="INFO">VALUE: [3.6027000000000975e-05, 3.5666999999999643e-05, 3.6082999999999255e-05, 3.6291000000000795e-05, 3.5860999999998144e-05, 3.604200000000002e-05, 3.6180999999999713e-05, 3.622199999999895e-05, 3.602800000000045e-05, 3.554199999999952e-05, 3.570799999999888e-05, 3.575000000000106e-05, 3.5889000000000754e-05, 3.59589999999986e-05, 3.594499999999903e-05, 3.6082999999999255e-05, 3.5818999999999435e-05, 3.60840000000022e-05, 3.580599999999934e-05, 3.599999999999784e-05, 3.566600000000017e-05, 3.5818999999999435e-05, 3.551400000000038e-05, 3.5582999999998755e-05, 3.630599999999984e-05, 3.5568999999999185e-05, 3.601399999999741e-05, 3.5818999999999435e-05, 3.623600000000199e-05, 3.6417000000000394e-05, 3.5861000000001614e-05, 3.6388999999997784e-05, 3.573599999999802e-05, 3.552799999999995e-05, 3.5666999999999643e-05, 3.623600000000199e-05, 3.5916999999999893e-05, 3.5666999999999643e-05, 3.619500000000275e-05, 3.569499999999878e-05, 3.5860999999998144e-05, 3.572300000000139e-05, 3.5889000000000754e-05, 3.6318999999999935e-05, 3.5875000000001184e-05, 3.566600000000017e-05, 3.620799999999938e-05, 3.601399999999741e-05, 3.5916999999999893e-05, 3.5777000000000725e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.550" endtime="20201115 23:02:23.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.545" endtime="20201115 23:02:23.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.554" endtime="20201115 23:02:23.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.558" endtime="20201115 23:02:23.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.556" endtime="20201115 23:02:23.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.553" endtime="20201115 23:02:23.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.188" endtime="20201115 23:02:23.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.186" endtime="20201115 23:02:23.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.185" endtime="20201115 23:02:23.579"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.581" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.589" endtime="20201115 23:02:23.605"></status>
</kw>
<msg timestamp="20201115 23:02:23.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.588" endtime="20201115 23:02:23.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.606" endtime="20201115 23:02:23.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.609" endtime="20201115 23:02:23.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.585" endtime="20201115 23:02:23.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.583" endtime="20201115 23:02:23.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.619" endtime="20201115 23:02:23.903"></status>
</kw>
<msg timestamp="20201115 23:02:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.617" endtime="20201115 23:02:23.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.907" endtime="20201115 23:02:23.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.916" endtime="20201115 23:02:23.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.614" endtime="20201115 23:02:23.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.613" endtime="20201115 23:02:23.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.923" level="INFO">${RESULT} = [{'time': 0.021844486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693000000000099e-05, 'source_diff': 3.693000000000099e-05}, {'time': 0.021891472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:23.919" endtime="20201115 23:02:23.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.936" level="INFO">${ACCURACY} = {'source_diff': [3.693000000000099e-05, 3.692999999999752e-05, 3.7153000000001574e-05, 3.7305000000001365e-05, 3.6638999999998034e-05, 3.652800000000095e-05, 3.720800000000038e-05, 3.722199999999995e-...</msg>
<status status="PASS" starttime="20201115 23:02:23.924" endtime="20201115 23:02:23.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.941" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.940" endtime="20201115 23:02:23.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.943" level="INFO">VALUE: [3.693000000000099e-05, 3.692999999999752e-05, 3.7153000000001574e-05, 3.7305000000001365e-05, 3.6638999999998034e-05, 3.652800000000095e-05, 3.720800000000038e-05, 3.722199999999995e-05, 3.6610999999998894e-05, 3.724999999999909e-05, 3.727799999999823e-05, 3.72919999999978e-05, 3.6653000000001074e-05, 3.655600000000009e-05, 3.732000000000041e-05, 3.6874999999998714e-05, 3.676399999999816e-05, 3.6875000000002184e-05, 3.701400000000188e-05, 3.7347000000000075e-05, 3.7026999999998506e-05, 3.724999999999909e-05, 3.699999999999884e-05, 3.667999999999727e-05, 3.7318999999997465e-05, 3.699999999999884e-05, 3.745800000000063e-05, 3.720800000000038e-05, 3.7153000000001574e-05, 3.6888999999998284e-05, 3.7096999999999825e-05, 3.67780000000012e-05, 3.7375000000002684e-05, 3.6639000000001504e-05, 3.679200000000077e-05, 3.680600000000034e-05, 3.672199999999945e-05, 3.701399999999841e-05, 3.649999999999834e-05, 3.7430999999997494e-05, 3.6625000000001934e-05, 3.7304999999997895e-05, 3.676399999999816e-05, 3.723600000000299e-05, 3.742999999999802e-05, 3.666600000000117e-05, 3.716600000000167e-05, 3.722199999999995e-05, 3.6889000000001754e-05, 3.675000000000206e-05]</msg>
<status status="PASS" starttime="20201115 23:02:23.942" endtime="20201115 23:02:23.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.937" endtime="20201115 23:02:23.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.946" endtime="20201115 23:02:23.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.950" endtime="20201115 23:02:23.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.948" endtime="20201115 23:02:23.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.945" endtime="20201115 23:02:23.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.582" endtime="20201115 23:02:23.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.580" endtime="20201115 23:02:23.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.579" endtime="20201115 23:02:23.971"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.982" endtime="20201115 23:02:23.998"></status>
</kw>
<msg timestamp="20201115 23:02:23.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.981" endtime="20201115 23:02:23.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.999" endtime="20201115 23:02:24.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.002" endtime="20201115 23:02:24.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.978" endtime="20201115 23:02:24.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.975" endtime="20201115 23:02:24.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.011" endtime="20201115 23:02:24.297"></status>
</kw>
<msg timestamp="20201115 23:02:24.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.010" endtime="20201115 23:02:24.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.301" endtime="20201115 23:02:24.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.309" endtime="20201115 23:02:24.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.007" endtime="20201115 23:02:24.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.005" endtime="20201115 23:02:24.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.316" level="INFO">${RESULT} = [{'time': 0.022459083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.772200000000045e-05, 'source_diff': 3.772200000000045e-05}, {'time': 0.022505083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.313" endtime="20201115 23:02:24.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.330" level="INFO">${ACCURACY} = {'source_diff': [3.772200000000045e-05, 3.845799999999816e-05, 3.8361000000000645e-05, 3.7804999999998395e-05, 3.774999999999959e-05, 3.8068999999998215e-05, 3.7597000000000325e-05, 3.7667000000001644...</msg>
<status status="PASS" starttime="20201115 23:02:24.317" endtime="20201115 23:02:24.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.334" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.333" endtime="20201115 23:02:24.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.337" level="INFO">VALUE: [3.772200000000045e-05, 3.845799999999816e-05, 3.8361000000000645e-05, 3.7804999999998395e-05, 3.774999999999959e-05, 3.8068999999998215e-05, 3.7597000000000325e-05, 3.7667000000001644e-05, 3.8083000000001255e-05, 3.7569000000001185e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.823600000000052e-05, 3.774999999999959e-05, 3.7944999999997564e-05, 3.7930999999997994e-05, 3.751400000000238e-05, 3.77919999999983e-05, 3.758400000000023e-05, 3.8083000000001255e-05, 3.8138999999999534e-05, 3.758400000000023e-05, 3.84720000000012e-05, 3.7583000000000755e-05, 3.8304999999998895e-05, 3.8026999999999506e-05, 3.819400000000181e-05, 3.7875000000003184e-05, 3.7790999999998826e-05, 3.7861000000000145e-05, 3.7874999999999714e-05, 3.7930999999997994e-05, 3.827799999999923e-05, 3.8083000000001255e-05, 3.751400000000238e-05, 3.8430999999998494e-05, 3.8375000000000214e-05, 3.804199999999855e-05, 3.7931000000001464e-05, 3.8068999999998215e-05, 3.7610999999999895e-05, 3.7708999999996884e-05, 3.7653000000002074e-05, 3.832000000000141e-05, 3.807000000000116e-05, 3.768000000000174e-05, 3.790200000000285e-05, 3.7569000000001185e-05, 3.8068999999998215e-05, 3.791599999999895e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.335" endtime="20201115 23:02:24.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.331" endtime="20201115 23:02:24.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.340" endtime="20201115 23:02:24.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.343" endtime="20201115 23:02:24.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.342" endtime="20201115 23:02:24.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.338" endtime="20201115 23:02:24.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.974" endtime="20201115 23:02:24.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.972" endtime="20201115 23:02:24.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.971" endtime="20201115 23:02:24.365"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.376" endtime="20201115 23:02:24.391"></status>
</kw>
<msg timestamp="20201115 23:02:24.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.374" endtime="20201115 23:02:24.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.393" endtime="20201115 23:02:24.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.396" endtime="20201115 23:02:24.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.371" endtime="20201115 23:02:24.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.369" endtime="20201115 23:02:24.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.405" endtime="20201115 23:02:24.691"></status>
</kw>
<msg timestamp="20201115 23:02:24.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.403" endtime="20201115 23:02:24.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.695" endtime="20201115 23:02:24.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.704" endtime="20201115 23:02:24.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.400" endtime="20201115 23:02:24.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.399" endtime="20201115 23:02:24.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.710" level="INFO">${RESULT} = [{'time': 0.021979847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8625000000000465e-05, 'source_diff': 3.8625000000000465e-05}, {'time': 0.022025847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:24.707" endtime="20201115 23:02:24.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.724" level="INFO">${ACCURACY} = {'source_diff': [3.8625000000000465e-05, 3.9083000000002255e-05, 3.9124999999997495e-05, 3.9332999999999035e-05, 3.9139000000000534e-05, 3.901400000000041e-05, 3.9139000000000534e-05, 3.89999999999973...</msg>
<status status="PASS" starttime="20201115 23:02:24.711" endtime="20201115 23:02:24.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.729" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.728" endtime="20201115 23:02:24.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.731" level="INFO">VALUE: [3.8625000000000465e-05, 3.9083000000002255e-05, 3.9124999999997495e-05, 3.9332999999999035e-05, 3.9139000000000534e-05, 3.901400000000041e-05, 3.9139000000000534e-05, 3.899999999999737e-05, 3.9416999999999924e-05, 3.9430999999999494e-05, 3.851399999999991e-05, 3.915199999999716e-05, 3.8583000000001755e-05, 3.8666999999999174e-05, 3.8945000000002034e-05, 3.932000000000241e-05, 3.8708999999997884e-05, 3.8708999999997884e-05, 3.875000000000059e-05, 3.87919999999993e-05, 3.919400000000281e-05, 3.915200000000063e-05, 3.915200000000063e-05, 3.8959000000001603e-05, 3.850000000000034e-05, 3.925000000000109e-05, 3.9153000000000104e-05, 3.870799999999841e-05, 3.9097000000001825e-05, 3.905599999999912e-05, 3.9083000000002255e-05, 3.8652999999999604e-05, 3.8652999999999604e-05, 3.8861000000001145e-05, 3.8652999999999604e-05, 3.951399999999744e-05, 3.8652999999999604e-05, 3.933399999999851e-05, 3.931999999999894e-05, 3.8875000000000715e-05, 3.883399999999801e-05, 3.8569000000002185e-05, 3.905600000000259e-05, 3.8513000000000436e-05, 3.888800000000081e-05, 3.8569000000002185e-05, 3.865200000000013e-05, 3.9027000000000506e-05, 3.852799999999948e-05, 3.875000000000059e-05]</msg>
<status status="PASS" starttime="20201115 23:02:24.730" endtime="20201115 23:02:24.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.725" endtime="20201115 23:02:24.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.740" endtime="20201115 23:02:24.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.743" endtime="20201115 23:02:24.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.742" endtime="20201115 23:02:24.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.738" endtime="20201115 23:02:24.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.368" endtime="20201115 23:02:24.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.366" endtime="20201115 23:02:24.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.365" endtime="20201115 23:02:24.764"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.767" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.775" endtime="20201115 23:02:24.792"></status>
</kw>
<msg timestamp="20201115 23:02:24.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.774" endtime="20201115 23:02:24.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.794" endtime="20201115 23:02:24.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.796" endtime="20201115 23:02:24.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.771" endtime="20201115 23:02:24.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.769" endtime="20201115 23:02:24.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.805" endtime="20201115 23:02:25.091"></status>
</kw>
<msg timestamp="20201115 23:02:25.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.804" endtime="20201115 23:02:25.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023400681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.095" endtime="20201115 23:02:25.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.103" endtime="20201115 23:02:25.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.801" endtime="20201115 23:02:25.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.799" endtime="20201115 23:02:25.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.110" level="INFO">${RESULT} = [{'time': 0.023441153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.047199999999973e-05, 'source_diff': 4.047199999999973e-05}, {'time': 0.023491153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.107" endtime="20201115 23:02:25.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.125" level="INFO">${ACCURACY} = {'source_diff': [4.047199999999973e-05, 3.9861000000002145e-05, 4.004200000000055e-05, 3.981999999999944e-05, 4.0445000000000064e-05, 3.986200000000162e-05, 3.984799999999858e-05, 4.0291000000001326e-...</msg>
<status status="PASS" starttime="20201115 23:02:25.111" endtime="20201115 23:02:25.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.130" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.129" endtime="20201115 23:02:25.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.133" level="INFO">VALUE: [4.047199999999973e-05, 3.9861000000002145e-05, 4.004200000000055e-05, 3.981999999999944e-05, 4.0445000000000064e-05, 3.986200000000162e-05, 3.984799999999858e-05, 4.0291000000001326e-05, 3.9805000000000396e-05, 4.0361000000002645e-05, 3.994400000000009e-05, 4.015199999999816e-05, 3.974999999999812e-05, 3.976399999999769e-05, 3.9555000000000146e-05, 3.9667000000000174e-05, 3.9568999999999716e-05, 4.030600000000037e-05, 3.9832999999999535e-05, 4.0069000000000216e-05, 4.009799999999883e-05, 3.9653000000000604e-05, 4.000000000000184e-05, 4.001400000000141e-05, 3.954200000000005e-05, 3.998600000000227e-05, 3.9680999999999744e-05, 3.951400000000091e-05, 3.9930999999999994e-05, 3.9723000000001923e-05, 3.988799999999834e-05, 4.018000000000077e-05, 3.968000000000027e-05, 3.966599999999723e-05, 3.972199999999898e-05, 3.9569000000003185e-05, 4.023599999999905e-05, 3.9568999999999716e-05, 4.0166999999997205e-05, 3.950000000000134e-05, 3.980599999999987e-05, 3.9680999999999744e-05, 4.0096999999999355e-05, 3.970799999999941e-05, 3.95980000000018e-05, 3.9846999999999105e-05, 3.972199999999898e-05, 3.999999999999837e-05, 3.948700000000124e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.131" endtime="20201115 23:02:25.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.126" endtime="20201115 23:02:25.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.136" endtime="20201115 23:02:25.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.139" endtime="20201115 23:02:25.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.138" endtime="20201115 23:02:25.159"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.134" endtime="20201115 23:02:25.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.767" endtime="20201115 23:02:25.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.766" endtime="20201115 23:02:25.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.765" endtime="20201115 23:02:25.161"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.163" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.171" endtime="20201115 23:02:25.186"></status>
</kw>
<msg timestamp="20201115 23:02:25.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.170" endtime="20201115 23:02:25.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.188" endtime="20201115 23:02:25.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.190" endtime="20201115 23:02:25.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.167" endtime="20201115 23:02:25.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.165" endtime="20201115 23:02:25.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.200" endtime="20201115 23:02:25.485"></status>
</kw>
<msg timestamp="20201115 23:02:25.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.198" endtime="20201115 23:02:25.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.489" endtime="20201115 23:02:25.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.498" endtime="20201115 23:02:25.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.196" endtime="20201115 23:02:25.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.194" endtime="20201115 23:02:25.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.505" level="INFO">${RESULT} = [{'time': 0.021985611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1416999999998455e-05, 'source_diff': 4.1416999999998455e-05}, {'time': 0.022035597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.501" endtime="20201115 23:02:25.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.519" level="INFO">${ACCURACY} = {'source_diff': [4.1416999999998455e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.073600000000302e-05, 4.1055000000001646e-05, 4.1068999999997746e-05, 4.105599999999765e-05, 4.140300000000235...</msg>
<status status="PASS" starttime="20201115 23:02:25.506" endtime="20201115 23:02:25.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.523" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.522" endtime="20201115 23:02:25.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.526" level="INFO">VALUE: [4.1416999999998455e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.073600000000302e-05, 4.1055000000001646e-05, 4.1068999999997746e-05, 4.105599999999765e-05, 4.1403000000002355e-05, 4.082000000000044e-05, 4.104199999999808e-05, 4.1152999999998635e-05, 4.1166999999998205e-05, 4.0723000000002924e-05, 4.1237000000002993e-05, 4.0722999999999454e-05, 4.0611000000002895e-05, 4.094400000000109e-05, 4.099999999999937e-05, 4.073599999999955e-05, 4.073599999999955e-05, 4.0638999999998565e-05, 4.0624999999998995e-05, 4.100000000000284e-05, 4.069400000000084e-05, 4.068000000000127e-05, 4.099999999999937e-05, 4.1166999999998205e-05, 4.1153000000002105e-05, 4.079199999999783e-05, 4.1444999999997595e-05, 4.052799999999801e-05, 4.07920000000013e-05, 4.12920000000018e-05, 4.152799999999901e-05, 4.1374999999999745e-05, 4.129199999999833e-05, 4.081999999999697e-05, 4.086200000000262e-05, 4.086199999999915e-05, 4.126400000000266e-05, 4.0790999999998356e-05, 4.123600000000005e-05, 4.051400000000191e-05, 4.1138999999999065e-05, 4.1304999999998426e-05, 4.1305000000001896e-05, 4.122200000000048e-05, 4.1152999999998635e-05, 4.126399999999919e-05, 4.0931000000000994e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.524" endtime="20201115 23:02:25.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.519" endtime="20201115 23:02:25.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.529" endtime="20201115 23:02:25.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.532" endtime="20201115 23:02:25.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.531" endtime="20201115 23:02:25.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.527" endtime="20201115 23:02:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.164" endtime="20201115 23:02:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.162" endtime="20201115 23:02:25.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.161" endtime="20201115 23:02:25.554"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.556" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.564" endtime="20201115 23:02:25.580"></status>
</kw>
<msg timestamp="20201115 23:02:25.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.563" endtime="20201115 23:02:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.581" endtime="20201115 23:02:25.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.584" endtime="20201115 23:02:25.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.560" endtime="20201115 23:02:25.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.558" endtime="20201115 23:02:25.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.593" endtime="20201115 23:02:25.879"></status>
</kw>
<msg timestamp="20201115 23:02:25.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.591" endtime="20201115 23:02:25.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.883" endtime="20201115 23:02:25.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.892" endtime="20201115 23:02:25.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.589" endtime="20201115 23:02:25.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.587" endtime="20201115 23:02:25.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.899" level="INFO">${RESULT} = [{'time': 0.022169708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2111000000000925e-05, 'source_diff': 4.2111000000000925e-05}, {'time': 0.022218736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.896" endtime="20201115 23:02:25.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.913" level="INFO">${ACCURACY} = {'source_diff': [4.2111000000000925e-05, 4.14860000000003e-05, 4.2319000000002466e-05, 4.175000000000012e-05, 4.177800000000273e-05, 4.151399999999944e-05, 4.230600000000237e-05, 4.1790999999999356e-0...</msg>
<status status="PASS" starttime="20201115 23:02:25.900" endtime="20201115 23:02:25.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.917" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.916" endtime="20201115 23:02:25.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.920" level="INFO">VALUE: [4.2111000000000925e-05, 4.14860000000003e-05, 4.2319000000002466e-05, 4.175000000000012e-05, 4.177800000000273e-05, 4.151399999999944e-05, 4.230600000000237e-05, 4.1790999999999356e-05, 4.223600000000105e-05, 4.197199999999776e-05, 4.1776999999999787e-05, 4.1652999999999135e-05, 4.1568999999998246e-05, 4.206999999999822e-05, 4.208400000000126e-05, 4.159800000000033e-05, 4.248599999999783e-05, 4.2040999999999606e-05, 4.195800000000166e-05, 4.1776999999999787e-05, 4.2444999999998595e-05, 4.16799999999988e-05, 4.2152999999999635e-05, 4.1667000000002175e-05, 4.225000000000062e-05, 4.2096999999997886e-05, 4.2166999999999205e-05, 4.198599999999733e-05, 4.229199999999933e-05, 4.1888999999999815e-05, 4.2402999999999885e-05, 4.1846999999997636e-05, 4.1875000000000245e-05, 4.2361000000001175e-05, 4.1652999999999135e-05, 4.244399999999912e-05, 4.2389000000000315e-05, 4.208399999999779e-05, 4.206999999999822e-05, 4.223600000000105e-05, 4.1860999999997206e-05, 4.172200000000098e-05, 4.2304999999999426e-05, 4.1667000000002175e-05, 4.202799999999951e-05, 4.227799999999976e-05, 4.2097000000001356e-05, 4.172200000000098e-05, 4.2430999999999025e-05, 4.173600000000055e-05]</msg>
<status status="PASS" starttime="20201115 23:02:25.918" endtime="20201115 23:02:25.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.913" endtime="20201115 23:02:25.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.923" endtime="20201115 23:02:25.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.926" endtime="20201115 23:02:25.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.925" endtime="20201115 23:02:25.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.921" endtime="20201115 23:02:25.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.557" endtime="20201115 23:02:25.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.555" endtime="20201115 23:02:25.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.554" endtime="20201115 23:02:25.947"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.950" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.958" endtime="20201115 23:02:25.976"></status>
</kw>
<msg timestamp="20201115 23:02:25.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.956" endtime="20201115 23:02:25.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.977" endtime="20201115 23:02:25.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.980" endtime="20201115 23:02:25.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.954" endtime="20201115 23:02:25.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.952" endtime="20201115 23:02:25.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.990" endtime="20201115 23:02:26.276"></status>
</kw>
<msg timestamp="20201115 23:02:26.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022919597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.988" endtime="20201115 23:02:26.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022919597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.280" endtime="20201115 23:02:26.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.288" endtime="20201115 23:02:26.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.985" endtime="20201115 23:02:26.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.983" endtime="20201115 23:02:26.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.295" level="INFO">${RESULT} = [{'time': 0.022962264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2666999999999705e-05, 'source_diff': 4.2666999999999705e-05}, {'time': 0.023014264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.292" endtime="20201115 23:02:26.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.309" level="INFO">${ACCURACY} = {'source_diff': [4.2666999999999705e-05, 4.3431000000000025e-05, 4.3389000000001315e-05, 4.33059999999999e-05, 4.291600000000048e-05, 4.2958999999998665e-05, 4.324999999999815e-05, 4.2527000000000537e...</msg>
<status status="PASS" starttime="20201115 23:02:26.296" endtime="20201115 23:02:26.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.313" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.312" endtime="20201115 23:02:26.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.316" level="INFO">VALUE: [4.2666999999999705e-05, 4.3431000000000025e-05, 4.3389000000001315e-05, 4.33059999999999e-05, 4.291600000000048e-05, 4.2958999999998665e-05, 4.324999999999815e-05, 4.2527000000000537e-05, 4.251399999999697e-05, 4.266600000000023e-05, 4.25129999999975e-05, 4.273599999999808e-05, 4.251400000000044e-05, 4.291600000000048e-05, 4.276400000000069e-05, 4.2903000000000385e-05, 4.275000000000112e-05, 4.294399999999962e-05, 4.3167000000000205e-05, 4.2931000000002995e-05, 4.2846999999998636e-05, 4.2944999999999095e-05, 4.276300000000122e-05, 4.265199999999719e-05, 4.3167000000000205e-05, 4.323599999999858e-05, 4.2832999999999066e-05, 4.251400000000044e-05, 4.3138999999997596e-05, 4.256999999999872e-05, 4.2527000000000537e-05, 4.2568999999999246e-05, 4.294400000000309e-05, 4.273599999999808e-05, 4.3068999999999746e-05, 4.2846999999998636e-05, 4.272199999999851e-05, 4.2860999999998206e-05, 4.2916999999999955e-05, 4.3332999999999566e-05, 4.300000000000137e-05, 4.2653000000000135e-05, 4.276400000000069e-05, 4.306999999999922e-05, 4.273600000000155e-05, 4.272200000000198e-05, 4.2903000000000385e-05, 4.301400000000094e-05, 4.2903000000000385e-05, 4.2722999999997985e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.314" endtime="20201115 23:02:26.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.310" endtime="20201115 23:02:26.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.319" endtime="20201115 23:02:26.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.322" endtime="20201115 23:02:26.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.321" endtime="20201115 23:02:26.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.317" endtime="20201115 23:02:26.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.950" endtime="20201115 23:02:26.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.949" endtime="20201115 23:02:26.343"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.948" endtime="20201115 23:02:26.344"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.346" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.354" endtime="20201115 23:02:26.372"></status>
</kw>
<msg timestamp="20201115 23:02:26.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.353" endtime="20201115 23:02:26.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.374" endtime="20201115 23:02:26.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.377" endtime="20201115 23:02:26.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.350" endtime="20201115 23:02:26.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.348" endtime="20201115 23:02:26.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.386" endtime="20201115 23:02:26.671"></status>
</kw>
<msg timestamp="20201115 23:02:26.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.385" endtime="20201115 23:02:26.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.676" endtime="20201115 23:02:26.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.684" endtime="20201115 23:02:26.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.382" endtime="20201115 23:02:26.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.380" endtime="20201115 23:02:26.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.691" level="INFO">${RESULT} = [{'time': 0.022931611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3653000000001135e-05, 'source_diff': 4.3653000000001135e-05}, {'time': 0.022984611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.688" endtime="20201115 23:02:26.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.707" level="INFO">${ACCURACY} = {'source_diff': [4.3653000000001135e-05, 4.408299999999685e-05, 4.445800000000069e-05, 4.4194999999996876e-05, 4.43060000000009e-05, 4.4486999999999305e-05, 4.3653000000001135e-05, 4.407000000000022e-...</msg>
<status status="PASS" starttime="20201115 23:02:26.693" endtime="20201115 23:02:26.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.711" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.710" endtime="20201115 23:02:26.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.714" level="INFO">VALUE: [4.3653000000001135e-05, 4.408299999999685e-05, 4.445800000000069e-05, 4.4194999999996876e-05, 4.43060000000009e-05, 4.4486999999999305e-05, 4.3653000000001135e-05, 4.407000000000022e-05, 4.350000000000187e-05, 4.3639000000001565e-05, 4.408399999999979e-05, 4.4153000000001635e-05, 4.402799999999804e-05, 4.4153000000001635e-05, 4.4181000000000775e-05, 4.3819000000000496e-05, 4.379100000000136e-05, 4.366600000000123e-05, 4.3833000000000066e-05, 4.352800000000101e-05, 4.408299999999685e-05, 4.4305000000001427e-05, 4.443000000000155e-05, 4.430499999999796e-05, 4.379200000000083e-05, 4.3652999999997666e-05, 4.3874999999998776e-05, 4.3653000000001135e-05, 4.3624999999998526e-05, 4.43060000000009e-05, 4.4167000000001205e-05, 4.3860999999999206e-05, 4.3874999999998776e-05, 4.3833000000000066e-05, 4.4069000000000746e-05, 4.3541000000001107e-05, 4.394400000000062e-05, 4.41939999999974e-05, 4.416600000000173e-05, 4.4055000000001177e-05, 4.4361000000003176e-05, 4.3596999999999386e-05, 4.401400000000194e-05, 4.4305000000001427e-05, 4.423599999999958e-05, 4.4431000000001025e-05, 4.373599999999908e-05, 4.402800000000151e-05, 4.398599999999933e-05, 4.402799999999804e-05]</msg>
<status status="PASS" starttime="20201115 23:02:26.712" endtime="20201115 23:02:26.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.708" endtime="20201115 23:02:26.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.717" endtime="20201115 23:02:26.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.720" endtime="20201115 23:02:26.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.719" endtime="20201115 23:02:26.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.715" endtime="20201115 23:02:26.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.347" endtime="20201115 23:02:26.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.345" endtime="20201115 23:02:26.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.344" endtime="20201115 23:02:26.742"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.744" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.753" endtime="20201115 23:02:26.770"></status>
</kw>
<msg timestamp="20201115 23:02:26.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.751" endtime="20201115 23:02:26.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.772" endtime="20201115 23:02:26.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.774" endtime="20201115 23:02:26.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.749" endtime="20201115 23:02:26.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.746" endtime="20201115 23:02:26.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.784" endtime="20201115 23:02:27.069"></status>
</kw>
<msg timestamp="20201115 23:02:27.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:26.782" endtime="20201115 23:02:27.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023271097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0233165, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:27.074" endtime="20201115 23:02:27.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.082" endtime="20201115 23:02:27.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.779" endtime="20201115 23:02:27.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.778" endtime="20201115 23:02:27.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.089" level="INFO">${RESULT} = [{'time': 0.0233165, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5402999999999416e-05, 'source_diff': 4.5402999999999416e-05}, {'time': 0.023370486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.085" endtime="20201115 23:02:27.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.102" level="INFO">${ACCURACY} = {'source_diff': [4.5402999999999416e-05, 4.455499999999821e-05, 4.494399999999815e-05, 4.5097000000000886e-05, 4.470800000000094e-05, 4.4931000000001525e-05, 4.516599999999926e-05, 4.451400000000244e-...</msg>
<status status="PASS" starttime="20201115 23:02:27.090" endtime="20201115 23:02:27.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.107" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.106" endtime="20201115 23:02:27.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.109" level="INFO">VALUE: [4.5402999999999416e-05, 4.455499999999821e-05, 4.494399999999815e-05, 4.5097000000000886e-05, 4.470800000000094e-05, 4.4931000000001525e-05, 4.516599999999926e-05, 4.451400000000244e-05, 4.5444999999998126e-05, 4.457000000000072e-05, 4.49999999999999e-05, 4.4722999999999985e-05, 4.4736999999999555e-05, 4.53329999999981e-05, 4.509699999999742e-05, 4.544400000000212e-05, 4.472200000000051e-05, 4.498600000000033e-05, 4.501399999999947e-05, 4.530499999999896e-05, 4.5069000000001747e-05, 4.495800000000119e-05, 4.5388999999999846e-05, 4.5181000000001775e-05, 4.479199999999836e-05, 4.53060000000019e-05, 4.501399999999947e-05, 4.534799999999714e-05, 4.5152999999999166e-05, 4.4959000000000665e-05, 4.4667000000001705e-05, 4.4653000000002135e-05, 4.530599999999843e-05, 4.4959000000000665e-05, 4.5125000000000026e-05, 4.4874999999999776e-05, 4.497200000000076e-05, 4.4931000000001525e-05, 4.545799999999822e-05, 4.5111000000000456e-05, 4.534699999999767e-05, 4.5166999999998736e-05, 4.5361000000000706e-05, 4.4861000000000206e-05, 4.4652999999998666e-05, 4.5194999999997876e-05, 4.4874999999999776e-05, 4.501400000000294e-05, 4.4666999999998236e-05, 4.476399999999922e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.108" endtime="20201115 23:02:27.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.103" endtime="20201115 23:02:27.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.113" endtime="20201115 23:02:27.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.116" endtime="20201115 23:02:27.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.114" endtime="20201115 23:02:27.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.111" endtime="20201115 23:02:27.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.745" endtime="20201115 23:02:27.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.743" endtime="20201115 23:02:27.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.742" endtime="20201115 23:02:27.138"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.140" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.148" endtime="20201115 23:02:27.164"></status>
</kw>
<msg timestamp="20201115 23:02:27.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.147" endtime="20201115 23:02:27.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.166" endtime="20201115 23:02:27.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.168" endtime="20201115 23:02:27.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.144" endtime="20201115 23:02:27.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.142" endtime="20201115 23:02:27.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.177" endtime="20201115 23:02:27.463"></status>
</kw>
<msg timestamp="20201115 23:02:27.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.176" endtime="20201115 23:02:27.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.468" endtime="20201115 23:02:27.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.476" endtime="20201115 23:02:27.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.173" endtime="20201115 23:02:27.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.172" endtime="20201115 23:02:27.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.483" level="INFO">${RESULT} = [{'time': 0.021879611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.602800000000004e-05, 'source_diff': 4.602800000000004e-05}, {'time': 0.021936611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.479" endtime="20201115 23:02:27.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.496" level="INFO">${ACCURACY} = {'source_diff': [4.602800000000004e-05, 4.6361000000001706e-05, 4.608299999999885e-05, 4.58060000000024e-05, 4.586099999999774e-05, 4.60000000000009e-05, 4.587499999999731e-05, 4.5680999999998806e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:27.484" endtime="20201115 23:02:27.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.501" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.500" endtime="20201115 23:02:27.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.503" level="INFO">VALUE: [4.602800000000004e-05, 4.6361000000001706e-05, 4.608299999999885e-05, 4.58060000000024e-05, 4.586099999999774e-05, 4.60000000000009e-05, 4.587499999999731e-05, 4.5680999999998806e-05, 4.5889000000000346e-05, 4.573600000000108e-05, 4.5930999999999056e-05, 4.595800000000219e-05, 4.6194999999998876e-05, 4.620800000000244e-05, 4.645799999999922e-05, 4.55130000000005e-05, 4.634699999999867e-05, 4.601400000000047e-05, 4.5889000000000346e-05, 4.56939999999989e-05, 4.5861000000001206e-05, 4.623600000000158e-05, 4.606899999999928e-05, 4.582000000000197e-05, 4.5666999999999236e-05, 4.620800000000244e-05, 4.572199999999804e-05, 4.551399999999997e-05, 4.584699999999817e-05, 4.641599999999704e-05, 4.5959000000001665e-05, 4.6013999999997e-05, 4.566599999999976e-05, 4.584699999999817e-05, 4.593000000000305e-05, 4.61939999999994e-05, 4.6361000000001706e-05, 4.548600000000083e-05, 4.601400000000047e-05, 4.577799999999979e-05, 4.6083000000002317e-05, 4.631899999999953e-05, 4.559699999999792e-05, 4.5875000000000776e-05, 4.5611000000000956e-05, 4.5639000000000096e-05, 4.5666999999999236e-05, 4.555600000000215e-05, 4.5875000000000776e-05, 4.6375000000001276e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.502" endtime="20201115 23:02:27.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.497" endtime="20201115 23:02:27.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.507" endtime="20201115 23:02:27.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.510" endtime="20201115 23:02:27.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.509" endtime="20201115 23:02:27.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.505" endtime="20201115 23:02:27.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.141" endtime="20201115 23:02:27.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.139" endtime="20201115 23:02:27.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.138" endtime="20201115 23:02:27.531"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.534" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.542" endtime="20201115 23:02:27.558"></status>
</kw>
<msg timestamp="20201115 23:02:27.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.541" endtime="20201115 23:02:27.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.559" endtime="20201115 23:02:27.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.562" endtime="20201115 23:02:27.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.538" endtime="20201115 23:02:27.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.536" endtime="20201115 23:02:27.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.571" endtime="20201115 23:02:27.860"></status>
</kw>
<msg timestamp="20201115 23:02:27.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:27.570" endtime="20201115 23:02:27.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02204125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:27.864" endtime="20201115 23:02:27.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.872" endtime="20201115 23:02:27.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.567" endtime="20201115 23:02:27.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.565" endtime="20201115 23:02:27.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.879" level="INFO">${RESULT} = [{'time': 0.02204125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.71529999999977e-05, 'source_diff': 4.71529999999977e-05}, {'time': 0.022099264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:02:27.876" endtime="20201115 23:02:27.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.893" level="INFO">${ACCURACY} = {'source_diff': [4.71529999999977e-05, 4.7389000000001846e-05, 4.697199999999929e-05, 4.6944999999999626e-05, 4.686099999999874e-05, 4.7445000000000126e-05, 4.65139999999975e-05, 4.6625000000001526e-0...</msg>
<status status="PASS" starttime="20201115 23:02:27.880" endtime="20201115 23:02:27.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.897" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.896" endtime="20201115 23:02:27.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.900" level="INFO">VALUE: [4.71529999999977e-05, 4.7389000000001846e-05, 4.697199999999929e-05, 4.6944999999999626e-05, 4.686099999999874e-05, 4.7445000000000126e-05, 4.65139999999975e-05, 4.6625000000001526e-05, 4.677800000000079e-05, 4.694400000000015e-05, 4.725000000000215e-05, 4.744400000000065e-05, 4.730500000000096e-05, 4.680500000000046e-05, 4.670799999999947e-05, 4.687499999999831e-05, 4.724999999999868e-05, 4.744400000000065e-05, 4.702799999999757e-05, 4.680599999999993e-05, 4.701400000000147e-05, 4.6667000000000236e-05, 4.673599999999861e-05, 4.658399999999882e-05, 4.652800000000054e-05, 4.702800000000104e-05, 4.730500000000096e-05, 4.7222999999999016e-05, 4.656899999999978e-05, 4.724999999999868e-05, 4.71940000000004e-05, 4.730500000000096e-05, 4.695799999999972e-05, 4.730500000000096e-05, 4.651400000000097e-05, 4.747200000000326e-05, 4.672199999999904e-05, 4.745800000000022e-05, 4.73330000000001e-05, 4.7153000000001166e-05, 4.658299999999935e-05, 4.7472999999999266e-05, 4.658399999999882e-05, 4.708399999999932e-05, 4.722199999999954e-05, 4.6639000000001096e-05, 4.6944999999999626e-05, 4.716699999999727e-05, 4.708299999999985e-05, 4.706900000000028e-05]</msg>
<status status="PASS" starttime="20201115 23:02:27.898" endtime="20201115 23:02:27.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.894" endtime="20201115 23:02:27.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.903" endtime="20201115 23:02:27.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.907" endtime="20201115 23:02:27.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.905" endtime="20201115 23:02:27.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.902" endtime="20201115 23:02:27.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.534" endtime="20201115 23:02:27.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.533" endtime="20201115 23:02:27.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.532" endtime="20201115 23:02:27.928"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.930" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.939" endtime="20201115 23:02:27.955"></status>
</kw>
<msg timestamp="20201115 23:02:27.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.937" endtime="20201115 23:02:27.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.957" endtime="20201115 23:02:27.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.959" endtime="20201115 23:02:27.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.934" endtime="20201115 23:02:27.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.932" endtime="20201115 23:02:27.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.968" endtime="20201115 23:02:28.254"></status>
</kw>
<msg timestamp="20201115 23:02:28.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02281225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:27.967" endtime="20201115 23:02:28.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02281225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:28.258" endtime="20201115 23:02:28.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.266" endtime="20201115 23:02:28.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.964" endtime="20201115 23:02:28.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.962" endtime="20201115 23:02:28.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.273" level="INFO">${RESULT} = [{'time': 0.02281225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.777799999999832e-05, 'source_diff': 4.777799999999832e-05}, {'time': 0.022867264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:28.270" endtime="20201115 23:02:28.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.288" level="INFO">${ACCURACY} = {'source_diff': [4.777799999999832e-05, 4.780600000000093e-05, 4.8013999999999e-05, 4.818099999999784e-05, 4.757000000000025e-05, 4.823599999999664e-05, 4.752800000000154e-05, 4.787499999999931e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:02:28.274" endtime="20201115 23:02:28.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.293" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.292" endtime="20201115 23:02:28.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.295" level="INFO">VALUE: [4.777799999999832e-05, 4.780600000000093e-05, 4.8013999999999e-05, 4.818099999999784e-05, 4.757000000000025e-05, 4.823599999999664e-05, 4.752800000000154e-05, 4.787499999999931e-05, 4.76529999999982e-05, 4.831899999999806e-05, 4.829199999999839e-05, 4.758300000000035e-05, 4.781900000000103e-05, 4.749999999999893e-05, 4.7903000000001916e-05, 4.775000000000265e-05, 4.794399999999768e-05, 4.809700000000042e-05, 4.831899999999806e-05, 4.772200000000004e-05, 4.837499999999981e-05, 4.773599999999961e-05, 4.7945000000000626e-05, 4.829199999999839e-05, 4.784700000000017e-05, 4.749999999999893e-05, 4.758399999999982e-05, 4.78200000000005e-05, 4.766599999999829e-05, 4.781899999999756e-05, 4.830599999999796e-05, 4.809700000000042e-05, 4.765200000000219e-05, 4.809700000000042e-05, 4.749999999999893e-05, 4.768000000000133e-05, 4.767999999999786e-05, 4.748599999999936e-05, 4.842999999999861e-05, 4.772200000000004e-05, 4.820800000000097e-05, 4.795800000000072e-05, 4.847200000000079e-05, 4.776399999999875e-05, 4.7931000000001056e-05, 4.774999999999918e-05, 4.808300000000085e-05, 4.818099999999784e-05, 4.786199999999921e-05, 4.8195000000000876e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.294" endtime="20201115 23:02:28.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.289" endtime="20201115 23:02:28.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.298" endtime="20201115 23:02:28.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.302" endtime="20201115 23:02:28.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.300" endtime="20201115 23:02:28.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.297" endtime="20201115 23:02:28.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.931" endtime="20201115 23:02:28.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.929" endtime="20201115 23:02:28.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.928" endtime="20201115 23:02:28.323"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.325" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.334" endtime="20201115 23:02:28.351"></status>
</kw>
<msg timestamp="20201115 23:02:28.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.332" endtime="20201115 23:02:28.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.352" endtime="20201115 23:02:28.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.355" endtime="20201115 23:02:28.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.330" endtime="20201115 23:02:28.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.327" endtime="20201115 23:02:28.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.364" endtime="20201115 23:02:28.650"></status>
</kw>
<msg timestamp="20201115 23:02:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.363" endtime="20201115 23:02:28.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.654" endtime="20201115 23:02:28.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.662" endtime="20201115 23:02:28.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.360" endtime="20201115 23:02:28.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.358" endtime="20201115 23:02:28.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.669" level="INFO">${RESULT} = [{'time': 0.022528208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930499999999949e-05, 'source_diff': 4.930499999999949e-05}, {'time': 0.022585181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:28.666" endtime="20201115 23:02:28.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.683" level="INFO">${ACCURACY} = {'source_diff': [4.930499999999949e-05, 4.900000000000043e-05, 4.897199999999782e-05, 4.859699999999745e-05, 4.858300000000135e-05, 4.908299999999838e-05, 4.873600000000061e-05, 4.892999999999911e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:28.670" endtime="20201115 23:02:28.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.687" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.686" endtime="20201115 23:02:28.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.690" level="INFO">VALUE: [4.930499999999949e-05, 4.900000000000043e-05, 4.897199999999782e-05, 4.859699999999745e-05, 4.858300000000135e-05, 4.908299999999838e-05, 4.873600000000061e-05, 4.892999999999911e-05, 4.937499999999734e-05, 4.91529999999997e-05, 4.894399999999868e-05, 4.894399999999868e-05, 4.911100000000099e-05, 4.912500000000056e-05, 4.924999999999721e-05, 4.8695000000001376e-05, 4.936100000000124e-05, 4.906999999999828e-05, 4.877800000000279e-05, 4.929199999999939e-05, 4.8945000000001626e-05, 4.944399999999918e-05, 4.906900000000228e-05, 4.866600000000276e-05, 4.90270000000001e-05, 4.917999999999936e-05, 4.85139999999995e-05, 4.924999999999721e-05, 4.905499999999924e-05, 4.9014e-05, 4.912500000000056e-05, 4.900000000000043e-05, 4.9320000000002e-05, 4.887500000000031e-05, 4.8945000000001626e-05, 4.936100000000124e-05, 4.905499999999924e-05, 4.93330000000021e-05, 4.918099999999884e-05, 4.866599999999929e-05, 4.930499999999949e-05, 4.911100000000099e-05, 4.887500000000031e-05, 4.879099999999942e-05, 4.925000000000068e-05, 4.929099999999992e-05, 4.9014e-05, 4.8667000000002236e-05, 4.872200000000104e-05, 4.902800000000304e-05]</msg>
<status status="PASS" starttime="20201115 23:02:28.688" endtime="20201115 23:02:28.690"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.684" endtime="20201115 23:02:28.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.693" endtime="20201115 23:02:28.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.696" endtime="20201115 23:02:28.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.695" endtime="20201115 23:02:28.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.691" endtime="20201115 23:02:28.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.326" endtime="20201115 23:02:28.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.324" endtime="20201115 23:02:28.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.323" endtime="20201115 23:02:28.718"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.720" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.730" endtime="20201115 23:02:28.745"></status>
</kw>
<msg timestamp="20201115 23:02:28.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.728" endtime="20201115 23:02:28.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.747" endtime="20201115 23:02:28.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.749" endtime="20201115 23:02:28.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.725" endtime="20201115 23:02:28.752"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.723" endtime="20201115 23:02:28.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.759" endtime="20201115 23:02:29.044"></status>
</kw>
<msg timestamp="20201115 23:02:29.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023413958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.757" endtime="20201115 23:02:29.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023413958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.049" endtime="20201115 23:02:29.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.057" endtime="20201115 23:02:29.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.754" endtime="20201115 23:02:29.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.753" endtime="20201115 23:02:29.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.064" level="INFO">${RESULT} = [{'time': 0.023413958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.944399999999918e-05, 'source_diff': 4.944399999999918e-05}, {'time': 0.023471958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.060" endtime="20201115 23:02:29.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.077" level="INFO">${ACCURACY} = {'source_diff': [4.944399999999918e-05, 5.044400000000018e-05, 4.979199999999989e-05, 4.972200000000204e-05, 5.030500000000049e-05, 4.95140000000005e-05, 5.040299999999748e-05, 5.036100000000224e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:29.065" endtime="20201115 23:02:29.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.082" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.081" endtime="20201115 23:02:29.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.084" level="INFO">VALUE: [4.944399999999918e-05, 5.044400000000018e-05, 4.979199999999989e-05, 4.972200000000204e-05, 5.030500000000049e-05, 4.95140000000005e-05, 5.040299999999748e-05, 5.036100000000224e-05, 5.045799999999975e-05, 4.979199999999989e-05, 5.043100000000009e-05, 4.966699999999977e-05, 5.0014000000001e-05, 4.973600000000161e-05, 4.96530000000002e-05, 5.01530000000007e-05, 5.0387999999998434e-05, 4.9888000000001403e-05, 4.993000000000011e-05, 4.987500000000131e-05, 4.980499999999999e-05, 4.993000000000011e-05, 5.022199999999907e-05, 5.002800000000057e-05, 5.02079999999995e-05, 4.990300000000045e-05, 5.023600000000211e-05, 5.016700000000027e-05, 5.031999999999953e-05, 4.973599999999814e-05, 4.998599999999839e-05, 4.952800000000007e-05, 5.044499999999966e-05, 4.9723000000001516e-05, 4.997199999999882e-05, 5.036099999999877e-05, 4.998600000000186e-05, 4.967999999999986e-05, 5.011100000000199e-05, 5.01530000000007e-05, 5.0014000000001e-05, 5.009699999999895e-05, 5.005599999999971e-05, 5.037500000000181e-05, 4.966699999999977e-05, 4.993099999999959e-05, 4.998599999999839e-05, 4.994499999999916e-05, 4.993099999999959e-05, 4.980600000000293e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.083" endtime="20201115 23:02:29.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.078" endtime="20201115 23:02:29.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.088" endtime="20201115 23:02:29.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.091" endtime="20201115 23:02:29.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.089" endtime="20201115 23:02:29.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.086" endtime="20201115 23:02:29.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.721" endtime="20201115 23:02:29.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.719" endtime="20201115 23:02:29.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.718" endtime="20201115 23:02:29.112"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.114" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.123" endtime="20201115 23:02:29.139"></status>
</kw>
<msg timestamp="20201115 23:02:29.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.121" endtime="20201115 23:02:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.140" endtime="20201115 23:02:29.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.143" endtime="20201115 23:02:29.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.119" endtime="20201115 23:02:29.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.117" endtime="20201115 23:02:29.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.152" endtime="20201115 23:02:29.437"></status>
</kw>
<msg timestamp="20201115 23:02:29.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.151" endtime="20201115 23:02:29.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.442" endtime="20201115 23:02:29.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.450" endtime="20201115 23:02:29.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.148" endtime="20201115 23:02:29.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.146" endtime="20201115 23:02:29.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.457" level="INFO">${RESULT} = [{'time': 0.021976528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068100000000034e-05, 'source_diff': 5.068100000000034e-05}, {'time': 0.022035528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.453" endtime="20201115 23:02:29.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.470" level="INFO">${ACCURACY} = {'source_diff': [5.068100000000034e-05, 5.08469999999997e-05, 5.095899999999973e-05, 5.119400000000093e-05, 5.113900000000213e-05, 5.058399999999935e-05, 5.1387999999999434e-05, 5.130500000000149e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:29.458" endtime="20201115 23:02:29.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.475" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.474" endtime="20201115 23:02:29.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.477" level="INFO">VALUE: [5.068100000000034e-05, 5.08469999999997e-05, 5.095899999999973e-05, 5.119400000000093e-05, 5.113900000000213e-05, 5.058399999999935e-05, 5.1387999999999434e-05, 5.130500000000149e-05, 5.116600000000179e-05, 5.127800000000182e-05, 5.08469999999997e-05, 5.12080000000005e-05, 5.075000000000218e-05, 5.132000000000053e-05, 5.086099999999927e-05, 5.088900000000188e-05, 5.136099999999977e-05, 5.143100000000109e-05, 5.061100000000249e-05, 5.063899999999816e-05, 5.130600000000096e-05, 5.123599999999964e-05, 5.131900000000106e-05, 5.116600000000179e-05, 5.066600000000129e-05, 5.122200000000007e-05, 5.101399999999853e-05, 5.088899999999841e-05, 5.1014000000002e-05, 5.1014000000002e-05, 5.130599999999749e-05, 5.105500000000124e-05, 5.072199999999957e-05, 5.113900000000213e-05, 5.118100000000084e-05, 5.144499999999719e-05, 5.066700000000077e-05, 5.136099999999977e-05, 5.133300000000063e-05, 5.059800000000239e-05, 5.1165999999998324e-05, 5.099999999999896e-05, 5.054100000000117e-05, 5.080500000000099e-05, 5.066600000000129e-05, 5.081900000000056e-05, 5.086099999999927e-05, 5.093000000000111e-05, 5.112499999999909e-05, 5.058299999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.476" endtime="20201115 23:02:29.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.471" endtime="20201115 23:02:29.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.480" endtime="20201115 23:02:29.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.484" endtime="20201115 23:02:29.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.482" endtime="20201115 23:02:29.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.479" endtime="20201115 23:02:29.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.115" endtime="20201115 23:02:29.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.113" endtime="20201115 23:02:29.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.112" endtime="20201115 23:02:29.505"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.508" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.516" endtime="20201115 23:02:29.534"></status>
</kw>
<msg timestamp="20201115 23:02:29.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.515" endtime="20201115 23:02:29.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.536" endtime="20201115 23:02:29.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.538" endtime="20201115 23:02:29.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.512" endtime="20201115 23:02:29.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.510" endtime="20201115 23:02:29.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.548" endtime="20201115 23:02:29.833"></status>
</kw>
<msg timestamp="20201115 23:02:29.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023319083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.546" endtime="20201115 23:02:29.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023267347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023319083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.837" endtime="20201115 23:02:29.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.846" endtime="20201115 23:02:29.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.543" endtime="20201115 23:02:29.848"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.542" endtime="20201115 23:02:29.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.852" level="INFO">${RESULT} = [{'time': 0.023319083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.173600000000014e-05, 'source_diff': 5.173600000000014e-05}, {'time': 0.023380111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.849" endtime="20201115 23:02:29.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.867" level="INFO">${ACCURACY} = {'source_diff': [5.173600000000014e-05, 5.190299999999898e-05, 5.2193999999998464e-05, 5.20279999999991e-05, 5.206900000000181e-05, 5.244400000000218e-05, 5.186100000000027e-05, 5.179200000000189e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:29.853" endtime="20201115 23:02:29.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.872" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.871" endtime="20201115 23:02:29.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.874" level="INFO">VALUE: [5.173600000000014e-05, 5.190299999999898e-05, 5.2193999999998464e-05, 5.20279999999991e-05, 5.206900000000181e-05, 5.244400000000218e-05, 5.186100000000027e-05, 5.179200000000189e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.238899999999991e-05, 5.230599999999849e-05, 5.194499999999769e-05, 5.187499999999984e-05, 5.165299999999873e-05, 5.1665999999998824e-05, 5.245800000000175e-05, 5.168000000000186e-05, 5.193099999999812e-05, 5.15279999999986e-05, 5.2207999999998034e-05, 5.2443999999998714e-05, 5.165299999999873e-05, 5.18470000000007e-05, 5.1708000000001e-05, 5.159699999999698e-05, 5.195800000000125e-05, 5.186100000000027e-05, 5.237500000000034e-05, 5.190299999999898e-05, 5.179199999999842e-05, 5.202800000000257e-05, 5.187499999999984e-05, 5.165299999999873e-05, 5.208400000000085e-05, 5.174999999999971e-05, 5.22080000000015e-05, 5.169400000000143e-05, 5.219400000000193e-05, 5.208300000000138e-05, 5.15279999999986e-05, 5.213899999999966e-05, 5.1929999999998644e-05, 5.225000000000021e-05, 5.230599999999849e-05, 5.187499999999984e-05, 5.215299999999923e-05, 5.186100000000027e-05, 5.199999999999996e-05, 5.209800000000042e-05]</msg>
<status status="PASS" starttime="20201115 23:02:29.873" endtime="20201115 23:02:29.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.868" endtime="20201115 23:02:29.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.877" endtime="20201115 23:02:29.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.881" endtime="20201115 23:02:29.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.879" endtime="20201115 23:02:29.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.876" endtime="20201115 23:02:29.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.508" endtime="20201115 23:02:29.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.506" endtime="20201115 23:02:29.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.506" endtime="20201115 23:02:29.907"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.918" endtime="20201115 23:02:29.934"></status>
</kw>
<msg timestamp="20201115 23:02:29.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.916" endtime="20201115 23:02:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.936" endtime="20201115 23:02:29.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.938" endtime="20201115 23:02:29.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.913" endtime="20201115 23:02:29.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.911" endtime="20201115 23:02:29.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.947" endtime="20201115 23:02:30.232"></status>
</kw>
<msg timestamp="20201115 23:02:30.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027077181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027130472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.946" endtime="20201115 23:02:30.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027077181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027130472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.237" endtime="20201115 23:02:30.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.245" endtime="20201115 23:02:30.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.943" endtime="20201115 23:02:30.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.942" endtime="20201115 23:02:30.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.251" level="INFO">${RESULT} = [{'time': 0.027130472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.329100000000045e-05, 'source_diff': 5.329100000000045e-05}, {'time': 0.027193486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.248" endtime="20201115 23:02:30.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.265" level="INFO">${ACCURACY} = {'source_diff': [5.329100000000045e-05, 5.255499999999927e-05, 5.25279999999996e-05, 5.276400000000028e-05, 5.293100000000259e-05, 5.250000000000046e-05, 5.293099999999912e-05, 5.259799999999745e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:30.252" endtime="20201115 23:02:30.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.270" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.269" endtime="20201115 23:02:30.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.272" level="INFO">VALUE: [5.329100000000045e-05, 5.255499999999927e-05, 5.25279999999996e-05, 5.276400000000028e-05, 5.293100000000259e-05, 5.250000000000046e-05, 5.293099999999912e-05, 5.259799999999745e-05, 5.315299999999676e-05, 5.30280000000001e-05, 5.2957999999998784e-05, 5.336200000000124e-05, 5.258399999999788e-05, 5.2707999999998534e-05, 5.265299999999973e-05, 5.3221999999998604e-05, 5.329100000000045e-05, 5.3166000000000324e-05, 5.301400000000053e-05, 5.265299999999973e-05, 5.30280000000001e-05, 5.3443999999999714e-05, 5.250000000000046e-05, 5.259700000000145e-05, 5.277799999999985e-05, 5.336100000000177e-05, 5.315300000000023e-05, 5.338900000000091e-05, 5.343099999999962e-05, 5.2902000000000504e-05, 5.263900000000016e-05, 5.2916000000000074e-05, 5.3430000000000144e-05, 5.2943999999999214e-05, 5.315300000000023e-05, 5.286100000000127e-05, 5.283299999999866e-05, 5.250000000000046e-05, 5.300000000000096e-05, 5.26669999999993e-05, 5.258399999999788e-05, 5.313900000000066e-05, 5.276400000000028e-05, 5.250000000000046e-05, 5.329100000000045e-05, 5.331999999999906e-05, 5.315300000000023e-05, 5.323700000000112e-05, 5.280499999999952e-05, 5.286100000000127e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.271" endtime="20201115 23:02:30.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.266" endtime="20201115 23:02:30.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.276" endtime="20201115 23:02:30.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.279" endtime="20201115 23:02:30.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.278" endtime="20201115 23:02:30.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.274" endtime="20201115 23:02:30.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.910" endtime="20201115 23:02:30.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.908" endtime="20201115 23:02:30.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.907" endtime="20201115 23:02:30.300"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.303" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.311" endtime="20201115 23:02:30.328"></status>
</kw>
<msg timestamp="20201115 23:02:30.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.309" endtime="20201115 23:02:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.329" endtime="20201115 23:02:30.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.332" endtime="20201115 23:02:30.333"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.307" endtime="20201115 23:02:30.334"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.305" endtime="20201115 23:02:30.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.341" endtime="20201115 23:02:30.626"></status>
</kw>
<msg timestamp="20201115 23:02:30.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.339" endtime="20201115 23:02:30.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021958083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.630" endtime="20201115 23:02:30.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.638" endtime="20201115 23:02:30.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.337" endtime="20201115 23:02:30.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.335" endtime="20201115 23:02:30.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.645" level="INFO">${RESULT} = [{'time': 0.022011986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.390300000000098e-05, 'source_diff': 5.390300000000098e-05}, {'time': 0.022075972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:30.641" endtime="20201115 23:02:30.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.658" level="INFO">${ACCURACY} = {'source_diff': [5.390300000000098e-05, 5.431900000000059e-05, 5.401400000000153e-05, 5.401400000000153e-05, 5.425000000000221e-05, 5.393100000000012e-05, 5.355599999999974e-05, 5.401400000000153e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:30.646" endtime="20201115 23:02:30.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.663" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.662" endtime="20201115 23:02:30.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.666" level="INFO">VALUE: [5.390300000000098e-05, 5.431900000000059e-05, 5.401400000000153e-05, 5.401400000000153e-05, 5.425000000000221e-05, 5.393100000000012e-05, 5.355599999999974e-05, 5.401400000000153e-05, 5.4277999999997883e-05, 5.359799999999845e-05, 5.382000000000303e-05, 5.415300000000123e-05, 5.379200000000042e-05, 5.395899999999926e-05, 5.358299999999941e-05, 5.384699999999923e-05, 5.434699999999973e-05, 5.411099999999905e-05, 5.380500000000052e-05, 5.437499999999887e-05, 5.373600000000214e-05, 5.387500000000184e-05, 5.359699999999898e-05, 5.363900000000116e-05, 5.4013999999998064e-05, 5.381999999999956e-05, 5.436100000000277e-05, 5.433399999999963e-05, 5.3527999999997133e-05, 5.3499999999997994e-05, 5.423699999999865e-05, 5.3957999999999784e-05, 5.408299999999991e-05, 5.361099999999855e-05, 5.359699999999898e-05, 5.3930000000000644e-05, 5.365300000000073e-05, 5.440300000000148e-05, 5.3929999999997175e-05, 5.438900000000191e-05, 5.406900000000034e-05, 5.380599999999999e-05, 5.395899999999926e-05, 5.444499999999672e-05, 5.379200000000042e-05, 5.401400000000153e-05, 5.418100000000037e-05, 5.4430000000001144e-05, 5.437499999999887e-05, 5.352699999999766e-05]</msg>
<status status="PASS" starttime="20201115 23:02:30.664" endtime="20201115 23:02:30.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.659" endtime="20201115 23:02:30.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.669" endtime="20201115 23:02:30.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.673" endtime="20201115 23:02:30.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.671" endtime="20201115 23:02:30.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.668" endtime="20201115 23:02:30.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.303" endtime="20201115 23:02:30.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.301" endtime="20201115 23:02:30.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.301" endtime="20201115 23:02:30.694"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.704" endtime="20201115 23:02:30.722"></status>
</kw>
<msg timestamp="20201115 23:02:30.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.703" endtime="20201115 23:02:30.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.723" endtime="20201115 23:02:30.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.726" endtime="20201115 23:02:30.727"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.700" endtime="20201115 23:02:30.728"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.698" endtime="20201115 23:02:30.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.735" endtime="20201115 23:02:31.021"></status>
</kw>
<msg timestamp="20201115 23:02:31.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.733" endtime="20201115 23:02:31.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.025" endtime="20201115 23:02:31.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.033" endtime="20201115 23:02:31.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.731" endtime="20201115 23:02:31.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.729" endtime="20201115 23:02:31.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.040" level="INFO">${RESULT} = [{'time': 0.022036153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.470900000000001e-05, 'source_diff': 5.470900000000001e-05}, {'time': 0.022102167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.037" endtime="20201115 23:02:31.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.054" level="INFO">${ACCURACY} = {'source_diff': [5.470900000000001e-05, 5.506999999999734e-05, 5.4722000000000104e-05, 5.465299999999826e-05, 5.508300000000091e-05, 5.5263999999999314e-05, 5.4651999999998785e-05, 5.451400000000203e-...</msg>
<status status="PASS" starttime="20201115 23:02:31.041" endtime="20201115 23:02:31.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.059" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.058" endtime="20201115 23:02:31.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.061" level="INFO">VALUE: [5.470900000000001e-05, 5.506999999999734e-05, 5.4722000000000104e-05, 5.465299999999826e-05, 5.508300000000091e-05, 5.5263999999999314e-05, 5.4651999999998785e-05, 5.451400000000203e-05, 5.4749999999999244e-05, 5.477800000000185e-05, 5.5236000000000174e-05, 5.4958000000000784e-05, 5.5222000000000604e-05, 5.5305999999998023e-05, 5.482000000000056e-05, 5.48609999999998e-05, 5.525000000000321e-05, 5.454200000000117e-05, 5.452699999999866e-05, 5.465300000000173e-05, 5.4680000000001394e-05, 5.49869999999994e-05, 5.537499999999987e-05, 5.4943999999997745e-05, 5.512499999999962e-05, 5.4944000000001214e-05, 5.481900000000109e-05, 5.5208000000001034e-05, 5.4513999999998564e-05, 5.5457999999997815e-05, 5.491699999999808e-05, 5.519500000000094e-05, 5.482000000000056e-05, 5.458399999999988e-05, 5.458399999999988e-05, 5.50280000000021e-05, 5.4499999999998994e-05, 5.501400000000253e-05, 5.538899999999944e-05, 5.477699999999891e-05, 5.4735999999999674e-05, 5.476400000000228e-05, 5.465299999999826e-05, 5.5013999999999064e-05, 5.480499999999805e-05, 5.5027999999998634e-05, 5.4957999999997315e-05, 5.504200000000167e-05, 5.457000000000031e-05, 5.4722000000000104e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.060" endtime="20201115 23:02:31.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.055" endtime="20201115 23:02:31.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.064" endtime="20201115 23:02:31.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.068" endtime="20201115 23:02:31.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.066" endtime="20201115 23:02:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.063" endtime="20201115 23:02:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.697" endtime="20201115 23:02:31.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.695" endtime="20201115 23:02:31.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.694" endtime="20201115 23:02:31.089"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.091" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.100" endtime="20201115 23:02:31.117"></status>
</kw>
<msg timestamp="20201115 23:02:31.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.098" endtime="20201115 23:02:31.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.118" endtime="20201115 23:02:31.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.121" endtime="20201115 23:02:31.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.095" endtime="20201115 23:02:31.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.093" endtime="20201115 23:02:31.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.130" endtime="20201115 23:02:31.415"></status>
</kw>
<msg timestamp="20201115 23:02:31.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.128" endtime="20201115 23:02:31.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023211056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023267319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.419" endtime="20201115 23:02:31.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.428" endtime="20201115 23:02:31.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.126" endtime="20201115 23:02:31.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.124" endtime="20201115 23:02:31.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.435" level="INFO">${RESULT} = [{'time': 0.023267319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.626300000000084e-05, 'source_diff': 5.626300000000084e-05}, {'time': 0.023334333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.431" endtime="20201115 23:02:31.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.450" level="INFO">${ACCURACY} = {'source_diff': [5.626300000000084e-05, 5.602700000000016e-05, 5.551299999999662e-05, 5.631900000000259e-05, 5.633299999999869e-05, 5.5527999999999134e-05, 5.606999999999834e-05, 5.586099999999733e-05...</msg>
<status status="PASS" starttime="20201115 23:02:31.436" endtime="20201115 23:02:31.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.454" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.453" endtime="20201115 23:02:31.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.457" level="INFO">VALUE: [5.626300000000084e-05, 5.602700000000016e-05, 5.551299999999662e-05, 5.631900000000259e-05, 5.633299999999869e-05, 5.5527999999999134e-05, 5.606999999999834e-05, 5.586099999999733e-05, 5.5513999999999564e-05, 5.5736000000000674e-05, 5.5791999999998954e-05, 5.5638000000000215e-05, 5.55280000000026e-05, 5.558400000000088e-05, 5.58610000000008e-05, 5.588899999999994e-05, 5.593099999999865e-05, 5.5791999999998954e-05, 5.629099999999998e-05, 5.577699999999991e-05, 5.63610000000013e-05, 5.5957999999998315e-05, 5.5499999999999994e-05, 5.631899999999912e-05, 5.591700000000255e-05, 5.615299999999976e-05, 5.6014000000000064e-05, 5.611099999999758e-05, 5.63610000000013e-05, 5.6221999999998135e-05, 5.5805999999998523e-05, 5.593099999999865e-05, 5.587500000000037e-05, 5.568100000000187e-05, 5.6165999999999855e-05, 5.5943999999998745e-05, 5.5763999999999814e-05, 5.627800000000335e-05, 5.5957999999998315e-05, 5.6236000000001174e-05, 5.608300000000191e-05, 5.580499999999905e-05, 5.611099999999758e-05, 5.556899999999837e-05, 5.581999999999809e-05, 5.588899999999994e-05, 5.6000000000000494e-05, 5.590299999999951e-05, 5.588899999999994e-05, 5.6165999999999855e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.456" endtime="20201115 23:02:31.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.451" endtime="20201115 23:02:31.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.460" endtime="20201115 23:02:31.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.464" endtime="20201115 23:02:31.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.462" endtime="20201115 23:02:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.458" endtime="20201115 23:02:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.092" endtime="20201115 23:02:31.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.090" endtime="20201115 23:02:31.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.089" endtime="20201115 23:02:31.485"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.487" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.495" endtime="20201115 23:02:31.513"></status>
</kw>
<msg timestamp="20201115 23:02:31.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.494" endtime="20201115 23:02:31.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.514" endtime="20201115 23:02:31.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.517" endtime="20201115 23:02:31.518"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.491" endtime="20201115 23:02:31.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.489" endtime="20201115 23:02:31.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.526" endtime="20201115 23:02:31.813"></status>
</kw>
<msg timestamp="20201115 23:02:31.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.524" endtime="20201115 23:02:31.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.817" endtime="20201115 23:02:31.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.826" endtime="20201115 23:02:31.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.522" endtime="20201115 23:02:31.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.520" endtime="20201115 23:02:31.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.832" level="INFO">${RESULT} = [{'time': 0.021976056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.661200000000102e-05, 'source_diff': 5.661200000000102e-05}, {'time': 0.022044069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:31.829" endtime="20201115 23:02:31.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.846" level="INFO">${ACCURACY} = {'source_diff': [5.661200000000102e-05, 5.684699999999876e-05, 5.708299999999944e-05, 5.709700000000248e-05, 5.679100000000048e-05, 5.6943999999999745e-05, 5.7249999999998274e-05, 5.6930000000000175e-...</msg>
<status status="PASS" starttime="20201115 23:02:31.833" endtime="20201115 23:02:31.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.851" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.850" endtime="20201115 23:02:31.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.853" level="INFO">VALUE: [5.661200000000102e-05, 5.684699999999876e-05, 5.708299999999944e-05, 5.709700000000248e-05, 5.679100000000048e-05, 5.6943999999999745e-05, 5.7249999999998274e-05, 5.6930000000000175e-05, 5.7249999999998274e-05, 5.666699999999983e-05, 5.693099999999965e-05, 5.716700000000033e-05, 5.713899999999772e-05, 5.66809999999994e-05, 5.663900000000069e-05, 5.6750000000001244e-05, 5.6736000000001674e-05, 5.7221999999999135e-05, 5.6679999999999925e-05, 5.6999999999998024e-05, 5.6736000000001674e-05, 5.681899999999962e-05, 5.6764000000000814e-05, 5.7292000000000454e-05, 5.6957999999999315e-05, 5.6693999999999495e-05, 5.737500000000187e-05, 5.737500000000187e-05, 5.670899999999854e-05, 5.695899999999879e-05, 5.688900000000094e-05, 5.7055999999999774e-05, 5.7000000000001494e-05, 5.6638000000001215e-05, 5.658299999999894e-05, 5.702700000000116e-05, 5.715300000000076e-05, 5.713900000000119e-05, 5.688900000000094e-05, 5.709700000000248e-05, 5.6721999999998635e-05, 5.661099999999808e-05, 5.659700000000198e-05, 5.6721999999998635e-05, 5.7000000000001494e-05, 5.6750000000001244e-05, 5.7083999999998913e-05, 5.716700000000033e-05, 5.666699999999983e-05, 5.663900000000069e-05]</msg>
<status status="PASS" starttime="20201115 23:02:31.852" endtime="20201115 23:02:31.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.847" endtime="20201115 23:02:31.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.857" endtime="20201115 23:02:31.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.860" endtime="20201115 23:02:31.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.859" endtime="20201115 23:02:31.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.855" endtime="20201115 23:02:31.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.488" endtime="20201115 23:02:31.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.486" endtime="20201115 23:02:31.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.485" endtime="20201115 23:02:31.881"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.884" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.892" endtime="20201115 23:02:31.908"></status>
</kw>
<msg timestamp="20201115 23:02:31.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.890" endtime="20201115 23:02:31.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.909" endtime="20201115 23:02:31.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.912" endtime="20201115 23:02:31.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.888" endtime="20201115 23:02:31.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.886" endtime="20201115 23:02:31.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.921" endtime="20201115 23:02:32.206"></status>
</kw>
<msg timestamp="20201115 23:02:32.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.920" endtime="20201115 23:02:32.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.211" endtime="20201115 23:02:32.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.219" endtime="20201115 23:02:32.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.917" endtime="20201115 23:02:32.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.915" endtime="20201115 23:02:32.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.226" level="INFO">${RESULT} = [{'time': 0.022013056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.815299999999829e-05, 'source_diff': 5.815299999999829e-05}, {'time': 0.022078083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:32.222" endtime="20201115 23:02:32.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.239" level="INFO">${ACCURACY} = {'source_diff': [5.815299999999829e-05, 5.763899999999822e-05, 5.811099999999958e-05, 5.834700000000026e-05, 5.8458000000000815e-05, 5.7944000000000745e-05, 5.7749999999998775e-05, 5.8277999999998414e...</msg>
<status status="PASS" starttime="20201115 23:02:32.227" endtime="20201115 23:02:32.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.244" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.243" endtime="20201115 23:02:32.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.247" level="INFO">VALUE: [5.815299999999829e-05, 5.763899999999822e-05, 5.811099999999958e-05, 5.834700000000026e-05, 5.8458000000000815e-05, 5.7944000000000745e-05, 5.7749999999998775e-05, 5.8277999999998414e-05, 5.81810000000009e-05, 5.7833999999999663e-05, 5.838899999999897e-05, 5.8027999999998164e-05, 5.836099999999983e-05, 5.8292000000001454e-05, 5.759799999999898e-05, 5.8250000000002744e-05, 5.7749999999998775e-05, 5.83749999999994e-05, 5.780500000000105e-05, 5.7500000000001994e-05, 5.8222000000000135e-05, 5.7971999999999885e-05, 5.7708000000000065e-05, 5.8013999999998594e-05, 5.8320000000000594e-05, 5.7999999999999025e-05, 5.8277999999998414e-05, 5.837500000000287e-05, 5.7569999999999844e-05, 5.765300000000126e-05, 5.7820000000000094e-05, 5.763900000000169e-05, 5.844500000000072e-05, 5.773699999999868e-05, 5.7930000000001175e-05, 5.761100000000255e-05, 5.8151999999998816e-05, 5.834699999999679e-05, 5.808300000000044e-05, 5.812499999999915e-05, 5.763899999999822e-05, 5.838900000000244e-05, 5.8235999999999705e-05, 5.808299999999697e-05, 5.7541999999997234e-05, 5.766700000000083e-05, 5.786099999999933e-05, 5.7527999999997664e-05, 5.770899999999954e-05, 5.8056000000000774e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.245" endtime="20201115 23:02:32.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.240" endtime="20201115 23:02:32.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.250" endtime="20201115 23:02:32.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.253" endtime="20201115 23:02:32.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.252" endtime="20201115 23:02:32.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.248" endtime="20201115 23:02:32.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.884" endtime="20201115 23:02:32.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.882" endtime="20201115 23:02:32.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.882" endtime="20201115 23:02:32.274"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.285" endtime="20201115 23:02:32.303"></status>
</kw>
<msg timestamp="20201115 23:02:32.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.284" endtime="20201115 23:02:32.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.304" endtime="20201115 23:02:32.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.307" endtime="20201115 23:02:32.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.281" endtime="20201115 23:02:32.309"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.279" endtime="20201115 23:02:32.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.316" endtime="20201115 23:02:32.602"></status>
</kw>
<msg timestamp="20201115 23:02:32.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.315" endtime="20201115 23:02:32.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.606" endtime="20201115 23:02:32.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.614" endtime="20201115 23:02:32.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.312" endtime="20201115 23:02:32.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.310" endtime="20201115 23:02:32.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.621" level="INFO">${RESULT} = [{'time': 0.022547153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8556000000001274e-05, 'source_diff': 5.8556000000001274e-05}, {'time': 0.022616139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.618" endtime="20201115 23:02:32.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.635" level="INFO">${ACCURACY} = {'source_diff': [5.8556000000001274e-05, 5.936100000000083e-05, 5.8749999999999775e-05, 5.9098000000000483e-05, 5.9000000000000025e-05, 5.8791999999998484e-05, 5.8972000000000885e-05, 5.94029999999995...</msg>
<status status="PASS" starttime="20201115 23:02:32.622" endtime="20201115 23:02:32.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.639" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.638" endtime="20201115 23:02:32.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.642" level="INFO">VALUE: [5.8556000000001274e-05, 5.936100000000083e-05, 5.8749999999999775e-05, 5.9098000000000483e-05, 5.9000000000000025e-05, 5.8791999999998484e-05, 5.8972000000000885e-05, 5.940299999999954e-05, 5.9415999999999636e-05, 5.9264000000003314e-05, 5.936100000000083e-05, 5.9277999999999414e-05, 5.9472000000001385e-05, 5.8791999999998484e-05, 5.8527999999998664e-05, 5.888899999999947e-05, 5.916699999999886e-05, 5.8778000000002384e-05, 5.8763999999999345e-05, 5.9236000000000705e-05, 5.88749999999999e-05, 5.8584000000000414e-05, 5.895900000000079e-05, 5.9250000000000275e-05, 5.9278000000002884e-05, 5.8680000000001925e-05, 5.8499999999999525e-05, 5.888899999999947e-05, 5.933300000000169e-05, 5.9208000000001565e-05, 5.936100000000083e-05, 5.8749999999999775e-05, 5.895900000000079e-05, 5.9236000000000705e-05, 5.8513999999999095e-05, 5.919500000000147e-05, 5.9070000000001344e-05, 5.93750000000004e-05, 5.901300000000012e-05, 5.8736000000000205e-05, 5.854099999999876e-05, 5.8514000000002564e-05, 5.9027999999999164e-05, 5.8542000000001704e-05, 5.9458000000001815e-05, 5.923700000000018e-05, 5.8569999999997374e-05, 5.8848000000000233e-05, 5.944499999999825e-05, 5.8805999999998054e-05]</msg>
<status status="PASS" starttime="20201115 23:02:32.640" endtime="20201115 23:02:32.642"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.636" endtime="20201115 23:02:32.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.645" endtime="20201115 23:02:32.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.648" endtime="20201115 23:02:32.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.647" endtime="20201115 23:02:32.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.643" endtime="20201115 23:02:32.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.277" endtime="20201115 23:02:32.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.275" endtime="20201115 23:02:32.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.275" endtime="20201115 23:02:32.670"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.672" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.681" endtime="20201115 23:02:32.698"></status>
</kw>
<msg timestamp="20201115 23:02:32.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.679" endtime="20201115 23:02:32.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.700" endtime="20201115 23:02:32.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.702" endtime="20201115 23:02:32.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.677" endtime="20201115 23:02:32.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.674" endtime="20201115 23:02:32.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.711" endtime="20201115 23:02:32.996"></status>
</kw>
<msg timestamp="20201115 23:02:33.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02379325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:32.710" endtime="20201115 23:02:33.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02379325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:33.001" endtime="20201115 23:02:33.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.009" endtime="20201115 23:02:33.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.707" endtime="20201115 23:02:33.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.706" endtime="20201115 23:02:33.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.016" level="INFO">${RESULT} = [{'time': 0.023853597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.034700000000226e-05, 'source_diff': 6.034700000000226e-05}, {'time': 0.023923569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.012" endtime="20201115 23:02:33.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.031" level="INFO">${ACCURACY} = {'source_diff': [6.034700000000226e-05, 6.001299999999765e-05, 6.0429999999996736e-05, 6.005499999999983e-05, 5.959700000000151e-05, 5.993100000000265e-05, 5.9527999999999665e-05, 5.979100000000001e-0...</msg>
<status status="PASS" starttime="20201115 23:02:33.017" endtime="20201115 23:02:33.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.035" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.034" endtime="20201115 23:02:33.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.038" level="INFO">VALUE: [6.034700000000226e-05, 6.001299999999765e-05, 6.0429999999996736e-05, 6.005499999999983e-05, 5.959700000000151e-05, 5.993100000000265e-05, 5.9527999999999665e-05, 5.979100000000001e-05, 5.9514000000000095e-05, 5.983299999999872e-05, 5.990300000000004e-05, 5.959700000000151e-05, 6.020899999999857e-05, 6.027700000000094e-05, 5.959700000000151e-05, 5.965300000000326e-05, 6.0041999999999734e-05, 6.043099999999968e-05, 6.03750000000014e-05, 5.952699999999672e-05, 6.036099999999836e-05, 5.958300000000194e-05, 6.0027999999996695e-05, 5.9943999999999276e-05, 5.958300000000194e-05, 6.011100000000158e-05, 6.0221999999998665e-05, 5.9819999999998624e-05, 6.0457999999999346e-05, 5.9791999999999484e-05, 6.012500000000115e-05, 6.03889999999975e-05, 6.013899999999725e-05, 6.009699999999854e-05, 6.0472000000002385e-05, 6.037499999999793e-05, 6.0152000000000816e-05, 6.011099999999811e-05, 6.037499999999793e-05, 5.98750000000009e-05, 6.01810000000029e-05, 6.0236000000001705e-05, 5.9943999999999276e-05, 5.9569999999998374e-05, 6.0070000000002344e-05, 5.965299999999979e-05, 6.0264000000000845e-05, 6.0333999999998694e-05, 5.966699999999936e-05, 5.9791999999999484e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.036" endtime="20201115 23:02:33.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.032" endtime="20201115 23:02:33.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.041" endtime="20201115 23:02:33.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.045" endtime="20201115 23:02:33.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.043" endtime="20201115 23:02:33.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.040" endtime="20201115 23:02:33.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.673" endtime="20201115 23:02:33.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.671" endtime="20201115 23:02:33.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.670" endtime="20201115 23:02:33.066"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.068" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.077" endtime="20201115 23:02:33.094"></status>
</kw>
<msg timestamp="20201115 23:02:33.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.075" endtime="20201115 23:02:33.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.096" endtime="20201115 23:02:33.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.098" endtime="20201115 23:02:33.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.073" endtime="20201115 23:02:33.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.070" endtime="20201115 23:02:33.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.107" endtime="20201115 23:02:33.393"></status>
</kw>
<msg timestamp="20201115 23:02:33.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.106" endtime="20201115 23:02:33.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.397" endtime="20201115 23:02:33.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.405" endtime="20201115 23:02:33.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.103" endtime="20201115 23:02:33.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.101" endtime="20201115 23:02:33.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.412" level="INFO">${RESULT} = [{'time': 0.021912819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0666000000000886e-05, 'source_diff': 6.0666000000000886e-05}, {'time': 0.021982833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:33.408" endtime="20201115 23:02:33.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.425" level="INFO">${ACCURACY} = {'source_diff': [6.0666000000000886e-05, 6.052700000000119e-05, 6.108299999999997e-05, 6.086099999999886e-05, 6.090300000000104e-05, 6.0528000000000665e-05, 6.081900000000015e-05, 6.116700000000086e-0...</msg>
<status status="PASS" starttime="20201115 23:02:33.413" endtime="20201115 23:02:33.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.430" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.429" endtime="20201115 23:02:33.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.433" level="INFO">VALUE: [6.0666000000000886e-05, 6.052700000000119e-05, 6.108299999999997e-05, 6.086099999999886e-05, 6.090300000000104e-05, 6.0528000000000665e-05, 6.081900000000015e-05, 6.116700000000086e-05, 6.090300000000104e-05, 6.0806000000000054e-05, 6.120899999999957e-05, 6.129200000000098e-05, 6.0598000000001984e-05, 6.12499999999988e-05, 6.113899999999825e-05, 6.080500000000058e-05, 6.080500000000058e-05, 6.136099999999936e-05, 6.0929999999997236e-05, 6.0750000000001775e-05, 6.084699999999929e-05, 6.070899999999907e-05, 6.0806000000000054e-05, 6.115300000000129e-05, 6.143100000000068e-05, 6.0819999999999624e-05, 6.093100000000018e-05, 6.116700000000086e-05, 6.109799999999901e-05, 6.113900000000172e-05, 6.08750000000019e-05, 6.088799999999853e-05, 6.084700000000276e-05, 6.0680000000000456e-05, 6.0985999999998985e-05, 6.084699999999929e-05, 6.118100000000043e-05, 6.066700000000036e-05, 6.058299999999947e-05, 6.061099999999861e-05, 6.090300000000104e-05, 6.0500000000001525e-05, 6.123599999999924e-05, 6.1013999999998125e-05, 6.094499999999975e-05, 6.095900000000279e-05, 6.070899999999907e-05, 6.108299999999997e-05, 6.118000000000096e-05, 6.133300000000022e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.431" endtime="20201115 23:02:33.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.426" endtime="20201115 23:02:33.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.436" endtime="20201115 23:02:33.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.440" endtime="20201115 23:02:33.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.438" endtime="20201115 23:02:33.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.435" endtime="20201115 23:02:33.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.069" endtime="20201115 23:02:33.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.067" endtime="20201115 23:02:33.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.066" endtime="20201115 23:02:33.461"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.463" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.472" endtime="20201115 23:02:33.489"></status>
</kw>
<msg timestamp="20201115 23:02:33.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.470" endtime="20201115 23:02:33.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.490" endtime="20201115 23:02:33.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.493" endtime="20201115 23:02:33.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.467" endtime="20201115 23:02:33.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.465" endtime="20201115 23:02:33.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.502" endtime="20201115 23:02:33.788"></status>
</kw>
<msg timestamp="20201115 23:02:33.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.500" endtime="20201115 23:02:33.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.792" endtime="20201115 23:02:33.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.801" endtime="20201115 23:02:33.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.498" endtime="20201115 23:02:33.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.496" endtime="20201115 23:02:33.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.808" level="INFO">${RESULT} = [{'time': 0.022641875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.205599999999784e-05, 'source_diff': 6.205599999999784e-05}, {'time': 0.022714847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:33.805" endtime="20201115 23:02:33.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.822" level="INFO">${ACCURACY} = {'source_diff': [6.205599999999784e-05, 6.179099999999854e-05, 6.187499999999943e-05, 6.209700000000054e-05, 6.172200000000017e-05, 6.194500000000075e-05, 6.215299999999882e-05, 6.170900000000007e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:33.809" endtime="20201115 23:02:33.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.827" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.826" endtime="20201115 23:02:33.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.829" level="INFO">VALUE: [6.205599999999784e-05, 6.179099999999854e-05, 6.187499999999943e-05, 6.209700000000054e-05, 6.172200000000017e-05, 6.194500000000075e-05, 6.215299999999882e-05, 6.170900000000007e-05, 6.176300000000287e-05, 6.18340000000002e-05, 6.223600000000024e-05, 6.209700000000054e-05, 6.212499999999968e-05, 6.199999999999956e-05, 6.155500000000133e-05, 6.234699999999732e-05, 6.158300000000047e-05, 6.237499999999993e-05, 6.172299999999964e-05, 6.247200000000092e-05, 6.172200000000017e-05, 6.245799999999788e-05, 6.219499999999753e-05, 6.22499999999998e-05, 6.161099999999961e-05, 6.20560000000013e-05, 6.223699999999971e-05, 6.180499999999811e-05, 6.199999999999956e-05, 6.168000000000146e-05, 6.173599999999974e-05, 6.179100000000201e-05, 6.211100000000011e-05, 6.204200000000173e-05, 6.151399999999863e-05, 6.194400000000128e-05, 6.247200000000092e-05, 6.223600000000024e-05, 6.213899999999925e-05, 6.222200000000067e-05, 6.197299999999989e-05, 6.237499999999993e-05, 6.202699999999922e-05, 6.173599999999974e-05, 6.168000000000146e-05, 6.237499999999993e-05, 6.197200000000042e-05, 6.186099999999986e-05, 6.186099999999986e-05, 6.245799999999788e-05]</msg>
<status status="PASS" starttime="20201115 23:02:33.828" endtime="20201115 23:02:33.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.823" endtime="20201115 23:02:33.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.832" endtime="20201115 23:02:33.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.836" endtime="20201115 23:02:33.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.834" endtime="20201115 23:02:33.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.830" endtime="20201115 23:02:33.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.464" endtime="20201115 23:02:33.856"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.462" endtime="20201115 23:02:33.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.461" endtime="20201115 23:02:33.857"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.859" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.868" endtime="20201115 23:02:33.885"></status>
</kw>
<msg timestamp="20201115 23:02:33.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.866" endtime="20201115 23:02:33.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.887" endtime="20201115 23:02:33.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.890" endtime="20201115 23:02:33.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.863" endtime="20201115 23:02:33.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.861" endtime="20201115 23:02:33.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.899" endtime="20201115 23:02:34.183"></status>
</kw>
<msg timestamp="20201115 23:02:34.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.897" endtime="20201115 23:02:34.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.187" endtime="20201115 23:02:34.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.196" endtime="20201115 23:02:34.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.894" endtime="20201115 23:02:34.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.893" endtime="20201115 23:02:34.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.203" level="INFO">${RESULT} = [{'time': 0.022737931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.301400000000013e-05, 'source_diff': 6.301400000000013e-05}, {'time': 0.022810931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.199" endtime="20201115 23:02:34.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.216" level="INFO">${ACCURACY} = {'source_diff': [6.301400000000013e-05, 6.273700000000021e-05, 6.287500000000043e-05, 6.259699999999757e-05, 6.311100000000111e-05, 6.245800000000135e-05, 6.308300000000197e-05, 6.311100000000111e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:34.204" endtime="20201115 23:02:34.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.221" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.220" endtime="20201115 23:02:34.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.223" level="INFO">VALUE: [6.301400000000013e-05, 6.273700000000021e-05, 6.287500000000043e-05, 6.259699999999757e-05, 6.311100000000111e-05, 6.245800000000135e-05, 6.308300000000197e-05, 6.311100000000111e-05, 6.280600000000205e-05, 6.311100000000111e-05, 6.347200000000192e-05, 6.251399999999963e-05, 6.27080000000016e-05, 6.27080000000016e-05, 6.287500000000043e-05, 6.305499999999936e-05, 6.269399999999856e-05, 6.286200000000033e-05, 6.301400000000013e-05, 6.27500000000003e-05, 6.306899999999893e-05, 6.2889e-05, 6.315299999999982e-05, 6.337500000000093e-05, 6.338899999999703e-05, 6.319399999999906e-05, 6.336100000000136e-05, 6.258300000000147e-05, 6.254199999999877e-05, 6.330599999999909e-05, 6.280599999999859e-05, 6.337500000000093e-05, 6.304099999999979e-05, 6.281900000000215e-05, 6.291699999999914e-05, 6.330499999999961e-05, 6.280499999999911e-05, 6.25279999999992e-05, 6.299999999999709e-05, 6.341699999999964e-05, 6.290300000000304e-05, 6.300000000000056e-05, 6.330599999999909e-05, 6.345899999999835e-05, 6.297200000000142e-05, 6.323599999999777e-05, 6.318099999999896e-05, 6.313900000000025e-05, 6.273600000000074e-05, 6.280499999999911e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.222" endtime="20201115 23:02:34.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.217" endtime="20201115 23:02:34.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.227" endtime="20201115 23:02:34.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.230" endtime="20201115 23:02:34.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.228" endtime="20201115 23:02:34.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.225" endtime="20201115 23:02:34.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.860" endtime="20201115 23:02:34.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.858" endtime="20201115 23:02:34.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.857" endtime="20201115 23:02:34.251"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.254" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.262" endtime="20201115 23:02:34.279"></status>
</kw>
<msg timestamp="20201115 23:02:34.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.260" endtime="20201115 23:02:34.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.281" endtime="20201115 23:02:34.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.283" endtime="20201115 23:02:34.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.258" endtime="20201115 23:02:34.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.256" endtime="20201115 23:02:34.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.293" endtime="20201115 23:02:34.579"></status>
</kw>
<msg timestamp="20201115 23:02:34.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.291" endtime="20201115 23:02:34.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.583" endtime="20201115 23:02:34.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.592" endtime="20201115 23:02:34.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.288" endtime="20201115 23:02:34.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.287" endtime="20201115 23:02:34.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.599" level="INFO">${RESULT} = [{'time': 0.022838181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.436199999999836e-05, 'source_diff': 6.436199999999836e-05}, {'time': 0.022910181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.595" endtime="20201115 23:02:34.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.614" level="INFO">${ACCURACY} = {'source_diff': [6.436199999999836e-05, 6.372300000000164e-05, 6.3582999999999e-05, 6.431900000000018e-05, 6.431899999999671e-05, 6.386099999999839e-05, 6.419400000000006e-05, 6.391700000000014e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:02:34.600" endtime="20201115 23:02:34.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.618" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.617" endtime="20201115 23:02:34.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.621" level="INFO">VALUE: [6.436199999999836e-05, 6.372300000000164e-05, 6.3582999999999e-05, 6.431900000000018e-05, 6.431899999999671e-05, 6.386099999999839e-05, 6.419400000000006e-05, 6.391700000000014e-05, 6.387500000000143e-05, 6.373599999999827e-05, 6.416700000000039e-05, 6.399999999999809e-05, 6.42639999999979e-05, 6.379200000000002e-05, 6.398600000000199e-05, 6.368099999999946e-05, 6.386199999999786e-05, 6.387500000000143e-05, 6.367999999999999e-05, 6.369399999999956e-05, 6.406899999999993e-05, 6.372200000000217e-05, 6.3582999999999e-05, 6.43890000000015e-05, 6.361100000000161e-05, 6.373600000000174e-05, 6.434699999999932e-05, 6.397300000000189e-05, 6.394499999999928e-05, 6.423700000000171e-05, 6.354100000000029e-05, 6.393099999999971e-05, 6.40829999999995e-05, 6.445799999999988e-05, 6.401400000000113e-05, 6.355499999999986e-05, 6.424999999999834e-05, 6.406899999999993e-05, 6.366699999999989e-05, 6.395799999999938e-05, 6.377800000000045e-05, 6.354199999999977e-05, 6.37500000000013e-05, 6.415299999999735e-05, 6.3889000000001e-05, 6.441600000000117e-05, 6.379200000000002e-05, 6.372200000000217e-05, 6.430499999999714e-05, 6.393000000000024e-05]</msg>
<status status="PASS" starttime="20201115 23:02:34.619" endtime="20201115 23:02:34.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.614" endtime="20201115 23:02:34.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.624" endtime="20201115 23:02:34.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.627" endtime="20201115 23:02:34.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.626" endtime="20201115 23:02:34.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.622" endtime="20201115 23:02:34.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.254" endtime="20201115 23:02:34.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.252" endtime="20201115 23:02:34.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.252" endtime="20201115 23:02:34.648"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.651" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.659" endtime="20201115 23:02:34.676"></status>
</kw>
<msg timestamp="20201115 23:02:34.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.658" endtime="20201115 23:02:34.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.678" endtime="20201115 23:02:34.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.681" endtime="20201115 23:02:34.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.655" endtime="20201115 23:02:34.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.653" endtime="20201115 23:02:34.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.690" endtime="20201115 23:02:34.976"></status>
</kw>
<msg timestamp="20201115 23:02:34.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:34.689" endtime="20201115 23:02:34.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:34.981" endtime="20201115 23:02:34.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.989" endtime="20201115 23:02:34.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.686" endtime="20201115 23:02:34.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.684" endtime="20201115 23:02:34.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.996" level="INFO">${RESULT} = [{'time': 0.022707931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.468100000000046e-05, 'source_diff': 6.468100000000046e-05}, {'time': 0.022780917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.992" endtime="20201115 23:02:34.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.010" level="INFO">${ACCURACY} = {'source_diff': [6.468100000000046e-05, 6.52090000000001e-05, 6.501400000000213e-05, 6.518100000000096e-05, 6.540199999999913e-05, 6.54159999999987e-05, 6.52220000000002e-05, 6.459699999999957e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:02:34.997" endtime="20201115 23:02:35.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.014" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.013" endtime="20201115 23:02:35.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.017" level="INFO">VALUE: [6.468100000000046e-05, 6.52090000000001e-05, 6.501400000000213e-05, 6.518100000000096e-05, 6.540199999999913e-05, 6.54159999999987e-05, 6.52220000000002e-05, 6.459699999999957e-05, 6.524999999999934e-05, 6.47219999999997e-05, 6.466700000000089e-05, 6.518100000000096e-05, 6.524999999999934e-05, 6.540199999999913e-05, 6.466699999999742e-05, 6.523700000000271e-05, 6.458399999999948e-05, 6.466700000000089e-05, 6.502699999999875e-05, 6.537499999999946e-05, 6.468000000000099e-05, 6.520800000000063e-05, 6.452799999999773e-05, 6.547200000000045e-05, 6.50830000000005e-05, 6.547299999999992e-05, 6.502799999999823e-05, 6.463899999999828e-05, 6.459799999999905e-05, 6.465299999999785e-05, 6.50700000000004e-05, 6.466700000000089e-05, 6.532000000000066e-05, 6.502699999999875e-05, 6.509700000000007e-05, 6.454100000000129e-05, 6.544499999999731e-05, 6.481900000000068e-05, 6.491699999999767e-05, 6.456899999999696e-05, 6.505600000000084e-05, 6.508399999999998e-05, 6.493100000000071e-05, 6.476400000000188e-05, 6.474999999999884e-05, 6.458399999999948e-05, 6.511099999999964e-05, 6.495800000000038e-05, 6.54159999999987e-05, 6.470800000000013e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.015" endtime="20201115 23:02:35.017"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.011" endtime="20201115 23:02:35.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.020" endtime="20201115 23:02:35.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.023" endtime="20201115 23:02:35.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.022" endtime="20201115 23:02:35.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.018" endtime="20201115 23:02:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.651" endtime="20201115 23:02:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.650" endtime="20201115 23:02:35.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.649" endtime="20201115 23:02:35.044"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.062" endtime="20201115 23:02:35.079"></status>
</kw>
<msg timestamp="20201115 23:02:35.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.060" endtime="20201115 23:02:35.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.080" endtime="20201115 23:02:35.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.083" endtime="20201115 23:02:35.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.051" endtime="20201115 23:02:35.085"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.049" endtime="20201115 23:02:35.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.092" endtime="20201115 23:02:35.378"></status>
</kw>
<msg timestamp="20201115 23:02:35.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028734014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028799944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.091" endtime="20201115 23:02:35.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028734014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028799944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.382" endtime="20201115 23:02:35.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.390" endtime="20201115 23:02:35.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.088" endtime="20201115 23:02:35.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.086" endtime="20201115 23:02:35.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.397" level="INFO">${RESULT} = [{'time': 0.028799944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.593000000000224e-05, 'source_diff': 6.593000000000224e-05}, {'time': 0.028872986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:35.393" endtime="20201115 23:02:35.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.411" level="INFO">${ACCURACY} = {'source_diff': [6.593000000000224e-05, 6.569399999999809e-05, 6.616599999999945e-05, 6.5889000000003e-05, 6.60830000000015e-05, 6.580499999999864e-05, 6.625000000000034e-05, 6.641699999999917e-05, 6....</msg>
<status status="PASS" starttime="20201115 23:02:35.398" endtime="20201115 23:02:35.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.415" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.414" endtime="20201115 23:02:35.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.418" level="INFO">VALUE: [6.593000000000224e-05, 6.569399999999809e-05, 6.616599999999945e-05, 6.5889000000003e-05, 6.60830000000015e-05, 6.580499999999864e-05, 6.625000000000034e-05, 6.641699999999917e-05, 6.566699999999842e-05, 6.616699999999892e-05, 6.566699999999842e-05, 6.633400000000123e-05, 6.618100000000196e-05, 6.625000000000034e-05, 6.566599999999895e-05, 6.597199999999748e-05, 6.629099999999957e-05, 6.569400000000156e-05, 6.631899999999871e-05, 6.580499999999864e-05, 6.638900000000003e-05, 6.62639999999999e-05, 6.573600000000027e-05, 6.565299999999885e-05, 6.616699999999892e-05, 6.593000000000224e-05, 6.629199999999905e-05, 6.647300000000092e-05, 6.549999999999959e-05, 6.580599999999812e-05, 6.592999999999877e-05, 6.563799999999981e-05, 6.594399999999834e-05, 6.647200000000145e-05, 6.579100000000254e-05, 6.615299999999935e-05, 6.580500000000211e-05, 6.615299999999935e-05, 6.622200000000467e-05, 6.595799999999791e-05, 6.579199999999508e-05, 6.637500000000046e-05, 6.588899999999953e-05, 6.579199999999508e-05, 6.558400000000048e-05, 6.60830000000015e-05, 6.608299999999456e-05, 6.588899999999953e-05, 6.598599999999705e-05, 6.636099999999395e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.416" endtime="20201115 23:02:35.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.411" endtime="20201115 23:02:35.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.421" endtime="20201115 23:02:35.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.424" endtime="20201115 23:02:35.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.423" endtime="20201115 23:02:35.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.419" endtime="20201115 23:02:35.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.047" endtime="20201115 23:02:35.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.046" endtime="20201115 23:02:35.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.045" endtime="20201115 23:02:35.446"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.448" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.457" endtime="20201115 23:02:35.475"></status>
</kw>
<msg timestamp="20201115 23:02:35.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.455" endtime="20201115 23:02:35.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.476" endtime="20201115 23:02:35.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.479" endtime="20201115 23:02:35.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.452" endtime="20201115 23:02:35.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.450" endtime="20201115 23:02:35.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.488" endtime="20201115 23:02:35.774"></status>
</kw>
<msg timestamp="20201115 23:02:35.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.486" endtime="20201115 23:02:35.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022538236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.778" endtime="20201115 23:02:35.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.787" endtime="20201115 23:02:35.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.484" endtime="20201115 23:02:35.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.482" endtime="20201115 23:02:35.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.793" level="INFO">${RESULT} = [{'time': 0.022538236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.711099999999817e-05, 'source_diff': 6.711099999999817e-05}, {'time': 0.02261225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:35.790" endtime="20201115 23:02:35.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.807" level="INFO">${ACCURACY} = {'source_diff': [6.711099999999817e-05, 6.6583000000002e-05, 6.687500000000096e-05, 6.738899999999756e-05, 6.726299999999796e-05, 6.692999999999977e-05, 6.687500000000096e-05, 6.743099999999974e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:02:35.794" endtime="20201115 23:02:35.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.812" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.811" endtime="20201115 23:02:35.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.814" level="INFO">VALUE: [6.711099999999817e-05, 6.6583000000002e-05, 6.687500000000096e-05, 6.738899999999756e-05, 6.726299999999796e-05, 6.692999999999977e-05, 6.687500000000096e-05, 6.743099999999974e-05, 6.686200000000087e-05, 6.722199999999873e-05, 6.686099999999792e-05, 6.718000000000002e-05, 6.736100000000189e-05, 6.699999999999762e-05, 6.656999999999844e-05, 6.737499999999799e-05, 6.730599999999962e-05, 6.718000000000002e-05, 6.686099999999792e-05, 6.651400000000016e-05, 6.733399999999876e-05, 6.691699999999967e-05, 6.731899999999971e-05, 6.680600000000259e-05, 6.672199999999823e-05, 6.687500000000096e-05, 6.661100000000114e-05, 6.715300000000035e-05, 6.738899999999756e-05, 6.658299999999853e-05, 6.737500000000146e-05, 6.745799999999941e-05, 6.652799999999973e-05, 6.70419999999998e-05, 6.663900000000028e-05, 6.677799999999998e-05, 6.686100000000139e-05, 6.687500000000096e-05, 6.738800000000156e-05, 6.706899999999946e-05, 6.716599999999698e-05, 6.667999999999952e-05, 6.692999999999977e-05, 6.724999999999787e-05, 6.686099999999792e-05, 6.686100000000139e-05, 6.680599999999912e-05, 6.681999999999869e-05, 6.70839999999985e-05, 6.668100000000246e-05]</msg>
<status status="PASS" starttime="20201115 23:02:35.813" endtime="20201115 23:02:35.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.808" endtime="20201115 23:02:35.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.818" endtime="20201115 23:02:35.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.821" endtime="20201115 23:02:35.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.820" endtime="20201115 23:02:35.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.816" endtime="20201115 23:02:35.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.449" endtime="20201115 23:02:35.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.447" endtime="20201115 23:02:35.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.446" endtime="20201115 23:02:35.843"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.854" endtime="20201115 23:02:35.873"></status>
</kw>
<msg timestamp="20201115 23:02:35.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.852" endtime="20201115 23:02:35.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:35.874" endtime="20201115 23:02:35.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.877" endtime="20201115 23:02:35.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.850" endtime="20201115 23:02:35.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.847" endtime="20201115 23:02:35.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.886" endtime="20201115 23:02:36.173"></status>
</kw>
<msg timestamp="20201115 23:02:36.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024099083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024166958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:35.884" endtime="20201115 23:02:36.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024099083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024166958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.177" endtime="20201115 23:02:36.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.185" endtime="20201115 23:02:36.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.882" endtime="20201115 23:02:36.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.880" endtime="20201115 23:02:36.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.192" level="INFO">${RESULT} = [{'time': 0.024166958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.787499999999849e-05, 'source_diff': 6.787499999999849e-05}, {'time': 0.024241972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.188" endtime="20201115 23:02:36.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.207" level="INFO">${ACCURACY} = {'source_diff': [6.787499999999849e-05, 6.793000000000077e-05, 6.815300000000135e-05, 6.780600000000012e-05, 6.784700000000282e-05, 6.793100000000024e-05, 6.824999999999887e-05, 6.784699999999935e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:36.193" endtime="20201115 23:02:36.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.211" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.210" endtime="20201115 23:02:36.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.214" level="INFO">VALUE: [6.787499999999849e-05, 6.793000000000077e-05, 6.815300000000135e-05, 6.780600000000012e-05, 6.784700000000282e-05, 6.793100000000024e-05, 6.824999999999887e-05, 6.784699999999935e-05, 6.755500000000039e-05, 6.797300000000242e-05, 6.80839999999995e-05, 6.780599999999665e-05, 6.809800000000255e-05, 6.799999999999862e-05, 6.766600000000095e-05, 6.80969999999996e-05, 6.756999999999944e-05, 6.823600000000277e-05, 6.838900000000203e-05, 6.744400000000331e-05, 6.751400000000116e-05, 6.768099999999999e-05, 6.816700000000092e-05, 6.806999999999994e-05, 6.79169999999972e-05, 6.80839999999995e-05, 6.779200000000055e-05, 6.838799999999909e-05, 6.815199999999841e-05, 6.849999999999912e-05, 6.762499999999824e-05, 6.765300000000085e-05, 6.788900000000153e-05, 6.777800000000098e-05, 6.786099999999892e-05, 6.766700000000042e-05, 6.830600000000062e-05, 6.805600000000037e-05, 6.759799999999858e-05, 6.788800000000206e-05, 6.843100000000074e-05, 6.754100000000082e-05, 6.795799999999991e-05, 6.765200000000138e-05, 6.801400000000166e-05, 6.84030000000016e-05, 6.784699999999935e-05, 6.80969999999996e-05, 6.773600000000227e-05, 6.772199999999923e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.212" endtime="20201115 23:02:36.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.207" endtime="20201115 23:02:36.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.217" endtime="20201115 23:02:36.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.221" endtime="20201115 23:02:36.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.219" endtime="20201115 23:02:36.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.216" endtime="20201115 23:02:36.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.846" endtime="20201115 23:02:36.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.844" endtime="20201115 23:02:36.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.843" endtime="20201115 23:02:36.242"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.244" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.252" endtime="20201115 23:02:36.270"></status>
</kw>
<msg timestamp="20201115 23:02:36.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.251" endtime="20201115 23:02:36.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.272" endtime="20201115 23:02:36.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.275" endtime="20201115 23:02:36.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.248" endtime="20201115 23:02:36.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.246" endtime="20201115 23:02:36.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.284" endtime="20201115 23:02:36.568"></status>
</kw>
<msg timestamp="20201115 23:02:36.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.282" endtime="20201115 23:02:36.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023039625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.572" endtime="20201115 23:02:36.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.581" endtime="20201115 23:02:36.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.279" endtime="20201115 23:02:36.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.278" endtime="20201115 23:02:36.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.587" level="INFO">${RESULT} = [{'time': 0.023039625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.908300000000103e-05, 'source_diff': 6.908300000000103e-05}, {'time': 0.023116611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.584" endtime="20201115 23:02:36.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.601" level="INFO">${ACCURACY} = {'source_diff': [6.908300000000103e-05, 6.944399999999837e-05, 6.908300000000103e-05, 6.937499999999999e-05, 6.923599999999683e-05, 6.911100000000017e-05, 6.893099999999777e-05, 6.920900000000063e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:36.589" endtime="20201115 23:02:36.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.606" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.605" endtime="20201115 23:02:36.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.609" level="INFO">VALUE: [6.908300000000103e-05, 6.944399999999837e-05, 6.908300000000103e-05, 6.937499999999999e-05, 6.923599999999683e-05, 6.911100000000017e-05, 6.893099999999777e-05, 6.920900000000063e-05, 6.933300000000128e-05, 6.887499999999949e-05, 6.93619999999999e-05, 6.87359999999998e-05, 6.861099999999967e-05, 6.944400000000184e-05, 6.868000000000152e-05, 6.868100000000099e-05, 6.908299999999756e-05, 6.936100000000042e-05, 6.887499999999949e-05, 6.943100000000174e-05, 6.851399999999869e-05, 6.924999999999987e-05, 6.915300000000235e-05, 6.920800000000116e-05, 6.872200000000023e-05, 6.930500000000214e-05, 6.888899999999906e-05, 6.883300000000078e-05, 6.915299999999888e-05, 6.89030000000021e-05, 6.894400000000134e-05, 6.90970000000006e-05, 6.861099999999967e-05, 6.870800000000066e-05, 6.887499999999949e-05, 6.874999999999937e-05, 6.899999999999962e-05, 6.887499999999949e-05, 6.945800000000141e-05, 6.906899999999799e-05, 6.924999999999987e-05, 6.859699999999663e-05, 6.886099999999992e-05, 6.909699999999713e-05, 6.944399999999837e-05, 6.937499999999999e-05, 6.90970000000006e-05, 6.92360000000003e-05, 6.872200000000023e-05, 6.882000000000069e-05]</msg>
<status status="PASS" starttime="20201115 23:02:36.607" endtime="20201115 23:02:36.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.602" endtime="20201115 23:02:36.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.612" endtime="20201115 23:02:36.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:36.615" endtime="20201115 23:02:36.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.614" endtime="20201115 23:02:36.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.610" endtime="20201115 23:02:36.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.245" endtime="20201115 23:02:36.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.243" endtime="20201115 23:02:36.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.242" endtime="20201115 23:02:36.636"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.639" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.647" endtime="20201115 23:02:36.664"></status>
</kw>
<msg timestamp="20201115 23:02:36.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.645" endtime="20201115 23:02:36.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:36.665" endtime="20201115 23:02:36.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.668" endtime="20201115 23:02:36.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.643" endtime="20201115 23:02:36.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.641" endtime="20201115 23:02:36.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.677" endtime="20201115 23:02:36.962"></status>
</kw>
<msg timestamp="20201115 23:02:36.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.676" endtime="20201115 23:02:36.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:36.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:36.967" endtime="20201115 23:02:36.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:36.975" endtime="20201115 23:02:36.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.673" endtime="20201115 23:02:36.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.671" endtime="20201115 23:02:36.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:36.982" level="INFO">${RESULT} = [{'time': 0.021908611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.979200000000255e-05, 'source_diff': 6.979200000000255e-05}, {'time': 0.021987625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:36.979" endtime="20201115 23:02:36.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:36.996" level="INFO">${ACCURACY} = {'source_diff': [6.979200000000255e-05, 6.975000000000037e-05, 6.979199999999908e-05, 7.037500000000099e-05, 6.99299999999993e-05, 6.984700000000135e-05, 6.951399999999969e-05, 7.004099999999985e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:36.983" endtime="20201115 23:02:36.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.000" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:36.999" endtime="20201115 23:02:37.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.003" level="INFO">VALUE: [6.979200000000255e-05, 6.975000000000037e-05, 6.979199999999908e-05, 7.037500000000099e-05, 6.99299999999993e-05, 6.984700000000135e-05, 6.951399999999969e-05, 7.004099999999985e-05, 6.987500000000049e-05, 6.967999999999905e-05, 7.011100000000117e-05, 6.950000000000012e-05, 6.97360000000008e-05, 7.045800000000241e-05, 7.000000000000062e-05, 6.995800000000191e-05, 7.038900000000056e-05, 6.998600000000105e-05, 7.048600000000155e-05, 7.048699999999755e-05, 6.950000000000012e-05, 7.043100000000274e-05, 6.95559999999984e-05, 7.006899999999899e-05, 6.994399999999887e-05, 7.02910000000001e-05, 7.015299999999988e-05, 6.988900000000006e-05, 7.027800000000001e-05, 7.02499999999974e-05, 6.987500000000049e-05, 6.998700000000052e-05, 6.972299999999723e-05, 7.004199999999933e-05, 7.02499999999974e-05, 6.977799999999951e-05, 6.965299999999938e-05, 6.975000000000037e-05, 6.983300000000178e-05, 6.990299999999963e-05, 6.981900000000221e-05, 7.022199999999826e-05, 6.956899999999849e-05, 6.981899999999874e-05, 6.952799999999926e-05, 6.963899999999981e-05, 6.954099999999935e-05, 6.979199999999908e-05, 6.986100000000092e-05, 7.031999999999872e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.001" endtime="20201115 23:02:37.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.997" endtime="20201115 23:02:37.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.006" endtime="20201115 23:02:37.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.009" endtime="20201115 23:02:37.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.008" endtime="20201115 23:02:37.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.004" endtime="20201115 23:02:37.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.639" endtime="20201115 23:02:37.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.638" endtime="20201115 23:02:37.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:36.637" endtime="20201115 23:02:37.031"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.033" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.041" endtime="20201115 23:02:37.060"></status>
</kw>
<msg timestamp="20201115 23:02:37.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.040" endtime="20201115 23:02:37.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.061" endtime="20201115 23:02:37.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.064" endtime="20201115 23:02:37.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.037" endtime="20201115 23:02:37.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.035" endtime="20201115 23:02:37.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.073" endtime="20201115 23:02:37.358"></status>
</kw>
<msg timestamp="20201115 23:02:37.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.071" endtime="20201115 23:02:37.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.363" endtime="20201115 23:02:37.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.371" endtime="20201115 23:02:37.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.069" endtime="20201115 23:02:37.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.067" endtime="20201115 23:02:37.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.378" level="INFO">${RESULT} = [{'time': 0.021973431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0584000000002e-05, 'source_diff': 7.0584000000002e-05}, {'time': 0.022052458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201115 23:02:37.374" endtime="20201115 23:02:37.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.391" level="INFO">${ACCURACY} = {'source_diff': [7.0584000000002e-05, 7.133299999999981e-05, 7.087499999999802e-05, 7.147199999999951e-05, 7.13049999999972e-05, 7.109699999999913e-05, 7.07360000000018e-05, 7.069399999999962e-05, 7.1...</msg>
<status status="PASS" starttime="20201115 23:02:37.379" endtime="20201115 23:02:37.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.396" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.395" endtime="20201115 23:02:37.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.398" level="INFO">VALUE: [7.0584000000002e-05, 7.133299999999981e-05, 7.087499999999802e-05, 7.147199999999951e-05, 7.13049999999972e-05, 7.109699999999913e-05, 7.07360000000018e-05, 7.069399999999962e-05, 7.130500000000067e-05, 7.137500000000199e-05, 7.10559999999999e-05, 7.108299999999956e-05, 7.138900000000156e-05, 7.086100000000192e-05, 7.051400000000069e-05, 7.070900000000213e-05, 7.063900000000081e-05, 7.118000000000055e-05, 7.133299999999981e-05, 7.137500000000199e-05, 7.052800000000026e-05, 7.080599999999965e-05, 7.050000000000112e-05, 7.101399999999772e-05, 7.054199999999983e-05, 7.048599999999808e-05, 7.118100000000002e-05, 7.079200000000008e-05, 7.112499999999827e-05, 7.10979999999986e-05, 7.131899999999677e-05, 7.1069e-05, 7.090300000000063e-05, 7.05689999999995e-05, 7.065299999999691e-05, 7.061100000000167e-05, 7.144400000000037e-05, 7.058300000000253e-05, 7.125000000000187e-05, 7.065300000000038e-05, 7.083399999999879e-05, 7.075000000000137e-05, 7.049999999999765e-05, 7.137499999999852e-05, 7.06109999999982e-05, 7.119400000000012e-05, 7.07910000000006e-05, 7.118000000000055e-05, 7.09300000000003e-05, 7.09170000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.397" endtime="20201115 23:02:37.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.392" endtime="20201115 23:02:37.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.401" endtime="20201115 23:02:37.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.405" endtime="20201115 23:02:37.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.403" endtime="20201115 23:02:37.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.400" endtime="20201115 23:02:37.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.034" endtime="20201115 23:02:37.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.032" endtime="20201115 23:02:37.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.031" endtime="20201115 23:02:37.426"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.437" endtime="20201115 23:02:37.456"></status>
</kw>
<msg timestamp="20201115 23:02:37.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.435" endtime="20201115 23:02:37.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.458" endtime="20201115 23:02:37.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.461" endtime="20201115 23:02:37.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.433" endtime="20201115 23:02:37.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.431" endtime="20201115 23:02:37.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.470" endtime="20201115 23:02:37.756"></status>
</kw>
<msg timestamp="20201115 23:02:37.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.469" endtime="20201115 23:02:37.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.760" endtime="20201115 23:02:37.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.768" endtime="20201115 23:02:37.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.466" endtime="20201115 23:02:37.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.464" endtime="20201115 23:02:37.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:37.775" level="INFO">${RESULT} = [{'time': 0.022760528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.220900000000016e-05, 'source_diff': 7.220900000000016e-05}, {'time': 0.022843528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:37.772" endtime="20201115 23:02:37.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:37.790" level="INFO">${ACCURACY} = {'source_diff': [7.220900000000016e-05, 7.201399999999872e-05, 7.215199999999894e-05, 7.232000000000072e-05, 7.194500000000034e-05, 7.244499999999737e-05, 7.16109999999992e-05, 7.244400000000137e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:37.776" endtime="20201115 23:02:37.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.794" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:37.793" endtime="20201115 23:02:37.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.797" level="INFO">VALUE: [7.220900000000016e-05, 7.201399999999872e-05, 7.215199999999894e-05, 7.232000000000072e-05, 7.194500000000034e-05, 7.244499999999737e-05, 7.16109999999992e-05, 7.244400000000137e-05, 7.237499999999952e-05, 7.173599999999933e-05, 7.215299999999841e-05, 7.204199999999786e-05, 7.197200000000001e-05, 7.165300000000138e-05, 7.237499999999952e-05, 7.198599999999958e-05, 7.223599999999983e-05, 7.208400000000004e-05, 7.216699999999798e-05, 7.186099999999945e-05, 7.202700000000228e-05, 7.207000000000047e-05, 7.173599999999933e-05, 7.218000000000155e-05, 7.172199999999976e-05, 7.238900000000256e-05, 7.169500000000009e-05, 7.165300000000138e-05, 7.220900000000016e-05, 7.183300000000031e-05, 7.194500000000034e-05, 7.223599999999983e-05, 7.241699999999823e-05, 7.231900000000124e-05, 7.245800000000094e-05, 7.234700000000038e-05, 7.187499999999902e-05, 7.162499999999877e-05, 7.151400000000169e-05, 7.17499999999989e-05, 7.226400000000244e-05, 7.190299999999816e-05, 7.182000000000022e-05, 7.245900000000041e-05, 7.226400000000244e-05, 7.22499999999994e-05, 7.152800000000126e-05, 7.201299999999924e-05, 7.175000000000237e-05, 7.181900000000074e-05]</msg>
<status status="PASS" starttime="20201115 23:02:37.796" endtime="20201115 23:02:37.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.791" endtime="20201115 23:02:37.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.800" endtime="20201115 23:02:37.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:37.804" endtime="20201115 23:02:37.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.802" endtime="20201115 23:02:37.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.798" endtime="20201115 23:02:37.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.429" endtime="20201115 23:02:37.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.428" endtime="20201115 23:02:37.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.427" endtime="20201115 23:02:37.825"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.827" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.836" endtime="20201115 23:02:37.854"></status>
</kw>
<msg timestamp="20201115 23:02:37.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.834" endtime="20201115 23:02:37.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:37.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:37.856" endtime="20201115 23:02:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.859" endtime="20201115 23:02:37.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.831" endtime="20201115 23:02:37.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.829" endtime="20201115 23:02:37.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:37.869" endtime="20201115 23:02:38.155"></status>
</kw>
<msg timestamp="20201115 23:02:38.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:37.867" endtime="20201115 23:02:38.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.159" endtime="20201115 23:02:38.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.168" endtime="20201115 23:02:38.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.864" endtime="20201115 23:02:38.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.862" endtime="20201115 23:02:38.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.174" level="INFO">${RESULT} = [{'time': 0.022491028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.294500000000134e-05, 'source_diff': 7.294500000000134e-05}, {'time': 0.022575028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:38.171" endtime="20201115 23:02:38.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.188" level="INFO">${ACCURACY} = {'source_diff': [7.294500000000134e-05, 7.322200000000126e-05, 7.293100000000177e-05, 7.318000000000255e-05, 7.352799999999979e-05, 7.270800000000119e-05, 7.316599999999951e-05, 7.288899999999959e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:38.175" endtime="20201115 23:02:38.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.193" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.192" endtime="20201115 23:02:38.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.195" level="INFO">VALUE: [7.294500000000134e-05, 7.322200000000126e-05, 7.293100000000177e-05, 7.318000000000255e-05, 7.352799999999979e-05, 7.270800000000119e-05, 7.316599999999951e-05, 7.288899999999959e-05, 7.315299999999941e-05, 7.330600000000215e-05, 7.268099999999805e-05, 7.249999999999965e-05, 7.330600000000215e-05, 7.266699999999848e-05, 7.249999999999965e-05, 7.323600000000083e-05, 7.304199999999886e-05, 7.263899999999934e-05, 7.329099999999963e-05, 7.32500000000004e-05, 7.331899999999877e-05, 7.281900000000174e-05, 7.304199999999886e-05, 7.30829999999981e-05, 7.273600000000033e-05, 7.309699999999766e-05, 7.322200000000126e-05, 7.34309999999988e-05, 7.259800000000011e-05, 7.329200000000258e-05, 7.304099999999938e-05, 7.252699999999931e-05, 7.320799999999822e-05, 7.262499999999977e-05, 7.298600000000058e-05, 7.279099999999913e-05, 7.287500000000002e-05, 7.330599999999868e-05, 7.343100000000227e-05, 7.291699999999873e-05, 7.301399999999972e-05, 7.315300000000288e-05, 7.262499999999977e-05, 7.311200000000018e-05, 7.336100000000095e-05, 7.32500000000004e-05, 7.295800000000144e-05, 7.29300000000023e-05, 7.29300000000023e-05, 7.316700000000245e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.194" endtime="20201115 23:02:38.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.189" endtime="20201115 23:02:38.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.198" endtime="20201115 23:02:38.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.202" endtime="20201115 23:02:38.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.200" endtime="20201115 23:02:38.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.197" endtime="20201115 23:02:38.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.828" endtime="20201115 23:02:38.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.826" endtime="20201115 23:02:38.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:37.825" endtime="20201115 23:02:38.223"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.226" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.234" endtime="20201115 23:02:38.252"></status>
</kw>
<msg timestamp="20201115 23:02:38.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.232" endtime="20201115 23:02:38.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.253" endtime="20201115 23:02:38.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.256" endtime="20201115 23:02:38.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.230" endtime="20201115 23:02:38.258"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.228" endtime="20201115 23:02:38.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.265" endtime="20201115 23:02:38.550"></status>
</kw>
<msg timestamp="20201115 23:02:38.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022900528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022974931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.264" endtime="20201115 23:02:38.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022900528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022974931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.554" endtime="20201115 23:02:38.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.562" endtime="20201115 23:02:38.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.261" endtime="20201115 23:02:38.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.259" endtime="20201115 23:02:38.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.569" level="INFO">${RESULT} = [{'time': 0.022974931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.440300000000066e-05, 'source_diff': 7.440300000000066e-05}, {'time': 0.023058944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:38.566" endtime="20201115 23:02:38.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.583" level="INFO">${ACCURACY} = {'source_diff': [7.440300000000066e-05, 7.408300000000256e-05, 7.397199999999854e-05, 7.379100000000013e-05, 7.348599999999761e-05, 7.395799999999897e-05, 7.356899999999902e-05, 7.350000000000065e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:38.570" endtime="20201115 23:02:38.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.587" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.586" endtime="20201115 23:02:38.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.590" level="INFO">VALUE: [7.440300000000066e-05, 7.408300000000256e-05, 7.397199999999854e-05, 7.379100000000013e-05, 7.348599999999761e-05, 7.395799999999897e-05, 7.356899999999902e-05, 7.350000000000065e-05, 7.377800000000004e-05, 7.409799999999814e-05, 7.408399999999857e-05, 7.402800000000029e-05, 7.431900000000324e-05, 7.419399999999965e-05, 7.369400000000262e-05, 7.438900000000109e-05, 7.384699999999841e-05, 7.402800000000029e-05, 7.420899999999869e-05, 7.401400000000072e-05, 7.438900000000109e-05, 7.379199999999961e-05, 7.369499999999862e-05, 7.409700000000213e-05, 7.401400000000072e-05, 7.422300000000173e-05, 7.354099999999988e-05, 7.430499999999673e-05, 7.44439999999999e-05, 7.390300000000016e-05, 7.436099999999848e-05, 7.402800000000029e-05, 7.409699999999866e-05, 7.388900000000059e-05, 7.35829999999986e-05, 7.36110000000012e-05, 7.354199999999936e-05, 7.436100000000195e-05, 7.352799999999979e-05, 7.390300000000016e-05, 7.373600000000133e-05, 7.38049999999997e-05, 7.406899999999952e-05, 7.431899999999977e-05, 7.383400000000179e-05, 7.358300000000206e-05, 7.359699999999816e-05, 7.390300000000016e-05, 7.404199999999986e-05, 7.354199999999936e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.589" endtime="20201115 23:02:38.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.584" endtime="20201115 23:02:38.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.594" endtime="20201115 23:02:38.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.597" endtime="20201115 23:02:38.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.596" endtime="20201115 23:02:38.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.592" endtime="20201115 23:02:38.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.226" endtime="20201115 23:02:38.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.224" endtime="20201115 23:02:38.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.224" endtime="20201115 23:02:38.618"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.629" endtime="20201115 23:02:38.648"></status>
</kw>
<msg timestamp="20201115 23:02:38.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.627" endtime="20201115 23:02:38.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:38.650" endtime="20201115 23:02:38.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.652" endtime="20201115 23:02:38.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.625" endtime="20201115 23:02:38.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.623" endtime="20201115 23:02:38.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.661" endtime="20201115 23:02:38.946"></status>
</kw>
<msg timestamp="20201115 23:02:38.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.660" endtime="20201115 23:02:38.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:38.951" endtime="20201115 23:02:38.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.959" endtime="20201115 23:02:38.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.657" endtime="20201115 23:02:38.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.656" endtime="20201115 23:02:38.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:38.965" level="INFO">${RESULT} = [{'time': 0.022669472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.452800000000079e-05, 'source_diff': 7.452800000000079e-05}, {'time': 0.0227535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:38.962" endtime="20201115 23:02:38.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:38.979" level="INFO">${ACCURACY} = {'source_diff': [7.452800000000079e-05, 7.502799999999782e-05, 7.502800000000129e-05, 7.516700000000098e-05, 7.487500000000202e-05, 7.504199999999739e-05, 7.494499999999987e-05, 7.499999999999868e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:38.966" endtime="20201115 23:02:38.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.984" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:38.983" endtime="20201115 23:02:38.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:38.987" level="INFO">VALUE: [7.452800000000079e-05, 7.502799999999782e-05, 7.502800000000129e-05, 7.516700000000098e-05, 7.487500000000202e-05, 7.504199999999739e-05, 7.494499999999987e-05, 7.499999999999868e-05, 7.523699999999883e-05, 7.495899999999944e-05, 7.479100000000113e-05, 7.530499999999773e-05, 7.452800000000079e-05, 7.48050000000007e-05, 7.466700000000048e-05, 7.524999999999893e-05, 7.472200000000276e-05, 7.54310000000008e-05, 7.481999999999975e-05, 7.518100000000055e-05, 7.520800000000022e-05, 7.547200000000004e-05, 7.459799999999864e-05, 7.465200000000144e-05, 7.515199999999847e-05, 7.497199999999954e-05, 7.542999999999786e-05, 7.49440000000004e-05, 7.481900000000027e-05, 7.451400000000122e-05, 7.491700000000073e-05, 7.509800000000261e-05, 7.479200000000061e-05, 7.511199999999871e-05, 7.488799999999865e-05, 7.490300000000116e-05, 7.53050000000012e-05, 7.46249999999983e-05, 7.529099999999816e-05, 7.537500000000252e-05, 7.540300000000166e-05, 7.487500000000202e-05, 7.487500000000202e-05, 7.454200000000036e-05, 7.479200000000061e-05, 7.545899999999994e-05, 7.488900000000159e-05, 7.470799999999972e-05, 7.501299999999878e-05, 7.533300000000034e-05]</msg>
<status status="PASS" starttime="20201115 23:02:38.985" endtime="20201115 23:02:38.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.980" endtime="20201115 23:02:38.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:38.990" endtime="20201115 23:02:38.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:38.993" endtime="20201115 23:02:39.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.992" endtime="20201115 23:02:39.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.988" endtime="20201115 23:02:39.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.621" endtime="20201115 23:02:39.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.619" endtime="20201115 23:02:39.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:38.619" endtime="20201115 23:02:39.014"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.017" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.025" endtime="20201115 23:02:39.046"></status>
</kw>
<msg timestamp="20201115 23:02:39.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.024" endtime="20201115 23:02:39.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.047" endtime="20201115 23:02:39.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.050" endtime="20201115 23:02:39.051"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.021" endtime="20201115 23:02:39.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.019" endtime="20201115 23:02:39.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.059" endtime="20201115 23:02:39.344"></status>
</kw>
<msg timestamp="20201115 23:02:39.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.057" endtime="20201115 23:02:39.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024006972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.348" endtime="20201115 23:02:39.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.356" endtime="20201115 23:02:39.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.055" endtime="20201115 23:02:39.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.053" endtime="20201115 23:02:39.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.363" level="INFO">${RESULT} = [{'time': 0.024006972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.58050000000017e-05, 'source_diff': 7.58050000000017e-05}, {'time': 0.024091028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:39.360" endtime="20201115 23:02:39.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.378" level="INFO">${ACCURACY} = {'source_diff': [7.58050000000017e-05, 7.5763999999999e-05, 7.630600000000168e-05, 7.574999999999943e-05, 7.587499999999955e-05, 7.601399999999925e-05, 7.552799999999832e-05, 7.566700000000148e-05, 7....</msg>
<status status="PASS" starttime="20201115 23:02:39.364" endtime="20201115 23:02:39.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.383" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.382" endtime="20201115 23:02:39.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.385" level="INFO">VALUE: [7.58050000000017e-05, 7.5763999999999e-05, 7.630600000000168e-05, 7.574999999999943e-05, 7.587499999999955e-05, 7.601399999999925e-05, 7.552799999999832e-05, 7.566700000000148e-05, 7.623699999999983e-05, 7.566700000000148e-05, 7.579100000000213e-05, 7.59440000000014e-05, 7.588899999999912e-05, 7.64029999999992e-05, 7.586099999999998e-05, 7.611100000000023e-05, 7.577799999999857e-05, 7.631999999999778e-05, 7.634800000000039e-05, 7.594500000000087e-05, 7.566699999999801e-05, 7.559799999999964e-05, 7.634699999999744e-05, 7.630499999999873e-05, 7.59029999999987e-05, 7.630499999999873e-05, 7.559700000000016e-05, 7.611100000000023e-05, 7.615300000000241e-05, 7.580600000000118e-05, 7.587499999999955e-05, 7.629200000000211e-05, 7.565300000000191e-05, 7.638899999999962e-05, 7.586199999999946e-05, 7.602700000000281e-05, 7.592999999999836e-05, 7.601399999999925e-05, 7.615300000000241e-05, 7.638899999999962e-05, 7.572200000000029e-05, 7.604199999999839e-05, 7.559700000000016e-05, 7.59310000000013e-05, 7.56249999999993e-05, 7.590300000000216e-05, 7.57370000000028e-05, 7.604100000000238e-05, 7.611100000000023e-05, 7.598600000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:02:39.384" endtime="20201115 23:02:39.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.379" endtime="20201115 23:02:39.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.389" endtime="20201115 23:02:39.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.392" endtime="20201115 23:02:39.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.390" endtime="20201115 23:02:39.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.387" endtime="20201115 23:02:39.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.017" endtime="20201115 23:02:39.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.016" endtime="20201115 23:02:39.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.015" endtime="20201115 23:02:39.413"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.424" endtime="20201115 23:02:39.441"></status>
</kw>
<msg timestamp="20201115 23:02:39.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.422" endtime="20201115 23:02:39.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.442" endtime="20201115 23:02:39.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.445" endtime="20201115 23:02:39.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.420" endtime="20201115 23:02:39.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.418" endtime="20201115 23:02:39.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.454" endtime="20201115 23:02:39.741"></status>
</kw>
<msg timestamp="20201115 23:02:39.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.453" endtime="20201115 23:02:39.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022216597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.745" endtime="20201115 23:02:39.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.754" endtime="20201115 23:02:39.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.450" endtime="20201115 23:02:39.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.449" endtime="20201115 23:02:39.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:39.761" level="INFO">${RESULT} = [{'time': 0.022216597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723600000000136e-05, 'source_diff': 7.723600000000136e-05}, {'time': 0.022303611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:39.757" endtime="20201115 23:02:39.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:39.775" level="INFO">${ACCURACY} = {'source_diff': [7.723600000000136e-05, 7.652799999999932e-05, 7.666699999999901e-05, 7.6764e-05, 7.668100000000205e-05, 7.651399999999975e-05, 7.745900000000194e-05, 7.688900000000012e-05, 7.70969999...</msg>
<status status="PASS" starttime="20201115 23:02:39.762" endtime="20201115 23:02:39.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.779" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:39.778" endtime="20201115 23:02:39.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.782" level="INFO">VALUE: [7.723600000000136e-05, 7.652799999999932e-05, 7.666699999999901e-05, 7.6764e-05, 7.668100000000205e-05, 7.651399999999975e-05, 7.745900000000194e-05, 7.688900000000012e-05, 7.70969999999982e-05, 7.665199999999997e-05, 7.675000000000043e-05, 7.730499999999974e-05, 7.65969999999977e-05, 7.7070000000002e-05, 7.71250000000008e-05, 7.681900000000227e-05, 7.675000000000043e-05, 7.736100000000148e-05, 7.72640000000005e-05, 7.687500000000055e-05, 7.72229999999978e-05, 7.701400000000025e-05, 7.711099999999776e-05, 7.72770000000006e-05, 7.701400000000025e-05, 7.683300000000184e-05, 7.715299999999994e-05, 7.656899999999855e-05, 7.652800000000279e-05, 7.65830000000016e-05, 7.648600000000061e-05, 7.652799999999932e-05, 7.701400000000025e-05, 7.745899999999847e-05, 7.709800000000114e-05, 7.716600000000004e-05, 7.686100000000098e-05, 7.675000000000043e-05, 7.679199999999914e-05, 7.69579999999985e-05, 7.74030000000002e-05, 7.734700000000191e-05, 7.649999999999671e-05, 7.711100000000123e-05, 7.691700000000273e-05, 7.687500000000055e-05, 7.711200000000071e-05, 7.69440000000024e-05, 7.708299999999862e-05, 7.719399999999918e-05]</msg>
<status status="PASS" starttime="20201115 23:02:39.780" endtime="20201115 23:02:39.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.775" endtime="20201115 23:02:39.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.785" endtime="20201115 23:02:39.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:39.788" endtime="20201115 23:02:39.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.787" endtime="20201115 23:02:39.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.783" endtime="20201115 23:02:39.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.416" endtime="20201115 23:02:39.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.414" endtime="20201115 23:02:39.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.414" endtime="20201115 23:02:39.810"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.812" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.820" endtime="20201115 23:02:39.838"></status>
</kw>
<msg timestamp="20201115 23:02:39.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.819" endtime="20201115 23:02:39.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:39.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:39.840" endtime="20201115 23:02:39.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.843" endtime="20201115 23:02:39.844"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.816" endtime="20201115 23:02:39.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.814" endtime="20201115 23:02:39.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:39.852" endtime="20201115 23:02:40.138"></status>
</kw>
<msg timestamp="20201115 23:02:40.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:39.850" endtime="20201115 23:02:40.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.142" endtime="20201115 23:02:40.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.151" endtime="20201115 23:02:40.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.847" endtime="20201115 23:02:40.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.846" endtime="20201115 23:02:40.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.158" level="INFO">${RESULT} = [{'time': 0.022973319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.762499999999783e-05, 'source_diff': 7.762499999999783e-05}, {'time': 0.023059319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:40.154" endtime="20201115 23:02:40.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.171" level="INFO">${ACCURACY} = {'source_diff': [7.762499999999783e-05, 7.77770000000011e-05, 7.78189999999998e-05, 7.83190000000003e-05, 7.837499999999858e-05, 7.801399999999778e-05, 7.83190000000003e-05, 7.786099999999851e-05, 7.8...</msg>
<status status="PASS" starttime="20201115 23:02:40.159" endtime="20201115 23:02:40.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.176" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.175" endtime="20201115 23:02:40.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.178" level="INFO">VALUE: [7.762499999999783e-05, 7.77770000000011e-05, 7.78189999999998e-05, 7.83190000000003e-05, 7.837499999999858e-05, 7.801399999999778e-05, 7.83190000000003e-05, 7.786099999999851e-05, 7.827699999999813e-05, 7.804200000000039e-05, 7.838899999999815e-05, 7.808299999999962e-05, 7.759800000000164e-05, 7.804100000000092e-05, 7.794399999999993e-05, 7.804200000000039e-05, 7.758299999999912e-05, 7.804200000000039e-05, 7.772199999999882e-05, 7.806900000000006e-05, 7.779100000000067e-05, 7.766700000000001e-05, 7.829200000000064e-05, 7.815299999999747e-05, 7.763900000000087e-05, 7.794399999999993e-05, 7.786099999999851e-05, 7.815200000000147e-05, 7.837500000000205e-05, 7.78189999999998e-05, 7.787500000000155e-05, 7.787500000000155e-05, 7.768099999999958e-05, 7.829200000000064e-05, 7.779200000000014e-05, 7.783399999999885e-05, 7.79449999999994e-05, 7.802699999999788e-05, 7.830499999999727e-05, 7.830500000000074e-05, 7.80969999999992e-05, 7.772200000000229e-05, 7.751400000000075e-05, 7.818000000000061e-05, 7.794500000000287e-05, 7.823599999999889e-05, 7.7764000000001e-05, 7.763900000000087e-05, 7.801400000000125e-05, 7.768099999999958e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.177" endtime="20201115 23:02:40.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.172" endtime="20201115 23:02:40.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.182" endtime="20201115 23:02:40.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.185" endtime="20201115 23:02:40.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.184" endtime="20201115 23:02:40.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.180" endtime="20201115 23:02:40.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.813" endtime="20201115 23:02:40.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.811" endtime="20201115 23:02:40.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:39.810" endtime="20201115 23:02:40.207"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.209" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.217" endtime="20201115 23:02:40.235"></status>
</kw>
<msg timestamp="20201115 23:02:40.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.216" endtime="20201115 23:02:40.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.237" endtime="20201115 23:02:40.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.245" endtime="20201115 23:02:40.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.213" endtime="20201115 23:02:40.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.211" endtime="20201115 23:02:40.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.254" endtime="20201115 23:02:40.539"></status>
</kw>
<msg timestamp="20201115 23:02:40.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.252" endtime="20201115 23:02:40.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021986958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.544" endtime="20201115 23:02:40.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.552" endtime="20201115 23:02:40.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.250" endtime="20201115 23:02:40.554"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.248" endtime="20201115 23:02:40.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.559" level="INFO">${RESULT} = [{'time': 0.021986958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.941600000000229e-05, 'source_diff': 7.941600000000229e-05}, {'time': 0.022076986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:40.555" endtime="20201115 23:02:40.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.572" level="INFO">${ACCURACY} = {'source_diff': [7.941600000000229e-05, 7.880500000000124e-05, 7.9458000000001e-05, 7.888899999999865e-05, 7.919399999999771e-05, 7.901400000000225e-05, 7.880600000000071e-05, 7.848600000000261e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:02:40.560" endtime="20201115 23:02:40.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.577" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.576" endtime="20201115 23:02:40.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.579" level="INFO">VALUE: [7.941600000000229e-05, 7.880500000000124e-05, 7.9458000000001e-05, 7.888899999999865e-05, 7.919399999999771e-05, 7.901400000000225e-05, 7.880600000000071e-05, 7.848600000000261e-05, 7.919400000000118e-05, 7.920800000000075e-05, 7.927699999999913e-05, 7.930499999999827e-05, 7.924999999999946e-05, 7.866599999999807e-05, 7.887499999999908e-05, 7.85969999999997e-05, 7.862499999999883e-05, 7.85969999999997e-05, 7.852799999999785e-05, 7.941600000000229e-05, 7.850000000000218e-05, 7.854099999999795e-05, 7.941700000000176e-05, 7.875000000000243e-05, 7.911099999999976e-05, 7.872199999999982e-05, 7.858300000000012e-05, 7.873599999999939e-05, 7.941700000000176e-05, 7.918100000000108e-05, 7.873600000000286e-05, 7.94450000000009e-05, 7.923699999999936e-05, 7.891599999999832e-05, 7.873599999999939e-05, 7.892999999999789e-05, 7.902699999999888e-05, 7.873599999999939e-05, 7.92779999999986e-05, 7.940299999999872e-05, 7.915300000000194e-05, 7.943099999999786e-05, 7.927800000000207e-05, 7.857000000000003e-05, 7.90840000000001e-05, 7.882000000000028e-05, 7.94450000000009e-05, 7.881899999999734e-05, 7.917999999999814e-05, 7.899999999999921e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.578" endtime="20201115 23:02:40.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.573" endtime="20201115 23:02:40.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.582" endtime="20201115 23:02:40.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.586" endtime="20201115 23:02:40.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.584" endtime="20201115 23:02:40.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.581" endtime="20201115 23:02:40.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.210" endtime="20201115 23:02:40.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.208" endtime="20201115 23:02:40.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.207" endtime="20201115 23:02:40.607"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.609" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.618" endtime="20201115 23:02:40.637"></status>
</kw>
<msg timestamp="20201115 23:02:40.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.617" endtime="20201115 23:02:40.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:40.638" endtime="20201115 23:02:40.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.641" endtime="20201115 23:02:40.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.613" endtime="20201115 23:02:40.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.611" endtime="20201115 23:02:40.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.650" endtime="20201115 23:02:40.936"></status>
</kw>
<msg timestamp="20201115 23:02:40.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.649" endtime="20201115 23:02:40.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024039472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:40.940" endtime="20201115 23:02:40.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.948" endtime="20201115 23:02:40.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.646" endtime="20201115 23:02:40.950"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.644" endtime="20201115 23:02:40.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:40.955" level="INFO">${RESULT} = [{'time': 0.024119722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.025000000000046e-05, 'source_diff': 8.025000000000046e-05}, {'time': 0.024207736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:40.951" endtime="20201115 23:02:40.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:40.970" level="INFO">${ACCURACY} = {'source_diff': [8.025000000000046e-05, 8.000000000000021e-05, 7.987500000000008e-05, 8.002799999999935e-05, 8.034699999999798e-05, 7.982000000000128e-05, 8.031999999999831e-05, 8.002799999999935e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:40.956" endtime="20201115 23:02:40.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.974" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:40.973" endtime="20201115 23:02:40.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:40.977" level="INFO">VALUE: [8.025000000000046e-05, 8.000000000000021e-05, 7.987500000000008e-05, 8.002799999999935e-05, 8.034699999999798e-05, 7.982000000000128e-05, 8.031999999999831e-05, 8.002799999999935e-05, 7.95979999999967e-05, 7.952800000000232e-05, 8.016599999999957e-05, 8.031899999999884e-05, 8.04719999999981e-05, 7.972200000000082e-05, 8.016699999999904e-05, 7.952800000000232e-05, 7.972200000000082e-05, 7.951399999999928e-05, 7.968100000000158e-05, 8.01389999999999e-05, 7.980600000000171e-05, 8.047200000000157e-05, 7.991599999999932e-05, 8.009699999999773e-05, 7.980499999999877e-05, 8.036100000000101e-05, 7.994400000000193e-05, 8.01389999999999e-05, 8.029199999999917e-05, 7.99450000000014e-05, 7.954199999999842e-05, 7.997300000000054e-05, 8.001399999999978e-05, 7.962499999999983e-05, 8.017999999999914e-05, 8.012500000000033e-05, 7.96519999999995e-05, 7.981899999999834e-05, 8.004199999999892e-05, 7.958299999999766e-05, 8.023599999999742e-05, 8.026400000000003e-05, 7.965299999999897e-05, 8.000000000000021e-05, 8.04030000000032e-05, 8.02369999999969e-05, 7.986100000000051e-05, 8.008300000000163e-05, 8.03190000000023e-05, 7.970800000000125e-05]</msg>
<status status="PASS" starttime="20201115 23:02:40.975" endtime="20201115 23:02:40.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.970" endtime="20201115 23:02:40.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:40.980" endtime="20201115 23:02:40.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:40.983" endtime="20201115 23:02:41.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.982" endtime="20201115 23:02:41.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.978" endtime="20201115 23:02:41.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.610" endtime="20201115 23:02:41.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.608" endtime="20201115 23:02:41.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:40.607" endtime="20201115 23:02:41.005"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.007" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.016" endtime="20201115 23:02:41.034"></status>
</kw>
<msg timestamp="20201115 23:02:41.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.014" endtime="20201115 23:02:41.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.035" endtime="20201115 23:02:41.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.038" endtime="20201115 23:02:41.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.011" endtime="20201115 23:02:41.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.009" endtime="20201115 23:02:41.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.047" endtime="20201115 23:02:41.331"></status>
</kw>
<msg timestamp="20201115 23:02:41.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.045" endtime="20201115 23:02:41.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023156667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023237778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.336" endtime="20201115 23:02:41.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.344" endtime="20201115 23:02:41.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.043" endtime="20201115 23:02:41.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.041" endtime="20201115 23:02:41.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.351" level="INFO">${RESULT} = [{'time': 0.023237778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.111100000000177e-05, 'source_diff': 8.111100000000177e-05}, {'time': 0.023326792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:41.347" endtime="20201115 23:02:41.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.364" level="INFO">${ACCURACY} = {'source_diff': [8.111100000000177e-05, 8.106999999999906e-05, 8.058399999999813e-05, 8.125000000000146e-05, 8.134699999999898e-05, 8.130500000000027e-05, 8.130500000000027e-05, 8.049999999999724e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:41.352" endtime="20201115 23:02:41.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.369" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.368" endtime="20201115 23:02:41.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.371" level="INFO">VALUE: [8.111100000000177e-05, 8.106999999999906e-05, 8.058399999999813e-05, 8.125000000000146e-05, 8.134699999999898e-05, 8.130500000000027e-05, 8.130500000000027e-05, 8.049999999999724e-05, 8.123599999999842e-05, 8.097200000000207e-05, 8.112500000000133e-05, 8.127700000000113e-05, 8.05970000000017e-05, 8.051400000000028e-05, 8.086200000000099e-05, 8.138900000000115e-05, 8.117999999999667e-05, 8.120799999999928e-05, 8.106899999999959e-05, 8.13329999999994e-05, 8.088900000000065e-05, 8.125000000000146e-05, 8.065299999999997e-05, 8.084800000000142e-05, 8.12780000000006e-05, 8.144499999999943e-05, 8.084800000000142e-05, 8.106999999999906e-05, 8.145799999999953e-05, 8.104099999999698e-05, 8.081899999999934e-05, 8.06109999999978e-05, 8.143099999999986e-05, 8.073599999999792e-05, 8.101400000000078e-05, 8.054199999999942e-05, 8.122199999999885e-05, 8.090300000000022e-05, 8.109800000000167e-05, 8.05130000000008e-05, 8.118000000000014e-05, 8.123600000000189e-05, 8.077700000000063e-05, 8.107000000000253e-05, 8.09719999999986e-05, 8.072200000000182e-05, 8.108300000000263e-05, 8.136200000000149e-05, 8.101400000000078e-05, 8.051400000000028e-05]</msg>
<status status="PASS" starttime="20201115 23:02:41.370" endtime="20201115 23:02:41.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.365" endtime="20201115 23:02:41.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.375" endtime="20201115 23:02:41.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.378" endtime="20201115 23:02:41.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.377" endtime="20201115 23:02:41.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.373" endtime="20201115 23:02:41.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.008" endtime="20201115 23:02:41.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.006" endtime="20201115 23:02:41.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.005" endtime="20201115 23:02:41.399"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.402" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.410" endtime="20201115 23:02:41.430"></status>
</kw>
<msg timestamp="20201115 23:02:41.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.409" endtime="20201115 23:02:41.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.431" endtime="20201115 23:02:41.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.434" endtime="20201115 23:02:41.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.406" endtime="20201115 23:02:41.436"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.404" endtime="20201115 23:02:41.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.443" endtime="20201115 23:02:41.729"></status>
</kw>
<msg timestamp="20201115 23:02:41.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.442" endtime="20201115 23:02:41.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.733" endtime="20201115 23:02:41.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.742" endtime="20201115 23:02:41.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.439" endtime="20201115 23:02:41.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.437" endtime="20201115 23:02:41.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:41.748" level="INFO">${RESULT} = [{'time': 0.023024625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.174999999999849e-05, 'source_diff': 8.174999999999849e-05}, {'time': 0.023115611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:41.745" endtime="20201115 23:02:41.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:41.762" level="INFO">${ACCURACY} = {'source_diff': [8.174999999999849e-05, 8.202800000000135e-05, 8.208300000000016e-05, 8.202800000000135e-05, 8.158299999999966e-05, 8.208399999999963e-05, 8.161100000000227e-05, 8.24720000000001e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:41.749" endtime="20201115 23:02:41.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.766" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:41.765" endtime="20201115 23:02:41.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.769" level="INFO">VALUE: [8.174999999999849e-05, 8.202800000000135e-05, 8.208300000000016e-05, 8.202800000000135e-05, 8.158299999999966e-05, 8.208399999999963e-05, 8.161100000000227e-05, 8.24720000000001e-05, 8.213799999999896e-05, 8.194400000000046e-05, 8.15269999999979e-05, 8.152800000000085e-05, 8.173600000000239e-05, 8.154200000000042e-05, 8.184699999999948e-05, 8.212499999999887e-05, 8.16520000000015e-05, 8.156999999999956e-05, 8.187500000000208e-05, 8.232000000000031e-05, 8.180500000000077e-05, 8.192999999999742e-05, 8.155499999999705e-05, 8.194399999999699e-05, 8.201400000000178e-05, 8.206899999999712e-05, 8.151400000000128e-05, 8.15970000000027e-05, 8.195800000000003e-05, 8.208399999999963e-05, 8.218100000000061e-05, 8.161200000000174e-05, 8.180500000000077e-05, 8.162499999999837e-05, 8.209699999999973e-05, 8.163899999999794e-05, 8.148599999999867e-05, 8.211100000000277e-05, 8.245800000000053e-05, 8.180599999999677e-05, 8.240300000000172e-05, 8.207000000000006e-05, 8.194499999999993e-05, 8.200000000000221e-05, 8.199999999999874e-05, 8.234699999999998e-05, 8.245799999999706e-05, 8.17910000000012e-05, 8.216700000000104e-05, 8.16109999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:02:41.768" endtime="20201115 23:02:41.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.763" endtime="20201115 23:02:41.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.773" endtime="20201115 23:02:41.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:41.776" endtime="20201115 23:02:41.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.774" endtime="20201115 23:02:41.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.771" endtime="20201115 23:02:41.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.402" endtime="20201115 23:02:41.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.401" endtime="20201115 23:02:41.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.400" endtime="20201115 23:02:41.797"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.800" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.808" endtime="20201115 23:02:41.827"></status>
</kw>
<msg timestamp="20201115 23:02:41.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.806" endtime="20201115 23:02:41.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:41.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:41.829" endtime="20201115 23:02:41.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.831" endtime="20201115 23:02:41.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.804" endtime="20201115 23:02:41.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.801" endtime="20201115 23:02:41.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:41.840" endtime="20201115 23:02:42.126"></status>
</kw>
<msg timestamp="20201115 23:02:42.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:41.839" endtime="20201115 23:02:42.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.130" endtime="20201115 23:02:42.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.139" endtime="20201115 23:02:42.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.836" endtime="20201115 23:02:42.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.834" endtime="20201115 23:02:42.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.145" level="INFO">${RESULT} = [{'time': 0.021994861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.302800000000235e-05, 'source_diff': 8.302800000000235e-05}, {'time': 0.022087847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.142" endtime="20201115 23:02:42.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.159" level="INFO">${ACCURACY} = {'source_diff': [8.302800000000235e-05, 8.318000000000214e-05, 8.334700000000098e-05, 8.298600000000017e-05, 8.272200000000035e-05, 8.337500000000012e-05, 8.273599999999992e-05, 8.268100000000111e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:42.147" endtime="20201115 23:02:42.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.164" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.163" endtime="20201115 23:02:42.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.167" level="INFO">VALUE: [8.302800000000235e-05, 8.318000000000214e-05, 8.334700000000098e-05, 8.298600000000017e-05, 8.272200000000035e-05, 8.337500000000012e-05, 8.273599999999992e-05, 8.268100000000111e-05, 8.31659999999991e-05, 8.272299999999982e-05, 8.262500000000284e-05, 8.322199999999738e-05, 8.265199999999903e-05, 8.275000000000296e-05, 8.302799999999888e-05, 8.320800000000128e-05, 8.270799999999731e-05, 8.288899999999919e-05, 8.31110000000003e-05, 8.302799999999888e-05, 8.257000000000056e-05, 8.29720000000006e-05, 8.344399999999849e-05, 8.287499999999962e-05, 8.267999999999817e-05, 8.294400000000146e-05, 8.323600000000042e-05, 8.309700000000073e-05, 8.29309999999979e-05, 8.309699999999726e-05, 8.263899999999894e-05, 8.34309999999984e-05, 8.273599999999992e-05, 8.287499999999962e-05, 8.265199999999903e-05, 8.265199999999903e-05, 8.331899999999837e-05, 8.266699999999808e-05, 8.276399999999906e-05, 8.274999999999949e-05, 8.308299999999769e-05, 8.322200000000085e-05, 8.29590000000005e-05, 8.25979999999997e-05, 8.29590000000005e-05, 8.284700000000048e-05, 8.259700000000023e-05, 8.288900000000265e-05, 8.26659999999986e-05, 8.294400000000146e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.165" endtime="20201115 23:02:42.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.160" endtime="20201115 23:02:42.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.170" endtime="20201115 23:02:42.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.173" endtime="20201115 23:02:42.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.172" endtime="20201115 23:02:42.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.168" endtime="20201115 23:02:42.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.800" endtime="20201115 23:02:42.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.798" endtime="20201115 23:02:42.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:41.798" endtime="20201115 23:02:42.194"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.197" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.205" endtime="20201115 23:02:42.225"></status>
</kw>
<msg timestamp="20201115 23:02:42.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.203" endtime="20201115 23:02:42.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.226" endtime="20201115 23:02:42.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.229" endtime="20201115 23:02:42.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.201" endtime="20201115 23:02:42.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.199" endtime="20201115 23:02:42.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.238" endtime="20201115 23:02:42.523"></status>
</kw>
<msg timestamp="20201115 23:02:42.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.236" endtime="20201115 23:02:42.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.528" endtime="20201115 23:02:42.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.536" endtime="20201115 23:02:42.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.234" endtime="20201115 23:02:42.539"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.232" endtime="20201115 23:02:42.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.543" level="INFO">${RESULT} = [{'time': 0.022916694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.398600000000117e-05, 'source_diff': 8.398600000000117e-05}, {'time': 0.023008694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.540" endtime="20201115 23:02:42.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.558" level="INFO">${ACCURACY} = {'source_diff': [8.398600000000117e-05, 8.386100000000105e-05, 8.369399999999874e-05, 8.359700000000123e-05, 8.404199999999945e-05, 8.365300000000297e-05, 8.352799999999938e-05, 8.42919999999997e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:42.544" endtime="20201115 23:02:42.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.563" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.562" endtime="20201115 23:02:42.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.565" level="INFO">VALUE: [8.398600000000117e-05, 8.386100000000105e-05, 8.369399999999874e-05, 8.359700000000123e-05, 8.404199999999945e-05, 8.365300000000297e-05, 8.352799999999938e-05, 8.42919999999997e-05, 8.423600000000142e-05, 8.431999999999884e-05, 8.398600000000117e-05, 8.411099999999783e-05, 8.388900000000019e-05, 8.419399999999924e-05, 8.375000000000049e-05, 8.400000000000074e-05, 8.409700000000173e-05, 8.425000000000099e-05, 8.375000000000049e-05, 8.408299999999869e-05, 8.352799999999938e-05, 8.448700000000114e-05, 8.357000000000156e-05, 8.437500000000112e-05, 8.43049999999998e-05, 8.438899999999722e-05, 8.387500000000062e-05, 8.38049999999993e-05, 8.409700000000173e-05, 8.380599999999877e-05, 8.416699999999958e-05, 8.402799999999988e-05, 8.447300000000157e-05, 8.351399999999981e-05, 8.37919999999992e-05, 8.415200000000053e-05, 8.388900000000019e-05, 8.444499999999897e-05, 8.401400000000031e-05, 8.373600000000092e-05, 8.395800000000203e-05, 8.422199999999838e-05, 8.384800000000095e-05, 8.400000000000074e-05, 8.436100000000155e-05, 8.401400000000031e-05, 8.408400000000163e-05, 8.350000000000024e-05, 8.425000000000099e-05, 8.36249999999969e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.564" endtime="20201115 23:02:42.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.559" endtime="20201115 23:02:42.566"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.568" endtime="20201115 23:02:42.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.572" endtime="20201115 23:02:42.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.570" endtime="20201115 23:02:42.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.567" endtime="20201115 23:02:42.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.197" endtime="20201115 23:02:42.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.196" endtime="20201115 23:02:42.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.195" endtime="20201115 23:02:42.593"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.596" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.604" endtime="20201115 23:02:42.622"></status>
</kw>
<msg timestamp="20201115 23:02:42.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.602" endtime="20201115 23:02:42.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.623" endtime="20201115 23:02:42.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.626" endtime="20201115 23:02:42.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.600" endtime="20201115 23:02:42.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.598" endtime="20201115 23:02:42.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.635" endtime="20201115 23:02:42.921"></status>
</kw>
<msg timestamp="20201115 23:02:42.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.633" endtime="20201115 23:02:42.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022026625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:42.925" endtime="20201115 23:02:42.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.934" endtime="20201115 23:02:42.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.631" endtime="20201115 23:02:42.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.629" endtime="20201115 23:02:42.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:42.941" level="INFO">${RESULT} = [{'time': 0.022026625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.530600000000027e-05, 'source_diff': 8.530600000000027e-05}, {'time': 0.022121597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:42.938" endtime="20201115 23:02:42.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:42.955" level="INFO">${ACCURACY} = {'source_diff': [8.530600000000027e-05, 8.497199999999913e-05, 8.534700000000298e-05, 8.526400000000156e-05, 8.46530000000005e-05, 8.541700000000083e-05, 8.504200000000045e-05, 8.451400000000081e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:42.942" endtime="20201115 23:02:42.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.960" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:42.959" endtime="20201115 23:02:42.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.962" level="INFO">VALUE: [8.530600000000027e-05, 8.497199999999913e-05, 8.534700000000298e-05, 8.526400000000156e-05, 8.46530000000005e-05, 8.541700000000083e-05, 8.504200000000045e-05, 8.451400000000081e-05, 8.501400000000131e-05, 8.51110000000023e-05, 8.506900000000012e-05, 8.523599999999895e-05, 8.506900000000012e-05, 8.509700000000273e-05, 8.504200000000045e-05, 8.476399999999759e-05, 8.508299999999969e-05, 8.454199999999995e-05, 8.509700000000273e-05, 8.501399999999784e-05, 8.530600000000027e-05, 8.46110000000018e-05, 8.46660000000006e-05, 8.469399999999974e-05, 8.501399999999784e-05, 8.522199999999938e-05, 8.468099999999965e-05, 8.466700000000008e-05, 8.473599999999845e-05, 8.512500000000187e-05, 8.519499999999972e-05, 8.505500000000055e-05, 8.466700000000008e-05, 8.46249999999979e-05, 8.48050000000003e-05, 8.473599999999845e-05, 8.523599999999895e-05, 8.53469999999995e-05, 8.480599999999977e-05, 8.469500000000268e-05, 8.49309999999999e-05, 8.472199999999888e-05, 8.524999999999852e-05, 8.523600000000242e-05, 8.54859999999992e-05, 8.545800000000006e-05, 8.541600000000135e-05, 8.519400000000024e-05, 8.547199999999963e-05, 8.456899999999962e-05]</msg>
<status status="PASS" starttime="20201115 23:02:42.961" endtime="20201115 23:02:42.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.956" endtime="20201115 23:02:42.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:42.965" endtime="20201115 23:02:42.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:42.969" endtime="20201115 23:02:42.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.967" endtime="20201115 23:02:42.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.964" endtime="20201115 23:02:42.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.596" endtime="20201115 23:02:42.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.594" endtime="20201115 23:02:42.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.593" endtime="20201115 23:02:42.990"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:42.992" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.001" endtime="20201115 23:02:43.019"></status>
</kw>
<msg timestamp="20201115 23:02:43.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:42.999" endtime="20201115 23:02:43.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.020" endtime="20201115 23:02:43.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.023" endtime="20201115 23:02:43.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.997" endtime="20201115 23:02:43.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.994" endtime="20201115 23:02:43.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.032" endtime="20201115 23:02:43.317"></status>
</kw>
<msg timestamp="20201115 23:02:43.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.031" endtime="20201115 23:02:43.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.321" endtime="20201115 23:02:43.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.330" endtime="20201115 23:02:43.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.028" endtime="20201115 23:02:43.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.027" endtime="20201115 23:02:43.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:43.336" level="INFO">${RESULT} = [{'time': 0.022057431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.595900000000004e-05, 'source_diff': 8.595900000000004e-05}, {'time': 0.022152444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:43.333" endtime="20201115 23:02:43.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:43.350" level="INFO">${ACCURACY} = {'source_diff': [8.595900000000004e-05, 8.608300000000069e-05, 8.651399999999934e-05, 8.595800000000056e-05, 8.608300000000069e-05, 8.63050000000018e-05, 8.58050000000013e-05, 8.572199999999988e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:02:43.337" endtime="20201115 23:02:43.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.354" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:43.353" endtime="20201115 23:02:43.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.357" level="INFO">VALUE: [8.595900000000004e-05, 8.608300000000069e-05, 8.651399999999934e-05, 8.595800000000056e-05, 8.608300000000069e-05, 8.63050000000018e-05, 8.58050000000013e-05, 8.572199999999988e-05, 8.620799999999734e-05, 8.647200000000063e-05, 8.63059999999978e-05, 8.630600000000127e-05, 8.602699999999894e-05, 8.577699999999869e-05, 8.558300000000019e-05, 8.588899999999872e-05, 8.609700000000026e-05, 8.572199999999988e-05, 8.64449999999975e-05, 8.599999999999927e-05, 8.6153000000002e-05, 8.645900000000054e-05, 8.608400000000016e-05, 8.581900000000087e-05, 8.588800000000271e-05, 8.579099999999826e-05, 8.559699999999976e-05, 8.581900000000087e-05, 8.645799999999759e-05, 8.566700000000108e-05, 8.609700000000026e-05, 8.599999999999927e-05, 8.602799999999841e-05, 8.555599999999705e-05, 8.604099999999851e-05, 8.587499999999915e-05, 8.588799999999924e-05, 8.601399999999884e-05, 8.644400000000149e-05, 8.644399999999802e-05, 8.616700000000158e-05, 8.559699999999976e-05, 8.645800000000106e-05, 8.641700000000183e-05, 8.608400000000016e-05, 8.642999999999845e-05, 8.563899999999847e-05, 8.616599999999863e-05, 8.601399999999884e-05, 8.6153000000002e-05]</msg>
<status status="PASS" starttime="20201115 23:02:43.356" endtime="20201115 23:02:43.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.351" endtime="20201115 23:02:43.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.360" endtime="20201115 23:02:43.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:43.364" endtime="20201115 23:02:43.383"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.362" endtime="20201115 23:02:43.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.359" endtime="20201115 23:02:43.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.993" endtime="20201115 23:02:43.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.991" endtime="20201115 23:02:43.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:42.990" endtime="20201115 23:02:43.385"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.387" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.396" endtime="20201115 23:02:43.414"></status>
</kw>
<msg timestamp="20201115 23:02:43.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.394" endtime="20201115 23:02:43.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.415" endtime="20201115 23:02:43.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.418" endtime="20201115 23:02:43.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.391" endtime="20201115 23:02:43.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.389" endtime="20201115 23:02:43.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.427" endtime="20201115 23:02:43.711"></status>
</kw>
<msg timestamp="20201115 23:02:43.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.425" endtime="20201115 23:02:43.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.715" endtime="20201115 23:02:43.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.724" endtime="20201115 23:02:43.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.423" endtime="20201115 23:02:43.726"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.421" endtime="20201115 23:02:43.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:43.730" level="INFO">${RESULT} = [{'time': 0.022902347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.711100000000083e-05, 'source_diff': 8.711100000000083e-05}, {'time': 0.022999361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:43.727" endtime="20201115 23:02:43.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:43.744" level="INFO">${ACCURACY} = {'source_diff': [8.711100000000083e-05, 8.672200000000088e-05, 8.713899999999997e-05, 8.705600000000202e-05, 8.652800000000238e-05, 8.659699999999729e-05, 8.688899999999972e-05, 8.688899999999972e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:43.731" endtime="20201115 23:02:43.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.749" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:43.748" endtime="20201115 23:02:43.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.751" level="INFO">VALUE: [8.711100000000083e-05, 8.672200000000088e-05, 8.713899999999997e-05, 8.705600000000202e-05, 8.652800000000238e-05, 8.659699999999729e-05, 8.688899999999972e-05, 8.688899999999972e-05, 8.73189999999989e-05, 8.673699999999993e-05, 8.687500000000015e-05, 8.694399999999852e-05, 8.709700000000126e-05, 8.680499999999883e-05, 8.675000000000002e-05, 8.680600000000177e-05, 8.652799999999891e-05, 8.6847000000001e-05, 8.694500000000147e-05, 8.744500000000197e-05, 8.651299999999987e-05, 8.695799999999809e-05, 8.709700000000126e-05, 8.695800000000156e-05, 8.725000000000052e-05, 8.708299999999822e-05, 8.687500000000015e-05, 8.725000000000052e-05, 8.694500000000147e-05, 8.723600000000095e-05, 8.723700000000043e-05, 8.725000000000052e-05, 8.701300000000037e-05, 8.669399999999827e-05, 8.724999999999705e-05, 8.672200000000088e-05, 8.705499999999908e-05, 8.668099999999818e-05, 8.68059999999983e-05, 8.695899999999757e-05, 8.748700000000068e-05, 8.737500000000065e-05, 8.677799999999916e-05, 8.738799999999727e-05, 8.701300000000037e-05, 8.652799999999891e-05, 8.695799999999809e-05, 8.652799999999891e-05, 8.726400000000009e-05, 8.659700000000076e-05]</msg>
<status status="PASS" starttime="20201115 23:02:43.750" endtime="20201115 23:02:43.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.745" endtime="20201115 23:02:43.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.754" endtime="20201115 23:02:43.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:43.758" endtime="20201115 23:02:43.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.756" endtime="20201115 23:02:43.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.753" endtime="20201115 23:02:43.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.388" endtime="20201115 23:02:43.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.386" endtime="20201115 23:02:43.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.385" endtime="20201115 23:02:43.779"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.782" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.790" endtime="20201115 23:02:43.809"></status>
</kw>
<msg timestamp="20201115 23:02:43.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.788" endtime="20201115 23:02:43.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:43.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:43.811" endtime="20201115 23:02:43.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.813" endtime="20201115 23:02:43.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.786" endtime="20201115 23:02:43.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.784" endtime="20201115 23:02:43.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:43.822" endtime="20201115 23:02:44.108"></status>
</kw>
<msg timestamp="20201115 23:02:44.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:43.821" endtime="20201115 23:02:44.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023254347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023341917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.112" endtime="20201115 23:02:44.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.121" endtime="20201115 23:02:44.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.818" endtime="20201115 23:02:44.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.817" endtime="20201115 23:02:44.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.127" level="INFO">${RESULT} = [{'time': 0.023341917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.756999999999862e-05, 'source_diff': 8.756999999999862e-05}, {'time': 0.023438917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:44.124" endtime="20201115 23:02:44.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.142" level="INFO">${ACCURACY} = {'source_diff': [8.756999999999862e-05, 8.779199999999973e-05, 8.843099999999993e-05, 8.773600000000145e-05, 8.806899999999965e-05, 8.772199999999841e-05, 8.802800000000041e-05, 8.786099999999811e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:44.128" endtime="20201115 23:02:44.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.147" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:44.146" endtime="20201115 23:02:44.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.150" level="INFO">VALUE: [8.756999999999862e-05, 8.779199999999973e-05, 8.843099999999993e-05, 8.773600000000145e-05, 8.806899999999965e-05, 8.772199999999841e-05, 8.802800000000041e-05, 8.786099999999811e-05, 8.809699999999879e-05, 8.838899999999775e-05, 8.777700000000069e-05, 8.84449999999995e-05, 8.81670000000001e-05, 8.816600000000063e-05, 8.81800000000002e-05, 8.819399999999977e-05, 8.801400000000084e-05, 8.752799999999991e-05, 8.838900000000122e-05, 8.815300000000054e-05, 8.825000000000152e-05, 8.78059999999993e-05, 8.823600000000195e-05, 8.773600000000145e-05, 8.831999999999937e-05, 8.755599999999905e-05, 8.837500000000165e-05, 8.777700000000069e-05, 8.844400000000002e-05, 8.797199999999866e-05, 8.750000000000077e-05, 8.791700000000333e-05, 8.761100000000133e-05, 8.823599999999848e-05, 8.754100000000001e-05, 8.823599999999848e-05, 8.845899999999907e-05, 8.827699999999772e-05, 8.802700000000094e-05, 8.797199999999866e-05, 8.801400000000084e-05, 8.755499999999958e-05, 8.788900000000072e-05, 8.834699999999904e-05, 8.784699999999854e-05, 8.762499999999743e-05, 8.808400000000216e-05, 8.81389999999975e-05, 8.783299999999897e-05, 8.811099999999836e-05]</msg>
<status status="PASS" starttime="20201115 23:02:44.148" endtime="20201115 23:02:44.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.143" endtime="20201115 23:02:44.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.153" endtime="20201115 23:02:44.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:44.157" endtime="20201115 23:02:44.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.155" endtime="20201115 23:02:44.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.151" endtime="20201115 23:02:44.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.782" endtime="20201115 23:02:44.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.780" endtime="20201115 23:02:44.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:43.780" endtime="20201115 23:02:44.178"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.180" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.188" endtime="20201115 23:02:44.208"></status>
</kw>
<msg timestamp="20201115 23:02:44.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.187" endtime="20201115 23:02:44.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.209" endtime="20201115 23:02:44.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.212" endtime="20201115 23:02:44.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.184" endtime="20201115 23:02:44.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.182" endtime="20201115 23:02:44.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.221" endtime="20201115 23:02:44.506"></status>
</kw>
<msg timestamp="20201115 23:02:44.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.219" endtime="20201115 23:02:44.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:44.510" endtime="20201115 23:02:44.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.518" endtime="20201115 23:02:44.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.217" endtime="20201115 23:02:44.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.215" endtime="20201115 23:02:44.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.525" level="INFO">${RESULT} = [{'time': 0.021963972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.923599999999948e-05, 'source_diff': 8.923599999999948e-05}, {'time': 0.022063986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:44.522" endtime="20201115 23:02:44.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.539" level="INFO">${ACCURACY} = {'source_diff': [8.923599999999948e-05, 8.909699999999979e-05, 8.884699999999954e-05, 8.895899999999957e-05, 8.868100000000018e-05, 8.852800000000091e-05, 8.93060000000008e-05, 8.888900000000172e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:44.526" endtime="20201115 23:02:44.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.543" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:44.542" endtime="20201115 23:02:44.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.546" level="INFO">VALUE: [8.923599999999948e-05, 8.909699999999979e-05, 8.884699999999954e-05, 8.895899999999957e-05, 8.868100000000018e-05, 8.852800000000091e-05, 8.93060000000008e-05, 8.888900000000172e-05, 8.937499999999918e-05, 8.866599999999766e-05, 8.865300000000104e-05, 8.876399999999812e-05, 8.930500000000133e-05, 8.868100000000018e-05, 8.94450000000005e-05, 8.937499999999918e-05, 8.852800000000091e-05, 8.920799999999687e-05, 8.895900000000304e-05, 8.905500000000108e-05, 8.873599999999898e-05, 8.873600000000245e-05, 8.874999999999855e-05, 8.870799999999984e-05, 8.879199999999726e-05, 8.940300000000179e-05, 8.901400000000184e-05, 8.881999999999987e-05, 8.890300000000129e-05, 8.926399999999862e-05, 8.852700000000144e-05, 8.909699999999979e-05, 8.901400000000184e-05, 8.901399999999837e-05, 8.938900000000222e-05, 8.895800000000009e-05, 8.861099999999886e-05, 8.888899999999825e-05, 8.902800000000141e-05, 8.941700000000136e-05, 8.888899999999825e-05, 8.906900000000065e-05, 8.88190000000004e-05, 8.945800000000059e-05, 8.904100000000151e-05, 8.880500000000083e-05, 8.933300000000047e-05, 8.929199999999776e-05, 8.89999999999988e-05, 8.938899999999875e-05]</msg>
<status status="PASS" starttime="20201115 23:02:44.544" endtime="20201115 23:02:44.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.540" endtime="20201115 23:02:44.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.550" endtime="20201115 23:02:44.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:44.553" endtime="20201115 23:02:44.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.551" endtime="20201115 23:02:44.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.548" endtime="20201115 23:02:44.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.181" endtime="20201115 23:02:44.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.179" endtime="20201115 23:02:44.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.178" endtime="20201115 23:02:44.574"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.577" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.585" endtime="20201115 23:02:44.604"></status>
</kw>
<msg timestamp="20201115 23:02:44.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.583" endtime="20201115 23:02:44.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.605" endtime="20201115 23:02:44.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.608" endtime="20201115 23:02:44.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.581" endtime="20201115 23:02:44.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.578" endtime="20201115 23:02:44.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.617" endtime="20201115 23:02:44.903"></status>
</kw>
<msg timestamp="20201115 23:02:44.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02231775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:44.615" endtime="20201115 23:02:44.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02231775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:44.907" endtime="20201115 23:02:44.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.915" endtime="20201115 23:02:44.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.613" endtime="20201115 23:02:44.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.611" endtime="20201115 23:02:44.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:44.922" level="INFO">${RESULT} = [{'time': 0.02231775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.961099999999986e-05, 'source_diff': 8.961099999999986e-05}, {'time': 0.022418792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:44.919" endtime="20201115 23:02:44.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:44.936" level="INFO">${ACCURACY} = {'source_diff': [8.961099999999986e-05, 9.040299999999932e-05, 9.015299999999907e-05, 9.025000000000005e-05, 9.034799999999704e-05, 8.96670000000016e-05, 8.96800000000017e-05, 9.01519999999996e-05, 9....</msg>
<status status="PASS" starttime="20201115 23:02:44.923" endtime="20201115 23:02:44.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.941" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:44.940" endtime="20201115 23:02:44.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.943" level="INFO">VALUE: [8.961099999999986e-05, 9.040299999999932e-05, 9.015299999999907e-05, 9.025000000000005e-05, 9.034799999999704e-05, 8.96670000000016e-05, 8.96800000000017e-05, 9.01519999999996e-05, 9.008300000000122e-05, 8.961099999999986e-05, 8.995799999999762e-05, 8.959700000000029e-05, 9.0332999999998e-05, 9.012499999999993e-05, 9.002799999999894e-05, 9.005500000000208e-05, 8.977800000000216e-05, 9.025000000000005e-05, 8.94999999999993e-05, 9.01519999999996e-05, 9.009700000000079e-05, 9.005599999999808e-05, 8.995799999999762e-05, 8.979199999999826e-05, 8.9638999999999e-05, 9.040199999999984e-05, 9.030599999999833e-05, 8.988899999999925e-05, 9.012499999999993e-05, 9.013800000000002e-05, 9.017999999999873e-05, 8.977800000000216e-05, 9.044400000000202e-05, 9.001399999999937e-05, 8.991699999999839e-05, 9.022200000000091e-05, 9.025000000000005e-05, 8.972299999999989e-05, 9.040199999999984e-05, 9.037500000000018e-05, 8.970799999999737e-05, 8.995800000000109e-05, 9.012499999999993e-05, 8.956900000000115e-05, 8.995800000000109e-05, 9.025000000000005e-05, 8.972199999999694e-05, 9.04450000000015e-05, 8.969500000000075e-05, 9.005600000000155e-05]</msg>
<status status="PASS" starttime="20201115 23:02:44.942" endtime="20201115 23:02:44.944"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.937" endtime="20201115 23:02:44.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.946" endtime="20201115 23:02:44.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:44.950" endtime="20201115 23:02:44.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.948" endtime="20201115 23:02:44.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.945" endtime="20201115 23:02:44.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.577" endtime="20201115 23:02:44.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.575" endtime="20201115 23:02:44.971"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.574" endtime="20201115 23:02:44.971"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:44.974" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:44.982" endtime="20201115 23:02:45.001"></status>
</kw>
<msg timestamp="20201115 23:02:45.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:44.981" endtime="20201115 23:02:45.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.002" endtime="20201115 23:02:45.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.005" endtime="20201115 23:02:45.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.978" endtime="20201115 23:02:45.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.976" endtime="20201115 23:02:45.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.014" endtime="20201115 23:02:45.300"></status>
</kw>
<msg timestamp="20201115 23:02:45.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.013" endtime="20201115 23:02:45.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.304" endtime="20201115 23:02:45.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.317" endtime="20201115 23:02:45.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.010" endtime="20201115 23:02:45.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.008" endtime="20201115 23:02:45.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:45.323" level="INFO">${RESULT} = [{'time': 0.022640694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.112500000000093e-05, 'source_diff': 9.112500000000093e-05}, {'time': 0.022740694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:45.320" endtime="20201115 23:02:45.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:45.337" level="INFO">${ACCURACY} = {'source_diff': [9.112500000000093e-05, 9.05000000000003e-05, 9.066599999999966e-05, 9.138900000000075e-05, 9.136099999999814e-05, 9.066699999999914e-05, 9.13190000000029e-05, 9.101400000000037e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:02:45.324" endtime="20201115 23:02:45.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.342" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:45.341" endtime="20201115 23:02:45.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.344" level="INFO">VALUE: [9.112500000000093e-05, 9.05000000000003e-05, 9.066599999999966e-05, 9.138900000000075e-05, 9.136099999999814e-05, 9.066699999999914e-05, 9.13190000000029e-05, 9.101400000000037e-05, 9.118099999999921e-05, 9.123700000000096e-05, 9.108399999999822e-05, 9.144499999999903e-05, 9.142999999999998e-05, 9.067999999999923e-05, 9.055499999999911e-05, 9.051399999999987e-05, 9.058299999999825e-05, 9.104199999999951e-05, 9.134699999999857e-05, 9.08199999999984e-05, 9.140300000000032e-05, 9.055599999999858e-05, 9.087500000000068e-05, 9.143099999999946e-05, 9.087499999999721e-05, 9.104199999999951e-05, 9.061100000000086e-05, 9.108299999999875e-05, 9.070800000000184e-05, 9.052800000000291e-05, 9.111199999999736e-05, 9.133400000000194e-05, 9.095900000000157e-05, 9.136199999999761e-05, 9.058299999999825e-05, 9.11939999999993e-05, 9.145799999999912e-05, 9.095799999999862e-05, 9.102799999999994e-05, 9.093099999999896e-05, 9.129199999999976e-05, 9.101400000000037e-05, 9.05000000000003e-05, 9.052799999999944e-05, 9.137499999999771e-05, 9.108299999999875e-05, 9.137500000000118e-05, 9.134699999999857e-05, 9.138900000000075e-05, 9.116699999999964e-05]</msg>
<status status="PASS" starttime="20201115 23:02:45.343" endtime="20201115 23:02:45.344"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.338" endtime="20201115 23:02:45.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.347" endtime="20201115 23:02:45.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:45.351" endtime="20201115 23:02:45.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.349" endtime="20201115 23:02:45.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.346" endtime="20201115 23:02:45.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.975" endtime="20201115 23:02:45.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.973" endtime="20201115 23:02:45.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:44.972" endtime="20201115 23:02:45.372"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.374" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.382" endtime="20201115 23:02:45.403"></status>
</kw>
<msg timestamp="20201115 23:02:45.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.381" endtime="20201115 23:02:45.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.405" endtime="20201115 23:02:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.407" endtime="20201115 23:02:45.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.378" endtime="20201115 23:02:45.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.376" endtime="20201115 23:02:45.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.417" endtime="20201115 23:02:45.701"></status>
</kw>
<msg timestamp="20201115 23:02:45.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.415" endtime="20201115 23:02:45.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.705" endtime="20201115 23:02:45.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.713" endtime="20201115 23:02:45.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.412" endtime="20201115 23:02:45.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.411" endtime="20201115 23:02:45.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:45.720" level="INFO">${RESULT} = [{'time': 0.022770806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.161200000000133e-05, 'source_diff': 9.161200000000133e-05}, {'time': 0.022870806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:45.717" endtime="20201115 23:02:45.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:45.735" level="INFO">${ACCURACY} = {'source_diff': [9.161200000000133e-05, 9.220899999999935e-05, 9.173599999999851e-05, 9.186099999999864e-05, 9.198599999999876e-05, 9.208299999999975e-05, 9.217999999999726e-05, 9.230599999999686e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:45.721" endtime="20201115 23:02:45.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.739" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:45.738" endtime="20201115 23:02:45.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.742" level="INFO">VALUE: [9.161200000000133e-05, 9.220899999999935e-05, 9.173599999999851e-05, 9.186099999999864e-05, 9.198599999999876e-05, 9.208299999999975e-05, 9.217999999999726e-05, 9.230599999999686e-05, 9.1639000000001e-05, 9.218100000000021e-05, 9.15000000000013e-05, 9.223599999999901e-05, 9.180500000000036e-05, 9.188900000000125e-05, 9.245800000000012e-05, 9.167999999999676e-05, 9.184699999999907e-05, 9.206900000000018e-05, 9.205600000000008e-05, 9.187499999999821e-05, 9.152800000000044e-05, 9.202799999999747e-05, 9.193099999999996e-05, 9.20000000000018e-05, 9.201299999999843e-05, 9.156999999999915e-05, 9.225000000000205e-05, 9.240300000000132e-05, 9.177800000000069e-05, 9.224999999999858e-05, 9.190300000000082e-05, 9.243100000000046e-05, 9.216699999999717e-05, 9.225000000000205e-05, 9.194499999999953e-05, 9.159699999999882e-05, 9.180500000000036e-05, 9.151400000000087e-05, 9.202799999999747e-05, 9.168099999999971e-05, 9.169499999999928e-05, 9.165300000000057e-05, 9.218100000000021e-05, 9.179200000000026e-05, 9.197200000000266e-05, 9.18199999999994e-05, 9.15000000000013e-05, 9.192999999999701e-05, 9.155500000000011e-05, 9.170799999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:02:45.741" endtime="20201115 23:02:45.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.736" endtime="20201115 23:02:45.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.745" endtime="20201115 23:02:45.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:45.749" endtime="20201115 23:02:45.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.747" endtime="20201115 23:02:45.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.743" endtime="20201115 23:02:45.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.375" endtime="20201115 23:02:45.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.373" endtime="20201115 23:02:45.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.372" endtime="20201115 23:02:45.770"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.780" endtime="20201115 23:02:45.799"></status>
</kw>
<msg timestamp="20201115 23:02:45.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.779" endtime="20201115 23:02:45.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:45.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:45.801" endtime="20201115 23:02:45.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.804" endtime="20201115 23:02:45.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.776" endtime="20201115 23:02:45.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.774" endtime="20201115 23:02:45.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:45.813" endtime="20201115 23:02:46.100"></status>
</kw>
<msg timestamp="20201115 23:02:46.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:45.812" endtime="20201115 23:02:46.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.104" endtime="20201115 23:02:46.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.112" endtime="20201115 23:02:46.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.809" endtime="20201115 23:02:46.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.807" endtime="20201115 23:02:46.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.119" level="INFO">${RESULT} = [{'time': 0.022171056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.276400000000212e-05, 'source_diff': 9.276400000000212e-05}, {'time': 0.022271056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:46.116" endtime="20201115 23:02:46.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.133" level="INFO">${ACCURACY} = {'source_diff': [9.276400000000212e-05, 9.283399999999997e-05, 9.280500000000136e-05, 9.28879999999993e-05, 9.298599999999976e-05, 9.252799999999797e-05, 9.281900000000093e-05, 9.338899999999928e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:46.120" endtime="20201115 23:02:46.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.137" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.136" endtime="20201115 23:02:46.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.140" level="INFO">VALUE: [9.276400000000212e-05, 9.283399999999997e-05, 9.280500000000136e-05, 9.28879999999993e-05, 9.298599999999976e-05, 9.252799999999797e-05, 9.281900000000093e-05, 9.338899999999928e-05, 9.290299999999835e-05, 9.281999999999693e-05, 9.272199999999994e-05, 9.302800000000194e-05, 9.34590000000006e-05, 9.255500000000111e-05, 9.295800000000062e-05, 9.342999999999851e-05, 9.268100000000071e-05, 9.294399999999758e-05, 9.340299999999885e-05, 9.272199999999994e-05, 9.329199999999829e-05, 9.256900000000068e-05, 9.26659999999982e-05, 9.3333000000001e-05, 9.331900000000143e-05, 9.337499999999971e-05, 9.279100000000179e-05, 9.348600000000026e-05, 9.343000000000198e-05, 9.24719999999997e-05, 9.259699999999982e-05, 9.324999999999958e-05, 9.311099999999989e-05, 9.330600000000133e-05, 9.316699999999817e-05, 9.330499999999839e-05, 9.345799999999765e-05, 9.28330000000005e-05, 9.280600000000083e-05, 9.26529999999981e-05, 9.301400000000237e-05, 9.286099999999964e-05, 9.287499999999921e-05, 9.28200000000004e-05, 9.287499999999921e-05, 9.329099999999882e-05, 9.26940000000008e-05, 9.245800000000012e-05, 9.309699999999685e-05, 9.263899999999853e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.138" endtime="20201115 23:02:46.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.133" endtime="20201115 23:02:46.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.143" endtime="20201115 23:02:46.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.146" endtime="20201115 23:02:46.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.145" endtime="20201115 23:02:46.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.141" endtime="20201115 23:02:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.773" endtime="20201115 23:02:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.771" endtime="20201115 23:02:46.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:45.770" endtime="20201115 23:02:46.167"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.170" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.178" endtime="20201115 23:02:46.198"></status>
</kw>
<msg timestamp="20201115 23:02:46.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.177" endtime="20201115 23:02:46.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.200" endtime="20201115 23:02:46.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.202" endtime="20201115 23:02:46.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.174" endtime="20201115 23:02:46.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.172" endtime="20201115 23:02:46.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.211" endtime="20201115 23:02:46.497"></status>
</kw>
<msg timestamp="20201115 23:02:46.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.210" endtime="20201115 23:02:46.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022379181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.501" endtime="20201115 23:02:46.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.509" endtime="20201115 23:02:46.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.207" endtime="20201115 23:02:46.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.206" endtime="20201115 23:02:46.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.516" level="INFO">${RESULT} = [{'time': 0.022473597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.441599999999994e-05, 'source_diff': 9.441599999999994e-05}, {'time': 0.022575597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:46.513" endtime="20201115 23:02:46.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.530" level="INFO">${ACCURACY} = {'source_diff': [9.441599999999994e-05, 9.359700000000082e-05, 9.395799999999815e-05, 9.394399999999858e-05, 9.408299999999828e-05, 9.375000000000008e-05, 9.405599999999861e-05, 9.388899999999978e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:46.517" endtime="20201115 23:02:46.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.534" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.533" endtime="20201115 23:02:46.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.537" level="INFO">VALUE: [9.441599999999994e-05, 9.359700000000082e-05, 9.395799999999815e-05, 9.394399999999858e-05, 9.408299999999828e-05, 9.375000000000008e-05, 9.405599999999861e-05, 9.388899999999978e-05, 9.373600000000051e-05, 9.402800000000294e-05, 9.417999999999926e-05, 9.36659999999992e-05, 9.388899999999978e-05, 9.394400000000205e-05, 9.41529999999996e-05, 9.361100000000039e-05, 9.358300000000125e-05, 9.379199999999879e-05, 9.388899999999978e-05, 9.424999999999711e-05, 9.372200000000094e-05, 9.365199999999962e-05, 9.361099999999692e-05, 9.351400000000287e-05, 9.359700000000082e-05, 9.441699999999942e-05, 9.35139999999994e-05, 9.445800000000212e-05, 9.375000000000008e-05, 9.377800000000269e-05, 9.417999999999926e-05, 9.375000000000008e-05, 9.437499999999724e-05, 9.408300000000175e-05, 9.418000000000273e-05, 9.429199999999929e-05, 9.373600000000051e-05, 9.368100000000171e-05, 9.394499999999806e-05, 9.388899999999978e-05, 9.352799999999897e-05, 9.387499999999674e-05, 9.386099999999717e-05, 9.361100000000039e-05, 9.393100000000196e-05, 9.404199999999904e-05, 9.440299999999985e-05, 9.37079999999979e-05, 9.379199999999879e-05, 9.412500000000046e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.535" endtime="20201115 23:02:46.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.530" endtime="20201115 23:02:46.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.540" endtime="20201115 23:02:46.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.543" endtime="20201115 23:02:46.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.542" endtime="20201115 23:02:46.563"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.538" endtime="20201115 23:02:46.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.170" endtime="20201115 23:02:46.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.169" endtime="20201115 23:02:46.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.168" endtime="20201115 23:02:46.565"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.567" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.575" endtime="20201115 23:02:46.595"></status>
</kw>
<msg timestamp="20201115 23:02:46.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.574" endtime="20201115 23:02:46.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.596" endtime="20201115 23:02:46.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.599" endtime="20201115 23:02:46.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.571" endtime="20201115 23:02:46.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.569" endtime="20201115 23:02:46.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.608" endtime="20201115 23:02:46.893"></status>
</kw>
<msg timestamp="20201115 23:02:46.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.606" endtime="20201115 23:02:46.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:46.898" endtime="20201115 23:02:46.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.906" endtime="20201115 23:02:46.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.604" endtime="20201115 23:02:46.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.602" endtime="20201115 23:02:46.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:46.913" level="INFO">${RESULT} = [{'time': 0.022801556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.473700000000099e-05, 'source_diff': 9.473700000000099e-05}, {'time': 0.022905556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:46.909" endtime="20201115 23:02:46.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:46.926" level="INFO">${ACCURACY} = {'source_diff': [9.473700000000099e-05, 9.502800000000047e-05, 9.454100000000007e-05, 9.487500000000121e-05, 9.493000000000001e-05, 9.480499999999989e-05, 9.461100000000139e-05, 9.452799999999997e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:46.914" endtime="20201115 23:02:46.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.931" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:46.930" endtime="20201115 23:02:46.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.933" level="INFO">VALUE: [9.473700000000099e-05, 9.502800000000047e-05, 9.454100000000007e-05, 9.487500000000121e-05, 9.493000000000001e-05, 9.480499999999989e-05, 9.461100000000139e-05, 9.452799999999997e-05, 9.461099999999792e-05, 9.52079999999994e-05, 9.477800000000022e-05, 9.524999999999811e-05, 9.544500000000303e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.544400000000008e-05, 9.522199999999897e-05, 9.461100000000139e-05, 9.450000000000083e-05, 9.466699999999967e-05, 9.477800000000022e-05, 9.494500000000253e-05, 9.491600000000044e-05, 9.477700000000075e-05, 9.530500000000039e-05, 9.509699999999885e-05, 9.477800000000022e-05, 9.50140000000009e-05, 9.461100000000139e-05, 9.497199999999872e-05, 9.493099999999949e-05, 9.51530000000006e-05, 9.462500000000096e-05, 9.541599999999748e-05, 9.53880000000018e-05, 9.544400000000008e-05, 9.487499999999774e-05, 9.518000000000026e-05, 9.467999999999976e-05, 9.493099999999949e-05, 9.527800000000072e-05, 9.502800000000047e-05, 9.494500000000253e-05, 9.529200000000029e-05, 9.473700000000099e-05, 9.52079999999994e-05, 9.45270000000005e-05, 9.480499999999989e-05, 9.52079999999994e-05, 9.457000000000215e-05]</msg>
<status status="PASS" starttime="20201115 23:02:46.932" endtime="20201115 23:02:46.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.927" endtime="20201115 23:02:46.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.937" endtime="20201115 23:02:46.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:46.940" endtime="20201115 23:02:46.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.939" endtime="20201115 23:02:46.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.935" endtime="20201115 23:02:46.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.568" endtime="20201115 23:02:46.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.566" endtime="20201115 23:02:46.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.565" endtime="20201115 23:02:46.961"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.964" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.972" endtime="20201115 23:02:46.992"></status>
</kw>
<msg timestamp="20201115 23:02:46.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.971" endtime="20201115 23:02:46.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:46.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:46.993" endtime="20201115 23:02:46.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:46.996" endtime="20201115 23:02:46.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.968" endtime="20201115 23:02:46.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.966" endtime="20201115 23:02:46.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.007" endtime="20201115 23:02:47.293"></status>
</kw>
<msg timestamp="20201115 23:02:47.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.005" endtime="20201115 23:02:47.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.297" endtime="20201115 23:02:47.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.305" endtime="20201115 23:02:47.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.002" endtime="20201115 23:02:47.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.000" endtime="20201115 23:02:47.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:47.312" level="INFO">${RESULT} = [{'time': 0.022978222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.612499999999899e-05, 'source_diff': 9.612499999999899e-05}, {'time': 0.023083222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:47.309" endtime="20201115 23:02:47.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:47.327" level="INFO">${ACCURACY} = {'source_diff': [9.612499999999899e-05, 9.63470000000001e-05, 9.601399999999843e-05, 9.611100000000289e-05, 9.594500000000006e-05, 9.58339999999995e-05, 9.618099999999727e-05, 9.623700000000249e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:02:47.313" endtime="20201115 23:02:47.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.331" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:47.330" endtime="20201115 23:02:47.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.334" level="INFO">VALUE: [9.612499999999899e-05, 9.63470000000001e-05, 9.601399999999843e-05, 9.611100000000289e-05, 9.594500000000006e-05, 9.58339999999995e-05, 9.618099999999727e-05, 9.623700000000249e-05, 9.643100000000099e-05, 9.64019999999989e-05, 9.600000000000233e-05, 9.572199999999947e-05, 9.604199999999757e-05, 9.59859999999993e-05, 9.594500000000006e-05, 9.61530000000016e-05, 9.556999999999968e-05, 9.632000000000043e-05, 9.559700000000282e-05, 9.57079999999999e-05, 9.612500000000246e-05, 9.568000000000076e-05, 9.642999999999805e-05, 9.558299999999978e-05, 9.609699999999985e-05, 9.622199999999997e-05, 9.570899999999938e-05, 9.579099999999785e-05, 9.622299999999945e-05, 9.626399999999868e-05, 9.579100000000132e-05, 9.593000000000101e-05, 9.558299999999978e-05, 9.624999999999911e-05, 9.61530000000016e-05, 9.595800000000015e-05, 9.602800000000147e-05, 9.63059999999974e-05, 9.606900000000071e-05, 9.593100000000049e-05, 9.599999999999886e-05, 9.647200000000022e-05, 9.611099999999942e-05, 9.61669999999977e-05, 9.63059999999974e-05, 9.586100000000264e-05, 9.61669999999977e-05, 9.64019999999989e-05, 9.595899999999963e-05, 9.550000000000183e-05]</msg>
<status status="PASS" starttime="20201115 23:02:47.332" endtime="20201115 23:02:47.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.328" endtime="20201115 23:02:47.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.337" endtime="20201115 23:02:47.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:47.341" endtime="20201115 23:02:47.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.339" endtime="20201115 23:02:47.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.336" endtime="20201115 23:02:47.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.964" endtime="20201115 23:02:47.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.963" endtime="20201115 23:02:47.362"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:46.962" endtime="20201115 23:02:47.362"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.364" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.373" endtime="20201115 23:02:47.392"></status>
</kw>
<msg timestamp="20201115 23:02:47.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.371" endtime="20201115 23:02:47.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.393" endtime="20201115 23:02:47.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.396" endtime="20201115 23:02:47.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.368" endtime="20201115 23:02:47.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.366" endtime="20201115 23:02:47.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.405" endtime="20201115 23:02:47.691"></status>
</kw>
<msg timestamp="20201115 23:02:47.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.403" endtime="20201115 23:02:47.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.695" endtime="20201115 23:02:47.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.704" endtime="20201115 23:02:47.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.401" endtime="20201115 23:02:47.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.399" endtime="20201115 23:02:47.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:47.710" level="INFO">${RESULT} = [{'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.69860000000003e-05, 'source_diff': 9.69860000000003e-05}, {'time': 0.022224542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:47.707" endtime="20201115 23:02:47.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:47.724" level="INFO">${ACCURACY} = {'source_diff': [9.69860000000003e-05, 9.657000000000068e-05, 9.681899999999799e-05, 9.68470000000006e-05, 9.736100000000067e-05, 9.694400000000158e-05, 9.676399999999918e-05, 9.723599999999707e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:02:47.712" endtime="20201115 23:02:47.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.729" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:47.728" endtime="20201115 23:02:47.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.732" level="INFO">VALUE: [9.69860000000003e-05, 9.657000000000068e-05, 9.681899999999799e-05, 9.68470000000006e-05, 9.736100000000067e-05, 9.694400000000158e-05, 9.676399999999918e-05, 9.723599999999707e-05, 9.733399999999753e-05, 9.680600000000136e-05, 9.711100000000042e-05, 9.730600000000186e-05, 9.65279999999985e-05, 9.661099999999992e-05, 9.699999999999986e-05, 9.674999999999961e-05, 9.695799999999768e-05, 9.65140000000024e-05, 9.691700000000192e-05, 9.740299999999938e-05, 9.687499999999974e-05, 9.67920000000018e-05, 9.712499999999999e-05, 9.649999999999936e-05, 9.723600000000054e-05, 9.680600000000136e-05, 9.669400000000133e-05, 9.66530000000021e-05, 9.72080000000014e-05, 9.737500000000024e-05, 9.745900000000113e-05, 9.688899999999931e-05, 9.702800000000247e-05, 9.674999999999961e-05, 9.69860000000003e-05, 9.715199999999966e-05, 9.716599999999923e-05, 9.680500000000189e-05, 9.67920000000018e-05, 9.708300000000128e-05, 9.690299999999888e-05, 9.715299999999913e-05, 9.64729999999997e-05, 9.7027999999999e-05, 9.722300000000045e-05, 9.709699999999738e-05, 9.690300000000235e-05, 9.672200000000047e-05, 9.656900000000121e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201115 23:02:47.730" endtime="20201115 23:02:47.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.725" endtime="20201115 23:02:47.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.735" endtime="20201115 23:02:47.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:47.738" endtime="20201115 23:02:47.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.737" endtime="20201115 23:02:47.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.733" endtime="20201115 23:02:47.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.365" endtime="20201115 23:02:47.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.363" endtime="20201115 23:02:47.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.362" endtime="20201115 23:02:47.759"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.770" endtime="20201115 23:02:47.789"></status>
</kw>
<msg timestamp="20201115 23:02:47.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.768" endtime="20201115 23:02:47.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:47.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:47.790" endtime="20201115 23:02:47.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.793" endtime="20201115 23:02:47.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.766" endtime="20201115 23:02:47.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.764" endtime="20201115 23:02:47.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:47.802" endtime="20201115 23:02:48.088"></status>
</kw>
<msg timestamp="20201115 23:02:48.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:47.801" endtime="20201115 23:02:48.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022039069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.092" endtime="20201115 23:02:48.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.101" endtime="20201115 23:02:48.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.798" endtime="20201115 23:02:48.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.796" endtime="20201115 23:02:48.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.108" level="INFO">${RESULT} = [{'time': 0.022039069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.813800000000109e-05, 'source_diff': 9.813800000000109e-05}, {'time': 0.022148083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:48.105" endtime="20201115 23:02:48.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.122" level="INFO">${ACCURACY} = {'source_diff': [9.813800000000109e-05, 9.831899999999949e-05, 9.815199999999719e-05, 9.761100000000092e-05, 9.756899999999874e-05, 9.772299999999748e-05, 9.775000000000061e-05, 9.768100000000224e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:48.109" endtime="20201115 23:02:48.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.126" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.125" endtime="20201115 23:02:48.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.129" level="INFO">VALUE: [9.813800000000109e-05, 9.831899999999949e-05, 9.815199999999719e-05, 9.761100000000092e-05, 9.756899999999874e-05, 9.772299999999748e-05, 9.775000000000061e-05, 9.768100000000224e-05, 9.850000000000136e-05, 9.756899999999874e-05, 9.76530000000031e-05, 9.84860000000018e-05, 9.76799999999993e-05, 9.829100000000035e-05, 9.822200000000197e-05, 9.81669999999997e-05, 9.787499999999727e-05, 9.754199999999907e-05, 9.768099999999877e-05, 9.815300000000013e-05, 9.81669999999997e-05, 9.797200000000172e-05, 9.82080000000024e-05, 9.787499999999727e-05, 9.8028e-05, 9.795799999999869e-05, 9.76669999999992e-05, 9.845899999999866e-05, 9.754200000000254e-05, 9.83059999999994e-05, 9.775000000000061e-05, 9.830499999999992e-05, 9.833300000000253e-05, 9.831899999999949e-05, 9.843000000000005e-05, 9.823600000000154e-05, 9.819500000000231e-05, 9.844499999999909e-05, 9.84730000000017e-05, 9.831999999999896e-05, 9.801399999999696e-05, 9.766599999999973e-05, 9.775000000000061e-05, 9.766599999999973e-05, 9.844399999999962e-05, 9.782000000000193e-05, 9.75279999999995e-05, 9.809699999999838e-05, 9.783399999999803e-05, 9.780600000000236e-05]</msg>
<status status="PASS" starttime="20201115 23:02:48.127" endtime="20201115 23:02:48.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.123" endtime="20201115 23:02:48.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.132" endtime="20201115 23:02:48.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.135" endtime="20201115 23:02:48.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.134" endtime="20201115 23:02:48.155"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.130" endtime="20201115 23:02:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.762" endtime="20201115 23:02:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.761" endtime="20201115 23:02:48.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:47.760" endtime="20201115 23:02:48.157"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.159" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.167" endtime="20201115 23:02:48.186"></status>
</kw>
<msg timestamp="20201115 23:02:48.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.166" endtime="20201115 23:02:48.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.188" endtime="20201115 23:02:48.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.190" endtime="20201115 23:02:48.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.163" endtime="20201115 23:02:48.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.161" endtime="20201115 23:02:48.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.200" endtime="20201115 23:02:48.485"></status>
</kw>
<msg timestamp="20201115 23:02:48.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.198" endtime="20201115 23:02:48.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.490" endtime="20201115 23:02:48.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.498" endtime="20201115 23:02:48.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.195" endtime="20201115 23:02:48.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.193" endtime="20201115 23:02:48.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.505" level="INFO">${RESULT} = [{'time': 0.021969944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.89860000000023e-05, 'source_diff': 9.89860000000023e-05}, {'time': 0.022077986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:48.501" endtime="20201115 23:02:48.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.518" level="INFO">${ACCURACY} = {'source_diff': [9.89860000000023e-05, 9.940300000000138e-05, 9.875000000000161e-05, 9.909699999999938e-05, 9.937500000000224e-05, 9.897199999999926e-05, 9.911099999999895e-05, 9.879200000000032e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:48.506" endtime="20201115 23:02:48.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.523" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.522" endtime="20201115 23:02:48.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.525" level="INFO">VALUE: [9.89860000000023e-05, 9.940300000000138e-05, 9.875000000000161e-05, 9.909699999999938e-05, 9.937500000000224e-05, 9.897199999999926e-05, 9.911099999999895e-05, 9.879200000000032e-05, 9.944500000000009e-05, 9.858399999999878e-05, 9.88609999999987e-05, 9.931900000000049e-05, 9.917999999999733e-05, 9.8721999999999e-05, 9.934699999999963e-05, 9.875000000000161e-05, 9.941700000000095e-05, 9.879200000000032e-05, 9.945899999999966e-05, 9.947199999999976e-05, 9.870799999999944e-05, 9.909699999999938e-05, 9.84999999999979e-05, 9.909699999999938e-05, 9.91800000000008e-05, 9.8721999999999e-05, 9.895799999999969e-05, 9.888899999999784e-05, 9.859799999999835e-05, 9.912499999999852e-05, 9.868099999999977e-05, 9.866600000000073e-05, 9.86800000000003e-05, 9.875000000000161e-05, 9.923599999999907e-05, 9.851400000000093e-05, 9.890299999999741e-05, 9.915300000000113e-05, 9.881999999999946e-05, 9.858400000000225e-05, 9.894499999999959e-05, 9.901399999999796e-05, 9.869399999999987e-05, 9.880500000000042e-05, 9.93609999999992e-05, 9.912500000000199e-05, 9.909699999999938e-05, 9.877800000000075e-05, 9.854200000000007e-05, 9.93609999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:02:48.524" endtime="20201115 23:02:48.526"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.519" endtime="20201115 23:02:48.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.529" endtime="20201115 23:02:48.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.532" endtime="20201115 23:02:48.551"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.530" endtime="20201115 23:02:48.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.527" endtime="20201115 23:02:48.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.160" endtime="20201115 23:02:48.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.158" endtime="20201115 23:02:48.553"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.157" endtime="20201115 23:02:48.553"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.555" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.564" endtime="20201115 23:02:48.586"></status>
</kw>
<msg timestamp="20201115 23:02:48.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.562" endtime="20201115 23:02:48.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.587" endtime="20201115 23:02:48.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.590" endtime="20201115 23:02:48.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.560" endtime="20201115 23:02:48.592"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.558" endtime="20201115 23:02:48.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.599" endtime="20201115 23:02:48.885"></status>
</kw>
<msg timestamp="20201115 23:02:48.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023815292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023915639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.598" endtime="20201115 23:02:48.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023815292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023915639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.889" endtime="20201115 23:02:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.897" endtime="20201115 23:02:48.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.595" endtime="20201115 23:02:48.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.593" endtime="20201115 23:02:48.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:48.904" level="INFO">${RESULT} = [{'time': 0.023915639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010034700000000063, 'source_diff': 0.00010034700000000063}, {'time': 0.024025667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:48.901" endtime="20201115 23:02:48.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:48.919" level="INFO">${ACCURACY} = {'source_diff': [0.00010034700000000063, 0.000100028000000002, 0.00010026399999999921, 0.00010026399999999921, 0.00010008400000000028, 9.956900000000074e-05, 0.00010031899999999802, 0.0001003750000000...</msg>
<status status="PASS" starttime="20201115 23:02:48.905" endtime="20201115 23:02:48.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.924" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:48.923" endtime="20201115 23:02:48.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.926" level="INFO">VALUE: [0.00010034700000000063, 0.000100028000000002, 0.00010026399999999921, 0.00010026399999999921, 0.00010008400000000028, 9.956900000000074e-05, 0.00010031899999999802, 0.00010037500000000324, 9.991700000000145e-05, 9.956900000000074e-05, 0.0001001670000000017, 9.987499999999927e-05, 9.952799999999803e-05, 9.965299999999816e-05, 9.970800000000044e-05, 9.962499999999902e-05, 0.00010027800000000225, 0.00010043100000000152, 9.95280000000015e-05, 0.000100028000000002, 9.988899999999884e-05, 0.0001002220000000005, 0.00010013900000000256, 0.00010030499999999845, 9.952799999999803e-05, 9.969400000000087e-05, 9.96800000000013e-05, 9.987499999999927e-05, 9.951399999999846e-05, 0.00010001399999999896, 0.00010019500000000084, 9.99860000000033e-05, 0.00010016699999999823, 9.952799999999803e-05, 0.00010015300000000213, 0.0001000410000000021, 9.994400000000112e-05, 0.00010015299999999866, 0.00010045799999999772, 0.00010004200000000157, 0.00010020800000000094, 0.0001001670000000017, 0.00010033400000000053, 0.00010015299999999866, 0.00010024999999999964, 9.980500000000142e-05, 9.970800000000044e-05, 9.977800000000175e-05, 0.00010002799999999853, 0.00010001399999999896]</msg>
<status status="PASS" starttime="20201115 23:02:48.925" endtime="20201115 23:02:48.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.920" endtime="20201115 23:02:48.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.929" endtime="20201115 23:02:48.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:48.933" endtime="20201115 23:02:48.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.931" endtime="20201115 23:02:48.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.928" endtime="20201115 23:02:48.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.556" endtime="20201115 23:02:48.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.554" endtime="20201115 23:02:48.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.553" endtime="20201115 23:02:48.954"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.965" endtime="20201115 23:02:48.984"></status>
</kw>
<msg timestamp="20201115 23:02:48.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.963" endtime="20201115 23:02:48.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:48.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:48.985" endtime="20201115 23:02:48.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.988" endtime="20201115 23:02:48.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.960" endtime="20201115 23:02:48.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.958" endtime="20201115 23:02:48.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:48.997" endtime="20201115 23:02:49.283"></status>
</kw>
<msg timestamp="20201115 23:02:49.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:48.996" endtime="20201115 23:02:49.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.287" endtime="20201115 23:02:49.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.296" endtime="20201115 23:02:49.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.993" endtime="20201115 23:02:49.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.991" endtime="20201115 23:02:49.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:49.302" level="INFO">${RESULT} = [{'time': 0.022614292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010061100000000045, 'source_diff': 0.00010061100000000045}, {'time': 0.022722306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:49.299" endtime="20201115 23:02:49.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:49.315" level="INFO">${ACCURACY} = {'source_diff': [0.00010061100000000045, 0.00010125000000000065, 0.00010087500000000027, 0.00010108299999999834, 0.00010127799999999978, 0.00010126400000000021, 0.00010111100000000095, 0.0001011390000...</msg>
<status status="PASS" starttime="20201115 23:02:49.303" endtime="20201115 23:02:49.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.320" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:49.319" endtime="20201115 23:02:49.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.323" level="INFO">VALUE: [0.00010061100000000045, 0.00010125000000000065, 0.00010087500000000027, 0.00010108299999999834, 0.00010127799999999978, 0.00010126400000000021, 0.00010111100000000095, 0.00010113900000000009, 0.00010134699999999816, 0.00010073600000000058, 0.00010138900000000034, 0.00010057000000000121, 0.00010087500000000027, 0.00010091699999999898, 0.00010106899999999877, 0.00010109700000000138, 0.00010097200000000126, 0.00010145900000000166, 0.00010108400000000128, 0.00010082000000000146, 0.00010066699999999873, 0.00010137500000000077, 0.00010125000000000065, 0.00010123600000000108, 0.00010090299999999941, 0.00010140299999999991, 0.00010063899999999959, 0.0001013060000000024, 0.00010094499999999812, 0.00010058399999999731, 0.00010111200000000042, 0.0001011809999999988, 0.00010108300000000181, 0.00010080499999999895, 0.00010095800000000169, 0.00010108300000000181, 0.00010147199999999829, 0.0001013199999999985, 0.00010141699999999948, 0.00010137500000000077, 0.00010052799999999903, 0.00010080499999999895, 0.00010080500000000242, 0.00010081900000000199, 0.00010101399999999996, 0.00010101399999999996, 0.00010057000000000121, 0.00010137500000000077, 0.00010083399999999756, 0.00010082000000000146]</msg>
<status status="PASS" starttime="20201115 23:02:49.321" endtime="20201115 23:02:49.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.316" endtime="20201115 23:02:49.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.326" endtime="20201115 23:02:49.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.329" endtime="20201115 23:02:49.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.328" endtime="20201115 23:02:49.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.324" endtime="20201115 23:02:49.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.957" endtime="20201115 23:02:49.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.955" endtime="20201115 23:02:49.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:48.954" endtime="20201115 23:02:49.351"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.353" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.361" endtime="20201115 23:02:49.380"></status>
</kw>
<msg timestamp="20201115 23:02:49.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.360" endtime="20201115 23:02:49.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.382" endtime="20201115 23:02:49.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.384" endtime="20201115 23:02:49.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.357" endtime="20201115 23:02:49.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.355" endtime="20201115 23:02:49.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.394" endtime="20201115 23:02:49.678"></status>
</kw>
<msg timestamp="20201115 23:02:49.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022440236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.392" endtime="20201115 23:02:49.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022440236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.683" endtime="20201115 23:02:49.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.691" endtime="20201115 23:02:49.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.389" endtime="20201115 23:02:49.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.388" endtime="20201115 23:02:49.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:49.697" level="INFO">${RESULT} = [{'time': 0.022440236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010245799999999972, 'source_diff': 0.00010245799999999972}, {'time': 0.02255225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:49.694" endtime="20201115 23:02:49.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:49.711" level="INFO">${ACCURACY} = {'source_diff': [0.00010245799999999972, 0.00010179199999999985, 0.00010222199999999904, 0.00010176400000000071, 0.00010209700000000238, 0.00010206899999999977, 0.00010162500000000102, 0.0001015829999...</msg>
<status status="PASS" starttime="20201115 23:02:49.698" endtime="20201115 23:02:49.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.715" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:49.714" endtime="20201115 23:02:49.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.718" level="INFO">VALUE: [0.00010245799999999972, 0.00010179199999999985, 0.00010222199999999904, 0.00010176400000000071, 0.00010209700000000238, 0.00010206899999999977, 0.00010162500000000102, 0.00010158299999999884, 0.00010190300000000041, 0.0001015419999999996, 0.00010166699999999973, 0.00010238900000000134, 0.00010206999999999924, 0.00010158399999999831, 0.00010236099999999873, 0.00010211199999999795, 0.00010179100000000038, 0.00010158300000000231, 0.00010211099999999848, 0.00010201400000000097, 0.00010209699999999891, 0.00010213900000000109, 0.00010165300000000016, 0.00010183399999999856, 0.00010230500000000045, 0.00010208399999999881, 0.0001022359999999986, 0.0001016800000000033, 0.00010202800000000053, 0.00010159700000000188, 0.00010193099999999955, 0.00010180599999999942, 0.00010166699999999973, 0.0001016809999999993, 0.00010177800000000028, 0.00010181899999999952, 0.00010188800000000137, 0.00010222199999999904, 0.00010216600000000076, 0.00010170800000000244, 0.00010197200000000226, 0.00010209699999999891, 0.00010182000000000246, 0.0001020000000000014, 0.00010209800000000185, 0.00010159699999999841, 0.00010179100000000038, 0.00010243000000000058, 0.00010188899999999737, 0.00010241700000000048]</msg>
<status status="PASS" starttime="20201115 23:02:49.716" endtime="20201115 23:02:49.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.711" endtime="20201115 23:02:49.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.721" endtime="20201115 23:02:49.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:49.725" endtime="20201115 23:02:49.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.723" endtime="20201115 23:02:49.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.719" endtime="20201115 23:02:49.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.354" endtime="20201115 23:02:49.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.352" endtime="20201115 23:02:49.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.351" endtime="20201115 23:02:49.746"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.748" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.757" endtime="20201115 23:02:49.775"></status>
</kw>
<msg timestamp="20201115 23:02:49.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.755" endtime="20201115 23:02:49.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:49.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:49.777" endtime="20201115 23:02:49.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.779" endtime="20201115 23:02:49.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.752" endtime="20201115 23:02:49.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.750" endtime="20201115 23:02:49.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:49.788" endtime="20201115 23:02:50.074"></status>
</kw>
<msg timestamp="20201115 23:02:50.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:49.787" endtime="20201115 23:02:50.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.078" endtime="20201115 23:02:50.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.087" endtime="20201115 23:02:50.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.784" endtime="20201115 23:02:50.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.783" endtime="20201115 23:02:50.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:50.093" level="INFO">${RESULT} = [{'time': 0.022717972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030139999999985, 'source_diff': 0.0001030139999999985}, {'time': 0.022831986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:50.090" endtime="20201115 23:02:50.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:50.107" level="INFO">${ACCURACY} = {'source_diff': [0.0001030139999999985, 0.00010329199999999789, 0.00010322299999999951, 0.00010338899999999887, 0.00010301400000000197, 0.00010290199999999847, 0.00010273699999999858, 0.00010291699999...</msg>
<status status="PASS" starttime="20201115 23:02:50.094" endtime="20201115 23:02:50.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.111" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:50.110" endtime="20201115 23:02:50.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.114" level="INFO">VALUE: [0.0001030139999999985, 0.00010329199999999789, 0.00010322299999999951, 0.00010338899999999887, 0.00010301400000000197, 0.00010290199999999847, 0.00010273699999999858, 0.00010291699999999751, 0.00010322200000000004, 0.00010313899999999862, 0.00010272199999999954, 0.00010277800000000128, 0.00010338900000000234, 0.0001033749999999993, 0.00010277700000000181, 0.00010316599999999829, 0.00010323699999999908, 0.00010337500000000277, 0.00010309699999999991, 0.00010297199999999979, 0.00010322200000000004, 0.00010302799999999807, 0.00010256900000000027, 0.00010329199999999789, 0.00010304199999999764, 0.00010299999999999893, 0.00010313900000000209, 0.00010275000000000215, 0.00010326399999999875, 0.00010295800000000022, 0.00010297199999999979, 0.0001032359999999996, 0.00010343099999999758, 0.00010276399999999825, 0.00010297299999999926, 0.00010262499999999855, 0.0001029870000000023, 0.00010290199999999847, 0.00010255600000000017, 0.00010258299999999984, 0.00010281900000000052, 0.00010347200000000029, 0.00010348599999999986, 0.00010252799999999757, 0.00010307000000000024, 0.00010258400000000278, 0.00010333300000000059, 0.0001026940000000004, 0.00010309699999999991, 0.00010295800000000022]</msg>
<status status="PASS" starttime="20201115 23:02:50.112" endtime="20201115 23:02:50.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.108" endtime="20201115 23:02:50.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.117" endtime="20201115 23:02:50.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.121" endtime="20201115 23:02:50.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.119" endtime="20201115 23:02:50.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.116" endtime="20201115 23:02:50.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.749" endtime="20201115 23:02:50.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.747" endtime="20201115 23:02:50.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:49.746" endtime="20201115 23:02:50.142"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.144" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.153" endtime="20201115 23:02:50.172"></status>
</kw>
<msg timestamp="20201115 23:02:50.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.151" endtime="20201115 23:02:50.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.174" endtime="20201115 23:02:50.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.176" endtime="20201115 23:02:50.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.149" endtime="20201115 23:02:50.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.147" endtime="20201115 23:02:50.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.186" endtime="20201115 23:02:50.471"></status>
</kw>
<msg timestamp="20201115 23:02:50.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.184" endtime="20201115 23:02:50.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.476" endtime="20201115 23:02:50.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.484" endtime="20201115 23:02:50.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.181" endtime="20201115 23:02:50.486"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.180" endtime="20201115 23:02:50.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:50.490" level="INFO">${RESULT} = [{'time': 0.022981306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001036810000000013, 'source_diff': 0.0001036810000000013}, {'time': 0.023095319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:50.487" endtime="20201115 23:02:50.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:50.509" level="INFO">${ACCURACY} = {'source_diff': [0.0001036810000000013, 0.00010372200000000054, 0.00010374999999999968, 0.00010361099999999998, 0.00010436100000000073, 0.00010430599999999846, 0.00010388899999999937, 0.00010379199999...</msg>
<status status="PASS" starttime="20201115 23:02:50.496" endtime="20201115 23:02:50.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.514" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:50.513" endtime="20201115 23:02:50.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.517" level="INFO">VALUE: [0.0001036810000000013, 0.00010372200000000054, 0.00010374999999999968, 0.00010361099999999998, 0.00010436100000000073, 0.00010430599999999846, 0.00010388899999999937, 0.00010379199999999839, 0.00010399999999999993, 0.0001038619999999997, 0.00010415199999999972, 0.00010366599999999879, 0.00010361099999999998, 0.0001038749999999998, 0.0001037360000000001, 0.00010358300000000084, 0.00010438899999999987, 0.00010407000000000124, 0.00010361099999999998, 0.00010415299999999919, 0.00010380500000000195, 0.00010366700000000173, 0.00010356900000000127, 0.00010361099999999998, 0.0001038749999999998, 0.00010374999999999968, 0.00010430600000000192, 0.00010408399999999735, 0.00010427799999999932, 0.00010373699999999958, 0.00010381899999999805, 0.00010415199999999972, 0.00010377799999999882, 0.00010359700000000041, 0.00010440299999999944, 0.0001037360000000001, 0.00010412500000000005, 0.00010416699999999876, 0.00010361099999999998, 0.00010370900000000044, 0.00010398600000000036, 0.0001040139999999995, 0.00010365299999999869, 0.00010372200000000054, 0.00010379199999999839, 0.0001036949999999974, 0.00010394499999999765, 0.00010430599999999846, 0.00010425000000000018, 0.00010349999999999943]</msg>
<status status="PASS" starttime="20201115 23:02:50.515" endtime="20201115 23:02:50.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.510" endtime="20201115 23:02:50.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.520" endtime="20201115 23:02:50.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.523" endtime="20201115 23:02:50.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.521" endtime="20201115 23:02:50.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.518" endtime="20201115 23:02:50.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.145" endtime="20201115 23:02:50.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.143" endtime="20201115 23:02:50.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.142" endtime="20201115 23:02:50.544"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.555" endtime="20201115 23:02:50.573"></status>
</kw>
<msg timestamp="20201115 23:02:50.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.553" endtime="20201115 23:02:50.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:50.575" endtime="20201115 23:02:50.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.578" endtime="20201115 23:02:50.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.551" endtime="20201115 23:02:50.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.549" endtime="20201115 23:02:50.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.587" endtime="20201115 23:02:50.872"></status>
</kw>
<msg timestamp="20201115 23:02:50.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.585" endtime="20201115 23:02:50.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022143611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:50.876" endtime="20201115 23:02:50.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.885" endtime="20201115 23:02:50.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.582" endtime="20201115 23:02:50.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.581" endtime="20201115 23:02:50.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:50.891" level="INFO">${RESULT} = [{'time': 0.022249139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010552800000000057, 'source_diff': 0.00010552800000000057}, {'time': 0.022365111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:50.888" endtime="20201115 23:02:50.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:50.905" level="INFO">${ACCURACY} = {'source_diff': [0.00010552800000000057, 0.0001047360000000011, 0.00010481999999999853, 0.00010516600000000029, 0.00010544499999999915, 0.00010472300000000101, 0.00010498600000000136, 0.00010466599999...</msg>
<status status="PASS" starttime="20201115 23:02:50.892" endtime="20201115 23:02:50.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.909" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:50.908" endtime="20201115 23:02:50.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:50.912" level="INFO">VALUE: [0.00010552800000000057, 0.0001047360000000011, 0.00010481999999999853, 0.00010516600000000029, 0.00010544499999999915, 0.00010472300000000101, 0.00010498600000000136, 0.00010466599999999979, 0.00010502700000000059, 0.0001053889999999974, 0.00010491600000000004, 0.00010517999999999986, 0.0001050140000000005, 0.00010536100000000173, 0.00010513900000000062, 0.00010493100000000255, 0.00010468000000000283, 0.00010505499999999973, 0.00010534700000000216, 0.00010495799999999875, 0.0001051949999999989, 0.00010458299999999837, 0.00010475000000000068, 0.00010516699999999976, 0.0001053889999999974, 0.00010452700000000009, 0.00010545899999999872, 0.00010472199999999807, 0.00010475000000000068, 0.00010540300000000044, 0.00010536100000000173, 0.00010497300000000126, 0.0001050559999999992, 0.00010508399999999835, 0.0001045420000000026, 0.00010536099999999826, 0.00010458300000000184, 0.00010463900000000012, 0.00010495800000000222, 0.00010480499999999948, 0.00010475000000000068, 0.00010473599999999764, 0.00010461100000000098, 0.00010508400000000181, 0.0001051949999999989, 0.00010525000000000118, 0.00010513800000000115, 0.00010513900000000062, 0.00010475000000000068, 0.00010543000000000011]</msg>
<status status="PASS" starttime="20201115 23:02:50.910" endtime="20201115 23:02:50.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.906" endtime="20201115 23:02:50.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:50.915" endtime="20201115 23:02:50.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.918" endtime="20201115 23:02:50.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.917" endtime="20201115 23:02:50.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.913" endtime="20201115 23:02:50.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.547" endtime="20201115 23:02:50.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.546" endtime="20201115 23:02:50.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.545" endtime="20201115 23:02:50.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.274" endtime="20201115 23:02:50.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.948" endtime="20201115 23:02:50.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.946" endtime="20201115 23:02:50.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.945" endtime="20201115 23:02:50.968"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:08.154" endtime="20201115 23:02:50.969" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:50.978" endtime="20201115 23:02:50.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.977" endtime="20201115 23:02:50.998"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:51.012" endtime="20201115 23:02:54.033"></status>
</kw>
<msg timestamp="20201115 23:02:54.035" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:51.011" endtime="20201115 23:02:54.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.037" endtime="20201115 23:02:54.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.047" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:02:54.043" endtime="20201115 23:02:54.048"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:51.008" endtime="20201115 23:02:54.049"></status>
</kw>
<status status="FAIL" starttime="20201115 23:02:51.006" endtime="20201115 23:02:54.050"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.004" endtime="20201115 23:02:54.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:02:54.058" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:02:54.057" endtime="20201115 23:02:54.059"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.053" endtime="20201115 23:02:54.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.003" endtime="20201115 23:02:54.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.002" endtime="20201115 23:02:54.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.062" endtime="20201115 23:02:54.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:51.001" endtime="20201115 23:02:54.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.999" endtime="20201115 23:02:54.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:50.975" endtime="20201115 23:02:54.068"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.076" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.093" endtime="20201115 23:02:54.111"></status>
</kw>
<msg timestamp="20201115 23:02:54.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.090" endtime="20201115 23:02:54.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.114" endtime="20201115 23:02:54.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.120" endtime="20201115 23:02:54.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.084" endtime="20201115 23:02:54.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.080" endtime="20201115 23:02:54.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.137" endtime="20201115 23:02:54.429"></status>
</kw>
<msg timestamp="20201115 23:02:54.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107447056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107452972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.135" endtime="20201115 23:02:54.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107447056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107452972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.433" endtime="20201115 23:02:54.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.442" endtime="20201115 23:02:54.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.130" endtime="20201115 23:02:54.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.127" endtime="20201115 23:02:54.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:54.449" level="INFO">${RESULT} = [{'time': 3.107452972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9160000001057256e-06, 'source_diff': 5.9160000001057256e-06}, {'time': 3.107464153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:54.445" endtime="20201115 23:02:54.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:54.462" level="INFO">${ACCURACY} = {'source_diff': [5.9160000001057256e-06, 6.320000000226145e-06, 5.930000000375912e-06, 5.514000000150787e-06, 5.472000000228405e-06, 6.332999999969502e-06, 5.527999999976885e-06, 5.445000000214861e-06...</msg>
<status status="PASS" starttime="20201115 23:02:54.450" endtime="20201115 23:02:54.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.467" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:02:54.466" endtime="20201115 23:02:54.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.470" level="INFO">VALUE: [5.9160000001057256e-06, 6.320000000226145e-06, 5.930000000375912e-06, 5.514000000150787e-06, 5.472000000228405e-06, 6.332999999969502e-06, 5.527999999976885e-06, 5.445000000214861e-06, 5.50000000032469e-06, 5.4729999998670564e-06, 5.4999999998806e-06, 6.305999999955958e-06, 6.305000000317307e-06, 6.291999999685771e-06, 5.444999999770772e-06, 5.902999999918279e-06, 6.277999999859674e-06, 5.55599999962908e-06, 5.888999999648092e-06, 5.916999999744377e-06, 6.305999999955958e-06, 5.902999999918279e-06, 5.4999999998806e-06, 5.4999999998806e-06, 6.306000000400047e-06, 6.347000000239689e-06, 5.513999999706698e-06, 5.889000000092182e-06, 6.3199999997820555e-06, 5.50000000032469e-06, 6.291999999685771e-06, 5.902000000279628e-06, 5.917000000188466e-06, 5.417000000118577e-06, 5.4999999998806e-06, 5.541999999802982e-06, 6.29100000004712e-06, 6.318999999699315e-06, 5.527999999976885e-06, 6.29200000012986e-06, 5.902999999918279e-06, 5.4579999999582185e-06, 5.889000000092182e-06, 5.4999999998806e-06, 5.471999999784316e-06, 6.305000000317307e-06, 5.4999999998806e-06, 5.4999999998806e-06, 5.902000000279628e-06, 5.486000000054503e-06]</msg>
<status status="PASS" starttime="20201115 23:02:54.468" endtime="20201115 23:02:54.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.463" endtime="20201115 23:02:54.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.473" endtime="20201115 23:02:54.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:54.476" endtime="20201115 23:02:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.475" endtime="20201115 23:02:54.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.471" endtime="20201115 23:02:54.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.077" endtime="20201115 23:02:54.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.073" endtime="20201115 23:02:54.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.071" endtime="20201115 23:02:54.497"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.500" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.508" endtime="20201115 23:02:54.521"></status>
</kw>
<msg timestamp="20201115 23:02:54.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.506" endtime="20201115 23:02:54.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.523" endtime="20201115 23:02:54.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.526" endtime="20201115 23:02:54.527"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.504" endtime="20201115 23:02:54.528"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.502" endtime="20201115 23:02:54.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.536" endtime="20201115 23:02:54.822"></status>
</kw>
<msg timestamp="20201115 23:02:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.533" endtime="20201115 23:02:54.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022064014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.827" endtime="20201115 23:02:54.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.835" endtime="20201115 23:02:54.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.531" endtime="20201115 23:02:54.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.529" endtime="20201115 23:02:54.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:54.842" level="INFO">${RESULT} = [{'time': 0.022064014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000000617e-06, 'source_diff': 7.111000000000617e-06}, {'time': 0.022075667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:54.839" endtime="20201115 23:02:54.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:54.856" level="INFO">${ACCURACY} = {'source_diff': [7.111000000000617e-06, 7.125000000000187e-06, 7.125000000000187e-06, 6.305999999997591e-06, 7.125000000000187e-06, 6.722000000000672e-06, 6.4029999999985765e-06, 6.694999999997536e-06...</msg>
<status status="PASS" starttime="20201115 23:02:54.843" endtime="20201115 23:02:54.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.860" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:02:54.859" endtime="20201115 23:02:54.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.863" level="INFO">VALUE: [7.111000000000617e-06, 7.125000000000187e-06, 7.125000000000187e-06, 6.305999999997591e-06, 7.125000000000187e-06, 6.722000000000672e-06, 6.4029999999985765e-06, 6.694999999997536e-06, 6.693999999998063e-06, 6.708000000001102e-06, 6.276999999998978e-06, 6.7230000000001455e-06, 7.153000000002796e-06, 7.097000000001047e-06, 7.179999999998993e-06, 7.097000000001047e-06, 6.708000000001102e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.7079999999976325e-06, 6.708000000001102e-06, 6.708000000001102e-06, 6.709000000000576e-06, 6.693999999998063e-06, 7.527999999999702e-06, 7.125000000000187e-06, 6.708000000001102e-06, 7.167000000002366e-06, 6.709000000000576e-06, 7.111000000000617e-06, 6.708999999997106e-06, 6.304999999998118e-06, 6.290999999998548e-06, 6.7219999999972024e-06, 7.138999999999757e-06, 6.709000000000576e-06, 6.736000000000242e-06, 7.138999999999757e-06, 7.138999999999757e-06, 6.708000000001102e-06, 7.5269999999967585e-06, 7.111000000000617e-06, 7.111000000000617e-06, 6.694000000001532e-06, 7.111000000000617e-06, 6.722000000000672e-06, 7.1120000000000905e-06, 7.195000000001506e-06, 6.7230000000001455e-06, 6.708999999997106e-06]</msg>
<status status="PASS" starttime="20201115 23:02:54.861" endtime="20201115 23:02:54.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.856" endtime="20201115 23:02:54.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.866" endtime="20201115 23:02:54.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:54.869" endtime="20201115 23:02:54.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.868" endtime="20201115 23:02:54.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.864" endtime="20201115 23:02:54.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.500" endtime="20201115 23:02:54.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.499" endtime="20201115 23:02:54.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.498" endtime="20201115 23:02:54.890"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.901" endtime="20201115 23:02:54.915"></status>
</kw>
<msg timestamp="20201115 23:02:54.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.900" endtime="20201115 23:02:54.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:54.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:54.916" endtime="20201115 23:02:54.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.919" endtime="20201115 23:02:54.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.897" endtime="20201115 23:02:54.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.895" endtime="20201115 23:02:54.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:54.929" endtime="20201115 23:02:55.218"></status>
</kw>
<msg timestamp="20201115 23:02:55.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:54.927" endtime="20201115 23:02:55.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.222" endtime="20201115 23:02:55.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.230" endtime="20201115 23:02:55.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.924" endtime="20201115 23:02:55.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.922" endtime="20201115 23:02:55.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:55.237" level="INFO">${RESULT} = [{'time': 0.022171083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.022182333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:55.233" endtime="20201115 23:02:55.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:55.252" level="INFO">${ACCURACY} = {'source_diff': [7.527000000000228e-06, 7.514000000000132e-06, 7.930999999999216e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 8.332999999999258e-06, 7.527999999999702e-06...</msg>
<status status="PASS" starttime="20201115 23:02:55.238" endtime="20201115 23:02:55.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.256" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:02:55.255" endtime="20201115 23:02:55.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.259" level="INFO">VALUE: [7.527000000000228e-06, 7.514000000000132e-06, 7.930999999999216e-06, 7.513000000000658e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 8.332999999999258e-06, 7.527999999999702e-06, 8.346999999998828e-06, 8.319000000003157e-06, 7.929999999999743e-06, 7.930999999999216e-06, 7.4719999999979525e-06, 7.929999999999743e-06, 8.332999999999258e-06, 7.930999999999216e-06, 7.527999999999702e-06, 7.527000000000228e-06, 8.346999999998828e-06, 7.958999999998356e-06, 8.388999999997537e-06, 7.944000000002782e-06, 7.930999999999216e-06, 7.527999999999702e-06, 8.318999999999688e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.500000000000562e-06, 7.929999999999743e-06, 7.500000000000562e-06, 8.333999999998731e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.472000000001422e-06, 7.930999999999216e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.875000000000937e-06, 7.527999999999702e-06, 8.305999999999591e-06, 7.528000000003171e-06, 7.5419999999992715e-06, 7.945000000002256e-06, 7.514000000000132e-06, 7.472000000001422e-06, 7.929999999999743e-06, 7.5419999999992715e-06, 7.930999999999216e-06, 7.917000000003116e-06, 7.527999999999702e-06]</msg>
<status status="PASS" starttime="20201115 23:02:55.258" endtime="20201115 23:02:55.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.253" endtime="20201115 23:02:55.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.262" endtime="20201115 23:02:55.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:55.265" endtime="20201115 23:02:55.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.264" endtime="20201115 23:02:55.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.260" endtime="20201115 23:02:55.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.893" endtime="20201115 23:02:55.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.892" endtime="20201115 23:02:55.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.891" endtime="20201115 23:02:55.287"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.289" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.297" endtime="20201115 23:02:55.312"></status>
</kw>
<msg timestamp="20201115 23:02:55.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.296" endtime="20201115 23:02:55.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.314" endtime="20201115 23:02:55.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.317" endtime="20201115 23:02:55.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.293" endtime="20201115 23:02:55.319"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.291" endtime="20201115 23:02:55.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.326" endtime="20201115 23:02:55.612"></status>
</kw>
<msg timestamp="20201115 23:02:55.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.324" endtime="20201115 23:02:55.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.616" endtime="20201115 23:02:55.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.625" endtime="20201115 23:02:55.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.322" endtime="20201115 23:02:55.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.320" endtime="20201115 23:02:55.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:55.631" level="INFO">${RESULT} = [{'time': 0.021920194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.263000000001408e-06, 'source_diff': 8.263000000001408e-06}, {'time': 0.021932389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:55.628" endtime="20201115 23:02:55.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:55.645" level="INFO">${ACCURACY} = {'source_diff': [8.263000000001408e-06, 9.153000000001327e-06, 9.124999999998717e-06, 8.735999999998773e-06, 8.764000000001382e-06, 9.124999999998717e-06, 8.736000000002242e-06, 8.749999999998342e-06,...</msg>
<status status="PASS" starttime="20201115 23:02:55.632" endtime="20201115 23:02:55.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.649" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:02:55.648" endtime="20201115 23:02:55.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.652" level="INFO">VALUE: [8.263000000001408e-06, 9.153000000001327e-06, 9.124999999998717e-06, 8.735999999998773e-06, 8.764000000001382e-06, 9.124999999998717e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.735999999998773e-06, 9.124999999998717e-06, 8.750000000001812e-06, 9.097999999999051e-06, 9.138999999998287e-06, 8.332999999999258e-06, 9.152999999997857e-06, 8.721999999999203e-06, 8.749999999998342e-06, 9.194000000000563e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.346999999998828e-06, 8.735999999998773e-06, 9.139000000001757e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.332999999999258e-06, 8.805000000000618e-06, 8.735999999998773e-06, 8.318999999999688e-06, 8.735999999998773e-06, 9.166999999997427e-06, 9.153000000001327e-06, 9.097999999999051e-06, 8.318999999999688e-06, 8.722999999998676e-06, 9.124999999998717e-06, 9.124999999998717e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.3340000000022e-06, 8.735999999998773e-06, 8.319999999999161e-06, 8.749999999998342e-06, 9.125000000002187e-06, 9.138000000002283e-06]</msg>
<status status="PASS" starttime="20201115 23:02:55.650" endtime="20201115 23:02:55.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.646" endtime="20201115 23:02:55.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.655" endtime="20201115 23:02:55.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:55.658" endtime="20201115 23:02:55.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.657" endtime="20201115 23:02:55.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.653" endtime="20201115 23:02:55.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.290" endtime="20201115 23:02:55.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.288" endtime="20201115 23:02:55.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.287" endtime="20201115 23:02:55.680"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.682" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.696" endtime="20201115 23:02:55.710"></status>
</kw>
<msg timestamp="20201115 23:02:55.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.694" endtime="20201115 23:02:55.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:55.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:55.712" endtime="20201115 23:02:55.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.714" endtime="20201115 23:02:55.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.692" endtime="20201115 23:02:55.717"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.690" endtime="20201115 23:02:55.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:55.723" endtime="20201115 23:02:56.012"></status>
</kw>
<msg timestamp="20201115 23:02:56.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028531875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:55.722" endtime="20201115 23:02:56.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028531875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.017" endtime="20201115 23:02:56.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.025" endtime="20201115 23:02:56.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.719" endtime="20201115 23:02:56.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.718" endtime="20201115 23:02:56.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.032" level="INFO">${RESULT} = [{'time': 0.028531875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.028544917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:56.028" endtime="20201115 23:02:56.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.045" level="INFO">${ACCURACY} = {'source_diff': [9.556000000000842e-06, 9.902999999998607e-06, 9.944000000001313e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.959000000000356e-06, 9.541000000001798e-06, 9.541999999997802e-06,...</msg>
<status status="PASS" starttime="20201115 23:02:56.033" endtime="20201115 23:02:56.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.050" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.049" endtime="20201115 23:02:56.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.052" level="INFO">VALUE: [9.556000000000842e-06, 9.902999999998607e-06, 9.944000000001313e-06, 9.540999999998329e-06, 9.556000000000842e-06, 9.959000000000356e-06, 9.541000000001798e-06, 9.541999999997802e-06, 9.902999999998607e-06, 9.958000000000883e-06, 1.0361000000000398e-05, 9.957999999997413e-06, 9.556000000000842e-06, 9.485999999999523e-06, 9.929999999998274e-06, 9.526999999998759e-06, 1.0361000000000398e-05, 9.568999999997468e-06, 9.527999999998232e-06, 9.556000000000842e-06, 9.540999999998329e-06, 9.541000000001798e-06, 9.944000000001313e-06, 1.0374999999999968e-05, 9.943999999997843e-06, 9.958999999996887e-06, 9.555000000001368e-06, 9.944000000001313e-06, 9.485999999999523e-06, 9.514000000002132e-06, 9.541000000001798e-06, 9.972000000000453e-06, 9.541000000001798e-06, 9.958999999996887e-06, 9.597999999999551e-06, 9.930000000001743e-06, 9.556000000000842e-06, 9.958999999996887e-06, 9.958000000000883e-06, 1.0361000000000398e-05, 9.555999999997372e-06, 1.0292000000002022e-05, 9.902999999998607e-06, 9.513999999998662e-06, 9.972000000000453e-06, 9.959000000000356e-06, 9.597000000000078e-06, 9.499999999999093e-06, 9.958000000000883e-06, 1.0361000000000398e-05]</msg>
<status status="PASS" starttime="20201115 23:02:56.051" endtime="20201115 23:02:56.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.046" endtime="20201115 23:02:56.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.055" endtime="20201115 23:02:56.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.059" endtime="20201115 23:02:56.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.058" endtime="20201115 23:02:56.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.054" endtime="20201115 23:02:56.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.688" endtime="20201115 23:02:56.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.681" endtime="20201115 23:02:56.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:55.680" endtime="20201115 23:02:56.080"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.083" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.091" endtime="20201115 23:02:56.106"></status>
</kw>
<msg timestamp="20201115 23:02:56.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.090" endtime="20201115 23:02:56.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.107" endtime="20201115 23:02:56.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.110" endtime="20201115 23:02:56.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.087" endtime="20201115 23:02:56.112"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.085" endtime="20201115 23:02:56.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.119" endtime="20201115 23:02:56.407"></status>
</kw>
<msg timestamp="20201115 23:02:56.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02216375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:56.118" endtime="20201115 23:02:56.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02216375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:56.411" endtime="20201115 23:02:56.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.420" endtime="20201115 23:02:56.421"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.115" endtime="20201115 23:02:56.422"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.113" endtime="20201115 23:02:56.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.426" level="INFO">${RESULT} = [{'time': 0.022174111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.022187986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:56.423" endtime="20201115 23:02:56.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.440" level="INFO">${ACCURACY} = {'source_diff': [1.0361000000000398e-05, 1.0361000000000398e-05, 1.1180999999998997e-05, 1.0306000000001592e-05, 1.0750000000000343e-05, 1.0346999999997358e-05, 1.0374999999999968e-05, 1.1180999999998...</msg>
<status status="PASS" starttime="20201115 23:02:56.427" endtime="20201115 23:02:56.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.444" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.443" endtime="20201115 23:02:56.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.447" level="INFO">VALUE: [1.0361000000000398e-05, 1.0361000000000398e-05, 1.1180999999998997e-05, 1.0306000000001592e-05, 1.0750000000000343e-05, 1.0346999999997358e-05, 1.0374999999999968e-05, 1.1180999999998997e-05, 1.0763999999999913e-05, 1.0361000000000398e-05, 1.1166999999999427e-05, 1.0722000000001203e-05, 1.0417000000002147e-05, 1.0750000000000343e-05, 1.0361000000000398e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.1152999999999857e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0361000000000398e-05, 1.1166999999999427e-05, 1.0361000000000398e-05, 1.0805000000002618e-05, 1.0334000000000731e-05, 1.1181000000002467e-05, 1.0750000000000343e-05, 1.0777999999999482e-05, 1.1166999999999427e-05, 1.1165999999999954e-05, 1.1152999999999857e-05, 1.0750000000000343e-05, 1.1179999999999524e-05, 1.0736000000000773e-05, 1.1152999999999857e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.1166999999999427e-05, 1.0347000000000828e-05, 1.1166999999999427e-05, 1.1165999999999954e-05, 1.1181000000002467e-05, 1.0750000000000343e-05, 1.076299999999697e-05, 1.0348000000000301e-05, 1.0763999999999913e-05, 1.1165999999999954e-05, 1.0763999999999913e-05, 1.0749999999996873e-05]</msg>
<status status="PASS" starttime="20201115 23:02:56.446" endtime="20201115 23:02:56.448"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.441" endtime="20201115 23:02:56.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.451" endtime="20201115 23:02:56.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.454" endtime="20201115 23:02:56.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.452" endtime="20201115 23:02:56.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.449" endtime="20201115 23:02:56.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.083" endtime="20201115 23:02:56.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.082" endtime="20201115 23:02:56.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.081" endtime="20201115 23:02:56.475"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.478" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.486" endtime="20201115 23:02:56.500"></status>
</kw>
<msg timestamp="20201115 23:02:56.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.484" endtime="20201115 23:02:56.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.502" endtime="20201115 23:02:56.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.504" endtime="20201115 23:02:56.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.482" endtime="20201115 23:02:56.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.480" endtime="20201115 23:02:56.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.513" endtime="20201115 23:02:56.800"></status>
</kw>
<msg timestamp="20201115 23:02:56.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.512" endtime="20201115 23:02:56.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.804" endtime="20201115 23:02:56.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.812" endtime="20201115 23:02:56.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.509" endtime="20201115 23:02:56.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.507" endtime="20201115 23:02:56.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:56.819" level="INFO">${RESULT} = [{'time': 0.022086347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.022103347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:56.816" endtime="20201115 23:02:56.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:56.834" level="INFO">${ACCURACY} = {'source_diff': [1.1568999999999469e-05, 1.1957999999999414e-05, 1.2388999999998068e-05, 1.1584000000001982e-05, 1.1554999999999899e-05, 1.1554999999999899e-05, 1.2347000000002828e-05, 1.2374999999998...</msg>
<status status="PASS" starttime="20201115 23:02:56.820" endtime="20201115 23:02:56.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.839" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:02:56.838" endtime="20201115 23:02:56.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.842" level="INFO">VALUE: [1.1568999999999469e-05, 1.1957999999999414e-05, 1.2388999999998068e-05, 1.1584000000001982e-05, 1.1554999999999899e-05, 1.1554999999999899e-05, 1.2347000000002828e-05, 1.2374999999998498e-05, 1.1569999999998942e-05, 1.2374999999998498e-05, 1.2402999999997638e-05, 1.1569999999998942e-05, 1.1541999999999802e-05, 1.1985999999998553e-05, 1.1555999999999372e-05, 1.1986000000002023e-05, 1.2375000000001968e-05, 1.2417000000000677e-05, 1.1528000000000233e-05, 1.2388999999998068e-05, 1.2374999999998498e-05, 1.1583999999998512e-05, 1.1986000000002023e-05, 1.1987000000001496e-05, 1.1555999999999372e-05, 1.1568999999999469e-05, 1.1930000000000274e-05, 1.1985999999998553e-05, 1.1972999999998457e-05, 1.1639000000000788e-05, 1.1583000000002508e-05, 1.2375000000001968e-05, 1.1569999999998942e-05, 1.1625000000001218e-05, 1.1584000000001982e-05, 1.1569999999998942e-05, 1.1555999999999372e-05, 1.1610999999998178e-05, 1.1528000000000233e-05, 1.1568999999999469e-05, 1.1584000000001982e-05, 1.1555999999999372e-05, 1.1930999999999747e-05, 1.1583999999998512e-05, 1.1985999999998553e-05, 1.1972000000002453e-05, 1.1582999999999039e-05, 1.2389000000001538e-05, 1.1582999999999039e-05, 1.1971999999998983e-05]</msg>
<status status="PASS" starttime="20201115 23:02:56.840" endtime="20201115 23:02:56.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.835" endtime="20201115 23:02:56.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.845" endtime="20201115 23:02:56.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:56.848" endtime="20201115 23:02:56.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.847" endtime="20201115 23:02:56.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.843" endtime="20201115 23:02:56.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.478" endtime="20201115 23:02:56.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.476" endtime="20201115 23:02:56.869"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.476" endtime="20201115 23:02:56.870"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.872" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.880" endtime="20201115 23:02:56.894"></status>
</kw>
<msg timestamp="20201115 23:02:56.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.879" endtime="20201115 23:02:56.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:56.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:56.896" endtime="20201115 23:02:56.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.898" endtime="20201115 23:02:56.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.876" endtime="20201115 23:02:56.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.874" endtime="20201115 23:02:56.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:56.907" endtime="20201115 23:02:57.194"></status>
</kw>
<msg timestamp="20201115 23:02:57.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:56.906" endtime="20201115 23:02:57.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022488931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.198" endtime="20201115 23:02:57.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.207" endtime="20201115 23:02:57.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.903" endtime="20201115 23:02:57.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.901" endtime="20201115 23:02:57.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.213" level="INFO">${RESULT} = [{'time': 0.022502097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3165999999998484e-05, 'source_diff': 1.3165999999998484e-05}, {'time': 0.022519958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:57.210" endtime="20201115 23:02:57.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:57.227" level="INFO">${ACCURACY} = {'source_diff': [1.3165999999998484e-05, 1.2388999999998068e-05, 1.2764000000001913e-05, 1.2360999999998928e-05, 1.326299999999947e-05, 1.3195000000000567e-05, 1.2764000000001913e-05, 1.23750000000019...</msg>
<status status="PASS" starttime="20201115 23:02:57.215" endtime="20201115 23:02:57.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.232" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:02:57.231" endtime="20201115 23:02:57.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.234" level="INFO">VALUE: [1.3165999999998484e-05, 1.2388999999998068e-05, 1.2764000000001913e-05, 1.2360999999998928e-05, 1.326299999999947e-05, 1.3195000000000567e-05, 1.2764000000001913e-05, 1.2375000000001968e-05, 1.2778000000001483e-05, 1.2791999999997583e-05, 1.2763999999998443e-05, 1.2791999999997583e-05, 1.3181000000000997e-05, 1.2375000000001968e-05, 1.2388999999998068e-05, 1.2778000000001483e-05, 1.3195000000000567e-05, 1.3181000000000997e-05, 1.3179999999998054e-05, 1.2388999999998068e-05, 1.2361000000002398e-05, 1.2791000000001579e-05, 1.2360999999998928e-05, 1.2777999999998013e-05, 1.3209000000000137e-05, 1.3195000000000567e-05, 1.3193999999997624e-05, 1.2388999999998068e-05, 1.2806000000000622e-05, 1.3181000000000997e-05, 1.2374999999998498e-05, 1.2792000000001053e-05, 1.2792000000001053e-05, 1.3194999999997098e-05, 1.3181000000000997e-05, 1.2792000000001053e-05, 1.280499999999768e-05, 1.3181000000000997e-05, 1.279099999999811e-05, 1.2374999999998498e-05, 1.3124999999999248e-05, 1.2735999999999303e-05, 1.2792000000001053e-05, 1.280499999999768e-05, 1.3180000000001524e-05, 1.2792000000001053e-05, 1.280499999999768e-05, 1.2346999999999358e-05, 1.2749999999998873e-05, 1.2805000000001149e-05]</msg>
<status status="PASS" starttime="20201115 23:02:57.233" endtime="20201115 23:02:57.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.228" endtime="20201115 23:02:57.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.238" endtime="20201115 23:02:57.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:57.241" endtime="20201115 23:02:57.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.239" endtime="20201115 23:02:57.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.236" endtime="20201115 23:02:57.261"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.873" endtime="20201115 23:02:57.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.871" endtime="20201115 23:02:57.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:56.870" endtime="20201115 23:02:57.262"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.265" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.273" endtime="20201115 23:02:57.287"></status>
</kw>
<msg timestamp="20201115 23:02:57.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.271" endtime="20201115 23:02:57.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.288" endtime="20201115 23:02:57.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.291" endtime="20201115 23:02:57.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.269" endtime="20201115 23:02:57.293"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.267" endtime="20201115 23:02:57.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.300" endtime="20201115 23:02:57.586"></status>
</kw>
<msg timestamp="20201115 23:02:57.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.298" endtime="20201115 23:02:57.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:57.591" endtime="20201115 23:02:57.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.599" endtime="20201115 23:02:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.296" endtime="20201115 23:02:57.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.294" endtime="20201115 23:02:57.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.606" level="INFO">${RESULT} = [{'time': 0.022553375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.022570361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:57.603" endtime="20201115 23:02:57.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:57.620" level="INFO">${ACCURACY} = {'source_diff': [1.3638999999999318e-05, 1.4429999999999304e-05, 1.3985999999997084e-05, 1.3973000000000457e-05, 1.3598000000000082e-05, 1.3583000000001039e-05, 1.4402999999999638e-05, 1.3986000000000...</msg>
<status status="PASS" starttime="20201115 23:02:57.607" endtime="20201115 23:02:57.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.624" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:02:57.623" endtime="20201115 23:02:57.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.627" level="INFO">VALUE: [1.3638999999999318e-05, 1.4429999999999304e-05, 1.3985999999997084e-05, 1.3973000000000457e-05, 1.3598000000000082e-05, 1.3583000000001039e-05, 1.4402999999999638e-05, 1.3986000000000554e-05, 1.3597000000000609e-05, 1.4041999999998833e-05, 1.3583000000001039e-05, 1.4000000000000123e-05, 1.3598000000000082e-05, 1.4402999999999638e-05, 1.358299999999757e-05, 1.3611000000000179e-05, 1.4416999999999208e-05, 1.4415999999999735e-05, 1.3624999999999748e-05, 1.3598000000000082e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3652999999998888e-05, 1.3598000000000082e-05, 1.3611000000000179e-05, 1.3986000000000554e-05, 1.3596999999997139e-05, 1.4000000000000123e-05, 1.3584000000000512e-05, 1.4000000000000123e-05, 1.3944000000001844e-05, 1.3999999999996654e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.3611000000000179e-05, 1.4000000000000123e-05, 1.3514000000002663e-05, 1.3598000000000082e-05, 1.3528000000002233e-05, 1.4000000000000123e-05, 1.4402000000000165e-05, 1.3972000000000984e-05, 1.3597000000000609e-05, 1.3596999999997139e-05, 1.3598000000000082e-05, 1.3597000000000609e-05, 1.3944000000001844e-05, 1.4041999999998833e-05, 1.4402999999999638e-05, 1.4402999999999638e-05]</msg>
<status status="PASS" starttime="20201115 23:02:57.625" endtime="20201115 23:02:57.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.620" endtime="20201115 23:02:57.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.630" endtime="20201115 23:02:57.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:57.633" endtime="20201115 23:02:57.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.632" endtime="20201115 23:02:57.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.628" endtime="20201115 23:02:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.265" endtime="20201115 23:02:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.263" endtime="20201115 23:02:57.654"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.263" endtime="20201115 23:02:57.654"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.657" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.665" endtime="20201115 23:02:57.680"></status>
</kw>
<msg timestamp="20201115 23:02:57.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.664" endtime="20201115 23:02:57.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:57.681" endtime="20201115 23:02:57.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.684" endtime="20201115 23:02:57.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.661" endtime="20201115 23:02:57.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.659" endtime="20201115 23:02:57.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.693" endtime="20201115 23:02:57.979"></status>
</kw>
<msg timestamp="20201115 23:02:57.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:57.691" endtime="20201115 23:02:57.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:57.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:57.984" endtime="20201115 23:02:57.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:57.992" endtime="20201115 23:02:57.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.689" endtime="20201115 23:02:57.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.687" endtime="20201115 23:02:57.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:57.999" level="INFO">${RESULT} = [{'time': 0.022336903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4403000000003108e-05, 'source_diff': 1.4403000000003108e-05}, {'time': 0.022355972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:57.996" endtime="20201115 23:02:57.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.012" level="INFO">${ACCURACY} = {'source_diff': [1.4403000000003108e-05, 1.4403000000003108e-05, 1.5222999999998238e-05, 1.481899999999925e-05, 1.477699999999707e-05, 1.4402999999999638e-05, 1.4805999999999153e-05, 1.441599999999973...</msg>
<status status="PASS" starttime="20201115 23:02:58.000" endtime="20201115 23:02:58.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.017" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.016" endtime="20201115 23:02:58.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.020" level="INFO">VALUE: [1.4403000000003108e-05, 1.4403000000003108e-05, 1.5222999999998238e-05, 1.481899999999925e-05, 1.477699999999707e-05, 1.4402999999999638e-05, 1.4805999999999153e-05, 1.4415999999999735e-05, 1.4415999999999735e-05, 1.5207999999999194e-05, 1.4805999999999153e-05, 1.4805999999999153e-05, 1.481899999999925e-05, 1.5166000000000485e-05, 1.4806000000002623e-05, 1.4833000000002289e-05, 1.4820000000002193e-05, 1.481899999999925e-05, 1.481899999999925e-05, 1.5207999999999194e-05, 1.5193999999999624e-05, 1.5208999999998668e-05, 1.5235999999998334e-05, 1.5166999999999958e-05, 1.4848000000001332e-05, 1.4416000000003204e-05, 1.4805999999999153e-05, 1.4416000000003204e-05, 1.484699999999839e-05, 1.480499999999968e-05, 1.4819999999998723e-05, 1.5209000000002137e-05, 1.4389000000000068e-05, 1.4806000000002623e-05, 1.4805999999999153e-05, 1.481899999999925e-05, 1.4833000000002289e-05, 1.4847000000001859e-05, 1.5222999999998238e-05, 1.4820000000002193e-05, 1.4888000000001095e-05, 1.480499999999968e-05, 1.4388999999996599e-05, 1.4389000000000068e-05, 1.5166000000000485e-05, 1.4402999999999638e-05, 1.5264000000000943e-05, 1.480499999999968e-05, 1.481899999999925e-05, 1.477699999999707e-05]</msg>
<status status="PASS" starttime="20201115 23:02:58.018" endtime="20201115 23:02:58.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.013" endtime="20201115 23:02:58.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.023" endtime="20201115 23:02:58.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.026" endtime="20201115 23:02:58.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.025" endtime="20201115 23:02:58.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.021" endtime="20201115 23:02:58.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.657" endtime="20201115 23:02:58.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.656" endtime="20201115 23:02:58.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:57.655" endtime="20201115 23:02:58.047"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.050" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.058" endtime="20201115 23:02:58.073"></status>
</kw>
<msg timestamp="20201115 23:02:58.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.056" endtime="20201115 23:02:58.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.074" endtime="20201115 23:02:58.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.077" endtime="20201115 23:02:58.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.054" endtime="20201115 23:02:58.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.052" endtime="20201115 23:02:58.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.086" endtime="20201115 23:02:58.372"></status>
</kw>
<msg timestamp="20201115 23:02:58.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.085" endtime="20201115 23:02:58.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.377" endtime="20201115 23:02:58.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.385" endtime="20201115 23:02:58.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.082" endtime="20201115 23:02:58.387"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.080" endtime="20201115 23:02:58.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:58.392" level="INFO">${RESULT} = [{'time': 0.022073264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6041999999997364e-05, 'source_diff': 1.6041999999997364e-05}, {'time': 0.022092028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:58.388" endtime="20201115 23:02:58.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.407" level="INFO">${ACCURACY} = {'source_diff': [1.6041999999997364e-05, 1.6042000000000833e-05, 1.6097999999999113e-05, 1.6042000000000833e-05, 1.6014000000001694e-05, 1.641700000000121e-05, 1.561100000000218e-05, 1.598600000000255...</msg>
<status status="PASS" starttime="20201115 23:02:58.393" endtime="20201115 23:02:58.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.411" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.410" endtime="20201115 23:02:58.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.414" level="INFO">VALUE: [1.6041999999997364e-05, 1.6042000000000833e-05, 1.6097999999999113e-05, 1.6042000000000833e-05, 1.6014000000001694e-05, 1.641700000000121e-05, 1.561100000000218e-05, 1.5986000000002554e-05, 1.6042000000000833e-05, 1.5222999999998238e-05, 1.6013999999998224e-05, 1.6028000000001263e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.5597999999998613e-05, 1.5264000000000943e-05, 1.6083999999999543e-05, 1.5611999999998183e-05, 1.6445000000000348e-05, 1.6415999999998265e-05, 1.562499999999828e-05, 1.6014000000001694e-05, 1.555500000000043e-05, 1.602700000000179e-05, 1.6027999999997794e-05, 1.6014000000001694e-05, 1.601299999999875e-05, 1.6014000000001694e-05, 1.6429999999997835e-05, 1.6028000000001263e-05, 1.561099999999871e-05, 1.6028000000001263e-05, 1.5957999999999944e-05, 1.6028000000001263e-05, 1.561100000000218e-05, 1.562499999999828e-05, 1.561100000000218e-05, 1.6416000000001735e-05, 1.6444000000000875e-05, 1.6027999999997794e-05, 1.5209000000002137e-05, 1.6000000000002124e-05, 1.601300000000222e-05, 1.6444000000000875e-05, 1.6042000000000833e-05, 1.562499999999828e-05, 1.562499999999828e-05, 1.5999999999998654e-05, 1.5638000000001845e-05, 1.604099999999789e-05]</msg>
<status status="PASS" starttime="20201115 23:02:58.412" endtime="20201115 23:02:58.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.408" endtime="20201115 23:02:58.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.417" endtime="20201115 23:02:58.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.420" endtime="20201115 23:02:58.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.419" endtime="20201115 23:02:58.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.415" endtime="20201115 23:02:58.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.050" endtime="20201115 23:02:58.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.049" endtime="20201115 23:02:58.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.048" endtime="20201115 23:02:58.441"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.444" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.453" endtime="20201115 23:02:58.467"></status>
</kw>
<msg timestamp="20201115 23:02:58.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.451" endtime="20201115 23:02:58.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.468" endtime="20201115 23:02:58.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.471" endtime="20201115 23:02:58.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.449" endtime="20201115 23:02:58.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.446" endtime="20201115 23:02:58.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.480" endtime="20201115 23:02:58.766"></status>
</kw>
<msg timestamp="20201115 23:02:58.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.479" endtime="20201115 23:02:58.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.770" endtime="20201115 23:02:58.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.778" endtime="20201115 23:02:58.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.476" endtime="20201115 23:02:58.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.474" endtime="20201115 23:02:58.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:58.785" level="INFO">${RESULT} = [{'time': 0.023203292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.023225264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:58.782" endtime="20201115 23:02:58.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:58.798" level="INFO">${ACCURACY} = {'source_diff': [1.7249999999999904e-05, 1.7221999999997295e-05, 1.6847999999999863e-05, 1.6444000000000875e-05, 1.644499999999688e-05, 1.6429999999997835e-05, 1.7249999999999904e-05, 1.72219999999972...</msg>
<status status="PASS" starttime="20201115 23:02:58.786" endtime="20201115 23:02:58.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.803" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:58.802" endtime="20201115 23:02:58.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.805" level="INFO">VALUE: [1.7249999999999904e-05, 1.7221999999997295e-05, 1.6847999999999863e-05, 1.6444000000000875e-05, 1.644499999999688e-05, 1.6429999999997835e-05, 1.7249999999999904e-05, 1.7221999999997295e-05, 1.6847999999999863e-05, 1.7249999999999904e-05, 1.6444000000000875e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.683300000000082e-05, 1.6415999999998265e-05, 1.681900000000125e-05, 1.641699999999774e-05, 1.6791999999998114e-05, 1.686099999999996e-05, 1.637499999999903e-05, 1.6806000000001153e-05, 1.643100000000078e-05, 1.637499999999903e-05, 1.684700000000039e-05, 1.6444000000000875e-05, 1.643100000000078e-05, 1.641700000000121e-05, 1.7249999999999904e-05, 1.640300000000164e-05, 1.6763999999998974e-05, 1.7236000000000334e-05, 1.681899999999778e-05, 1.687499999999953e-05, 1.7263999999999474e-05, 1.683300000000082e-05, 1.643100000000078e-05, 1.6430000000001305e-05, 1.683300000000082e-05, 1.718099999999806e-05, 1.6834000000000293e-05, 1.6902000000002665e-05, 1.6430000000001305e-05, 1.686099999999996e-05, 1.643100000000078e-05, 1.684700000000039e-05, 1.683300000000082e-05, 1.7236000000000334e-05, 1.6416000000001735e-05, 1.677699999999907e-05, 1.7249999999999904e-05]</msg>
<status status="PASS" starttime="20201115 23:02:58.804" endtime="20201115 23:02:58.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.799" endtime="20201115 23:02:58.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.809" endtime="20201115 23:02:58.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:58.813" endtime="20201115 23:02:58.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.811" endtime="20201115 23:02:58.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.807" endtime="20201115 23:02:58.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.444" endtime="20201115 23:02:58.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.443" endtime="20201115 23:02:58.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.442" endtime="20201115 23:02:58.834"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.836" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.844" endtime="20201115 23:02:58.859"></status>
</kw>
<msg timestamp="20201115 23:02:58.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.843" endtime="20201115 23:02:58.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:58.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:58.861" endtime="20201115 23:02:58.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.863" endtime="20201115 23:02:58.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.840" endtime="20201115 23:02:58.866"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.838" endtime="20201115 23:02:58.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:58.872" endtime="20201115 23:02:59.160"></status>
</kw>
<msg timestamp="20201115 23:02:59.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:58.871" endtime="20201115 23:02:59.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022208264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022225903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.164" endtime="20201115 23:02:59.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.173" endtime="20201115 23:02:59.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.868" endtime="20201115 23:02:59.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.867" endtime="20201115 23:02:59.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:59.179" level="INFO">${RESULT} = [{'time': 0.022225903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.763900000000332e-05, 'source_diff': 1.763900000000332e-05}, {'time': 0.022251042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:59.176" endtime="20201115 23:02:59.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:59.193" level="INFO">${ACCURACY} = {'source_diff': [1.763900000000332e-05, 1.845899999999845e-05, 1.8041999999999364e-05, 1.763899999999985e-05, 1.811100000000121e-05, 1.762500000000028e-05, 1.805499999999946e-05, 1.802700000000032e-05...</msg>
<status status="PASS" starttime="20201115 23:02:59.180" endtime="20201115 23:02:59.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.197" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:59.196" endtime="20201115 23:02:59.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.200" level="INFO">VALUE: [1.763900000000332e-05, 1.845899999999845e-05, 1.8041999999999364e-05, 1.763899999999985e-05, 1.811100000000121e-05, 1.762500000000028e-05, 1.805499999999946e-05, 1.802700000000032e-05, 1.8069999999998504e-05, 1.8041999999999364e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.801300000000075e-05, 1.765299999999942e-05, 1.8041999999999364e-05, 1.766699999999899e-05, 1.8041999999999364e-05, 1.765300000000289e-05, 1.7638000000000376e-05, 1.811099999999774e-05, 1.7249999999999904e-05, 1.75829999999981e-05, 1.8056000000002403e-05, 1.8041999999999364e-05, 1.8027999999999794e-05, 1.7638000000000376e-05, 1.75829999999981e-05, 1.765299999999942e-05, 1.763899999999985e-05, 1.8070000000001973e-05, 1.765299999999942e-05, 1.765299999999942e-05, 1.763899999999985e-05, 1.805500000000293e-05, 1.765299999999942e-05, 1.7665999999999515e-05, 1.763900000000332e-05, 1.805499999999946e-05, 1.763899999999985e-05, 1.7249999999999904e-05, 1.805499999999946e-05, 1.763899999999985e-05, 1.8485999999998115e-05, 1.763899999999985e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.762500000000028e-05, 1.809699999999817e-05]</msg>
<status status="PASS" starttime="20201115 23:02:59.199" endtime="20201115 23:02:59.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.194" endtime="20201115 23:02:59.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.203" endtime="20201115 23:02:59.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:59.207" endtime="20201115 23:02:59.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.205" endtime="20201115 23:02:59.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.202" endtime="20201115 23:02:59.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.837" endtime="20201115 23:02:59.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.835" endtime="20201115 23:02:59.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:58.834" endtime="20201115 23:02:59.228"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.239" endtime="20201115 23:02:59.254"></status>
</kw>
<msg timestamp="20201115 23:02:59.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.238" endtime="20201115 23:02:59.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.255" endtime="20201115 23:02:59.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.258" endtime="20201115 23:02:59.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.235" endtime="20201115 23:02:59.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.233" endtime="20201115 23:02:59.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.267" endtime="20201115 23:02:59.554"></status>
</kw>
<msg timestamp="20201115 23:02:59.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:59.265" endtime="20201115 23:02:59.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022949639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:59.558" endtime="20201115 23:02:59.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.566" endtime="20201115 23:02:59.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.263" endtime="20201115 23:02:59.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.261" endtime="20201115 23:02:59.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:59.573" level="INFO">${RESULT} = [{'time': 0.0229685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.886099999999849e-05, 'source_diff': 1.886099999999849e-05}, {'time': 0.022992375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:59.570" endtime="20201115 23:02:59.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:59.587" level="INFO">${ACCURACY} = {'source_diff': [1.886099999999849e-05, 1.9277999999997575e-05, 1.887499999999806e-05, 1.886100000000196e-05, 1.8847999999998394e-05, 1.9277999999997575e-05, 1.929100000000114e-05, 1.8458000000002445e...</msg>
<status status="PASS" starttime="20201115 23:02:59.574" endtime="20201115 23:02:59.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.591" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:59.590" endtime="20201115 23:02:59.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.594" level="INFO">VALUE: [1.886099999999849e-05, 1.9277999999997575e-05, 1.887499999999806e-05, 1.886100000000196e-05, 1.8847999999998394e-05, 1.9277999999997575e-05, 1.929100000000114e-05, 1.8458000000002445e-05, 1.89029999999972e-05, 1.844500000000235e-05, 1.8862000000001433e-05, 1.9263999999998005e-05, 1.8792000000000114e-05, 1.884700000000239e-05, 1.884699999999892e-05, 1.9235999999998865e-05, 1.8458000000002445e-05, 1.8916000000000766e-05, 1.927700000000157e-05, 1.8458000000002445e-05, 1.9278000000001044e-05, 1.843099999999931e-05, 1.886099999999849e-05, 1.9250000000001904e-05, 1.8500000000001154e-05, 1.9264000000001474e-05, 1.886099999999849e-05, 1.8457999999998975e-05, 1.8443999999999405e-05, 1.89029999999972e-05, 1.9264000000001474e-05, 1.9264000000001474e-05, 1.845899999999845e-05, 1.92769999999981e-05, 1.9278000000001044e-05, 1.886100000000196e-05, 1.9263999999998005e-05, 1.845899999999845e-05, 1.887500000000153e-05, 1.9277999999997575e-05, 1.9263999999998005e-05, 1.8471999999998545e-05, 1.9264000000001474e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.845900000000192e-05, 1.8915999999997296e-05, 1.920900000000267e-05, 1.8472000000002015e-05, 1.8443999999999405e-05]</msg>
<status status="PASS" starttime="20201115 23:02:59.592" endtime="20201115 23:02:59.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.588" endtime="20201115 23:02:59.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.598" endtime="20201115 23:02:59.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:59.601" endtime="20201115 23:02:59.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.599" endtime="20201115 23:02:59.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.596" endtime="20201115 23:02:59.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.231" endtime="20201115 23:02:59.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.230" endtime="20201115 23:02:59.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.229" endtime="20201115 23:02:59.622"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.625" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.633" endtime="20201115 23:02:59.650"></status>
</kw>
<msg timestamp="20201115 23:02:59.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.631" endtime="20201115 23:02:59.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:59.651" endtime="20201115 23:02:59.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.654" endtime="20201115 23:02:59.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.629" endtime="20201115 23:02:59.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.627" endtime="20201115 23:02:59.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.663" endtime="20201115 23:02:59.951"></status>
</kw>
<msg timestamp="20201115 23:02:59.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.662" endtime="20201115 23:02:59.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:59.956" endtime="20201115 23:02:59.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.964" endtime="20201115 23:02:59.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.659" endtime="20201115 23:02:59.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.657" endtime="20201115 23:02:59.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:59.971" level="INFO">${RESULT} = [{'time': 0.023056722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.965300000000142e-05, 'source_diff': 1.965300000000142e-05}, {'time': 0.023079792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:59.967" endtime="20201115 23:02:59.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:59.986" level="INFO">${ACCURACY} = {'source_diff': [1.965300000000142e-05, 2.047299999999655e-05, 2.006900000000103e-05, 2.006899999999756e-05, 2.0070000000000504e-05, 1.9679999999997616e-05, 2.0111999999999214e-05, 2.0041999999997895e...</msg>
<status status="PASS" starttime="20201115 23:02:59.972" endtime="20201115 23:02:59.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.991" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:59.990" endtime="20201115 23:02:59.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:59.993" level="INFO">VALUE: [1.965300000000142e-05, 2.047299999999655e-05, 2.006900000000103e-05, 2.006899999999756e-05, 2.0070000000000504e-05, 1.9679999999997616e-05, 2.0111999999999214e-05, 2.0041999999997895e-05, 1.959699999999967e-05, 1.966700000000099e-05, 1.966700000000099e-05, 1.966700000000099e-05, 1.9264000000001474e-05, 1.9666000000001516e-05, 1.966699999999752e-05, 1.9693999999997186e-05, 1.9651999999998476e-05, 1.9652000000001946e-05, 2.0472000000000545e-05, 1.922299999999877e-05, 1.968099999999709e-05, 2.0415999999998796e-05, 1.966699999999752e-05, 1.965300000000142e-05, 1.9208000000003195e-05, 2.005500000000146e-05, 1.965300000000142e-05, 2.0070000000000504e-05, 2.0028000000001794e-05, 2.0070000000000504e-05, 2.009700000000017e-05, 1.968099999999709e-05, 1.959699999999967e-05, 1.9680000000001086e-05, 1.9250000000001904e-05, 1.968100000000056e-05, 2.0070000000000504e-05, 2.006899999999756e-05, 2.0056000000000934e-05, 1.9679999999997616e-05, 1.9652000000001946e-05, 1.966699999999752e-05, 1.966700000000099e-05, 2.0055999999997465e-05, 1.9749999999998935e-05, 2.00830000000006e-05, 1.963899999999838e-05, 2.006900000000103e-05, 1.966699999999752e-05, 2.005500000000146e-05]</msg>
<status status="PASS" starttime="20201115 23:02:59.992" endtime="20201115 23:02:59.994"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.987" endtime="20201115 23:02:59.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:59.997" endtime="20201115 23:02:59.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.000" endtime="20201115 23:03:00.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.998" endtime="20201115 23:03:00.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.995" endtime="20201115 23:03:00.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.625" endtime="20201115 23:03:00.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.623" endtime="20201115 23:03:00.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:59.623" endtime="20201115 23:03:00.021"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.024" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.032" endtime="20201115 23:03:00.047"></status>
</kw>
<msg timestamp="20201115 23:03:00.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.030" endtime="20201115 23:03:00.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.048" endtime="20201115 23:03:00.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.051" endtime="20201115 23:03:00.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.028" endtime="20201115 23:03:00.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.026" endtime="20201115 23:03:00.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.060" endtime="20201115 23:03:00.345"></status>
</kw>
<msg timestamp="20201115 23:03:00.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.058" endtime="20201115 23:03:00.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.349" endtime="20201115 23:03:00.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.358" endtime="20201115 23:03:00.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.056" endtime="20201115 23:03:00.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.054" endtime="20201115 23:03:00.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:00.365" level="INFO">${RESULT} = [{'time': 0.022051292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.047300000000002e-05, 'source_diff': 2.047300000000002e-05}, {'time': 0.022078375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:00.361" endtime="20201115 23:03:00.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:00.378" level="INFO">${ACCURACY} = {'source_diff': [2.047300000000002e-05, 2.1277999999999575e-05, 2.088899999999963e-05, 2.088899999999963e-05, 2.0486000000000115e-05, 2.1277999999999575e-05, 2.1291999999999145e-05, 2.1291999999999145...</msg>
<status status="PASS" starttime="20201115 23:03:00.366" endtime="20201115 23:03:00.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.383" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:03:00.382" endtime="20201115 23:03:00.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.385" level="INFO">VALUE: [2.047300000000002e-05, 2.1277999999999575e-05, 2.088899999999963e-05, 2.088899999999963e-05, 2.0486000000000115e-05, 2.1277999999999575e-05, 2.1291999999999145e-05, 2.1291999999999145e-05, 2.0458000000000975e-05, 2.088899999999963e-05, 2.1292000000002614e-05, 2.0458000000000975e-05, 2.0513999999999255e-05, 2.087500000000006e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.088899999999963e-05, 2.0472000000000545e-05, 2.086100000000049e-05, 2.1305999999998715e-05, 2.086100000000049e-05, 2.0513999999999255e-05, 2.0486000000000115e-05, 2.086100000000049e-05, 2.0527999999998825e-05, 2.131899999999881e-05, 2.133299999999838e-05, 2.088899999999963e-05, 2.084700000000092e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.088899999999963e-05, 2.1250000000000435e-05, 2.087500000000006e-05, 2.1292000000002614e-05, 2.09029999999992e-05, 2.087500000000006e-05, 2.088899999999963e-05, 2.0499999999999685e-05, 2.087500000000006e-05, 2.0499999999999685e-05, 2.088899999999963e-05, 2.087500000000006e-05, 2.1334000000001324e-05, 2.088899999999963e-05, 2.1291999999999145e-05, 2.130499999999924e-05, 2.1305999999998715e-05, 2.086100000000049e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201115 23:03:00.384" endtime="20201115 23:03:00.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.379" endtime="20201115 23:03:00.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.388" endtime="20201115 23:03:00.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.392" endtime="20201115 23:03:00.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.390" endtime="20201115 23:03:00.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.387" endtime="20201115 23:03:00.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.024" endtime="20201115 23:03:00.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.022" endtime="20201115 23:03:00.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.022" endtime="20201115 23:03:00.413"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.424" endtime="20201115 23:03:00.440"></status>
</kw>
<msg timestamp="20201115 23:03:00.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.422" endtime="20201115 23:03:00.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.442" endtime="20201115 23:03:00.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.444" endtime="20201115 23:03:00.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.420" endtime="20201115 23:03:00.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.418" endtime="20201115 23:03:00.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.454" endtime="20201115 23:03:00.741"></status>
</kw>
<msg timestamp="20201115 23:03:00.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.452" endtime="20201115 23:03:00.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.746" endtime="20201115 23:03:00.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.754" endtime="20201115 23:03:00.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.449" endtime="20201115 23:03:00.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.448" endtime="20201115 23:03:00.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:00.761" level="INFO">${RESULT} = [{'time': 0.022954903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.20969999999987e-05, 'source_diff': 2.20969999999987e-05}, {'time': 0.022980833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:00.757" endtime="20201115 23:03:00.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:00.774" level="INFO">${ACCURACY} = {'source_diff': [2.20969999999987e-05, 2.1693999999999186e-05, 2.2041999999999895e-05, 2.129099999999967e-05, 2.20969999999987e-05, 2.1708000000002226e-05, 2.169499999999866e-05, 2.211100000000174e-05...</msg>
<status status="PASS" starttime="20201115 23:03:00.762" endtime="20201115 23:03:00.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.779" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:03:00.778" endtime="20201115 23:03:00.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.781" level="INFO">VALUE: [2.20969999999987e-05, 2.1693999999999186e-05, 2.2041999999999895e-05, 2.129099999999967e-05, 2.20969999999987e-05, 2.1708000000002226e-05, 2.169499999999866e-05, 2.211100000000174e-05, 2.12770000000001e-05, 2.1679999999999616e-05, 2.168100000000256e-05, 2.165299999999995e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.251300000000178e-05, 2.20969999999987e-05, 2.2098000000001644e-05, 2.211100000000174e-05, 2.166699999999952e-05, 2.1291999999999145e-05, 2.2028000000000325e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.2041999999999895e-05, 2.1291999999999145e-05, 2.1652000000000476e-05, 2.169499999999866e-05, 2.1693999999999186e-05, 2.1736000000001365e-05, 2.163900000000038e-05, 2.168099999999909e-05, 2.130499999999924e-05, 2.1679999999999616e-05, 2.1707999999998756e-05, 2.1707999999998756e-05, 2.20830000000026e-05, 2.206899999999956e-05, 2.170899999999823e-05, 2.212499999999784e-05, 2.216700000000002e-05, 2.1707999999998756e-05, 2.1679999999999616e-05, 2.211100000000174e-05, 2.209700000000217e-05, 2.209700000000217e-05, 2.1291999999999145e-05, 2.208299999999913e-05, 2.1750000000000935e-05, 2.2514000000001255e-05, 2.168099999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:03:00.780" endtime="20201115 23:03:00.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.775" endtime="20201115 23:03:00.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.785" endtime="20201115 23:03:00.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:00.788" endtime="20201115 23:03:00.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.786" endtime="20201115 23:03:00.808"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.783" endtime="20201115 23:03:00.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.416" endtime="20201115 23:03:00.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.414" endtime="20201115 23:03:00.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.414" endtime="20201115 23:03:00.809"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.812" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.820" endtime="20201115 23:03:00.835"></status>
</kw>
<msg timestamp="20201115 23:03:00.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.818" endtime="20201115 23:03:00.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:00.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:00.836" endtime="20201115 23:03:00.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.844" endtime="20201115 23:03:00.845"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.816" endtime="20201115 23:03:00.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.814" endtime="20201115 23:03:00.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:00.853" endtime="20201115 23:03:01.139"></status>
</kw>
<msg timestamp="20201115 23:03:01.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:00.851" endtime="20201115 23:03:01.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.144" endtime="20201115 23:03:01.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.152" endtime="20201115 23:03:01.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.849" endtime="20201115 23:03:01.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.847" endtime="20201115 23:03:01.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.159" level="INFO">${RESULT} = [{'time': 0.022915431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.288900000000163e-05, 'source_diff': 2.288900000000163e-05}, {'time': 0.022942125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:01.155" endtime="20201115 23:03:01.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.172" level="INFO">${ACCURACY} = {'source_diff': [2.288900000000163e-05, 2.2500000000001685e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.288899999999816e-05, 2.3278000000001575e-05, 2.29030000000012e-05, 2.2500000000001685e...</msg>
<status status="PASS" starttime="20201115 23:03:01.160" endtime="20201115 23:03:01.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.177" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.176" endtime="20201115 23:03:01.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.179" level="INFO">VALUE: [2.288900000000163e-05, 2.2500000000001685e-05, 2.2485999999998646e-05, 2.2513999999997786e-05, 2.288899999999816e-05, 2.3278000000001575e-05, 2.29030000000012e-05, 2.2500000000001685e-05, 2.2472000000002545e-05, 2.2500000000001685e-05, 2.2513999999997786e-05, 2.3320000000000285e-05, 2.29030000000012e-05, 2.3306000000000715e-05, 2.2499999999998216e-05, 2.2499999999998216e-05, 2.2514000000001255e-05, 2.288900000000163e-05, 2.29030000000012e-05, 2.288899999999816e-05, 2.287500000000206e-05, 2.2528000000000825e-05, 2.2500000000001685e-05, 2.29030000000012e-05, 2.2486000000002115e-05, 2.290299999999773e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.3318999999997342e-05, 2.2500000000001685e-05, 2.2901999999998257e-05, 2.287499999999859e-05, 2.288899999999816e-05, 2.330500000000124e-05, 2.331900000000081e-05, 2.252700000000135e-05, 2.3320000000000285e-05, 2.330500000000124e-05, 2.290299999999773e-05, 2.29169999999973e-05, 2.2915999999997827e-05, 2.288899999999816e-05, 2.2542000000000395e-05, 2.293100000000034e-05, 2.254100000000092e-05, 2.291700000000077e-05, 2.2542000000000395e-05, 2.2499999999998216e-05, 2.2499999999998216e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201115 23:03:01.178" endtime="20201115 23:03:01.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.173" endtime="20201115 23:03:01.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.182" endtime="20201115 23:03:01.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.186" endtime="20201115 23:03:01.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.184" endtime="20201115 23:03:01.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.181" endtime="20201115 23:03:01.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.812" endtime="20201115 23:03:01.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.810" endtime="20201115 23:03:01.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:00.810" endtime="20201115 23:03:01.207"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.209" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.218" endtime="20201115 23:03:01.234"></status>
</kw>
<msg timestamp="20201115 23:03:01.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.216" endtime="20201115 23:03:01.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.236" endtime="20201115 23:03:01.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.238" endtime="20201115 23:03:01.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.214" endtime="20201115 23:03:01.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.211" endtime="20201115 23:03:01.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.248" endtime="20201115 23:03:01.537"></status>
</kw>
<msg timestamp="20201115 23:03:01.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023238597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.247" endtime="20201115 23:03:01.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023238597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.542" endtime="20201115 23:03:01.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.550" endtime="20201115 23:03:01.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.244" endtime="20201115 23:03:01.552"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.242" endtime="20201115 23:03:01.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.557" level="INFO">${RESULT} = [{'time': 0.023262653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4056000000001465e-05, 'source_diff': 2.4056000000001465e-05}, {'time': 0.023292681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:01.553" endtime="20201115 23:03:01.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.572" level="INFO">${ACCURACY} = {'source_diff': [2.4056000000001465e-05, 2.37229999999998e-05, 2.3749999999999466e-05, 2.4083999999997135e-05, 2.412499999999984e-05, 2.362499999999934e-05, 2.3679999999998147e-05, 2.4528000000002825e...</msg>
<status status="PASS" starttime="20201115 23:03:01.558" endtime="20201115 23:03:01.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.576" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.575" endtime="20201115 23:03:01.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.579" level="INFO">VALUE: [2.4056000000001465e-05, 2.37229999999998e-05, 2.3749999999999466e-05, 2.4083999999997135e-05, 2.412499999999984e-05, 2.362499999999934e-05, 2.3679999999998147e-05, 2.4528000000002825e-05, 2.4082999999997662e-05, 2.3722000000000326e-05, 2.3735999999999896e-05, 2.336099999999952e-05, 2.3306000000000715e-05, 2.370900000000023e-05, 2.331900000000081e-05, 2.41109999999968e-05, 2.3708000000000756e-05, 2.370900000000023e-05, 2.411100000000027e-05, 2.370900000000023e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.408300000000113e-05, 2.412499999999984e-05, 2.3708000000000756e-05, 2.3292000000001145e-05, 2.4179999999998647e-05, 2.37229999999998e-05, 2.3777999999998606e-05, 2.413899999999941e-05, 2.369499999999719e-05, 2.3735999999999896e-05, 2.3708000000000756e-05, 2.413900000000288e-05, 2.3722000000000326e-05, 2.411100000000027e-05, 2.3290999999998202e-05, 2.4194000000001686e-05, 2.370900000000023e-05, 2.3320000000000285e-05, 2.413899999999941e-05, 2.4082999999997662e-05, 2.416699999999855e-05, 2.411100000000027e-05, 2.4194000000001686e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.411100000000027e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201115 23:03:01.578" endtime="20201115 23:03:01.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.573" endtime="20201115 23:03:01.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.582" endtime="20201115 23:03:01.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.586" endtime="20201115 23:03:01.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.584" endtime="20201115 23:03:01.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.580" endtime="20201115 23:03:01.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.210" endtime="20201115 23:03:01.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.208" endtime="20201115 23:03:01.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.207" endtime="20201115 23:03:01.607"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.610" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.618" endtime="20201115 23:03:01.632"></status>
</kw>
<msg timestamp="20201115 23:03:01.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.616" endtime="20201115 23:03:01.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:01.634" endtime="20201115 23:03:01.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.636" endtime="20201115 23:03:01.638"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.614" endtime="20201115 23:03:01.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.612" endtime="20201115 23:03:01.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.645" endtime="20201115 23:03:01.932"></status>
</kw>
<msg timestamp="20201115 23:03:01.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.644" endtime="20201115 23:03:01.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:01.936" endtime="20201115 23:03:01.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.944" endtime="20201115 23:03:01.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.641" endtime="20201115 23:03:01.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.640" endtime="20201115 23:03:01.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:01.951" level="INFO">${RESULT} = [{'time': 0.022056125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5291999999999676e-05, 'source_diff': 2.5291999999999676e-05}, {'time': 0.022083042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:01.948" endtime="20201115 23:03:01.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:01.964" level="INFO">${ACCURACY} = {'source_diff': [2.5291999999999676e-05, 2.4541999999998926e-05, 2.5291999999999676e-05, 2.5332999999998912e-05, 2.5360999999998052e-05, 2.4540999999999452e-05, 2.49169999999993e-05, 2.493099999999887...</msg>
<status status="PASS" starttime="20201115 23:03:01.952" endtime="20201115 23:03:01.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.969" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:03:01.968" endtime="20201115 23:03:01.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:01.971" level="INFO">VALUE: [2.5291999999999676e-05, 2.4541999999998926e-05, 2.5291999999999676e-05, 2.5332999999998912e-05, 2.5360999999998052e-05, 2.4540999999999452e-05, 2.49169999999993e-05, 2.493099999999887e-05, 2.4527999999999356e-05, 2.4929999999999397e-05, 2.4513000000000312e-05, 2.4943999999998967e-05, 2.4486000000000646e-05, 2.4500000000000216e-05, 2.493100000000234e-05, 2.4527999999999356e-05, 2.493100000000234e-05, 2.5346999999998482e-05, 2.5332999999998912e-05, 2.494499999999844e-05, 2.4930000000002867e-05, 2.49169999999993e-05, 2.536100000000152e-05, 2.4929999999999397e-05, 2.4929999999999397e-05, 2.452700000000335e-05, 2.49169999999993e-05, 2.4526999999999882e-05, 2.537500000000109e-05, 2.4929999999999397e-05, 2.4527999999999356e-05, 2.4971999999998107e-05, 2.5346999999998482e-05, 2.4472000000001076e-05, 2.4943999999998967e-05, 2.4930000000002867e-05, 2.5278000000000106e-05, 2.5333999999998386e-05, 2.4541999999998926e-05, 2.4527999999999356e-05, 2.5318999999999342e-05, 2.5332999999998912e-05, 2.536100000000152e-05, 2.4527999999999356e-05, 2.4986000000001146e-05, 2.4930000000002867e-05, 2.4944000000002436e-05, 2.533300000000238e-05, 2.4540999999999452e-05, 2.5332999999998912e-05]</msg>
<status status="PASS" starttime="20201115 23:03:01.970" endtime="20201115 23:03:01.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.965" endtime="20201115 23:03:01.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:01.975" endtime="20201115 23:03:01.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:01.979" endtime="20201115 23:03:01.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.977" endtime="20201115 23:03:01.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.973" endtime="20201115 23:03:01.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.610" endtime="20201115 23:03:01.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.608" endtime="20201115 23:03:02.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:01.608" endtime="20201115 23:03:02.000"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.002" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.011" endtime="20201115 23:03:02.025"></status>
</kw>
<msg timestamp="20201115 23:03:02.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.009" endtime="20201115 23:03:02.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.027" endtime="20201115 23:03:02.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.029" endtime="20201115 23:03:02.031"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.006" endtime="20201115 23:03:02.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.004" endtime="20201115 23:03:02.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.039" endtime="20201115 23:03:02.326"></status>
</kw>
<msg timestamp="20201115 23:03:02.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.037" endtime="20201115 23:03:02.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.330" endtime="20201115 23:03:02.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.338" endtime="20201115 23:03:02.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.034" endtime="20201115 23:03:02.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.033" endtime="20201115 23:03:02.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:02.345" level="INFO">${RESULT} = [{'time': 0.022251819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6151999999998038e-05, 'source_diff': 2.6151999999998038e-05}, {'time': 0.022283028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:02.342" endtime="20201115 23:03:02.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:02.359" level="INFO">${ACCURACY} = {'source_diff': [2.6151999999998038e-05, 2.5764000000001036e-05, 2.615300000000098e-05, 2.5735999999998427e-05, 2.5750000000001466e-05, 2.5735999999998427e-05, 2.6124999999998372e-05, 2.57360000000018...</msg>
<status status="PASS" starttime="20201115 23:03:02.346" endtime="20201115 23:03:02.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.363" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:03:02.362" endtime="20201115 23:03:02.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.366" level="INFO">VALUE: [2.6151999999998038e-05, 2.5764000000001036e-05, 2.615300000000098e-05, 2.5735999999998427e-05, 2.5750000000001466e-05, 2.5735999999998427e-05, 2.6124999999998372e-05, 2.5736000000001896e-05, 2.615300000000098e-05, 2.6569000000000592e-05, 2.6541000000001452e-05, 2.619499999999969e-05, 2.533300000000238e-05, 2.5291000000000202e-05, 2.5750000000001466e-05, 2.615300000000098e-05, 2.6236000000002396e-05, 2.615300000000098e-05, 2.5346999999998482e-05, 2.5750000000001466e-05, 2.5346999999998482e-05, 2.5306000000002715e-05, 2.5319999999998816e-05, 2.534700000000195e-05, 2.5334000000001855e-05, 2.611100000000227e-05, 2.616700000000055e-05, 2.5708000000002756e-05, 2.6138000000001937e-05, 2.5749999999997997e-05, 2.5348000000001425e-05, 2.5749999999997997e-05, 2.6069999999999566e-05, 2.5346999999998482e-05, 2.5735999999998427e-05, 2.615300000000098e-05, 2.5749999999997997e-05, 2.613900000000141e-05, 2.534700000000195e-05, 2.5348000000001425e-05, 2.6554999999997553e-05, 2.5749999999997997e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.619500000000316e-05, 2.611100000000227e-05, 2.6165999999997608e-05, 2.5346999999998482e-05, 2.615299999999751e-05, 2.5736000000001896e-05]</msg>
<status status="PASS" starttime="20201115 23:03:02.364" endtime="20201115 23:03:02.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.360" endtime="20201115 23:03:02.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.370" endtime="20201115 23:03:02.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:02.373" endtime="20201115 23:03:02.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.371" endtime="20201115 23:03:02.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.368" endtime="20201115 23:03:02.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.003" endtime="20201115 23:03:02.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.001" endtime="20201115 23:03:02.394"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.000" endtime="20201115 23:03:02.394"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.397" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.405" endtime="20201115 23:03:02.419"></status>
</kw>
<msg timestamp="20201115 23:03:02.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.403" endtime="20201115 23:03:02.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.421" endtime="20201115 23:03:02.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.423" endtime="20201115 23:03:02.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.401" endtime="20201115 23:03:02.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.399" endtime="20201115 23:03:02.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.432" endtime="20201115 23:03:02.719"></status>
</kw>
<msg timestamp="20201115 23:03:02.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.431" endtime="20201115 23:03:02.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022160875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.723" endtime="20201115 23:03:02.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.731" endtime="20201115 23:03:02.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.428" endtime="20201115 23:03:02.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.426" endtime="20201115 23:03:02.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:02.738" level="INFO">${RESULT} = [{'time': 0.022160875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6542000000000926e-05, 'source_diff': 2.6542000000000926e-05}, {'time': 0.022190958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:02.735" endtime="20201115 23:03:02.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:02.752" level="INFO">${ACCURACY} = {'source_diff': [2.6542000000000926e-05, 2.6514000000001786e-05, 2.695900000000001e-05, 2.6957999999997068e-05, 2.6944000000000967e-05, 2.7361000000000052e-05, 2.6570000000000066e-05, 2.69720000000001...</msg>
<status status="PASS" starttime="20201115 23:03:02.739" endtime="20201115 23:03:02.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.757" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:03:02.756" endtime="20201115 23:03:02.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.759" level="INFO">VALUE: [2.6542000000000926e-05, 2.6514000000001786e-05, 2.695900000000001e-05, 2.6957999999997068e-05, 2.6944000000000967e-05, 2.7361000000000052e-05, 2.6570000000000066e-05, 2.6972000000000107e-05, 2.7374999999999622e-05, 2.6556000000000496e-05, 2.6555000000001022e-05, 2.6542000000000926e-05, 2.7347000000000482e-05, 2.6527999999997887e-05, 2.7013999999998817e-05, 2.698699999999915e-05, 2.6943999999997498e-05, 2.7292000000001676e-05, 2.6541000000001452e-05, 2.6944000000000967e-05, 2.7347999999999956e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.6555000000001022e-05, 2.7388999999999192e-05, 2.7429999999998428e-05, 2.695900000000001e-05, 2.6541999999997457e-05, 2.694500000000044e-05, 2.6471999999999607e-05, 2.6542000000000926e-05, 2.6888999999998692e-05, 2.7361000000000052e-05, 2.6541000000001452e-05, 2.6958000000000537e-05, 2.6943999999997498e-05, 2.6485999999999177e-05, 2.6540999999997983e-05, 2.6972000000000107e-05, 2.693100000000087e-05, 2.6944000000000967e-05, 2.695900000000001e-05, 2.6570000000000066e-05, 2.7347000000000482e-05, 2.6958000000000537e-05, 2.6570000000000066e-05, 2.695900000000001e-05, 2.6556000000000496e-05, 2.6958000000000537e-05, 2.698699999999915e-05]</msg>
<status status="PASS" starttime="20201115 23:03:02.758" endtime="20201115 23:03:02.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.753" endtime="20201115 23:03:02.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.762" endtime="20201115 23:03:02.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:02.766" endtime="20201115 23:03:02.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.764" endtime="20201115 23:03:02.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.761" endtime="20201115 23:03:02.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.397" endtime="20201115 23:03:02.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.395" endtime="20201115 23:03:02.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.394" endtime="20201115 23:03:02.787"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.789" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.798" endtime="20201115 23:03:02.812"></status>
</kw>
<msg timestamp="20201115 23:03:02.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.796" endtime="20201115 23:03:02.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:02.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:02.814" endtime="20201115 23:03:02.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.816" endtime="20201115 23:03:02.818"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.793" endtime="20201115 23:03:02.819"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.791" endtime="20201115 23:03:02.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:02.825" endtime="20201115 23:03:03.113"></status>
</kw>
<msg timestamp="20201115 23:03:03.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:02.824" endtime="20201115 23:03:03.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.117" endtime="20201115 23:03:03.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.126" endtime="20201115 23:03:03.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.821" endtime="20201115 23:03:03.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.820" endtime="20201115 23:03:03.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.133" level="INFO">${RESULT} = [{'time': 0.022251486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8152999999999512e-05, 'source_diff': 2.8152999999999512e-05}, {'time': 0.022281556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:03.130" endtime="20201115 23:03:03.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:03.148" level="INFO">${ACCURACY} = {'source_diff': [2.8152999999999512e-05, 2.7347999999999956e-05, 2.7763999999999567e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.7776999999999663e-05, 2.737500000000309e-05, 2.81529999999995...</msg>
<status status="PASS" starttime="20201115 23:03:03.134" endtime="20201115 23:03:03.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.153" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:03:03.152" endtime="20201115 23:03:03.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.155" level="INFO">VALUE: [2.8152999999999512e-05, 2.7347999999999956e-05, 2.7763999999999567e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.7776999999999663e-05, 2.737500000000309e-05, 2.8152999999999512e-05, 2.7735999999996958e-05, 2.8152999999999512e-05, 2.770900000000076e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7374999999999622e-05, 2.8179999999999178e-05, 2.818099999999865e-05, 2.822300000000083e-05, 2.7818999999998373e-05, 2.8125000000000372e-05, 2.8152999999999512e-05, 2.8250000000000497e-05, 2.7736000000000427e-05, 2.816699999999908e-05, 2.816700000000255e-05, 2.7361000000000052e-05, 2.7763000000000093e-05, 2.8179999999999178e-05, 2.7361000000000052e-05, 2.7347000000000482e-05, 2.7763999999999567e-05, 2.7374999999999622e-05, 2.7361999999999526e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7347000000000482e-05, 2.7763999999999567e-05, 2.7763999999999567e-05, 2.7333000000000912e-05, 2.815300000000298e-05, 2.7778000000002606e-05, 2.7778000000002606e-05, 2.7763000000000093e-05, 2.7805999999998277e-05, 2.7736000000000427e-05, 2.8235999999997458e-05, 2.8180000000002647e-05, 2.7361000000000052e-05, 2.818100000000212e-05, 2.7749999999999997e-05, 2.816699999999908e-05]</msg>
<status status="PASS" starttime="20201115 23:03:03.154" endtime="20201115 23:03:03.156"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.149" endtime="20201115 23:03:03.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.158" endtime="20201115 23:03:03.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:03.162" endtime="20201115 23:03:03.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.160" endtime="20201115 23:03:03.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.157" endtime="20201115 23:03:03.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.790" endtime="20201115 23:03:03.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.788" endtime="20201115 23:03:03.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:02.787" endtime="20201115 23:03:03.183"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.185" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.194" endtime="20201115 23:03:03.209"></status>
</kw>
<msg timestamp="20201115 23:03:03.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.192" endtime="20201115 23:03:03.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.210" endtime="20201115 23:03:03.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.213" endtime="20201115 23:03:03.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.190" endtime="20201115 23:03:03.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.187" endtime="20201115 23:03:03.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.222" endtime="20201115 23:03:03.507"></status>
</kw>
<msg timestamp="20201115 23:03:03.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.220" endtime="20201115 23:03:03.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.512" endtime="20201115 23:03:03.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.520" endtime="20201115 23:03:03.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.218" endtime="20201115 23:03:03.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.216" endtime="20201115 23:03:03.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.527" level="INFO">${RESULT} = [{'time': 0.022106722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8999999999997778e-05, 'source_diff': 2.8999999999997778e-05}, {'time': 0.022138, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:03.523" endtime="20201115 23:03:03.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:03.540" level="INFO">${ACCURACY} = {'source_diff': [2.8999999999997778e-05, 2.8556000000002496e-05, 2.820899999999779e-05, 2.8597000000001732e-05, 2.8971999999998638e-05, 2.8986000000001677e-05, 2.8624999999997403e-05, 2.85140000000003...</msg>
<status status="PASS" starttime="20201115 23:03:03.528" endtime="20201115 23:03:03.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.545" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:03:03.544" endtime="20201115 23:03:03.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.548" level="INFO">VALUE: [2.8999999999997778e-05, 2.8556000000002496e-05, 2.820899999999779e-05, 2.8597000000001732e-05, 2.8971999999998638e-05, 2.8986000000001677e-05, 2.8624999999997403e-05, 2.8514000000000317e-05, 2.8584000000001636e-05, 2.8985999999998208e-05, 2.8986000000001677e-05, 2.8999999999997778e-05, 2.9389000000001192e-05, 2.8597000000001732e-05, 2.8985999999998208e-05, 2.8985999999998208e-05, 2.8568999999999123e-05, 2.8570000000002066e-05, 2.8570000000002066e-05, 2.9388999999997723e-05, 2.9389000000001192e-05, 2.8541999999999457e-05, 2.8499999999997278e-05, 2.8610999999997833e-05, 2.8929999999999928e-05, 2.8985999999998208e-05, 2.9388999999997723e-05, 2.8639000000000442e-05, 2.8971999999998638e-05, 2.9361000000002052e-05, 2.9360999999998583e-05, 2.8986000000001677e-05, 2.8582999999998693e-05, 2.8597000000001732e-05, 2.9000000000001247e-05, 2.816699999999908e-05, 2.8986000000001677e-05, 2.8527999999999887e-05, 2.8568999999999123e-05, 2.9417000000000332e-05, 2.8611000000001302e-05, 2.895900000000201e-05, 2.8611000000001302e-05, 2.9000000000001247e-05, 2.9375000000001622e-05, 2.8555999999999027e-05, 2.8569999999998597e-05, 2.9361000000002052e-05, 2.8568999999999123e-05, 2.8985999999998208e-05]</msg>
<status status="PASS" starttime="20201115 23:03:03.546" endtime="20201115 23:03:03.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.541" endtime="20201115 23:03:03.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.551" endtime="20201115 23:03:03.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:03.554" endtime="20201115 23:03:03.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.553" endtime="20201115 23:03:03.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.549" endtime="20201115 23:03:03.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.186" endtime="20201115 23:03:03.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.184" endtime="20201115 23:03:03.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.183" endtime="20201115 23:03:03.575"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.578" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.586" endtime="20201115 23:03:03.602"></status>
</kw>
<msg timestamp="20201115 23:03:03.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.584" endtime="20201115 23:03:03.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.603" endtime="20201115 23:03:03.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.607" endtime="20201115 23:03:03.608"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.582" endtime="20201115 23:03:03.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.580" endtime="20201115 23:03:03.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.616" endtime="20201115 23:03:03.903"></status>
</kw>
<msg timestamp="20201115 23:03:03.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.614" endtime="20201115 23:03:03.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:03.907" endtime="20201115 23:03:03.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.915" endtime="20201115 23:03:03.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.611" endtime="20201115 23:03:03.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.610" endtime="20201115 23:03:03.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:03.922" level="INFO">${RESULT} = [{'time': 0.022706597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0221999999999888e-05, 'source_diff': 3.0221999999999888e-05}, {'time': 0.022743431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:03.919" endtime="20201115 23:03:03.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:03.936" level="INFO">${ACCURACY} = {'source_diff': [3.0221999999999888e-05, 3.019500000000022e-05, 3.0166000000001608e-05, 3.019399999999728e-05, 2.9403000000000762e-05, 2.9778000000001137e-05, 2.9806000000000277e-05, 2.937499999999815...</msg>
<status status="PASS" starttime="20201115 23:03:03.923" endtime="20201115 23:03:03.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.940" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:03:03.939" endtime="20201115 23:03:03.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.943" level="INFO">VALUE: [3.0221999999999888e-05, 3.019500000000022e-05, 3.0166000000001608e-05, 3.019399999999728e-05, 2.9403000000000762e-05, 2.9778000000001137e-05, 2.9806000000000277e-05, 2.9374999999998153e-05, 2.9791000000001233e-05, 2.9791000000001233e-05, 3.0221999999999888e-05, 2.9790999999997764e-05, 2.9791999999997237e-05, 2.9374999999998153e-05, 3.019500000000022e-05, 2.94309999999999e-05, 2.9806000000000277e-05, 2.938799999999825e-05, 2.9791000000001233e-05, 2.9792000000000707e-05, 3.020899999999979e-05, 2.9860999999999083e-05, 2.9318999999999873e-05, 2.9790999999997764e-05, 2.9792000000000707e-05, 2.9806000000000277e-05, 3.020899999999979e-05, 3.0208000000000318e-05, 2.9778000000001137e-05, 3.019399999999728e-05, 2.9374999999998153e-05, 3.019500000000022e-05, 2.9347999999998486e-05, 3.0180000000001178e-05, 2.9403000000000762e-05, 2.9805000000000803e-05, 2.9375000000001622e-05, 2.9375000000001622e-05, 2.9806000000000277e-05, 3.0194000000000748e-05, 3.0181000000000652e-05, 2.9791000000001233e-05, 3.0194000000000748e-05, 2.9374999999998153e-05, 3.019500000000022e-05, 2.9778000000001137e-05, 2.9721999999999388e-05, 2.9778000000001137e-05, 3.0124999999998903e-05, 2.9791000000001233e-05]</msg>
<status status="PASS" starttime="20201115 23:03:03.941" endtime="20201115 23:03:03.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.936" endtime="20201115 23:03:03.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.946" endtime="20201115 23:03:03.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:03.949" endtime="20201115 23:03:03.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.948" endtime="20201115 23:03:03.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.944" endtime="20201115 23:03:03.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.578" endtime="20201115 23:03:03.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.577" endtime="20201115 23:03:03.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.576" endtime="20201115 23:03:03.971"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:03.982" endtime="20201115 23:03:03.996"></status>
</kw>
<msg timestamp="20201115 23:03:03.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.980" endtime="20201115 23:03:03.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:03.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:03.998" endtime="20201115 23:03:03.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.000" endtime="20201115 23:03:04.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.977" endtime="20201115 23:03:04.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.975" endtime="20201115 23:03:04.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.009" endtime="20201115 23:03:04.296"></status>
</kw>
<msg timestamp="20201115 23:03:04.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022572681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.008" endtime="20201115 23:03:04.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022572681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.300" endtime="20201115 23:03:04.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.309" endtime="20201115 23:03:04.310"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.005" endtime="20201115 23:03:04.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.003" endtime="20201115 23:03:04.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:04.316" level="INFO">${RESULT} = [{'time': 0.022572681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.141700000000233e-05, 'source_diff': 3.141700000000233e-05}, {'time': 0.022609667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:04.312" endtime="20201115 23:03:04.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:04.329" level="INFO">${ACCURACY} = {'source_diff': [3.141700000000233e-05, 3.061099999999983e-05, 3.059700000000026e-05, 3.0611999999999306e-05, 3.099999999999978e-05, 3.055500000000155e-05, 3.0264000000002067e-05, 3.100000000000325e-0...</msg>
<status status="PASS" starttime="20201115 23:03:04.317" endtime="20201115 23:03:04.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.334" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:03:04.333" endtime="20201115 23:03:04.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.336" level="INFO">VALUE: [3.141700000000233e-05, 3.061099999999983e-05, 3.059700000000026e-05, 3.0611999999999306e-05, 3.099999999999978e-05, 3.055500000000155e-05, 3.0264000000002067e-05, 3.100000000000325e-05, 3.059700000000026e-05, 3.065300000000201e-05, 3.0194000000000748e-05, 3.0597999999999737e-05, 3.0167000000001082e-05, 3.102799999999892e-05, 3.095800000000107e-05, 3.099999999999978e-05, 3.14310000000019e-05, 3.141699999999886e-05, 3.136100000000058e-05, 3.059700000000026e-05, 3.137499999999668e-05, 3.138899999999972e-05, 3.09449999999975e-05, 3.06110000000033e-05, 3.059700000000026e-05, 3.102800000000239e-05, 3.092999999999846e-05, 3.099999999999978e-05, 3.104199999999849e-05, 3.0597999999999737e-05, 3.059700000000026e-05, 3.101399999999935e-05, 3.098600000000021e-05, 3.05700000000006e-05, 3.140299999999929e-05, 3.061099999999983e-05, 3.137499999999668e-05, 3.0597999999999737e-05, 3.101399999999935e-05, 3.1348000000000487e-05, 3.059700000000026e-05, 3.0596999999996793e-05, 3.102799999999892e-05, 3.0514000000002317e-05, 3.140299999999929e-05, 3.099999999999978e-05, 3.020899999999979e-05, 3.095800000000107e-05, 3.059700000000026e-05, 3.099999999999978e-05]</msg>
<status status="PASS" starttime="20201115 23:03:04.335" endtime="20201115 23:03:04.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.330" endtime="20201115 23:03:04.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.339" endtime="20201115 23:03:04.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:04.343" endtime="20201115 23:03:04.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.341" endtime="20201115 23:03:04.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.338" endtime="20201115 23:03:04.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.973" endtime="20201115 23:03:04.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.972" endtime="20201115 23:03:04.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:03.971" endtime="20201115 23:03:04.365"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.367" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.375" endtime="20201115 23:03:04.390"></status>
</kw>
<msg timestamp="20201115 23:03:04.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.374" endtime="20201115 23:03:04.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.391" endtime="20201115 23:03:04.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.394" endtime="20201115 23:03:04.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.371" endtime="20201115 23:03:04.396"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.369" endtime="20201115 23:03:04.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.403" endtime="20201115 23:03:04.689"></status>
</kw>
<msg timestamp="20201115 23:03:04.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.402" endtime="20201115 23:03:04.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:04.694" endtime="20201115 23:03:04.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.702" endtime="20201115 23:03:04.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.399" endtime="20201115 23:03:04.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.397" endtime="20201115 23:03:04.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:04.709" level="INFO">${RESULT} = [{'time': 0.022557236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179200000000271e-05, 'source_diff': 3.179200000000271e-05}, {'time': 0.022593889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:04.705" endtime="20201115 23:03:04.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:04.724" level="INFO">${ACCURACY} = {'source_diff': [3.179200000000271e-05, 3.141699999999886e-05, 3.222200000000189e-05, 3.180599999999881e-05, 3.181999999999838e-05, 3.141599999999939e-05, 3.1832999999998474e-05, 3.177799999999967e-05...</msg>
<status status="PASS" starttime="20201115 23:03:04.710" endtime="20201115 23:03:04.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.729" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:03:04.728" endtime="20201115 23:03:04.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.731" level="INFO">VALUE: [3.179200000000271e-05, 3.141699999999886e-05, 3.222200000000189e-05, 3.180599999999881e-05, 3.181999999999838e-05, 3.141599999999939e-05, 3.1832999999998474e-05, 3.177799999999967e-05, 3.179200000000271e-05, 3.140299999999929e-05, 3.223599999999799e-05, 3.138899999999972e-05, 3.179200000000271e-05, 3.181999999999838e-05, 3.1832999999998474e-05, 3.141699999999886e-05, 3.141699999999886e-05, 3.222300000000136e-05, 3.140300000000276e-05, 3.180600000000228e-05, 3.182000000000185e-05, 3.1804999999999334e-05, 3.1804999999999334e-05, 3.225000000000103e-05, 3.223600000000146e-05, 3.217999999999971e-05, 3.1818999999998904e-05, 3.141699999999886e-05, 3.180599999999881e-05, 3.219500000000222e-05, 3.180599999999881e-05, 3.222200000000189e-05, 3.223600000000146e-05, 3.140299999999929e-05, 3.141699999999886e-05, 3.138899999999972e-05, 3.1818999999998904e-05, 3.1790999999999764e-05, 3.180599999999881e-05, 3.220799999999885e-05, 3.141700000000233e-05, 3.180600000000228e-05, 3.1846999999998044e-05, 3.222199999999842e-05, 3.222300000000136e-05, 3.220899999999832e-05, 3.213900000000047e-05, 3.140300000000276e-05, 3.222299999999789e-05, 3.184700000000151e-05]</msg>
<status status="PASS" starttime="20201115 23:03:04.730" endtime="20201115 23:03:04.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.725" endtime="20201115 23:03:04.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.735" endtime="20201115 23:03:04.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:04.738" endtime="20201115 23:03:04.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.737" endtime="20201115 23:03:04.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.733" endtime="20201115 23:03:04.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.368" endtime="20201115 23:03:04.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.366" endtime="20201115 23:03:04.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.365" endtime="20201115 23:03:04.759"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.770" endtime="20201115 23:03:04.786"></status>
</kw>
<msg timestamp="20201115 23:03:04.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.768" endtime="20201115 23:03:04.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:04.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:04.788" endtime="20201115 23:03:04.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.790" endtime="20201115 23:03:04.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.766" endtime="20201115 23:03:04.792"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.764" endtime="20201115 23:03:04.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:04.799" endtime="20201115 23:03:05.085"></status>
</kw>
<msg timestamp="20201115 23:03:05.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:04.798" endtime="20201115 23:03:05.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02267475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:05.089" endtime="20201115 23:03:05.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.097" endtime="20201115 23:03:05.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.795" endtime="20201115 23:03:05.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.793" endtime="20201115 23:03:05.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:05.104" level="INFO">${RESULT} = [{'time': 0.02267475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347199999999967e-05, 'source_diff': 3.347199999999967e-05}, {'time': 0.022712458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:05.101" endtime="20201115 23:03:05.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.118" level="INFO">${ACCURACY} = {'source_diff': [3.347199999999967e-05, 3.3027000000001444e-05, 3.344400000000053e-05, 3.302800000000092e-05, 3.301399999999788e-05, 3.301399999999788e-05, 3.2624999999997933e-05, 3.220800000000232e-0...</msg>
<status status="PASS" starttime="20201115 23:03:05.105" endtime="20201115 23:03:05.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.122" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.121" endtime="20201115 23:03:05.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.125" level="INFO">VALUE: [3.347199999999967e-05, 3.3027000000001444e-05, 3.344400000000053e-05, 3.302800000000092e-05, 3.301399999999788e-05, 3.301399999999788e-05, 3.2624999999997933e-05, 3.220800000000232e-05, 3.26250000000014e-05, 3.2596999999998794e-05, 3.26250000000014e-05, 3.3027000000001444e-05, 3.3027000000001444e-05, 3.2624999999997933e-05, 3.261100000000183e-05, 3.3027000000001444e-05, 3.265300000000054e-05, 3.3082999999999724e-05, 3.301399999999788e-05, 3.299999999999831e-05, 3.26250000000014e-05, 3.3012999999998405e-05, 3.302800000000092e-05, 3.2610999999998364e-05, 3.26250000000014e-05, 3.343100000000043e-05, 3.301400000000135e-05, 3.298600000000221e-05, 3.26250000000014e-05, 3.2624999999997933e-05, 3.2624999999997933e-05, 3.302800000000092e-05, 3.26250000000014e-05, 3.301400000000135e-05, 3.266700000000011e-05, 3.2624999999997933e-05, 3.2624999999997933e-05, 3.26250000000014e-05, 3.259799999999827e-05, 3.255600000000303e-05, 3.222199999999842e-05, 3.304200000000049e-05, 3.26250000000014e-05, 3.265200000000107e-05, 3.2610999999998364e-05, 3.258300000000269e-05, 3.223599999999799e-05, 3.3027000000001444e-05, 3.2610999999998364e-05, 3.269499999999925e-05]</msg>
<status status="PASS" starttime="20201115 23:03:05.123" endtime="20201115 23:03:05.126"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.119" endtime="20201115 23:03:05.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.128" endtime="20201115 23:03:05.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.132" endtime="20201115 23:03:05.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.130" endtime="20201115 23:03:05.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.127" endtime="20201115 23:03:05.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.762" endtime="20201115 23:03:05.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.760" endtime="20201115 23:03:05.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:04.760" endtime="20201115 23:03:05.153"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.156" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.164" endtime="20201115 23:03:05.179"></status>
</kw>
<msg timestamp="20201115 23:03:05.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.162" endtime="20201115 23:03:05.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.181" endtime="20201115 23:03:05.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.184" endtime="20201115 23:03:05.185"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.160" endtime="20201115 23:03:05.186"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.158" endtime="20201115 23:03:05.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.193" endtime="20201115 23:03:05.479"></status>
</kw>
<msg timestamp="20201115 23:03:05.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.191" endtime="20201115 23:03:05.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022201083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.483" endtime="20201115 23:03:05.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.492" endtime="20201115 23:03:05.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.188" endtime="20201115 23:03:05.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.187" endtime="20201115 23:03:05.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:05.498" level="INFO">${RESULT} = [{'time': 0.022201083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.424999999999956e-05, 'source_diff': 3.424999999999956e-05}, {'time': 0.022237875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:05.495" endtime="20201115 23:03:05.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.512" level="INFO">${ACCURACY} = {'source_diff': [3.424999999999956e-05, 3.377800000000167e-05, 3.423599999999999e-05, 3.423599999999999e-05, 3.3860999999999614e-05, 3.344400000000053e-05, 3.343100000000043e-05, 3.420900000000032e-05...</msg>
<status status="PASS" starttime="20201115 23:03:05.500" endtime="20201115 23:03:05.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.517" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.516" endtime="20201115 23:03:05.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.519" level="INFO">VALUE: [3.424999999999956e-05, 3.377800000000167e-05, 3.423599999999999e-05, 3.423599999999999e-05, 3.3860999999999614e-05, 3.344400000000053e-05, 3.343100000000043e-05, 3.420900000000032e-05, 3.3445e-05, 3.423599999999999e-05, 3.3833000000000474e-05, 3.3833000000000474e-05, 3.341700000000086e-05, 3.383399999999995e-05, 3.423599999999999e-05, 3.3819000000000904e-05, 3.3833000000000474e-05, 3.424999999999956e-05, 3.42640000000026e-05, 3.419399999999781e-05, 3.382000000000038e-05, 3.3860999999999614e-05, 3.3832999999997004e-05, 3.4276999999999225e-05, 3.3833000000000474e-05, 3.3860999999999614e-05, 3.426399999999913e-05, 3.384799999999952e-05, 3.3847000000000044e-05, 3.4262999999999655e-05, 3.379200000000124e-05, 3.343000000000096e-05, 3.3874999999999184e-05, 3.343100000000043e-05, 3.3833000000000474e-05, 3.341700000000086e-05, 3.418100000000118e-05, 3.424999999999956e-05, 3.343100000000043e-05, 3.3818999999997434e-05, 3.420799999999738e-05, 3.382000000000038e-05, 3.384799999999952e-05, 3.3833000000000474e-05, 3.424999999999956e-05, 3.343100000000043e-05, 3.344400000000053e-05, 3.342999999999749e-05, 3.426399999999913e-05, 3.423599999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:03:05.518" endtime="20201115 23:03:05.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.513" endtime="20201115 23:03:05.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.523" endtime="20201115 23:03:05.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.526" endtime="20201115 23:03:05.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.524" endtime="20201115 23:03:05.546"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.521" endtime="20201115 23:03:05.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.156" endtime="20201115 23:03:05.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.154" endtime="20201115 23:03:05.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.153" endtime="20201115 23:03:05.547"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.550" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.558" endtime="20201115 23:03:05.573"></status>
</kw>
<msg timestamp="20201115 23:03:05.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.556" endtime="20201115 23:03:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.575" endtime="20201115 23:03:05.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.577" endtime="20201115 23:03:05.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.554" endtime="20201115 23:03:05.580"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.552" endtime="20201115 23:03:05.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.586" endtime="20201115 23:03:05.874"></status>
</kw>
<msg timestamp="20201115 23:03:05.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.585" endtime="20201115 23:03:05.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022045694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.878" endtime="20201115 23:03:05.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.893" endtime="20201115 23:03:05.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.582" endtime="20201115 23:03:05.895"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.581" endtime="20201115 23:03:05.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:05.900" level="INFO">${RESULT} = [{'time': 0.022089347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3652999999997666e-05, 'source_diff': 4.3652999999997666e-05}, {'time': 0.022138361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:05.896" endtime="20201115 23:03:05.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:05.913" level="INFO">${ACCURACY} = {'source_diff': [4.3652999999997666e-05, 4.3624999999998526e-05, 4.3917000000000955e-05, 4.452799999999854e-05, 4.388799999999887e-05, 4.397199999999976e-05, 4.450000000000287e-05, 4.379199999999736e-...</msg>
<status status="PASS" starttime="20201115 23:03:05.901" endtime="20201115 23:03:05.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.918" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:03:05.917" endtime="20201115 23:03:05.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.920" level="INFO">VALUE: [4.3652999999997666e-05, 4.3624999999998526e-05, 4.3917000000000955e-05, 4.452799999999854e-05, 4.388799999999887e-05, 4.397199999999976e-05, 4.450000000000287e-05, 4.379199999999736e-05, 4.397199999999976e-05, 4.377799999999779e-05, 4.457000000000072e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.366600000000123e-05, 4.454200000000158e-05, 4.3624999999998526e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.4124999999999026e-05, 4.377700000000179e-05, 4.36939999999969e-05, 4.3903000000001385e-05, 4.44999999999994e-05, 4.4124999999999026e-05, 4.3624999999998526e-05, 4.454200000000158e-05, 4.4194999999996876e-05, 4.454199999999811e-05, 4.404200000000108e-05, 4.4417000000001455e-05, 4.3902999999997916e-05, 4.3709000000002884e-05, 4.3917000000000955e-05, 4.454200000000158e-05, 4.409799999999936e-05, 4.4195000000000345e-05, 4.361199999999843e-05, 4.455600000000115e-05, 4.4124999999999026e-05, 4.4096999999999886e-05, 4.390200000000191e-05, 4.372200000000298e-05, 4.4124999999999026e-05, 4.395800000000019e-05, 4.379099999999789e-05, 4.3625000000001996e-05, 4.4402999999998416e-05, 4.405499999999771e-05, 4.4569000000001247e-05, 4.4124999999999026e-05]</msg>
<status status="PASS" starttime="20201115 23:03:05.919" endtime="20201115 23:03:05.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.914" endtime="20201115 23:03:05.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.924" endtime="20201115 23:03:05.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:05.927" endtime="20201115 23:03:05.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.925" endtime="20201115 23:03:05.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.922" endtime="20201115 23:03:05.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.550" endtime="20201115 23:03:05.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.548" endtime="20201115 23:03:05.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.548" endtime="20201115 23:03:05.948"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.951" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.959" endtime="20201115 23:03:05.975"></status>
</kw>
<msg timestamp="20201115 23:03:05.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.957" endtime="20201115 23:03:05.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:05.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:05.977" endtime="20201115 23:03:05.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.979" endtime="20201115 23:03:05.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.955" endtime="20201115 23:03:05.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.953" endtime="20201115 23:03:05.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:05.989" endtime="20201115 23:03:06.276"></status>
</kw>
<msg timestamp="20201115 23:03:06.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:05.987" endtime="20201115 23:03:06.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.280" endtime="20201115 23:03:06.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.289" endtime="20201115 23:03:06.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.984" endtime="20201115 23:03:06.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.982" endtime="20201115 23:03:06.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:06.296" level="INFO">${RESULT} = [{'time': 0.022157514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4833000000001066e-05, 'source_diff': 4.4833000000001066e-05}, {'time': 0.022207528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:06.292" endtime="20201115 23:03:06.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:06.311" level="INFO">${ACCURACY} = {'source_diff': [4.4833000000001066e-05, 4.4861000000000206e-05, 4.5139000000003066e-05, 4.5180999999998306e-05, 4.520800000000144e-05, 4.501400000000294e-05, 4.556999999999825e-05, 4.531899999999853e...</msg>
<status status="PASS" starttime="20201115 23:03:06.297" endtime="20201115 23:03:06.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.315" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:03:06.314" endtime="20201115 23:03:06.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.318" level="INFO">VALUE: [4.4833000000001066e-05, 4.4861000000000206e-05, 4.5139000000003066e-05, 4.5180999999998306e-05, 4.520800000000144e-05, 4.501400000000294e-05, 4.556999999999825e-05, 4.531899999999853e-05, 4.5138999999999596e-05, 4.49999999999999e-05, 4.4833000000001066e-05, 4.4624999999999526e-05, 4.541599999999951e-05, 4.547199999999779e-05, 4.48329999999976e-05, 4.5333000000001566e-05, 4.4847000000000636e-05, 4.469400000000137e-05, 4.5319000000001997e-05, 4.55000000000004e-05, 4.526399999999972e-05, 4.522200000000101e-05, 4.527799999999929e-05, 4.4833000000001066e-05, 4.497200000000076e-05, 4.4916999999998486e-05, 4.4945000000001095e-05, 4.5125000000000026e-05, 4.497200000000076e-05, 4.4624999999999526e-05, 4.4973000000000235e-05, 4.4903000000002385e-05, 4.551399999999997e-05, 4.504200000000208e-05, 4.497200000000076e-05, 4.4667000000001705e-05, 4.5125000000000026e-05, 4.4624999999999526e-05, 4.519400000000187e-05, 4.4847000000000636e-05, 4.4624999999999526e-05, 4.476399999999922e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.505600000000165e-05, 4.5416999999998986e-05, 4.545799999999822e-05, 4.4861000000000206e-05, 4.476400000000269e-05, 4.534699999999767e-05]</msg>
<status status="PASS" starttime="20201115 23:03:06.316" endtime="20201115 23:03:06.318"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.312" endtime="20201115 23:03:06.319"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.321" endtime="20201115 23:03:06.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:06.325" endtime="20201115 23:03:06.345"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.323" endtime="20201115 23:03:06.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.319" endtime="20201115 23:03:06.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.951" endtime="20201115 23:03:06.346"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.949" endtime="20201115 23:03:06.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:05.949" endtime="20201115 23:03:06.347"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.349" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.357" endtime="20201115 23:03:06.373"></status>
</kw>
<msg timestamp="20201115 23:03:06.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.356" endtime="20201115 23:03:06.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.374" endtime="20201115 23:03:06.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.377" endtime="20201115 23:03:06.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.353" endtime="20201115 23:03:06.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.351" endtime="20201115 23:03:06.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.387" endtime="20201115 23:03:06.673"></status>
</kw>
<msg timestamp="20201115 23:03:06.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.385" endtime="20201115 23:03:06.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.677" endtime="20201115 23:03:06.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.686" endtime="20201115 23:03:06.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.382" endtime="20201115 23:03:06.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.381" endtime="20201115 23:03:06.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:06.692" level="INFO">${RESULT} = [{'time': 0.022412028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6097000000001886e-05, 'source_diff': 4.6097000000001886e-05}, {'time': 0.022462042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:06.689" endtime="20201115 23:03:06.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:06.706" level="INFO">${ACCURACY} = {'source_diff': [4.6097000000001886e-05, 4.634800000000161e-05, 4.597200000000176e-05, 4.6430999999999556e-05, 4.569400000000237e-05, 4.584699999999817e-05, 4.5987000000000805e-05, 4.6139000000000596e...</msg>
<status status="PASS" starttime="20201115 23:03:06.693" endtime="20201115 23:03:06.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.711" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:03:06.710" endtime="20201115 23:03:06.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.713" level="INFO">VALUE: [4.6097000000001886e-05, 4.634800000000161e-05, 4.597200000000176e-05, 4.6430999999999556e-05, 4.569400000000237e-05, 4.584699999999817e-05, 4.5987000000000805e-05, 4.6139000000000596e-05, 4.5930999999999056e-05, 4.631899999999953e-05, 4.5861000000001206e-05, 4.6125000000001026e-05, 4.591600000000001e-05, 4.576400000000022e-05, 4.558299999999835e-05, 4.56939999999989e-05, 4.611099999999799e-05, 4.648599999999836e-05, 4.597200000000176e-05, 4.581899999999903e-05, 4.604199999999961e-05, 4.632000000000247e-05, 4.633399999999857e-05, 4.5694999999998376e-05, 4.599999999999743e-05, 4.584799999999764e-05, 4.6111000000001456e-05, 4.626399999999725e-05, 4.6472999999998266e-05, 4.627699999999735e-05, 4.655500000000021e-05, 4.652700000000107e-05, 4.5625000000000526e-05, 4.562499999999706e-05, 4.656899999999978e-05, 4.56939999999989e-05, 4.627800000000029e-05, 4.61939999999994e-05, 4.5875000000000776e-05, 4.597200000000176e-05, 4.570800000000194e-05, 4.597200000000176e-05, 4.654200000000011e-05, 4.5625000000000526e-05, 4.634799999999814e-05, 4.573600000000108e-05, 4.583399999999807e-05, 4.561099999999749e-05, 4.5916999999999486e-05, 4.586200000000068e-05]</msg>
<status status="PASS" starttime="20201115 23:03:06.712" endtime="20201115 23:03:06.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.707" endtime="20201115 23:03:06.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.716" endtime="20201115 23:03:06.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:06.720" endtime="20201115 23:03:06.739"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.718" endtime="20201115 23:03:06.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.715" endtime="20201115 23:03:06.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.350" endtime="20201115 23:03:06.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.348" endtime="20201115 23:03:06.741"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.347" endtime="20201115 23:03:06.741"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.743" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.752" endtime="20201115 23:03:06.769"></status>
</kw>
<msg timestamp="20201115 23:03:06.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.750" endtime="20201115 23:03:06.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:06.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:06.770" endtime="20201115 23:03:06.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.773" endtime="20201115 23:03:06.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.748" endtime="20201115 23:03:06.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.745" endtime="20201115 23:03:06.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:06.782" endtime="20201115 23:03:07.069"></status>
</kw>
<msg timestamp="20201115 23:03:07.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:06.780" endtime="20201115 23:03:07.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.073" endtime="20201115 23:03:07.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.081" endtime="20201115 23:03:07.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.778" endtime="20201115 23:03:07.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.776" endtime="20201115 23:03:07.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.088" level="INFO">${RESULT} = [{'time': 0.022599444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.690200000000144e-05, 'source_diff': 4.690200000000144e-05}, {'time': 0.022648458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:07.085" endtime="20201115 23:03:07.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.102" level="INFO">${ACCURACY} = {'source_diff': [4.690200000000144e-05, 4.676400000000122e-05, 4.697200000000276e-05, 4.66939999999999e-05, 4.705500000000071e-05, 4.749999999999893e-05, 4.68060000000034e-05, 4.66939999999999e-05, 4....</msg>
<status status="PASS" starttime="20201115 23:03:07.089" endtime="20201115 23:03:07.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.106" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.105" endtime="20201115 23:03:07.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.109" level="INFO">VALUE: [4.690200000000144e-05, 4.676400000000122e-05, 4.697200000000276e-05, 4.66939999999999e-05, 4.705500000000071e-05, 4.749999999999893e-05, 4.68060000000034e-05, 4.66939999999999e-05, 4.662499999999806e-05, 4.662499999999806e-05, 4.722200000000301e-05, 4.662499999999806e-05, 4.730600000000043e-05, 4.6944999999999626e-05, 4.6695000000002845e-05, 4.713899999999813e-05, 4.726400000000172e-05, 4.679100000000089e-05, 4.726299999999878e-05, 4.711099999999899e-05, 4.761099999999949e-05, 4.731900000000053e-05, 4.674999999999818e-05, 4.748599999999936e-05, 4.729199999999739e-05, 4.7125000000002026e-05, 4.726399999999825e-05, 4.677799999999732e-05, 4.745800000000022e-05, 4.762499999999906e-05, 4.748599999999936e-05, 4.677800000000079e-05, 4.75000000000024e-05, 4.726399999999825e-05, 4.713899999999813e-05, 4.740299999999795e-05, 4.7111000000002456e-05, 4.738899999999838e-05, 4.734799999999914e-05, 4.7194999999999876e-05, 4.690200000000144e-05, 4.734699999999967e-05, 4.723599999999911e-05, 4.68329999999996e-05, 4.756900000000078e-05, 4.672199999999904e-05, 4.690299999999745e-05, 4.718000000000083e-05, 4.686099999999874e-05, 4.676399999999775e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.107" endtime="20201115 23:03:07.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.102" endtime="20201115 23:03:07.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.112" endtime="20201115 23:03:07.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.115" endtime="20201115 23:03:07.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.114" endtime="20201115 23:03:07.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.110" endtime="20201115 23:03:07.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.744" endtime="20201115 23:03:07.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.742" endtime="20201115 23:03:07.137"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:06.741" endtime="20201115 23:03:07.137"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.139" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.148" endtime="20201115 23:03:07.163"></status>
</kw>
<msg timestamp="20201115 23:03:07.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.146" endtime="20201115 23:03:07.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.165" endtime="20201115 23:03:07.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.168" endtime="20201115 23:03:07.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.143" endtime="20201115 23:03:07.170"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.141" endtime="20201115 23:03:07.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.177" endtime="20201115 23:03:07.463"></status>
</kw>
<msg timestamp="20201115 23:03:07.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.175" endtime="20201115 23:03:07.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.467" endtime="20201115 23:03:07.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.475" endtime="20201115 23:03:07.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.172" endtime="20201115 23:03:07.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.171" endtime="20201115 23:03:07.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.482" level="INFO">${RESULT} = [{'time': 0.022290569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.811099999999999e-05, 'source_diff': 4.811099999999999e-05}, {'time': 0.022341569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:07.479" endtime="20201115 23:03:07.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.496" level="INFO">${ACCURACY} = {'source_diff': [4.811099999999999e-05, 4.776299999999928e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.798599999999986e-05, 4.826399999999925e-05, 4.762499999999906e-05, 4.826399999999925e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:07.483" endtime="20201115 23:03:07.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.500" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.499" endtime="20201115 23:03:07.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.503" level="INFO">VALUE: [4.811099999999999e-05, 4.776299999999928e-05, 4.784700000000017e-05, 4.78330000000006e-05, 4.798599999999986e-05, 4.826399999999925e-05, 4.762499999999906e-05, 4.826399999999925e-05, 4.813899999999913e-05, 4.83330000000011e-05, 4.777800000000179e-05, 4.7694999999996907e-05, 4.8417000000001986e-05, 4.786099999999974e-05, 4.7695000000000376e-05, 4.7695000000000376e-05, 4.787499999999931e-05, 4.78200000000005e-05, 4.854200000000211e-05, 4.7694999999996907e-05, 4.854199999999864e-05, 4.786099999999974e-05, 4.812499999999956e-05, 4.786099999999974e-05, 4.804100000000214e-05, 4.792999999999811e-05, 4.783299999999713e-05, 4.81940000000014e-05, 4.76940000000009e-05, 4.83330000000011e-05, 4.812499999999956e-05, 4.791699999999802e-05, 4.820800000000097e-05, 4.7695000000000376e-05, 4.840299999999895e-05, 4.7681000000000806e-05, 4.804199999999814e-05, 4.855600000000168e-05, 4.8195000000000876e-05, 4.856899999999831e-05, 4.812499999999956e-05, 4.777700000000232e-05, 4.83469999999972e-05, 4.845799999999775e-05, 4.856899999999831e-05, 4.784700000000017e-05, 4.777799999999832e-05, 4.8139000000002596e-05, 4.838899999999938e-05, 4.812499999999956e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.501" endtime="20201115 23:03:07.503"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.496" endtime="20201115 23:03:07.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.506" endtime="20201115 23:03:07.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.510" endtime="20201115 23:03:07.529"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.508" endtime="20201115 23:03:07.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.505" endtime="20201115 23:03:07.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.140" endtime="20201115 23:03:07.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.138" endtime="20201115 23:03:07.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.137" endtime="20201115 23:03:07.531"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.533" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.542" endtime="20201115 23:03:07.559"></status>
</kw>
<msg timestamp="20201115 23:03:07.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.540" endtime="20201115 23:03:07.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.560" endtime="20201115 23:03:07.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.563" endtime="20201115 23:03:07.564"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.537" endtime="20201115 23:03:07.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.535" endtime="20201115 23:03:07.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.572" endtime="20201115 23:03:07.859"></status>
</kw>
<msg timestamp="20201115 23:03:07.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022087139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.571" endtime="20201115 23:03:07.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022087139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.863" endtime="20201115 23:03:07.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.871" endtime="20201115 23:03:07.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.568" endtime="20201115 23:03:07.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.566" endtime="20201115 23:03:07.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:07.878" level="INFO">${RESULT} = [{'time': 0.022087139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.881999999999803e-05, 'source_diff': 4.881999999999803e-05}, {'time': 0.022139153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:07.874" endtime="20201115 23:03:07.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:07.893" level="INFO">${ACCURACY} = {'source_diff': [4.881999999999803e-05, 4.9153000000003166e-05, 4.926400000000025e-05, 4.897200000000129e-05, 4.861100000000049e-05, 4.876399999999975e-05, 4.8709000000000946e-05, 4.955599999999921e-0...</msg>
<status status="PASS" starttime="20201115 23:03:07.879" endtime="20201115 23:03:07.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.898" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:03:07.897" endtime="20201115 23:03:07.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.901" level="INFO">VALUE: [4.881999999999803e-05, 4.9153000000003166e-05, 4.926400000000025e-05, 4.897200000000129e-05, 4.861100000000049e-05, 4.876399999999975e-05, 4.8709000000000946e-05, 4.955599999999921e-05, 4.890299999999945e-05, 4.944499999999866e-05, 4.934700000000167e-05, 4.934700000000167e-05, 4.947200000000179e-05, 4.926400000000025e-05, 4.890199999999997e-05, 4.898600000000086e-05, 4.891599999999954e-05, 4.877799999999932e-05, 4.886100000000074e-05, 4.8903000000002916e-05, 4.883299999999813e-05, 4.8723000000000516e-05, 4.872199999999757e-05, 4.861100000000049e-05, 4.8708999999997477e-05, 4.955599999999921e-05, 4.904199999999914e-05, 4.8972999999997296e-05, 4.876399999999975e-05, 4.941699999999952e-05, 4.861199999999996e-05, 4.895800000000172e-05, 4.933299999999863e-05, 4.942999999999961e-05, 4.91940000000024e-05, 4.925000000000068e-05, 4.941699999999952e-05, 4.876399999999975e-05, 4.891699999999902e-05, 4.913900000000013e-05, 4.941699999999952e-05, 4.877799999999932e-05, 4.86529999999992e-05, 4.898599999999739e-05, 4.931999999999853e-05, 4.883400000000107e-05, 4.891699999999902e-05, 4.887500000000031e-05, 4.931900000000253e-05, 4.905499999999924e-05]</msg>
<status status="PASS" starttime="20201115 23:03:07.899" endtime="20201115 23:03:07.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.894" endtime="20201115 23:03:07.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.904" endtime="20201115 23:03:07.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:07.907" endtime="20201115 23:03:07.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.906" endtime="20201115 23:03:07.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.902" endtime="20201115 23:03:07.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.534" endtime="20201115 23:03:07.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.532" endtime="20201115 23:03:07.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.531" endtime="20201115 23:03:07.929"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.931" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.939" endtime="20201115 23:03:07.957"></status>
</kw>
<msg timestamp="20201115 23:03:07.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.938" endtime="20201115 23:03:07.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:07.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:07.958" endtime="20201115 23:03:07.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.961" endtime="20201115 23:03:07.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.935" endtime="20201115 23:03:07.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.933" endtime="20201115 23:03:07.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:07.970" endtime="20201115 23:03:08.256"></status>
</kw>
<msg timestamp="20201115 23:03:08.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:07.968" endtime="20201115 23:03:08.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.260" endtime="20201115 23:03:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.268" endtime="20201115 23:03:08.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.966" endtime="20201115 23:03:08.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.964" endtime="20201115 23:03:08.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:08.275" level="INFO">${RESULT} = [{'time': 0.022972292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040299999999748e-05, 'source_diff': 5.040299999999748e-05}, {'time': 0.023028292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:08.272" endtime="20201115 23:03:08.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:08.289" level="INFO">${ACCURACY} = {'source_diff': [5.040299999999748e-05, 4.976399999999728e-05, 5.049999999999846e-05, 5.031900000000006e-05, 5.062499999999859e-05, 5.037500000000181e-05, 5.0402000000001473e-05, 5.012499999999809e-05...</msg>
<status status="PASS" starttime="20201115 23:03:08.276" endtime="20201115 23:03:08.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.293" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:03:08.292" endtime="20201115 23:03:08.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.296" level="INFO">VALUE: [5.040299999999748e-05, 4.976399999999728e-05, 5.049999999999846e-05, 5.031900000000006e-05, 5.062499999999859e-05, 5.037500000000181e-05, 5.0402000000001473e-05, 5.012499999999809e-05, 4.963900000000063e-05, 4.970800000000247e-05, 4.990300000000045e-05, 4.998599999999839e-05, 5.026400000000125e-05, 4.963900000000063e-05, 5.034700000000267e-05, 4.997199999999882e-05, 4.9709000000001946e-05, 5.040300000000095e-05, 5.048600000000236e-05, 4.9695000000002376e-05, 5.0445000000003126e-05, 4.977800000000032e-05, 4.987499999999784e-05, 5.004200000000014e-05, 4.975000000000118e-05, 5.018000000000036e-05, 5.036099999999877e-05, 5.03469999999992e-05, 4.990200000000097e-05, 5.049999999999846e-05, 4.977800000000032e-05, 4.972200000000204e-05, 5.019399999999993e-05, 5.020800000000297e-05, 5.022199999999907e-05, 5.055599999999674e-05, 4.991700000000002e-05, 5.055600000000021e-05, 5.050000000000193e-05, 4.991700000000002e-05, 4.963900000000063e-05, 4.976400000000075e-05, 4.965200000000072e-05, 5.049999999999846e-05, 4.990300000000045e-05, 4.961100000000149e-05, 4.987499999999784e-05, 5.055499999999727e-05, 5.031900000000006e-05, 4.958299999999888e-05]</msg>
<status status="PASS" starttime="20201115 23:03:08.295" endtime="20201115 23:03:08.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.290" endtime="20201115 23:03:08.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.299" endtime="20201115 23:03:08.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:08.303" endtime="20201115 23:03:08.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.301" endtime="20201115 23:03:08.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.298" endtime="20201115 23:03:08.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.932" endtime="20201115 23:03:08.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.930" endtime="20201115 23:03:08.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:07.929" endtime="20201115 23:03:08.324"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.326" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.334" endtime="20201115 23:03:08.351"></status>
</kw>
<msg timestamp="20201115 23:03:08.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.333" endtime="20201115 23:03:08.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.352" endtime="20201115 23:03:08.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.355" endtime="20201115 23:03:08.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.330" endtime="20201115 23:03:08.358"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.328" endtime="20201115 23:03:08.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.365" endtime="20201115 23:03:08.653"></status>
</kw>
<msg timestamp="20201115 23:03:08.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.364" endtime="20201115 23:03:08.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.657" endtime="20201115 23:03:08.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.666" endtime="20201115 23:03:08.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.361" endtime="20201115 23:03:08.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.359" endtime="20201115 23:03:08.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:08.673" level="INFO">${RESULT} = [{'time': 0.022222569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1387999999999434e-05, 'source_diff': 5.1387999999999434e-05}, {'time': 0.022276583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:08.669" endtime="20201115 23:03:08.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:08.686" level="INFO">${ACCURACY} = {'source_diff': [5.1387999999999434e-05, 5.056900000000031e-05, 5.0708e-05, 5.086099999999927e-05, 5.080600000000046e-05, 5.10279999999981e-05, 5.061099999999902e-05, 5.102800000000157e-05, 5.12359999...</msg>
<status status="PASS" starttime="20201115 23:03:08.674" endtime="20201115 23:03:08.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.691" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:03:08.690" endtime="20201115 23:03:08.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.693" level="INFO">VALUE: [5.1387999999999434e-05, 5.056900000000031e-05, 5.0708e-05, 5.086099999999927e-05, 5.080600000000046e-05, 5.10279999999981e-05, 5.061099999999902e-05, 5.102800000000157e-05, 5.123599999999964e-05, 5.136099999999977e-05, 5.147200000000032e-05, 5.112499999999909e-05, 5.08469999999997e-05, 5.130599999999749e-05, 5.100000000000243e-05, 5.088899999999841e-05, 5.08339999999996e-05, 5.140300000000195e-05, 5.129100000000192e-05, 5.099999999999896e-05, 5.127699999999888e-05, 5.126299999999931e-05, 5.079099999999795e-05, 5.122200000000007e-05, 5.0708e-05, 5.138900000000238e-05, 5.076399999999828e-05, 5.072199999999957e-05, 5.075000000000218e-05, 5.157000000000078e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.152800000000207e-05, 5.119500000000041e-05, 5.063900000000163e-05, 5.140300000000195e-05, 5.090299999999798e-05, 5.076400000000175e-05, 5.147200000000032e-05, 5.061199999999849e-05, 5.0708e-05, 5.155500000000174e-05, 5.1415999999998574e-05, 5.105500000000124e-05, 5.061099999999902e-05, 5.111099999999952e-05, 5.147200000000032e-05, 5.062499999999859e-05, 5.131899999999759e-05, 5.129199999999792e-05]</msg>
<status status="PASS" starttime="20201115 23:03:08.692" endtime="20201115 23:03:08.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.687" endtime="20201115 23:03:08.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.696" endtime="20201115 23:03:08.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:08.700" endtime="20201115 23:03:08.719"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.698" endtime="20201115 23:03:08.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.695" endtime="20201115 23:03:08.720"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.327" endtime="20201115 23:03:08.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.325" endtime="20201115 23:03:08.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.324" endtime="20201115 23:03:08.721"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.723" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.731" endtime="20201115 23:03:08.747"></status>
</kw>
<msg timestamp="20201115 23:03:08.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.730" endtime="20201115 23:03:08.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:08.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:08.749" endtime="20201115 23:03:08.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.751" endtime="20201115 23:03:08.753"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.727" endtime="20201115 23:03:08.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.725" endtime="20201115 23:03:08.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:08.761" endtime="20201115 23:03:09.048"></status>
</kw>
<msg timestamp="20201115 23:03:09.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:08.759" endtime="20201115 23:03:09.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.052" endtime="20201115 23:03:09.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.060" endtime="20201115 23:03:09.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.756" endtime="20201115 23:03:09.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.755" endtime="20201115 23:03:09.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.067" level="INFO">${RESULT} = [{'time': 0.022065236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.205499999999877e-05, 'source_diff': 5.205499999999877e-05}, {'time': 0.02211925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:03:09.064" endtime="20201115 23:03:09.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.081" level="INFO">${ACCURACY} = {'source_diff': [5.205499999999877e-05, 5.177799999999885e-05, 5.240300000000295e-05, 5.226399999999978e-05, 5.250000000000046e-05, 5.174999999999971e-05, 5.211100000000052e-05, 5.193099999999812e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:09.068" endtime="20201115 23:03:09.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.085" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:03:09.084" endtime="20201115 23:03:09.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.088" level="INFO">VALUE: [5.205499999999877e-05, 5.177799999999885e-05, 5.240300000000295e-05, 5.226399999999978e-05, 5.250000000000046e-05, 5.174999999999971e-05, 5.211100000000052e-05, 5.193099999999812e-05, 5.241700000000252e-05, 5.170900000000048e-05, 5.205600000000171e-05, 5.231899999999859e-05, 5.22080000000015e-05, 5.209699999999748e-05, 5.188899999999941e-05, 5.169400000000143e-05, 5.1915999999999074e-05, 5.1665999999998824e-05, 5.162499999999959e-05, 5.211100000000052e-05, 5.254199999999917e-05, 5.237500000000034e-05, 5.204200000000214e-05, 5.176399999999928e-05, 5.208399999999738e-05, 5.183299999999766e-05, 5.212499999999662e-05, 5.204199999999867e-05, 5.193100000000159e-05, 5.2485999999997424e-05, 5.219500000000141e-05, 5.191700000000202e-05, 5.194400000000168e-05, 5.176299999999981e-05, 5.211100000000052e-05, 5.1901999999999504e-05, 5.230500000000249e-05, 5.22080000000015e-05, 5.255499999999927e-05, 5.222200000000107e-05, 5.225000000000021e-05, 5.166700000000177e-05, 5.1707999999997534e-05, 5.162499999999959e-05, 5.212500000000009e-05, 5.236100000000077e-05, 5.193100000000159e-05, 5.172300000000005e-05, 5.199999999999996e-05, 5.198600000000039e-05]</msg>
<status status="PASS" starttime="20201115 23:03:09.086" endtime="20201115 23:03:09.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.082" endtime="20201115 23:03:09.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.091" endtime="20201115 23:03:09.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:09.094" endtime="20201115 23:03:09.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.093" endtime="20201115 23:03:09.114"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.089" endtime="20201115 23:03:09.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.724" endtime="20201115 23:03:09.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.722" endtime="20201115 23:03:09.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:08.721" endtime="20201115 23:03:09.116"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.118" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.126" endtime="20201115 23:03:09.144"></status>
</kw>
<msg timestamp="20201115 23:03:09.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.125" endtime="20201115 23:03:09.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.145" endtime="20201115 23:03:09.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.148" endtime="20201115 23:03:09.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.122" endtime="20201115 23:03:09.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.120" endtime="20201115 23:03:09.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.157" endtime="20201115 23:03:09.443"></status>
</kw>
<msg timestamp="20201115 23:03:09.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.156" endtime="20201115 23:03:09.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022311347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.448" endtime="20201115 23:03:09.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.456" endtime="20201115 23:03:09.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.153" endtime="20201115 23:03:09.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.151" endtime="20201115 23:03:09.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.463" level="INFO">${RESULT} = [{'time': 0.022311347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.340299999999701e-05, 'source_diff': 5.340299999999701e-05}, {'time': 0.022370347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:09.459" endtime="20201115 23:03:09.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.478" level="INFO">${ACCURACY} = {'source_diff': [5.340299999999701e-05, 5.2916000000000074e-05, 5.330500000000002e-05, 5.33340000000021e-05, 5.2971999999998354e-05, 5.2708000000002e-05, 5.2985999999997924e-05, 5.334699999999873e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:09.464" endtime="20201115 23:03:09.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.482" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:03:09.481" endtime="20201115 23:03:09.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.485" level="INFO">VALUE: [5.340299999999701e-05, 5.2916000000000074e-05, 5.330500000000002e-05, 5.33340000000021e-05, 5.2971999999998354e-05, 5.2708000000002e-05, 5.2985999999997924e-05, 5.334699999999873e-05, 5.318100000000284e-05, 5.318099999999937e-05, 5.313899999999719e-05, 5.33479999999982e-05, 5.269499999999844e-05, 5.34869999999979e-05, 5.2707999999998534e-05, 5.35410000000007e-05, 5.325000000000121e-05, 5.2693999999998964e-05, 5.277799999999985e-05, 5.31669999999998e-05, 5.311100000000152e-05, 5.288900000000041e-05, 5.341700000000005e-05, 5.290299999999998e-05, 5.305599999999924e-05, 5.307000000000228e-05, 5.262500000000059e-05, 5.269500000000191e-05, 5.33470000000022e-05, 5.269500000000191e-05, 5.288900000000041e-05, 5.355599999999974e-05, 5.284699999999823e-05, 5.355599999999974e-05, 5.319499999999894e-05, 5.334699999999873e-05, 5.326300000000131e-05, 5.35549999999968e-05, 5.263900000000016e-05, 5.356899999999984e-05, 5.3457999999999284e-05, 5.2679999999999394e-05, 5.276400000000028e-05, 5.327800000000035e-05, 5.3457999999999284e-05, 5.334699999999873e-05, 5.276400000000028e-05, 5.356999999999931e-05, 5.313900000000066e-05, 5.341700000000005e-05]</msg>
<status status="PASS" starttime="20201115 23:03:09.483" endtime="20201115 23:03:09.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.479" endtime="20201115 23:03:09.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.488" endtime="20201115 23:03:09.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:09.491" endtime="20201115 23:03:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.490" endtime="20201115 23:03:09.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.486" endtime="20201115 23:03:09.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.119" endtime="20201115 23:03:09.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.117" endtime="20201115 23:03:09.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.116" endtime="20201115 23:03:09.513"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.515" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.524" endtime="20201115 23:03:09.541"></status>
</kw>
<msg timestamp="20201115 23:03:09.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.522" endtime="20201115 23:03:09.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.542" endtime="20201115 23:03:09.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.545" endtime="20201115 23:03:09.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.519" endtime="20201115 23:03:09.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.517" endtime="20201115 23:03:09.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.554" endtime="20201115 23:03:09.840"></status>
</kw>
<msg timestamp="20201115 23:03:09.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.552" endtime="20201115 23:03:09.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022674097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.844" endtime="20201115 23:03:09.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.852" endtime="20201115 23:03:09.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.550" endtime="20201115 23:03:09.855"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.548" endtime="20201115 23:03:09.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:09.859" level="INFO">${RESULT} = [{'time': 0.022727806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.370899999999901e-05, 'source_diff': 5.370899999999901e-05}, {'time': 0.022787833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:09.856" endtime="20201115 23:03:09.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:09.873" level="INFO">${ACCURACY} = {'source_diff': [5.370899999999901e-05, 5.3721999999999104e-05, 5.4194000000000464e-05, 5.380500000000052e-05, 5.381900000000009e-05, 5.4499999999998994e-05, 5.456899999999737e-05, 5.38470000000027e-0...</msg>
<status status="PASS" starttime="20201115 23:03:09.860" endtime="20201115 23:03:09.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.877" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:03:09.876" endtime="20201115 23:03:09.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.880" level="INFO">VALUE: [5.370899999999901e-05, 5.3721999999999104e-05, 5.4194000000000464e-05, 5.380500000000052e-05, 5.381900000000009e-05, 5.4499999999998994e-05, 5.456899999999737e-05, 5.38470000000027e-05, 5.4208000000000034e-05, 5.3693999999999964e-05, 5.441699999999758e-05, 5.3693999999999964e-05, 5.405599999999677e-05, 5.444500000000019e-05, 5.393100000000012e-05, 5.362500000000159e-05, 5.426400000000178e-05, 5.454200000000117e-05, 5.44869999999989e-05, 5.4208000000000034e-05, 5.401400000000153e-05, 5.3763999999997814e-05, 5.3929999999997175e-05, 5.4485999999999424e-05, 5.361099999999855e-05, 5.433300000000016e-05, 5.383299999999966e-05, 5.3957999999999784e-05, 5.4208000000000034e-05, 5.454200000000117e-05, 5.4471999999999854e-05, 5.376400000000128e-05, 5.388900000000141e-05, 5.384699999999923e-05, 5.4166000000001324e-05, 5.377800000000085e-05, 5.4263999999998314e-05, 5.440300000000148e-05, 5.384699999999923e-05, 5.4194000000000464e-05, 5.362499999999812e-05, 5.388899999999794e-05, 5.458300000000041e-05, 5.45549999999978e-05, 5.431900000000059e-05, 5.3721999999999104e-05, 5.4208000000000034e-05, 5.3985999999998924e-05, 5.375000000000171e-05, 5.405600000000024e-05]</msg>
<status status="PASS" starttime="20201115 23:03:09.878" endtime="20201115 23:03:09.880"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.874" endtime="20201115 23:03:09.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.883" endtime="20201115 23:03:09.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:09.886" endtime="20201115 23:03:09.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.885" endtime="20201115 23:03:09.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.881" endtime="20201115 23:03:09.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.516" endtime="20201115 23:03:09.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.514" endtime="20201115 23:03:09.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.513" endtime="20201115 23:03:09.908"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.910" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.919" endtime="20201115 23:03:09.936"></status>
</kw>
<msg timestamp="20201115 23:03:09.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.917" endtime="20201115 23:03:09.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:09.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:09.937" endtime="20201115 23:03:09.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.940" endtime="20201115 23:03:09.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.914" endtime="20201115 23:03:09.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.912" endtime="20201115 23:03:09.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:09.949" endtime="20201115 23:03:10.235"></status>
</kw>
<msg timestamp="20201115 23:03:10.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023206931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023261708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:09.947" endtime="20201115 23:03:10.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023206931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023261708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.239" endtime="20201115 23:03:10.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.248" endtime="20201115 23:03:10.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.944" endtime="20201115 23:03:10.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.943" endtime="20201115 23:03:10.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:10.254" level="INFO">${RESULT} = [{'time': 0.023261708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.477699999999891e-05, 'source_diff': 5.477699999999891e-05}, {'time': 0.023322694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:10.251" endtime="20201115 23:03:10.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:10.268" level="INFO">${ACCURACY} = {'source_diff': [5.477699999999891e-05, 5.475000000000271e-05, 5.4985999999999924e-05, 5.4722000000000104e-05, 5.529099999999898e-05, 5.4694000000000964e-05, 5.541700000000205e-05, 5.53610000000003e-0...</msg>
<status status="PASS" starttime="20201115 23:03:10.256" endtime="20201115 23:03:10.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.273" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.272" endtime="20201115 23:03:10.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.275" level="INFO">VALUE: [5.477699999999891e-05, 5.475000000000271e-05, 5.4985999999999924e-05, 5.4722000000000104e-05, 5.529099999999898e-05, 5.4694000000000964e-05, 5.541700000000205e-05, 5.53610000000003e-05, 5.462499999999912e-05, 5.5180000000001894e-05, 5.5041999999998203e-05, 5.5486000000000424e-05, 5.484700000000023e-05, 5.53480000000002e-05, 5.54869999999999e-05, 5.48609999999998e-05, 5.5277999999998884e-05, 5.555600000000174e-05, 5.5151999999999285e-05, 5.53610000000003e-05, 5.463899999999869e-05, 5.461099999999955e-05, 5.4958000000000784e-05, 5.4693999999997495e-05, 5.5499999999999994e-05, 5.556899999999837e-05, 5.512499999999962e-05, 5.486100000000327e-05, 5.483300000000066e-05, 5.504200000000167e-05, 5.505600000000124e-05, 5.479200000000142e-05, 5.532000000000106e-05, 5.5555999999998273e-05, 5.533399999999716e-05, 5.5486000000000424e-05, 5.5486000000000424e-05, 5.461099999999955e-05, 5.462499999999912e-05, 5.5486000000000424e-05, 5.462500000000259e-05, 5.534700000000073e-05, 5.5458000000001284e-05, 5.4694000000000964e-05, 5.5277999999998884e-05, 5.534699999999726e-05, 5.48609999999998e-05, 5.519499999999747e-05, 5.5499999999999994e-05, 5.4985999999999924e-05]</msg>
<status status="PASS" starttime="20201115 23:03:10.274" endtime="20201115 23:03:10.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.269" endtime="20201115 23:03:10.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.279" endtime="20201115 23:03:10.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:10.282" endtime="20201115 23:03:10.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.281" endtime="20201115 23:03:10.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.277" endtime="20201115 23:03:10.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.911" endtime="20201115 23:03:10.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.909" endtime="20201115 23:03:10.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:09.908" endtime="20201115 23:03:10.304"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.306" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.314" endtime="20201115 23:03:10.332"></status>
</kw>
<msg timestamp="20201115 23:03:10.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.313" endtime="20201115 23:03:10.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.333" endtime="20201115 23:03:10.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.336" endtime="20201115 23:03:10.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.310" endtime="20201115 23:03:10.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.308" endtime="20201115 23:03:10.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.345" endtime="20201115 23:03:10.632"></status>
</kw>
<msg timestamp="20201115 23:03:10.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.343" endtime="20201115 23:03:10.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.636" endtime="20201115 23:03:10.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.644" endtime="20201115 23:03:10.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.341" endtime="20201115 23:03:10.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.339" endtime="20201115 23:03:10.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:10.651" level="INFO">${RESULT} = [{'time': 0.022332208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.580499999999905e-05, 'source_diff': 5.580499999999905e-05}, {'time': 0.022391222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:10.648" endtime="20201115 23:03:10.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:10.665" level="INFO">${ACCURACY} = {'source_diff': [5.580499999999905e-05, 5.563899999999969e-05, 5.584699999999776e-05, 5.5735999999997204e-05, 5.5999999999997024e-05, 5.613900000000019e-05, 5.605600000000224e-05, 5.633300000000216e-0...</msg>
<status status="PASS" starttime="20201115 23:03:10.652" endtime="20201115 23:03:10.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.669" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:03:10.668" endtime="20201115 23:03:10.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.672" level="INFO">VALUE: [5.580499999999905e-05, 5.563899999999969e-05, 5.584699999999776e-05, 5.5735999999997204e-05, 5.5999999999997024e-05, 5.613900000000019e-05, 5.605600000000224e-05, 5.633300000000216e-05, 5.6221999999998135e-05, 5.645900000000176e-05, 5.5986000000000924e-05, 5.5972000000001354e-05, 5.579200000000242e-05, 5.5651999999999785e-05, 5.6429999999999675e-05, 5.569500000000144e-05, 5.637500000000087e-05, 5.6514000000000564e-05, 5.5708000000001534e-05, 5.612500000000062e-05, 5.5915999999999605e-05, 5.5679999999998925e-05, 5.593100000000212e-05, 5.562500000000012e-05, 5.5750000000000244e-05, 5.584700000000123e-05, 5.619499999999847e-05, 5.661100000000155e-05, 5.5763999999999814e-05, 5.611100000000105e-05, 5.6471999999998385e-05, 5.647299999999786e-05, 5.6569999999998843e-05, 5.558300000000141e-05, 5.562500000000012e-05, 5.6499999999997524e-05, 5.583300000000166e-05, 5.609699999999801e-05, 5.6472000000001854e-05, 5.611099999999758e-05, 5.581899999999862e-05, 5.634700000000173e-05, 5.5750000000000244e-05, 5.65549999999998e-05, 5.619499999999847e-05, 5.563899999999969e-05, 5.6555999999999274e-05, 5.6555999999999274e-05, 5.590299999999951e-05, 5.6264000000000314e-05]</msg>
<status status="PASS" starttime="20201115 23:03:10.671" endtime="20201115 23:03:10.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.666" endtime="20201115 23:03:10.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.676" endtime="20201115 23:03:10.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:10.679" endtime="20201115 23:03:10.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.678" endtime="20201115 23:03:10.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.674" endtime="20201115 23:03:10.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.307" endtime="20201115 23:03:10.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.305" endtime="20201115 23:03:10.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.304" endtime="20201115 23:03:10.700"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.711" endtime="20201115 23:03:10.727"></status>
</kw>
<msg timestamp="20201115 23:03:10.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.710" endtime="20201115 23:03:10.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:10.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:10.728" endtime="20201115 23:03:10.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.731" endtime="20201115 23:03:10.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.707" endtime="20201115 23:03:10.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.705" endtime="20201115 23:03:10.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:10.740" endtime="20201115 23:03:11.027"></status>
</kw>
<msg timestamp="20201115 23:03:11.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:10.739" endtime="20201115 23:03:11.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.032" endtime="20201115 23:03:11.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.040" endtime="20201115 23:03:11.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.736" endtime="20201115 23:03:11.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.734" endtime="20201115 23:03:11.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:11.047" level="INFO">${RESULT} = [{'time': 0.022345597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6943999999999745e-05, 'source_diff': 5.6943999999999745e-05}, {'time': 0.022404625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:11.043" endtime="20201115 23:03:11.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:11.066" level="INFO">${ACCURACY} = {'source_diff': [5.6943999999999745e-05, 5.6791999999999954e-05, 5.70550000000003e-05, 5.665300000000026e-05, 5.6707999999999065e-05, 5.719500000000294e-05, 5.740300000000101e-05, 5.661099999999808e-0...</msg>
<status status="PASS" starttime="20201115 23:03:11.052" endtime="20201115 23:03:11.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.071" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:03:11.070" endtime="20201115 23:03:11.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.073" level="INFO">VALUE: [5.6943999999999745e-05, 5.6791999999999954e-05, 5.70550000000003e-05, 5.665300000000026e-05, 5.6707999999999065e-05, 5.719500000000294e-05, 5.740300000000101e-05, 5.661099999999808e-05, 5.6764000000000814e-05, 5.6999999999998024e-05, 5.7485999999998955e-05, 5.7402000000001535e-05, 5.7333999999999163e-05, 5.684700000000223e-05, 5.7499999999998525e-05, 5.7207999999999565e-05, 5.7014000000001064e-05, 5.7193999999999995e-05, 5.7485999999998955e-05, 5.662499999999765e-05, 5.6749999999997774e-05, 5.6985999999998455e-05, 5.690299999999704e-05, 5.661100000000155e-05, 5.6707999999999065e-05, 5.684699999999876e-05, 5.6943999999999745e-05, 5.7541999999997234e-05, 5.719499999999947e-05, 5.73480000000022e-05, 5.690300000000051e-05, 5.7278000000000884e-05, 5.683300000000266e-05, 5.684700000000223e-05, 5.662500000000112e-05, 5.6693999999999495e-05, 5.734699999999926e-05, 5.6707999999999065e-05, 5.70550000000003e-05, 5.7055999999999774e-05, 5.7028000000000634e-05, 5.6972000000002354e-05, 5.683299999999919e-05, 5.7444000000000245e-05, 5.7264000000001314e-05, 5.7069999999999343e-05, 5.669499999999897e-05, 5.7556000000000274e-05, 5.684700000000223e-05, 5.6915999999997136e-05]</msg>
<status status="PASS" starttime="20201115 23:03:11.072" endtime="20201115 23:03:11.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.067" endtime="20201115 23:03:11.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.077" endtime="20201115 23:03:11.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:11.080" endtime="20201115 23:03:11.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.079" endtime="20201115 23:03:11.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.075" endtime="20201115 23:03:11.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.703" endtime="20201115 23:03:11.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.702" endtime="20201115 23:03:11.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:10.701" endtime="20201115 23:03:11.101"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.104" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.113" endtime="20201115 23:03:11.130"></status>
</kw>
<msg timestamp="20201115 23:03:11.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.111" endtime="20201115 23:03:11.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.132" endtime="20201115 23:03:11.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.134" endtime="20201115 23:03:11.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.108" endtime="20201115 23:03:11.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.106" endtime="20201115 23:03:11.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.143" endtime="20201115 23:03:11.430"></status>
</kw>
<msg timestamp="20201115 23:03:11.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.142" endtime="20201115 23:03:11.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.434" endtime="20201115 23:03:11.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.443" endtime="20201115 23:03:11.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.139" endtime="20201115 23:03:11.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.137" endtime="20201115 23:03:11.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:11.450" level="INFO">${RESULT} = [{'time': 0.023339806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7778000000001384e-05, 'source_diff': 5.7778000000001384e-05}, {'time': 0.023401833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:11.447" endtime="20201115 23:03:11.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:11.463" level="INFO">${ACCURACY} = {'source_diff': [5.7778000000001384e-05, 5.8430000000001675e-05, 5.761099999999908e-05, 5.7916000000001605e-05, 5.781899999999715e-05, 5.784699999999976e-05, 5.8458000000000815e-05, 5.856900000000137e...</msg>
<status status="PASS" starttime="20201115 23:03:11.451" endtime="20201115 23:03:11.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.468" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:03:11.467" endtime="20201115 23:03:11.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.471" level="INFO">VALUE: [5.7778000000001384e-05, 5.8430000000001675e-05, 5.761099999999908e-05, 5.7916000000001605e-05, 5.781899999999715e-05, 5.784699999999976e-05, 5.8458000000000815e-05, 5.856900000000137e-05, 5.8278000000001884e-05, 5.831899999999765e-05, 5.811099999999958e-05, 5.841700000000158e-05, 5.819500000000047e-05, 5.841700000000158e-05, 5.811100000000305e-05, 5.78619999999988e-05, 5.7778000000001384e-05, 5.8042000000001204e-05, 5.844500000000072e-05, 5.8499999999999525e-05, 5.8235999999999705e-05, 5.827699999999894e-05, 5.7694000000000495e-05, 5.7971999999999885e-05, 5.790300000000151e-05, 5.7777999999997914e-05, 5.8222000000000135e-05, 5.834700000000026e-05, 5.790299999999804e-05, 5.813900000000219e-05, 5.790300000000151e-05, 5.841700000000158e-05, 5.770899999999954e-05, 5.8556000000001274e-05, 5.762500000000212e-05, 5.8056000000000774e-05, 5.8334000000000163e-05, 5.854100000000223e-05, 5.7694000000000495e-05, 5.8472000000000385e-05, 5.7763999999998344e-05, 5.783300000000019e-05, 5.7708000000000065e-05, 5.8000000000002494e-05, 5.7694000000000495e-05, 5.793100000000065e-05, 5.8263999999998844e-05, 5.781900000000062e-05, 5.78480000000027e-05, 5.762499999999865e-05]</msg>
<status status="PASS" starttime="20201115 23:03:11.469" endtime="20201115 23:03:11.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.464" endtime="20201115 23:03:11.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.474" endtime="20201115 23:03:11.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:11.477" endtime="20201115 23:03:11.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.476" endtime="20201115 23:03:11.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.472" endtime="20201115 23:03:11.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.104" endtime="20201115 23:03:11.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.102" endtime="20201115 23:03:11.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.102" endtime="20201115 23:03:11.499"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.501" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.509" endtime="20201115 23:03:11.525"></status>
</kw>
<msg timestamp="20201115 23:03:11.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.508" endtime="20201115 23:03:11.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.526" endtime="20201115 23:03:11.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.529" endtime="20201115 23:03:11.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.505" endtime="20201115 23:03:11.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.503" endtime="20201115 23:03:11.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.538" endtime="20201115 23:03:11.825"></status>
</kw>
<msg timestamp="20201115 23:03:11.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.536" endtime="20201115 23:03:11.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022059333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.829" endtime="20201115 23:03:11.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.837" endtime="20201115 23:03:11.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.534" endtime="20201115 23:03:11.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.532" endtime="20201115 23:03:11.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:11.844" level="INFO">${RESULT} = [{'time': 0.022117986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.865299999999879e-05, 'source_diff': 5.865299999999879e-05}, {'time': 0.022182986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:11.840" endtime="20201115 23:03:11.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:11.857" level="INFO">${ACCURACY} = {'source_diff': [5.865299999999879e-05, 5.9179999999998956e-05, 5.9277999999999414e-05, 5.940299999999954e-05, 5.9555999999998804e-05, 5.893100000000165e-05, 5.943099999999868e-05, 5.9556000000002274e...</msg>
<status status="PASS" starttime="20201115 23:03:11.845" endtime="20201115 23:03:11.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.862" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:03:11.861" endtime="20201115 23:03:11.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.865" level="INFO">VALUE: [5.865299999999879e-05, 5.9179999999998956e-05, 5.9277999999999414e-05, 5.940299999999954e-05, 5.9555999999998804e-05, 5.893100000000165e-05, 5.943099999999868e-05, 5.9556000000002274e-05, 5.8763999999999345e-05, 5.897300000000036e-05, 5.876299999999987e-05, 5.936099999999736e-05, 5.955499999999933e-05, 5.9486000000000955e-05, 5.881899999999815e-05, 5.913899999999972e-05, 5.881899999999815e-05, 5.862500000000312e-05, 5.912500000000015e-05, 5.8694000000001495e-05, 5.863899999999922e-05, 5.938899999999997e-05, 5.863900000000269e-05, 5.8792000000001954e-05, 5.859700000000051e-05, 5.88619999999998e-05, 5.863899999999922e-05, 5.9263999999999845e-05, 5.90550000000023e-05, 5.8986000000000455e-05, 5.931899999999865e-05, 5.8902000000003035e-05, 5.883300000000119e-05, 5.934700000000126e-05, 5.895900000000079e-05, 5.934700000000126e-05, 5.9013999999999595e-05, 5.8569999999997374e-05, 5.891699999999861e-05, 5.940300000000301e-05, 5.893099999999818e-05, 5.8749999999999775e-05, 5.912500000000015e-05, 5.938899999999997e-05, 5.936100000000083e-05, 5.938899999999997e-05, 5.8986000000000455e-05, 5.9499999999997055e-05, 5.8930000000002175e-05, 5.95689999999989e-05]</msg>
<status status="PASS" starttime="20201115 23:03:11.863" endtime="20201115 23:03:11.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.858" endtime="20201115 23:03:11.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.868" endtime="20201115 23:03:11.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:11.871" endtime="20201115 23:03:11.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.870" endtime="20201115 23:03:11.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.866" endtime="20201115 23:03:11.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.501" endtime="20201115 23:03:11.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.500" endtime="20201115 23:03:11.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.499" endtime="20201115 23:03:11.892"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.895" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.903" endtime="20201115 23:03:11.920"></status>
</kw>
<msg timestamp="20201115 23:03:11.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.902" endtime="20201115 23:03:11.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:11.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:11.922" endtime="20201115 23:03:11.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.925" endtime="20201115 23:03:11.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.899" endtime="20201115 23:03:11.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.897" endtime="20201115 23:03:11.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:11.934" endtime="20201115 23:03:12.221"></status>
</kw>
<msg timestamp="20201115 23:03:12.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:11.933" endtime="20201115 23:03:12.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:12.226" endtime="20201115 23:03:12.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.234" endtime="20201115 23:03:12.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.930" endtime="20201115 23:03:12.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.928" endtime="20201115 23:03:12.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:12.241" level="INFO">${RESULT} = [{'time': 0.022194569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0179999999999956e-05, 'source_diff': 6.0179999999999956e-05}, {'time': 0.022259569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:12.238" endtime="20201115 23:03:12.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:12.254" level="INFO">${ACCURACY} = {'source_diff': [6.0179999999999956e-05, 5.983299999999872e-05, 6.034700000000226e-05, 5.96949999999985e-05, 5.9777999999999915e-05, 6.0193999999999526e-05, 6.0041999999999734e-05, 6.033300000000269e-...</msg>
<status status="PASS" starttime="20201115 23:03:12.242" endtime="20201115 23:03:12.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.259" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:03:12.258" endtime="20201115 23:03:12.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.262" level="INFO">VALUE: [6.0179999999999956e-05, 5.983299999999872e-05, 6.034700000000226e-05, 5.96949999999985e-05, 5.9777999999999915e-05, 6.0193999999999526e-05, 6.0041999999999734e-05, 6.033300000000269e-05, 6.0028000000000165e-05, 5.981899999999915e-05, 6.034700000000226e-05, 6.0555999999999804e-05, 6.0333999999998694e-05, 5.969500000000197e-05, 6.0499999999998055e-05, 5.963900000000022e-05, 6.0194000000002995e-05, 5.977699999999697e-05, 6.031899999999965e-05, 6.0416000000000636e-05, 6.031900000000312e-05, 5.9708000000002065e-05, 6.00689999999994e-05, 6.041700000000011e-05, 5.962499999999718e-05, 6.0000000000001025e-05, 5.98750000000009e-05, 5.9777999999999915e-05, 5.9791999999999484e-05, 5.991699999999961e-05, 6.0570000000002844e-05, 6.019500000000247e-05, 6.0249999999997805e-05, 6.040300000000054e-05, 6.029099999999704e-05, 5.963900000000022e-05, 6.0528000000000665e-05, 5.983300000000219e-05, 6.0500000000001525e-05, 6.0471999999998916e-05, 5.986100000000133e-05, 6.0513999999997625e-05, 6.012500000000115e-05, 5.987499999999743e-05, 6.041700000000011e-05, 5.958300000000194e-05, 6.0485999999998485e-05, 5.990300000000004e-05, 5.9750000000000775e-05, 6.0333999999998694e-05]</msg>
<status status="PASS" starttime="20201115 23:03:12.260" endtime="20201115 23:03:12.262"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.255" endtime="20201115 23:03:12.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.265" endtime="20201115 23:03:12.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:12.268" endtime="20201115 23:03:12.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.267" endtime="20201115 23:03:12.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.263" endtime="20201115 23:03:12.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.895" endtime="20201115 23:03:12.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.894" endtime="20201115 23:03:12.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:11.893" endtime="20201115 23:03:12.289"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.292" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.301" endtime="20201115 23:03:12.318"></status>
</kw>
<msg timestamp="20201115 23:03:12.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.299" endtime="20201115 23:03:12.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.319" endtime="20201115 23:03:12.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.322" endtime="20201115 23:03:12.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.296" endtime="20201115 23:03:12.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.294" endtime="20201115 23:03:12.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.331" endtime="20201115 23:03:12.617"></status>
</kw>
<msg timestamp="20201115 23:03:12.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:12.329" endtime="20201115 23:03:12.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:12.621" endtime="20201115 23:03:12.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.630" endtime="20201115 23:03:12.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.327" endtime="20201115 23:03:12.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.325" endtime="20201115 23:03:12.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:12.636" level="INFO">${RESULT} = [{'time': 0.022612806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.104200000000073e-05, 'source_diff': 6.104200000000073e-05}, {'time': 0.022680833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:12.633" endtime="20201115 23:03:12.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:12.651" level="INFO">${ACCURACY} = {'source_diff': [6.104200000000073e-05, 6.14300000000012e-05, 6.127700000000194e-05, 6.105500000000083e-05, 6.149999999999906e-05, 6.1000000000002025e-05, 6.150000000000252e-05, 6.0707999999999596e-05...</msg>
<status status="PASS" starttime="20201115 23:03:12.637" endtime="20201115 23:03:12.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.656" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:03:12.655" endtime="20201115 23:03:12.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.659" level="INFO">VALUE: [6.104200000000073e-05, 6.14300000000012e-05, 6.127700000000194e-05, 6.105500000000083e-05, 6.149999999999906e-05, 6.1000000000002025e-05, 6.150000000000252e-05, 6.0707999999999596e-05, 6.0750000000001775e-05, 6.0694000000000026e-05, 6.0957999999999846e-05, 6.1195e-05, 6.1000000000002025e-05, 6.126400000000184e-05, 6.070899999999907e-05, 6.148700000000243e-05, 6.118100000000043e-05, 6.149999999999906e-05, 6.0694000000000026e-05, 6.0902000000001566e-05, 6.0944000000000276e-05, 6.154099999999829e-05, 6.083299999999972e-05, 6.148599999999949e-05, 6.090300000000104e-05, 6.062500000000165e-05, 6.12080000000001e-05, 6.108299999999997e-05, 6.125000000000227e-05, 6.086099999999886e-05, 6.1195e-05, 6.1195e-05, 6.12499999999988e-05, 6.065299999999732e-05, 6.105499999999736e-05, 6.0971999999999416e-05, 6.059699999999904e-05, 6.062499999999818e-05, 6.0916000000001136e-05, 6.141599999999817e-05, 6.0888999999998e-05, 6.0985999999998985e-05, 6.162499999999918e-05, 6.087499999999843e-05, 6.127799999999795e-05, 6.133300000000022e-05, 6.127799999999795e-05, 6.15560000000008e-05, 6.127799999999795e-05, 6.141699999999764e-05]</msg>
<status status="PASS" starttime="20201115 23:03:12.657" endtime="20201115 23:03:12.659"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.652" endtime="20201115 23:03:12.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.662" endtime="20201115 23:03:12.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:12.665" endtime="20201115 23:03:12.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.664" endtime="20201115 23:03:12.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.660" endtime="20201115 23:03:12.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.292" endtime="20201115 23:03:12.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.291" endtime="20201115 23:03:12.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.290" endtime="20201115 23:03:12.687"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.690" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.698" endtime="20201115 23:03:12.715"></status>
</kw>
<msg timestamp="20201115 23:03:12.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.696" endtime="20201115 23:03:12.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:12.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:12.716" endtime="20201115 23:03:12.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.719" endtime="20201115 23:03:12.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.694" endtime="20201115 23:03:12.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.691" endtime="20201115 23:03:12.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:12.728" endtime="20201115 23:03:13.014"></status>
</kw>
<msg timestamp="20201115 23:03:13.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:12.727" endtime="20201115 23:03:13.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022082111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.018" endtime="20201115 23:03:13.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.027" endtime="20201115 23:03:13.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.724" endtime="20201115 23:03:13.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.722" endtime="20201115 23:03:13.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.033" level="INFO">${RESULT} = [{'time': 0.022144403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.229199999999852e-05, 'source_diff': 6.229199999999852e-05}, {'time': 0.022213444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:13.030" endtime="20201115 23:03:13.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.047" level="INFO">${ACCURACY} = {'source_diff': [6.229199999999852e-05, 6.254099999999929e-05, 6.179200000000148e-05, 6.197200000000042e-05, 6.173599999999974e-05, 6.20560000000013e-05, 6.157000000000037e-05, 6.161199999999908e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:13.034" endtime="20201115 23:03:13.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.051" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.050" endtime="20201115 23:03:13.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.054" level="INFO">VALUE: [6.229199999999852e-05, 6.254099999999929e-05, 6.179200000000148e-05, 6.197200000000042e-05, 6.173599999999974e-05, 6.20560000000013e-05, 6.157000000000037e-05, 6.161199999999908e-05, 6.163799999999928e-05, 6.234700000000079e-05, 6.177699999999897e-05, 6.17080000000006e-05, 6.180600000000105e-05, 6.163899999999875e-05, 6.234700000000079e-05, 6.194500000000075e-05, 6.183300000000072e-05, 6.2195000000001e-05, 6.216700000000186e-05, 6.234700000000079e-05, 6.18340000000002e-05, 6.259699999999757e-05, 6.241700000000211e-05, 6.18340000000002e-05, 6.169399999999756e-05, 6.23889999999995e-05, 6.163899999999875e-05, 6.177800000000191e-05, 6.248600000000049e-05, 6.169400000000103e-05, 6.215299999999882e-05, 6.255499999999886e-05, 6.237499999999993e-05, 6.209700000000054e-05, 6.163899999999875e-05, 6.186099999999986e-05, 6.201399999999913e-05, 6.220900000000057e-05, 6.191699999999814e-05, 6.220799999999763e-05, 6.17080000000006e-05, 6.17080000000006e-05, 6.22629999999999e-05, 6.206899999999793e-05, 6.227799999999895e-05, 6.216599999999892e-05, 6.212499999999968e-05, 6.243100000000168e-05, 6.213899999999925e-05, 6.191699999999814e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.052" endtime="20201115 23:03:13.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.048" endtime="20201115 23:03:13.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.058" endtime="20201115 23:03:13.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.061" endtime="20201115 23:03:13.080"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.059" endtime="20201115 23:03:13.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.056" endtime="20201115 23:03:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.690" endtime="20201115 23:03:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.688" endtime="20201115 23:03:13.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:12.687" endtime="20201115 23:03:13.082"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.085" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.093" endtime="20201115 23:03:13.110"></status>
</kw>
<msg timestamp="20201115 23:03:13.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.091" endtime="20201115 23:03:13.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.111" endtime="20201115 23:03:13.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.114" endtime="20201115 23:03:13.115"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.089" endtime="20201115 23:03:13.116"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.087" endtime="20201115 23:03:13.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.123" endtime="20201115 23:03:13.409"></status>
</kw>
<msg timestamp="20201115 23:03:13.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.121" endtime="20201115 23:03:13.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022375139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.413" endtime="20201115 23:03:13.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.422" endtime="20201115 23:03:13.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.119" endtime="20201115 23:03:13.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.117" endtime="20201115 23:03:13.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.429" level="INFO">${RESULT} = [{'time': 0.022437792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.265300000000279e-05, 'source_diff': 6.265300000000279e-05}, {'time': 0.022505792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:13.425" endtime="20201115 23:03:13.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.443" level="INFO">${ACCURACY} = {'source_diff': [6.265300000000279e-05, 6.276399999999988e-05, 6.347199999999845e-05, 6.32080000000021e-05, 6.32080000000021e-05, 6.261100000000061e-05, 6.34439999999993e-05, 6.3582999999999e-05, 6.35...</msg>
<status status="PASS" starttime="20201115 23:03:13.430" endtime="20201115 23:03:13.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.447" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.446" endtime="20201115 23:03:13.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.450" level="INFO">VALUE: [6.265300000000279e-05, 6.276399999999988e-05, 6.347199999999845e-05, 6.32080000000021e-05, 6.32080000000021e-05, 6.261100000000061e-05, 6.34439999999993e-05, 6.3582999999999e-05, 6.35560000000028e-05, 6.333299999999875e-05, 6.301400000000013e-05, 6.269399999999856e-05, 6.362500000000118e-05, 6.291699999999914e-05, 6.312500000000068e-05, 6.345799999999888e-05, 6.26950000000015e-05, 6.30699999999984e-05, 6.329200000000298e-05, 6.277699999999997e-05, 6.337500000000093e-05, 6.283300000000172e-05, 6.329100000000004e-05, 6.29020000000001e-05, 6.348600000000149e-05, 6.295900000000132e-05, 6.305500000000283e-05, 6.290299999999957e-05, 6.348599999999802e-05, 6.334700000000179e-05, 6.298600000000099e-05, 6.312500000000068e-05, 6.297199999999795e-05, 6.277799999999945e-05, 6.361100000000161e-05, 6.336099999999789e-05, 6.305499999999936e-05, 6.27080000000016e-05, 6.30829999999985e-05, 6.32219999999982e-05, 6.277799999999945e-05, 6.320799999999863e-05, 6.313900000000025e-05, 6.273600000000074e-05, 6.359799999999804e-05, 6.337500000000093e-05, 6.323600000000124e-05, 6.263899999999975e-05, 6.326400000000038e-05, 6.276399999999988e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.448" endtime="20201115 23:03:13.451"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.444" endtime="20201115 23:03:13.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.454" endtime="20201115 23:03:13.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.457" endtime="20201115 23:03:13.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.456" endtime="20201115 23:03:13.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.452" endtime="20201115 23:03:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.085" endtime="20201115 23:03:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.083" endtime="20201115 23:03:13.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.083" endtime="20201115 23:03:13.478"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.481" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.489" endtime="20201115 23:03:13.506"></status>
</kw>
<msg timestamp="20201115 23:03:13.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.488" endtime="20201115 23:03:13.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.508" endtime="20201115 23:03:13.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.510" endtime="20201115 23:03:13.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.485" endtime="20201115 23:03:13.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.483" endtime="20201115 23:03:13.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.519" endtime="20201115 23:03:13.806"></status>
</kw>
<msg timestamp="20201115 23:03:13.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.518" endtime="20201115 23:03:13.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.811" endtime="20201115 23:03:13.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.819" endtime="20201115 23:03:13.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.515" endtime="20201115 23:03:13.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.513" endtime="20201115 23:03:13.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:13.826" level="INFO">${RESULT} = [{'time': 0.022464139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.418099999999996e-05, 'source_diff': 6.418099999999996e-05}, {'time': 0.022534097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:13.822" endtime="20201115 23:03:13.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:13.840" level="INFO">${ACCURACY} = {'source_diff': [6.418099999999996e-05, 6.430500000000061e-05, 6.405499999999689e-05, 6.448599999999902e-05, 6.42219999999992e-05, 6.433299999999975e-05, 6.386099999999839e-05, 6.43890000000015e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:03:13.827" endtime="20201115 23:03:13.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.844" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:03:13.843" endtime="20201115 23:03:13.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.847" level="INFO">VALUE: [6.418099999999996e-05, 6.430500000000061e-05, 6.405499999999689e-05, 6.448599999999902e-05, 6.42219999999992e-05, 6.433299999999975e-05, 6.386099999999839e-05, 6.43890000000015e-05, 6.455600000000034e-05, 6.45699999999999e-05, 6.368099999999946e-05, 6.383399999999873e-05, 6.362500000000118e-05, 6.443100000000021e-05, 6.376400000000088e-05, 6.454200000000077e-05, 6.363800000000128e-05, 6.363900000000075e-05, 6.441600000000117e-05, 6.447200000000292e-05, 6.436100000000236e-05, 6.406899999999993e-05, 6.384700000000229e-05, 6.405500000000036e-05, 6.384700000000229e-05, 6.441700000000064e-05, 6.448599999999902e-05, 6.427799999999748e-05, 6.441700000000064e-05, 6.43890000000015e-05, 6.413800000000178e-05, 6.423699999999824e-05, 6.374999999999784e-05, 6.412500000000168e-05, 6.456900000000043e-05, 6.420799999999963e-05, 6.387499999999796e-05, 6.419400000000006e-05, 6.419400000000006e-05, 6.370799999999913e-05, 6.398600000000199e-05, 6.379200000000002e-05, 6.388800000000153e-05, 6.362500000000118e-05, 6.411099999999864e-05, 6.419499999999953e-05, 6.38340000000022e-05, 6.44159999999977e-05, 6.431900000000018e-05, 6.362499999999771e-05]</msg>
<status status="PASS" starttime="20201115 23:03:13.845" endtime="20201115 23:03:13.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.840" endtime="20201115 23:03:13.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.850" endtime="20201115 23:03:13.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:13.853" endtime="20201115 23:03:13.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.852" endtime="20201115 23:03:13.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.848" endtime="20201115 23:03:13.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.481" endtime="20201115 23:03:13.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.480" endtime="20201115 23:03:13.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.479" endtime="20201115 23:03:13.874"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.877" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.885" endtime="20201115 23:03:13.902"></status>
</kw>
<msg timestamp="20201115 23:03:13.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.884" endtime="20201115 23:03:13.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:13.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:13.904" endtime="20201115 23:03:13.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.906" endtime="20201115 23:03:13.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.881" endtime="20201115 23:03:13.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.879" endtime="20201115 23:03:13.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:13.915" endtime="20201115 23:03:14.203"></status>
</kw>
<msg timestamp="20201115 23:03:14.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:13.914" endtime="20201115 23:03:14.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.207" endtime="20201115 23:03:14.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.216" endtime="20201115 23:03:14.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.911" endtime="20201115 23:03:14.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.910" endtime="20201115 23:03:14.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:14.222" level="INFO">${RESULT} = [{'time': 0.022341375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.538899999999903e-05, 'source_diff': 6.538899999999903e-05}, {'time': 0.022410389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:14.219" endtime="20201115 23:03:14.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:14.237" level="INFO">${ACCURACY} = {'source_diff': [6.538899999999903e-05, 6.484699999999982e-05, 6.547200000000045e-05, 6.491699999999767e-05, 6.54029999999986e-05, 6.469500000000003e-05, 6.491700000000114e-05, 6.462499999999871e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:14.223" endtime="20201115 23:03:14.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.242" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:03:14.241" endtime="20201115 23:03:14.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.244" level="INFO">VALUE: [6.538899999999903e-05, 6.484699999999982e-05, 6.547200000000045e-05, 6.491699999999767e-05, 6.54029999999986e-05, 6.469500000000003e-05, 6.491700000000114e-05, 6.462499999999871e-05, 6.49159999999982e-05, 6.480499999999764e-05, 6.541600000000217e-05, 6.469400000000056e-05, 6.517999999999802e-05, 6.549999999999959e-05, 6.554200000000177e-05, 6.549999999999959e-05, 6.479200000000102e-05, 6.476400000000188e-05, 6.469500000000003e-05, 6.508399999999998e-05, 6.547299999999992e-05, 6.547299999999992e-05, 6.47639999999984e-05, 6.498699999999899e-05, 6.534700000000032e-05, 6.505500000000136e-05, 6.543000000000174e-05, 6.481899999999721e-05, 6.53890000000025e-05, 6.548600000000002e-05, 6.462499999999871e-05, 6.534699999999685e-05, 6.519400000000106e-05, 6.462499999999871e-05, 6.549999999999959e-05, 6.548600000000002e-05, 6.523599999999977e-05, 6.515199999999888e-05, 6.548700000000296e-05, 6.500000000000256e-05, 6.463900000000175e-05, 6.474999999999884e-05, 6.498599999999952e-05, 6.462500000000218e-05, 6.554099999999882e-05, 6.512499999999921e-05, 6.498599999999952e-05, 6.558400000000048e-05, 6.541699999999817e-05, 6.491699999999767e-05]</msg>
<status status="PASS" starttime="20201115 23:03:14.243" endtime="20201115 23:03:14.245"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.238" endtime="20201115 23:03:14.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.247" endtime="20201115 23:03:14.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:14.251" endtime="20201115 23:03:14.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.249" endtime="20201115 23:03:14.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.246" endtime="20201115 23:03:14.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.877" endtime="20201115 23:03:14.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.876" endtime="20201115 23:03:14.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:13.875" endtime="20201115 23:03:14.272"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.274" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.283" endtime="20201115 23:03:14.300"></status>
</kw>
<msg timestamp="20201115 23:03:14.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.281" endtime="20201115 23:03:14.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.302" endtime="20201115 23:03:14.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.304" endtime="20201115 23:03:14.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.279" endtime="20201115 23:03:14.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.276" endtime="20201115 23:03:14.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.314" endtime="20201115 23:03:14.599"></status>
</kw>
<msg timestamp="20201115 23:03:14.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022058319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.312" endtime="20201115 23:03:14.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022058319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.603" endtime="20201115 23:03:14.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.612" endtime="20201115 23:03:14.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.309" endtime="20201115 23:03:14.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.307" endtime="20201115 23:03:14.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:14.619" level="INFO">${RESULT} = [{'time': 0.022058319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.598600000000052e-05, 'source_diff': 6.598600000000052e-05}, {'time': 0.022129306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:14.615" endtime="20201115 23:03:14.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:14.632" level="INFO">${ACCURACY} = {'source_diff': [6.598600000000052e-05, 6.605600000000184e-05, 6.583300000000125e-05, 6.652700000000025e-05, 6.583300000000125e-05, 6.597199999999748e-05, 6.569399999999809e-05, 6.634700000000132e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:14.620" endtime="20201115 23:03:14.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.637" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:03:14.636" endtime="20201115 23:03:14.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.639" level="INFO">VALUE: [6.598600000000052e-05, 6.605600000000184e-05, 6.583300000000125e-05, 6.652700000000025e-05, 6.583300000000125e-05, 6.597199999999748e-05, 6.569399999999809e-05, 6.634700000000132e-05, 6.617999999999902e-05, 6.598600000000052e-05, 6.577800000000245e-05, 6.655599999999887e-05, 6.579200000000202e-05, 6.569500000000103e-05, 6.629199999999905e-05, 6.641699999999917e-05, 6.615299999999935e-05, 6.64159999999997e-05, 6.586100000000039e-05, 6.634700000000132e-05, 6.655499999999939e-05, 6.629199999999905e-05, 6.62639999999999e-05, 6.57639999999994e-05, 6.62639999999999e-05, 6.561100000000014e-05, 6.655600000000234e-05, 6.609800000000055e-05, 6.634699999999785e-05, 6.568100000000146e-05, 6.570800000000113e-05, 6.616599999999945e-05, 6.57220000000007e-05, 6.620800000000163e-05, 6.619400000000206e-05, 6.643000000000274e-05, 6.64029999999996e-05, 6.655499999999939e-05, 6.656900000000243e-05, 6.57639999999994e-05, 6.627799999999948e-05, 6.597199999999748e-05, 6.612500000000021e-05, 6.62090000000011e-05, 6.600000000000009e-05, 6.600000000000009e-05, 6.568100000000146e-05, 6.641700000000264e-05, 6.598600000000052e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201115 23:03:14.638" endtime="20201115 23:03:14.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.633" endtime="20201115 23:03:14.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.642" endtime="20201115 23:03:14.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:14.646" endtime="20201115 23:03:14.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.644" endtime="20201115 23:03:14.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.641" endtime="20201115 23:03:14.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.275" endtime="20201115 23:03:14.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.273" endtime="20201115 23:03:14.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.272" endtime="20201115 23:03:14.667"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.669" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.678" endtime="20201115 23:03:14.695"></status>
</kw>
<msg timestamp="20201115 23:03:14.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.676" endtime="20201115 23:03:14.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:14.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:14.696" endtime="20201115 23:03:14.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.699" endtime="20201115 23:03:14.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.673" endtime="20201115 23:03:14.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.671" endtime="20201115 23:03:14.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:14.708" endtime="20201115 23:03:14.995"></status>
</kw>
<msg timestamp="20201115 23:03:14.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.707" endtime="20201115 23:03:14.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:14.999" endtime="20201115 23:03:15.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.007" endtime="20201115 23:03:15.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.704" endtime="20201115 23:03:15.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.702" endtime="20201115 23:03:15.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:15.014" level="INFO">${RESULT} = [{'time': 0.022510861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.712500000000121e-05, 'source_diff': 6.712500000000121e-05}, {'time': 0.022581861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:15.011" endtime="20201115 23:03:15.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:15.028" level="INFO">${ACCURACY} = {'source_diff': [6.712500000000121e-05, 6.74030000000006e-05, 6.705599999999937e-05, 6.733300000000275e-05, 6.691699999999967e-05, 6.736100000000189e-05, 6.701399999999719e-05, 6.67090000000016e-05, 6...</msg>
<status status="PASS" starttime="20201115 23:03:15.015" endtime="20201115 23:03:15.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.032" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:03:15.031" endtime="20201115 23:03:15.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.034" level="INFO">VALUE: [6.712500000000121e-05, 6.74030000000006e-05, 6.705599999999937e-05, 6.733300000000275e-05, 6.691699999999967e-05, 6.736100000000189e-05, 6.701399999999719e-05, 6.67090000000016e-05, 6.684799999999783e-05, 6.733399999999876e-05, 6.668100000000246e-05, 6.751399999999769e-05, 6.713900000000078e-05, 6.748600000000202e-05, 6.748599999999855e-05, 6.741700000000017e-05, 6.661100000000114e-05, 6.667999999999952e-05, 6.681900000000268e-05, 6.751400000000116e-05, 6.712500000000121e-05, 6.748600000000202e-05, 6.733399999999876e-05, 6.748599999999855e-05, 6.692999999999977e-05, 6.755599999999987e-05, 6.698599999999805e-05, 6.681899999999921e-05, 6.736099999999842e-05, 6.683299999999878e-05, 6.67640000000004e-05, 6.756899999999996e-05, 6.729200000000005e-05, 6.743099999999974e-05, 6.733299999999928e-05, 6.67640000000004e-05, 6.752699999999778e-05, 6.719499999999906e-05, 6.705600000000284e-05, 6.715300000000035e-05, 6.669499999999856e-05, 6.748600000000202e-05, 6.743000000000027e-05, 6.690200000000063e-05, 6.736099999999842e-05, 6.734699999999885e-05, 6.683299999999878e-05, 6.713900000000078e-05, 6.748599999999855e-05, 6.67640000000004e-05]</msg>
<status status="PASS" starttime="20201115 23:03:15.033" endtime="20201115 23:03:15.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.028" endtime="20201115 23:03:15.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.038" endtime="20201115 23:03:15.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:15.041" endtime="20201115 23:03:15.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.040" endtime="20201115 23:03:15.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.036" endtime="20201115 23:03:15.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.670" endtime="20201115 23:03:15.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.668" endtime="20201115 23:03:15.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:14.667" endtime="20201115 23:03:15.062"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.065" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.073" endtime="20201115 23:03:15.091"></status>
</kw>
<msg timestamp="20201115 23:03:15.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.072" endtime="20201115 23:03:15.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.093" endtime="20201115 23:03:15.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.095" endtime="20201115 23:03:15.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.069" endtime="20201115 23:03:15.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.067" endtime="20201115 23:03:15.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.104" endtime="20201115 23:03:15.391"></status>
</kw>
<msg timestamp="20201115 23:03:15.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.103" endtime="20201115 23:03:15.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.395" endtime="20201115 23:03:15.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.403" endtime="20201115 23:03:15.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.100" endtime="20201115 23:03:15.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.098" endtime="20201115 23:03:15.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:15.410" level="INFO">${RESULT} = [{'time': 0.022780139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.823600000000277e-05, 'source_diff': 6.823600000000277e-05}, {'time': 0.022853139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:15.407" endtime="20201115 23:03:15.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:15.423" level="INFO">${ACCURACY} = {'source_diff': [6.823600000000277e-05, 6.762500000000171e-05, 6.820899999999963e-05, 6.783399999999926e-05, 6.826399999999844e-05, 6.799999999999862e-05, 6.855600000000087e-05, 6.788799999999859e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:15.411" endtime="20201115 23:03:15.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.428" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:03:15.427" endtime="20201115 23:03:15.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.431" level="INFO">VALUE: [6.823600000000277e-05, 6.762500000000171e-05, 6.820899999999963e-05, 6.783399999999926e-05, 6.826399999999844e-05, 6.799999999999862e-05, 6.855600000000087e-05, 6.788799999999859e-05, 6.797199999999948e-05, 6.772199999999923e-05, 6.797199999999948e-05, 6.805499999999742e-05, 6.820800000000016e-05, 6.856900000000096e-05, 6.805600000000037e-05, 6.797199999999948e-05, 6.813900000000178e-05, 6.844500000000031e-05, 6.845900000000335e-05, 6.77640000000014e-05, 6.777699999999803e-05, 6.833399999999976e-05, 6.766600000000095e-05, 6.806900000000046e-05, 6.847199999999998e-05, 6.777800000000098e-05, 6.816700000000092e-05, 6.848599999999955e-05, 6.829200000000105e-05, 6.824999999999887e-05, 6.787500000000196e-05, 6.857000000000044e-05, 6.805600000000037e-05, 6.783399999999926e-05, 6.819500000000006e-05, 6.780500000000064e-05, 6.83619999999989e-05, 6.770799999999966e-05, 6.826299999999896e-05, 6.8277000000002e-05, 6.784699999999935e-05, 6.762500000000171e-05, 6.829199999999758e-05, 6.818000000000102e-05, 6.784699999999935e-05, 6.794499999999981e-05, 6.769499999999956e-05, 6.850000000000259e-05, 6.762500000000171e-05, 6.777799999999751e-05]</msg>
<status status="PASS" starttime="20201115 23:03:15.429" endtime="20201115 23:03:15.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.424" endtime="20201115 23:03:15.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.434" endtime="20201115 23:03:15.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:15.437" endtime="20201115 23:03:15.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.436" endtime="20201115 23:03:15.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.432" endtime="20201115 23:03:15.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.065" endtime="20201115 23:03:15.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.063" endtime="20201115 23:03:15.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.063" endtime="20201115 23:03:15.459"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.462" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.471" endtime="20201115 23:03:15.489"></status>
</kw>
<msg timestamp="20201115 23:03:15.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.469" endtime="20201115 23:03:15.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.490" endtime="20201115 23:03:15.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.493" endtime="20201115 23:03:15.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.467" endtime="20201115 23:03:15.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.464" endtime="20201115 23:03:15.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.502" endtime="20201115 23:03:15.789"></status>
</kw>
<msg timestamp="20201115 23:03:15.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024423833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024493153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.500" endtime="20201115 23:03:15.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024423833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024493153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.793" endtime="20201115 23:03:15.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.802" endtime="20201115 23:03:15.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.498" endtime="20201115 23:03:15.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.496" endtime="20201115 23:03:15.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:15.808" level="INFO">${RESULT} = [{'time': 0.024493153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.932000000000119e-05, 'source_diff': 6.932000000000119e-05}, {'time': 0.024568153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:15.805" endtime="20201115 23:03:15.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:15.866" level="INFO">${ACCURACY} = {'source_diff': [6.932000000000119e-05, 6.862499999999924e-05, 6.916700000000192e-05, 6.912499999999974e-05, 6.884799999999983e-05, 6.887500000000296e-05, 6.948600000000055e-05, 6.94299999999988e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:15.809" endtime="20201115 23:03:15.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.871" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:03:15.870" endtime="20201115 23:03:15.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.873" level="INFO">VALUE: [6.932000000000119e-05, 6.862499999999924e-05, 6.916700000000192e-05, 6.912499999999974e-05, 6.884799999999983e-05, 6.887500000000296e-05, 6.948600000000055e-05, 6.94299999999988e-05, 6.908300000000103e-05, 6.938899999999956e-05, 6.904100000000232e-05, 6.905500000000189e-05, 6.89169999999982e-05, 6.884700000000035e-05, 6.89169999999982e-05, 6.951399999999969e-05, 6.933300000000128e-05, 6.880499999999817e-05, 6.869500000000056e-05, 6.886099999999992e-05, 6.869399999999762e-05, 6.905499999999842e-05, 6.872200000000023e-05, 6.883300000000078e-05, 6.865299999999838e-05, 6.944500000000131e-05, 6.877799999999851e-05, 6.882000000000069e-05, 6.945799999999794e-05, 6.900000000000309e-05, 6.952699999999978e-05, 6.948600000000055e-05, 6.877799999999851e-05, 6.883400000000026e-05, 6.919400000000159e-05, 6.890199999999916e-05, 6.867999999999805e-05, 6.869400000000109e-05, 6.890200000000263e-05, 6.920799999999769e-05, 6.934699999999738e-05, 6.912499999999974e-05, 6.924999999999987e-05, 6.927799999999901e-05, 6.880599999999765e-05, 6.87229999999997e-05, 6.911100000000017e-05, 6.933400000000076e-05, 6.865199999999891e-05, 6.94169999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:03:15.872" endtime="20201115 23:03:15.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.867" endtime="20201115 23:03:15.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.877" endtime="20201115 23:03:15.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:15.881" endtime="20201115 23:03:15.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.879" endtime="20201115 23:03:15.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.875" endtime="20201115 23:03:15.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.463" endtime="20201115 23:03:15.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.461" endtime="20201115 23:03:15.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.460" endtime="20201115 23:03:15.902"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.904" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.912" endtime="20201115 23:03:15.930"></status>
</kw>
<msg timestamp="20201115 23:03:15.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.911" endtime="20201115 23:03:15.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:15.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:15.932" endtime="20201115 23:03:15.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.934" endtime="20201115 23:03:15.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.908" endtime="20201115 23:03:15.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.906" endtime="20201115 23:03:15.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:15.944" endtime="20201115 23:03:16.229"></status>
</kw>
<msg timestamp="20201115 23:03:16.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:15.942" endtime="20201115 23:03:16.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.233" endtime="20201115 23:03:16.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.241" endtime="20201115 23:03:16.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.940" endtime="20201115 23:03:16.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.938" endtime="20201115 23:03:16.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:16.248" level="INFO">${RESULT} = [{'time': 0.022671194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.020799999999869e-05, 'source_diff': 7.020799999999869e-05}, {'time': 0.022748167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:16.245" endtime="20201115 23:03:16.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:16.261" level="INFO">${ACCURACY} = {'source_diff': [7.020799999999869e-05, 7.031999999999872e-05, 7.040199999999719e-05, 7.048599999999808e-05, 7.01109999999977e-05, 7.026400000000044e-05, 6.963899999999981e-05, 7.034700000000185e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:16.249" endtime="20201115 23:03:16.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.266" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:03:16.265" endtime="20201115 23:03:16.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.273" level="INFO">VALUE: [7.020799999999869e-05, 7.031999999999872e-05, 7.040199999999719e-05, 7.048599999999808e-05, 7.01109999999977e-05, 7.026400000000044e-05, 6.963899999999981e-05, 7.034700000000185e-05, 7.040300000000013e-05, 7.000000000000062e-05, 7.034700000000185e-05, 7.056999999999897e-05, 7.043099999999927e-05, 7.025000000000087e-05, 6.968099999999852e-05, 7.019499999999859e-05, 6.983399999999779e-05, 7.051399999999722e-05, 7.006899999999899e-05, 7.038800000000109e-05, 7.012500000000074e-05, 7.041600000000023e-05, 6.99030000000031e-05, 7.040300000000013e-05, 7.033299999999881e-05, 6.977799999999951e-05, 6.993099999999877e-05, 6.976399999999994e-05, 7.034699999999838e-05, 6.982000000000169e-05, 7.04169999999997e-05, 6.990299999999963e-05, 6.961200000000015e-05, 7.026300000000096e-05, 6.995799999999844e-05, 7.034699999999838e-05, 7.048600000000155e-05, 7.02360000000013e-05, 6.962499999999677e-05, 7.061100000000167e-05, 6.984700000000135e-05, 7.037500000000099e-05, 6.963899999999981e-05, 7.004199999999933e-05, 7.048699999999755e-05, 6.99169999999992e-05, 7.004199999999933e-05, 7.041600000000023e-05, 7.008300000000203e-05, 7.013900000000031e-05]</msg>
<status status="PASS" starttime="20201115 23:03:16.267" endtime="20201115 23:03:16.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.262" endtime="20201115 23:03:16.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.276" endtime="20201115 23:03:16.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:16.279" endtime="20201115 23:03:16.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.278" endtime="20201115 23:03:16.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.274" endtime="20201115 23:03:16.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.905" endtime="20201115 23:03:16.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.903" endtime="20201115 23:03:16.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:15.902" endtime="20201115 23:03:16.301"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.303" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.312" endtime="20201115 23:03:16.330"></status>
</kw>
<msg timestamp="20201115 23:03:16.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.311" endtime="20201115 23:03:16.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.331" endtime="20201115 23:03:16.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.334" endtime="20201115 23:03:16.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.308" endtime="20201115 23:03:16.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.305" endtime="20201115 23:03:16.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.343" endtime="20201115 23:03:16.629"></status>
</kw>
<msg timestamp="20201115 23:03:16.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.342" endtime="20201115 23:03:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022991903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.633" endtime="20201115 23:03:16.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.641" endtime="20201115 23:03:16.643"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.339" endtime="20201115 23:03:16.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.337" endtime="20201115 23:03:16.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:16.648" level="INFO">${RESULT} = [{'time': 0.022991903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.086100000000192e-05, 'source_diff': 7.086100000000192e-05}, {'time': 0.023067917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:16.645" endtime="20201115 23:03:16.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:16.662" level="INFO">${ACCURACY} = {'source_diff': [7.086100000000192e-05, 7.059800000000158e-05, 7.084800000000183e-05, 7.126399999999797e-05, 7.070899999999866e-05, 7.062499999999777e-05, 7.142999999999733e-05, 7.127700000000153e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:16.650" endtime="20201115 23:03:16.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.667" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:03:16.666" endtime="20201115 23:03:16.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.669" level="INFO">VALUE: [7.086100000000192e-05, 7.059800000000158e-05, 7.084800000000183e-05, 7.126399999999797e-05, 7.070899999999866e-05, 7.062499999999777e-05, 7.142999999999733e-05, 7.127700000000153e-05, 7.097200000000248e-05, 7.069399999999962e-05, 7.093099999999977e-05, 7.148599999999908e-05, 7.136100000000242e-05, 7.084699999999888e-05, 7.084700000000235e-05, 7.077800000000051e-05, 7.063900000000081e-05, 7.156999999999997e-05, 7.07499999999979e-05, 7.068099999999952e-05, 7.136099999999895e-05, 7.118000000000055e-05, 7.112500000000174e-05, 7.148599999999908e-05, 7.066600000000048e-05, 7.129200000000058e-05, 7.084700000000235e-05, 7.076400000000094e-05, 7.141699999999723e-05, 7.062499999999777e-05, 7.066600000000048e-05, 7.138900000000156e-05, 7.09170000000002e-05, 7.119400000000012e-05, 7.091600000000073e-05, 7.094399999999987e-05, 7.140200000000166e-05, 7.133299999999981e-05, 7.138899999999809e-05, 7.100000000000162e-05, 7.070799999999919e-05, 7.148599999999908e-05, 7.119400000000012e-05, 7.120899999999916e-05, 7.088900000000106e-05, 7.075000000000137e-05, 7.087500000000149e-05, 7.10559999999999e-05, 7.15690000000005e-05, 7.154099999999788e-05]</msg>
<status status="PASS" starttime="20201115 23:03:16.668" endtime="20201115 23:03:16.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.663" endtime="20201115 23:03:16.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.672" endtime="20201115 23:03:16.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:16.676" endtime="20201115 23:03:16.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.674" endtime="20201115 23:03:16.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.671" endtime="20201115 23:03:16.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.304" endtime="20201115 23:03:16.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.302" endtime="20201115 23:03:16.697"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.301" endtime="20201115 23:03:16.697"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.700" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.709" endtime="20201115 23:03:16.727"></status>
</kw>
<msg timestamp="20201115 23:03:16.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.707" endtime="20201115 23:03:16.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:16.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:16.728" endtime="20201115 23:03:16.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.731" endtime="20201115 23:03:16.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.704" endtime="20201115 23:03:16.733"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.702" endtime="20201115 23:03:16.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:16.740" endtime="20201115 23:03:17.026"></status>
</kw>
<msg timestamp="20201115 23:03:17.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:16.739" endtime="20201115 23:03:17.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023030583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023102611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.030" endtime="20201115 23:03:17.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.038" endtime="20201115 23:03:17.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.736" endtime="20201115 23:03:17.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.734" endtime="20201115 23:03:17.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:17.045" level="INFO">${RESULT} = [{'time': 0.023102611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.202799999999829e-05, 'source_diff': 7.202799999999829e-05}, {'time': 0.023177625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:17.042" endtime="20201115 23:03:17.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.059" level="INFO">${ACCURACY} = {'source_diff': [7.202799999999829e-05, 7.25690000000015e-05, 7.234700000000038e-05, 7.184699999999988e-05, 7.240299999999866e-05, 7.22499999999994e-05, 7.213899999999884e-05, 7.248600000000008e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:03:17.046" endtime="20201115 23:03:17.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.063" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.062" endtime="20201115 23:03:17.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.066" level="INFO">VALUE: [7.202799999999829e-05, 7.25690000000015e-05, 7.234700000000038e-05, 7.184699999999988e-05, 7.240299999999866e-05, 7.22499999999994e-05, 7.213899999999884e-05, 7.248600000000008e-05, 7.226399999999897e-05, 7.240300000000213e-05, 7.190300000000163e-05, 7.24439999999979e-05, 7.241599999999876e-05, 7.249999999999965e-05, 7.177799999999804e-05, 7.21109999999997e-05, 7.162499999999877e-05, 7.179199999999761e-05, 7.188899999999859e-05, 7.255599999999793e-05, 7.222299999999973e-05, 7.244499999999737e-05, 7.212499999999927e-05, 7.186099999999945e-05, 7.255599999999793e-05, 7.1762999999999e-05, 7.225000000000287e-05, 7.2069000000001e-05, 7.168000000000105e-05, 7.248600000000008e-05, 7.162500000000224e-05, 7.234700000000038e-05, 7.170800000000019e-05, 7.190299999999816e-05, 7.250000000000312e-05, 7.216699999999798e-05, 7.179200000000108e-05, 7.241699999999823e-05, 7.22499999999994e-05, 7.191600000000173e-05, 7.247200000000051e-05, 7.22910000000021e-05, 7.186099999999945e-05, 7.254199999999836e-05, 7.241699999999823e-05, 7.216700000000145e-05, 7.255599999999793e-05, 7.163900000000181e-05, 7.212499999999927e-05, 7.229200000000158e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.064" endtime="20201115 23:03:17.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.060" endtime="20201115 23:03:17.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.069" endtime="20201115 23:03:17.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.072" endtime="20201115 23:03:17.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.071" endtime="20201115 23:03:17.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.067" endtime="20201115 23:03:17.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.700" endtime="20201115 23:03:17.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.698" endtime="20201115 23:03:17.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:16.698" endtime="20201115 23:03:17.094"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.096" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.105" endtime="20201115 23:03:17.124"></status>
</kw>
<msg timestamp="20201115 23:03:17.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.103" endtime="20201115 23:03:17.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.126" endtime="20201115 23:03:17.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.128" endtime="20201115 23:03:17.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.100" endtime="20201115 23:03:17.130"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.098" endtime="20201115 23:03:17.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.138" endtime="20201115 23:03:17.423"></status>
</kw>
<msg timestamp="20201115 23:03:17.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023303139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023376236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.136" endtime="20201115 23:03:17.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023303139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023376236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.427" endtime="20201115 23:03:17.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.436" endtime="20201115 23:03:17.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.133" endtime="20201115 23:03:17.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.131" endtime="20201115 23:03:17.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:17.442" level="INFO">${RESULT} = [{'time': 0.023376236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.309700000000113e-05, 'source_diff': 7.309700000000113e-05}, {'time': 0.023453236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:17.439" endtime="20201115 23:03:17.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.457" level="INFO">${ACCURACY} = {'source_diff': [7.309700000000113e-05, 7.355499999999945e-05, 7.269399999999815e-05, 7.29170000000022e-05, 7.340299999999966e-05, 7.298600000000058e-05, 7.340299999999966e-05, 7.361099999999773e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:17.443" endtime="20201115 23:03:17.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.462" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.461" endtime="20201115 23:03:17.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.464" level="INFO">VALUE: [7.309700000000113e-05, 7.355499999999945e-05, 7.269399999999815e-05, 7.29170000000022e-05, 7.340299999999966e-05, 7.298600000000058e-05, 7.340299999999966e-05, 7.361099999999773e-05, 7.334699999999791e-05, 7.277699999999956e-05, 7.287500000000002e-05, 7.272200000000076e-05, 7.283299999999784e-05, 7.356899999999902e-05, 7.329200000000258e-05, 7.320800000000169e-05, 7.327799999999954e-05, 7.284700000000088e-05, 7.283300000000131e-05, 7.291699999999873e-05, 7.286100000000045e-05, 7.354199999999936e-05, 7.283300000000131e-05, 7.333400000000129e-05, 7.350000000000065e-05, 7.269399999999815e-05, 7.355500000000292e-05, 7.352799999999979e-05, 7.313900000000331e-05, 7.305500000000242e-05, 7.270800000000119e-05, 7.31110000000007e-05, 7.319499999999812e-05, 7.286099999999698e-05, 7.298600000000058e-05, 7.340299999999966e-05, 7.30560000000019e-05, 7.350000000000065e-05, 7.284700000000088e-05, 7.333299999999834e-05, 7.312500000000027e-05, 7.347200000000151e-05, 7.343100000000227e-05, 7.351400000000022e-05, 7.341699999999923e-05, 7.287500000000002e-05, 7.277800000000251e-05, 7.355499999999945e-05, 7.323600000000083e-05, 7.348600000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.463" endtime="20201115 23:03:17.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.458" endtime="20201115 23:03:17.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.467" endtime="20201115 23:03:17.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.471" endtime="20201115 23:03:17.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.469" endtime="20201115 23:03:17.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.466" endtime="20201115 23:03:17.491"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.097" endtime="20201115 23:03:17.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.095" endtime="20201115 23:03:17.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.094" endtime="20201115 23:03:17.492"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.495" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.504" endtime="20201115 23:03:17.525"></status>
</kw>
<msg timestamp="20201115 23:03:17.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.502" endtime="20201115 23:03:17.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.526" endtime="20201115 23:03:17.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.529" endtime="20201115 23:03:17.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.500" endtime="20201115 23:03:17.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.497" endtime="20201115 23:03:17.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.538" endtime="20201115 23:03:17.824"></status>
</kw>
<msg timestamp="20201115 23:03:17.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025528111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025602167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.537" endtime="20201115 23:03:17.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025528111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025602167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.828" endtime="20201115 23:03:17.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.836" endtime="20201115 23:03:17.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.534" endtime="20201115 23:03:17.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.532" endtime="20201115 23:03:17.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:17.843" level="INFO">${RESULT} = [{'time': 0.025602167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.405599999999943e-05, 'source_diff': 7.405599999999943e-05}, {'time': 0.025681222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:17.839" endtime="20201115 23:03:17.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:17.856" level="INFO">${ACCURACY} = {'source_diff': [7.405599999999943e-05, 7.366600000000001e-05, 7.433299999999934e-05, 7.391600000000026e-05, 7.379100000000013e-05, 7.436099999999848e-05, 7.369399999999915e-05, 7.39309999999993e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:17.844" endtime="20201115 23:03:17.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.861" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:03:17.860" endtime="20201115 23:03:17.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.863" level="INFO">VALUE: [7.405599999999943e-05, 7.366600000000001e-05, 7.433299999999934e-05, 7.391600000000026e-05, 7.379100000000013e-05, 7.436099999999848e-05, 7.369399999999915e-05, 7.39309999999993e-05, 7.398600000000158e-05, 7.369399999999915e-05, 7.405599999999943e-05, 7.372300000000123e-05, 7.427800000000054e-05, 7.39309999999993e-05, 7.363900000000034e-05, 7.366699999999948e-05, 7.379100000000013e-05, 7.447199999999904e-05, 7.419399999999965e-05, 7.455500000000045e-05, 7.379199999999961e-05, 7.377800000000004e-05, 7.429200000000011e-05, 7.362500000000077e-05, 7.455599999999993e-05, 7.388900000000059e-05, 7.409700000000213e-05, 7.362500000000077e-05, 7.404199999999986e-05, 7.420799999999922e-05, 7.36249999999973e-05, 7.433300000000281e-05, 7.406899999999952e-05, 7.455500000000045e-05, 7.372199999999829e-05, 7.386099999999798e-05, 7.391699999999973e-05, 7.448599999999861e-05, 7.404199999999986e-05, 7.45699999999995e-05, 7.386100000000145e-05, 7.383400000000179e-05, 7.370900000000166e-05, 7.447199999999904e-05, 7.386099999999798e-05, 7.377700000000056e-05, 7.438899999999762e-05, 7.376400000000047e-05, 7.449999999999818e-05, 7.419399999999965e-05]</msg>
<status status="PASS" starttime="20201115 23:03:17.862" endtime="20201115 23:03:17.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.857" endtime="20201115 23:03:17.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.867" endtime="20201115 23:03:17.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:17.870" endtime="20201115 23:03:17.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.869" endtime="20201115 23:03:17.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.865" endtime="20201115 23:03:17.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.496" endtime="20201115 23:03:17.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.494" endtime="20201115 23:03:17.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.493" endtime="20201115 23:03:17.891"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.902" endtime="20201115 23:03:17.920"></status>
</kw>
<msg timestamp="20201115 23:03:17.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.901" endtime="20201115 23:03:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:17.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:17.921" endtime="20201115 23:03:17.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.924" endtime="20201115 23:03:17.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.898" endtime="20201115 23:03:17.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.896" endtime="20201115 23:03:17.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:17.933" endtime="20201115 23:03:18.220"></status>
</kw>
<msg timestamp="20201115 23:03:18.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:17.932" endtime="20201115 23:03:18.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.224" endtime="20201115 23:03:18.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.232" endtime="20201115 23:03:18.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.929" endtime="20201115 23:03:18.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.927" endtime="20201115 23:03:18.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:18.239" level="INFO">${RESULT} = [{'time': 0.022648972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.54029999999982e-05, 'source_diff': 7.54029999999982e-05}, {'time': 0.022726972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:18.236" endtime="20201115 23:03:18.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:18.252" level="INFO">${ACCURACY} = {'source_diff': [7.54029999999982e-05, 7.484700000000288e-05, 7.537499999999905e-05, 7.534699999999991e-05, 7.491699999999726e-05, 7.531900000000077e-05, 7.505600000000043e-05, 7.527799999999807e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:18.240" endtime="20201115 23:03:18.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.257" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:03:18.256" endtime="20201115 23:03:18.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.259" level="INFO">VALUE: [7.54029999999982e-05, 7.484700000000288e-05, 7.537499999999905e-05, 7.534699999999991e-05, 7.491699999999726e-05, 7.531900000000077e-05, 7.505600000000043e-05, 7.527799999999807e-05, 7.504199999999739e-05, 7.46249999999983e-05, 7.462500000000177e-05, 7.556900000000102e-05, 7.523599999999936e-05, 7.555499999999798e-05, 7.545800000000047e-05, 7.541600000000176e-05, 7.472200000000276e-05, 7.526400000000197e-05, 7.529200000000111e-05, 7.494499999999987e-05, 7.46249999999983e-05, 7.46249999999983e-05, 7.476400000000147e-05, 7.49029999999977e-05, 7.545800000000047e-05, 7.490300000000116e-05, 7.541599999999829e-05, 7.549999999999918e-05, 7.463900000000134e-05, 7.527800000000154e-05, 7.515299999999794e-05, 7.527799999999807e-05, 7.491700000000073e-05, 7.519500000000012e-05, 7.534699999999991e-05, 7.55700000000005e-05, 7.479200000000061e-05, 7.554099999999841e-05, 7.552699999999885e-05, 7.548599999999961e-05, 7.498599999999911e-05, 7.520800000000022e-05, 7.470799999999972e-05, 7.486099999999898e-05, 7.477800000000104e-05, 7.555599999999746e-05, 7.469400000000015e-05, 7.509799999999914e-05, 7.484699999999941e-05, 7.538899999999862e-05]</msg>
<status status="PASS" starttime="20201115 23:03:18.258" endtime="20201115 23:03:18.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.253" endtime="20201115 23:03:18.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.263" endtime="20201115 23:03:18.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:18.266" endtime="20201115 23:03:18.285"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.264" endtime="20201115 23:03:18.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.261" endtime="20201115 23:03:18.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.894" endtime="20201115 23:03:18.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.893" endtime="20201115 23:03:18.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:17.892" endtime="20201115 23:03:18.288"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.290" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.298" endtime="20201115 23:03:18.317"></status>
</kw>
<msg timestamp="20201115 23:03:18.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.297" endtime="20201115 23:03:18.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.318" endtime="20201115 23:03:18.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.321" endtime="20201115 23:03:18.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.294" endtime="20201115 23:03:18.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.292" endtime="20201115 23:03:18.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.330" endtime="20201115 23:03:18.616"></status>
</kw>
<msg timestamp="20201115 23:03:18.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023440778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023516472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.329" endtime="20201115 23:03:18.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023440778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023516472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.621" endtime="20201115 23:03:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.629" endtime="20201115 23:03:18.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.326" endtime="20201115 23:03:18.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.324" endtime="20201115 23:03:18.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:18.636" level="INFO">${RESULT} = [{'time': 0.023516472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569400000000115e-05, 'source_diff': 7.569400000000115e-05}, {'time': 0.023594431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:18.632" endtime="20201115 23:03:18.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:18.649" level="INFO">${ACCURACY} = {'source_diff': [7.569400000000115e-05, 7.56249999999993e-05, 7.641600000000276e-05, 7.613899999999937e-05, 7.584700000000041e-05, 7.597200000000054e-05, 7.654099999999942e-05, 7.586099999999998e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:18.637" endtime="20201115 23:03:18.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.654" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:03:18.653" endtime="20201115 23:03:18.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.656" level="INFO">VALUE: [7.569400000000115e-05, 7.56249999999993e-05, 7.641600000000276e-05, 7.613899999999937e-05, 7.584700000000041e-05, 7.597200000000054e-05, 7.654099999999942e-05, 7.586099999999998e-05, 7.658400000000107e-05, 7.65700000000015e-05, 7.641699999999876e-05, 7.597200000000054e-05, 7.633400000000082e-05, 7.56249999999993e-05, 7.56249999999993e-05, 7.61379999999999e-05, 7.606900000000152e-05, 7.633300000000134e-05, 7.619400000000165e-05, 7.577800000000204e-05, 7.577799999999857e-05, 7.587499999999955e-05, 7.605600000000143e-05, 7.598600000000011e-05, 7.64029999999992e-05, 7.562500000000277e-05, 7.569500000000062e-05, 7.611100000000023e-05, 7.594399999999793e-05, 7.615199999999947e-05, 7.6457999999998e-05, 7.65830000000016e-05, 7.606899999999805e-05, 7.579199999999814e-05, 7.577800000000204e-05, 7.629199999999864e-05, 7.618099999999808e-05, 7.619499999999765e-05, 7.5763999999999e-05, 7.604199999999839e-05, 7.56110000000032e-05, 7.59029999999987e-05, 7.619500000000112e-05, 7.57769999999991e-05, 7.638800000000015e-05, 7.659700000000116e-05, 7.606900000000152e-05, 7.611100000000023e-05, 7.642999999999886e-05, 7.5763999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:03:18.655" endtime="20201115 23:03:18.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.650" endtime="20201115 23:03:18.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.660" endtime="20201115 23:03:18.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:18.664" endtime="20201115 23:03:18.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.662" endtime="20201115 23:03:18.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.658" endtime="20201115 23:03:18.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.291" endtime="20201115 23:03:18.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.289" endtime="20201115 23:03:18.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.288" endtime="20201115 23:03:18.685"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.688" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.697" endtime="20201115 23:03:18.716"></status>
</kw>
<msg timestamp="20201115 23:03:18.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.695" endtime="20201115 23:03:18.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:18.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:18.718" endtime="20201115 23:03:18.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.720" endtime="20201115 23:03:18.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.692" endtime="20201115 23:03:18.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.690" endtime="20201115 23:03:18.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:18.730" endtime="20201115 23:03:19.015"></status>
</kw>
<msg timestamp="20201115 23:03:19.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024389847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024467083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:18.728" endtime="20201115 23:03:19.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024389847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024467083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.019" endtime="20201115 23:03:19.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.027" endtime="20201115 23:03:19.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.725" endtime="20201115 23:03:19.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.724" endtime="20201115 23:03:19.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:19.034" level="INFO">${RESULT} = [{'time': 0.024467083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723600000000136e-05, 'source_diff': 7.723600000000136e-05}, {'time': 0.024547097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:19.030" endtime="20201115 23:03:19.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:19.049" level="INFO">${ACCURACY} = {'source_diff': [7.723600000000136e-05, 7.71250000000008e-05, 7.709700000000166e-05, 7.669399999999868e-05, 7.741699999999976e-05, 7.698599999999764e-05, 7.686100000000098e-05, 7.670900000000119e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:19.035" endtime="20201115 23:03:19.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.053" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:03:19.052" endtime="20201115 23:03:19.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.056" level="INFO">VALUE: [7.723600000000136e-05, 7.71250000000008e-05, 7.709700000000166e-05, 7.669399999999868e-05, 7.741699999999976e-05, 7.698599999999764e-05, 7.686100000000098e-05, 7.670900000000119e-05, 7.691700000000273e-05, 7.691699999999926e-05, 7.670899999999772e-05, 7.748700000000108e-05, 7.67770000000001e-05, 7.754100000000042e-05, 7.748599999999814e-05, 7.669400000000215e-05, 7.684700000000141e-05, 7.669400000000215e-05, 7.748599999999814e-05, 7.754100000000042e-05, 7.686100000000098e-05, 7.755599999999946e-05, 7.697200000000154e-05, 7.6764e-05, 7.744399999999943e-05, 7.690200000000022e-05, 7.719399999999918e-05, 7.713900000000037e-05, 7.729199999999964e-05, 7.691699999999926e-05, 7.705499999999949e-05, 7.736099999999801e-05, 7.701400000000025e-05, 7.713900000000037e-05, 7.688900000000012e-05, 7.693099999999883e-05, 7.693099999999883e-05, 7.754199999999989e-05, 7.675000000000043e-05, 7.663899999999987e-05, 7.670799999999825e-05, 7.705499999999949e-05, 7.71250000000008e-05, 7.74030000000002e-05, 7.756899999999955e-05, 7.713900000000037e-05, 7.751400000000075e-05, 7.66250000000003e-05, 7.748599999999814e-05, 7.679199999999914e-05]</msg>
<status status="PASS" starttime="20201115 23:03:19.054" endtime="20201115 23:03:19.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.050" endtime="20201115 23:03:19.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.059" endtime="20201115 23:03:19.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:19.063" endtime="20201115 23:03:19.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.061" endtime="20201115 23:03:19.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.058" endtime="20201115 23:03:19.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.688" endtime="20201115 23:03:19.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.686" endtime="20201115 23:03:19.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:18.685" endtime="20201115 23:03:19.084"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.086" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.095" endtime="20201115 23:03:19.114"></status>
</kw>
<msg timestamp="20201115 23:03:19.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.093" endtime="20201115 23:03:19.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.116" endtime="20201115 23:03:19.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.118" endtime="20201115 23:03:19.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.091" endtime="20201115 23:03:19.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.088" endtime="20201115 23:03:19.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.127" endtime="20201115 23:03:19.412"></status>
</kw>
<msg timestamp="20201115 23:03:19.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023113611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.126" endtime="20201115 23:03:19.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023113611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023192097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.416" endtime="20201115 23:03:19.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.425" endtime="20201115 23:03:19.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.123" endtime="20201115 23:03:19.427"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.121" endtime="20201115 23:03:19.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:19.431" level="INFO">${RESULT} = [{'time': 0.023192097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.848599999999914e-05, 'source_diff': 7.848599999999914e-05}, {'time': 0.023274111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:19.428" endtime="20201115 23:03:19.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:19.445" level="INFO">${ACCURACY} = {'source_diff': [7.848599999999914e-05, 7.81250000000018e-05, 7.84169999999973e-05, 7.791600000000079e-05, 7.837499999999858e-05, 7.844500000000337e-05, 7.759700000000216e-05, 7.784800000000189e-05, 7...</msg>
<status status="PASS" starttime="20201115 23:03:19.433" endtime="20201115 23:03:19.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.450" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:03:19.449" endtime="20201115 23:03:19.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.452" level="INFO">VALUE: [7.848599999999914e-05, 7.81250000000018e-05, 7.84169999999973e-05, 7.791600000000079e-05, 7.837499999999858e-05, 7.844500000000337e-05, 7.759700000000216e-05, 7.784800000000189e-05, 7.770900000000219e-05, 7.852799999999785e-05, 7.768000000000011e-05, 7.793000000000036e-05, 7.819400000000018e-05, 7.812499999999833e-05, 7.820799999999975e-05, 7.841700000000076e-05, 7.798599999999864e-05, 7.791700000000026e-05, 7.840299999999772e-05, 7.80969999999992e-05, 7.806999999999953e-05, 7.854200000000089e-05, 7.841700000000076e-05, 7.783299999999937e-05, 7.800000000000168e-05, 7.837499999999858e-05, 7.836099999999901e-05, 7.775000000000143e-05, 7.84169999999973e-05, 7.75969999999987e-05, 7.857000000000003e-05, 7.82640000000015e-05, 7.802799999999735e-05, 7.848699999999861e-05, 7.777800000000057e-05, 7.843000000000086e-05, 7.770799999999925e-05, 7.800000000000168e-05, 7.780599999999971e-05, 7.786099999999851e-05, 7.855500000000099e-05, 7.849999999999871e-05, 7.827800000000107e-05, 7.762499999999783e-05, 7.800000000000168e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.855599999999699e-05, 7.819499999999965e-05, 7.806900000000006e-05]</msg>
<status status="PASS" starttime="20201115 23:03:19.451" endtime="20201115 23:03:19.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.446" endtime="20201115 23:03:19.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.456" endtime="20201115 23:03:19.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:19.459" endtime="20201115 23:03:19.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.458" endtime="20201115 23:03:19.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.454" endtime="20201115 23:03:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.087" endtime="20201115 23:03:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.085" endtime="20201115 23:03:19.480"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.084" endtime="20201115 23:03:19.480"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.483" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.491" endtime="20201115 23:03:19.509"></status>
</kw>
<msg timestamp="20201115 23:03:19.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.489" endtime="20201115 23:03:19.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.511" endtime="20201115 23:03:19.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.513" endtime="20201115 23:03:19.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.487" endtime="20201115 23:03:19.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.485" endtime="20201115 23:03:19.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.523" endtime="20201115 23:03:19.809"></status>
</kw>
<msg timestamp="20201115 23:03:19.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.521" endtime="20201115 23:03:19.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022880292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022959278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.814" endtime="20201115 23:03:19.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.822" endtime="20201115 23:03:19.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.518" endtime="20201115 23:03:19.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.517" endtime="20201115 23:03:19.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:19.829" level="INFO">${RESULT} = [{'time': 0.022959278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.898599999999964e-05, 'source_diff': 7.898599999999964e-05}, {'time': 0.023042278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:19.826" endtime="20201115 23:03:19.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:19.843" level="INFO">${ACCURACY} = {'source_diff': [7.898599999999964e-05, 7.883399999999985e-05, 7.876399999999853e-05, 7.904199999999792e-05, 7.919500000000065e-05, 7.942999999999839e-05, 7.955499999999852e-05, 7.948600000000014e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:19.830" endtime="20201115 23:03:19.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.847" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:03:19.846" endtime="20201115 23:03:19.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.850" level="INFO">VALUE: [7.898599999999964e-05, 7.883399999999985e-05, 7.876399999999853e-05, 7.904199999999792e-05, 7.919500000000065e-05, 7.942999999999839e-05, 7.955499999999852e-05, 7.948600000000014e-05, 7.92779999999986e-05, 7.948600000000014e-05, 7.927800000000207e-05, 7.87770000000021e-05, 7.938899999999915e-05, 7.87229999999993e-05, 7.94169999999983e-05, 7.876399999999853e-05, 7.920899999999675e-05, 7.954200000000189e-05, 7.86250000000023e-05, 7.959699999999723e-05, 7.948600000000014e-05, 7.936100000000001e-05, 7.949999999999971e-05, 7.862499999999883e-05, 7.886099999999951e-05, 7.962499999999983e-05, 7.870800000000025e-05, 7.913900000000237e-05, 7.927800000000207e-05, 7.920800000000075e-05, 7.892999999999789e-05, 7.919400000000118e-05, 7.937499999999958e-05, 7.899999999999921e-05, 7.898600000000311e-05, 7.941700000000176e-05, 7.87779999999981e-05, 7.898599999999964e-05, 7.89030000000017e-05, 7.882000000000028e-05, 7.868100000000058e-05, 7.87229999999993e-05, 7.948600000000014e-05, 7.875000000000243e-05, 7.876299999999906e-05, 7.898599999999964e-05, 7.880600000000071e-05, 7.876399999999853e-05, 7.898599999999964e-05, 7.883300000000037e-05]</msg>
<status status="PASS" starttime="20201115 23:03:19.849" endtime="20201115 23:03:19.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.844" endtime="20201115 23:03:19.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.853" endtime="20201115 23:03:19.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:19.857" endtime="20201115 23:03:19.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.855" endtime="20201115 23:03:19.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.852" endtime="20201115 23:03:19.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.483" endtime="20201115 23:03:19.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.482" endtime="20201115 23:03:19.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.481" endtime="20201115 23:03:19.878"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.880" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.889" endtime="20201115 23:03:19.906"></status>
</kw>
<msg timestamp="20201115 23:03:19.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.887" endtime="20201115 23:03:19.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:19.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:19.908" endtime="20201115 23:03:19.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.911" endtime="20201115 23:03:19.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.884" endtime="20201115 23:03:19.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.882" endtime="20201115 23:03:19.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:19.921" endtime="20201115 23:03:20.207"></status>
</kw>
<msg timestamp="20201115 23:03:20.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:19.919" endtime="20201115 23:03:20.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022954597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.211" endtime="20201115 23:03:20.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.220" endtime="20201115 23:03:20.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.916" endtime="20201115 23:03:20.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.914" endtime="20201115 23:03:20.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:20.226" level="INFO">${RESULT} = [{'time': 0.023034917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.031999999999831e-05, 'source_diff': 8.031999999999831e-05}, {'time': 0.023121931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:20.223" endtime="20201115 23:03:20.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:20.240" level="INFO">${ACCURACY} = {'source_diff': [8.031999999999831e-05, 8.055599999999899e-05, 7.969400000000168e-05, 8.050000000000071e-05, 8.004099999999945e-05, 7.956900000000156e-05, 7.96389999999994e-05, 7.991700000000226e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:20.227" endtime="20201115 23:03:20.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.245" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:03:20.243" endtime="20201115 23:03:20.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.247" level="INFO">VALUE: [8.031999999999831e-05, 8.055599999999899e-05, 7.969400000000168e-05, 8.050000000000071e-05, 8.004099999999945e-05, 7.956900000000156e-05, 7.96389999999994e-05, 7.991700000000226e-05, 8.054199999999942e-05, 8.040299999999972e-05, 7.966699999999854e-05, 8.04169999999993e-05, 7.973600000000039e-05, 8.019499999999818e-05, 8.048599999999767e-05, 7.974999999999996e-05, 8.005500000000249e-05, 7.984700000000094e-05, 8.019399999999871e-05, 8.036100000000101e-05, 7.98329999999979e-05, 7.961100000000026e-05, 8.043100000000233e-05, 7.987500000000008e-05, 7.99169999999988e-05, 7.97779999999991e-05, 7.968099999999811e-05, 7.99169999999988e-05, 8.03329999999984e-05, 8.01389999999999e-05, 8.026400000000003e-05, 8.050000000000071e-05, 8.036100000000101e-05, 8.026400000000003e-05, 8.055600000000246e-05, 8.04169999999993e-05, 8.040299999999972e-05, 7.990299999999922e-05, 7.961199999999974e-05, 8.040299999999972e-05, 7.962499999999983e-05, 8.041599999999982e-05, 7.99580000000015e-05, 7.974999999999996e-05, 8.038900000000015e-05, 7.970799999999778e-05, 7.974999999999996e-05, 7.987500000000008e-05, 7.991700000000226e-05, 8.02779999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:03:20.246" endtime="20201115 23:03:20.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.241" endtime="20201115 23:03:20.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.250" endtime="20201115 23:03:20.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:20.254" endtime="20201115 23:03:20.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.252" endtime="20201115 23:03:20.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.249" endtime="20201115 23:03:20.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.881" endtime="20201115 23:03:20.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.879" endtime="20201115 23:03:20.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:19.878" endtime="20201115 23:03:20.275"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.277" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.285" endtime="20201115 23:03:20.306"></status>
</kw>
<msg timestamp="20201115 23:03:20.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.284" endtime="20201115 23:03:20.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.308" endtime="20201115 23:03:20.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.311" endtime="20201115 23:03:20.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.281" endtime="20201115 23:03:20.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.279" endtime="20201115 23:03:20.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.320" endtime="20201115 23:03:20.607"></status>
</kw>
<msg timestamp="20201115 23:03:20.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.318" endtime="20201115 23:03:20.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023912903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.612" endtime="20201115 23:03:20.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.620" endtime="20201115 23:03:20.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.316" endtime="20201115 23:03:20.622"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.314" endtime="20201115 23:03:20.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:20.627" level="INFO">${RESULT} = [{'time': 0.023994319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.141600000000082e-05, 'source_diff': 8.141600000000082e-05}, {'time': 0.024080306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:20.623" endtime="20201115 23:03:20.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:20.642" level="INFO">${ACCURACY} = {'source_diff': [8.141600000000082e-05, 8.084799999999795e-05, 8.140200000000125e-05, 8.086100000000151e-05, 8.112500000000133e-05, 8.150000000000171e-05, 8.122200000000232e-05, 8.126399999999756e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:20.628" endtime="20201115 23:03:20.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.646" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:03:20.645" endtime="20201115 23:03:20.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.649" level="INFO">VALUE: [8.141600000000082e-05, 8.084799999999795e-05, 8.140200000000125e-05, 8.086100000000151e-05, 8.112500000000133e-05, 8.150000000000171e-05, 8.122200000000232e-05, 8.126399999999756e-05, 8.076400000000053e-05, 8.126299999999809e-05, 8.062500000000083e-05, 8.112499999999787e-05, 8.069500000000215e-05, 8.070899999999825e-05, 8.155599999999999e-05, 8.094399999999946e-05, 8.123599999999842e-05, 8.090200000000075e-05, 8.062500000000083e-05, 8.136100000000202e-05, 8.07780000000001e-05, 8.084699999999848e-05, 8.136099999999855e-05, 8.068100000000258e-05, 8.154099999999748e-05, 8.093099999999936e-05, 8.098699999999764e-05, 8.077699999999716e-05, 8.155500000000052e-05, 8.105500000000002e-05, 8.069399999999921e-05, 8.11390000000009e-05, 8.151400000000128e-05, 8.129200000000017e-05, 8.081899999999934e-05, 8.14170000000003e-05, 8.130599999999974e-05, 8.136199999999802e-05, 8.083400000000185e-05, 8.075000000000096e-05, 8.155500000000052e-05, 8.156900000000009e-05, 8.112500000000133e-05, 8.134699999999898e-05, 8.120800000000275e-05, 8.088900000000065e-05, 8.148600000000214e-05, 8.138899999999769e-05, 8.11390000000009e-05, 8.120899999999875e-05]</msg>
<status status="PASS" starttime="20201115 23:03:20.647" endtime="20201115 23:03:20.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.643" endtime="20201115 23:03:20.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.652" endtime="20201115 23:03:20.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:20.655" endtime="20201115 23:03:20.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.654" endtime="20201115 23:03:20.675"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.650" endtime="20201115 23:03:20.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.278" endtime="20201115 23:03:20.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.276" endtime="20201115 23:03:20.676"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.275" endtime="20201115 23:03:20.677"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.679" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.688" endtime="20201115 23:03:20.707"></status>
</kw>
<msg timestamp="20201115 23:03:20.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.686" endtime="20201115 23:03:20.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:20.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:20.709" endtime="20201115 23:03:20.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.712" endtime="20201115 23:03:20.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.683" endtime="20201115 23:03:20.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.681" endtime="20201115 23:03:20.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:20.721" endtime="20201115 23:03:21.006"></status>
</kw>
<msg timestamp="20201115 23:03:21.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023604125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:20.719" endtime="20201115 23:03:21.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023604125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.010" endtime="20201115 23:03:21.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.018" endtime="20201115 23:03:21.020"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.716" endtime="20201115 23:03:21.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.715" endtime="20201115 23:03:21.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.025" level="INFO">${RESULT} = [{'time': 0.023604125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193100000000036e-05, 'source_diff': 8.193100000000036e-05}, {'time': 0.023692167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.022" endtime="20201115 23:03:21.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:21.039" level="INFO">${ACCURACY} = {'source_diff': [8.193100000000036e-05, 8.251399999999881e-05, 8.212499999999887e-05, 8.200000000000221e-05, 8.241600000000182e-05, 8.174999999999849e-05, 8.209699999999973e-05, 8.212499999999887e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:21.026" endtime="20201115 23:03:21.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.043" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:03:21.042" endtime="20201115 23:03:21.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.046" level="INFO">VALUE: [8.193100000000036e-05, 8.251399999999881e-05, 8.212499999999887e-05, 8.200000000000221e-05, 8.241600000000182e-05, 8.174999999999849e-05, 8.209699999999973e-05, 8.212499999999887e-05, 8.170800000000325e-05, 8.23330000000004e-05, 8.205499999999755e-05, 8.244500000000043e-05, 8.241699999999783e-05, 8.207000000000006e-05, 8.184799999999895e-05, 8.22919999999977e-05, 8.188899999999819e-05, 8.194499999999993e-05, 8.254199999999795e-05, 8.213800000000243e-05, 8.198599999999917e-05, 8.218000000000114e-05, 8.238900000000215e-05, 8.226399999999856e-05, 8.193100000000036e-05, 8.204200000000092e-05, 8.236099999999955e-05, 8.180600000000024e-05, 8.248599999999967e-05, 8.247299999999957e-05, 8.204100000000145e-05, 8.186100000000252e-05, 8.238900000000215e-05, 8.162499999999837e-05, 8.241599999999835e-05, 8.162499999999837e-05, 8.20970000000032e-05, 8.176399999999806e-05, 8.156900000000009e-05, 8.205599999999702e-05, 8.17369999999984e-05, 8.252800000000185e-05, 8.255600000000099e-05, 8.220800000000028e-05, 8.180500000000077e-05, 8.206900000000059e-05, 8.177699999999816e-05, 8.169400000000021e-05, 8.249999999999924e-05, 8.19719999999996e-05]</msg>
<status status="PASS" starttime="20201115 23:03:21.044" endtime="20201115 23:03:21.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.040" endtime="20201115 23:03:21.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.049" endtime="20201115 23:03:21.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:21.052" endtime="20201115 23:03:21.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.051" endtime="20201115 23:03:21.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.047" endtime="20201115 23:03:21.073"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.680" endtime="20201115 23:03:21.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.678" endtime="20201115 23:03:21.074"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:20.677" endtime="20201115 23:03:21.074"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.077" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.085" endtime="20201115 23:03:21.105"></status>
</kw>
<msg timestamp="20201115 23:03:21.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.083" endtime="20201115 23:03:21.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.107" endtime="20201115 23:03:21.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.109" endtime="20201115 23:03:21.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.081" endtime="20201115 23:03:21.111"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.079" endtime="20201115 23:03:21.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.118" endtime="20201115 23:03:21.405"></status>
</kw>
<msg timestamp="20201115 23:03:21.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.117" endtime="20201115 23:03:21.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023892306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.409" endtime="20201115 23:03:21.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.417" endtime="20201115 23:03:21.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.114" endtime="20201115 23:03:21.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.112" endtime="20201115 23:03:21.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.424" level="INFO">${RESULT} = [{'time': 0.023892306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.311199999999977e-05, 'source_diff': 8.311199999999977e-05}, {'time': 0.023981306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.420" endtime="20201115 23:03:21.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:21.437" level="INFO">${ACCURACY} = {'source_diff': [8.311199999999977e-05, 8.276400000000253e-05, 8.283400000000038e-05, 8.334700000000098e-05, 8.291699999999833e-05, 8.342999999999892e-05, 8.269400000000121e-05, 8.327799999999913e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:21.425" endtime="20201115 23:03:21.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.442" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:03:21.441" endtime="20201115 23:03:21.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.444" level="INFO">VALUE: [8.311199999999977e-05, 8.276400000000253e-05, 8.283400000000038e-05, 8.334700000000098e-05, 8.291699999999833e-05, 8.342999999999892e-05, 8.269400000000121e-05, 8.327799999999913e-05, 8.283299999999744e-05, 8.326399999999956e-05, 8.269500000000068e-05, 8.300000000000321e-05, 8.355600000000199e-05, 8.354200000000242e-05, 8.322200000000085e-05, 8.292999999999842e-05, 8.324999999999999e-05, 8.284700000000048e-05, 8.306899999999812e-05, 8.340299999999926e-05, 8.284700000000048e-05, 8.306999999999759e-05, 8.308400000000063e-05, 8.340299999999926e-05, 8.334700000000098e-05, 8.263899999999894e-05, 8.320900000000075e-05, 8.269499999999722e-05, 8.287499999999962e-05, 8.299999999999974e-05, 8.340199999999978e-05, 8.324999999999999e-05, 8.34309999999984e-05, 8.284700000000048e-05, 8.276399999999906e-05, 8.263899999999894e-05, 8.27919999999982e-05, 8.280600000000124e-05, 8.290299999999876e-05, 8.320900000000075e-05, 8.298600000000017e-05, 8.331899999999837e-05, 8.341599999999935e-05, 8.334700000000098e-05, 8.33469999999975e-05, 8.27780000000021e-05, 8.312499999999987e-05, 8.29720000000006e-05, 8.34170000000023e-05, 8.284700000000048e-05]</msg>
<status status="PASS" starttime="20201115 23:03:21.443" endtime="20201115 23:03:21.449"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.438" endtime="20201115 23:03:21.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.452" endtime="20201115 23:03:21.454"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:21.456" endtime="20201115 23:03:21.475"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.454" endtime="20201115 23:03:21.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.451" endtime="20201115 23:03:21.476"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.077" endtime="20201115 23:03:21.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.075" endtime="20201115 23:03:21.477"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.074" endtime="20201115 23:03:21.477"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.480" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.488" endtime="20201115 23:03:21.506"></status>
</kw>
<msg timestamp="20201115 23:03:21.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.486" endtime="20201115 23:03:21.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.508" endtime="20201115 23:03:21.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.510" endtime="20201115 23:03:21.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.484" endtime="20201115 23:03:21.512"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.482" endtime="20201115 23:03:21.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.519" endtime="20201115 23:03:21.805"></status>
</kw>
<msg timestamp="20201115 23:03:21.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.518" endtime="20201115 23:03:21.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.810" endtime="20201115 23:03:21.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.818" endtime="20201115 23:03:21.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.515" endtime="20201115 23:03:21.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.513" endtime="20201115 23:03:21.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:21.825" level="INFO">${RESULT} = [{'time': 0.022316028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.444500000000243e-05, 'source_diff': 8.444500000000243e-05}, {'time': 0.022407028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:21.821" endtime="20201115 23:03:21.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:21.838" level="INFO">${ACCURACY} = {'source_diff': [8.444500000000243e-05, 8.431999999999884e-05, 8.437499999999765e-05, 8.397199999999813e-05, 8.425000000000099e-05, 8.437500000000112e-05, 8.437500000000112e-05, 8.405499999999955e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:21.826" endtime="20201115 23:03:21.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.843" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:03:21.842" endtime="20201115 23:03:21.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.846" level="INFO">VALUE: [8.444500000000243e-05, 8.431999999999884e-05, 8.437499999999765e-05, 8.397199999999813e-05, 8.425000000000099e-05, 8.437500000000112e-05, 8.437500000000112e-05, 8.405499999999955e-05, 8.391699999999933e-05, 8.448600000000167e-05, 8.3846999999998e-05, 8.36249999999969e-05, 8.383299999999844e-05, 8.400000000000074e-05, 8.375000000000049e-05, 8.427800000000013e-05, 8.412500000000087e-05, 8.44170000000033e-05, 8.454100000000048e-05, 8.36529999999995e-05, 8.445800000000253e-05, 8.39170000000028e-05, 8.377799999999963e-05, 8.363899999999994e-05, 8.383399999999791e-05, 8.454199999999995e-05, 8.433399999999841e-05, 8.398700000000064e-05, 8.392999999999942e-05, 8.377700000000016e-05, 8.449999999999777e-05, 8.458299999999919e-05, 8.383299999999844e-05, 8.3846999999998e-05, 8.43469999999985e-05, 8.411099999999783e-05, 8.39309999999989e-05, 8.441699999999983e-05, 8.405599999999902e-05, 8.447300000000157e-05, 8.405600000000249e-05, 8.408299999999869e-05, 8.426300000000109e-05, 8.39859999999977e-05, 8.388900000000019e-05, 8.42919999999997e-05, 8.438900000000069e-05, 8.427800000000013e-05, 8.413900000000044e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201115 23:03:21.844" endtime="20201115 23:03:21.846"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.839" endtime="20201115 23:03:21.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.849" endtime="20201115 23:03:21.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:21.853" endtime="20201115 23:03:21.872"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.851" endtime="20201115 23:03:21.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.847" endtime="20201115 23:03:21.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.480" endtime="20201115 23:03:21.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.478" endtime="20201115 23:03:21.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.478" endtime="20201115 23:03:21.874"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.876" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.885" endtime="20201115 23:03:21.903"></status>
</kw>
<msg timestamp="20201115 23:03:21.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.883" endtime="20201115 23:03:21.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:21.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:21.905" endtime="20201115 23:03:21.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.908" endtime="20201115 23:03:21.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.880" endtime="20201115 23:03:21.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.878" endtime="20201115 23:03:21.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:21.917" endtime="20201115 23:03:22.202"></status>
</kw>
<msg timestamp="20201115 23:03:22.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:21.915" endtime="20201115 23:03:22.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.207" endtime="20201115 23:03:22.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.215" endtime="20201115 23:03:22.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.913" endtime="20201115 23:03:22.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.911" endtime="20201115 23:03:22.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:22.222" level="INFO">${RESULT} = [{'time': 0.023203625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.494399999999999e-05, 'source_diff': 8.494399999999999e-05}, {'time': 0.023292625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:22.218" endtime="20201115 23:03:22.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:22.237" level="INFO">${ACCURACY} = {'source_diff': [8.494399999999999e-05, 8.512500000000187e-05, 8.506999999999959e-05, 8.547199999999963e-05, 8.529100000000123e-05, 8.533399999999941e-05, 8.506900000000012e-05, 8.548600000000267e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:22.223" endtime="20201115 23:03:22.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.241" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:03:22.240" endtime="20201115 23:03:22.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.244" level="INFO">VALUE: [8.494399999999999e-05, 8.512500000000187e-05, 8.506999999999959e-05, 8.547199999999963e-05, 8.529100000000123e-05, 8.533399999999941e-05, 8.506900000000012e-05, 8.548600000000267e-05, 8.4846999999999e-05, 8.520799999999981e-05, 8.533399999999941e-05, 8.476400000000106e-05, 8.520800000000328e-05, 8.541700000000083e-05, 8.544499999999997e-05, 8.49309999999999e-05, 8.541700000000083e-05, 8.488900000000119e-05, 8.47370000000014e-05, 8.486100000000205e-05, 8.538899999999822e-05, 8.518000000000067e-05, 8.552800000000138e-05, 8.515299999999754e-05, 8.469399999999974e-05, 8.555600000000052e-05, 8.555600000000052e-05, 8.463899999999747e-05, 8.527800000000113e-05, 8.470899999999879e-05, 8.506999999999959e-05, 8.481999999999934e-05, 8.49859999999987e-05, 8.505499999999708e-05, 8.491600000000085e-05, 8.51669999999971e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.540300000000126e-05, 8.463900000000094e-05, 8.49859999999987e-05, 8.505600000000002e-05, 8.522199999999938e-05, 8.468099999999965e-05, 8.527699999999819e-05, 8.520799999999981e-05, 8.488899999999772e-05, 8.4846999999999e-05, 8.509699999999926e-05, 8.541700000000083e-05]</msg>
<status status="PASS" starttime="20201115 23:03:22.242" endtime="20201115 23:03:22.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.238" endtime="20201115 23:03:22.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.247" endtime="20201115 23:03:22.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:22.250" endtime="20201115 23:03:22.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.249" endtime="20201115 23:03:22.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.245" endtime="20201115 23:03:22.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.877" endtime="20201115 23:03:22.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.875" endtime="20201115 23:03:22.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:21.874" endtime="20201115 23:03:22.272"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.274" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.282" endtime="20201115 23:03:22.301"></status>
</kw>
<msg timestamp="20201115 23:03:22.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.281" endtime="20201115 23:03:22.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.303" endtime="20201115 23:03:22.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.306" endtime="20201115 23:03:22.307"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.278" endtime="20201115 23:03:22.308"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.276" endtime="20201115 23:03:22.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.315" endtime="20201115 23:03:22.601"></status>
</kw>
<msg timestamp="20201115 23:03:22.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.313" endtime="20201115 23:03:22.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022205361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.605" endtime="20201115 23:03:22.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.613" endtime="20201115 23:03:22.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.310" endtime="20201115 23:03:22.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.309" endtime="20201115 23:03:22.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:22.620" level="INFO">${RESULT} = [{'time': 0.022205361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.604200000000145e-05, 'source_diff': 8.604200000000145e-05}, {'time': 0.022298319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:22.617" endtime="20201115 23:03:22.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:22.634" level="INFO">${ACCURACY} = {'source_diff': [8.604200000000145e-05, 8.63470000000005e-05, 8.600000000000274e-05, 8.5847e-05, 8.613899999999897e-05, 8.57920000000012e-05, 8.579199999999773e-05, 8.590299999999829e-05, 8.5847999999...</msg>
<status status="PASS" starttime="20201115 23:03:22.621" endtime="20201115 23:03:22.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.638" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:03:22.637" endtime="20201115 23:03:22.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.641" level="INFO">VALUE: [8.604200000000145e-05, 8.63470000000005e-05, 8.600000000000274e-05, 8.5847e-05, 8.613899999999897e-05, 8.57920000000012e-05, 8.579199999999773e-05, 8.590299999999829e-05, 8.584799999999948e-05, 8.63470000000005e-05, 8.584799999999948e-05, 8.658299999999772e-05, 8.655599999999805e-05, 8.605499999999808e-05, 8.627699999999919e-05, 8.5847e-05, 8.61799999999982e-05, 8.631900000000137e-05, 8.619400000000124e-05, 8.5847e-05, 8.577799999999816e-05, 8.619500000000072e-05, 8.641699999999836e-05, 8.642999999999845e-05, 8.623699999999943e-05, 8.629099999999876e-05, 8.588899999999872e-05, 8.570799999999684e-05, 8.630499999999833e-05, 8.591699999999786e-05, 8.626400000000256e-05, 8.633300000000094e-05, 8.577800000000163e-05, 8.638799999999974e-05, 8.563900000000194e-05, 8.576399999999859e-05, 8.584799999999948e-05, 8.590199999999881e-05, 8.606900000000112e-05, 8.649999999999977e-05, 8.595800000000056e-05, 8.648599999999673e-05, 8.616700000000158e-05, 8.561099999999933e-05, 8.647200000000063e-05, 8.570899999999979e-05, 8.563900000000194e-05, 8.625000000000299e-05, 8.613899999999897e-05, 8.633300000000094e-05]</msg>
<status status="PASS" starttime="20201115 23:03:22.639" endtime="20201115 23:03:22.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.635" endtime="20201115 23:03:22.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.644" endtime="20201115 23:03:22.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:22.648" endtime="20201115 23:03:22.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.646" endtime="20201115 23:03:22.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.642" endtime="20201115 23:03:22.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.275" endtime="20201115 23:03:22.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.273" endtime="20201115 23:03:22.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.272" endtime="20201115 23:03:22.669"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.671" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.679" endtime="20201115 23:03:22.698"></status>
</kw>
<msg timestamp="20201115 23:03:22.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.678" endtime="20201115 23:03:22.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:22.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:22.700" endtime="20201115 23:03:22.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.703" endtime="20201115 23:03:22.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.675" endtime="20201115 23:03:22.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.673" endtime="20201115 23:03:22.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:22.712" endtime="20201115 23:03:22.997"></status>
</kw>
<msg timestamp="20201115 23:03:23.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:22.710" endtime="20201115 23:03:23.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.002" endtime="20201115 23:03:23.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.010" endtime="20201115 23:03:23.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.708" endtime="20201115 23:03:23.012"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.706" endtime="20201115 23:03:23.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.017" level="INFO">${RESULT} = [{'time': 0.022212736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.71250000000004e-05, 'source_diff': 8.71250000000004e-05}, {'time': 0.022304694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:03:23.013" endtime="20201115 23:03:23.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.030" level="INFO">${ACCURACY} = {'source_diff': [8.71250000000004e-05, 8.747200000000163e-05, 8.758299999999872e-05, 8.726400000000009e-05, 8.736100000000108e-05, 8.705499999999908e-05, 8.663899999999947e-05, 8.750000000000077e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:23.017" endtime="20201115 23:03:23.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.035" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.034" endtime="20201115 23:03:23.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.037" level="INFO">VALUE: [8.71250000000004e-05, 8.747200000000163e-05, 8.758299999999872e-05, 8.726400000000009e-05, 8.736100000000108e-05, 8.705499999999908e-05, 8.663899999999947e-05, 8.750000000000077e-05, 8.740299999999979e-05, 8.732000000000184e-05, 8.738900000000022e-05, 8.706899999999865e-05, 8.74999999999973e-05, 8.666599999999913e-05, 8.665299999999904e-05, 8.711099999999736e-05, 8.6847000000001e-05, 8.743099999999893e-05, 8.736099999999761e-05, 8.756999999999862e-05, 8.708400000000116e-05, 8.705600000000202e-05, 8.722300000000086e-05, 8.745799999999859e-05, 8.742999999999945e-05, 8.661100000000033e-05, 8.754100000000001e-05, 8.741599999999988e-05, 8.73470000000015e-05, 8.665299999999904e-05, 8.734699999999804e-05, 8.743099999999893e-05, 8.71250000000004e-05, 8.677799999999916e-05, 8.695900000000104e-05, 8.670800000000131e-05, 8.725000000000052e-05, 8.750000000000077e-05, 8.73470000000015e-05, 8.733300000000194e-05, 8.741599999999988e-05, 8.665299999999904e-05, 8.684699999999754e-05, 8.758400000000166e-05, 8.66249999999999e-05, 8.677800000000263e-05, 8.705499999999908e-05, 8.673600000000045e-05, 8.74730000000011e-05, 8.684699999999754e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.036" endtime="20201115 23:03:23.038"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.031" endtime="20201115 23:03:23.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.040" endtime="20201115 23:03:23.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.044" endtime="20201115 23:03:23.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.042" endtime="20201115 23:03:23.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.039" endtime="20201115 23:03:23.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.672" endtime="20201115 23:03:23.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.670" endtime="20201115 23:03:23.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:22.669" endtime="20201115 23:03:23.065"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.067" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.075" endtime="20201115 23:03:23.094"></status>
</kw>
<msg timestamp="20201115 23:03:23.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.074" endtime="20201115 23:03:23.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.095" endtime="20201115 23:03:23.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.098" endtime="20201115 23:03:23.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.071" endtime="20201115 23:03:23.100"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.069" endtime="20201115 23:03:23.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.107" endtime="20201115 23:03:23.392"></status>
</kw>
<msg timestamp="20201115 23:03:23.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.106" endtime="20201115 23:03:23.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022207403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.397" endtime="20201115 23:03:23.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.405" endtime="20201115 23:03:23.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.103" endtime="20201115 23:03:23.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.101" endtime="20201115 23:03:23.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.412" level="INFO">${RESULT} = [{'time': 0.022207403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.7944999999999e-05, 'source_diff': 8.7944999999999e-05}, {'time': 0.022300444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:03:23.408" endtime="20201115 23:03:23.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.425" level="INFO">${ACCURACY} = {'source_diff': [8.7944999999999e-05, 8.858299999999972e-05, 8.776400000000059e-05, 8.790300000000029e-05, 8.791699999999986e-05, 8.788900000000072e-05, 8.855500000000058e-05, 8.856900000000015e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:03:23.413" endtime="20201115 23:03:23.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.430" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.429" endtime="20201115 23:03:23.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.432" level="INFO">VALUE: [8.7944999999999e-05, 8.858299999999972e-05, 8.776400000000059e-05, 8.790300000000029e-05, 8.791699999999986e-05, 8.788900000000072e-05, 8.855500000000058e-05, 8.856900000000015e-05, 8.770799999999884e-05, 8.777800000000016e-05, 8.855600000000005e-05, 8.826400000000109e-05, 8.841700000000036e-05, 8.820900000000229e-05, 8.850000000000177e-05, 8.763799999999752e-05, 8.856900000000015e-05, 8.777700000000069e-05, 8.843000000000045e-05, 8.820799999999934e-05, 8.834699999999904e-05, 8.820800000000281e-05, 8.841700000000036e-05, 8.805599999999955e-05, 8.777800000000016e-05, 8.798599999999823e-05, 8.820899999999882e-05, 8.780499999999983e-05, 8.834699999999904e-05, 8.833300000000294e-05, 8.831999999999937e-05, 8.775000000000102e-05, 8.79310000000029e-05, 8.804199999999998e-05, 8.815300000000054e-05, 8.826400000000109e-05, 8.779199999999973e-05, 8.820899999999882e-05, 8.81389999999975e-05, 8.840300000000079e-05, 8.772199999999841e-05, 8.787499999999768e-05, 8.813900000000097e-05, 8.827800000000066e-05, 8.856900000000015e-05, 8.76669999999996e-05, 8.826400000000109e-05, 8.827800000000066e-05, 8.775000000000102e-05, 8.79860000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.431" endtime="20201115 23:03:23.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.426" endtime="20201115 23:03:23.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.436" endtime="20201115 23:03:23.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.439" endtime="20201115 23:03:23.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.438" endtime="20201115 23:03:23.459"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.434" endtime="20201115 23:03:23.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.068" endtime="20201115 23:03:23.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.066" endtime="20201115 23:03:23.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.065" endtime="20201115 23:03:23.460"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.463" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.471" endtime="20201115 23:03:23.490"></status>
</kw>
<msg timestamp="20201115 23:03:23.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.470" endtime="20201115 23:03:23.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.492" endtime="20201115 23:03:23.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.494" endtime="20201115 23:03:23.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.467" endtime="20201115 23:03:23.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.465" endtime="20201115 23:03:23.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.503" endtime="20201115 23:03:23.790"></status>
</kw>
<msg timestamp="20201115 23:03:23.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023478889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.502" endtime="20201115 23:03:23.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023390208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023478889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.794" endtime="20201115 23:03:23.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.802" endtime="20201115 23:03:23.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.499" endtime="20201115 23:03:23.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.498" endtime="20201115 23:03:23.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:23.809" level="INFO">${RESULT} = [{'time': 0.023478889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.868100000000018e-05, 'source_diff': 8.868100000000018e-05}, {'time': 0.023570917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:23.806" endtime="20201115 23:03:23.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:23.824" level="INFO">${ACCURACY} = {'source_diff': [8.868100000000018e-05, 8.922299999999939e-05, 8.86250000000019e-05, 8.919500000000025e-05, 8.893000000000095e-05, 8.86250000000019e-05, 8.870799999999984e-05, 8.883299999999997e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:03:23.810" endtime="20201115 23:03:23.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.829" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:03:23.828" endtime="20201115 23:03:23.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.831" level="INFO">VALUE: [8.868100000000018e-05, 8.922299999999939e-05, 8.86250000000019e-05, 8.919500000000025e-05, 8.893000000000095e-05, 8.86250000000019e-05, 8.870799999999984e-05, 8.883299999999997e-05, 8.941599999999841e-05, 8.954200000000148e-05, 8.874999999999855e-05, 8.886100000000258e-05, 8.909699999999979e-05, 8.877799999999769e-05, 8.957000000000062e-05, 8.881999999999987e-05, 8.89999999999988e-05, 8.862499999999843e-05, 8.936099999999961e-05, 8.86250000000019e-05, 8.863900000000147e-05, 8.906900000000065e-05, 8.877800000000116e-05, 8.872199999999941e-05, 8.907000000000012e-05, 8.875000000000202e-05, 8.930499999999786e-05, 8.8638999999998e-05, 8.941600000000188e-05, 8.930500000000133e-05, 8.877700000000169e-05, 8.91250000000024e-05, 8.898599999999923e-05, 8.877800000000116e-05, 8.862499999999843e-05, 8.958399999999672e-05, 8.872300000000236e-05, 8.905600000000055e-05, 8.918100000000068e-05, 8.877700000000169e-05, 8.912499999999893e-05, 8.919400000000077e-05, 8.883299999999997e-05, 8.887499999999868e-05, 8.94999999999993e-05, 8.952799999999844e-05, 8.907000000000012e-05, 8.924999999999905e-05, 8.947200000000016e-05, 8.869400000000027e-05]</msg>
<status status="PASS" starttime="20201115 23:03:23.830" endtime="20201115 23:03:23.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.825" endtime="20201115 23:03:23.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.834" endtime="20201115 23:03:23.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:23.838" endtime="20201115 23:03:23.857"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.836" endtime="20201115 23:03:23.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.832" endtime="20201115 23:03:23.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.463" endtime="20201115 23:03:23.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.461" endtime="20201115 23:03:23.859"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.461" endtime="20201115 23:03:23.859"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.862" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.870" endtime="20201115 23:03:23.888"></status>
</kw>
<msg timestamp="20201115 23:03:23.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.869" endtime="20201115 23:03:23.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:23.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:23.889" endtime="20201115 23:03:23.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.892" endtime="20201115 23:03:23.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.866" endtime="20201115 23:03:23.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.864" endtime="20201115 23:03:23.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:23.901" endtime="20201115 23:03:24.186"></status>
</kw>
<msg timestamp="20201115 23:03:24.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:23.899" endtime="20201115 23:03:24.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.190" endtime="20201115 23:03:24.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.199" endtime="20201115 23:03:24.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.897" endtime="20201115 23:03:24.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.895" endtime="20201115 23:03:24.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.206" level="INFO">${RESULT} = [{'time': 0.022666778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.023599999999701e-05, 'source_diff': 9.023599999999701e-05}, {'time': 0.022759722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:24.202" endtime="20201115 23:03:24.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:24.219" level="INFO">${ACCURACY} = {'source_diff': [9.023599999999701e-05, 8.969400000000127e-05, 9.008400000000069e-05, 8.984699999999707e-05, 8.9638999999999e-05, 9.027800000000266e-05, 9.036099999999714e-05, 8.997200000000066e-05, 8...</msg>
<status status="PASS" starttime="20201115 23:03:24.207" endtime="20201115 23:03:24.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.224" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:03:24.223" endtime="20201115 23:03:24.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.226" level="INFO">VALUE: [9.023599999999701e-05, 8.969400000000127e-05, 9.008400000000069e-05, 8.984699999999707e-05, 8.9638999999999e-05, 9.027800000000266e-05, 9.036099999999714e-05, 8.997200000000066e-05, 8.995900000000057e-05, 8.991700000000186e-05, 8.969400000000127e-05, 9.020799999999787e-05, 8.958300000000072e-05, 8.990300000000229e-05, 8.984700000000054e-05, 9.04589999999976e-05, 8.962499999999943e-05, 8.9638999999999e-05, 9.041700000000236e-05, 9.005599999999808e-05, 8.970900000000032e-05, 9.044399999999855e-05, 8.986100000000011e-05, 9.048599999999726e-05, 8.992999999999848e-05, 8.983300000000097e-05, 9.038899999999975e-05, 9.005599999999808e-05, 9.048600000000073e-05, 9.008399999999722e-05, 9.002800000000241e-05, 9.034800000000051e-05, 8.977799999999869e-05, 8.994400000000152e-05, 8.98329999999975e-05, 9.034700000000104e-05, 8.984800000000001e-05, 9.041700000000236e-05, 9.025000000000005e-05, 9.025000000000005e-05, 8.984700000000054e-05, 9.033400000000094e-05, 9.026399999999962e-05, 9.027799999999919e-05, 8.976399999999912e-05, 8.997200000000066e-05, 8.96939999999978e-05, 8.9638999999999e-05, 9.01939999999983e-05, 8.977799999999869e-05]</msg>
<status status="PASS" starttime="20201115 23:03:24.225" endtime="20201115 23:03:24.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.220" endtime="20201115 23:03:24.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.230" endtime="20201115 23:03:24.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:24.233" endtime="20201115 23:03:24.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.232" endtime="20201115 23:03:24.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.228" endtime="20201115 23:03:24.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.862" endtime="20201115 23:03:24.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.861" endtime="20201115 23:03:24.254"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:23.860" endtime="20201115 23:03:24.254"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.257" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.265" endtime="20201115 23:03:24.284"></status>
</kw>
<msg timestamp="20201115 23:03:24.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.263" endtime="20201115 23:03:24.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.285" endtime="20201115 23:03:24.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.288" endtime="20201115 23:03:24.289"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.261" endtime="20201115 23:03:24.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.259" endtime="20201115 23:03:24.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.297" endtime="20201115 23:03:24.581"></status>
</kw>
<msg timestamp="20201115 23:03:24.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.295" endtime="20201115 23:03:24.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022203806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.586" endtime="20201115 23:03:24.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.594" endtime="20201115 23:03:24.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.293" endtime="20201115 23:03:24.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.291" endtime="20201115 23:03:24.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.601" level="INFO">${RESULT} = [{'time': 0.022203806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.109800000000126e-05, 'source_diff': 9.109800000000126e-05}, {'time': 0.022299819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:24.598" endtime="20201115 23:03:24.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:24.615" level="INFO">${ACCURACY} = {'source_diff': [9.109800000000126e-05, 9.141599999999694e-05, 9.072200000000141e-05, 9.141600000000041e-05, 9.15139999999974e-05, 9.105499999999961e-05, 9.072199999999794e-05, 9.131899999999943e-05, ...</msg>
<status status="PASS" starttime="20201115 23:03:24.602" endtime="20201115 23:03:24.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.620" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:03:24.619" endtime="20201115 23:03:24.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.623" level="INFO">VALUE: [9.109800000000126e-05, 9.141599999999694e-05, 9.072200000000141e-05, 9.141600000000041e-05, 9.15139999999974e-05, 9.105499999999961e-05, 9.072199999999794e-05, 9.131899999999943e-05, 9.141699999999989e-05, 9.14589999999986e-05, 9.070900000000132e-05, 9.127800000000019e-05, 9.116600000000016e-05, 9.105499999999961e-05, 9.112500000000093e-05, 9.140300000000032e-05, 9.154100000000054e-05, 9.072199999999794e-05, 9.137499999999771e-05, 9.077799999999969e-05, 9.11390000000005e-05, 9.091699999999939e-05, 9.083399999999797e-05, 9.155599999999958e-05, 9.156899999999968e-05, 9.098600000000123e-05, 9.15000000000013e-05, 9.076400000000012e-05, 9.156899999999968e-05, 9.08199999999984e-05, 9.11390000000005e-05, 9.069500000000175e-05, 9.144499999999903e-05, 9.148600000000173e-05, 9.091699999999939e-05, 9.141600000000041e-05, 9.105500000000308e-05, 9.084699999999807e-05, 9.155599999999958e-05, 9.120799999999887e-05, 9.081899999999893e-05, 9.1332999999999e-05, 9.15000000000013e-05, 9.140300000000032e-05, 9.108399999999822e-05, 9.105599999999908e-05, 9.077700000000022e-05, 9.070800000000184e-05, 9.134699999999857e-05, 9.112500000000093e-05]</msg>
<status status="PASS" starttime="20201115 23:03:24.621" endtime="20201115 23:03:24.623"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.616" endtime="20201115 23:03:24.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.626" endtime="20201115 23:03:24.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:24.630" endtime="20201115 23:03:24.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.628" endtime="20201115 23:03:24.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.624" endtime="20201115 23:03:24.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.257" endtime="20201115 23:03:24.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.256" endtime="20201115 23:03:24.651"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.255" endtime="20201115 23:03:24.651"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.653" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.661" endtime="20201115 23:03:24.681"></status>
</kw>
<msg timestamp="20201115 23:03:24.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.660" endtime="20201115 23:03:24.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:24.682" endtime="20201115 23:03:24.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.685" endtime="20201115 23:03:24.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.657" endtime="20201115 23:03:24.687"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.655" endtime="20201115 23:03:24.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.694" endtime="20201115 23:03:24.978"></status>
</kw>
<msg timestamp="20201115 23:03:24.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.692" endtime="20201115 23:03:24.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:24.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:24.982" endtime="20201115 23:03:24.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:24.991" endtime="20201115 23:03:24.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.690" endtime="20201115 23:03:24.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.688" endtime="20201115 23:03:24.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:24.997" level="INFO">${RESULT} = [{'time': 0.022279986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.251400000000187e-05, 'source_diff': 9.251400000000187e-05}, {'time': 0.022375014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:24.994" endtime="20201115 23:03:24.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.012" level="INFO">${ACCURACY} = {'source_diff': [9.251400000000187e-05, 9.191699999999692e-05, 9.163899999999753e-05, 9.177800000000069e-05, 9.169500000000275e-05, 9.191700000000039e-05, 9.162499999999796e-05, 9.170799999999937e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:24.999" endtime="20201115 23:03:25.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.016" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.015" endtime="20201115 23:03:25.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.019" level="INFO">VALUE: [9.251400000000187e-05, 9.191699999999692e-05, 9.163899999999753e-05, 9.177800000000069e-05, 9.169500000000275e-05, 9.191700000000039e-05, 9.162499999999796e-05, 9.170799999999937e-05, 9.256900000000068e-05, 9.220799999999987e-05, 9.172200000000241e-05, 9.213899999999803e-05, 9.241699999999742e-05, 9.224999999999858e-05, 9.241700000000089e-05, 9.1639000000001e-05, 9.188899999999778e-05, 9.248600000000273e-05, 9.237500000000218e-05, 9.227699999999825e-05, 9.243000000000098e-05, 9.2333e-05, 9.226399999999815e-05, 9.211099999999889e-05, 9.227800000000119e-05, 9.176400000000112e-05, 9.159699999999882e-05, 9.19719999999992e-05, 9.229200000000076e-05, 9.170799999999937e-05, 9.16939999999998e-05, 9.241599999999794e-05, 9.155500000000011e-05, 9.175000000000155e-05, 9.236099999999914e-05, 9.20000000000018e-05, 9.257000000000015e-05, 9.169499999999928e-05, 9.234800000000251e-05, 9.170900000000232e-05, 9.165300000000057e-05, 9.220799999999987e-05, 9.227700000000172e-05, 9.255500000000111e-05, 9.181899999999993e-05, 9.248599999999926e-05, 9.212500000000193e-05, 9.16939999999998e-05, 9.191700000000039e-05, 9.255600000000058e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.017" endtime="20201115 23:03:25.019"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.012" endtime="20201115 23:03:25.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.022" endtime="20201115 23:03:25.023"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.025" endtime="20201115 23:03:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.024" endtime="20201115 23:03:25.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.020" endtime="20201115 23:03:25.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.654" endtime="20201115 23:03:25.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.652" endtime="20201115 23:03:25.046"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:24.651" endtime="20201115 23:03:25.046"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.049" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.057" endtime="20201115 23:03:25.078"></status>
</kw>
<msg timestamp="20201115 23:03:25.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.055" endtime="20201115 23:03:25.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.079" endtime="20201115 23:03:25.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.082" endtime="20201115 23:03:25.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.053" endtime="20201115 23:03:25.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.051" endtime="20201115 23:03:25.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.091" endtime="20201115 23:03:25.376"></status>
</kw>
<msg timestamp="20201115 23:03:25.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023802417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.090" endtime="20201115 23:03:25.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023802417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.380" endtime="20201115 23:03:25.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.389" endtime="20201115 23:03:25.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.087" endtime="20201115 23:03:25.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.085" endtime="20201115 23:03:25.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:25.395" level="INFO">${RESULT} = [{'time': 0.023895347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.293000000000148e-05, 'source_diff': 9.293000000000148e-05}, {'time': 0.023995319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:25.392" endtime="20201115 23:03:25.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.410" level="INFO">${ACCURACY} = {'source_diff': [9.293000000000148e-05, 9.349999999999983e-05, 9.344399999999808e-05, 9.331900000000143e-05, 9.277799999999822e-05, 9.284700000000007e-05, 9.313899999999903e-05, 9.358400000000072e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:25.396" endtime="20201115 23:03:25.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.415" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.414" endtime="20201115 23:03:25.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.417" level="INFO">VALUE: [9.293000000000148e-05, 9.349999999999983e-05, 9.344399999999808e-05, 9.331900000000143e-05, 9.277799999999822e-05, 9.284700000000007e-05, 9.313899999999903e-05, 9.358400000000072e-05, 9.26529999999981e-05, 9.261100000000286e-05, 9.268100000000071e-05, 9.327799999999872e-05, 9.269500000000028e-05, 9.26940000000008e-05, 9.26940000000008e-05, 9.354099999999907e-05, 9.298599999999976e-05, 9.336100000000014e-05, 9.336100000000014e-05, 9.324999999999958e-05, 9.258399999999972e-05, 9.34859999999968e-05, 9.304200000000151e-05, 9.347300000000017e-05, 9.254200000000101e-05, 9.341599999999894e-05, 9.281900000000093e-05, 9.343000000000198e-05, 9.345799999999765e-05, 9.327799999999872e-05, 9.312499999999946e-05, 9.352799999999897e-05, 9.322299999999992e-05, 9.336200000000308e-05, 9.275000000000255e-05, 9.269500000000028e-05, 9.347199999999722e-05, 9.355499999999864e-05, 9.356900000000168e-05, 9.352800000000244e-05, 9.334700000000057e-05, 9.322200000000044e-05, 9.312499999999946e-05, 9.277799999999822e-05, 9.319500000000078e-05, 9.343099999999799e-05, 9.320800000000087e-05, 9.31940000000013e-05, 9.313899999999903e-05, 9.280500000000136e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.416" endtime="20201115 23:03:25.418"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.411" endtime="20201115 23:03:25.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.420" endtime="20201115 23:03:25.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.424" endtime="20201115 23:03:25.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.422" endtime="20201115 23:03:25.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.419" endtime="20201115 23:03:25.444"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.049" endtime="20201115 23:03:25.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.048" endtime="20201115 23:03:25.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.047" endtime="20201115 23:03:25.445"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.448" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.456" endtime="20201115 23:03:25.476"></status>
</kw>
<msg timestamp="20201115 23:03:25.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.454" endtime="20201115 23:03:25.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.477" endtime="20201115 23:03:25.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.480" endtime="20201115 23:03:25.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.452" endtime="20201115 23:03:25.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.449" endtime="20201115 23:03:25.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.489" endtime="20201115 23:03:25.775"></status>
</kw>
<msg timestamp="20201115 23:03:25.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.487" endtime="20201115 23:03:25.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023201111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.779" endtime="20201115 23:03:25.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.788" endtime="20201115 23:03:25.789"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.485" endtime="20201115 23:03:25.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.483" endtime="20201115 23:03:25.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:25.794" level="INFO">${RESULT} = [{'time': 0.023201111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.367999999999876e-05, 'source_diff': 9.367999999999876e-05}, {'time': 0.023302125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:25.791" endtime="20201115 23:03:25.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:25.808" level="INFO">${ACCURACY} = {'source_diff': [9.367999999999876e-05, 9.443099999999899e-05, 9.363899999999953e-05, 9.366699999999867e-05, 9.395800000000162e-05, 9.440299999999985e-05, 9.420900000000135e-05, 9.377799999999922e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:25.795" endtime="20201115 23:03:25.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.813" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:03:25.812" endtime="20201115 23:03:25.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.815" level="INFO">VALUE: [9.367999999999876e-05, 9.443099999999899e-05, 9.363899999999953e-05, 9.366699999999867e-05, 9.395800000000162e-05, 9.440299999999985e-05, 9.420900000000135e-05, 9.377799999999922e-05, 9.392999999999901e-05, 9.36940000000018e-05, 9.400000000000033e-05, 9.38469999999976e-05, 9.413900000000003e-05, 9.416700000000264e-05, 9.390300000000282e-05, 9.412499999999699e-05, 9.393100000000196e-05, 9.400000000000033e-05, 9.434800000000104e-05, 9.384700000000107e-05, 9.442999999999951e-05, 9.372199999999747e-05, 9.450000000000083e-05, 9.405500000000261e-05, 9.450000000000083e-05, 9.433400000000147e-05, 9.370800000000137e-05, 9.441699999999942e-05, 9.369399999999833e-05, 9.38339999999975e-05, 9.390299999999935e-05, 9.365199999999962e-05, 9.448600000000126e-05, 9.400000000000033e-05, 9.398600000000076e-05, 9.424999999999711e-05, 9.370800000000137e-05, 9.450000000000083e-05, 9.441699999999942e-05, 9.447199999999822e-05, 9.376399999999965e-05, 9.436100000000114e-05, 9.43880000000008e-05, 9.398600000000076e-05, 9.363899999999953e-05, 9.425000000000058e-05, 9.398600000000076e-05, 9.361100000000039e-05, 9.379199999999879e-05, 9.366700000000214e-05]</msg>
<status status="PASS" starttime="20201115 23:03:25.814" endtime="20201115 23:03:25.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.809" endtime="20201115 23:03:25.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.818" endtime="20201115 23:03:25.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:25.822" endtime="20201115 23:03:25.841"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.820" endtime="20201115 23:03:25.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.817" endtime="20201115 23:03:25.842"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.448" endtime="20201115 23:03:25.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.446" endtime="20201115 23:03:25.843"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.445" endtime="20201115 23:03:25.843"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.845" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.854" endtime="20201115 23:03:25.872"></status>
</kw>
<msg timestamp="20201115 23:03:25.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.852" endtime="20201115 23:03:25.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:25.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:25.874" endtime="20201115 23:03:25.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.877" endtime="20201115 23:03:25.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.850" endtime="20201115 23:03:25.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.847" endtime="20201115 23:03:25.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:25.886" endtime="20201115 23:03:26.173"></status>
</kw>
<msg timestamp="20201115 23:03:26.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:25.884" endtime="20201115 23:03:26.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.177" endtime="20201115 23:03:26.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.185" endtime="20201115 23:03:26.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.882" endtime="20201115 23:03:26.188"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.880" endtime="20201115 23:03:26.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:26.192" level="INFO">${RESULT} = [{'time': 0.022349944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.479100000000032e-05, 'source_diff': 9.479100000000032e-05}, {'time': 0.022448958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:26.189" endtime="20201115 23:03:26.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:26.206" level="INFO">${ACCURACY} = {'source_diff': [9.479100000000032e-05, 9.49720000000022e-05, 9.51530000000006e-05, 9.483299999999903e-05, 9.480599999999936e-05, 9.490300000000035e-05, 9.520800000000287e-05, 9.505599999999961e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:03:26.193" endtime="20201115 23:03:26.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.210" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:03:26.209" endtime="20201115 23:03:26.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.213" level="INFO">VALUE: [9.479100000000032e-05, 9.49720000000022e-05, 9.51530000000006e-05, 9.483299999999903e-05, 9.480599999999936e-05, 9.490300000000035e-05, 9.520800000000287e-05, 9.505599999999961e-05, 9.484700000000207e-05, 9.509700000000232e-05, 9.543099999999999e-05, 9.498699999999777e-05, 9.533299999999953e-05, 9.55140000000014e-05, 9.488900000000078e-05, 9.463900000000053e-05, 9.55140000000014e-05, 9.502800000000047e-05, 9.48339999999985e-05, 9.476399999999718e-05, 9.54859999999988e-05, 9.470899999999838e-05, 9.512499999999799e-05, 9.533299999999953e-05, 9.540200000000137e-05, 9.483299999999903e-05, 9.513900000000103e-05, 9.472199999999847e-05, 9.522200000000244e-05, 9.466699999999967e-05, 9.484700000000207e-05, 9.54859999999988e-05, 9.555600000000011e-05, 9.520900000000235e-05, 9.472200000000194e-05, 9.540300000000085e-05, 9.48330000000025e-05, 9.462500000000096e-05, 9.476399999999718e-05, 9.493099999999949e-05, 9.555600000000011e-05, 9.520900000000235e-05, 9.493099999999949e-05, 9.477800000000022e-05, 9.537500000000171e-05, 9.481899999999946e-05, 9.479100000000032e-05, 9.506899999999971e-05, 9.462500000000096e-05, 9.522200000000244e-05]</msg>
<status status="PASS" starttime="20201115 23:03:26.211" endtime="20201115 23:03:26.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.207" endtime="20201115 23:03:26.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.216" endtime="20201115 23:03:26.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:26.219" endtime="20201115 23:03:26.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.218" endtime="20201115 23:03:26.239"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.214" endtime="20201115 23:03:26.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.846" endtime="20201115 23:03:26.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.844" endtime="20201115 23:03:26.240"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:25.843" endtime="20201115 23:03:26.241"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.243" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.252" endtime="20201115 23:03:26.271"></status>
</kw>
<msg timestamp="20201115 23:03:26.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.250" endtime="20201115 23:03:26.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.273" endtime="20201115 23:03:26.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.275" endtime="20201115 23:03:26.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.247" endtime="20201115 23:03:26.278"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.245" endtime="20201115 23:03:26.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.284" endtime="20201115 23:03:26.569"></status>
</kw>
<msg timestamp="20201115 23:03:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.283" endtime="20201115 23:03:26.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.573" endtime="20201115 23:03:26.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.581" endtime="20201115 23:03:26.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.280" endtime="20201115 23:03:26.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.279" endtime="20201115 23:03:26.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:26.588" level="INFO">${RESULT} = [{'time': 0.022781389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651399999999893e-05, 'source_diff': 9.651399999999893e-05}, {'time': 0.022882417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:26.585" endtime="20201115 23:03:26.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:26.602" level="INFO">${ACCURACY} = {'source_diff': [9.651399999999893e-05, 9.607000000000018e-05, 9.583400000000297e-05, 9.613799999999909e-05, 9.581899999999699e-05, 9.64859999999998e-05, 9.64019999999989e-05, 9.602800000000147e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:03:26.589" endtime="20201115 23:03:26.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.606" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:03:26.605" endtime="20201115 23:03:26.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.609" level="INFO">VALUE: [9.651399999999893e-05, 9.607000000000018e-05, 9.583400000000297e-05, 9.613799999999909e-05, 9.581899999999699e-05, 9.64859999999998e-05, 9.64019999999989e-05, 9.602800000000147e-05, 9.658299999999731e-05, 9.607000000000018e-05, 9.586099999999917e-05, 9.644500000000056e-05, 9.640300000000185e-05, 9.598600000000276e-05, 9.627800000000172e-05, 9.641600000000194e-05, 9.661099999999992e-05, 9.586099999999917e-05, 9.631900000000096e-05, 9.64729999999997e-05, 9.58469999999996e-05, 9.59859999999993e-05, 9.620899999999988e-05, 9.613900000000203e-05, 9.651299999999946e-05, 9.598699999999877e-05, 9.642999999999805e-05, 9.623599999999954e-05, 9.645800000000065e-05, 9.592999999999755e-05, 9.562500000000196e-05, 9.655600000000111e-05, 9.587500000000221e-05, 9.570899999999938e-05, 9.612500000000246e-05, 9.619499999999684e-05, 9.605600000000061e-05, 9.583300000000003e-05, 9.565299999999763e-05, 9.615299999999813e-05, 9.622199999999997e-05, 9.59859999999993e-05, 9.580600000000036e-05, 9.579200000000079e-05, 9.586099999999917e-05, 9.656999999999721e-05, 9.641700000000142e-05, 9.586100000000264e-05, 9.612499999999899e-05, 9.64859999999998e-05]</msg>
<status status="PASS" starttime="20201115 23:03:26.607" endtime="20201115 23:03:26.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.603" endtime="20201115 23:03:26.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.612" endtime="20201115 23:03:26.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:26.616" endtime="20201115 23:03:26.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.614" endtime="20201115 23:03:26.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.610" endtime="20201115 23:03:26.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.244" endtime="20201115 23:03:26.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.242" endtime="20201115 23:03:26.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.241" endtime="20201115 23:03:26.641"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.644" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.652" endtime="20201115 23:03:26.672"></status>
</kw>
<msg timestamp="20201115 23:03:26.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.650" endtime="20201115 23:03:26.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:26.673" endtime="20201115 23:03:26.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.676" endtime="20201115 23:03:26.677"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.648" endtime="20201115 23:03:26.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.646" endtime="20201115 23:03:26.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.685" endtime="20201115 23:03:26.971"></status>
</kw>
<msg timestamp="20201115 23:03:26.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027468514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027565681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.683" endtime="20201115 23:03:26.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:26.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027468514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027565681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:26.975" endtime="20201115 23:03:26.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:26.983" endtime="20201115 23:03:26.985"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.681" endtime="20201115 23:03:26.986"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.679" endtime="20201115 23:03:26.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:26.990" level="INFO">${RESULT} = [{'time': 0.027565681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.716700000000217e-05, 'source_diff': 9.716700000000217e-05}, {'time': 0.027665681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:26.987" endtime="20201115 23:03:26.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.005" level="INFO">${ACCURACY} = {'source_diff': [9.716700000000217e-05, 9.677800000000222e-05, 9.677700000000275e-05, 9.726399999999968e-05, 9.691699999999845e-05, 9.687499999999974e-05, 9.726399999999968e-05, 9.663899999999906e-05,...</msg>
<status status="PASS" starttime="20201115 23:03:26.991" endtime="20201115 23:03:27.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.010" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.009" endtime="20201115 23:03:27.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.012" level="INFO">VALUE: [9.716700000000217e-05, 9.677800000000222e-05, 9.677700000000275e-05, 9.726399999999968e-05, 9.691699999999845e-05, 9.687499999999974e-05, 9.726399999999968e-05, 9.663899999999906e-05, 9.756999999999821e-05, 9.699999999999986e-05, 9.663899999999906e-05, 9.684800000000007e-05, 9.754199999999907e-05, 9.666599999999873e-05, 9.687499999999974e-05, 9.68470000000006e-05, 9.69860000000003e-05, 9.674999999999961e-05, 9.712499999999999e-05, 9.74860000000008e-05, 9.699999999999986e-05, 9.744399999999862e-05, 9.726399999999968e-05, 9.676399999999918e-05, 9.661099999999992e-05, 9.705499999999867e-05, 9.759700000000135e-05, 9.741700000000242e-05, 9.66669999999982e-05, 9.688899999999931e-05, 9.679199999999832e-05, 9.745900000000113e-05, 9.757000000000168e-05, 9.722200000000097e-05, 9.74730000000007e-05, 9.713899999999956e-05, 9.704100000000257e-05, 9.726399999999621e-05, 9.67080000000009e-05, 9.741700000000242e-05, 9.663899999999559e-05, 9.670900000000038e-05, 9.669500000000081e-05, 9.665199999999569e-05, 9.761100000000439e-05, 9.747200000000122e-05, 9.755499999999917e-05, 9.686100000000364e-05, 9.740300000000285e-05, 9.661099999999645e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.011" endtime="20201115 23:03:27.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.006" endtime="20201115 23:03:27.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.016" endtime="20201115 23:03:27.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.019" endtime="20201115 23:03:27.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.018" endtime="20201115 23:03:27.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.014" endtime="20201115 23:03:27.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.644" endtime="20201115 23:03:27.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.643" endtime="20201115 23:03:27.041"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:26.642" endtime="20201115 23:03:27.041"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.043" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.051" endtime="20201115 23:03:27.070"></status>
</kw>
<msg timestamp="20201115 23:03:27.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.050" endtime="20201115 23:03:27.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.071" endtime="20201115 23:03:27.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.074" endtime="20201115 23:03:27.075"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.047" endtime="20201115 23:03:27.076"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.045" endtime="20201115 23:03:27.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.084" endtime="20201115 23:03:27.370"></status>
</kw>
<msg timestamp="20201115 23:03:27.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.082" endtime="20201115 23:03:27.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.374" endtime="20201115 23:03:27.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.383" endtime="20201115 23:03:27.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.079" endtime="20201115 23:03:27.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.077" endtime="20201115 23:03:27.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:27.389" level="INFO">${RESULT} = [{'time': 0.022174236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.850000000000136e-05, 'source_diff': 9.850000000000136e-05}, {'time': 0.022276181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:27.386" endtime="20201115 23:03:27.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.403" level="INFO">${ACCURACY} = {'source_diff': [9.850000000000136e-05, 9.770899999999791e-05, 9.765200000000016e-05, 9.841600000000048e-05, 9.769400000000233e-05, 9.779199999999932e-05, 9.85280000000005e-05, 9.77080000000019e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:03:27.390" endtime="20201115 23:03:27.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.408" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.407" endtime="20201115 23:03:27.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.411" level="INFO">VALUE: [9.850000000000136e-05, 9.770899999999791e-05, 9.765200000000016e-05, 9.841600000000048e-05, 9.769400000000233e-05, 9.779199999999932e-05, 9.85280000000005e-05, 9.77080000000019e-05, 9.779199999999932e-05, 9.812500000000099e-05, 9.812499999999752e-05, 9.843099999999952e-05, 9.824999999999764e-05, 9.784699999999813e-05, 9.845800000000265e-05, 9.792999999999955e-05, 9.782000000000193e-05, 9.820799999999894e-05, 9.84860000000018e-05, 9.847200000000222e-05, 9.861100000000192e-05, 9.808399999999828e-05, 9.827800000000025e-05, 9.806899999999924e-05, 9.820799999999894e-05, 9.854200000000007e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.798599999999782e-05, 9.808400000000175e-05, 9.834699999999863e-05, 9.769499999999834e-05, 9.841699999999995e-05, 9.848700000000127e-05, 9.769399999999887e-05, 9.777700000000028e-05, 9.851400000000093e-05, 9.779099999999985e-05, 9.763900000000006e-05, 9.859799999999835e-05, 9.793100000000249e-05, 9.763900000000006e-05, 9.76530000000031e-05, 9.826400000000068e-05, 9.838799999999787e-05, 9.758300000000178e-05, 9.787500000000074e-05, 9.813900000000056e-05, 9.78470000000016e-05, 9.772200000000147e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.409" endtime="20201115 23:03:27.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.404" endtime="20201115 23:03:27.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.414" endtime="20201115 23:03:27.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.417" endtime="20201115 23:03:27.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.416" endtime="20201115 23:03:27.437"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.412" endtime="20201115 23:03:27.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.044" endtime="20201115 23:03:27.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.042" endtime="20201115 23:03:27.438"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.041" endtime="20201115 23:03:27.438"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.441" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.449" endtime="20201115 23:03:27.467"></status>
</kw>
<msg timestamp="20201115 23:03:27.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.448" endtime="20201115 23:03:27.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.469" endtime="20201115 23:03:27.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.472" endtime="20201115 23:03:27.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.445" endtime="20201115 23:03:27.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.443" endtime="20201115 23:03:27.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.481" endtime="20201115 23:03:27.766"></status>
</kw>
<msg timestamp="20201115 23:03:27.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.479" endtime="20201115 23:03:27.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:27.771" endtime="20201115 23:03:27.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.779" endtime="20201115 23:03:27.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.477" endtime="20201115 23:03:27.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.475" endtime="20201115 23:03:27.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:27.786" level="INFO">${RESULT} = [{'time': 0.022746625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.951399999999846e-05, 'source_diff': 9.951399999999846e-05}, {'time': 0.022849639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:27.782" endtime="20201115 23:03:27.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:27.800" level="INFO">${ACCURACY} = {'source_diff': [9.951399999999846e-05, 9.905600000000014e-05, 9.869499999999934e-05, 9.948599999999932e-05, 9.915199999999819e-05, 9.943000000000105e-05, 9.9415999999998e-05, 9.877700000000128e-05, 9...</msg>
<status status="PASS" starttime="20201115 23:03:27.787" endtime="20201115 23:03:27.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.804" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:03:27.803" endtime="20201115 23:03:27.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.807" level="INFO">VALUE: [9.951399999999846e-05, 9.905600000000014e-05, 9.869499999999934e-05, 9.948599999999932e-05, 9.915199999999819e-05, 9.943000000000105e-05, 9.9415999999998e-05, 9.877700000000128e-05, 9.955500000000117e-05, 9.920899999999941e-05, 9.941700000000095e-05, 9.948599999999932e-05, 9.94860000000028e-05, 9.898599999999882e-05, 9.861099999999845e-05, 9.891700000000045e-05, 9.877700000000128e-05, 9.89159999999975e-05, 9.943000000000105e-05, 9.863900000000106e-05, 9.91800000000008e-05, 9.88059999999999e-05, 9.876400000000118e-05, 9.927799999999778e-05, 9.943100000000052e-05, 9.894400000000012e-05, 9.883399999999903e-05, 9.898599999999882e-05, 9.884699999999913e-05, 9.948599999999932e-05, 9.890299999999741e-05, 9.955600000000064e-05, 9.883300000000303e-05, 9.948599999999932e-05, 9.941700000000095e-05, 9.868099999999977e-05, 9.879099999999738e-05, 9.958300000000031e-05, 9.89999999999984e-05, 9.900000000000186e-05, 9.912499999999852e-05, 9.913899999999809e-05, 9.94999999999989e-05, 9.941700000000095e-05, 9.913899999999809e-05, 9.868099999999977e-05, 9.941700000000095e-05, 9.877800000000075e-05, 9.862500000000149e-05, 9.948599999999932e-05]</msg>
<status status="PASS" starttime="20201115 23:03:27.806" endtime="20201115 23:03:27.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.801" endtime="20201115 23:03:27.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.810" endtime="20201115 23:03:27.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:27.813" endtime="20201115 23:03:27.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.812" endtime="20201115 23:03:27.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.808" endtime="20201115 23:03:27.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.442" endtime="20201115 23:03:27.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.440" endtime="20201115 23:03:27.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.439" endtime="20201115 23:03:27.835"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.837" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.845" endtime="20201115 23:03:27.864"></status>
</kw>
<msg timestamp="20201115 23:03:27.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.844" endtime="20201115 23:03:27.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:27.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:27.865" endtime="20201115 23:03:27.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.868" endtime="20201115 23:03:27.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.841" endtime="20201115 23:03:27.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.839" endtime="20201115 23:03:27.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:27.877" endtime="20201115 23:03:28.163"></status>
</kw>
<msg timestamp="20201115 23:03:28.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:27.876" endtime="20201115 23:03:28.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022176, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275903, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:03:28.167" endtime="20201115 23:03:28.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.176" endtime="20201115 23:03:28.177"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.873" endtime="20201115 23:03:28.178"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.871" endtime="20201115 23:03:28.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.182" level="INFO">${RESULT} = [{'time': 0.022275903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.990299999999841e-05, 'source_diff': 9.990299999999841e-05}, {'time': 0.022381917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:28.179" endtime="20201115 23:03:28.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.196" level="INFO">${ACCURACY} = {'source_diff': [9.990299999999841e-05, 0.00010020900000000041, 0.0001004999999999999, 0.00010056900000000174, 9.969400000000087e-05, 0.00010027699999999931, 9.970800000000044e-05, 0.00010013899999999...</msg>
<status status="PASS" starttime="20201115 23:03:28.183" endtime="20201115 23:03:28.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.200" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.199" endtime="20201115 23:03:28.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.203" level="INFO">VALUE: [9.990299999999841e-05, 0.00010020900000000041, 0.0001004999999999999, 0.00010056900000000174, 9.969400000000087e-05, 0.00010027699999999931, 9.970800000000044e-05, 0.00010013899999999909, 0.00010007000000000071, 0.00010018100000000127, 0.00010048599999999686, 9.991699999999798e-05, 0.00010040299999999891, 9.991600000000198e-05, 0.00010030500000000192, 9.9722e-05, 0.00010042999999999858, 0.00010048600000000033, 9.98060000000009e-05, 0.00010011099999999995, 9.993100000000102e-05, 9.991700000000145e-05, 9.965300000000163e-05, 9.970899999999991e-05, 0.00010006900000000124, 0.00010034700000000063, 9.962499999999902e-05, 0.00010058300000000131, 0.00010041699999999848, 9.974999999999914e-05, 9.976399999999871e-05, 9.990299999999841e-05, 0.00010043100000000152, 9.979199999999785e-05, 0.0001003610000000002, 0.0001005549999999987, 9.990300000000188e-05, 0.0001005549999999987, 9.961099999999945e-05, 9.973599999999957e-05, 0.0001005419999999986, 0.00010026399999999921, 9.997200000000026e-05, 0.00010041699999999848, 0.00010008300000000081, 0.00010005600000000114, 0.00010048600000000033, 0.00010056899999999827, 0.00010027799999999878, 0.00010034700000000063]</msg>
<status status="PASS" starttime="20201115 23:03:28.201" endtime="20201115 23:03:28.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.197" endtime="20201115 23:03:28.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.206" endtime="20201115 23:03:28.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:28.209" endtime="20201115 23:03:28.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.208" endtime="20201115 23:03:28.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.204" endtime="20201115 23:03:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.838" endtime="20201115 23:03:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.836" endtime="20201115 23:03:28.230"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:27.835" endtime="20201115 23:03:28.231"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.233" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.241" endtime="20201115 23:03:28.262"></status>
</kw>
<msg timestamp="20201115 23:03:28.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.240" endtime="20201115 23:03:28.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.263" endtime="20201115 23:03:28.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.266" endtime="20201115 23:03:28.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.237" endtime="20201115 23:03:28.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.235" endtime="20201115 23:03:28.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.276" endtime="20201115 23:03:28.561"></status>
</kw>
<msg timestamp="20201115 23:03:28.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023146556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.273" endtime="20201115 23:03:28.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023146556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:28.565" endtime="20201115 23:03:28.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.573" endtime="20201115 23:03:28.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.271" endtime="20201115 23:03:28.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.269" endtime="20201115 23:03:28.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.579" level="INFO">${RESULT} = [{'time': 0.023146556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010138900000000034, 'source_diff': 0.00010138900000000034}, {'time': 0.023251556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:28.576" endtime="20201115 23:03:28.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.594" level="INFO">${ACCURACY} = {'source_diff': [0.00010138900000000034, 0.00010086200000000017, 0.00010075000000000014, 0.00010109699999999791, 0.00010079099999999938, 0.00010156900000000274, 0.00010154100000000013, 0.0001014860000...</msg>
<status status="PASS" starttime="20201115 23:03:28.580" endtime="20201115 23:03:28.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.599" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.598" endtime="20201115 23:03:28.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.601" level="INFO">VALUE: [0.00010138900000000034, 0.00010086200000000017, 0.00010075000000000014, 0.00010109699999999791, 0.00010079099999999938, 0.00010156900000000274, 0.00010154100000000013, 0.00010148600000000133, 0.00010137500000000077, 0.00010156999999999874, 0.00010076399999999971, 0.00010105600000000214, 0.00010062500000000002, 0.00010105600000000214, 0.00010093099999999855, 0.00010142999999999958, 0.00010069400000000187, 0.00010133399999999806, 0.00010155599999999917, 0.00010062500000000002, 0.00010151400000000046, 0.00010077799999999928, 0.00010141699999999948, 0.00010120899999999794, 0.00010091699999999898, 0.00010092999999999908, 0.00010126400000000021, 0.00010108300000000181, 0.00010148600000000133, 0.00010102799999999953, 0.00010079200000000232, 0.00010134699999999816, 0.00010152800000000003, 0.00010136200000000067, 0.0001013610000000012, 0.0001006670000000022, 0.00010069499999999787, 0.00010127799999999978, 0.0001010419999999991, 0.00010069400000000187, 0.0001008610000000007, 0.00010141699999999948, 0.00010105599999999867, 0.00010070899999999744, 0.0001010000000000004, 0.00010122199999999804, 0.00010127700000000031, 0.00010063899999999959, 0.00010144399999999915, 0.00010072199999999754]</msg>
<status status="PASS" starttime="20201115 23:03:28.600" endtime="20201115 23:03:28.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.595" endtime="20201115 23:03:28.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.604" endtime="20201115 23:03:28.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:28.608" endtime="20201115 23:03:28.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.606" endtime="20201115 23:03:28.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.603" endtime="20201115 23:03:28.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.234" endtime="20201115 23:03:28.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.232" endtime="20201115 23:03:28.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.231" endtime="20201115 23:03:28.629"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.631" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.639" endtime="20201115 23:03:28.659"></status>
</kw>
<msg timestamp="20201115 23:03:28.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.638" endtime="20201115 23:03:28.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:28.661" endtime="20201115 23:03:28.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.664" endtime="20201115 23:03:28.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.635" endtime="20201115 23:03:28.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.633" endtime="20201115 23:03:28.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.674" endtime="20201115 23:03:28.959"></status>
</kw>
<msg timestamp="20201115 23:03:28.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02199775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:28.672" endtime="20201115 23:03:28.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02199775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022099514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:03:28.963" endtime="20201115 23:03:28.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:28.971" endtime="20201115 23:03:28.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.670" endtime="20201115 23:03:28.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.668" endtime="20201115 23:03:28.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:28.978" level="INFO">${RESULT} = [{'time': 0.022099514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010176400000000071, 'source_diff': 0.00010176400000000071}, {'time': 0.022204486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:28.975" endtime="20201115 23:03:28.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:28.991" level="INFO">${ACCURACY} = {'source_diff': [0.00010176400000000071, 0.00010234699999999916, 0.00010255600000000017, 0.00010224999999999818, 0.00010165300000000016, 0.00010163900000000059, 0.0001018610000000017, 0.00010227700000...</msg>
<status status="PASS" starttime="20201115 23:03:28.979" endtime="20201115 23:03:28.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.996" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:03:28.995" endtime="20201115 23:03:28.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:28.999" level="INFO">VALUE: [0.00010176400000000071, 0.00010234699999999916, 0.00010255600000000017, 0.00010224999999999818, 0.00010165300000000016, 0.00010163900000000059, 0.0001018610000000017, 0.00010227700000000131, 0.00010229100000000088, 0.00010249999999999843, 0.00010256900000000027, 0.00010244400000000015, 0.00010206899999999977, 0.00010193100000000302, 0.00010204100000000063, 0.00010193099999999955, 0.0001016809999999993, 0.00010234799999999863, 0.0001016939999999994, 0.00010220799999999947, 0.00010198600000000183, 0.0001019160000000005, 0.00010198600000000183, 0.00010162500000000102, 0.00010227800000000078, 0.00010179199999999985, 0.00010177800000000028, 0.00010177800000000028, 0.00010241699999999701, 0.00010183299999999909, 0.00010193000000000008, 0.00010213899999999762, 0.00010237500000000177, 0.00010234699999999916, 0.00010233299999999959, 0.00010186099999999823, 0.00010251400000000147, 0.00010191699999999998, 0.00010162500000000102, 0.00010211100000000195, 0.00010195799999999922, 0.00010212500000000152, 0.00010167999999999983, 0.00010255600000000017, 0.00010256900000000027, 0.00010247199999999929, 0.00010226399999999775, 0.00010206999999999924, 0.00010170799999999897, 0.00010206899999999977]</msg>
<status status="PASS" starttime="20201115 23:03:28.997" endtime="20201115 23:03:28.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.992" endtime="20201115 23:03:29.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.002" endtime="20201115 23:03:29.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.005" endtime="20201115 23:03:29.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.004" endtime="20201115 23:03:29.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.000" endtime="20201115 23:03:29.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.632" endtime="20201115 23:03:29.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.630" endtime="20201115 23:03:29.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:28.629" endtime="20201115 23:03:29.027"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.029" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.038" endtime="20201115 23:03:29.057"></status>
</kw>
<msg timestamp="20201115 23:03:29.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.036" endtime="20201115 23:03:29.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.058" endtime="20201115 23:03:29.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.061" endtime="20201115 23:03:29.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.033" endtime="20201115 23:03:29.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.031" endtime="20201115 23:03:29.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.070" endtime="20201115 23:03:29.357"></status>
</kw>
<msg timestamp="20201115 23:03:29.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.068" endtime="20201115 23:03:29.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.361" endtime="20201115 23:03:29.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.369" endtime="20201115 23:03:29.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.066" endtime="20201115 23:03:29.371"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.064" endtime="20201115 23:03:29.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:29.376" level="INFO">${RESULT} = [{'time': 0.022627361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030139999999985, 'source_diff': 0.0001030139999999985}, {'time': 0.022735361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:03:29.373" endtime="20201115 23:03:29.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:29.389" level="INFO">${ACCURACY} = {'source_diff': [0.0001030139999999985, 0.00010334700000000016, 0.00010311199999999895, 0.00010270899999999944, 0.00010276400000000172, 0.00010307000000000024, 0.00010340300000000191, 0.00010331899999...</msg>
<status status="PASS" starttime="20201115 23:03:29.377" endtime="20201115 23:03:29.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.394" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:03:29.393" endtime="20201115 23:03:29.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.396" level="INFO">VALUE: [0.0001030139999999985, 0.00010334700000000016, 0.00010311199999999895, 0.00010270899999999944, 0.00010276400000000172, 0.00010307000000000024, 0.00010340300000000191, 0.00010331899999999755, 0.0001035000000000029, 0.00010297199999999979, 0.00010298599999999936, 0.00010270799999999997, 0.00010312500000000252, 0.00010297199999999979, 0.00010301400000000197, 0.00010354099999999866, 0.00010355499999999823, 0.00010298699999999883, 0.00010293000000000108, 0.00010348599999999986, 0.00010334700000000016, 0.00010333300000000059, 0.00010327799999999832, 0.00010284699999999966, 0.00010297199999999979, 0.00010273600000000258, 0.00010276399999999825, 0.0001030000000000024, 0.0001030139999999985, 0.00010277699999999834, 0.00010262500000000202, 0.00010312500000000252, 0.00010291700000000098, 0.00010270799999999997, 0.00010338899999999887, 0.00010334700000000016, 0.00010331899999999755, 0.00010298699999999883, 0.0001026940000000004, 0.00010330499999999798, 0.00010322200000000004, 0.00010336099999999973, 0.00010333300000000059, 0.00010284699999999966, 0.0001030420000000011, 0.0001035420000000016, 0.00010312499999999905, 0.00010312500000000252, 0.00010283300000000009, 0.00010348599999999986]</msg>
<status status="PASS" starttime="20201115 23:03:29.395" endtime="20201115 23:03:29.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.390" endtime="20201115 23:03:29.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.400" endtime="20201115 23:03:29.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.403" endtime="20201115 23:03:29.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.401" endtime="20201115 23:03:29.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.398" endtime="20201115 23:03:29.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.030" endtime="20201115 23:03:29.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.028" endtime="20201115 23:03:29.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.027" endtime="20201115 23:03:29.425"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.427" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.435" endtime="20201115 23:03:29.456"></status>
</kw>
<msg timestamp="20201115 23:03:29.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.434" endtime="20201115 23:03:29.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.458" endtime="20201115 23:03:29.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.461" endtime="20201115 23:03:29.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.431" endtime="20201115 23:03:29.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.429" endtime="20201115 23:03:29.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.470" endtime="20201115 23:03:29.756"></status>
</kw>
<msg timestamp="20201115 23:03:29.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023005556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.468" endtime="20201115 23:03:29.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023005556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023109625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.760" endtime="20201115 23:03:29.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.768" endtime="20201115 23:03:29.770"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.466" endtime="20201115 23:03:29.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.464" endtime="20201115 23:03:29.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:29.775" level="INFO">${RESULT} = [{'time': 0.023109625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010406900000000177, 'source_diff': 0.00010406900000000177}, {'time': 0.023217639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:29.772" endtime="20201115 23:03:29.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:29.788" level="INFO">${ACCURACY} = {'source_diff': [0.00010406900000000177, 0.00010427800000000279, 0.00010386100000000023, 0.00010377799999999882, 0.00010365199999999922, 0.00010370800000000097, 0.00010384700000000066, 0.0001044439999...</msg>
<status status="PASS" starttime="20201115 23:03:29.776" endtime="20201115 23:03:29.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.793" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:03:29.792" endtime="20201115 23:03:29.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.796" level="INFO">VALUE: [0.00010406900000000177, 0.00010427800000000279, 0.00010386100000000023, 0.00010377799999999882, 0.00010365199999999922, 0.00010370800000000097, 0.00010384700000000066, 0.00010444399999999868, 0.00010363900000000259, 0.00010444500000000162, 0.00010379199999999839, 0.00010426399999999975, 0.00010397199999999732, 0.00010450000000000043, 0.00010363799999999965, 0.00010429099999999941, 0.00010434699999999769, 0.0001045550000000027, 0.00010413899999999962, 0.00010391700000000198, 0.00010384700000000066, 0.00010422199999999757, 0.000104514, 0.00010413899999999962, 0.00010362499999999955, 0.00010398699999999983, 0.00010454099999999966, 0.00010419399999999843, 0.00010361099999999998, 0.00010363899999999912, 0.00010441699999999901, 0.00010443099999999858, 0.00010362499999999955, 0.00010450000000000043, 0.00010443099999999858, 0.00010393000000000208, 0.00010395799999999775, 0.00010434699999999769, 0.00010452799999999957, 0.00010399999999999993, 0.00010457000000000174, 0.00010450000000000043, 0.00010369399999999793, 0.00010361099999999998, 0.00010390299999999894, 0.00010397300000000026, 0.00010448599999999739, 0.00010441599999999954, 0.00010384700000000066, 0.00010386100000000023]</msg>
<status status="PASS" starttime="20201115 23:03:29.794" endtime="20201115 23:03:29.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.789" endtime="20201115 23:03:29.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.799" endtime="20201115 23:03:29.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:29.803" endtime="20201115 23:03:29.822"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.801" endtime="20201115 23:03:29.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.798" endtime="20201115 23:03:29.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.428" endtime="20201115 23:03:29.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.426" endtime="20201115 23:03:29.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.425" endtime="20201115 23:03:29.824"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.826" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.835" endtime="20201115 23:03:29.854"></status>
</kw>
<msg timestamp="20201115 23:03:29.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.833" endtime="20201115 23:03:29.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:29.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:29.856" endtime="20201115 23:03:29.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.859" endtime="20201115 23:03:29.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.831" endtime="20201115 23:03:29.861"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.828" endtime="20201115 23:03:29.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:29.868" endtime="20201115 23:03:30.154"></status>
</kw>
<msg timestamp="20201115 23:03:30.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:29.866" endtime="20201115 23:03:30.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.158" endtime="20201115 23:03:30.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.166" endtime="20201115 23:03:30.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.863" endtime="20201115 23:03:30.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.862" endtime="20201115 23:03:30.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:30.173" level="INFO">${RESULT} = [{'time': 0.023386028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010493099999999908, 'source_diff': 0.00010493099999999908}, {'time': 0.023494042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:30.169" endtime="20201115 23:03:30.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:30.187" level="INFO">${ACCURACY} = {'source_diff': [0.00010493099999999908, 0.00010534799999999817, 0.00010512500000000105, 0.00010558299999999937, 0.00010550000000000143, 0.00010522199999999857, 0.00010505499999999973, 0.0001052079999...</msg>
<status status="PASS" starttime="20201115 23:03:30.174" endtime="20201115 23:03:30.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.192" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:03:30.191" endtime="20201115 23:03:30.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.195" level="INFO">VALUE: [0.00010493099999999908, 0.00010534799999999817, 0.00010512500000000105, 0.00010558299999999937, 0.00010550000000000143, 0.00010522199999999857, 0.00010505499999999973, 0.000105207999999999, 0.00010476400000000025, 0.0001055559999999997, 0.0001050559999999992, 0.00010468099999999883, 0.00010463799999999718, 0.00010538900000000087, 0.00010462499999999708, 0.00010545800000000272, 0.0001050689999999993, 0.00010465299999999969, 0.00010506999999999878, 0.00010534699999999869, 0.0001051949999999989, 0.00010477799999999982, 0.0001052360000000016, 0.00010490200000000047, 0.00010504100000000016, 0.00010543000000000011, 0.0001050689999999993, 0.00010502800000000007, 0.00010506999999999878, 0.00010529199999999989, 0.00010558399999999885, 0.00010526400000000075, 0.00010498699999999736, 0.00010497199999999832, 0.00010534700000000216, 0.00010534700000000216, 0.00010497199999999832, 0.00010491699999999951, 0.00010479199999999939, 0.00010459700000000141, 0.0001046949999999984, 0.00010512500000000105, 0.00010504199999999964, 0.00010533299999999912, 0.00010544400000000315, 0.00010472199999999807, 0.00010527800000000032, 0.00010522199999999857, 0.00010526400000000075, 0.00010520899999999847]</msg>
<status status="PASS" starttime="20201115 23:03:30.193" endtime="20201115 23:03:30.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.188" endtime="20201115 23:03:30.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.198" endtime="20201115 23:03:30.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:30.202" endtime="20201115 23:03:30.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.200" endtime="20201115 23:03:30.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.197" endtime="20201115 23:03:30.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.827" endtime="20201115 23:03:30.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.825" endtime="20201115 23:03:30.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:29.824" endtime="20201115 23:03:30.223"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.225" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.233" endtime="20201115 23:03:30.253"></status>
</kw>
<msg timestamp="20201115 23:03:30.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.232" endtime="20201115 23:03:30.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.254" endtime="20201115 23:03:30.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.257" endtime="20201115 23:03:30.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.229" endtime="20201115 23:03:30.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.227" endtime="20201115 23:03:30.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.266" endtime="20201115 23:03:30.551"></status>
</kw>
<msg timestamp="20201115 23:03:30.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.265" endtime="20201115 23:03:30.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.555" endtime="20201115 23:03:30.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.563" endtime="20201115 23:03:30.565"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.262" endtime="20201115 23:03:30.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.260" endtime="20201115 23:03:30.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:30.570" level="INFO">${RESULT} = [{'time': 0.022081125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010558299999999937, 'source_diff': 0.00010558299999999937}, {'time': 0.022191153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:30.567" endtime="20201115 23:03:30.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:30.584" level="INFO">${ACCURACY} = {'source_diff': [0.00010558299999999937, 0.000106514000000002, 0.0001061949999999999, 0.00010648599999999939, 0.0001056949999999994, 0.00010577800000000082, 0.000106208, 0.00010604100000000116, 0.0001...</msg>
<status status="PASS" starttime="20201115 23:03:30.571" endtime="20201115 23:03:30.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.588" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:03:30.587" endtime="20201115 23:03:30.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.591" level="INFO">VALUE: [0.00010558299999999937, 0.000106514000000002, 0.0001061949999999999, 0.00010648599999999939, 0.0001056949999999994, 0.00010577800000000082, 0.000106208, 0.00010604100000000116, 0.00010577800000000082, 0.000106514000000002, 0.00010602800000000107, 0.000106208, 0.00010588799999999843, 0.00010606999999999978, 0.00010604099999999769, 0.0001062499999999987, 0.00010655500000000123, 0.0001058889999999979, 0.00010648599999999939, 0.00010633300000000012, 0.00010577799999999735, 0.00010606999999999978, 0.00010580599999999996, 0.00010593100000000008, 0.00010562499999999808, 0.00010576400000000125, 0.00010584699999999919, 0.00010588900000000137, 0.0001060140000000015, 0.00010572199999999907, 0.00010579200000000039, 0.00010634699999999969, 0.00010651399999999853, 0.00010627800000000132, 0.00010597299999999879, 0.00010569399999999993, 0.00010569399999999993, 0.00010591600000000104, 0.00010602800000000107, 0.00010641699999999754, 0.00010586099999999876, 0.00010598600000000236, 0.00010580599999999996, 0.0001060279999999976, 0.0001063889999999984, 0.00010580500000000048, 0.00010562499999999808, 0.00010561100000000198, 0.0001065279999999981, 0.00010654199999999767]</msg>
<status status="PASS" starttime="20201115 23:03:30.590" endtime="20201115 23:03:30.591"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.585" endtime="20201115 23:03:30.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.594" endtime="20201115 23:03:30.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:30.597" endtime="20201115 23:03:30.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.596" endtime="20201115 23:03:30.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.592" endtime="20201115 23:03:30.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.226" endtime="20201115 23:03:30.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.224" endtime="20201115 23:03:30.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.223" endtime="20201115 23:03:30.619"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.621" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.629" endtime="20201115 23:03:30.649"></status>
</kw>
<msg timestamp="20201115 23:03:30.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.628" endtime="20201115 23:03:30.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:30.651" endtime="20201115 23:03:30.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.653" endtime="20201115 23:03:30.655"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.625" endtime="20201115 23:03:30.656"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.623" endtime="20201115 23:03:30.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.663" endtime="20201115 23:03:30.949"></status>
</kw>
<msg timestamp="20201115 23:03:30.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.661" endtime="20201115 23:03:30.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022217514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:30.953" endtime="20201115 23:03:30.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.961" endtime="20201115 23:03:30.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.658" endtime="20201115 23:03:30.964"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.657" endtime="20201115 23:03:30.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:30.968" level="INFO">${RESULT} = [{'time': 0.022217514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010749999999999996, 'source_diff': 0.00010749999999999996}, {'time': 0.022328528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:30.965" endtime="20201115 23:03:30.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:30.981" level="INFO">${ACCURACY} = {'source_diff': [0.00010749999999999996, 0.00010668100000000083, 0.00010743100000000158, 0.00010704199999999817, 0.00010734700000000069, 0.00010729099999999894, 0.00010711100000000001, 0.0001067080000...</msg>
<status status="PASS" starttime="20201115 23:03:30.969" endtime="20201115 23:03:30.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.986" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:03:30.985" endtime="20201115 23:03:30.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:30.989" level="INFO">VALUE: [0.00010749999999999996, 0.00010668100000000083, 0.00010743100000000158, 0.00010704199999999817, 0.00010734700000000069, 0.00010729099999999894, 0.00010711100000000001, 0.0001067080000000005, 0.00010719400000000143, 0.00010683300000000062, 0.00010743100000000158, 0.00010748599999999692, 0.00010684799999999967, 0.00010708400000000035, 0.00010729099999999894, 0.00010741599999999907, 0.0001067080000000005, 0.00010672200000000007, 0.00010677699999999887, 0.00010691700000000151, 0.00010743100000000158, 0.00010695800000000075, 0.00010676399999999878, 0.00010733399999999713, 0.0001072499999999997, 0.00010755499999999876, 0.00010697200000000032, 0.00010705500000000173, 0.00010742999999999864, 0.00010733300000000112, 0.00010720900000000047, 0.00010699999999999946, 0.00010713900000000262, 0.00010675000000000268, 0.00010712499999999958, 0.00010686099999999976, 0.00010705500000000173, 0.00010748600000000039, 0.00010677799999999835, 0.00010662499999999908, 0.00010699999999999946, 0.0001075699999999978, 0.00010682000000000053, 0.00010683300000000062, 0.00010663899999999865, 0.00010669399999999746, 0.00010683300000000062, 0.00010737499999999983, 0.00010691700000000151, 0.00010712500000000305]</msg>
<status status="PASS" starttime="20201115 23:03:30.987" endtime="20201115 23:03:30.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.982" endtime="20201115 23:03:30.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:30.992" endtime="20201115 23:03:30.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:30.995" endtime="20201115 23:03:31.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.994" endtime="20201115 23:03:31.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.990" endtime="20201115 23:03:31.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.622" endtime="20201115 23:03:31.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.620" endtime="20201115 23:03:31.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:30.619" endtime="20201115 23:03:31.017"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.027" endtime="20201115 23:03:31.047"></status>
</kw>
<msg timestamp="20201115 23:03:31.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.026" endtime="20201115 23:03:31.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.048" endtime="20201115 23:03:31.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.051" endtime="20201115 23:03:31.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.023" endtime="20201115 23:03:31.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.021" endtime="20201115 23:03:31.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.060" endtime="20201115 23:03:31.346"></status>
</kw>
<msg timestamp="20201115 23:03:31.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.058" endtime="20201115 23:03:31.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.350" endtime="20201115 23:03:31.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.358" endtime="20201115 23:03:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.056" endtime="20201115 23:03:31.360"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.054" endtime="20201115 23:03:31.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:31.365" level="INFO">${RESULT} = [{'time': 0.022252444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010800000000000046, 'source_diff': 0.00010800000000000046}, {'time': 0.022365458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:31.362" endtime="20201115 23:03:31.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:31.378" level="INFO">${ACCURACY} = {'source_diff': [0.00010800000000000046, 0.00010842999999999964, 0.00010791599999999957, 0.0001078340000000011, 0.00010798600000000089, 0.00010813900000000015, 0.00010861100000000151, 0.00010769500000...</msg>
<status status="PASS" starttime="20201115 23:03:31.366" endtime="20201115 23:03:31.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.383" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:03:31.382" endtime="20201115 23:03:31.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.385" level="INFO">VALUE: [0.00010800000000000046, 0.00010842999999999964, 0.00010791599999999957, 0.0001078340000000011, 0.00010798600000000089, 0.00010813900000000015, 0.00010861100000000151, 0.0001076950000000014, 0.0001077089999999975, 0.00010798700000000036, 0.00010855499999999976, 0.00010841699999999954, 0.00010834700000000169, 0.00010763900000000312, 0.00010851400000000053, 0.00010798600000000089, 0.00010805599999999874, 0.00010807000000000178, 0.00010777799999999935, 0.00010766599999999932, 0.00010855499999999976, 0.0001083890000000004, 0.0001082219999999981, 0.00010765300000000269, 0.00010827799999999985, 0.00010812500000000058, 0.00010834700000000169, 0.00010813900000000015, 0.00010800000000000046, 0.00010841699999999954, 0.00010848599999999792, 0.00010855499999999976, 0.0001077080000000015, 0.00010836099999999779, 0.00010798599999999742, 0.00010855499999999976, 0.00010805599999999874, 0.00010848600000000139, 0.00010836100000000126, 0.0001077500000000002, 0.00010784700000000119, 0.0001085690000000028, 0.00010823600000000114, 0.00010804199999999917, 0.00010812500000000058, 0.00010827799999999985, 0.00010776399999999978, 0.00010793099999999861, 0.00010767999999999889, 0.0001084020000000005]</msg>
<status status="PASS" starttime="20201115 23:03:31.384" endtime="20201115 23:03:31.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.379" endtime="20201115 23:03:31.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.388" endtime="20201115 23:03:31.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:31.392" endtime="20201115 23:03:31.411"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.390" endtime="20201115 23:03:31.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.387" endtime="20201115 23:03:31.412"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.020" endtime="20201115 23:03:31.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.018" endtime="20201115 23:03:31.413"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.017" endtime="20201115 23:03:31.413"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.416" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.424" endtime="20201115 23:03:31.444"></status>
</kw>
<msg timestamp="20201115 23:03:31.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.422" endtime="20201115 23:03:31.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.445" endtime="20201115 23:03:31.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.448" endtime="20201115 23:03:31.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.420" endtime="20201115 23:03:31.450"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.418" endtime="20201115 23:03:31.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.457" endtime="20201115 23:03:31.744"></status>
</kw>
<msg timestamp="20201115 23:03:31.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.456" endtime="20201115 23:03:31.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022978903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023087986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.748" endtime="20201115 23:03:31.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.756" endtime="20201115 23:03:31.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.453" endtime="20201115 23:03:31.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.451" endtime="20201115 23:03:31.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:31.762" level="INFO">${RESULT} = [{'time': 0.023087986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010908300000000287, 'source_diff': 0.00010908300000000287}, {'time': 0.023199972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:31.759" endtime="20201115 23:03:31.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:31.777" level="INFO">${ACCURACY} = {'source_diff': [0.00010908300000000287, 0.00010884699999999872, 0.00010884699999999872, 0.00010934699999999922, 0.00010929200000000042, 0.0001093890000000014, 0.00010934800000000217, 0.00010876400000...</msg>
<status status="PASS" starttime="20201115 23:03:31.763" endtime="20201115 23:03:31.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.782" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:03:31.781" endtime="20201115 23:03:31.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.784" level="INFO">VALUE: [0.00010908300000000287, 0.00010884699999999872, 0.00010884699999999872, 0.00010934699999999922, 0.00010929200000000042, 0.0001093890000000014, 0.00010934800000000217, 0.00010876400000000078, 0.00010905599999999974, 0.0001087769999999974, 0.00010948599999999892, 0.00010905500000000026, 0.00010877800000000035, 0.0001090699999999993, 0.00010897199999999885, 0.00010926400000000128, 0.0001093890000000014, 0.0001088479999999982, 0.00010876299999999783, 0.0001095829999999999, 0.00010884699999999872, 0.00010883299999999915, 0.00010862500000000108, 0.00010919399999999996, 0.00010958400000000285, 0.00010955600000000024, 0.0001093479999999987, 0.00010868099999999936, 0.0001087630000000013, 0.0001087219999999986, 0.00010877800000000035, 0.00010863900000000065, 0.0001095280000000011, 0.00010881999999999906, 0.00010877800000000035, 0.00010873599999999817, 0.00010898699999999789, 0.00010956900000000033, 0.00010918000000000039, 0.00010869399999999946, 0.00010952799999999763, 0.00010956900000000033, 0.00010936099999999879, 0.00010912500000000158, 0.00010881899999999958, 0.00010887500000000133, 0.00010948599999999892, 0.00010956900000000033, 0.00010906899999999983, 0.00010948599999999892]</msg>
<status status="PASS" starttime="20201115 23:03:31.783" endtime="20201115 23:03:31.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.778" endtime="20201115 23:03:31.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.787" endtime="20201115 23:03:31.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:31.791" endtime="20201115 23:03:31.810"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.789" endtime="20201115 23:03:31.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.786" endtime="20201115 23:03:31.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.416" endtime="20201115 23:03:31.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.414" endtime="20201115 23:03:31.812"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.414" endtime="20201115 23:03:31.812"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.814" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.827" endtime="20201115 23:03:31.847"></status>
</kw>
<msg timestamp="20201115 23:03:31.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.826" endtime="20201115 23:03:31.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:31.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:31.848" endtime="20201115 23:03:31.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.851" endtime="20201115 23:03:31.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.823" endtime="20201115 23:03:31.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.816" endtime="20201115 23:03:31.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:31.860" endtime="20201115 23:03:32.147"></status>
</kw>
<msg timestamp="20201115 23:03:32.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027139819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:31.859" endtime="20201115 23:03:32.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027139819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.151" endtime="20201115 23:03:32.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.159" endtime="20201115 23:03:32.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.856" endtime="20201115 23:03:32.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.854" endtime="20201115 23:03:32.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.166" level="INFO">${RESULT} = [{'time': 0.027139819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010994400000000071, 'source_diff': 0.00010994400000000071}, {'time': 0.027252889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:32.163" endtime="20201115 23:03:32.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.179" level="INFO">${ACCURACY} = {'source_diff': [0.00010994400000000071, 0.00011061100000000004, 0.00011013900000000215, 0.00011050000000000296, 0.00010963899999999818, 0.0001097219999999996, 0.00011049999999999949, 0.00011051399999...</msg>
<status status="PASS" starttime="20201115 23:03:32.167" endtime="20201115 23:03:32.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.184" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.183" endtime="20201115 23:03:32.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.186" level="INFO">VALUE: [0.00010994400000000071, 0.00011061100000000004, 0.00011013900000000215, 0.00011050000000000296, 0.00010963899999999818, 0.0001097219999999996, 0.00011049999999999949, 0.00011051399999999906, 0.00011045800000000078, 0.00010979100000000144, 0.00011049999999999949, 0.00011055500000000176, 0.00010991600000000157, 0.00010969499999999993, 0.00010984699999999972, 0.00010979200000000092, 0.00010962499999999861, 0.00010991699999999757, 0.00010986100000000276, 0.00010963800000000218, 0.00011049999999999949, 0.0001104159999999986, 0.00011029200000000142, 0.00010979199999999745, 0.00011058400000000038, 0.00010965299999999775, 0.00011055500000000176, 0.00010991700000000104, 0.00010980599999999702, 0.00011006899999999736, 0.00010998599999999942, 0.00011056900000000133, 0.00010987500000000233, 0.00011020800000000053, 0.0001098890000000019, 0.00010987499999999886, 0.00010990300000000147, 0.00011040299999999503, 0.00011019400000000096, 0.00010999999999999899, 0.00011033299999999718, 0.00011019400000000096, 0.00010983300000000362, 0.00011005599999999727, 0.00010993100000000061, 0.00010983399999999616, 0.00010976399999999831, 0.00010969499999999993, 0.00011041600000000207, 0.00010986099999999582]</msg>
<status status="PASS" starttime="20201115 23:03:32.185" endtime="20201115 23:03:32.187"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.180" endtime="20201115 23:03:32.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.190" endtime="20201115 23:03:32.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.193" endtime="20201115 23:03:32.213"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.192" endtime="20201115 23:03:32.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.188" endtime="20201115 23:03:32.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.815" endtime="20201115 23:03:32.214"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.813" endtime="20201115 23:03:32.215"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:31.812" endtime="20201115 23:03:32.215"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.217" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.225" endtime="20201115 23:03:32.247"></status>
</kw>
<msg timestamp="20201115 23:03:32.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.224" endtime="20201115 23:03:32.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.248" endtime="20201115 23:03:32.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.251" endtime="20201115 23:03:32.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.221" endtime="20201115 23:03:32.253"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.219" endtime="20201115 23:03:32.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.260" endtime="20201115 23:03:32.546"></status>
</kw>
<msg timestamp="20201115 23:03:32.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023381708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.258" endtime="20201115 23:03:32.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023381708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.550" endtime="20201115 23:03:32.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.558" endtime="20201115 23:03:32.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.256" endtime="20201115 23:03:32.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.254" endtime="20201115 23:03:32.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.564" level="INFO">${RESULT} = [{'time': 0.023381708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011086100000000029, 'source_diff': 0.00011086100000000029}, {'time': 0.023495653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:32.561" endtime="20201115 23:03:32.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.578" level="INFO">${ACCURACY} = {'source_diff': [0.00011086100000000029, 0.00011088899999999943, 0.00011113899999999968, 0.00011104200000000217, 0.00011131899999999861, 0.00011150000000000049, 0.00011080500000000201, 0.0001109310000...</msg>
<status status="PASS" starttime="20201115 23:03:32.565" endtime="20201115 23:03:32.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.582" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.581" endtime="20201115 23:03:32.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.585" level="INFO">VALUE: [0.00011086100000000029, 0.00011088899999999943, 0.00011113899999999968, 0.00011104200000000217, 0.00011131899999999861, 0.00011150000000000049, 0.00011080500000000201, 0.00011093100000000161, 0.00011077799999999888, 0.00011105600000000174, 0.00011141699999999907, 0.00011099999999999999, 0.00011113900000000315, 0.0001112220000000011, 0.00011119400000000196, 0.0001114159999999996, 0.00011102799999999913, 0.00011154200000000267, 0.00011134699999999775, 0.00011156999999999834, 0.00011127800000000285, 0.00011099999999999999, 0.00011073600000000017, 0.00011156899999999886, 0.00011149999999999702, 0.00011151400000000006, 0.00011104099999999922, 0.00011061100000000004, 0.00011088899999999943, 0.00011155599999999877, 0.00011148600000000092, 0.0001114029999999995, 0.00011105600000000174, 0.00011098600000000042, 0.00011102699999999965, 0.00011063899999999918, 0.00011083300000000115, 0.00011150000000000049, 0.00011134700000000122, 0.00011151400000000006, 0.00011105599999999827, 0.0001112769999999999, 0.00011083400000000063, 0.00011136100000000079, 0.00011083300000000115, 0.00011055500000000176, 0.00011112500000000011, 0.00011087500000000333, 0.00011084700000000072, 0.00011133400000000113]</msg>
<status status="PASS" starttime="20201115 23:03:32.583" endtime="20201115 23:03:32.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.579" endtime="20201115 23:03:32.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.588" endtime="20201115 23:03:32.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.592" endtime="20201115 23:03:32.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.590" endtime="20201115 23:03:32.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.587" endtime="20201115 23:03:32.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.218" endtime="20201115 23:03:32.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.216" endtime="20201115 23:03:32.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.215" endtime="20201115 23:03:32.613"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.616" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.624" endtime="20201115 23:03:32.644"></status>
</kw>
<msg timestamp="20201115 23:03:32.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.622" endtime="20201115 23:03:32.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:32.645" endtime="20201115 23:03:32.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.648" endtime="20201115 23:03:32.649"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.620" endtime="20201115 23:03:32.650"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.617" endtime="20201115 23:03:32.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.657" endtime="20201115 23:03:32.943"></status>
</kw>
<msg timestamp="20201115 23:03:32.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.655" endtime="20201115 23:03:32.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022222611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:32.947" endtime="20201115 23:03:32.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.955" endtime="20201115 23:03:32.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.653" endtime="20201115 23:03:32.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.651" endtime="20201115 23:03:32.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:32.962" level="INFO">${RESULT} = [{'time': 0.022222611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011188900000000043, 'source_diff': 0.00011188900000000043}, {'time': 0.022338597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:32.958" endtime="20201115 23:03:32.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:32.975" level="INFO">${ACCURACY} = {'source_diff': [0.00011188900000000043, 0.00011252800000000063, 0.00011208399999999841, 0.00011241700000000007, 0.00011194499999999871, 0.00011229199999999995, 0.00011229100000000047, 0.0001120559999...</msg>
<status status="PASS" starttime="20201115 23:03:32.963" endtime="20201115 23:03:32.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.980" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:03:32.979" endtime="20201115 23:03:32.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:32.983" level="INFO">VALUE: [0.00011188900000000043, 0.00011252800000000063, 0.00011208399999999841, 0.00011241700000000007, 0.00011194499999999871, 0.00011229199999999995, 0.00011229100000000047, 0.00011205599999999927, 0.0001124160000000006, 0.0001122770000000009, 0.00011256899999999986, 0.00011248600000000192, 0.00011222199999999863, 0.00011163900000000018, 0.00011188900000000043, 0.00011169500000000193, 0.0001124030000000005, 0.00011234699999999875, 0.0001117770000000004, 0.00011209700000000197, 0.00011241700000000007, 0.0001122220000000021, 0.00011170799999999856, 0.00011213900000000068, 0.00011162500000000061, 0.00011195799999999881, 0.00011220799999999906, 0.0001119160000000001, 0.00011176400000000031, 0.00011208299999999893, 0.00011206899999999936, 0.00011229199999999995, 0.00011183300000000215, 0.00011213900000000068, 0.00011220899999999853, 0.00011249999999999802, 0.00011170799999999856, 0.000112596999999999, 0.00011229199999999995, 0.00011233299999999918, 0.0001120700000000023, 0.00011216699999999982, 0.00011213900000000068, 0.00011198599999999795, 0.00011251300000000158, 0.00011169399999999899, 0.00011166700000000279, 0.00011249999999999802, 0.00011219399999999949, 0.00011234699999999875]</msg>
<status status="PASS" starttime="20201115 23:03:32.981" endtime="20201115 23:03:32.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.976" endtime="20201115 23:03:32.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:32.986" endtime="20201115 23:03:32.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:32.989" endtime="20201115 23:03:33.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.988" endtime="20201115 23:03:33.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.984" endtime="20201115 23:03:33.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.616" endtime="20201115 23:03:33.010"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.614" endtime="20201115 23:03:33.011"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:32.613" endtime="20201115 23:03:33.011"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.013" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.022" endtime="20201115 23:03:33.041"></status>
</kw>
<msg timestamp="20201115 23:03:33.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.020" endtime="20201115 23:03:33.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.043" endtime="20201115 23:03:33.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.046" endtime="20201115 23:03:33.047"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.017" endtime="20201115 23:03:33.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.015" endtime="20201115 23:03:33.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.055" endtime="20201115 23:03:33.340"></status>
</kw>
<msg timestamp="20201115 23:03:33.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.053" endtime="20201115 23:03:33.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023600847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.344" endtime="20201115 23:03:33.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.352" endtime="20201115 23:03:33.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.051" endtime="20201115 23:03:33.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.049" endtime="20201115 23:03:33.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:33.359" level="INFO">${RESULT} = [{'time': 0.023600847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011329100000000147, 'source_diff': 0.00011329100000000147}, {'time': 0.023720889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:33.356" endtime="20201115 23:03:33.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:33.374" level="INFO">${ACCURACY} = {'source_diff': [0.00011329100000000147, 0.00011343099999999717, 0.00011320800000000006, 0.00011266700000000032, 0.00011298599999999895, 0.000113597, 0.00011349999999999902, 0.00011338899999999846, 0....</msg>
<status status="PASS" starttime="20201115 23:03:33.360" endtime="20201115 23:03:33.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.379" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:03:33.378" endtime="20201115 23:03:33.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.381" level="INFO">VALUE: [0.00011329100000000147, 0.00011343099999999717, 0.00011320800000000006, 0.00011266700000000032, 0.00011298599999999895, 0.000113597, 0.00011349999999999902, 0.00011338899999999846, 0.00011323699999999867, 0.00011319499999999996, 0.00011286100000000229, 0.00011355499999999782, 0.00011277699999999793, 0.00011351399999999859, 0.00011316700000000082, 0.00011262500000000161, 0.00011273600000000217, 0.00011336099999999932, 0.00011262499999999814, 0.00011262500000000161, 0.0001130420000000007, 0.00011345800000000031, 0.00011315200000000178, 0.00011298599999999895, 0.00011291700000000057, 0.00011302800000000113, 0.0001135559999999973, 0.00011334699999999975, 0.00011298600000000242, 0.00011270899999999903, 0.00011270799999999956, 0.00011334699999999975, 0.00011341599999999813, 0.00011348599999999945, 0.00011348599999999945, 0.00011334700000000322, 0.00011277800000000088, 0.00011298600000000242, 0.00011293100000000014, 0.00011329100000000147, 0.00011320800000000006, 0.00011355499999999782, 0.00011313899999999821, 0.00011358300000000043, 0.00011299999999999852, 0.00011344500000000021, 0.00011357000000000034, 0.00011290299999999753, 0.000113597, 0.00011270799999999956]</msg>
<status status="PASS" starttime="20201115 23:03:33.380" endtime="20201115 23:03:33.381"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.375" endtime="20201115 23:03:33.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.384" endtime="20201115 23:03:33.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.388" endtime="20201115 23:03:33.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.386" endtime="20201115 23:03:33.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.383" endtime="20201115 23:03:33.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.014" endtime="20201115 23:03:33.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.012" endtime="20201115 23:03:33.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.011" endtime="20201115 23:03:33.409"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.411" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.420" endtime="20201115 23:03:33.440"></status>
</kw>
<msg timestamp="20201115 23:03:33.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.418" endtime="20201115 23:03:33.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:03:33.441" endtime="20201115 23:03:33.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.444" endtime="20201115 23:03:33.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.415" endtime="20201115 23:03:33.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.413" endtime="20201115 23:03:33.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.453" endtime="20201115 23:03:33.739"></status>
</kw>
<msg timestamp="20201115 23:03:33.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.451" endtime="20201115 23:03:33.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:03:33.743" endtime="20201115 23:03:33.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.752" endtime="20201115 23:03:33.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.449" endtime="20201115 23:03:33.754"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.447" endtime="20201115 23:03:33.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:03:33.759" level="INFO">${RESULT} = [{'time': 0.022430764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011399999999999952, 'source_diff': 0.00011399999999999952}, {'time': 0.022549764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:03:33.755" endtime="20201115 23:03:33.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:03:33.772" level="INFO">${ACCURACY} = {'source_diff': [0.00011399999999999952, 0.00011405600000000127, 0.00011455600000000177, 0.00011427800000000238, 0.00011376399999999884, 0.00011433300000000118, 0.00011405499999999832, 0.0001139300000...</msg>
<status status="PASS" starttime="20201115 23:03:33.760" endtime="20201115 23:03:33.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.777" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:03:33.776" endtime="20201115 23:03:33.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:03:33.779" level="INFO">VALUE: [0.00011399999999999952, 0.00011405600000000127, 0.00011455600000000177, 0.00011427800000000238, 0.00011376399999999884, 0.00011433300000000118, 0.00011405499999999832, 0.00011393000000000167, 0.00011455499999999882, 0.00011369400000000099, 0.0001144169999999986, 0.00011452799999999916, 0.00011445899999999731, 0.00011412499999999964, 0.00011448600000000045, 0.00011427799999999891, 0.00011427800000000238, 0.00011441700000000207, 0.0001144169999999986, 0.00011441700000000207, 0.00011363900000000218, 0.00011370900000000003, 0.00011447300000000035, 0.0001142360000000002, 0.00011372200000000013, 0.00011408300000000093, 0.00011420800000000106, 0.00011419400000000149, 0.00011361100000000304, 0.00011457000000000134, 0.00011398599999999995, 0.0001138749999999994, 0.00011361099999999957, 0.00011384700000000025, 0.0001138749999999994, 0.00011455499999999882, 0.00011434700000000075, 0.00011380599999999755, 0.00011377799999999841, 0.00011462500000000014, 0.00011393099999999767, 0.0001140559999999978, 0.00011390199999999906, 0.00011448600000000045, 0.00011440299999999903, 0.00011377799999999841, 0.00011369399999999752, 0.00011419500000000096, 0.00011447199999999741, 0.00011415199999999931]</msg>
<status status="PASS" starttime="20201115 23:03:33.778" endtime="20201115 23:03:33.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.773" endtime="20201115 23:03:33.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:03:33.782" endtime="20201115 23:03:33.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.786" endtime="20201115 23:03:33.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.784" endtime="20201115 23:03:33.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.781" endtime="20201115 23:03:33.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.412" endtime="20201115 23:03:33.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.410" endtime="20201115 23:03:33.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.409" endtime="20201115 23:03:33.807"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:54.070" endtime="20201115 23:03:33.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:03:33.812" endtime="20201115 23:03:33.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.810" endtime="20201115 23:03:33.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:03:33.809" endtime="20201115 23:03:33.832"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:02:50.972" endtime="20201115 23:03:33.832" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:02:03.731" endtime="20201115 23:03:33.837"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:52.494" endtime="20201115 23:03:33.849"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_arduino-due</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
