<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201115 23:01:11.834" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:12.427" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:12.435" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:13.599" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:12.425" endtime="20201115 23:01:13.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.602" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:13.600" endtime="20201115 23:01:13.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.424" endtime="20201115 23:01:13.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.605" endtime="20201115 23:01:13.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.604" endtime="20201115 23:01:13.848"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.861" endtime="20201115 23:01:13.873"></status>
</kw>
<msg timestamp="20201115 23:01:13.874" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.859" endtime="20201115 23:01:13.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.876" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.875" endtime="20201115 23:01:13.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.879" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:13.877" endtime="20201115 23:01:13.880"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.856" endtime="20201115 23:01:13.881"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.854" endtime="20201115 23:01:13.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.853" endtime="20201115 23:01:13.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:13.885" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:13.884" endtime="20201115 23:01:13.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.882" endtime="20201115 23:01:13.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.852" endtime="20201115 23:01:13.886"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.851" endtime="20201115 23:01:13.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.887" endtime="20201115 23:01:13.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.850" endtime="20201115 23:01:13.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.890" endtime="20201115 23:01:13.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.848" endtime="20201115 23:01:13.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:12.422" endtime="20201115 23:01:13.892"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:13.899" endtime="20201115 23:01:13.918"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.897" endtime="20201115 23:01:13.919"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.933" endtime="20201115 23:01:13.945"></status>
</kw>
<msg timestamp="20201115 23:01:13.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.932" endtime="20201115 23:01:13.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.947" endtime="20201115 23:01:13.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.951" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:13.950" endtime="20201115 23:01:13.952"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.928" endtime="20201115 23:01:13.952"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:13.925" endtime="20201115 23:01:13.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.924" endtime="20201115 23:01:13.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:13.957" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:13.956" endtime="20201115 23:01:13.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.954" endtime="20201115 23:01:13.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.923" endtime="20201115 23:01:13.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.922" endtime="20201115 23:01:13.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.959" endtime="20201115 23:01:13.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.921" endtime="20201115 23:01:13.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.919" endtime="20201115 23:01:13.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.896" endtime="20201115 23:01:13.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.969" endtime="20201115 23:01:13.977"></status>
</kw>
<msg timestamp="20201115 23:01:13.978" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.967" endtime="20201115 23:01:13.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.980" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:13.979" endtime="20201115 23:01:13.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:13.981" endtime="20201115 23:01:13.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.965" endtime="20201115 23:01:13.983"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.963" endtime="20201115 23:01:13.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.989" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201115 23:01:13.988" endtime="20201115 23:01:13.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:13.991" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201115 23:01:13.990" endtime="20201115 23:01:13.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:13.985" endtime="20201115 23:01:13.992"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:13.892" endtime="20201115 23:01:13.993" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:11.957" endtime="20201115 23:01:13.997"></status>
</suite>
<suite id="s1-s2" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201115 23:01:14.050" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201115 23:01:14.059" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201115 23:01:15.224" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201115 23:01:14.049" endtime="20201115 23:01:15.224"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.227" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201115 23:01:15.225" endtime="20201115 23:01:15.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.048" endtime="20201115 23:01:15.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.230" endtime="20201115 23:01:15.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.228" endtime="20201115 23:01:15.507"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.520" endtime="20201115 23:01:15.532"></status>
</kw>
<msg timestamp="20201115 23:01:15.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.518" endtime="20201115 23:01:15.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.535" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.534" endtime="20201115 23:01:15.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.538" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:15.536" endtime="20201115 23:01:15.539"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:15.516" endtime="20201115 23:01:15.539"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:15.514" endtime="20201115 23:01:15.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.512" endtime="20201115 23:01:15.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:15.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:15.543" endtime="20201115 23:01:15.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.541" endtime="20201115 23:01:15.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.512" endtime="20201115 23:01:15.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.511" endtime="20201115 23:01:15.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.545" endtime="20201115 23:01:15.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.510" endtime="20201115 23:01:15.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.548" endtime="20201115 23:01:15.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.508" endtime="20201115 23:01:15.550"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:14.046" endtime="20201115 23:01:15.551"></status>
</kw>
<test id="s1-s2-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.558" endtime="20201115 23:01:15.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.556" endtime="20201115 23:01:15.578"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.591" endtime="20201115 23:01:15.603"></status>
</kw>
<msg timestamp="20201115 23:01:15.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.589" endtime="20201115 23:01:15.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.605" endtime="20201115 23:01:15.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.610" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:15.608" endtime="20201115 23:01:15.610"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:15.587" endtime="20201115 23:01:15.610"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:15.584" endtime="20201115 23:01:15.611"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.583" endtime="20201115 23:01:15.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:15.615" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:15.614" endtime="20201115 23:01:15.615"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.612" endtime="20201115 23:01:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.582" endtime="20201115 23:01:15.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.582" endtime="20201115 23:01:15.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.617" endtime="20201115 23:01:15.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.581" endtime="20201115 23:01:15.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.579" endtime="20201115 23:01:15.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.554" endtime="20201115 23:01:15.619"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.623" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.633" endtime="20201115 23:01:15.646"></status>
</kw>
<msg timestamp="20201115 23:01:15.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.631" endtime="20201115 23:01:15.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:15.648" endtime="20201115 23:01:15.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.650" endtime="20201115 23:01:15.652"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.628" endtime="20201115 23:01:15.653"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.625" endtime="20201115 23:01:15.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.659" endtime="20201115 23:01:15.948"></status>
</kw>
<msg timestamp="20201115 23:01:15.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066446222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.658" endtime="20201115 23:01:15.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066446222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:15.952" endtime="20201115 23:01:15.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.961" endtime="20201115 23:01:15.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.655" endtime="20201115 23:01:15.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.654" endtime="20201115 23:01:15.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:15.967" level="INFO">${RESULT} = [{'time': 0.066446222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912499999999484e-05, 'source_diff': 1.912499999999484e-05}, {'time': 0.066494333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:15.964" endtime="20201115 23:01:15.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:15.981" level="INFO">${ACCURACY} = {'diff': [1.912499999999484e-05, 1.8457999999998975e-05, 1.8444000000006344e-05, 1.8443999999992466e-05, 1.8443999999992466e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8445000000005818e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:15.969" endtime="20201115 23:01:15.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.986" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:15.985" endtime="20201115 23:01:15.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:15.988" level="INFO">VALUE: [1.912499999999484e-05, 1.8457999999998975e-05, 1.8444000000006344e-05, 1.8443999999992466e-05, 1.8443999999992466e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8445000000005818e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8500000000004624e-05, 1.837500000000103e-05, 1.8429999999999835e-05, 1.8416000000007204e-05, 1.843099999999931e-05, 1.8458000000012853e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8444000000006344e-05, 1.8402000000000696e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8473000000004958e-05, 1.8430000000013713e-05, 1.8457999999998975e-05, 1.8417000000006678e-05, 1.8402000000000696e-05, 1.844499999999194e-05, 1.844499999999194e-05, 1.8457999999998975e-05, 1.8444000000006344e-05, 1.8429999999999835e-05, 1.8444000000006344e-05, 1.843099999999931e-05, 1.8457999999998975e-05, 1.8402000000000696e-05, 1.8458000000012853e-05, 1.8415999999993327e-05, 1.8416000000007204e-05, 1.848699999999759e-05, 1.8473000000004958e-05, 1.8429999999999835e-05, 1.8445000000005818e-05, 1.845899999999845e-05]</msg>
<status status="PASS" starttime="20201115 23:01:15.987" endtime="20201115 23:01:15.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.982" endtime="20201115 23:01:15.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:15.991" endtime="20201115 23:01:15.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:15.995" endtime="20201115 23:01:16.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.993" endtime="20201115 23:01:16.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.990" endtime="20201115 23:01:16.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.624" endtime="20201115 23:01:16.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.622" endtime="20201115 23:01:16.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.621" endtime="20201115 23:01:16.016"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.019" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.028" endtime="20201115 23:01:16.042"></status>
</kw>
<msg timestamp="20201115 23:01:16.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.026" endtime="20201115 23:01:16.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.044" endtime="20201115 23:01:16.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.046" endtime="20201115 23:01:16.048"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.023" endtime="20201115 23:01:16.049"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.021" endtime="20201115 23:01:16.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.055" endtime="20201115 23:01:16.342"></status>
</kw>
<msg timestamp="20201115 23:01:16.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025970194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025989264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.054" endtime="20201115 23:01:16.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025970194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025989264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.346" endtime="20201115 23:01:16.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.355" endtime="20201115 23:01:16.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.051" endtime="20201115 23:01:16.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.050" endtime="20201115 23:01:16.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.361" level="INFO">${RESULT} = [{'time': 0.025989264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9070000000002973e-05, 'source_diff': 1.9070000000002973e-05}, {'time': 0.026036431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:16.358" endtime="20201115 23:01:16.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.375" level="INFO">${ACCURACY} = {'diff': [1.9070000000002973e-05, 1.838899999999713e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.8430000000003305e-05, 1.8430000000003305e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:16.362" endtime="20201115 23:01:16.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.379" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.378" endtime="20201115 23:01:16.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.382" level="INFO">VALUE: [1.9070000000002973e-05, 1.838899999999713e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.8430000000003305e-05, 1.8430000000003305e-05, 1.8443999999999405e-05, 1.8416000000000265e-05, 1.8457999999998975e-05, 1.843100000000278e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.837500000000103e-05, 1.845899999999845e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8471999999998545e-05, 1.8472000000002015e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8500000000001154e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8458000000002445e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8415999999996796e-05, 1.844499999999888e-05, 1.844499999999888e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.8471999999998545e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8472000000002015e-05, 1.8444000000002875e-05, 1.8416000000000265e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.381" endtime="20201115 23:01:16.382"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.376" endtime="20201115 23:01:16.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.385" endtime="20201115 23:01:16.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.388" endtime="20201115 23:01:16.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.387" endtime="20201115 23:01:16.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.383" endtime="20201115 23:01:16.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.019" endtime="20201115 23:01:16.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.017" endtime="20201115 23:01:16.409"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.016" endtime="20201115 23:01:16.410"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.412" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.420" endtime="20201115 23:01:16.434"></status>
</kw>
<msg timestamp="20201115 23:01:16.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.419" endtime="20201115 23:01:16.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.436" endtime="20201115 23:01:16.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.439" endtime="20201115 23:01:16.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.416" endtime="20201115 23:01:16.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.414" endtime="20201115 23:01:16.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.448" endtime="20201115 23:01:16.735"></status>
</kw>
<msg timestamp="20201115 23:01:16.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024229306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024248431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.446" endtime="20201115 23:01:16.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024229306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024248431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:16.740" endtime="20201115 23:01:16.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.748" endtime="20201115 23:01:16.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.443" endtime="20201115 23:01:16.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.442" endtime="20201115 23:01:16.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:16.754" level="INFO">${RESULT} = [{'time': 0.024248431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.024294667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:16.751" endtime="20201115 23:01:16.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:16.769" level="INFO">${ACCURACY} = {'diff': [1.912500000000178e-05, 1.845899999999845e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.845899999999845e-05, 1.83890000000006e-05, 1.8458000000002445e-05, 1.842...</msg>
<status status="PASS" starttime="20201115 23:01:16.755" endtime="20201115 23:01:16.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.773" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:16.772" endtime="20201115 23:01:16.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.776" level="INFO">VALUE: [1.912500000000178e-05, 1.845899999999845e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.845899999999845e-05, 1.83890000000006e-05, 1.8458000000002445e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8500000000001154e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.843100000000278e-05, 1.841700000000321e-05, 1.838899999999713e-05, 1.841699999999974e-05, 1.8402000000000696e-05, 1.843100000000278e-05, 1.845899999999845e-05, 1.8457999999998975e-05, 1.844500000000235e-05, 1.83890000000006e-05, 1.8457999999998975e-05, 1.841699999999974e-05, 1.844500000000235e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.841699999999974e-05, 1.8457999999998975e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8500000000001154e-05, 1.8429999999999835e-05, 1.8362000000000933e-05, 1.8457999999998975e-05, 1.837499999999756e-05, 1.8443999999999405e-05, 1.8457999999998975e-05, 1.8471999999998545e-05]</msg>
<status status="PASS" starttime="20201115 23:01:16.774" endtime="20201115 23:01:16.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.770" endtime="20201115 23:01:16.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.779" endtime="20201115 23:01:16.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:16.782" endtime="20201115 23:01:16.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.781" endtime="20201115 23:01:16.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.777" endtime="20201115 23:01:16.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.413" endtime="20201115 23:01:16.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.411" endtime="20201115 23:01:16.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.410" endtime="20201115 23:01:16.803"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.806" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.814" endtime="20201115 23:01:16.827"></status>
</kw>
<msg timestamp="20201115 23:01:16.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.812" endtime="20201115 23:01:16.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:16.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:16.829" endtime="20201115 23:01:16.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.832" endtime="20201115 23:01:16.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.810" endtime="20201115 23:01:16.834"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.808" endtime="20201115 23:01:16.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:16.841" endtime="20201115 23:01:17.127"></status>
</kw>
<msg timestamp="20201115 23:01:17.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023394111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:16.839" endtime="20201115 23:01:17.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023394111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:17.131" endtime="20201115 23:01:17.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.140" endtime="20201115 23:01:17.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.836" endtime="20201115 23:01:17.142"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.835" endtime="20201115 23:01:17.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.146" level="INFO">${RESULT} = [{'time': 0.023394111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.911099999999874e-05, 'source_diff': 1.911099999999874e-05}, {'time': 0.023436931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.143" endtime="20201115 23:01:17.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.160" level="INFO">${ACCURACY} = {'diff': [1.911099999999874e-05, 1.845900000000192e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.8471999999998545e-05, 1.8485999999998115e-05, 1.8457999999998975e-05, 1.844499999999888e-05, 1....</msg>
<status status="PASS" starttime="20201115 23:01:17.147" endtime="20201115 23:01:17.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.164" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.163" endtime="20201115 23:01:17.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.167" level="INFO">VALUE: [1.911099999999874e-05, 1.845900000000192e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.8471999999998545e-05, 1.8485999999998115e-05, 1.8457999999998975e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.8444000000002875e-05, 1.8443999999999405e-05, 1.845900000000192e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.8429999999999835e-05, 1.851300000000125e-05, 1.844500000000235e-05, 1.843100000000278e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8444000000002875e-05, 1.843100000000278e-05, 1.8429999999999835e-05, 1.8471999999998545e-05, 1.8444000000002875e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8457999999998975e-05, 1.844499999999888e-05, 1.844500000000235e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.8472000000002015e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.844500000000235e-05, 1.843099999999931e-05, 1.8458000000002445e-05, 1.8443999999999405e-05, 1.845900000000192e-05, 1.844499999999888e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.165" endtime="20201115 23:01:17.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.161" endtime="20201115 23:01:17.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.170" endtime="20201115 23:01:17.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.173" endtime="20201115 23:01:17.192"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.172" endtime="20201115 23:01:17.193"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.168" endtime="20201115 23:01:17.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.806" endtime="20201115 23:01:17.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.804" endtime="20201115 23:01:17.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:16.804" endtime="20201115 23:01:17.194"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.197" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.205" endtime="20201115 23:01:17.219"></status>
</kw>
<msg timestamp="20201115 23:01:17.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.204" endtime="20201115 23:01:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.220" endtime="20201115 23:01:17.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.223" endtime="20201115 23:01:17.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.201" endtime="20201115 23:01:17.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.199" endtime="20201115 23:01:17.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.232" endtime="20201115 23:01:17.517"></status>
</kw>
<msg timestamp="20201115 23:01:17.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023961431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.230" endtime="20201115 23:01:17.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023961431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.522" endtime="20201115 23:01:17.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.530" endtime="20201115 23:01:17.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.228" endtime="20201115 23:01:17.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.226" endtime="20201115 23:01:17.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.536" level="INFO">${RESULT} = [{'time': 0.023980556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.024018361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.533" endtime="20201115 23:01:17.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.550" level="INFO">${ACCURACY} = {'diff': [1.912500000000178e-05, 1.840300000000017e-05, 1.8416000000000265e-05, 1.844500000000235e-05, 1.8429999999999835e-05, 1.8500000000001154e-05, 1.844499999999888e-05, 1.840300000000017e-05, 1.8...</msg>
<status status="PASS" starttime="20201115 23:01:17.538" endtime="20201115 23:01:17.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.554" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.553" endtime="20201115 23:01:17.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.557" level="INFO">VALUE: [1.912500000000178e-05, 1.840300000000017e-05, 1.8416000000000265e-05, 1.844500000000235e-05, 1.8429999999999835e-05, 1.8500000000001154e-05, 1.844499999999888e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.845899999999845e-05, 1.8402000000000696e-05, 1.8457999999998975e-05, 1.8443999999999405e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.8500000000001154e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.844500000000235e-05, 1.844499999999888e-05, 1.845899999999845e-05, 1.8486000000001584e-05, 1.8402000000000696e-05, 1.83890000000006e-05, 1.8416000000000265e-05, 1.845899999999845e-05, 1.844500000000235e-05, 1.8514000000000724e-05, 1.8458000000002445e-05, 1.844500000000235e-05, 1.844499999999888e-05, 1.844500000000235e-05, 1.8457999999998975e-05, 1.841699999999974e-05, 1.8472000000002015e-05, 1.8500000000001154e-05, 1.8485999999998115e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.8443999999999405e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.556" endtime="20201115 23:01:17.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.551" endtime="20201115 23:01:17.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.560" endtime="20201115 23:01:17.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.563" endtime="20201115 23:01:17.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.562" endtime="20201115 23:01:17.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.559" endtime="20201115 23:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.197" endtime="20201115 23:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.195" endtime="20201115 23:01:17.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.195" endtime="20201115 23:01:17.585"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.588" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.596" endtime="20201115 23:01:17.610"></status>
</kw>
<msg timestamp="20201115 23:01:17.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.594" endtime="20201115 23:01:17.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.612" endtime="20201115 23:01:17.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.615" endtime="20201115 23:01:17.616"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.592" endtime="20201115 23:01:17.617"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.590" endtime="20201115 23:01:17.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.623" endtime="20201115 23:01:17.908"></status>
</kw>
<msg timestamp="20201115 23:01:17.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024526708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024550819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.622" endtime="20201115 23:01:17.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024526708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024550819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:17.912" endtime="20201115 23:01:17.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.920" endtime="20201115 23:01:17.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.619" endtime="20201115 23:01:17.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.618" endtime="20201115 23:01:17.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:17.927" level="INFO">${RESULT} = [{'time': 0.024550819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.024591125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:17.923" endtime="20201115 23:01:17.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:17.940" level="INFO">${ACCURACY} = {'diff': [2.411100000000027e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.3429999999997897e-05, 2.343100000000084e-05, 2.344500000000041e-05, 2.344...</msg>
<status status="PASS" starttime="20201115 23:01:17.928" endtime="20201115 23:01:17.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.945" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:17.944" endtime="20201115 23:01:17.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.947" level="INFO">VALUE: [2.411100000000027e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.3429999999997897e-05, 2.343100000000084e-05, 2.344500000000041e-05, 2.344500000000041e-05, 2.3429999999997897e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.3430000000001366e-05, 2.3429999999997897e-05, 2.348699999999912e-05, 2.3416000000001796e-05, 2.345899999999998e-05, 2.3443999999997467e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.3444000000000936e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.3429999999997897e-05, 2.3416000000001796e-05, 2.344499999999694e-05, 2.3458000000000506e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.3416000000001796e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.337500000000256e-05, 2.340299999999823e-05, 2.343100000000084e-05, 2.3416000000001796e-05, 2.343099999999737e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.34030000000017e-05, 2.337499999999909e-05, 2.3430000000001366e-05, 2.34030000000017e-05, 2.337499999999909e-05, 2.3430000000001366e-05, 2.34030000000017e-05, 2.344500000000041e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.341700000000127e-05]</msg>
<status status="PASS" starttime="20201115 23:01:17.946" endtime="20201115 23:01:17.948"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.941" endtime="20201115 23:01:17.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.951" endtime="20201115 23:01:17.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:17.954" endtime="20201115 23:01:17.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.953" endtime="20201115 23:01:17.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.949" endtime="20201115 23:01:17.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.588" endtime="20201115 23:01:17.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.586" endtime="20201115 23:01:17.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.586" endtime="20201115 23:01:17.975"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:17.978" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:17.986" endtime="20201115 23:01:18.000"></status>
</kw>
<msg timestamp="20201115 23:01:18.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:17.984" endtime="20201115 23:01:18.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.002" endtime="20201115 23:01:18.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.004" endtime="20201115 23:01:18.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.982" endtime="20201115 23:01:18.007"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.980" endtime="20201115 23:01:18.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.013" endtime="20201115 23:01:18.298"></status>
</kw>
<msg timestamp="20201115 23:01:18.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024308611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024332722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.012" endtime="20201115 23:01:18.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024308611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024332722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.303" endtime="20201115 23:01:18.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.311" endtime="20201115 23:01:18.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.009" endtime="20201115 23:01:18.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.008" endtime="20201115 23:01:18.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.318" level="INFO">${RESULT} = [{'time': 0.024332722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.024390167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.314" endtime="20201115 23:01:18.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.332" level="INFO">${ACCURACY} = {'diff': [2.411100000000027e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.34169999999978e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.34030000000017e-05, 2.338899999999866e-05, 2.34310...</msg>
<status status="PASS" starttime="20201115 23:01:18.319" endtime="20201115 23:01:18.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.337" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.336" endtime="20201115 23:01:18.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.340" level="INFO">VALUE: [2.411100000000027e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.34169999999978e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.34030000000017e-05, 2.338899999999866e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.340299999999823e-05, 2.3429999999997897e-05, 2.3443999999997467e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.336099999999952e-05, 2.3429999999997897e-05, 2.343100000000084e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.341700000000127e-05, 2.3429999999997897e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.3429999999997897e-05, 2.340299999999823e-05, 2.3458000000000506e-05, 2.3430000000001366e-05, 2.34169999999978e-05, 2.338900000000213e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.3429999999997897e-05, 2.3429999999997897e-05, 2.343100000000084e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.344499999999694e-05, 2.3415999999998327e-05, 2.3430000000001366e-05, 2.3402000000002227e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.3472000000000076e-05, 2.3429999999997897e-05, 2.3416000000001796e-05, 2.34030000000017e-05, 2.3429999999997897e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.338" endtime="20201115 23:01:18.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.333" endtime="20201115 23:01:18.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.343" endtime="20201115 23:01:18.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.346" endtime="20201115 23:01:18.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.345" endtime="20201115 23:01:18.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.341" endtime="20201115 23:01:18.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.978" endtime="20201115 23:01:18.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.976" endtime="20201115 23:01:18.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:17.976" endtime="20201115 23:01:18.367"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.370" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.378" endtime="20201115 23:01:18.392"></status>
</kw>
<msg timestamp="20201115 23:01:18.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.376" endtime="20201115 23:01:18.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.394" endtime="20201115 23:01:18.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.396" endtime="20201115 23:01:18.398"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.374" endtime="20201115 23:01:18.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.372" endtime="20201115 23:01:18.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.405" endtime="20201115 23:01:18.691"></status>
</kw>
<msg timestamp="20201115 23:01:18.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024277292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024301403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.404" endtime="20201115 23:01:18.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024277292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024301403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.695" endtime="20201115 23:01:18.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.703" endtime="20201115 23:01:18.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.401" endtime="20201115 23:01:18.705"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.400" endtime="20201115 23:01:18.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:18.710" level="INFO">${RESULT} = [{'time': 0.024301403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.024346694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:18.706" endtime="20201115 23:01:18.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:18.723" level="INFO">${ACCURACY} = {'diff': [2.411100000000027e-05, 2.3429999999997897e-05, 2.3430000000001366e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.343...</msg>
<status status="PASS" starttime="20201115 23:01:18.711" endtime="20201115 23:01:18.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.728" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:18.727" endtime="20201115 23:01:18.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.730" level="INFO">VALUE: [2.411100000000027e-05, 2.3429999999997897e-05, 2.3430000000001366e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.3444000000000936e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.3416000000001796e-05, 2.3444000000000936e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.338899999999866e-05, 2.337500000000256e-05, 2.3429999999997897e-05, 2.3443999999997467e-05, 2.337499999999909e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.3444000000000936e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.3458000000000506e-05, 2.340299999999823e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.341700000000127e-05, 2.337499999999909e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.3430000000001366e-05, 2.334699999999995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:18.729" endtime="20201115 23:01:18.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.724" endtime="20201115 23:01:18.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.733" endtime="20201115 23:01:18.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:18.737" endtime="20201115 23:01:18.756"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.735" endtime="20201115 23:01:18.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.732" endtime="20201115 23:01:18.757"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.370" endtime="20201115 23:01:18.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.368" endtime="20201115 23:01:18.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.368" endtime="20201115 23:01:18.758"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.760" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.768" endtime="20201115 23:01:18.782"></status>
</kw>
<msg timestamp="20201115 23:01:18.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.767" endtime="20201115 23:01:18.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:18.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:18.784" endtime="20201115 23:01:18.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.786" endtime="20201115 23:01:18.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.764" endtime="20201115 23:01:18.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.762" endtime="20201115 23:01:18.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:18.795" endtime="20201115 23:01:19.080"></status>
</kw>
<msg timestamp="20201115 23:01:19.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:18.794" endtime="20201115 23:01:19.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.085" endtime="20201115 23:01:19.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.093" endtime="20201115 23:01:19.095"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.791" endtime="20201115 23:01:19.096"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.789" endtime="20201115 23:01:19.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.100" level="INFO">${RESULT} = [{'time': 0.023526139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.023563861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.097" endtime="20201115 23:01:19.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.114" level="INFO">${ACCURACY} = {'diff': [2.408300000000113e-05, 2.34169999999978e-05, 2.343099999999737e-05, 2.3415999999998327e-05, 2.3429999999997897e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.3430...</msg>
<status status="PASS" starttime="20201115 23:01:19.101" endtime="20201115 23:01:19.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.118" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.117" endtime="20201115 23:01:19.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.121" level="INFO">VALUE: [2.408300000000113e-05, 2.34169999999978e-05, 2.343099999999737e-05, 2.3415999999998327e-05, 2.3429999999997897e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.3430000000001366e-05, 2.341700000000127e-05, 2.3430000000001366e-05, 2.343099999999737e-05, 2.341700000000127e-05, 2.3401999999998757e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.3485999999999646e-05, 2.337499999999909e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.337499999999909e-05, 2.3430000000001366e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.336100000000299e-05, 2.344500000000041e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.3499999999999216e-05, 2.34030000000017e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.3444000000000936e-05, 2.34169999999978e-05, 2.3429999999997897e-05, 2.3444000000000936e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.3429999999997897e-05, 2.3401999999998757e-05, 2.344499999999694e-05, 2.3347999999999425e-05, 2.338899999999866e-05, 2.3430000000001366e-05, 2.343100000000084e-05, 2.343100000000084e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.119" endtime="20201115 23:01:19.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.114" endtime="20201115 23:01:19.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.124" endtime="20201115 23:01:19.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.127" endtime="20201115 23:01:19.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.126" endtime="20201115 23:01:19.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.122" endtime="20201115 23:01:19.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.761" endtime="20201115 23:01:19.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.759" endtime="20201115 23:01:19.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:18.758" endtime="20201115 23:01:19.148"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.151" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.159" endtime="20201115 23:01:19.173"></status>
</kw>
<msg timestamp="20201115 23:01:19.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.157" endtime="20201115 23:01:19.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.174" endtime="20201115 23:01:19.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.177" endtime="20201115 23:01:19.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.155" endtime="20201115 23:01:19.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.153" endtime="20201115 23:01:19.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.186" endtime="20201115 23:01:19.470"></status>
</kw>
<msg timestamp="20201115 23:01:19.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023627667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.184" endtime="20201115 23:01:19.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023627667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.475" endtime="20201115 23:01:19.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.483" endtime="20201115 23:01:19.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.182" endtime="20201115 23:01:19.485"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.180" endtime="20201115 23:01:19.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.490" level="INFO">${RESULT} = [{'time': 0.023651806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.413899999999941e-05, 'source_diff': 2.413899999999941e-05}, {'time': 0.023692375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:19.486" endtime="20201115 23:01:19.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.504" level="INFO">${ACCURACY} = {'diff': [2.413899999999941e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.3444000000000936e-05, 2.3430000000001366e-05, 2.3415999999998327e-05, 2.343100000000084e-05, 2.3...</msg>
<status status="PASS" starttime="20201115 23:01:19.491" endtime="20201115 23:01:19.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.508" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.507" endtime="20201115 23:01:19.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.511" level="INFO">VALUE: [2.413899999999941e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.3444000000000936e-05, 2.3430000000001366e-05, 2.3415999999998327e-05, 2.343100000000084e-05, 2.340299999999823e-05, 2.3416000000001796e-05, 2.343100000000084e-05, 2.3430000000001366e-05, 2.3416000000001796e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.347300000000302e-05, 2.344500000000041e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.3444000000000936e-05, 2.343099999999737e-05, 2.336100000000299e-05, 2.3416000000001796e-05, 2.3415999999998327e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.3444000000000936e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.344500000000041e-05, 2.3401999999998757e-05, 2.3415999999998327e-05, 2.34030000000017e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.3416000000001796e-05, 2.344500000000041e-05, 2.336099999999952e-05, 2.3444000000000936e-05, 2.34030000000017e-05, 2.340299999999823e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.509" endtime="20201115 23:01:19.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.505" endtime="20201115 23:01:19.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.514" endtime="20201115 23:01:19.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.517" endtime="20201115 23:01:19.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.515" endtime="20201115 23:01:19.537"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.512" endtime="20201115 23:01:19.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.151" endtime="20201115 23:01:19.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.150" endtime="20201115 23:01:19.538"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.149" endtime="20201115 23:01:19.538"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.541" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.549" endtime="20201115 23:01:19.564"></status>
</kw>
<msg timestamp="20201115 23:01:19.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.547" endtime="20201115 23:01:19.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.565" endtime="20201115 23:01:19.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.568" endtime="20201115 23:01:19.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.545" endtime="20201115 23:01:19.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.543" endtime="20201115 23:01:19.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.577" endtime="20201115 23:01:19.863"></status>
</kw>
<msg timestamp="20201115 23:01:19.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024564514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024588611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.576" endtime="20201115 23:01:19.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024564514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024588611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.867" endtime="20201115 23:01:19.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.875" endtime="20201115 23:01:19.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.573" endtime="20201115 23:01:19.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.572" endtime="20201115 23:01:19.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:19.882" level="INFO">${RESULT} = [{'time': 0.024588611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.02464325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:19.879" endtime="20201115 23:01:19.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:19.897" level="INFO">${ACCURACY} = {'diff': [2.40970000000007e-05, 2.343099999999737e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.84...</msg>
<status status="PASS" starttime="20201115 23:01:19.883" endtime="20201115 23:01:19.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.901" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:19.900" endtime="20201115 23:01:19.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.904" level="INFO">VALUE: [2.40970000000007e-05, 2.343099999999737e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8429999999999428e-05, 2.3444000000000936e-05, 2.84170000000028e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8347000000001482e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.3444000000000936e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.3500000000002685e-05, 2.8402999999999762e-05, 2.84309999999989e-05, 2.8415999999999858e-05, 2.344500000000041e-05, 2.8388000000000718e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.841699999999933e-05, 2.8402000000000288e-05, 2.3429999999997897e-05, 2.8415999999999858e-05, 2.8402000000000288e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.84170000000028e-05, 2.3429999999997897e-05, 2.841699999999933e-05, 2.845900000000151e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.34030000000017e-05, 2.3361999999998995e-05]</msg>
<status status="PASS" starttime="20201115 23:01:19.902" endtime="20201115 23:01:19.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.898" endtime="20201115 23:01:19.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.907" endtime="20201115 23:01:19.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:19.910" endtime="20201115 23:01:19.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.909" endtime="20201115 23:01:19.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.905" endtime="20201115 23:01:19.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.541" endtime="20201115 23:01:19.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.539" endtime="20201115 23:01:19.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.539" endtime="20201115 23:01:19.931"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.942" endtime="20201115 23:01:19.957"></status>
</kw>
<msg timestamp="20201115 23:01:19.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.941" endtime="20201115 23:01:19.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:19.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:19.958" endtime="20201115 23:01:19.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.961" endtime="20201115 23:01:19.962"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.938" endtime="20201115 23:01:19.963"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.936" endtime="20201115 23:01:19.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:19.970" endtime="20201115 23:01:20.255"></status>
</kw>
<msg timestamp="20201115 23:01:20.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024148153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:19.968" endtime="20201115 23:01:20.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024148153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024177292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.259" endtime="20201115 23:01:20.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.267" endtime="20201115 23:01:20.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.966" endtime="20201115 23:01:20.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.964" endtime="20201115 23:01:20.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.274" level="INFO">${RESULT} = [{'time': 0.024177292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9139000000000942e-05, 'source_diff': 2.9139000000000942e-05}, {'time': 0.024233097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.271" endtime="20201115 23:01:20.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.288" level="INFO">${ACCURACY} = {'diff': [2.9139000000000942e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8443999999998998e-05, 2.8402999999999762e-05, 2.8375000000000622e-05, 2.84170000000028e-05, 2.84309999999989e-05, 2.8...</msg>
<status status="PASS" starttime="20201115 23:01:20.275" endtime="20201115 23:01:20.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.292" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.291" endtime="20201115 23:01:20.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.295" level="INFO">VALUE: [2.9139000000000942e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8443999999998998e-05, 2.8402999999999762e-05, 2.8375000000000622e-05, 2.84170000000028e-05, 2.84309999999989e-05, 2.8457999999998568e-05, 2.8402999999999762e-05, 2.8333000000001912e-05, 2.8375000000000622e-05, 2.843100000000237e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.8388999999996722e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8415999999999858e-05, 2.8347000000001482e-05, 2.8402999999999762e-05, 2.838799999999725e-05, 2.8402999999999762e-05, 2.844499999999847e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8402000000000288e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.8334000000001386e-05, 2.8458000000002037e-05, 2.8389000000000192e-05, 2.841699999999933e-05, 2.8402000000000288e-05, 2.8347999999997486e-05, 2.848699999999718e-05, 2.8389000000000192e-05, 2.841699999999933e-05, 2.8415999999999858e-05, 2.8415999999999858e-05, 2.8402000000000288e-05, 2.8458000000002037e-05, 2.841699999999933e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.8402000000000288e-05, 2.8389000000000192e-05, 2.84170000000028e-05, 2.8389000000000192e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.293" endtime="20201115 23:01:20.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.288" endtime="20201115 23:01:20.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.298" endtime="20201115 23:01:20.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.301" endtime="20201115 23:01:20.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.300" endtime="20201115 23:01:20.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.296" endtime="20201115 23:01:20.322"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.934" endtime="20201115 23:01:20.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.932" endtime="20201115 23:01:20.323"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:19.932" endtime="20201115 23:01:20.323"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.325" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.333" endtime="20201115 23:01:20.348"></status>
</kw>
<msg timestamp="20201115 23:01:20.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.332" endtime="20201115 23:01:20.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.349" endtime="20201115 23:01:20.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.352" endtime="20201115 23:01:20.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.329" endtime="20201115 23:01:20.354"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.327" endtime="20201115 23:01:20.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.361" endtime="20201115 23:01:20.647"></status>
</kw>
<msg timestamp="20201115 23:01:20.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024030528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024059625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.359" endtime="20201115 23:01:20.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024030528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024059625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.652" endtime="20201115 23:01:20.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.660" endtime="20201115 23:01:20.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.357" endtime="20201115 23:01:20.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.355" endtime="20201115 23:01:20.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:20.667" level="INFO">${RESULT} = [{'time': 0.024059625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9097000000002232e-05, 'source_diff': 2.9097000000002232e-05}, {'time': 0.024104611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:20.663" endtime="20201115 23:01:20.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:20.680" level="INFO">${ACCURACY} = {'diff': [2.9097000000002232e-05, 2.8389000000000192e-05, 2.841699999999933e-05, 2.8389000000000192e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8471999999998138e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:20.668" endtime="20201115 23:01:20.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.685" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201115 23:01:20.684" endtime="20201115 23:01:20.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.687" level="INFO">VALUE: [2.9097000000002232e-05, 2.8389000000000192e-05, 2.841699999999933e-05, 2.8389000000000192e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8471999999998138e-05, 2.844500000000194e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8389000000000192e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.845899999999804e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8346999999998013e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.840300000000323e-05, 2.8361000000001052e-05, 2.8402999999999762e-05, 2.8443999999998998e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8375000000000622e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8444000000002467e-05, 2.8389000000000192e-05, 2.8415999999999858e-05, 2.841699999999933e-05, 2.8402000000000288e-05, 2.841699999999933e-05, 2.8429999999999428e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8457999999998568e-05, 2.8402999999999762e-05, 2.8389000000000192e-05]</msg>
<status status="PASS" starttime="20201115 23:01:20.686" endtime="20201115 23:01:20.688"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.681" endtime="20201115 23:01:20.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.691" endtime="20201115 23:01:20.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:20.694" endtime="20201115 23:01:20.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.693" endtime="20201115 23:01:20.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.689" endtime="20201115 23:01:20.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.326" endtime="20201115 23:01:20.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.324" endtime="20201115 23:01:20.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.323" endtime="20201115 23:01:20.715"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.718" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.726" endtime="20201115 23:01:20.740"></status>
</kw>
<msg timestamp="20201115 23:01:20.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.724" endtime="20201115 23:01:20.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:20.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:20.742" endtime="20201115 23:01:20.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.744" endtime="20201115 23:01:20.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.722" endtime="20201115 23:01:20.746"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.720" endtime="20201115 23:01:20.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:20.753" endtime="20201115 23:01:21.038"></status>
</kw>
<msg timestamp="20201115 23:01:21.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:20.752" endtime="20201115 23:01:21.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.042" endtime="20201115 23:01:21.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.051" endtime="20201115 23:01:21.052"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.749" endtime="20201115 23:01:21.053"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.747" endtime="20201115 23:01:21.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.058" level="INFO">${RESULT} = [{'time': 0.023612542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9098000000001706e-05, 'source_diff': 2.9098000000001706e-05}, {'time': 0.023670278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.054" endtime="20201115 23:01:21.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.071" level="INFO">${ACCURACY} = {'diff': [2.9098000000001706e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.841699999999933e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.84309999999989e-05, 2....</msg>
<status status="PASS" starttime="20201115 23:01:21.059" endtime="20201115 23:01:21.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.076" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.075" endtime="20201115 23:01:21.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.078" level="INFO">VALUE: [2.9098000000001706e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.841699999999933e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.84309999999989e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8361000000001052e-05, 2.8402000000000288e-05, 2.841699999999933e-05, 2.841699999999933e-05, 2.844499999999847e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8375000000000622e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.84309999999989e-05, 2.8415999999999858e-05, 2.8346999999998013e-05, 2.8402000000000288e-05, 2.8444000000002467e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8472000000001607e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.8415999999999858e-05, 2.8415999999999858e-05, 2.84309999999989e-05, 2.84170000000028e-05, 2.841699999999933e-05, 2.8346999999998013e-05, 2.84170000000028e-05, 2.841699999999933e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8429999999999428e-05, 2.8415999999999858e-05, 2.8389000000000192e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8389000000000192e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.077" endtime="20201115 23:01:21.079"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.072" endtime="20201115 23:01:21.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.082" endtime="20201115 23:01:21.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.085" endtime="20201115 23:01:21.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.083" endtime="20201115 23:01:21.105"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.080" endtime="20201115 23:01:21.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.718" endtime="20201115 23:01:21.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.716" endtime="20201115 23:01:21.106"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:20.716" endtime="20201115 23:01:21.106"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.109" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.117" endtime="20201115 23:01:21.133"></status>
</kw>
<msg timestamp="20201115 23:01:21.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.116" endtime="20201115 23:01:21.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.134" endtime="20201115 23:01:21.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.137" endtime="20201115 23:01:21.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.113" endtime="20201115 23:01:21.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.111" endtime="20201115 23:01:21.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.146" endtime="20201115 23:01:21.431"></status>
</kw>
<msg timestamp="20201115 23:01:21.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025421319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025450389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.144" endtime="20201115 23:01:21.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025421319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025450389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.435" endtime="20201115 23:01:21.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.444" endtime="20201115 23:01:21.445"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.142" endtime="20201115 23:01:21.446"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.140" endtime="20201115 23:01:21.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.451" level="INFO">${RESULT} = [{'time': 0.025450389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9069999999999097e-05, 'source_diff': 2.9069999999999097e-05}, {'time': 0.025498431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.447" endtime="20201115 23:01:21.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.466" level="INFO">${ACCURACY} = {'diff': [2.9069999999999097e-05, 2.8402999999999762e-05, 2.84309999999989e-05, 2.8429999999999428e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:21.452" endtime="20201115 23:01:21.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.470" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.469" endtime="20201115 23:01:21.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.473" level="INFO">VALUE: [2.9069999999999097e-05, 2.8402999999999762e-05, 2.84309999999989e-05, 2.8429999999999428e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.844499999999847e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8402000000000288e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.843100000000237e-05, 2.8402999999999762e-05, 2.843100000000237e-05, 2.8415999999999858e-05, 2.841699999999933e-05, 2.84309999999989e-05, 2.8389000000000192e-05, 2.8389000000000192e-05, 2.8457999999998568e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.845900000000151e-05, 2.8415999999999858e-05, 2.8402999999999762e-05, 2.84170000000028e-05, 2.84309999999989e-05, 2.84170000000028e-05, 2.8402999999999762e-05, 2.8486000000001177e-05, 2.8389000000000192e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.8471999999998138e-05, 2.84170000000028e-05, 2.8389000000000192e-05, 2.8429999999999428e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8472000000001607e-05, 2.8429999999999428e-05, 2.8429999999999428e-05, 2.8415999999999858e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.471" endtime="20201115 23:01:21.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.466" endtime="20201115 23:01:21.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.476" endtime="20201115 23:01:21.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.479" endtime="20201115 23:01:21.498"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.477" endtime="20201115 23:01:21.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.474" endtime="20201115 23:01:21.499"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.110" endtime="20201115 23:01:21.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.108" endtime="20201115 23:01:21.500"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.107" endtime="20201115 23:01:21.500"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.503" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.511" endtime="20201115 23:01:21.525"></status>
</kw>
<msg timestamp="20201115 23:01:21.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.509" endtime="20201115 23:01:21.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.527" endtime="20201115 23:01:21.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.529" endtime="20201115 23:01:21.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.506" endtime="20201115 23:01:21.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.504" endtime="20201115 23:01:21.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.538" endtime="20201115 23:01:21.823"></status>
</kw>
<msg timestamp="20201115 23:01:21.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023683778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023717833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.537" endtime="20201115 23:01:21.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023683778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023717833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.827" endtime="20201115 23:01:21.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.835" endtime="20201115 23:01:21.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.534" endtime="20201115 23:01:21.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.532" endtime="20201115 23:01:21.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:21.842" level="INFO">${RESULT} = [{'time': 0.023717833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4055000000001584e-05, 'source_diff': 3.4055000000001584e-05}, {'time': 0.023766875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:21.839" endtime="20201115 23:01:21.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:21.856" level="INFO">${ACCURACY} = {'diff': [3.4055000000001584e-05, 3.340300000000129e-05, 3.347199999999967e-05, 3.3388999999998253e-05, 3.338799999999878e-05, 3.340300000000129e-05, 3.340299999999782e-05, 2.8388000000000718e-05, 3.3...</msg>
<status status="PASS" starttime="20201115 23:01:21.843" endtime="20201115 23:01:21.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.860" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201115 23:01:21.859" endtime="20201115 23:01:21.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.863" level="INFO">VALUE: [3.4055000000001584e-05, 3.340300000000129e-05, 3.347199999999967e-05, 3.3388999999998253e-05, 3.338799999999878e-05, 3.340300000000129e-05, 3.340299999999782e-05, 2.8388000000000718e-05, 3.338900000000172e-05, 3.3374999999998683e-05, 3.3374999999998683e-05, 3.3388999999998253e-05, 3.3374999999998683e-05, 2.8374999999997152e-05, 3.338799999999878e-05, 3.340299999999782e-05, 3.341700000000086e-05, 3.3374999999998683e-05, 3.340299999999782e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.340299999999782e-05, 3.336100000000258e-05, 3.340300000000129e-05, 3.3346999999999544e-05, 3.340300000000129e-05, 3.341699999999739e-05, 3.341700000000086e-05, 3.340300000000129e-05, 3.3388999999998253e-05, 3.340300000000129e-05, 3.340299999999782e-05, 3.338799999999878e-05, 3.340300000000129e-05, 3.3374999999998683e-05, 3.341700000000086e-05, 3.3360999999999114e-05, 3.338900000000172e-05, 3.340300000000129e-05, 3.347199999999967e-05, 3.338900000000172e-05, 3.3388999999998253e-05, 3.3360999999999114e-05, 3.341700000000086e-05, 3.340300000000129e-05, 3.3374999999998683e-05, 3.341599999999792e-05, 3.334799999999902e-05, 3.338900000000172e-05, 3.338900000000172e-05]</msg>
<status status="PASS" starttime="20201115 23:01:21.861" endtime="20201115 23:01:21.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.857" endtime="20201115 23:01:21.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.866" endtime="20201115 23:01:21.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:21.869" endtime="20201115 23:01:21.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.868" endtime="20201115 23:01:21.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.864" endtime="20201115 23:01:21.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.503" endtime="20201115 23:01:21.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.501" endtime="20201115 23:01:21.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.501" endtime="20201115 23:01:21.890"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.893" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.901" endtime="20201115 23:01:21.915"></status>
</kw>
<msg timestamp="20201115 23:01:21.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.899" endtime="20201115 23:01:21.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:21.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:21.917" endtime="20201115 23:01:21.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.919" endtime="20201115 23:01:21.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.897" endtime="20201115 23:01:21.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.895" endtime="20201115 23:01:21.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:21.929" endtime="20201115 23:01:22.215"></status>
</kw>
<msg timestamp="20201115 23:01:22.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023671875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:21.927" endtime="20201115 23:01:22.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023637792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023671875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.219" endtime="20201115 23:01:22.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.227" endtime="20201115 23:01:22.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.924" endtime="20201115 23:01:22.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.923" endtime="20201115 23:01:22.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.234" level="INFO">${RESULT} = [{'time': 0.023671875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4082999999997254e-05, 'source_diff': 3.4082999999997254e-05}, {'time': 0.023728389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.231" endtime="20201115 23:01:22.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.247" level="INFO">${ACCURACY} = {'diff': [3.4082999999997254e-05, 3.340299999999782e-05, 3.3388999999998253e-05, 3.3388999999998253e-05, 3.3388999999998253e-05, 3.3374999999998683e-05, 3.343100000000043e-05, 3.338900000000172e-05, 3...</msg>
<status status="PASS" starttime="20201115 23:01:22.235" endtime="20201115 23:01:22.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.252" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.251" endtime="20201115 23:01:22.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.254" level="INFO">VALUE: [3.4082999999997254e-05, 3.340299999999782e-05, 3.3388999999998253e-05, 3.3388999999998253e-05, 3.3388999999998253e-05, 3.3374999999998683e-05, 3.343100000000043e-05, 3.338900000000172e-05, 3.3388999999998253e-05, 3.341599999999792e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.341700000000086e-05, 3.3388999999998253e-05, 3.341600000000139e-05, 3.3319000000000404e-05, 3.338900000000172e-05, 3.3388999999998253e-05, 3.338900000000172e-05, 3.340299999999782e-05, 3.338800000000225e-05, 3.3332999999999974e-05, 3.3388999999998253e-05, 3.340299999999782e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.338900000000172e-05, 3.3374999999998683e-05, 3.34580000000001e-05, 3.338800000000225e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.3388999999998253e-05, 3.345900000000304e-05, 3.341700000000086e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.340199999999835e-05, 3.340299999999782e-05, 3.340300000000129e-05, 3.3374999999998683e-05, 3.337500000000215e-05, 3.333400000000292e-05, 3.340299999999782e-05, 3.341699999999739e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.3388999999998253e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.253" endtime="20201115 23:01:22.255"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.248" endtime="20201115 23:01:22.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.257" endtime="20201115 23:01:22.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.261" endtime="20201115 23:01:22.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.259" endtime="20201115 23:01:22.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.256" endtime="20201115 23:01:22.281"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.893" endtime="20201115 23:01:22.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.891" endtime="20201115 23:01:22.282"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:21.891" endtime="20201115 23:01:22.282"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.284" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.293" endtime="20201115 23:01:22.307"></status>
</kw>
<msg timestamp="20201115 23:01:22.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.291" endtime="20201115 23:01:22.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.309" endtime="20201115 23:01:22.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.312" endtime="20201115 23:01:22.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.288" endtime="20201115 23:01:22.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.286" endtime="20201115 23:01:22.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.321" endtime="20201115 23:01:22.606"></status>
</kw>
<msg timestamp="20201115 23:01:22.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0238595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:22.319" endtime="20201115 23:01:22.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0238595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:22.610" endtime="20201115 23:01:22.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.618" endtime="20201115 23:01:22.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.317" endtime="20201115 23:01:22.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.315" endtime="20201115 23:01:22.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:22.625" level="INFO">${RESULT} = [{'time': 0.023893569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4069000000001154e-05, 'source_diff': 3.4069000000001154e-05}, {'time': 0.023948514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:22.621" endtime="20201115 23:01:22.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:22.638" level="INFO">${ACCURACY} = {'diff': [3.4069000000001154e-05, 3.340300000000129e-05, 3.338900000000172e-05, 3.343000000000096e-05, 3.340300000000129e-05, 3.3374999999998683e-05, 3.338799999999878e-05, 3.340199999999835e-05, 3.34...</msg>
<status status="PASS" starttime="20201115 23:01:22.626" endtime="20201115 23:01:22.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.643" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201115 23:01:22.642" endtime="20201115 23:01:22.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.645" level="INFO">VALUE: [3.4069000000001154e-05, 3.340300000000129e-05, 3.338900000000172e-05, 3.343000000000096e-05, 3.340300000000129e-05, 3.3374999999998683e-05, 3.338799999999878e-05, 3.340199999999835e-05, 3.340299999999782e-05, 3.341700000000086e-05, 3.338900000000172e-05, 3.336100000000258e-05, 3.338799999999878e-05, 3.3388999999998253e-05, 3.337500000000215e-05, 3.3374999999998683e-05, 3.340299999999782e-05, 3.338900000000172e-05, 3.3346999999999544e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.337500000000215e-05, 3.338900000000172e-05, 3.3374999999998683e-05, 3.3374999999998683e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.340199999999835e-05, 3.3388999999998253e-05, 3.341599999999792e-05, 3.3388999999998253e-05, 3.3374999999998683e-05, 3.3388999999998253e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.338900000000172e-05, 3.343100000000043e-05, 3.3388999999998253e-05, 3.333399999999945e-05, 3.3374999999998683e-05, 3.338900000000172e-05, 3.336100000000258e-05, 3.334700000000301e-05, 3.3332999999999974e-05, 3.338800000000225e-05, 3.3388999999998253e-05, 3.3388999999998253e-05, 3.347299999999914e-05, 3.341600000000139e-05, 3.340300000000129e-05]</msg>
<status status="PASS" starttime="20201115 23:01:22.644" endtime="20201115 23:01:22.645"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.639" endtime="20201115 23:01:22.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.648" endtime="20201115 23:01:22.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:22.652" endtime="20201115 23:01:22.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.650" endtime="20201115 23:01:22.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.647" endtime="20201115 23:01:22.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.285" endtime="20201115 23:01:22.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.283" endtime="20201115 23:01:22.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.282" endtime="20201115 23:01:22.673"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.675" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.688" endtime="20201115 23:01:22.703"></status>
</kw>
<msg timestamp="20201115 23:01:22.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.686" endtime="20201115 23:01:22.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:22.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:22.704" endtime="20201115 23:01:22.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.707" endtime="20201115 23:01:22.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.679" endtime="20201115 23:01:22.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.677" endtime="20201115 23:01:22.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:22.716" endtime="20201115 23:01:23.001"></status>
</kw>
<msg timestamp="20201115 23:01:23.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028692875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028726931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:22.714" endtime="20201115 23:01:23.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028692875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028726931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.006" endtime="20201115 23:01:23.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.014" endtime="20201115 23:01:23.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.712" endtime="20201115 23:01:23.016"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.710" endtime="20201115 23:01:23.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.021" level="INFO">${RESULT} = [{'time': 0.028726931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.405600000000106e-05, 'source_diff': 3.405600000000106e-05}, {'time': 0.028793708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:23.017" endtime="20201115 23:01:23.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.035" level="INFO">${ACCURACY} = {'diff': [3.405600000000106e-05, 3.338900000000172e-05, 3.343100000000043e-05, 3.3346999999999544e-05, 3.338900000000172e-05, 3.3319000000000404e-05, 3.337500000000215e-05, 3.343000000000096e-05, 3.33...</msg>
<status status="PASS" starttime="20201115 23:01:23.021" endtime="20201115 23:01:23.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.040" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.039" endtime="20201115 23:01:23.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.042" level="INFO">VALUE: [3.405600000000106e-05, 3.338900000000172e-05, 3.343100000000043e-05, 3.3346999999999544e-05, 3.338900000000172e-05, 3.3319000000000404e-05, 3.337500000000215e-05, 3.343000000000096e-05, 3.3374999999998683e-05, 3.340299999999782e-05, 3.340300000000129e-05, 3.340299999999782e-05, 3.3346999999999544e-05, 3.340300000000129e-05, 3.340299999999782e-05, 3.340299999999782e-05, 3.334799999999902e-05, 3.340300000000129e-05, 3.341700000000086e-05, 3.340199999999835e-05, 3.3388999999998253e-05, 3.340300000000129e-05, 3.3360999999999114e-05, 3.341600000000139e-05, 3.3374999999998683e-05, 3.338900000000172e-05, 3.337500000000215e-05, 3.338800000000225e-05, 3.333399999999945e-05, 3.337500000000215e-05, 3.3360999999999114e-05, 3.3346999999999544e-05, 3.340300000000129e-05, 3.341599999999792e-05, 3.340300000000129e-05, 3.341700000000086e-05, 3.343100000000043e-05, 3.3374999999998683e-05, 3.3374999999998683e-05, 3.338900000000172e-05, 3.3388999999998253e-05, 3.3374999999998683e-05, 3.340299999999782e-05, 3.3388999999998253e-05, 3.337500000000215e-05, 3.337500000000215e-05, 3.3388999999994784e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.343100000000043e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.041" endtime="20201115 23:01:23.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.036" endtime="20201115 23:01:23.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.045" endtime="20201115 23:01:23.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.048" endtime="20201115 23:01:23.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.047" endtime="20201115 23:01:23.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.043" endtime="20201115 23:01:23.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.676" endtime="20201115 23:01:23.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.674" endtime="20201115 23:01:23.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:22.673" endtime="20201115 23:01:23.070"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.080" endtime="20201115 23:01:23.095"></status>
</kw>
<msg timestamp="20201115 23:01:23.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.079" endtime="20201115 23:01:23.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.096" endtime="20201115 23:01:23.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.099" endtime="20201115 23:01:23.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.076" endtime="20201115 23:01:23.101"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.074" endtime="20201115 23:01:23.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.108" endtime="20201115 23:01:23.394"></status>
</kw>
<msg timestamp="20201115 23:01:23.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023965875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.106" endtime="20201115 23:01:23.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023931792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023965875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.398" endtime="20201115 23:01:23.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.406" endtime="20201115 23:01:23.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.104" endtime="20201115 23:01:23.408"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.102" endtime="20201115 23:01:23.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.413" level="INFO">${RESULT} = [{'time': 0.023965875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4083000000000724e-05, 'source_diff': 3.4083000000000724e-05}, {'time': 0.024026139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:23.410" endtime="20201115 23:01:23.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.426" level="INFO">${ACCURACY} = {'diff': [3.4083000000000724e-05, 3.341699999999739e-05, 3.345899999999957e-05, 3.340300000000129e-05, 3.337500000000215e-05, 3.343000000000096e-05, 3.340200000000182e-05, 3.3374999999998683e-05, 3.34...</msg>
<status status="PASS" starttime="20201115 23:01:23.414" endtime="20201115 23:01:23.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.431" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.430" endtime="20201115 23:01:23.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.433" level="INFO">VALUE: [3.4083000000000724e-05, 3.341699999999739e-05, 3.345899999999957e-05, 3.340300000000129e-05, 3.337500000000215e-05, 3.343000000000096e-05, 3.340200000000182e-05, 3.3374999999998683e-05, 3.344400000000053e-05, 3.340300000000129e-05, 3.338800000000225e-05, 3.341700000000086e-05, 3.341599999999792e-05, 3.3388999999998253e-05, 3.340200000000182e-05, 3.3374999999998683e-05, 3.341700000000086e-05, 3.347299999999914e-05, 3.340300000000129e-05, 3.340299999999782e-05, 3.340200000000182e-05, 3.3374999999998683e-05, 3.341700000000086e-05, 3.3388999999998253e-05, 3.340300000000129e-05, 3.341700000000086e-05, 3.337500000000215e-05, 3.337500000000215e-05, 3.338900000000172e-05, 3.338900000000172e-05, 3.341700000000086e-05, 3.338900000000172e-05, 3.341700000000086e-05, 3.340199999999835e-05, 3.340300000000129e-05, 3.338900000000172e-05, 3.345900000000304e-05, 3.3374999999998683e-05, 3.3374999999998683e-05, 3.338799999999878e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.3445e-05, 3.333399999999945e-05, 3.340200000000182e-05, 3.343100000000043e-05, 3.341700000000086e-05, 3.347199999999967e-05, 3.340299999999782e-05, 3.340200000000182e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.432" endtime="20201115 23:01:23.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.427" endtime="20201115 23:01:23.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.437" endtime="20201115 23:01:23.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.440" endtime="20201115 23:01:23.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.439" endtime="20201115 23:01:23.460"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.435" endtime="20201115 23:01:23.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.073" endtime="20201115 23:01:23.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.071" endtime="20201115 23:01:23.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.070" endtime="20201115 23:01:23.461"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.464" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.472" endtime="20201115 23:01:23.487"></status>
</kw>
<msg timestamp="20201115 23:01:23.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.470" endtime="20201115 23:01:23.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.488" endtime="20201115 23:01:23.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.491" endtime="20201115 23:01:23.492"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.468" endtime="20201115 23:01:23.493"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.466" endtime="20201115 23:01:23.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.500" endtime="20201115 23:01:23.785"></status>
</kw>
<msg timestamp="20201115 23:01:23.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.498" endtime="20201115 23:01:23.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023626708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.789" endtime="20201115 23:01:23.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.797" endtime="20201115 23:01:23.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.495" endtime="20201115 23:01:23.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.494" endtime="20201115 23:01:23.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:23.804" level="INFO">${RESULT} = [{'time': 0.023626708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4069000000001154e-05, 'source_diff': 3.4069000000001154e-05}, {'time': 0.023680722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:23.800" endtime="20201115 23:01:23.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:23.817" level="INFO">${ACCURACY} = {'diff': [3.4069000000001154e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.340300000000129e-05, 3.8361000000000645e-05, 3.338900000000172e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:23.805" endtime="20201115 23:01:23.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.822" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201115 23:01:23.821" endtime="20201115 23:01:23.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.825" level="INFO">VALUE: [3.4069000000001154e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.340300000000129e-05, 3.8361000000000645e-05, 3.338900000000172e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8374999999996745e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8347000000001075e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8430999999998494e-05, 3.8375000000000214e-05, 3.8402999999999354e-05, 3.832000000000141e-05, 3.8360999999997175e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.845800000000163e-05, 3.8388999999999784e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.8360999999997175e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.338900000000172e-05, 3.831999999999794e-05, 3.8346999999997605e-05, 3.8388999999999784e-05, 3.8361000000000645e-05, 3.8416999999998924e-05, 3.8361000000000645e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8360999999997175e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8402999999999354e-05, 3.8375000000000214e-05]</msg>
<status status="PASS" starttime="20201115 23:01:23.823" endtime="20201115 23:01:23.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.818" endtime="20201115 23:01:23.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.828" endtime="20201115 23:01:23.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:23.831" endtime="20201115 23:01:23.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.830" endtime="20201115 23:01:23.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.826" endtime="20201115 23:01:23.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.464" endtime="20201115 23:01:23.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.463" endtime="20201115 23:01:23.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.462" endtime="20201115 23:01:23.853"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.855" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.863" endtime="20201115 23:01:23.878"></status>
</kw>
<msg timestamp="20201115 23:01:23.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.861" endtime="20201115 23:01:23.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:23.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:23.879" endtime="20201115 23:01:23.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.882" endtime="20201115 23:01:23.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.859" endtime="20201115 23:01:23.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.857" endtime="20201115 23:01:23.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:23.891" endtime="20201115 23:01:24.176"></status>
</kw>
<msg timestamp="20201115 23:01:24.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023564319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:23.889" endtime="20201115 23:01:24.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023564319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.180" endtime="20201115 23:01:24.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.188" endtime="20201115 23:01:24.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.886" endtime="20201115 23:01:24.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.885" endtime="20201115 23:01:24.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.195" level="INFO">${RESULT} = [{'time': 0.023603389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.906999999999869e-05, 'source_diff': 3.906999999999869e-05}, {'time': 0.023671083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:24.192" endtime="20201115 23:01:24.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.209" level="INFO">${ACCURACY} = {'diff': [3.906999999999869e-05, 3.8332999999998035e-05, 3.8402999999999354e-05, 3.833400000000098e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.8389000000003254e-05, 3...</msg>
<status status="PASS" starttime="20201115 23:01:24.196" endtime="20201115 23:01:24.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.214" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.213" endtime="20201115 23:01:24.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.216" level="INFO">VALUE: [3.906999999999869e-05, 3.8332999999998035e-05, 3.8402999999999354e-05, 3.833400000000098e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.8389000000003254e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8402999999999354e-05, 3.8431000000001964e-05, 3.841599999999945e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8374999999996745e-05, 3.8332999999998035e-05, 3.8374999999996745e-05, 3.8416999999998924e-05, 3.8361000000000645e-05, 3.836200000000012e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8389000000003254e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8402999999999354e-05, 3.8375000000000214e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.215" endtime="20201115 23:01:24.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.210" endtime="20201115 23:01:24.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.219" endtime="20201115 23:01:24.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.222" endtime="20201115 23:01:24.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.221" endtime="20201115 23:01:24.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.217" endtime="20201115 23:01:24.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.855" endtime="20201115 23:01:24.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.854" endtime="20201115 23:01:24.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:23.853" endtime="20201115 23:01:24.244"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.254" endtime="20201115 23:01:24.270"></status>
</kw>
<msg timestamp="20201115 23:01:24.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.253" endtime="20201115 23:01:24.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.271" endtime="20201115 23:01:24.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.274" endtime="20201115 23:01:24.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.250" endtime="20201115 23:01:24.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.248" endtime="20201115 23:01:24.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.283" endtime="20201115 23:01:24.568"></status>
</kw>
<msg timestamp="20201115 23:01:24.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024452486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.281" endtime="20201115 23:01:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024413403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024452486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.572" endtime="20201115 23:01:24.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.581" endtime="20201115 23:01:24.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.279" endtime="20201115 23:01:24.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.277" endtime="20201115 23:01:24.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.588" level="INFO">${RESULT} = [{'time': 0.024452486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9082999999998785e-05, 'source_diff': 3.9082999999998785e-05}, {'time': 0.02452425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:24.584" endtime="20201115 23:01:24.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.602" level="INFO">${ACCURACY} = {'diff': [3.9082999999998785e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.836200000000012e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:24.589" endtime="20201115 23:01:24.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.607" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.606" endtime="20201115 23:01:24.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.609" level="INFO">VALUE: [3.9082999999998785e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.836200000000012e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8431000000001964e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8319000000001935e-05, 3.8361000000000645e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.8374999999996745e-05, 3.841599999999945e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8431000000001964e-05, 3.8388999999999784e-05, 3.844400000000206e-05, 3.8431000000001964e-05, 3.8402999999999354e-05, 3.8332999999998035e-05, 3.8319000000001935e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8416999999998924e-05, 3.8375000000000214e-05, 3.830600000000184e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8361000000000645e-05]</msg>
<status status="PASS" starttime="20201115 23:01:24.608" endtime="20201115 23:01:24.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.603" endtime="20201115 23:01:24.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.612" endtime="20201115 23:01:24.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:24.616" endtime="20201115 23:01:24.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.614" endtime="20201115 23:01:24.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.611" endtime="20201115 23:01:24.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.247" endtime="20201115 23:01:24.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.245" endtime="20201115 23:01:24.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.244" endtime="20201115 23:01:24.637"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.639" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.647" endtime="20201115 23:01:24.662"></status>
</kw>
<msg timestamp="20201115 23:01:24.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.646" endtime="20201115 23:01:24.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:24.664" endtime="20201115 23:01:24.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.666" endtime="20201115 23:01:24.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.643" endtime="20201115 23:01:24.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.641" endtime="20201115 23:01:24.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.676" endtime="20201115 23:01:24.962"></status>
</kw>
<msg timestamp="20201115 23:01:24.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023571736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.674" endtime="20201115 23:01:24.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023571736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023610819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:24.966" endtime="20201115 23:01:24.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:24.974" endtime="20201115 23:01:24.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.671" endtime="20201115 23:01:24.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.669" endtime="20201115 23:01:24.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:24.981" level="INFO">${RESULT} = [{'time': 0.023610819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9083000000002255e-05, 'source_diff': 3.9083000000002255e-05}, {'time': 0.023663889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:24.978" endtime="20201115 23:01:24.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:24.994" level="INFO">${ACCURACY} = {'diff': [3.9083000000002255e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8431000000001964e-05, 3.8332999999998035e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.8319000000001935e-05,...</msg>
<status status="PASS" starttime="20201115 23:01:24.982" endtime="20201115 23:01:24.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:24.999" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201115 23:01:24.998" endtime="20201115 23:01:24.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.002" level="INFO">VALUE: [3.9083000000002255e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8431000000001964e-05, 3.8332999999998035e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.8319000000001935e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.838800000000031e-05, 3.8360999999997175e-05, 3.8374999999996745e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8403000000002824e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.833400000000098e-05, 3.8375000000000214e-05, 3.8332999999998035e-05, 3.8360999999997175e-05, 3.8388999999999784e-05, 3.8360999999997175e-05, 3.8375000000000214e-05, 3.8374999999996745e-05, 3.82919999999988e-05, 3.833399999999751e-05, 3.8375000000000214e-05, 3.833400000000098e-05, 3.8346999999997605e-05, 3.8375000000000214e-05, 3.8332999999998035e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8416999999998924e-05, 3.8417000000002394e-05, 3.8347000000001075e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.838800000000031e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.831999999999794e-05, 3.838799999999684e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.000" endtime="20201115 23:01:25.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.995" endtime="20201115 23:01:25.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.005" endtime="20201115 23:01:25.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.008" endtime="20201115 23:01:25.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.007" endtime="20201115 23:01:25.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.003" endtime="20201115 23:01:25.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.640" endtime="20201115 23:01:25.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.638" endtime="20201115 23:01:25.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:24.637" endtime="20201115 23:01:25.029"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.032" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.040" endtime="20201115 23:01:25.054"></status>
</kw>
<msg timestamp="20201115 23:01:25.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.038" endtime="20201115 23:01:25.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.056" endtime="20201115 23:01:25.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.059" endtime="20201115 23:01:25.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.036" endtime="20201115 23:01:25.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.034" endtime="20201115 23:01:25.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.068" endtime="20201115 23:01:25.353"></status>
</kw>
<msg timestamp="20201115 23:01:25.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.066" endtime="20201115 23:01:25.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023524458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.358" endtime="20201115 23:01:25.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.366" endtime="20201115 23:01:25.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.064" endtime="20201115 23:01:25.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.062" endtime="20201115 23:01:25.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.373" level="INFO">${RESULT} = [{'time': 0.023563514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.905599999999912e-05, 'source_diff': 3.905599999999912e-05}, {'time': 0.023623111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:25.369" endtime="20201115 23:01:25.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.386" level="INFO">${ACCURACY} = {'diff': [3.905599999999912e-05, 3.8375000000000214e-05, 3.844400000000206e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8430999999998494e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:25.374" endtime="20201115 23:01:25.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.391" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.390" endtime="20201115 23:01:25.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.393" level="INFO">VALUE: [3.905599999999912e-05, 3.8375000000000214e-05, 3.844400000000206e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8430999999998494e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8319000000001935e-05, 3.8360999999997175e-05, 3.8431000000001964e-05, 3.8361000000000645e-05, 3.845799999999816e-05, 3.8361000000000645e-05, 3.842999999999902e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.840199999999988e-05, 3.8375000000000214e-05, 3.8403000000002824e-05, 3.8388999999999784e-05, 3.841599999999945e-05, 3.8375000000000214e-05, 3.8403000000002824e-05, 3.8375000000000214e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.8402999999999354e-05, 3.8388999999999784e-05, 3.8319000000001935e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.836200000000012e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.8347000000001075e-05, 3.8361000000000645e-05, 3.8389000000003254e-05, 3.8375000000000214e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.392" endtime="20201115 23:01:25.393"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.387" endtime="20201115 23:01:25.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.396" endtime="20201115 23:01:25.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.399" endtime="20201115 23:01:25.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.398" endtime="20201115 23:01:25.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.394" endtime="20201115 23:01:25.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.032" endtime="20201115 23:01:25.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.030" endtime="20201115 23:01:25.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.030" endtime="20201115 23:01:25.421"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.423" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.432" endtime="20201115 23:01:25.447"></status>
</kw>
<msg timestamp="20201115 23:01:25.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.430" endtime="20201115 23:01:25.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.448" endtime="20201115 23:01:25.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.451" endtime="20201115 23:01:25.452"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.428" endtime="20201115 23:01:25.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.425" endtime="20201115 23:01:25.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.460" endtime="20201115 23:01:25.747"></status>
</kw>
<msg timestamp="20201115 23:01:25.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024123569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.458" endtime="20201115 23:01:25.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024123569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.751" endtime="20201115 23:01:25.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.759" endtime="20201115 23:01:25.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.456" endtime="20201115 23:01:25.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.454" endtime="20201115 23:01:25.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:25.766" level="INFO">${RESULT} = [{'time': 0.024123569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4055000000001177e-05, 'source_diff': 4.4055000000001177e-05}, {'time': 0.024197194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:25.763" endtime="20201115 23:01:25.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:25.780" level="INFO">${ACCURACY} = {'diff': [4.4055000000001177e-05, 4.3333000000003036e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.33059999999999e-05, 4.3360999999998706e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:25.767" endtime="20201115 23:01:25.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.784" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201115 23:01:25.783" endtime="20201115 23:01:25.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.787" level="INFO">VALUE: [4.4055000000001177e-05, 4.3333000000003036e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.33059999999999e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.334800000000208e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.336200000000165e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 3.8361000000000645e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3403000000000885e-05, 4.3360999999998706e-05, 4.3333000000003036e-05, 3.8403000000002824e-05, 4.3375000000001745e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.3388999999997846e-05, 3.8430999999998494e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.336199999999818e-05, 4.3360999999998706e-05, 4.3318999999999996e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3361000000002176e-05, 4.3375000000001745e-05, 4.336200000000165e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3361000000002176e-05]</msg>
<status status="PASS" starttime="20201115 23:01:25.785" endtime="20201115 23:01:25.787"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.781" endtime="20201115 23:01:25.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.790" endtime="20201115 23:01:25.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:25.794" endtime="20201115 23:01:25.813"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.792" endtime="20201115 23:01:25.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.788" endtime="20201115 23:01:25.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.424" endtime="20201115 23:01:25.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.422" endtime="20201115 23:01:25.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.421" endtime="20201115 23:01:25.815"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.817" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.825" endtime="20201115 23:01:25.841"></status>
</kw>
<msg timestamp="20201115 23:01:25.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.824" endtime="20201115 23:01:25.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:25.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:25.843" endtime="20201115 23:01:25.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.845" endtime="20201115 23:01:25.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.821" endtime="20201115 23:01:25.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.819" endtime="20201115 23:01:25.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:25.854" endtime="20201115 23:01:26.139"></status>
</kw>
<msg timestamp="20201115 23:01:26.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024460417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:25.853" endtime="20201115 23:01:26.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024460417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.143" endtime="20201115 23:01:26.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.152" endtime="20201115 23:01:26.153"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.850" endtime="20201115 23:01:26.154"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.848" endtime="20201115 23:01:26.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.158" level="INFO">${RESULT} = [{'time': 0.024504444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402699999999857e-05, 'source_diff': 4.402699999999857e-05}, {'time': 0.024562847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:26.155" endtime="20201115 23:01:26.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.173" level="INFO">${ACCURACY} = {'diff': [4.402699999999857e-05, 4.3388999999997846e-05, 4.3332999999999566e-05, 4.3389000000001315e-05, 4.3346999999999136e-05, 4.341599999999751e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:26.159" endtime="20201115 23:01:26.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.178" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.177" endtime="20201115 23:01:26.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.181" level="INFO">VALUE: [4.402699999999857e-05, 4.3388999999997846e-05, 4.3332999999999566e-05, 4.3389000000001315e-05, 4.3346999999999136e-05, 4.341599999999751e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.329200000000033e-05, 4.333400000000251e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3417000000000455e-05, 4.3403000000000885e-05, 4.333399999999904e-05, 4.3346999999999136e-05, 4.3388999999997846e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.327700000000129e-05, 4.3347000000002606e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3403000000000885e-05, 4.333399999999904e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.327800000000076e-05, 4.33059999999999e-05, 4.336200000000165e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.341600000000098e-05, 4.3375000000001745e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.179" endtime="20201115 23:01:26.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.174" endtime="20201115 23:01:26.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.185" endtime="20201115 23:01:26.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.189" endtime="20201115 23:01:26.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.187" endtime="20201115 23:01:26.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.183" endtime="20201115 23:01:26.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.818" endtime="20201115 23:01:26.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.816" endtime="20201115 23:01:26.210"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:25.815" endtime="20201115 23:01:26.210"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.212" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.220" endtime="20201115 23:01:26.236"></status>
</kw>
<msg timestamp="20201115 23:01:26.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.219" endtime="20201115 23:01:26.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.237" endtime="20201115 23:01:26.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.240" endtime="20201115 23:01:26.241"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.216" endtime="20201115 23:01:26.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.214" endtime="20201115 23:01:26.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.249" endtime="20201115 23:01:26.534"></status>
</kw>
<msg timestamp="20201115 23:01:26.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023645, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:26.247" endtime="20201115 23:01:26.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023645, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:26.539" endtime="20201115 23:01:26.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.547" endtime="20201115 23:01:26.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.244" endtime="20201115 23:01:26.549"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.243" endtime="20201115 23:01:26.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.554" level="INFO">${RESULT} = [{'time': 0.023645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.405600000000065e-05, 'source_diff': 4.405600000000065e-05}, {'time': 0.023704306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:26.550" endtime="20201115 23:01:26.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.567" level="INFO">${ACCURACY} = {'diff': [4.405600000000065e-05, 4.334800000000208e-05, 4.3360999999998706e-05, 4.333399999999904e-05, 4.3332999999999566e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4...</msg>
<status status="PASS" starttime="20201115 23:01:26.555" endtime="20201115 23:01:26.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.572" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.571" endtime="20201115 23:01:26.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.574" level="INFO">VALUE: [4.405600000000065e-05, 4.334800000000208e-05, 4.3360999999998706e-05, 4.333399999999904e-05, 4.3332999999999566e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.341600000000098e-05, 4.3375000000001745e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.341600000000098e-05, 4.3360999999998706e-05, 4.3291000000000857e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3403000000000885e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.333399999999904e-05, 4.3360999999998706e-05, 4.342999999999708e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.333399999999904e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.334800000000208e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.573" endtime="20201115 23:01:26.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.568" endtime="20201115 23:01:26.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.578" endtime="20201115 23:01:26.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.581" endtime="20201115 23:01:26.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.580" endtime="20201115 23:01:26.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.576" endtime="20201115 23:01:26.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.213" endtime="20201115 23:01:26.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.211" endtime="20201115 23:01:26.602"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.210" endtime="20201115 23:01:26.602"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.604" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.613" endtime="20201115 23:01:26.628"></status>
</kw>
<msg timestamp="20201115 23:01:26.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.611" endtime="20201115 23:01:26.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:26.629" endtime="20201115 23:01:26.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.632" endtime="20201115 23:01:26.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.609" endtime="20201115 23:01:26.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.606" endtime="20201115 23:01:26.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.641" endtime="20201115 23:01:26.925"></status>
</kw>
<msg timestamp="20201115 23:01:26.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.639" endtime="20201115 23:01:26.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:26.930" endtime="20201115 23:01:26.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.938" endtime="20201115 23:01:26.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.636" endtime="20201115 23:01:26.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.635" endtime="20201115 23:01:26.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:26.944" level="INFO">${RESULT} = [{'time': 0.023602125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4069000000000746e-05, 'source_diff': 4.4069000000000746e-05}, {'time': 0.023665431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:26.941" endtime="20201115 23:01:26.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:26.958" level="INFO">${ACCURACY} = {'diff': [4.4069000000000746e-05, 4.336200000000165e-05, 4.3347000000002606e-05, 4.3332999999999566e-05, 4.3375000000001745e-05, 4.3332999999999566e-05, 4.334799999999861e-05, 4.3361000000002176e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:26.946" endtime="20201115 23:01:26.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.963" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201115 23:01:26.962" endtime="20201115 23:01:26.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.965" level="INFO">VALUE: [4.4069000000000746e-05, 4.336200000000165e-05, 4.3347000000002606e-05, 4.3332999999999566e-05, 4.3375000000001745e-05, 4.3332999999999566e-05, 4.334799999999861e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.336199999999818e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.3417000000000455e-05, 4.3346999999999136e-05, 4.3403000000000885e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3361000000002176e-05, 4.3402999999997416e-05, 4.3346999999999136e-05, 4.33059999999999e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.3347000000002606e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.334800000000208e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.33059999999999e-05, 4.334799999999861e-05, 4.3361000000002176e-05, 4.33059999999999e-05, 4.3360999999998706e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201115 23:01:26.964" endtime="20201115 23:01:26.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.959" endtime="20201115 23:01:26.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:26.969" endtime="20201115 23:01:26.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:26.972" endtime="20201115 23:01:26.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.970" endtime="20201115 23:01:26.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.967" endtime="20201115 23:01:26.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.605" endtime="20201115 23:01:26.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.603" endtime="20201115 23:01:26.993"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.603" endtime="20201115 23:01:26.993"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:26.995" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.004" endtime="20201115 23:01:27.019"></status>
</kw>
<msg timestamp="20201115 23:01:27.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.002" endtime="20201115 23:01:27.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.020" endtime="20201115 23:01:27.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.023" endtime="20201115 23:01:27.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.000" endtime="20201115 23:01:27.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.997" endtime="20201115 23:01:27.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.032" endtime="20201115 23:01:27.317"></status>
</kw>
<msg timestamp="20201115 23:01:27.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023656194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.030" endtime="20201115 23:01:27.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023656194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.321" endtime="20201115 23:01:27.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.330" endtime="20201115 23:01:27.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.027" endtime="20201115 23:01:27.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.026" endtime="20201115 23:01:27.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.337" level="INFO">${RESULT} = [{'time': 0.023656194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4012999999999e-05, 'source_diff': 4.4012999999999e-05}, {'time': 0.023716431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201115 23:01:27.334" endtime="20201115 23:01:27.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.351" level="INFO">${ACCURACY} = {'diff': [4.4012999999999e-05, 4.327800000000076e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.3403000000000885e-05, 4.341600000000098e-05, 4.3360999999998706e-05, 4.33...</msg>
<status status="PASS" starttime="20201115 23:01:27.338" endtime="20201115 23:01:27.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.355" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.354" endtime="20201115 23:01:27.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.358" level="INFO">VALUE: [4.4012999999999e-05, 4.327800000000076e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.3403000000000885e-05, 4.341600000000098e-05, 4.3360999999998706e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.330499999999696e-05, 4.334800000000208e-05, 4.3291000000000857e-05, 4.3346999999999136e-05, 4.33059999999999e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.33059999999999e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.3417000000000455e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.3332999999999566e-05, 4.3291000000000857e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.333399999999904e-05, 4.340200000000141e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.33059999999999e-05, 4.3375000000001745e-05, 4.3417000000000455e-05, 4.3361000000002176e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.357" endtime="20201115 23:01:27.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.352" endtime="20201115 23:01:27.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.361" endtime="20201115 23:01:27.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.365" endtime="20201115 23:01:27.384"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.363" endtime="20201115 23:01:27.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.360" endtime="20201115 23:01:27.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.996" endtime="20201115 23:01:27.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.994" endtime="20201115 23:01:27.386"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:26.993" endtime="20201115 23:01:27.386"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.388" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.397" endtime="20201115 23:01:27.413"></status>
</kw>
<msg timestamp="20201115 23:01:27.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.395" endtime="20201115 23:01:27.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.414" endtime="20201115 23:01:27.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.417" endtime="20201115 23:01:27.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.393" endtime="20201115 23:01:27.419"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.390" endtime="20201115 23:01:27.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.426" endtime="20201115 23:01:27.731"></status>
</kw>
<msg timestamp="20201115 23:01:27.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024864458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.424" endtime="20201115 23:01:27.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024815431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024864458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.735" endtime="20201115 23:01:27.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.743" endtime="20201115 23:01:27.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.422" endtime="20201115 23:01:27.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.420" endtime="20201115 23:01:27.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:27.750" level="INFO">${RESULT} = [{'time': 0.024864458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.90270000000001e-05, 'source_diff': 4.90270000000001e-05}, {'time': 0.024934042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:27.747" endtime="20201115 23:01:27.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:27.765" level="INFO">${ACCURACY} = {'diff': [4.90270000000001e-05, 4.834800000000014e-05, 4.334799999999861e-05, 4.834700000000067e-05, 4.83330000000011e-05, 4.840199999999947e-05, 4.3332999999999566e-05, 4.837499999999981e-05, 4.83190...</msg>
<status status="PASS" starttime="20201115 23:01:27.751" endtime="20201115 23:01:27.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.770" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201115 23:01:27.769" endtime="20201115 23:01:27.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.772" level="INFO">VALUE: [4.90270000000001e-05, 4.834800000000014e-05, 4.334799999999861e-05, 4.834700000000067e-05, 4.83330000000011e-05, 4.840199999999947e-05, 4.3332999999999566e-05, 4.837499999999981e-05, 4.831900000000153e-05, 4.834700000000067e-05, 4.831999999999753e-05, 4.83330000000011e-05, 4.830499999999849e-05, 4.83330000000011e-05, 4.3374999999998276e-05, 4.83330000000011e-05, 4.836099999999677e-05, 4.834700000000067e-05, 4.836100000000024e-05, 4.344400000000012e-05, 4.834700000000067e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.837499999999981e-05, 4.836099999999677e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.3346999999999136e-05, 4.833400000000057e-05, 4.3374999999998276e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.8389000000002846e-05, 4.836199999999971e-05, 4.834800000000014e-05, 4.83330000000011e-05, 4.833400000000057e-05, 4.831900000000153e-05, 4.833299999999763e-05, 4.834700000000067e-05, 4.836100000000024e-05, 4.837499999999981e-05, 4.336199999999818e-05, 4.833400000000057e-05, 4.834700000000067e-05, 4.830499999999849e-05]</msg>
<status status="PASS" starttime="20201115 23:01:27.771" endtime="20201115 23:01:27.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.766" endtime="20201115 23:01:27.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.775" endtime="20201115 23:01:27.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:27.779" endtime="20201115 23:01:27.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.777" endtime="20201115 23:01:27.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.774" endtime="20201115 23:01:27.799"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.389" endtime="20201115 23:01:27.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.387" endtime="20201115 23:01:27.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.386" endtime="20201115 23:01:27.800"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.802" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.811" endtime="20201115 23:01:27.826"></status>
</kw>
<msg timestamp="20201115 23:01:27.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.809" endtime="20201115 23:01:27.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:27.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:27.828" endtime="20201115 23:01:27.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.835" endtime="20201115 23:01:27.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.806" endtime="20201115 23:01:27.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.804" endtime="20201115 23:01:27.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:27.845" endtime="20201115 23:01:28.131"></status>
</kw>
<msg timestamp="20201115 23:01:28.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024041514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:27.843" endtime="20201115 23:01:28.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024041514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024090625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.135" endtime="20201115 23:01:28.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.143" endtime="20201115 23:01:28.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.841" endtime="20201115 23:01:28.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.839" endtime="20201115 23:01:28.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.150" level="INFO">${RESULT} = [{'time': 0.024090625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.911100000000099e-05, 'source_diff': 4.911100000000099e-05}, {'time': 0.024167625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.147" endtime="20201115 23:01:28.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.164" level="INFO">${ACCURACY} = {'diff': [4.911100000000099e-05, 4.83330000000011e-05, 4.831899999999806e-05, 4.833400000000057e-05, 4.83330000000011e-05, 4.8320000000001e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.83190000...</msg>
<status status="PASS" starttime="20201115 23:01:28.151" endtime="20201115 23:01:28.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.169" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.168" endtime="20201115 23:01:28.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.171" level="INFO">VALUE: [4.911100000000099e-05, 4.83330000000011e-05, 4.831899999999806e-05, 4.833400000000057e-05, 4.83330000000011e-05, 4.8320000000001e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.831900000000153e-05, 4.833400000000057e-05, 4.834800000000014e-05, 4.83469999999972e-05, 4.836100000000024e-05, 4.836199999999971e-05, 4.834700000000067e-05, 4.833299999999763e-05, 4.841600000000251e-05, 4.834700000000067e-05, 4.836100000000024e-05, 4.830500000000196e-05, 4.831900000000153e-05, 4.829199999999839e-05, 4.83330000000011e-05, 4.829199999999839e-05, 4.836100000000024e-05, 4.833299999999763e-05, 4.834700000000067e-05, 4.830600000000143e-05, 4.831999999999753e-05, 4.840299999999895e-05, 4.833400000000057e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.831900000000153e-05, 4.836100000000024e-05, 4.8320000000001e-05, 4.83339999999971e-05, 4.83469999999972e-05, 4.836100000000024e-05, 4.834800000000014e-05, 4.834700000000067e-05, 4.840299999999895e-05, 4.836099999999677e-05, 4.836100000000024e-05, 4.834800000000014e-05, 4.834700000000067e-05, 4.836100000000024e-05, 4.831900000000153e-05, 4.834700000000067e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.170" endtime="20201115 23:01:28.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.165" endtime="20201115 23:01:28.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.174" endtime="20201115 23:01:28.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.178" endtime="20201115 23:01:28.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.176" endtime="20201115 23:01:28.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.173" endtime="20201115 23:01:28.198"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.803" endtime="20201115 23:01:28.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.801" endtime="20201115 23:01:28.199"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:27.800" endtime="20201115 23:01:28.199"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.201" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.215" endtime="20201115 23:01:28.231"></status>
</kw>
<msg timestamp="20201115 23:01:28.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.213" endtime="20201115 23:01:28.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.232" endtime="20201115 23:01:28.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.235" endtime="20201115 23:01:28.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.211" endtime="20201115 23:01:28.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.208" endtime="20201115 23:01:28.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.243" endtime="20201115 23:01:28.529"></status>
</kw>
<msg timestamp="20201115 23:01:28.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029560083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.242" endtime="20201115 23:01:28.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029560083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029609153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.533" endtime="20201115 23:01:28.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.541" endtime="20201115 23:01:28.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.239" endtime="20201115 23:01:28.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.238" endtime="20201115 23:01:28.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.548" level="INFO">${RESULT} = [{'time': 0.029609153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.906999999999828e-05, 'source_diff': 4.906999999999828e-05}, {'time': 0.029674972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.545" endtime="20201115 23:01:28.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.562" level="INFO">${ACCURACY} = {'diff': [4.906999999999828e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.834800000000014e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.827799999999882e-05, 4.8334...</msg>
<status status="PASS" starttime="20201115 23:01:28.549" endtime="20201115 23:01:28.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.566" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.565" endtime="20201115 23:01:28.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.569" level="INFO">VALUE: [4.906999999999828e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.834800000000014e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.827799999999882e-05, 4.833400000000057e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.834700000000067e-05, 4.831900000000153e-05, 4.83330000000011e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.836099999999677e-05, 4.834700000000067e-05, 4.833400000000057e-05, 4.834700000000067e-05, 4.834800000000014e-05, 4.831999999999753e-05, 4.836099999999677e-05, 4.834800000000361e-05, 4.83469999999972e-05, 4.837499999999634e-05, 4.83469999999972e-05, 4.833299999999763e-05, 4.83469999999972e-05, 4.833299999999763e-05, 4.836099999999677e-05, 4.834700000000414e-05, 4.837499999999634e-05, 4.833299999999763e-05, 4.836099999999677e-05, 4.8361000000003707e-05, 4.836199999999624e-05, 4.8375000000003276e-05, 4.833299999999763e-05, 4.827699999999935e-05, 4.83469999999972e-05, 4.836099999999677e-05, 4.836099999999677e-05, 4.8387999999996434e-05, 4.836099999999677e-05, 4.83469999999972e-05, 4.83469999999972e-05, 4.83469999999972e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.567" endtime="20201115 23:01:28.569"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.562" endtime="20201115 23:01:28.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.572" endtime="20201115 23:01:28.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.575" endtime="20201115 23:01:28.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.573" endtime="20201115 23:01:28.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.570" endtime="20201115 23:01:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.202" endtime="20201115 23:01:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.200" endtime="20201115 23:01:28.596"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.199" endtime="20201115 23:01:28.597"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.599" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.607" endtime="20201115 23:01:28.622"></status>
</kw>
<msg timestamp="20201115 23:01:28.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.605" endtime="20201115 23:01:28.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.624" endtime="20201115 23:01:28.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.626" endtime="20201115 23:01:28.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.603" endtime="20201115 23:01:28.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.601" endtime="20201115 23:01:28.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.635" endtime="20201115 23:01:28.921"></status>
</kw>
<msg timestamp="20201115 23:01:28.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024025028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.634" endtime="20201115 23:01:28.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024025028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024074056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:28.925" endtime="20201115 23:01:28.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.933" endtime="20201115 23:01:28.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.631" endtime="20201115 23:01:28.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.630" endtime="20201115 23:01:28.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:28.940" level="INFO">${RESULT} = [{'time': 0.024074056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902799999999957e-05, 'source_diff': 4.902799999999957e-05}, {'time': 0.024137125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:28.937" endtime="20201115 23:01:28.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:28.953" level="INFO">${ACCURACY} = {'diff': [4.902799999999957e-05, 4.836100000000024e-05, 4.833400000000057e-05, 4.834700000000067e-05, 4.834800000000014e-05, 4.8320000000001e-05, 4.836199999999971e-05, 4.837499999999981e-05, 4.833400...</msg>
<status status="PASS" starttime="20201115 23:01:28.941" endtime="20201115 23:01:28.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.958" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201115 23:01:28.957" endtime="20201115 23:01:28.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.961" level="INFO">VALUE: [4.902799999999957e-05, 4.836100000000024e-05, 4.833400000000057e-05, 4.834700000000067e-05, 4.834800000000014e-05, 4.8320000000001e-05, 4.836199999999971e-05, 4.837499999999981e-05, 4.833400000000057e-05, 4.834700000000067e-05, 4.840299999999895e-05, 4.833299999999763e-05, 4.837499999999981e-05, 4.83330000000011e-05, 4.83339999999971e-05, 4.837499999999981e-05, 4.83330000000011e-05, 4.836100000000024e-05, 4.831899999999806e-05, 4.834700000000067e-05, 4.836199999999971e-05, 4.838899999999938e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.831999999999753e-05, 4.83469999999972e-05, 4.834700000000067e-05, 4.838899999999938e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.830599999999796e-05, 4.834800000000014e-05, 4.836100000000024e-05, 4.83469999999972e-05, 4.834700000000067e-05, 4.834700000000067e-05, 4.831900000000153e-05, 4.838899999999938e-05, 4.834800000000014e-05, 4.836100000000024e-05, 4.837499999999981e-05, 4.840299999999895e-05, 4.837499999999981e-05, 4.837499999999981e-05, 4.834800000000014e-05, 4.8375000000003276e-05, 4.837499999999981e-05, 4.840299999999895e-05]</msg>
<status status="PASS" starttime="20201115 23:01:28.959" endtime="20201115 23:01:28.961"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.954" endtime="20201115 23:01:28.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.964" endtime="20201115 23:01:28.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:28.968" endtime="20201115 23:01:28.987"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.966" endtime="20201115 23:01:28.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.962" endtime="20201115 23:01:28.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.600" endtime="20201115 23:01:28.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.598" endtime="20201115 23:01:28.989"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.597" endtime="20201115 23:01:28.989"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:28.991" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:28.999" endtime="20201115 23:01:29.015"></status>
</kw>
<msg timestamp="20201115 23:01:29.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:28.998" endtime="20201115 23:01:29.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.017" endtime="20201115 23:01:29.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.019" endtime="20201115 23:01:29.021"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.995" endtime="20201115 23:01:29.022"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.993" endtime="20201115 23:01:29.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.028" endtime="20201115 23:01:29.321"></status>
</kw>
<msg timestamp="20201115 23:01:29.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024497236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.027" endtime="20201115 23:01:29.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024497236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024546278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.325" endtime="20201115 23:01:29.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.333" endtime="20201115 23:01:29.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.024" endtime="20201115 23:01:29.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.023" endtime="20201115 23:01:29.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.341" level="INFO">${RESULT} = [{'time': 0.024546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.904200000000261e-05, 'source_diff': 4.904200000000261e-05}, {'time': 0.024623639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.337" endtime="20201115 23:01:29.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.356" level="INFO">${ACCURACY} = {'diff': [4.904200000000261e-05, 4.831999999999753e-05, 4.833400000000057e-05, 4.837499999999981e-05, 4.834700000000067e-05, 4.834800000000014e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.8361...</msg>
<status status="PASS" starttime="20201115 23:01:29.342" endtime="20201115 23:01:29.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.361" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.360" endtime="20201115 23:01:29.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.363" level="INFO">VALUE: [4.904200000000261e-05, 4.831999999999753e-05, 4.833400000000057e-05, 4.837499999999981e-05, 4.834700000000067e-05, 4.834800000000014e-05, 4.837499999999981e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.830499999999849e-05, 4.834800000000014e-05, 4.834700000000067e-05, 4.8320000000001e-05, 4.836100000000024e-05, 4.829200000000186e-05, 4.834700000000067e-05, 4.837499999999981e-05, 4.834800000000014e-05, 4.834700000000067e-05, 4.8389000000002846e-05, 4.836100000000024e-05, 4.840299999999895e-05, 4.840199999999947e-05, 4.834700000000067e-05, 4.836100000000024e-05, 4.83330000000011e-05, 4.834700000000067e-05, 4.833400000000057e-05, 4.836100000000024e-05, 4.83330000000011e-05, 4.826399999999925e-05, 4.836100000000024e-05, 4.836100000000024e-05, 4.833299999999763e-05, 4.8389000000002846e-05, 4.831900000000153e-05, 4.836100000000024e-05, 4.837499999999981e-05, 4.833400000000057e-05, 4.829199999999839e-05, 4.833400000000057e-05, 4.833400000000057e-05, 4.83330000000011e-05, 4.836100000000024e-05, 4.83469999999972e-05, 4.836100000000024e-05, 4.8403000000002416e-05, 4.834700000000067e-05, 4.837499999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.362" endtime="20201115 23:01:29.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.357" endtime="20201115 23:01:29.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.367" endtime="20201115 23:01:29.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.370" endtime="20201115 23:01:29.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.369" endtime="20201115 23:01:29.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.365" endtime="20201115 23:01:29.390"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.992" endtime="20201115 23:01:29.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.990" endtime="20201115 23:01:29.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:28.989" endtime="20201115 23:01:29.391"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.393" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.402" endtime="20201115 23:01:29.417"></status>
</kw>
<msg timestamp="20201115 23:01:29.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.400" endtime="20201115 23:01:29.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.419" endtime="20201115 23:01:29.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.421" endtime="20201115 23:01:29.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.398" endtime="20201115 23:01:29.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.395" endtime="20201115 23:01:29.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.430" endtime="20201115 23:01:29.715"></status>
</kw>
<msg timestamp="20201115 23:01:29.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023529569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023583583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.429" endtime="20201115 23:01:29.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023529569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023583583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.719" endtime="20201115 23:01:29.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.727" endtime="20201115 23:01:29.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.426" endtime="20201115 23:01:29.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.424" endtime="20201115 23:01:29.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:29.734" level="INFO">${RESULT} = [{'time': 0.023583583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.401400000000153e-05, 'source_diff': 5.401400000000153e-05}, {'time': 0.023654417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:29.731" endtime="20201115 23:01:29.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:29.748" level="INFO">${ACCURACY} = {'diff': [5.401400000000153e-05, 4.834800000000014e-05, 5.330599999999949e-05, 5.340300000000048e-05, 5.329100000000045e-05, 5.327700000000088e-05, 5.333399999999863e-05, 5.337499999999787e-05, 4.8361...</msg>
<status status="PASS" starttime="20201115 23:01:29.735" endtime="20201115 23:01:29.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.752" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201115 23:01:29.751" endtime="20201115 23:01:29.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.755" level="INFO">VALUE: [5.401400000000153e-05, 4.834800000000014e-05, 5.330599999999949e-05, 5.340300000000048e-05, 5.329100000000045e-05, 5.327700000000088e-05, 5.333399999999863e-05, 5.337499999999787e-05, 4.836100000000024e-05, 5.331899999999959e-05, 5.330599999999949e-05, 5.333299999999916e-05, 5.336100000000177e-05, 5.337500000000134e-05, 5.33340000000021e-05, 5.331899999999959e-05, 5.327800000000035e-05, 5.327699999999741e-05, 5.333299999999916e-05, 5.334699999999873e-05, 5.3277999999996883e-05, 5.330500000000002e-05, 5.330500000000002e-05, 5.331899999999959e-05, 5.331900000000306e-05, 5.337499999999787e-05, 5.331900000000306e-05, 5.333300000000263e-05, 5.333299999999916e-05, 5.329100000000045e-05, 5.333299999999916e-05, 5.334699999999873e-05, 5.327800000000035e-05, 5.333299999999916e-05, 5.325000000000121e-05, 5.333399999999863e-05, 5.336100000000177e-05, 5.33340000000021e-05, 5.33470000000022e-05, 5.331899999999959e-05, 5.333399999999863e-05, 5.334800000000167e-05, 5.336200000000124e-05, 5.331999999999906e-05, 5.333300000000263e-05, 5.326400000000078e-05, 5.334699999999873e-05, 5.330599999999949e-05, 5.330500000000002e-05, 5.333399999999863e-05]</msg>
<status status="PASS" starttime="20201115 23:01:29.754" endtime="20201115 23:01:29.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.749" endtime="20201115 23:01:29.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.758" endtime="20201115 23:01:29.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:29.761" endtime="20201115 23:01:29.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.760" endtime="20201115 23:01:29.781"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.756" endtime="20201115 23:01:29.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.394" endtime="20201115 23:01:29.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.392" endtime="20201115 23:01:29.782"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.392" endtime="20201115 23:01:29.783"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.785" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.793" endtime="20201115 23:01:29.809"></status>
</kw>
<msg timestamp="20201115 23:01:29.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.792" endtime="20201115 23:01:29.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:29.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:29.810" endtime="20201115 23:01:29.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.813" endtime="20201115 23:01:29.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.789" endtime="20201115 23:01:29.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.787" endtime="20201115 23:01:29.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:29.822" endtime="20201115 23:01:30.108"></status>
</kw>
<msg timestamp="20201115 23:01:30.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023565069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:29.820" endtime="20201115 23:01:30.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023565069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.112" endtime="20201115 23:01:30.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.121" endtime="20201115 23:01:30.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.818" endtime="20201115 23:01:30.123"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.816" endtime="20201115 23:01:30.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.127" level="INFO">${RESULT} = [{'time': 0.023619097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4027999999997633e-05, 'source_diff': 5.4027999999997633e-05}, {'time': 0.023689931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:30.124" endtime="20201115 23:01:30.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.141" level="INFO">${ACCURACY} = {'diff': [5.4027999999997633e-05, 5.332000000000253e-05, 5.334800000000167e-05, 5.33470000000022e-05, 5.33479999999982e-05, 5.331899999999959e-05, 5.331999999999906e-05, 5.331999999999906e-05, 5.33059...</msg>
<status status="PASS" starttime="20201115 23:01:30.128" endtime="20201115 23:01:30.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.145" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.144" endtime="20201115 23:01:30.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.148" level="INFO">VALUE: [5.4027999999997633e-05, 5.332000000000253e-05, 5.334800000000167e-05, 5.33470000000022e-05, 5.33479999999982e-05, 5.331899999999959e-05, 5.331999999999906e-05, 5.331999999999906e-05, 5.330599999999949e-05, 5.331899999999959e-05, 5.327800000000035e-05, 5.330500000000002e-05, 5.333299999999916e-05, 5.336100000000177e-05, 5.334800000000167e-05, 5.334699999999873e-05, 5.333299999999916e-05, 5.336100000000177e-05, 5.331899999999959e-05, 5.333399999999863e-05, 5.331999999999906e-05, 5.327800000000035e-05, 5.334699999999873e-05, 5.33470000000022e-05, 5.327800000000035e-05, 5.331899999999959e-05, 5.33340000000021e-05, 5.334800000000167e-05, 5.333299999999916e-05, 5.331999999999906e-05, 5.33340000000021e-05, 5.337500000000134e-05, 5.331899999999959e-05, 5.329199999999992e-05, 5.337500000000134e-05, 5.331899999999959e-05, 5.331999999999906e-05, 5.337500000000134e-05, 5.338899999999744e-05, 5.330500000000002e-05, 5.338900000000091e-05, 5.334699999999873e-05, 5.331999999999906e-05, 5.33340000000021e-05, 5.333299999999916e-05, 5.330599999999949e-05, 5.327699999999741e-05, 5.333299999999916e-05, 5.331899999999959e-05, 5.334699999999873e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.146" endtime="20201115 23:01:30.148"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.142" endtime="20201115 23:01:30.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.151" endtime="20201115 23:01:30.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.154" endtime="20201115 23:01:30.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.153" endtime="20201115 23:01:30.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.149" endtime="20201115 23:01:30.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.786" endtime="20201115 23:01:30.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.784" endtime="20201115 23:01:30.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:29.783" endtime="20201115 23:01:30.175"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.178" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.186" endtime="20201115 23:01:30.201"></status>
</kw>
<msg timestamp="20201115 23:01:30.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.184" endtime="20201115 23:01:30.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.203" endtime="20201115 23:01:30.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.205" endtime="20201115 23:01:30.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.182" endtime="20201115 23:01:30.207"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.180" endtime="20201115 23:01:30.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.215" endtime="20201115 23:01:30.500"></status>
</kw>
<msg timestamp="20201115 23:01:30.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023609458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.213" endtime="20201115 23:01:30.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023555417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023609458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:30.504" endtime="20201115 23:01:30.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.513" endtime="20201115 23:01:30.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.210" endtime="20201115 23:01:30.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.208" endtime="20201115 23:01:30.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.519" level="INFO">${RESULT} = [{'time': 0.023609458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.40410000000012e-05, 'source_diff': 5.40410000000012e-05}, {'time': 0.023684944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:30.516" endtime="20201115 23:01:30.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.533" level="INFO">${ACCURACY} = {'diff': [5.40410000000012e-05, 5.333299999999916e-05, 5.326299999999784e-05, 5.331899999999959e-05, 5.331999999999906e-05, 5.330500000000002e-05, 5.337500000000134e-05, 5.33470000000022e-05, 5.331899...</msg>
<status status="PASS" starttime="20201115 23:01:30.520" endtime="20201115 23:01:30.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.537" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.536" endtime="20201115 23:01:30.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.540" level="INFO">VALUE: [5.40410000000012e-05, 5.333299999999916e-05, 5.326299999999784e-05, 5.331899999999959e-05, 5.331999999999906e-05, 5.330500000000002e-05, 5.337500000000134e-05, 5.33470000000022e-05, 5.331899999999959e-05, 5.331899999999959e-05, 5.333300000000263e-05, 5.33340000000021e-05, 5.331999999999906e-05, 5.33470000000022e-05, 5.331899999999959e-05, 5.331899999999959e-05, 5.333299999999916e-05, 5.336100000000177e-05, 5.331999999999906e-05, 5.333299999999916e-05, 5.331899999999959e-05, 5.333299999999916e-05, 5.337500000000134e-05, 5.333399999999863e-05, 5.331899999999959e-05, 5.331899999999959e-05, 5.332000000000253e-05, 5.330599999999949e-05, 5.338900000000091e-05, 5.331899999999959e-05, 5.330500000000002e-05, 5.331899999999959e-05, 5.333299999999916e-05, 5.33470000000022e-05, 5.333299999999916e-05, 5.333399999999863e-05, 5.33609999999983e-05, 5.341700000000005e-05, 5.33609999999983e-05, 5.341700000000005e-05, 5.331899999999959e-05, 5.334699999999873e-05, 5.334800000000167e-05, 5.334699999999873e-05, 5.329199999999992e-05, 5.331899999999959e-05, 5.334699999999873e-05, 5.333300000000263e-05, 5.33470000000022e-05, 5.331899999999959e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.538" endtime="20201115 23:01:30.540"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.534" endtime="20201115 23:01:30.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.543" endtime="20201115 23:01:30.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.546" endtime="20201115 23:01:30.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.545" endtime="20201115 23:01:30.566"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.541" endtime="20201115 23:01:30.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.178" endtime="20201115 23:01:30.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.176" endtime="20201115 23:01:30.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.176" endtime="20201115 23:01:30.568"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.570" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.578" endtime="20201115 23:01:30.594"></status>
</kw>
<msg timestamp="20201115 23:01:30.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.576" endtime="20201115 23:01:30.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.596" endtime="20201115 23:01:30.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.599" endtime="20201115 23:01:30.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.574" endtime="20201115 23:01:30.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.572" endtime="20201115 23:01:30.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.608" endtime="20201115 23:01:30.892"></status>
</kw>
<msg timestamp="20201115 23:01:30.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024526986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024581, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:30.606" endtime="20201115 23:01:30.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024526986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024581, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:30.896" endtime="20201115 23:01:30.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.905" endtime="20201115 23:01:30.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.604" endtime="20201115 23:01:30.907"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.602" endtime="20201115 23:01:30.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:30.911" level="INFO">${RESULT} = [{'time': 0.024581, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4013999999998064e-05, 'source_diff': 5.4013999999998064e-05}, {'time': 0.024657722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:30.908" endtime="20201115 23:01:30.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:30.926" level="INFO">${ACCURACY} = {'diff': [5.4013999999998064e-05, 5.330500000000002e-05, 5.331999999999906e-05, 5.331899999999959e-05, 5.333300000000263e-05, 5.327800000000035e-05, 5.337499999999787e-05, 5.329199999999992e-05, 5.331...</msg>
<status status="PASS" starttime="20201115 23:01:30.912" endtime="20201115 23:01:30.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.931" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201115 23:01:30.930" endtime="20201115 23:01:30.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.933" level="INFO">VALUE: [5.4013999999998064e-05, 5.330500000000002e-05, 5.331999999999906e-05, 5.331899999999959e-05, 5.333300000000263e-05, 5.327800000000035e-05, 5.337499999999787e-05, 5.329199999999992e-05, 5.331999999999906e-05, 5.33479999999982e-05, 5.331899999999959e-05, 5.334699999999873e-05, 5.333300000000263e-05, 5.334699999999873e-05, 5.33470000000022e-05, 5.3263999999997313e-05, 5.333299999999916e-05, 5.338899999999744e-05, 5.331999999999906e-05, 5.331999999999906e-05, 5.327800000000035e-05, 5.331899999999959e-05, 5.330500000000002e-05, 5.334699999999873e-05, 5.327800000000035e-05, 5.327800000000035e-05, 5.334699999999873e-05, 5.332000000000253e-05, 5.326400000000078e-05, 5.333299999999916e-05, 5.329199999999992e-05, 5.333399999999863e-05, 5.337500000000134e-05, 5.33609999999983e-05, 5.331900000000306e-05, 5.333299999999916e-05, 5.333299999999916e-05, 5.333299999999916e-05, 5.330599999999949e-05, 5.325000000000121e-05, 5.331999999999906e-05, 5.334699999999873e-05, 5.33340000000021e-05, 5.330599999999949e-05, 5.331899999999959e-05, 5.33340000000021e-05, 5.331899999999959e-05, 5.329199999999992e-05, 5.326400000000078e-05, 5.33609999999983e-05]</msg>
<status status="PASS" starttime="20201115 23:01:30.932" endtime="20201115 23:01:30.933"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.927" endtime="20201115 23:01:30.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.936" endtime="20201115 23:01:30.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:30.939" endtime="20201115 23:01:30.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.938" endtime="20201115 23:01:30.959"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.934" endtime="20201115 23:01:30.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.571" endtime="20201115 23:01:30.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.569" endtime="20201115 23:01:30.960"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.568" endtime="20201115 23:01:30.961"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.963" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.972" endtime="20201115 23:01:30.990"></status>
</kw>
<msg timestamp="20201115 23:01:30.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.970" endtime="20201115 23:01:30.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:30.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:30.991" endtime="20201115 23:01:30.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:30.994" endtime="20201115 23:01:30.995"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.967" endtime="20201115 23:01:30.996"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.965" endtime="20201115 23:01:30.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.003" endtime="20201115 23:01:31.289"></status>
</kw>
<msg timestamp="20201115 23:01:31.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.001" endtime="20201115 23:01:31.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024098806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024170583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.294" endtime="20201115 23:01:31.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.302" endtime="20201115 23:01:31.303"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.999" endtime="20201115 23:01:31.304"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.997" endtime="20201115 23:01:31.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.309" level="INFO">${RESULT} = [{'time': 0.024170583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.177699999999856e-05, 'source_diff': 7.177699999999856e-05}, {'time': 0.024300069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.305" endtime="20201115 23:01:31.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.322" level="INFO">${ACCURACY} = {'diff': [7.177699999999856e-05, 7.223599999999983e-05, 7.24170000000017e-05, 7.215299999999841e-05, 7.233300000000081e-05, 7.220900000000016e-05, 7.182000000000022e-05, 7.252699999999931e-05, 7.25689...</msg>
<status status="PASS" starttime="20201115 23:01:31.310" endtime="20201115 23:01:31.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.326" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.325" endtime="20201115 23:01:31.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.329" level="INFO">VALUE: [7.177699999999856e-05, 7.223599999999983e-05, 7.24170000000017e-05, 7.215299999999841e-05, 7.233300000000081e-05, 7.220900000000016e-05, 7.182000000000022e-05, 7.252699999999931e-05, 7.256899999999802e-05, 7.195899999999991e-05, 7.258300000000106e-05, 7.184699999999988e-05, 7.229200000000158e-05, 7.165199999999844e-05, 7.216700000000145e-05, 7.213899999999884e-05, 7.234700000000038e-05, 7.172199999999976e-05, 7.186099999999945e-05, 7.227699999999906e-05, 7.165299999999791e-05, 7.216700000000145e-05, 7.212499999999927e-05, 7.195899999999991e-05, 7.241599999999876e-05, 7.240299999999866e-05, 7.209799999999961e-05, 7.230599999999768e-05, 7.194400000000087e-05, 7.254100000000235e-05, 7.251299999999974e-05, 7.245900000000041e-05, 7.190299999999816e-05, 7.204200000000133e-05, 7.209700000000013e-05, 7.209700000000013e-05, 7.176399999999847e-05, 7.227799999999854e-05, 7.232000000000072e-05, 7.251399999999922e-05, 7.183399999999979e-05, 7.227800000000201e-05, 7.240300000000213e-05, 7.215300000000188e-05, 7.195899999999991e-05, 7.236099999999995e-05, 7.227799999999854e-05, 7.19170000000012e-05, 7.240299999999866e-05, 7.219400000000112e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.328" endtime="20201115 23:01:31.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.323" endtime="20201115 23:01:31.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.332" endtime="20201115 23:01:31.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.335" endtime="20201115 23:01:31.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.334" endtime="20201115 23:01:31.355"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.330" endtime="20201115 23:01:31.356"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.964" endtime="20201115 23:01:31.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.962" endtime="20201115 23:01:31.357"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:30.961" endtime="20201115 23:01:31.357"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.359" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.367" endtime="20201115 23:01:31.386"></status>
</kw>
<msg timestamp="20201115 23:01:31.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.366" endtime="20201115 23:01:31.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.387" endtime="20201115 23:01:31.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.390" endtime="20201115 23:01:31.391"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.363" endtime="20201115 23:01:31.392"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.361" endtime="20201115 23:01:31.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.399" endtime="20201115 23:01:31.684"></status>
</kw>
<msg timestamp="20201115 23:01:31.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024184722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.397" endtime="20201115 23:01:31.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024111958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024184722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.688" endtime="20201115 23:01:31.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.696" endtime="20201115 23:01:31.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.394" endtime="20201115 23:01:31.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.393" endtime="20201115 23:01:31.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:31.703" level="INFO">${RESULT} = [{'time': 0.024184722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276399999999947e-05, 'source_diff': 7.276399999999947e-05}, {'time': 0.024320153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:31.700" endtime="20201115 23:01:31.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:31.716" level="INFO">${ACCURACY} = {'diff': [7.276399999999947e-05, 7.319500000000159e-05, 7.345800000000194e-05, 7.315299999999941e-05, 7.302800000000276e-05, 7.270800000000119e-05, 7.322199999999779e-05, 7.263900000000281e-05, 7.3084...</msg>
<status status="PASS" starttime="20201115 23:01:31.704" endtime="20201115 23:01:31.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.721" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201115 23:01:31.720" endtime="20201115 23:01:31.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.723" level="INFO">VALUE: [7.276399999999947e-05, 7.319500000000159e-05, 7.345800000000194e-05, 7.315299999999941e-05, 7.302800000000276e-05, 7.270800000000119e-05, 7.322199999999779e-05, 7.263900000000281e-05, 7.308400000000104e-05, 7.326399999999997e-05, 7.320800000000169e-05, 7.340299999999966e-05, 7.270900000000066e-05, 7.308300000000156e-05, 7.313899999999984e-05, 7.311099999999723e-05, 7.326299999999702e-05, 7.270800000000119e-05, 7.34439999999989e-05, 7.338900000000009e-05, 7.341699999999923e-05, 7.284700000000088e-05, 7.272200000000076e-05, 7.283300000000131e-05, 7.308400000000104e-05, 7.327799999999954e-05, 7.301399999999972e-05, 7.265300000000238e-05, 7.280599999999818e-05, 7.308400000000104e-05, 7.265299999999891e-05, 7.287500000000002e-05, 7.265300000000238e-05, 7.326399999999997e-05, 7.307000000000147e-05, 7.269500000000109e-05, 7.295800000000144e-05, 7.302799999999929e-05, 7.305500000000242e-05, 7.294500000000134e-05, 7.338900000000009e-05, 7.283300000000131e-05, 7.292999999999883e-05, 7.35560000000024e-05, 7.354199999999936e-05, 7.297200000000101e-05, 7.323600000000083e-05, 7.288899999999959e-05, 7.279199999999861e-05, 7.309700000000113e-05]</msg>
<status status="PASS" starttime="20201115 23:01:31.722" endtime="20201115 23:01:31.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.717" endtime="20201115 23:01:31.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.727" endtime="20201115 23:01:31.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:31.730" endtime="20201115 23:01:31.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.729" endtime="20201115 23:01:31.750"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.725" endtime="20201115 23:01:31.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.360" endtime="20201115 23:01:31.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.358" endtime="20201115 23:01:31.751"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.357" endtime="20201115 23:01:31.751"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.754" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.762" endtime="20201115 23:01:31.780"></status>
</kw>
<msg timestamp="20201115 23:01:31.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.760" endtime="20201115 23:01:31.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:31.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:31.781" endtime="20201115 23:01:31.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.784" endtime="20201115 23:01:31.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.758" endtime="20201115 23:01:31.786"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.756" endtime="20201115 23:01:31.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:31.793" endtime="20201115 23:01:32.079"></status>
</kw>
<msg timestamp="20201115 23:01:32.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023667986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:31.791" endtime="20201115 23:01:32.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023667986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.083" endtime="20201115 23:01:32.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.091" endtime="20201115 23:01:32.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.789" endtime="20201115 23:01:32.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.787" endtime="20201115 23:01:32.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.098" level="INFO">${RESULT} = [{'time': 0.023667986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.451399999999775e-05, 'source_diff': 7.451399999999775e-05}, {'time': 0.023803486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.095" endtime="20201115 23:01:32.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.112" level="INFO">${ACCURACY} = {'diff': [7.451399999999775e-05, 7.374999999999743e-05, 7.401400000000072e-05, 7.401399999999725e-05, 7.363900000000034e-05, 7.427799999999707e-05, 7.401399999999725e-05, 7.400000000000115e-05, 7.4278...</msg>
<status status="PASS" starttime="20201115 23:01:32.099" endtime="20201115 23:01:32.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.116" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.115" endtime="20201115 23:01:32.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.119" level="INFO">VALUE: [7.451399999999775e-05, 7.374999999999743e-05, 7.401400000000072e-05, 7.401399999999725e-05, 7.363900000000034e-05, 7.427799999999707e-05, 7.401399999999725e-05, 7.400000000000115e-05, 7.427800000000054e-05, 7.41249999999978e-05, 7.401400000000072e-05, 7.384699999999841e-05, 7.437499999999805e-05, 7.395799999999897e-05, 7.42500000000014e-05, 7.408400000000204e-05, 7.391699999999973e-05, 7.36249999999973e-05, 7.424999999999793e-05, 7.413900000000084e-05, 7.45699999999995e-05, 7.388900000000059e-05, 7.443000000000033e-05, 7.392999999999983e-05, 7.386100000000145e-05, 7.390300000000016e-05, 7.39439999999994e-05, 7.37500000000009e-05, 7.413800000000137e-05, 7.383300000000231e-05, 7.430599999999968e-05, 7.387499999999755e-05, 7.377800000000004e-05, 7.426400000000097e-05, 7.4069999999999e-05, 7.436200000000143e-05, 7.437499999999805e-05, 7.420800000000269e-05, 7.405499999999995e-05, 7.438900000000109e-05, 7.419499999999912e-05, 7.431899999999977e-05, 7.404199999999986e-05, 7.367999999999958e-05, 7.445799999999947e-05, 7.458300000000306e-05, 7.449999999999818e-05, 7.445800000000294e-05, 7.370800000000219e-05, 7.433299999999934e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.117" endtime="20201115 23:01:32.119"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.112" endtime="20201115 23:01:32.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.122" endtime="20201115 23:01:32.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.125" endtime="20201115 23:01:32.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.124" endtime="20201115 23:01:32.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.121" endtime="20201115 23:01:32.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.754" endtime="20201115 23:01:32.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.753" endtime="20201115 23:01:32.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:31.752" endtime="20201115 23:01:32.147"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.149" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.157" endtime="20201115 23:01:32.176"></status>
</kw>
<msg timestamp="20201115 23:01:32.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.156" endtime="20201115 23:01:32.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.178" endtime="20201115 23:01:32.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.180" endtime="20201115 23:01:32.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.153" endtime="20201115 23:01:32.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.151" endtime="20201115 23:01:32.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.189" endtime="20201115 23:01:32.475"></status>
</kw>
<msg timestamp="20201115 23:01:32.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024576194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.188" endtime="20201115 23:01:32.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024576194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.479" endtime="20201115 23:01:32.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.487" endtime="20201115 23:01:32.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.185" endtime="20201115 23:01:32.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.183" endtime="20201115 23:01:32.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.494" level="INFO">${RESULT} = [{'time': 0.024576194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.499999999999868e-05, 'source_diff': 7.499999999999868e-05}, {'time': 0.024698694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.491" endtime="20201115 23:01:32.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.509" level="INFO">${ACCURACY} = {'diff': [7.499999999999868e-05, 7.526299999999903e-05, 7.465300000000091e-05, 7.522299999999926e-05, 7.50830000000001e-05, 7.538899999999862e-05, 7.520899999999969e-05, 7.556899999999755e-05, 7.55279...</msg>
<status status="PASS" starttime="20201115 23:01:32.495" endtime="20201115 23:01:32.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.513" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.512" endtime="20201115 23:01:32.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.516" level="INFO">VALUE: [7.499999999999868e-05, 7.526299999999903e-05, 7.465300000000091e-05, 7.522299999999926e-05, 7.50830000000001e-05, 7.538899999999862e-05, 7.520899999999969e-05, 7.556899999999755e-05, 7.552799999999832e-05, 7.494499999999987e-05, 7.55830000000006e-05, 7.477799999999757e-05, 7.487499999999855e-05, 7.470800000000319e-05, 7.5457999999997e-05, 7.497299999999901e-05, 7.468000000000058e-05, 7.562500000000277e-05, 7.512500000000227e-05, 7.52639999999985e-05, 7.48050000000007e-05, 7.497199999999954e-05, 7.466600000000101e-05, 7.551399999999875e-05, 7.50830000000001e-05, 7.497199999999954e-05, 7.513899999999837e-05, 7.473699999999833e-05, 7.532000000000025e-05, 7.465299999999744e-05, 7.490300000000116e-05, 7.545800000000047e-05, 7.526400000000197e-05, 7.55700000000005e-05, 7.513900000000184e-05, 7.495799999999997e-05, 7.470799999999972e-05, 7.551399999999875e-05, 7.54029999999982e-05, 7.48050000000007e-05, 7.545800000000047e-05, 7.488899999999812e-05, 7.470799999999972e-05, 7.481900000000027e-05, 7.508399999999957e-05, 7.483299999999984e-05, 7.488899999999812e-05, 7.481900000000027e-05, 7.491700000000073e-05, 7.476400000000147e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.515" endtime="20201115 23:01:32.516"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.510" endtime="20201115 23:01:32.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.519" endtime="20201115 23:01:32.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.522" endtime="20201115 23:01:32.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.521" endtime="20201115 23:01:32.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.518" endtime="20201115 23:01:32.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.150" endtime="20201115 23:01:32.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.148" endtime="20201115 23:01:32.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.147" endtime="20201115 23:01:32.544"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.546" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.554" endtime="20201115 23:01:32.572"></status>
</kw>
<msg timestamp="20201115 23:01:32.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.553" endtime="20201115 23:01:32.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.574" endtime="20201115 23:01:32.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.576" endtime="20201115 23:01:32.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.550" endtime="20201115 23:01:32.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.548" endtime="20201115 23:01:32.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.585" endtime="20201115 23:01:32.870"></status>
</kw>
<msg timestamp="20201115 23:01:32.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023639486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.584" endtime="20201115 23:01:32.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023639486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.874" endtime="20201115 23:01:32.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.888" endtime="20201115 23:01:32.889"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.581" endtime="20201115 23:01:32.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.579" endtime="20201115 23:01:32.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:32.894" level="INFO">${RESULT} = [{'time': 0.023639486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.584700000000041e-05, 'source_diff': 7.584700000000041e-05}, {'time': 0.023765986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:32.891" endtime="20201115 23:01:32.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:32.908" level="INFO">${ACCURACY} = {'diff': [7.584700000000041e-05, 7.629199999999864e-05, 7.633400000000082e-05, 7.631999999999778e-05, 7.623600000000036e-05, 7.566699999999801e-05, 7.573599999999986e-05, 7.583300000000084e-05, 7.6000...</msg>
<status status="PASS" starttime="20201115 23:01:32.895" endtime="20201115 23:01:32.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.913" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201115 23:01:32.912" endtime="20201115 23:01:32.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.915" level="INFO">VALUE: [7.584700000000041e-05, 7.629199999999864e-05, 7.633400000000082e-05, 7.631999999999778e-05, 7.623600000000036e-05, 7.566699999999801e-05, 7.573599999999986e-05, 7.583300000000084e-05, 7.600000000000315e-05, 7.569400000000115e-05, 7.587499999999955e-05, 7.64029999999992e-05, 7.651399999999975e-05, 7.582000000000075e-05, 7.573699999999933e-05, 7.651399999999975e-05, 7.650000000000018e-05, 7.580600000000118e-05, 7.651400000000322e-05, 7.620800000000122e-05, 7.616699999999851e-05, 7.613899999999937e-05, 7.572200000000029e-05, 7.615300000000241e-05, 7.566599999999854e-05, 7.573599999999986e-05, 7.630499999999873e-05, 7.565299999999844e-05, 7.59440000000014e-05, 7.595800000000097e-05, 7.602800000000229e-05, 7.576400000000247e-05, 7.570799999999725e-05, 7.583299999999737e-05, 7.661100000000073e-05, 7.591599999999879e-05, 7.654200000000236e-05, 7.659800000000064e-05, 7.577799999999857e-05, 7.622200000000079e-05, 7.587499999999955e-05, 7.59310000000013e-05, 7.577799999999857e-05, 7.591700000000173e-05, 7.577700000000256e-05, 7.640199999999972e-05, 7.645800000000147e-05, 7.590300000000216e-05, 7.641699999999876e-05, 7.570800000000072e-05]</msg>
<status status="PASS" starttime="20201115 23:01:32.914" endtime="20201115 23:01:32.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.909" endtime="20201115 23:01:32.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.919" endtime="20201115 23:01:32.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:32.922" endtime="20201115 23:01:32.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.921" endtime="20201115 23:01:32.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.917" endtime="20201115 23:01:32.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.547" endtime="20201115 23:01:32.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.545" endtime="20201115 23:01:32.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.544" endtime="20201115 23:01:32.943"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.946" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.954" endtime="20201115 23:01:32.972"></status>
</kw>
<msg timestamp="20201115 23:01:32.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.952" endtime="20201115 23:01:32.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:32.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:32.974" endtime="20201115 23:01:32.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.976" endtime="20201115 23:01:32.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.950" endtime="20201115 23:01:32.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.948" endtime="20201115 23:01:32.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:32.986" endtime="20201115 23:01:33.301"></status>
</kw>
<msg timestamp="20201115 23:01:33.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023797292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:32.984" endtime="20201115 23:01:33.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023797292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023874292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.306" endtime="20201115 23:01:33.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.314" endtime="20201115 23:01:33.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.981" endtime="20201115 23:01:33.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.980" endtime="20201115 23:01:33.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.321" level="INFO">${RESULT} = [{'time': 0.023874292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.699999999999721e-05, 'source_diff': 7.699999999999721e-05}, {'time': 0.023999764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.317" endtime="20201115 23:01:33.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.334" level="INFO">${ACCURACY} = {'diff': [7.699999999999721e-05, 7.71250000000008e-05, 7.724999999999746e-05, 7.661099999999726e-05, 7.669400000000215e-05, 7.688900000000012e-05, 7.691599999999979e-05, 7.66250000000003e-05, 7.726400...</msg>
<status status="PASS" starttime="20201115 23:01:33.322" endtime="20201115 23:01:33.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.339" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.338" endtime="20201115 23:01:33.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.341" level="INFO">VALUE: [7.699999999999721e-05, 7.71250000000008e-05, 7.724999999999746e-05, 7.661099999999726e-05, 7.669400000000215e-05, 7.688900000000012e-05, 7.691599999999979e-05, 7.66250000000003e-05, 7.72640000000005e-05, 7.747200000000204e-05, 7.750000000000118e-05, 7.701400000000025e-05, 7.673700000000033e-05, 7.683299999999837e-05, 7.700000000000068e-05, 7.701400000000025e-05, 7.72640000000005e-05, 7.74449999999989e-05, 7.741699999999976e-05, 7.706999999999853e-05, 7.709700000000166e-05, 7.738900000000062e-05, 7.69579999999985e-05, 7.744500000000237e-05, 7.71250000000008e-05, 7.691699999999926e-05, 7.673600000000086e-05, 7.730499999999974e-05, 7.731999999999878e-05, 7.68189999999988e-05, 7.73189999999993e-05, 7.688900000000012e-05, 7.675000000000043e-05, 7.74449999999989e-05, 7.756899999999955e-05, 7.69449999999984e-05, 7.750000000000118e-05, 7.71250000000008e-05, 7.694500000000187e-05, 7.736099999999801e-05, 7.719400000000265e-05, 7.684700000000141e-05, 7.706899999999905e-05, 7.66250000000003e-05, 7.751400000000075e-05, 7.706899999999905e-05, 7.682000000000175e-05, 7.725000000000093e-05, 7.69310000000023e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.340" endtime="20201115 23:01:33.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.335" endtime="20201115 23:01:33.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.344" endtime="20201115 23:01:33.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.348" endtime="20201115 23:01:33.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.346" endtime="20201115 23:01:33.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.343" endtime="20201115 23:01:33.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.946" endtime="20201115 23:01:33.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.945" endtime="20201115 23:01:33.369"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:32.944" endtime="20201115 23:01:33.369"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.372" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.380" endtime="20201115 23:01:33.398"></status>
</kw>
<msg timestamp="20201115 23:01:33.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.378" endtime="20201115 23:01:33.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.399" endtime="20201115 23:01:33.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.402" endtime="20201115 23:01:33.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.375" endtime="20201115 23:01:33.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.373" endtime="20201115 23:01:33.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.411" endtime="20201115 23:01:33.697"></status>
</kw>
<msg timestamp="20201115 23:01:33.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023661472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.410" endtime="20201115 23:01:33.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023661472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.701" endtime="20201115 23:01:33.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.709" endtime="20201115 23:01:33.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.407" endtime="20201115 23:01:33.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.406" endtime="20201115 23:01:33.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:33.716" level="INFO">${RESULT} = [{'time': 0.023661472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.774999999999796e-05, 'source_diff': 7.774999999999796e-05}, {'time': 0.023790931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:33.713" endtime="20201115 23:01:33.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:33.730" level="INFO">${ACCURACY} = {'diff': [7.774999999999796e-05, 7.811200000000171e-05, 7.801399999999778e-05, 7.806900000000006e-05, 7.858300000000012e-05, 7.831999999999978e-05, 7.82640000000015e-05, 7.768099999999958e-05, 7.84449...</msg>
<status status="PASS" starttime="20201115 23:01:33.717" endtime="20201115 23:01:33.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.734" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201115 23:01:33.733" endtime="20201115 23:01:33.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.737" level="INFO">VALUE: [7.774999999999796e-05, 7.811200000000171e-05, 7.801399999999778e-05, 7.806900000000006e-05, 7.858300000000012e-05, 7.831999999999978e-05, 7.82640000000015e-05, 7.768099999999958e-05, 7.84449999999999e-05, 7.786199999999799e-05, 7.847200000000304e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.843100000000033e-05, 7.793000000000036e-05, 7.783399999999885e-05, 7.848599999999914e-05, 7.852800000000132e-05, 7.82770000000016e-05, 7.851400000000175e-05, 7.83190000000003e-05, 7.772199999999882e-05, 7.843000000000086e-05, 7.79449999999994e-05, 7.756899999999955e-05, 7.769499999999915e-05, 7.841599999999782e-05, 7.786100000000198e-05, 7.849999999999871e-05, 7.818100000000008e-05, 7.7764000000001e-05, 7.849999999999871e-05, 7.788900000000112e-05, 7.800000000000168e-05, 7.83190000000003e-05, 7.83190000000003e-05, 7.826399999999803e-05, 7.77229999999983e-05, 7.772199999999882e-05, 7.856900000000056e-05, 7.836100000000248e-05, 7.849999999999871e-05, 7.75969999999987e-05, 7.854099999999795e-05, 7.823600000000236e-05, 7.774999999999796e-05, 7.830600000000021e-05, 7.772199999999882e-05, 7.799999999999821e-05, 7.75969999999987e-05]</msg>
<status status="PASS" starttime="20201115 23:01:33.735" endtime="20201115 23:01:33.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.731" endtime="20201115 23:01:33.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.740" endtime="20201115 23:01:33.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:33.743" endtime="20201115 23:01:33.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.742" endtime="20201115 23:01:33.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.738" endtime="20201115 23:01:33.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.372" endtime="20201115 23:01:33.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.370" endtime="20201115 23:01:33.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.370" endtime="20201115 23:01:33.764"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.767" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.775" endtime="20201115 23:01:33.795"></status>
</kw>
<msg timestamp="20201115 23:01:33.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.774" endtime="20201115 23:01:33.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:33.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:33.796" endtime="20201115 23:01:33.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.799" endtime="20201115 23:01:33.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.771" endtime="20201115 23:01:33.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.769" endtime="20201115 23:01:33.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:33.808" endtime="20201115 23:01:34.093"></status>
</kw>
<msg timestamp="20201115 23:01:34.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:33.806" endtime="20201115 23:01:34.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025022778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.098" endtime="20201115 23:01:34.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.106" endtime="20201115 23:01:34.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.804" endtime="20201115 23:01:34.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.802" endtime="20201115 23:01:34.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.112" level="INFO">${RESULT} = [{'time': 0.025101583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.880500000000124e-05, 'source_diff': 7.880500000000124e-05}, {'time': 0.025236028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.109" endtime="20201115 23:01:34.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.127" level="INFO">${ACCURACY} = {'diff': [7.880500000000124e-05, 7.923599999999989e-05, 7.884799999999942e-05, 7.949999999999971e-05, 7.91389999999989e-05, 7.956900000000156e-05, 7.92640000000025e-05, 7.876399999999853e-05, 7.954200...</msg>
<status status="PASS" starttime="20201115 23:01:34.113" endtime="20201115 23:01:34.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.131" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.130" endtime="20201115 23:01:34.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.134" level="INFO">VALUE: [7.880500000000124e-05, 7.923599999999989e-05, 7.884799999999942e-05, 7.949999999999971e-05, 7.91389999999989e-05, 7.956900000000156e-05, 7.92640000000025e-05, 7.876399999999853e-05, 7.954200000000189e-05, 7.931899999999784e-05, 7.907000000000053e-05, 7.888899999999865e-05, 7.952799999999885e-05, 7.911099999999976e-05, 7.884699999999994e-05, 7.918099999999761e-05, 7.897200000000007e-05, 7.888899999999865e-05, 7.887499999999908e-05, 7.926399999999903e-05, 7.888899999999865e-05, 7.938899999999915e-05, 7.940299999999872e-05, 7.937499999999958e-05, 7.936100000000001e-05, 7.880499999999777e-05, 7.93329999999974e-05, 7.863900000000187e-05, 7.929199999999817e-05, 7.947200000000057e-05, 7.955499999999852e-05, 7.906999999999706e-05, 7.891600000000179e-05, 7.901399999999878e-05, 7.901400000000225e-05, 7.862499999999883e-05, 7.907000000000053e-05, 7.882000000000028e-05, 7.882000000000028e-05, 7.902699999999888e-05, 7.887499999999908e-05, 7.94450000000009e-05, 7.883300000000037e-05, 7.865200000000197e-05, 7.90840000000001e-05, 7.933400000000035e-05, 7.932000000000078e-05, 7.869400000000415e-05, 7.956900000000156e-05, 7.9151999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.132" endtime="20201115 23:01:34.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.128" endtime="20201115 23:01:34.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.137" endtime="20201115 23:01:34.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.140" endtime="20201115 23:01:34.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.139" endtime="20201115 23:01:34.160"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.135" endtime="20201115 23:01:34.161"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.767" endtime="20201115 23:01:34.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.766" endtime="20201115 23:01:34.162"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:33.765" endtime="20201115 23:01:34.162"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.164" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.173" endtime="20201115 23:01:34.191"></status>
</kw>
<msg timestamp="20201115 23:01:34.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.171" endtime="20201115 23:01:34.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.192" endtime="20201115 23:01:34.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.195" endtime="20201115 23:01:34.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.168" endtime="20201115 23:01:34.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.166" endtime="20201115 23:01:34.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.204" endtime="20201115 23:01:34.490"></status>
</kw>
<msg timestamp="20201115 23:01:34.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024123708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.202" endtime="20201115 23:01:34.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024123708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.494" endtime="20201115 23:01:34.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.503" endtime="20201115 23:01:34.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.200" endtime="20201115 23:01:34.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.198" endtime="20201115 23:01:34.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.509" level="INFO">${RESULT} = [{'time': 0.024203583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.987500000000008e-05, 'source_diff': 7.987500000000008e-05}, {'time': 0.024345014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.506" endtime="20201115 23:01:34.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.523" level="INFO">${ACCURACY} = {'diff': [7.987500000000008e-05, 8.023600000000089e-05, 7.98190000000018e-05, 8.048600000000114e-05, 8.019399999999871e-05, 7.986100000000051e-05, 8.050000000000071e-05, 7.994399999999846e-05, 7.99720...</msg>
<status status="PASS" starttime="20201115 23:01:34.510" endtime="20201115 23:01:34.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.527" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.526" endtime="20201115 23:01:34.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.530" level="INFO">VALUE: [7.987500000000008e-05, 8.023600000000089e-05, 7.98190000000018e-05, 8.048600000000114e-05, 8.019399999999871e-05, 7.986100000000051e-05, 8.050000000000071e-05, 7.994399999999846e-05, 7.997200000000107e-05, 7.96389999999994e-05, 8.025000000000046e-05, 8.007000000000153e-05, 8.016599999999957e-05, 7.961100000000026e-05, 8.037499999999712e-05, 8.042999999999939e-05, 7.970799999999778e-05, 8.005600000000196e-05, 8.001399999999978e-05, 7.993100000000183e-05, 7.961100000000026e-05, 8.050000000000071e-05, 7.99580000000015e-05, 8.037500000000058e-05, 8.023600000000089e-05, 8.01389999999999e-05, 7.970900000000072e-05, 8.017999999999914e-05, 8.037499999999712e-05, 8.05970000000017e-05, 7.990199999999975e-05, 8.022200000000132e-05, 8.038800000000068e-05, 8.011100000000076e-05, 8.049999999999724e-05, 7.980599999999824e-05, 8.01109999999973e-05, 8.052799999999985e-05, 7.997200000000107e-05, 7.972200000000082e-05, 7.962499999999983e-05, 8.01109999999973e-05, 7.980600000000171e-05, 8.030499999999927e-05, 8.048600000000114e-05, 7.965299999999897e-05, 8.036100000000101e-05, 8.000000000000021e-05, 7.998600000000064e-05, 7.976399999999953e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.528" endtime="20201115 23:01:34.530"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.524" endtime="20201115 23:01:34.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.533" endtime="20201115 23:01:34.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.537" endtime="20201115 23:01:34.556"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.535" endtime="20201115 23:01:34.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.532" endtime="20201115 23:01:34.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.165" endtime="20201115 23:01:34.557"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.163" endtime="20201115 23:01:34.558"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.162" endtime="20201115 23:01:34.558"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.560" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.568" endtime="20201115 23:01:34.587"></status>
</kw>
<msg timestamp="20201115 23:01:34.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.567" endtime="20201115 23:01:34.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.588" endtime="20201115 23:01:34.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.591" endtime="20201115 23:01:34.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.564" endtime="20201115 23:01:34.593"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.562" endtime="20201115 23:01:34.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.600" endtime="20201115 23:01:34.886"></status>
</kw>
<msg timestamp="20201115 23:01:34.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.598" endtime="20201115 23:01:34.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023721778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023803222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:34.890" endtime="20201115 23:01:34.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.898" endtime="20201115 23:01:34.899"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.596" endtime="20201115 23:01:34.900"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.594" endtime="20201115 23:01:34.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:34.904" level="INFO">${RESULT} = [{'time': 0.023803222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.144399999999996e-05, 'source_diff': 8.144399999999996e-05}, {'time': 0.023941694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:34.901" endtime="20201115 23:01:34.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:34.918" level="INFO">${ACCURACY} = {'diff': [8.144399999999996e-05, 8.077700000000063e-05, 8.088900000000065e-05, 8.124999999999799e-05, 8.155500000000052e-05, 8.070800000000225e-05, 8.124999999999799e-05, 8.131899999999984e-05, 8.0750...</msg>
<status status="PASS" starttime="20201115 23:01:34.905" endtime="20201115 23:01:34.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.923" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201115 23:01:34.921" endtime="20201115 23:01:34.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.925" level="INFO">VALUE: [8.144399999999996e-05, 8.077700000000063e-05, 8.088900000000065e-05, 8.124999999999799e-05, 8.155500000000052e-05, 8.070800000000225e-05, 8.124999999999799e-05, 8.131899999999984e-05, 8.075000000000096e-05, 8.16109999999988e-05, 8.108299999999916e-05, 8.112500000000133e-05, 8.073599999999792e-05, 8.115300000000047e-05, 8.062499999999737e-05, 8.101400000000078e-05, 8.062499999999737e-05, 8.127700000000113e-05, 8.138900000000115e-05, 8.12780000000006e-05, 8.09719999999986e-05, 8.143000000000039e-05, 8.130599999999974e-05, 8.131999999999931e-05, 8.06109999999978e-05, 8.074999999999749e-05, 8.066600000000007e-05, 8.119500000000265e-05, 8.076400000000053e-05, 8.09589999999985e-05, 8.122200000000232e-05, 8.098599999999817e-05, 8.07910000000002e-05, 8.120899999999875e-05, 8.112500000000133e-05, 8.084699999999848e-05, 8.112500000000133e-05, 8.101400000000078e-05, 8.083400000000185e-05, 8.099999999999774e-05, 8.074999999999749e-05, 8.082000000000228e-05, 8.088900000000065e-05, 8.152800000000085e-05, 8.137500000000158e-05, 8.074999999999749e-05, 8.131899999999984e-05, 8.058300000000213e-05, 8.126399999999756e-05, 8.087500000000108e-05]</msg>
<status status="PASS" starttime="20201115 23:01:34.924" endtime="20201115 23:01:34.926"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.919" endtime="20201115 23:01:34.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.929" endtime="20201115 23:01:34.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:34.932" endtime="20201115 23:01:34.951"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.930" endtime="20201115 23:01:34.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.927" endtime="20201115 23:01:34.952"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.561" endtime="20201115 23:01:34.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.559" endtime="20201115 23:01:34.953"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.558" endtime="20201115 23:01:34.953"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.956" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.964" endtime="20201115 23:01:34.982"></status>
</kw>
<msg timestamp="20201115 23:01:34.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.962" endtime="20201115 23:01:34.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:34.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:34.984" endtime="20201115 23:01:34.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.986" endtime="20201115 23:01:34.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.960" endtime="20201115 23:01:34.988"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.958" endtime="20201115 23:01:34.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:34.995" endtime="20201115 23:01:35.280"></status>
</kw>
<msg timestamp="20201115 23:01:35.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:34.994" endtime="20201115 23:01:35.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0236755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:35.284" endtime="20201115 23:01:35.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.293" endtime="20201115 23:01:35.294"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.991" endtime="20201115 23:01:35.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.989" endtime="20201115 23:01:35.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.300" level="INFO">${RESULT} = [{'time': 0.0236755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.19719999999996e-05, 'source_diff': 8.19719999999996e-05}, {'time': 0.023820917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201115 23:01:35.296" endtime="20201115 23:01:35.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.313" level="INFO">${ACCURACY} = {'diff': [8.19719999999996e-05, 8.24170000000013e-05, 8.166600000000107e-05, 8.230500000000127e-05, 8.172200000000282e-05, 8.236099999999955e-05, 8.193100000000036e-05, 8.202800000000135e-05, 8.181999...</msg>
<status status="PASS" starttime="20201115 23:01:35.301" endtime="20201115 23:01:35.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.318" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.317" endtime="20201115 23:01:35.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.320" level="INFO">VALUE: [8.19719999999996e-05, 8.24170000000013e-05, 8.166600000000107e-05, 8.230500000000127e-05, 8.172200000000282e-05, 8.236099999999955e-05, 8.193100000000036e-05, 8.202800000000135e-05, 8.181999999999981e-05, 8.172199999999935e-05, 8.170899999999925e-05, 8.24170000000013e-05, 8.173599999999892e-05, 8.193100000000036e-05, 8.248599999999967e-05, 8.197200000000307e-05, 8.199999999999874e-05, 8.222299999999932e-05, 8.255499999999805e-05, 8.18329999999999e-05, 8.168100000000011e-05, 8.24720000000001e-05, 8.24170000000013e-05, 8.199999999999874e-05, 8.17910000000012e-05, 8.212499999999887e-05, 8.191600000000132e-05, 8.198599999999917e-05, 8.224999999999899e-05, 8.193100000000036e-05, 8.218000000000114e-05, 8.193100000000036e-05, 8.169499999999968e-05, 8.16109999999988e-05, 8.254200000000142e-05, 8.212500000000234e-05, 8.240299999999826e-05, 8.223599999999942e-05, 8.16109999999988e-05, 8.222199999999985e-05, 8.168100000000011e-05, 8.255600000000099e-05, 8.252800000000185e-05, 8.216699999999758e-05, 8.238899999999869e-05, 8.168000000000064e-05, 8.236099999999955e-05, 8.205500000000102e-05, 8.16109999999988e-05, 8.254099999999848e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.319" endtime="20201115 23:01:35.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.314" endtime="20201115 23:01:35.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.324" endtime="20201115 23:01:35.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.328" endtime="20201115 23:01:35.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.326" endtime="20201115 23:01:35.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.322" endtime="20201115 23:01:35.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.956" endtime="20201115 23:01:35.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.954" endtime="20201115 23:01:35.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:34.954" endtime="20201115 23:01:35.349"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.351" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.360" endtime="20201115 23:01:35.379"></status>
</kw>
<msg timestamp="20201115 23:01:35.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.358" endtime="20201115 23:01:35.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.380" endtime="20201115 23:01:35.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.383" endtime="20201115 23:01:35.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.355" endtime="20201115 23:01:35.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.353" endtime="20201115 23:01:35.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.392" endtime="20201115 23:01:35.677"></status>
</kw>
<msg timestamp="20201115 23:01:35.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.390" endtime="20201115 23:01:35.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024660653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.681" endtime="20201115 23:01:35.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.689" endtime="20201115 23:01:35.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.388" endtime="20201115 23:01:35.691"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.386" endtime="20201115 23:01:35.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:35.696" level="INFO">${RESULT} = [{'time': 0.024660653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.333400000000088e-05, 'source_diff': 8.333400000000088e-05}, {'time': 0.024807042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:35.693" endtime="20201115 23:01:35.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:35.711" level="INFO">${ACCURACY} = {'diff': [8.333400000000088e-05, 8.25979999999997e-05, 8.320800000000128e-05, 8.330600000000174e-05, 8.291699999999833e-05, 8.293000000000189e-05, 8.268100000000111e-05, 8.280600000000124e-05, 8.28610...</msg>
<status status="PASS" starttime="20201115 23:01:35.697" endtime="20201115 23:01:35.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.715" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201115 23:01:35.714" endtime="20201115 23:01:35.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.718" level="INFO">VALUE: [8.333400000000088e-05, 8.25979999999997e-05, 8.320800000000128e-05, 8.330600000000174e-05, 8.291699999999833e-05, 8.293000000000189e-05, 8.268100000000111e-05, 8.280600000000124e-05, 8.286100000000005e-05, 8.318100000000161e-05, 8.315199999999953e-05, 8.324999999999999e-05, 8.261100000000327e-05, 8.298600000000017e-05, 8.304200000000192e-05, 8.334700000000098e-05, 8.323600000000042e-05, 8.273599999999992e-05, 8.292999999999842e-05, 8.31659999999991e-05, 8.324999999999999e-05, 8.348600000000067e-05, 8.327799999999913e-05, 8.26659999999986e-05, 8.348600000000067e-05, 8.312499999999987e-05, 8.295799999999756e-05, 8.336100000000055e-05, 8.344399999999849e-05, 8.262500000000284e-05, 8.287499999999962e-05, 8.341599999999935e-05, 8.29170000000018e-05, 8.31110000000003e-05, 8.29720000000006e-05, 8.283399999999691e-05, 8.341699999999883e-05, 8.298600000000017e-05, 8.274999999999949e-05, 8.352799999999938e-05, 8.3152999999999e-05, 8.286199999999952e-05, 8.338899999999969e-05, 8.268100000000111e-05, 8.277799999999863e-05, 8.26109999999998e-05, 8.311099999999683e-05, 8.266699999999808e-05, 8.319400000000171e-05, 8.272200000000035e-05]</msg>
<status status="PASS" starttime="20201115 23:01:35.716" endtime="20201115 23:01:35.718"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.711" endtime="20201115 23:01:35.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.721" endtime="20201115 23:01:35.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:35.724" endtime="20201115 23:01:35.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.723" endtime="20201115 23:01:35.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.719" endtime="20201115 23:01:35.744"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.352" endtime="20201115 23:01:35.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.350" endtime="20201115 23:01:35.745"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.349" endtime="20201115 23:01:35.745"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.748" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.756" endtime="20201115 23:01:35.774"></status>
</kw>
<msg timestamp="20201115 23:01:35.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.754" endtime="20201115 23:01:35.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:35.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:35.776" endtime="20201115 23:01:35.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.778" endtime="20201115 23:01:35.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.752" endtime="20201115 23:01:35.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.750" endtime="20201115 23:01:35.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:35.788" endtime="20201115 23:01:36.073"></status>
</kw>
<msg timestamp="20201115 23:01:36.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:35.786" endtime="20201115 23:01:36.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.077" endtime="20201115 23:01:36.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.085" endtime="20201115 23:01:36.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.783" endtime="20201115 23:01:36.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.781" endtime="20201115 23:01:36.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.092" level="INFO">${RESULT} = [{'time': 0.023633944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402700000000041e-05, 'source_diff': 8.402700000000041e-05}, {'time': 0.023782347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.089" endtime="20201115 23:01:36.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.106" level="INFO">${ACCURACY} = {'diff': [8.402700000000041e-05, 8.397199999999813e-05, 8.458299999999919e-05, 8.401400000000031e-05, 8.374999999999702e-05, 8.363899999999994e-05, 8.438900000000069e-05, 8.407000000000206e-05, 8.4541...</msg>
<status status="PASS" starttime="20201115 23:01:36.093" endtime="20201115 23:01:36.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.110" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.109" endtime="20201115 23:01:36.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.113" level="INFO">VALUE: [8.402700000000041e-05, 8.397199999999813e-05, 8.458299999999919e-05, 8.401400000000031e-05, 8.374999999999702e-05, 8.363899999999994e-05, 8.438900000000069e-05, 8.407000000000206e-05, 8.454199999999995e-05, 8.413900000000044e-05, 8.381900000000234e-05, 8.36529999999995e-05, 8.425000000000099e-05, 8.41249999999974e-05, 8.426400000000056e-05, 8.456899999999962e-05, 8.387500000000062e-05, 8.373599999999745e-05, 8.447199999999863e-05, 8.373600000000092e-05, 8.430599999999927e-05, 8.397300000000107e-05, 8.386200000000052e-05, 8.43049999999998e-05, 8.393100000000236e-05, 8.411099999999783e-05, 8.404099999999998e-05, 8.409699999999826e-05, 8.444399999999949e-05, 8.383299999999844e-05, 8.37919999999992e-05, 8.365200000000003e-05, 8.398700000000064e-05, 8.429100000000023e-05, 8.44309999999994e-05, 8.418099999999915e-05, 8.440300000000026e-05, 8.433399999999841e-05, 8.404099999999998e-05, 8.438900000000069e-05, 8.448600000000167e-05, 8.384700000000148e-05, 8.393100000000236e-05, 8.44859999999982e-05, 8.404199999999945e-05, 8.43049999999998e-05, 8.398700000000064e-05, 8.424999999999752e-05, 8.416700000000304e-05, 8.431899999999937e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.111" endtime="20201115 23:01:36.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.106" endtime="20201115 23:01:36.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.116" endtime="20201115 23:01:36.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.119" endtime="20201115 23:01:36.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.118" endtime="20201115 23:01:36.139"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.114" endtime="20201115 23:01:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.748" endtime="20201115 23:01:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.746" endtime="20201115 23:01:36.140"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:35.746" endtime="20201115 23:01:36.140"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.143" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.151" endtime="20201115 23:01:36.169"></status>
</kw>
<msg timestamp="20201115 23:01:36.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.149" endtime="20201115 23:01:36.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.171" endtime="20201115 23:01:36.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.174" endtime="20201115 23:01:36.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.147" endtime="20201115 23:01:36.176"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.145" endtime="20201115 23:01:36.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.183" endtime="20201115 23:01:36.469"></status>
</kw>
<msg timestamp="20201115 23:01:36.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023642931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.182" endtime="20201115 23:01:36.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023642931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.473" endtime="20201115 23:01:36.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.481" endtime="20201115 23:01:36.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.179" endtime="20201115 23:01:36.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.177" endtime="20201115 23:01:36.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.488" level="INFO">${RESULT} = [{'time': 0.023642931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.474999999999802e-05, 'source_diff': 8.474999999999802e-05}, {'time': 0.023775361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.484" endtime="20201115 23:01:36.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.501" level="INFO">${ACCURACY} = {'diff': [8.474999999999802e-05, 8.473599999999845e-05, 8.53469999999995e-05, 8.53050000000008e-05, 8.509699999999926e-05, 8.473600000000192e-05, 8.554200000000095e-05, 8.480599999999977e-05, 8.479200...</msg>
<status status="PASS" starttime="20201115 23:01:36.489" endtime="20201115 23:01:36.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.506" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.505" endtime="20201115 23:01:36.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.508" level="INFO">VALUE: [8.474999999999802e-05, 8.473599999999845e-05, 8.53469999999995e-05, 8.53050000000008e-05, 8.509699999999926e-05, 8.473600000000192e-05, 8.554200000000095e-05, 8.480599999999977e-05, 8.47920000000002e-05, 8.487499999999815e-05, 8.46110000000018e-05, 8.462500000000137e-05, 8.509699999999926e-05, 8.490300000000076e-05, 8.513899999999797e-05, 8.487500000000162e-05, 8.491700000000033e-05, 8.515199999999806e-05, 8.487499999999815e-05, 8.490300000000076e-05, 8.558399999999966e-05, 8.529199999999723e-05, 8.536100000000255e-05, 8.481999999999934e-05, 8.465299999999704e-05, 8.536099999999908e-05, 8.491600000000085e-05, 8.541699999999736e-05, 8.461099999999833e-05, 8.541700000000083e-05, 8.548600000000267e-05, 8.554199999999748e-05, 8.547199999999963e-05, 8.49309999999999e-05, 8.461099999999833e-05, 8.473599999999845e-05, 8.506900000000012e-05, 8.505600000000002e-05, 8.531900000000037e-05, 8.472199999999888e-05, 8.529100000000123e-05, 8.545800000000006e-05, 8.534800000000245e-05, 8.516700000000058e-05, 8.523599999999895e-05, 8.466700000000008e-05, 8.502700000000141e-05, 8.458399999999866e-05, 8.53469999999995e-05, 8.504199999999698e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.507" endtime="20201115 23:01:36.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.502" endtime="20201115 23:01:36.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.511" endtime="20201115 23:01:36.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.515" endtime="20201115 23:01:36.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.513" endtime="20201115 23:01:36.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.510" endtime="20201115 23:01:36.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.143" endtime="20201115 23:01:36.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.141" endtime="20201115 23:01:36.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.141" endtime="20201115 23:01:36.536"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.538" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.547" endtime="20201115 23:01:36.566"></status>
</kw>
<msg timestamp="20201115 23:01:36.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.545" endtime="20201115 23:01:36.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.567" endtime="20201115 23:01:36.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.570" endtime="20201115 23:01:36.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.542" endtime="20201115 23:01:36.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.540" endtime="20201115 23:01:36.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.579" endtime="20201115 23:01:36.864"></status>
</kw>
<msg timestamp="20201115 23:01:36.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.577" endtime="20201115 23:01:36.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024243042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.868" endtime="20201115 23:01:36.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.876" endtime="20201115 23:01:36.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.575" endtime="20201115 23:01:36.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.573" endtime="20201115 23:01:36.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:36.883" level="INFO">${RESULT} = [{'time': 0.024329306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.626399999999909e-05, 'source_diff': 8.626399999999909e-05}, {'time': 0.024472708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:36.880" endtime="20201115 23:01:36.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:36.896" level="INFO">${ACCURACY} = {'diff': [8.626399999999909e-05, 8.572199999999988e-05, 8.636100000000008e-05, 8.598600000000317e-05, 8.590300000000176e-05, 8.62920000000017e-05, 8.636100000000008e-05, 8.563899999999847e-05, 8.56530...</msg>
<status status="PASS" starttime="20201115 23:01:36.884" endtime="20201115 23:01:36.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.901" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201115 23:01:36.900" endtime="20201115 23:01:36.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.903" level="INFO">VALUE: [8.626399999999909e-05, 8.572199999999988e-05, 8.636100000000008e-05, 8.598600000000317e-05, 8.590300000000176e-05, 8.62920000000017e-05, 8.636100000000008e-05, 8.563899999999847e-05, 8.56530000000015e-05, 8.59859999999997e-05, 8.591699999999786e-05, 8.57920000000012e-05, 8.566700000000108e-05, 8.6153000000002e-05, 8.57920000000012e-05, 8.616599999999863e-05, 8.64860000000002e-05, 8.629199999999823e-05, 8.654099999999901e-05, 8.573599999999945e-05, 8.623599999999995e-05, 8.640199999999931e-05, 8.615199999999906e-05, 8.568099999999718e-05, 8.558399999999966e-05, 8.573600000000292e-05, 8.654199999999848e-05, 8.62920000000017e-05, 8.607000000000059e-05, 8.569400000000074e-05, 8.554200000000095e-05, 8.604200000000145e-05, 8.640299999999879e-05, 8.59729999999996e-05, 8.583399999999991e-05, 8.623599999999995e-05, 8.622299999999986e-05, 8.57920000000012e-05, 8.616700000000158e-05, 8.624999999999952e-05, 8.618000000000167e-05, 8.577699999999869e-05, 8.605500000000155e-05, 8.56110000000028e-05, 8.609799999999973e-05, 8.566599999999813e-05, 8.622200000000038e-05, 8.579100000000173e-05, 8.587499999999915e-05, 8.59720000000036e-05]</msg>
<status status="PASS" starttime="20201115 23:01:36.902" endtime="20201115 23:01:36.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.897" endtime="20201115 23:01:36.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.906" endtime="20201115 23:01:36.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:36.910" endtime="20201115 23:01:36.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.908" endtime="20201115 23:01:36.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.905" endtime="20201115 23:01:36.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.539" endtime="20201115 23:01:36.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.537" endtime="20201115 23:01:36.931"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.536" endtime="20201115 23:01:36.931"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.934" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.942" endtime="20201115 23:01:36.961"></status>
</kw>
<msg timestamp="20201115 23:01:36.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.940" endtime="20201115 23:01:36.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:36.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:36.963" endtime="20201115 23:01:36.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.965" endtime="20201115 23:01:36.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.938" endtime="20201115 23:01:36.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.936" endtime="20201115 23:01:36.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:36.975" endtime="20201115 23:01:37.260"></status>
</kw>
<msg timestamp="20201115 23:01:37.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:36.973" endtime="20201115 23:01:37.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024923667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025010847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.264" endtime="20201115 23:01:37.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.272" endtime="20201115 23:01:37.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.970" endtime="20201115 23:01:37.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.969" endtime="20201115 23:01:37.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.279" level="INFO">${RESULT} = [{'time': 0.025010847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.71799999999992e-05, 'source_diff': 8.71799999999992e-05}, {'time': 0.025157278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:37.276" endtime="20201115 23:01:37.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.294" level="INFO">${ACCURACY} = {'diff': [8.71799999999992e-05, 8.718100000000215e-05, 8.71669999999991e-05, 8.693099999999843e-05, 8.69860000000007e-05, 8.708299999999822e-05, 8.659700000000076e-05, 8.71799999999992e-05, 8.67220000...</msg>
<status status="PASS" starttime="20201115 23:01:37.280" endtime="20201115 23:01:37.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.298" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.297" endtime="20201115 23:01:37.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.301" level="INFO">VALUE: [8.71799999999992e-05, 8.718100000000215e-05, 8.71669999999991e-05, 8.693099999999843e-05, 8.69860000000007e-05, 8.708299999999822e-05, 8.659700000000076e-05, 8.71799999999992e-05, 8.672200000000088e-05, 8.67920000000022e-05, 8.690199999999981e-05, 8.730600000000227e-05, 8.704200000000245e-05, 8.688899999999972e-05, 8.686099999999711e-05, 8.675000000000002e-05, 8.66669999999986e-05, 8.701399999999984e-05, 8.66249999999999e-05, 8.661099999999686e-05, 8.701399999999984e-05, 8.718099999999868e-05, 8.668099999999818e-05, 8.725000000000052e-05, 8.71669999999991e-05, 8.663899999999947e-05, 8.729199999999923e-05, 8.683300000000144e-05, 8.752799999999991e-05, 8.744399999999902e-05, 8.751400000000034e-05, 8.727799999999966e-05, 8.672300000000036e-05, 8.74860000000012e-05, 8.755500000000305e-05, 8.688899999999972e-05, 8.729199999999923e-05, 8.69860000000007e-05, 8.73059999999988e-05, 8.705499999999908e-05, 8.726399999999662e-05, 8.708300000000169e-05, 8.687500000000015e-05, 8.718099999999868e-05, 8.755499999999958e-05, 8.686100000000058e-05, 8.74869999999972e-05, 8.677800000000263e-05, 8.730600000000227e-05, 8.752799999999644e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.300" endtime="20201115 23:01:37.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.295" endtime="20201115 23:01:37.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.304" endtime="20201115 23:01:37.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.308" endtime="20201115 23:01:37.327"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.306" endtime="20201115 23:01:37.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.303" endtime="20201115 23:01:37.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.934" endtime="20201115 23:01:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.933" endtime="20201115 23:01:37.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:36.932" endtime="20201115 23:01:37.329"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.331" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.339" endtime="20201115 23:01:37.358"></status>
</kw>
<msg timestamp="20201115 23:01:37.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.338" endtime="20201115 23:01:37.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.360" endtime="20201115 23:01:37.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.363" endtime="20201115 23:01:37.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.335" endtime="20201115 23:01:37.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.333" endtime="20201115 23:01:37.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.373" endtime="20201115 23:01:37.658"></status>
</kw>
<msg timestamp="20201115 23:01:37.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023602472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:37.371" endtime="20201115 23:01:37.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023602472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:37.662" endtime="20201115 23:01:37.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.670" endtime="20201115 23:01:37.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.368" endtime="20201115 23:01:37.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.366" endtime="20201115 23:01:37.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:37.677" level="INFO">${RESULT} = [{'time': 0.023691, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.852800000000091e-05, 'source_diff': 8.852800000000091e-05}, {'time': 0.023835444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:37.674" endtime="20201115 23:01:37.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:37.691" level="INFO">${ACCURACY} = {'diff': [8.852800000000091e-05, 8.797200000000213e-05, 8.804199999999998e-05, 8.825000000000152e-05, 8.852800000000091e-05, 8.827800000000066e-05, 8.852800000000091e-05, 8.841700000000036e-05, 8.7666...</msg>
<status status="PASS" starttime="20201115 23:01:37.678" endtime="20201115 23:01:37.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.695" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201115 23:01:37.694" endtime="20201115 23:01:37.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.698" level="INFO">VALUE: [8.852800000000091e-05, 8.797200000000213e-05, 8.804199999999998e-05, 8.825000000000152e-05, 8.852800000000091e-05, 8.827800000000066e-05, 8.852800000000091e-05, 8.841700000000036e-05, 8.766600000000013e-05, 8.845899999999907e-05, 8.76250000000009e-05, 8.772199999999841e-05, 8.798700000000118e-05, 8.758299999999872e-05, 8.845899999999907e-05, 8.809699999999879e-05, 8.759699999999829e-05, 8.829200000000023e-05, 8.772199999999841e-05, 8.834699999999904e-05, 8.805599999999955e-05, 8.804100000000051e-05, 8.855500000000058e-05, 8.795799999999909e-05, 8.76799999999997e-05, 8.784699999999854e-05, 8.780499999999983e-05, 8.819499999999925e-05, 8.847199999999916e-05, 8.836100000000208e-05, 8.786099999999811e-05, 8.815300000000054e-05, 8.811100000000183e-05, 8.809699999999879e-05, 8.834699999999904e-05, 8.851400000000134e-05, 8.840300000000079e-05, 8.772200000000188e-05, 8.798599999999823e-05, 8.794400000000299e-05, 8.840299999999732e-05, 8.840200000000131e-05, 8.774999999999755e-05, 8.766600000000013e-05, 8.843099999999993e-05, 8.783300000000244e-05, 8.848599999999873e-05, 8.777800000000016e-05, 8.786099999999811e-05, 8.79860000000017e-05]</msg>
<status status="PASS" starttime="20201115 23:01:37.696" endtime="20201115 23:01:37.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.691" endtime="20201115 23:01:37.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.701" endtime="20201115 23:01:37.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:37.704" endtime="20201115 23:01:37.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.703" endtime="20201115 23:01:37.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.699" endtime="20201115 23:01:37.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.332" endtime="20201115 23:01:37.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.330" endtime="20201115 23:01:37.725"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.329" endtime="20201115 23:01:37.726"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.728" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.736" endtime="20201115 23:01:37.755"></status>
</kw>
<msg timestamp="20201115 23:01:37.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.734" endtime="20201115 23:01:37.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:37.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:37.756" endtime="20201115 23:01:37.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.759" endtime="20201115 23:01:37.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.732" endtime="20201115 23:01:37.761"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.730" endtime="20201115 23:01:37.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:37.768" endtime="20201115 23:01:38.055"></status>
</kw>
<msg timestamp="20201115 23:01:38.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023689153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:37.766" endtime="20201115 23:01:38.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023600333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023689153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.059" endtime="20201115 23:01:38.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.067" endtime="20201115 23:01:38.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.764" endtime="20201115 23:01:38.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.762" endtime="20201115 23:01:38.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.074" level="INFO">${RESULT} = [{'time': 0.023689153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.881999999999987e-05, 'source_diff': 8.881999999999987e-05}, {'time': 0.023842486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.070" endtime="20201115 23:01:38.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.094" level="INFO">${ACCURACY} = {'diff': [8.881999999999987e-05, 8.877800000000116e-05, 8.91670000000011e-05, 8.906900000000065e-05, 8.916600000000163e-05, 8.872199999999941e-05, 8.930500000000133e-05, 8.897199999999966e-05, 8.94859...</msg>
<status status="PASS" starttime="20201115 23:01:38.081" endtime="20201115 23:01:38.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.099" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.098" endtime="20201115 23:01:38.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.101" level="INFO">VALUE: [8.881999999999987e-05, 8.877800000000116e-05, 8.91670000000011e-05, 8.906900000000065e-05, 8.916600000000163e-05, 8.872199999999941e-05, 8.930500000000133e-05, 8.897199999999966e-05, 8.948599999999973e-05, 8.920800000000034e-05, 8.940200000000231e-05, 8.897199999999966e-05, 8.952799999999844e-05, 8.945800000000059e-05, 8.920800000000034e-05, 8.86939999999968e-05, 8.904100000000151e-05, 8.947200000000016e-05, 8.947299999999964e-05, 8.922299999999939e-05, 8.941600000000188e-05, 8.865300000000104e-05, 8.912499999999893e-05, 8.861099999999886e-05, 8.913799999999902e-05, 8.902800000000141e-05, 8.884699999999954e-05, 8.884699999999954e-05, 8.947200000000016e-05, 8.938899999999875e-05, 8.944399999999755e-05, 8.886099999999911e-05, 8.907000000000012e-05, 8.859699999999929e-05, 8.890299999999782e-05, 8.904200000000098e-05, 8.927699999999872e-05, 8.8638999999998e-05, 8.929200000000123e-05, 8.883400000000291e-05, 8.934700000000004e-05, 8.88060000000003e-05, 8.876400000000159e-05, 8.877800000000116e-05, 8.917999999999773e-05, 8.890300000000129e-05, 8.865300000000104e-05, 8.863900000000147e-05, 8.884699999999954e-05, 8.866599999999766e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.100" endtime="20201115 23:01:38.102"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.095" endtime="20201115 23:01:38.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.104" endtime="20201115 23:01:38.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.108" endtime="20201115 23:01:38.127"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.106" endtime="20201115 23:01:38.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.103" endtime="20201115 23:01:38.128"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.729" endtime="20201115 23:01:38.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.727" endtime="20201115 23:01:38.129"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:37.726" endtime="20201115 23:01:38.129"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.131" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.139" endtime="20201115 23:01:38.158"></status>
</kw>
<msg timestamp="20201115 23:01:38.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.138" endtime="20201115 23:01:38.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.160" endtime="20201115 23:01:38.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.162" endtime="20201115 23:01:38.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.135" endtime="20201115 23:01:38.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.133" endtime="20201115 23:01:38.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.171" endtime="20201115 23:01:38.457"></status>
</kw>
<msg timestamp="20201115 23:01:38.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023734111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.170" endtime="20201115 23:01:38.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023643889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023734111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.461" endtime="20201115 23:01:38.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.469" endtime="20201115 23:01:38.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.167" endtime="20201115 23:01:38.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.165" endtime="20201115 23:01:38.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.476" level="INFO">${RESULT} = [{'time': 0.023734111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.022199999999744e-05, 'source_diff': 9.022199999999744e-05}, {'time': 0.023884514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.473" endtime="20201115 23:01:38.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.490" level="INFO">${ACCURACY} = {'diff': [9.022199999999744e-05, 8.99999999999998e-05, 9.023600000000048e-05, 9.0332999999998e-05, 8.970799999999737e-05, 8.991699999999839e-05, 9.022200000000091e-05, 9.043099999999846e-05, 8.9888999...</msg>
<status status="PASS" starttime="20201115 23:01:38.477" endtime="20201115 23:01:38.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.494" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.493" endtime="20201115 23:01:38.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.497" level="INFO">VALUE: [9.022199999999744e-05, 8.99999999999998e-05, 9.023600000000048e-05, 9.0332999999998e-05, 8.970799999999737e-05, 8.991699999999839e-05, 9.022200000000091e-05, 9.043099999999846e-05, 8.988899999999925e-05, 8.979099999999879e-05, 9.026399999999962e-05, 9.05000000000003e-05, 8.958400000000019e-05, 8.990200000000281e-05, 9.029199999999876e-05, 8.966599999999866e-05, 9.040299999999932e-05, 8.983400000000044e-05, 8.977699999999922e-05, 8.986100000000011e-05, 8.983400000000044e-05, 8.977700000000269e-05, 9.029200000000223e-05, 9.052799999999944e-05, 9.030599999999833e-05, 8.986100000000011e-05, 9.027799999999919e-05, 9.041599999999941e-05, 9.052799999999944e-05, 9.051399999999987e-05, 9.005600000000155e-05, 9.032000000000137e-05, 8.96939999999978e-05, 9.047200000000116e-05, 8.977700000000269e-05, 8.961099999999986e-05, 8.957000000000062e-05, 8.970800000000084e-05, 9.041699999999889e-05, 8.990299999999882e-05, 9.020799999999787e-05, 8.993099999999796e-05, 9.016600000000263e-05, 8.991700000000186e-05, 8.959799999999976e-05, 9.054200000000248e-05, 9.011100000000036e-05, 9.045799999999812e-05, 9.041599999999941e-05, 9.048599999999726e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.495" endtime="20201115 23:01:38.497"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.491" endtime="20201115 23:01:38.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.500" endtime="20201115 23:01:38.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.503" endtime="20201115 23:01:38.522"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.502" endtime="20201115 23:01:38.523"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.498" endtime="20201115 23:01:38.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.132" endtime="20201115 23:01:38.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.130" endtime="20201115 23:01:38.524"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.129" endtime="20201115 23:01:38.524"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.527" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.535" endtime="20201115 23:01:38.554"></status>
</kw>
<msg timestamp="20201115 23:01:38.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.533" endtime="20201115 23:01:38.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.556" endtime="20201115 23:01:38.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.559" endtime="20201115 23:01:38.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.531" endtime="20201115 23:01:38.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.529" endtime="20201115 23:01:38.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.568" endtime="20201115 23:01:38.853"></status>
</kw>
<msg timestamp="20201115 23:01:38.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024474764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024565472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.566" endtime="20201115 23:01:38.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024474764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024565472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.857" endtime="20201115 23:01:38.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.866" endtime="20201115 23:01:38.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.563" endtime="20201115 23:01:38.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.562" endtime="20201115 23:01:38.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:38.872" level="INFO">${RESULT} = [{'time': 0.024565472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.070800000000184e-05, 'source_diff': 9.070800000000184e-05}, {'time': 0.024707944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:38.869" endtime="20201115 23:01:38.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:38.887" level="INFO">${ACCURACY} = {'diff': [9.070800000000184e-05, 9.101299999999743e-05, 9.083399999999797e-05, 9.107000000000212e-05, 9.090200000000034e-05, 9.134699999999857e-05, 9.084700000000154e-05, 9.134700000000204e-05, 9.0777...</msg>
<status status="PASS" starttime="20201115 23:01:38.873" endtime="20201115 23:01:38.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.892" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201115 23:01:38.891" endtime="20201115 23:01:38.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.894" level="INFO">VALUE: [9.070800000000184e-05, 9.101299999999743e-05, 9.083399999999797e-05, 9.107000000000212e-05, 9.090200000000034e-05, 9.134699999999857e-05, 9.084700000000154e-05, 9.134700000000204e-05, 9.077799999999969e-05, 9.091699999999939e-05, 9.08190000000024e-05, 9.094400000000252e-05, 9.129199999999976e-05, 9.141699999999989e-05, 9.140300000000032e-05, 9.056900000000215e-05, 9.13190000000029e-05, 9.15139999999974e-05, 9.134699999999857e-05, 9.115199999999712e-05, 9.124999999999758e-05, 9.076400000000012e-05, 9.122300000000139e-05, 9.108400000000169e-05, 9.127800000000019e-05, 9.149999999999783e-05, 9.120899999999835e-05, 9.134699999999857e-05, 9.152800000000044e-05, 9.144399999999955e-05, 9.059700000000129e-05, 9.115300000000007e-05, 9.115300000000007e-05, 9.136099999999814e-05, 9.111100000000136e-05, 9.116699999999964e-05, 9.138900000000075e-05, 9.076400000000012e-05, 9.123600000000148e-05, 9.072200000000141e-05, 9.115300000000007e-05, 9.065300000000304e-05, 9.079199999999926e-05, 9.133400000000194e-05, 9.073600000000098e-05, 9.059699999999782e-05, 9.077799999999969e-05, 9.113900000000397e-05, 9.145899999999513e-05, 9.1332999999999e-05]</msg>
<status status="PASS" starttime="20201115 23:01:38.893" endtime="20201115 23:01:38.894"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.888" endtime="20201115 23:01:38.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.897" endtime="20201115 23:01:38.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:38.901" endtime="20201115 23:01:38.920"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.899" endtime="20201115 23:01:38.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.896" endtime="20201115 23:01:38.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.527" endtime="20201115 23:01:38.921"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.525" endtime="20201115 23:01:38.922"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.525" endtime="20201115 23:01:38.922"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.924" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.932" endtime="20201115 23:01:38.951"></status>
</kw>
<msg timestamp="20201115 23:01:38.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.931" endtime="20201115 23:01:38.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:38.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:38.953" endtime="20201115 23:01:38.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.955" endtime="20201115 23:01:38.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.928" endtime="20201115 23:01:38.958"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.926" endtime="20201115 23:01:38.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:38.964" endtime="20201115 23:01:39.250"></status>
</kw>
<msg timestamp="20201115 23:01:39.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:38.963" endtime="20201115 23:01:39.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.254" endtime="20201115 23:01:39.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.262" endtime="20201115 23:01:39.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.960" endtime="20201115 23:01:39.264"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.959" endtime="20201115 23:01:39.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.269" level="INFO">${RESULT} = [{'time': 0.023633819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.244400000000055e-05, 'source_diff': 9.244400000000055e-05}, {'time': 0.023775236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:39.265" endtime="20201115 23:01:39.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.282" level="INFO">${ACCURACY} = {'diff': [9.244400000000055e-05, 9.201400000000137e-05, 9.234699999999957e-05, 9.212500000000193e-05, 9.202799999999747e-05, 9.238900000000175e-05, 9.159699999999882e-05, 9.208299999999975e-05, 9.1693...</msg>
<status status="PASS" starttime="20201115 23:01:39.270" endtime="20201115 23:01:39.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.287" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.286" endtime="20201115 23:01:39.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.289" level="INFO">VALUE: [9.244400000000055e-05, 9.201400000000137e-05, 9.234699999999957e-05, 9.212500000000193e-05, 9.202799999999747e-05, 9.238900000000175e-05, 9.159699999999882e-05, 9.208299999999975e-05, 9.16939999999998e-05, 9.159799999999829e-05, 9.24719999999997e-05, 9.173600000000198e-05, 9.176400000000112e-05, 9.193000000000048e-05, 9.184699999999907e-05, 9.226400000000162e-05, 9.215300000000107e-05, 9.205600000000008e-05, 9.252799999999797e-05, 9.234699999999957e-05, 9.159800000000176e-05, 9.16520000000011e-05, 9.156899999999968e-05, 9.230600000000033e-05, 9.21529999999976e-05, 9.21390000000015e-05, 9.184700000000254e-05, 9.188900000000125e-05, 9.212500000000193e-05, 9.226400000000162e-05, 9.194400000000005e-05, 9.220799999999987e-05, 9.20139999999979e-05, 9.169499999999928e-05, 9.245800000000012e-05, 9.215300000000107e-05, 9.206899999999671e-05, 9.226399999999815e-05, 9.240300000000132e-05, 9.176300000000165e-05, 9.219399999999683e-05, 9.240300000000132e-05, 9.181899999999993e-05, 9.161099999999839e-05, 9.212499999999846e-05, 9.180599999999983e-05, 9.18199999999994e-05, 9.220899999999935e-05, 9.156999999999915e-05, 9.187500000000168e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.288" endtime="20201115 23:01:39.290"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.283" endtime="20201115 23:01:39.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.293" endtime="20201115 23:01:39.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.296" endtime="20201115 23:01:39.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.294" endtime="20201115 23:01:39.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.291" endtime="20201115 23:01:39.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.925" endtime="20201115 23:01:39.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.923" endtime="20201115 23:01:39.317"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:38.922" endtime="20201115 23:01:39.317"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.319" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.328" endtime="20201115 23:01:39.347"></status>
</kw>
<msg timestamp="20201115 23:01:39.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.326" endtime="20201115 23:01:39.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.349" endtime="20201115 23:01:39.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.351" endtime="20201115 23:01:39.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.323" endtime="20201115 23:01:39.353"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.321" endtime="20201115 23:01:39.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.360" endtime="20201115 23:01:39.646"></status>
</kw>
<msg timestamp="20201115 23:01:39.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024225931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024318903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.359" endtime="20201115 23:01:39.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024225931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024318903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.650" endtime="20201115 23:01:39.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.658" endtime="20201115 23:01:39.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.356" endtime="20201115 23:01:39.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.354" endtime="20201115 23:01:39.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:39.665" level="INFO">${RESULT} = [{'time': 0.024318903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.29720000000002e-05, 'source_diff': 9.29720000000002e-05}, {'time': 0.024459333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:01:39.662" endtime="20201115 23:01:39.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:39.678" level="INFO">${ACCURACY} = {'diff': [9.29720000000002e-05, 9.30139999999989e-05, 9.31529999999986e-05, 9.279199999999779e-05, 9.35269999999995e-05, 9.32079999999974e-05, 9.334700000000057e-05, 9.276400000000212e-05, 9.295799999...</msg>
<status status="PASS" starttime="20201115 23:01:39.666" endtime="20201115 23:01:39.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.683" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201115 23:01:39.682" endtime="20201115 23:01:39.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.685" level="INFO">VALUE: [9.29720000000002e-05, 9.30139999999989e-05, 9.31529999999986e-05, 9.279199999999779e-05, 9.35269999999995e-05, 9.32079999999974e-05, 9.334700000000057e-05, 9.276400000000212e-05, 9.295799999999715e-05, 9.338900000000275e-05, 9.301400000000237e-05, 9.302799999999847e-05, 9.284700000000007e-05, 9.255500000000111e-05, 9.305599999999761e-05, 9.257000000000015e-05, 9.294400000000105e-05, 9.33879999999998e-05, 9.288899999999878e-05, 9.354199999999854e-05, 9.29590000000001e-05, 9.331900000000143e-05, 9.286099999999964e-05, 9.322200000000044e-05, 9.338900000000275e-05, 9.326400000000262e-05, 9.299999999999933e-05, 9.308299999999728e-05, 9.277800000000169e-05, 9.29590000000001e-05, 9.308400000000022e-05, 9.277799999999822e-05, 9.31940000000013e-05, 9.28330000000005e-05, 9.315300000000207e-05, 9.345800000000112e-05, 9.322200000000044e-05, 9.29590000000001e-05, 9.255599999999711e-05, 9.280600000000083e-05, 9.3333000000001e-05, 9.283399999999997e-05, 9.352799999999897e-05, 9.311099999999989e-05, 9.3333000000001e-05, 9.270800000000037e-05, 9.294500000000053e-05, 9.31390000000025e-05, 9.345899999999713e-05, 9.302700000000247e-05]</msg>
<status status="PASS" starttime="20201115 23:01:39.684" endtime="20201115 23:01:39.686"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.679" endtime="20201115 23:01:39.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.688" endtime="20201115 23:01:39.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:39.692" endtime="20201115 23:01:39.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.690" endtime="20201115 23:01:39.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.687" endtime="20201115 23:01:39.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.320" endtime="20201115 23:01:39.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.318" endtime="20201115 23:01:39.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.317" endtime="20201115 23:01:39.713"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.716" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.724" endtime="20201115 23:01:39.743"></status>
</kw>
<msg timestamp="20201115 23:01:39.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.722" endtime="20201115 23:01:39.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:39.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:39.744" endtime="20201115 23:01:39.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.747" endtime="20201115 23:01:39.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.720" endtime="20201115 23:01:39.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.718" endtime="20201115 23:01:39.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:39.756" endtime="20201115 23:01:40.042"></status>
</kw>
<msg timestamp="20201115 23:01:40.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:39.754" endtime="20201115 23:01:40.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024050597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.046" endtime="20201115 23:01:40.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.055" endtime="20201115 23:01:40.056"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.752" endtime="20201115 23:01:40.057"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.750" endtime="20201115 23:01:40.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.062" level="INFO">${RESULT} = [{'time': 0.024050597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.406899999999871e-05, 'source_diff': 9.406899999999871e-05}, {'time': 0.024193028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.058" endtime="20201115 23:01:40.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.075" level="INFO">${ACCURACY} = {'diff': [9.406899999999871e-05, 9.437499999999724e-05, 9.441699999999942e-05, 9.419500000000178e-05, 9.361100000000039e-05, 9.41940000000023e-05, 9.401300000000043e-05, 9.383299999999803e-05, 9.43890...</msg>
<status status="PASS" starttime="20201115 23:01:40.062" endtime="20201115 23:01:40.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.079" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.078" endtime="20201115 23:01:40.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.082" level="INFO">VALUE: [9.406899999999871e-05, 9.437499999999724e-05, 9.441699999999942e-05, 9.419500000000178e-05, 9.361100000000039e-05, 9.41940000000023e-05, 9.401300000000043e-05, 9.383299999999803e-05, 9.438900000000028e-05, 9.368100000000171e-05, 9.369399999999833e-05, 9.370900000000085e-05, 9.409800000000079e-05, 9.39590000000011e-05, 9.441599999999994e-05, 9.36529999999991e-05, 9.44720000000017e-05, 9.394500000000153e-05, 9.45140000000004e-05, 9.383400000000097e-05, 9.390299999999935e-05, 9.447199999999822e-05, 9.3639000000003e-05, 9.388899999999978e-05, 9.411100000000089e-05, 9.400000000000033e-05, 9.444399999999908e-05, 9.406999999999818e-05, 9.419499999999831e-05, 9.427799999999972e-05, 9.372200000000094e-05, 9.412500000000046e-05, 9.388899999999978e-05, 9.420800000000187e-05, 9.445800000000212e-05, 9.406899999999871e-05, 9.444499999999856e-05, 9.45140000000004e-05, 9.390199999999987e-05, 9.419399999999883e-05, 9.436100000000114e-05, 9.406899999999871e-05, 9.437500000000071e-05, 9.369499999999781e-05, 9.423600000000101e-05, 9.400000000000033e-05, 9.43200000000019e-05, 9.431900000000243e-05, 9.40139999999999e-05, 9.407000000000165e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.081" endtime="20201115 23:01:40.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.076" endtime="20201115 23:01:40.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.085" endtime="20201115 23:01:40.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.089" endtime="20201115 23:01:40.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.087" endtime="20201115 23:01:40.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.084" endtime="20201115 23:01:40.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.716" endtime="20201115 23:01:40.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.715" endtime="20201115 23:01:40.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:39.714" endtime="20201115 23:01:40.110"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.112" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.120" endtime="20201115 23:01:40.140"></status>
</kw>
<msg timestamp="20201115 23:01:40.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.119" endtime="20201115 23:01:40.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.142" endtime="20201115 23:01:40.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.145" endtime="20201115 23:01:40.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.116" endtime="20201115 23:01:40.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.114" endtime="20201115 23:01:40.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.153" endtime="20201115 23:01:40.439"></status>
</kw>
<msg timestamp="20201115 23:01:40.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024420264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.152" endtime="20201115 23:01:40.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024420264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.443" endtime="20201115 23:01:40.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.452" endtime="20201115 23:01:40.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.149" endtime="20201115 23:01:40.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.148" endtime="20201115 23:01:40.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.458" level="INFO">${RESULT} = [{'time': 0.024515694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.543000000000051e-05, 'source_diff': 9.543000000000051e-05}, {'time': 0.024657111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.455" endtime="20201115 23:01:40.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.473" level="INFO">${ACCURACY} = {'diff': [9.543000000000051e-05, 9.494399999999958e-05, 9.525000000000158e-05, 9.526400000000115e-05, 9.509700000000232e-05, 9.508300000000275e-05, 9.493000000000001e-05, 9.497199999999872e-05, 9.5458...</msg>
<status status="PASS" starttime="20201115 23:01:40.459" endtime="20201115 23:01:40.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.478" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.476" endtime="20201115 23:01:40.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.481" level="INFO">VALUE: [9.543000000000051e-05, 9.494399999999958e-05, 9.525000000000158e-05, 9.526400000000115e-05, 9.509700000000232e-05, 9.508300000000275e-05, 9.493000000000001e-05, 9.497199999999872e-05, 9.545899999999913e-05, 9.47079999999989e-05, 9.500000000000133e-05, 9.469399999999933e-05, 9.506899999999971e-05, 9.48200000000024e-05, 9.544499999999956e-05, 9.469499999999881e-05, 9.490200000000087e-05, 9.538899999999781e-05, 9.519399999999983e-05, 9.536099999999867e-05, 9.455499999999964e-05, 9.538899999999781e-05, 9.545799999999965e-05, 9.494399999999958e-05, 9.474999999999761e-05, 9.50140000000009e-05, 9.466699999999967e-05, 9.519499999999931e-05, 9.515200000000112e-05, 9.527800000000072e-05, 9.495799999999915e-05, 9.544400000000008e-05, 9.50140000000009e-05, 9.488899999999731e-05, 9.490300000000035e-05, 9.46530000000001e-05, 9.516700000000017e-05, 9.523600000000201e-05, 9.548600000000226e-05, 9.5333999999999e-05, 9.531899999999996e-05, 9.458299999999878e-05, 9.54859999999988e-05, 9.469499999999881e-05, 9.481899999999946e-05, 9.458400000000172e-05, 9.50000000000048e-05, 9.545900000000607e-05, 9.513900000000103e-05, 9.508300000000275e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.479" endtime="20201115 23:01:40.481"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.474" endtime="20201115 23:01:40.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.484" endtime="20201115 23:01:40.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.487" endtime="20201115 23:01:40.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.485" endtime="20201115 23:01:40.507"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.482" endtime="20201115 23:01:40.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.113" endtime="20201115 23:01:40.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.111" endtime="20201115 23:01:40.508"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.110" endtime="20201115 23:01:40.508"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.511" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.519" endtime="20201115 23:01:40.538"></status>
</kw>
<msg timestamp="20201115 23:01:40.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.517" endtime="20201115 23:01:40.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.539" endtime="20201115 23:01:40.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.542" endtime="20201115 23:01:40.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.515" endtime="20201115 23:01:40.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.513" endtime="20201115 23:01:40.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.551" endtime="20201115 23:01:40.836"></status>
</kw>
<msg timestamp="20201115 23:01:40.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023629944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.549" endtime="20201115 23:01:40.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023629944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.840" endtime="20201115 23:01:40.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.848" endtime="20201115 23:01:40.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.547" endtime="20201115 23:01:40.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.545" endtime="20201115 23:01:40.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:40.855" level="INFO">${RESULT} = [{'time': 0.023629944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.581900000000046e-05, 'source_diff': 9.581900000000046e-05}, {'time': 0.023774361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:40.851" endtime="20201115 23:01:40.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:40.869" level="INFO">${ACCURACY} = {'diff': [9.581900000000046e-05, 9.556900000000021e-05, 9.615299999999813e-05, 9.60140000000019e-05, 9.60140000000019e-05, 9.6334e-05, 9.576400000000165e-05, 9.618100000000074e-05, 9.612499999999899e-...</msg>
<status status="PASS" starttime="20201115 23:01:40.856" endtime="20201115 23:01:40.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.873" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201115 23:01:40.872" endtime="20201115 23:01:40.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.876" level="INFO">VALUE: [9.581900000000046e-05, 9.556900000000021e-05, 9.615299999999813e-05, 9.60140000000019e-05, 9.60140000000019e-05, 9.6334e-05, 9.576400000000165e-05, 9.618100000000074e-05, 9.612499999999899e-05, 9.558399999999925e-05, 9.588799999999884e-05, 9.624999999999911e-05, 9.584700000000307e-05, 9.609699999999985e-05, 9.618000000000126e-05, 9.63470000000001e-05, 9.63470000000001e-05, 9.559799999999882e-05, 9.600000000000233e-05, 9.556999999999968e-05, 9.605600000000061e-05, 9.556999999999968e-05, 9.637499999999924e-05, 9.580499999999742e-05, 9.626399999999868e-05, 9.59859999999993e-05, 9.60140000000019e-05, 9.569400000000033e-05, 9.599999999999886e-05, 9.638900000000228e-05, 9.63880000000028e-05, 9.647199999999675e-05, 9.607000000000018e-05, 9.647200000000022e-05, 9.618100000000074e-05, 9.636099999999967e-05, 9.608399999999975e-05, 9.60140000000019e-05, 9.626299999999921e-05, 9.59729999999992e-05, 9.558399999999925e-05, 9.605500000000114e-05, 9.616700000000117e-05, 9.556900000000021e-05, 9.637499999999924e-05, 9.563799999999859e-05, 9.56799999999973e-05, 9.593100000000049e-05, 9.558300000000325e-05, 9.630499999999792e-05]</msg>
<status status="PASS" starttime="20201115 23:01:40.874" endtime="20201115 23:01:40.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.870" endtime="20201115 23:01:40.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.879" endtime="20201115 23:01:40.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:40.882" endtime="20201115 23:01:40.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.881" endtime="20201115 23:01:40.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.877" endtime="20201115 23:01:40.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.511" endtime="20201115 23:01:40.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.509" endtime="20201115 23:01:40.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.509" endtime="20201115 23:01:40.903"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.906" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.914" endtime="20201115 23:01:40.933"></status>
</kw>
<msg timestamp="20201115 23:01:40.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.912" endtime="20201115 23:01:40.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:40.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:40.934" endtime="20201115 23:01:40.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.937" endtime="20201115 23:01:40.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.910" endtime="20201115 23:01:40.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.908" endtime="20201115 23:01:40.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:40.946" endtime="20201115 23:01:41.232"></status>
</kw>
<msg timestamp="20201115 23:01:41.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023546347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:40.944" endtime="20201115 23:01:41.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023546347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.236" endtime="20201115 23:01:41.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.245" endtime="20201115 23:01:41.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.942" endtime="20201115 23:01:41.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.940" endtime="20201115 23:01:41.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.252" level="INFO">${RESULT} = [{'time': 0.023643917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.757000000000168e-05, 'source_diff': 9.757000000000168e-05}, {'time': 0.023796319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.248" endtime="20201115 23:01:41.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.265" level="INFO">${ACCURACY} = {'diff': [9.757000000000168e-05, 9.658300000000078e-05, 9.688899999999931e-05, 9.694499999999759e-05, 9.737500000000024e-05, 9.732000000000143e-05, 9.720799999999793e-05, 9.662499999999949e-05, 9.6804...</msg>
<status status="PASS" starttime="20201115 23:01:41.253" endtime="20201115 23:01:41.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.270" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.269" endtime="20201115 23:01:41.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.272" level="INFO">VALUE: [9.757000000000168e-05, 9.658300000000078e-05, 9.688899999999931e-05, 9.694499999999759e-05, 9.737500000000024e-05, 9.732000000000143e-05, 9.720799999999793e-05, 9.662499999999949e-05, 9.680499999999842e-05, 9.744400000000208e-05, 9.695900000000063e-05, 9.661099999999992e-05, 9.758400000000125e-05, 9.727799999999925e-05, 9.709700000000085e-05, 9.713899999999956e-05, 9.744399999999862e-05, 9.662499999999949e-05, 9.74860000000008e-05, 9.750000000000036e-05, 9.75279999999995e-05, 9.659700000000035e-05, 9.726399999999968e-05, 9.716599999999923e-05, 9.67080000000009e-05, 9.723600000000054e-05, 9.704100000000257e-05, 9.730500000000239e-05, 9.725000000000011e-05, 9.701399999999943e-05, 9.677800000000222e-05, 9.752700000000003e-05, 9.654100000000207e-05, 9.701399999999943e-05, 9.730499999999892e-05, 9.750000000000036e-05, 9.706899999999824e-05, 9.662499999999949e-05, 9.741699999999895e-05, 9.662499999999949e-05, 9.713899999999956e-05, 9.726399999999968e-05, 9.708299999999781e-05, 9.708300000000128e-05, 9.744500000000156e-05, 9.691699999999845e-05, 9.716700000000217e-05, 9.713899999999956e-05, 9.726399999999968e-05, 9.688899999999931e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.271" endtime="20201115 23:01:41.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.266" endtime="20201115 23:01:41.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.275" endtime="20201115 23:01:41.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.279" endtime="20201115 23:01:41.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.277" endtime="20201115 23:01:41.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.274" endtime="20201115 23:01:41.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.906" endtime="20201115 23:01:41.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.904" endtime="20201115 23:01:41.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:40.904" endtime="20201115 23:01:41.300"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.310" endtime="20201115 23:01:41.330"></status>
</kw>
<msg timestamp="20201115 23:01:41.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.309" endtime="20201115 23:01:41.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.331" endtime="20201115 23:01:41.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.334" endtime="20201115 23:01:41.335"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.306" endtime="20201115 23:01:41.336"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.304" endtime="20201115 23:01:41.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.343" endtime="20201115 23:01:41.634"></status>
</kw>
<msg timestamp="20201115 23:01:41.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.341" endtime="20201115 23:01:41.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023737069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.638" endtime="20201115 23:01:41.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.646" endtime="20201115 23:01:41.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.339" endtime="20201115 23:01:41.648"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.337" endtime="20201115 23:01:41.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:41.653" level="INFO">${RESULT} = [{'time': 0.023737069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.786100000000117e-05, 'source_diff': 9.786100000000117e-05}, {'time': 0.023884486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:41.649" endtime="20201115 23:01:41.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:41.666" level="INFO">${ACCURACY} = {'diff': [9.786100000000117e-05, 9.840300000000038e-05, 9.8028e-05, 9.806999999999871e-05, 9.758299999999831e-05, 9.834699999999863e-05, 9.818100000000274e-05, 9.82080000000024e-05, 9.769399999999887e...</msg>
<status status="PASS" starttime="20201115 23:01:41.654" endtime="20201115 23:01:41.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.670" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201115 23:01:41.669" endtime="20201115 23:01:41.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.673" level="INFO">VALUE: [9.786100000000117e-05, 9.840300000000038e-05, 9.8028e-05, 9.806999999999871e-05, 9.758299999999831e-05, 9.834699999999863e-05, 9.818100000000274e-05, 9.82080000000024e-05, 9.769399999999887e-05, 9.793099999999902e-05, 9.808400000000175e-05, 9.825000000000111e-05, 9.758300000000178e-05, 9.844399999999962e-05, 9.762499999999702e-05, 9.78470000000016e-05, 9.85280000000005e-05, 9.763800000000059e-05, 9.765299999999963e-05, 9.8028e-05, 9.772200000000147e-05, 9.763900000000006e-05, 9.784699999999813e-05, 9.776400000000018e-05, 9.77080000000019e-05, 9.768100000000224e-05, 9.763900000000006e-05, 9.809699999999838e-05, 9.827800000000025e-05, 9.834699999999863e-05, 9.841699999999995e-05, 9.781899999999899e-05, 9.815300000000013e-05, 9.82219999999985e-05, 9.806899999999924e-05, 9.840300000000038e-05, 9.818099999999927e-05, 9.813900000000056e-05, 9.833299999999906e-05, 9.831899999999949e-05, 9.763900000000006e-05, 9.777799999999975e-05, 9.85280000000005e-05, 9.759800000000082e-05, 9.791599999999998e-05, 9.8028e-05, 9.831899999999949e-05, 9.844399999999962e-05, 9.8028e-05, 9.82080000000024e-05]</msg>
<status status="PASS" starttime="20201115 23:01:41.672" endtime="20201115 23:01:41.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.667" endtime="20201115 23:01:41.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.676" endtime="20201115 23:01:41.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:41.679" endtime="20201115 23:01:41.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.678" endtime="20201115 23:01:41.699"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.674" endtime="20201115 23:01:41.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.303" endtime="20201115 23:01:41.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.301" endtime="20201115 23:01:41.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.300" endtime="20201115 23:01:41.701"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.703" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.711" endtime="20201115 23:01:41.731"></status>
</kw>
<msg timestamp="20201115 23:01:41.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.709" endtime="20201115 23:01:41.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:41.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:41.733" endtime="20201115 23:01:41.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.736" endtime="20201115 23:01:41.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.707" endtime="20201115 23:01:41.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.705" endtime="20201115 23:01:41.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:41.745" endtime="20201115 23:01:42.030"></status>
</kw>
<msg timestamp="20201115 23:01:42.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024384222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024483347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:41.743" endtime="20201115 23:01:42.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024384222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024483347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.034" endtime="20201115 23:01:42.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.043" endtime="20201115 23:01:42.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.741" endtime="20201115 23:01:42.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.739" endtime="20201115 23:01:42.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.049" level="INFO">${RESULT} = [{'time': 0.024483347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.912499999999852e-05, 'source_diff': 9.912499999999852e-05}, {'time': 0.024645694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.046" endtime="20201115 23:01:42.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.064" level="INFO">${ACCURACY} = {'diff': [9.912499999999852e-05, 9.869399999999987e-05, 9.86800000000003e-05, 9.912499999999852e-05, 9.937500000000224e-05, 9.890299999999741e-05, 9.913900000000156e-05, 9.933399999999953e-05, 9.94030...</msg>
<status status="PASS" starttime="20201115 23:01:42.050" endtime="20201115 23:01:42.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.068" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.067" endtime="20201115 23:01:42.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.071" level="INFO">VALUE: [9.912499999999852e-05, 9.869399999999987e-05, 9.86800000000003e-05, 9.912499999999852e-05, 9.937500000000224e-05, 9.890299999999741e-05, 9.913900000000156e-05, 9.933399999999953e-05, 9.940300000000138e-05, 9.873600000000204e-05, 9.943100000000052e-05, 9.8721999999999e-05, 9.94020000000019e-05, 9.951399999999846e-05, 9.915300000000113e-05, 9.927800000000125e-05, 9.869399999999987e-05, 9.90410000000011e-05, 9.886100000000217e-05, 9.912500000000199e-05, 9.933300000000006e-05, 9.951399999999846e-05, 9.873599999999857e-05, 9.89869999999983e-05, 9.875000000000161e-05, 9.855500000000017e-05, 9.91670000000007e-05, 9.862500000000149e-05, 9.863900000000106e-05, 9.861099999999845e-05, 9.868099999999977e-05, 9.944500000000009e-05, 9.920900000000288e-05, 9.863800000000159e-05, 9.943000000000105e-05, 9.923600000000254e-05, 9.883299999999956e-05, 9.91670000000007e-05, 9.94999999999989e-05, 9.951399999999846e-05, 9.93609999999992e-05, 9.861100000000192e-05, 9.926399999999821e-05, 9.873700000000152e-05, 9.888899999999784e-05, 9.933300000000006e-05, 9.906900000000024e-05, 9.906900000000024e-05, 9.938899999999834e-05, 9.908299999999981e-05]</msg>
<status status="PASS" starttime="20201115 23:01:42.069" endtime="20201115 23:01:42.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.065" endtime="20201115 23:01:42.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.074" endtime="20201115 23:01:42.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.077" endtime="20201115 23:01:42.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.076" endtime="20201115 23:01:42.097"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.072" endtime="20201115 23:01:42.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.703" endtime="20201115 23:01:42.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.702" endtime="20201115 23:01:42.098"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:41.701" endtime="20201115 23:01:42.099"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.101" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.109" endtime="20201115 23:01:42.129"></status>
</kw>
<msg timestamp="20201115 23:01:42.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.108" endtime="20201115 23:01:42.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.130" endtime="20201115 23:01:42.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.133" endtime="20201115 23:01:42.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.105" endtime="20201115 23:01:42.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.103" endtime="20201115 23:01:42.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.142" endtime="20201115 23:01:42.428"></status>
</kw>
<msg timestamp="20201115 23:01:42.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:42.140" endtime="20201115 23:01:42.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242405, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:42.432" endtime="20201115 23:01:42.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.440" endtime="20201115 23:01:42.442"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.138" endtime="20201115 23:01:42.443"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.136" endtime="20201115 23:01:42.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.448" level="INFO">${RESULT} = [{'time': 0.0242405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010009700000000038, 'source_diff': 0.00010009700000000038}, {'time': 0.024402861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:42.444" endtime="20201115 23:01:42.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.461" level="INFO">${ACCURACY} = {'diff': [0.00010009700000000038, 0.00010001400000000243, 0.0001004999999999999, 0.00010020800000000094, 0.00010048600000000033, 9.983300000000056e-05, 0.0001000549999999982, 0.00010008300000000081, 0...</msg>
<status status="PASS" starttime="20201115 23:01:42.449" endtime="20201115 23:01:42.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.465" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.464" endtime="20201115 23:01:42.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.468" level="INFO">VALUE: [0.00010009700000000038, 0.00010001400000000243, 0.0001004999999999999, 0.00010020800000000094, 0.00010048600000000033, 9.983300000000056e-05, 0.0001000549999999982, 0.00010008300000000081, 0.00010044499999999762, 9.963899999999859e-05, 0.0001004999999999999, 9.970800000000044e-05, 0.00010051399999999946, 0.00010026399999999921, 0.00010038900000000281, 9.965299999999816e-05, 9.973599999999957e-05, 0.00010051299999999999, 0.00010011099999999995, 0.00010033400000000053, 9.970800000000044e-05, 9.96939999999974e-05, 9.976400000000218e-05, 0.00010013899999999909, 9.976299999999924e-05, 9.994399999999765e-05, 0.00010024999999999964, 9.983299999999709e-05, 9.990300000000188e-05, 0.0001003610000000002, 0.00010037500000000324, 9.994500000000059e-05, 9.984700000000013e-05, 9.992999999999808e-05, 9.993000000000155e-05, 9.981900000000099e-05, 0.00010001399999999896, 9.965300000000163e-05, 0.00010045799999999772, 0.00010040299999999891, 0.00010032000000000096, 0.00010037499999999977, 0.00010043000000000205, 0.00010031899999999802, 9.993100000000102e-05, 0.0001002220000000005, 0.0001005559999999947, 0.00010031900000000149, 9.969400000000433e-05, 0.00010026400000000268]</msg>
<status status="PASS" starttime="20201115 23:01:42.467" endtime="20201115 23:01:42.468"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.462" endtime="20201115 23:01:42.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.471" endtime="20201115 23:01:42.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.474" endtime="20201115 23:01:42.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.473" endtime="20201115 23:01:42.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.469" endtime="20201115 23:01:42.495"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.102" endtime="20201115 23:01:42.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.100" endtime="20201115 23:01:42.496"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.099" endtime="20201115 23:01:42.496"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.498" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.506" endtime="20201115 23:01:42.526"></status>
</kw>
<msg timestamp="20201115 23:01:42.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.505" endtime="20201115 23:01:42.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.528" endtime="20201115 23:01:42.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.530" endtime="20201115 23:01:42.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.502" endtime="20201115 23:01:42.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.500" endtime="20201115 23:01:42.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.539" endtime="20201115 23:01:42.825"></status>
</kw>
<msg timestamp="20201115 23:01:42.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.538" endtime="20201115 23:01:42.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024125861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.829" endtime="20201115 23:01:42.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.837" endtime="20201115 23:01:42.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.535" endtime="20201115 23:01:42.839"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.533" endtime="20201115 23:01:42.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:42.843" level="INFO">${RESULT} = [{'time': 0.024227069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010120800000000194, 'source_diff': 0.00010120800000000194}, {'time': 0.024386472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:42.840" endtime="20201115 23:01:42.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:42.857" level="INFO">${ACCURACY} = {'diff': [0.00010120800000000194, 0.00010062500000000002, 0.00010105600000000214, 0.00010151400000000046, 0.00010101399999999996, 0.00010130500000000292, 0.00010057000000000121, 0.00010143099999999905...</msg>
<status status="PASS" starttime="20201115 23:01:42.844" endtime="20201115 23:01:42.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.861" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201115 23:01:42.860" endtime="20201115 23:01:42.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.864" level="INFO">VALUE: [0.00010120800000000194, 0.00010062500000000002, 0.00010105600000000214, 0.00010151400000000046, 0.00010101399999999996, 0.00010130500000000292, 0.00010057000000000121, 0.00010143099999999905, 0.00010147199999999829, 0.00010063899999999959, 0.00010106999999999824, 0.00010065199999999969, 0.00010058300000000131, 0.00010088899999999984, 0.00010141699999999948, 0.00010076399999999971, 0.00010094499999999812, 0.00010081899999999852, 0.00010108300000000181, 0.00010124999999999718, 0.00010138900000000034, 0.00010133299999999859, 0.00010076399999999971, 0.00010138900000000034, 0.00010145900000000166, 0.00010120799999999847, 0.00010088899999999984, 0.00010075000000000014, 0.00010088899999999984, 0.00010101399999999996, 0.00010088899999999984, 0.00010149999999999743, 0.00010080599999999842, 0.00010119499999999837, 0.00010105500000000267, 0.00010107000000000171, 0.0001011809999999988, 0.00010141699999999948, 0.00010061100000000045, 0.00010122199999999804, 0.00010062500000000002, 0.00010072300000000048, 0.00010066599999999926, 0.00010119500000000184, 0.00010131899999999902, 0.00010095800000000169, 0.00010126400000000368, 0.00010105600000000214, 0.00010065299999999916, 0.00010058299999999437]</msg>
<status status="PASS" starttime="20201115 23:01:42.862" endtime="20201115 23:01:42.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.858" endtime="20201115 23:01:42.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.867" endtime="20201115 23:01:42.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:42.870" endtime="20201115 23:01:42.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.869" endtime="20201115 23:01:42.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.865" endtime="20201115 23:01:42.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.499" endtime="20201115 23:01:42.891"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.497" endtime="20201115 23:01:42.892"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.496" endtime="20201115 23:01:42.892"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.894" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.902" endtime="20201115 23:01:42.921"></status>
</kw>
<msg timestamp="20201115 23:01:42.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.901" endtime="20201115 23:01:42.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:42.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:42.923" endtime="20201115 23:01:42.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.926" endtime="20201115 23:01:42.927"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.898" endtime="20201115 23:01:42.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.896" endtime="20201115 23:01:42.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:42.934" endtime="20201115 23:01:43.220"></status>
</kw>
<msg timestamp="20201115 23:01:43.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:42.933" endtime="20201115 23:01:43.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.224" endtime="20201115 23:01:43.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.232" endtime="20201115 23:01:43.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.930" endtime="20201115 23:01:43.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.929" endtime="20201115 23:01:43.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.238" level="INFO">${RESULT} = [{'time': 0.023621528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010249999999999843, 'source_diff': 0.00010249999999999843}, {'time': 0.023778875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:43.235" endtime="20201115 23:01:43.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.251" level="INFO">${ACCURACY} = {'diff': [0.00010249999999999843, 0.00010245799999999972, 0.00010201400000000097, 0.0001023749999999983, 0.00010225000000000165, 0.00010213900000000109, 0.00010229099999999741, 0.0001020550000000002, ...</msg>
<status status="PASS" starttime="20201115 23:01:43.239" endtime="20201115 23:01:43.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.256" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.255" endtime="20201115 23:01:43.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.264" level="INFO">VALUE: [0.00010249999999999843, 0.00010245799999999972, 0.00010201400000000097, 0.0001023749999999983, 0.00010225000000000165, 0.00010213900000000109, 0.00010229099999999741, 0.0001020550000000002, 0.00010254199999999714, 0.00010175000000000115, 0.00010184699999999866, 0.0001020000000000014, 0.00010193000000000008, 0.00010237500000000177, 0.00010162500000000102, 0.00010155599999999917, 0.00010158300000000231, 0.00010247299999999876, 0.00010205599999999967, 0.00010152800000000003, 0.00010167999999999983, 0.00010156999999999874, 0.00010188899999999737, 0.00010213900000000109, 0.00010249999999999843, 0.00010251299999999852, 0.00010187500000000127, 0.00010169499999999887, 0.00010181899999999952, 0.00010236099999999873, 0.00010193000000000008, 0.0001016809999999993, 0.00010211100000000195, 0.00010219499999999937, 0.00010198600000000183, 0.00010248599999999886, 0.00010161100000000145, 0.00010211200000000142, 0.0001015549999999997, 0.00010156899999999927, 0.00010194399999999965, 0.00010244400000000015, 0.00010184799999999813, 0.0001021809999999998, 0.0001018610000000017, 0.00010240199999999797, 0.00010237500000000177, 0.00010230599999999992, 0.00010209699999999891, 0.00010181899999999952]</msg>
<status status="PASS" starttime="20201115 23:01:43.257" endtime="20201115 23:01:43.265"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.252" endtime="20201115 23:01:43.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.268" endtime="20201115 23:01:43.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.271" endtime="20201115 23:01:43.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.270" endtime="20201115 23:01:43.291"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.266" endtime="20201115 23:01:43.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.895" endtime="20201115 23:01:43.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.893" endtime="20201115 23:01:43.292"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:42.892" endtime="20201115 23:01:43.292"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.295" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.303" endtime="20201115 23:01:43.323"></status>
</kw>
<msg timestamp="20201115 23:01:43.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.301" endtime="20201115 23:01:43.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.325" endtime="20201115 23:01:43.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.327" endtime="20201115 23:01:43.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.299" endtime="20201115 23:01:43.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.297" endtime="20201115 23:01:43.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.336" endtime="20201115 23:01:43.626"></status>
</kw>
<msg timestamp="20201115 23:01:43.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.335" endtime="20201115 23:01:43.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024497556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024600667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.630" endtime="20201115 23:01:43.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.638" endtime="20201115 23:01:43.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.332" endtime="20201115 23:01:43.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.330" endtime="20201115 23:01:43.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:43.644" level="INFO">${RESULT} = [{'time': 0.024600667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010311099999999948, 'source_diff': 0.00010311099999999948}, {'time': 0.024756014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:43.641" endtime="20201115 23:01:43.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:43.659" level="INFO">${ACCURACY} = {'diff': [0.00010311099999999948, 0.000103513999999999, 0.00010287500000000227, 0.00010273600000000258, 0.00010309699999999991, 0.00010297299999999926, 0.00010299999999999893, 0.00010298599999999936, ...</msg>
<status status="PASS" starttime="20201115 23:01:43.646" endtime="20201115 23:01:43.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.664" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201115 23:01:43.663" endtime="20201115 23:01:43.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.666" level="INFO">VALUE: [0.00010311099999999948, 0.000103513999999999, 0.00010287500000000227, 0.00010273600000000258, 0.00010309699999999991, 0.00010297299999999926, 0.00010299999999999893, 0.00010298599999999936, 0.00010349999999999943, 0.000103416000000002, 0.00010291700000000098, 0.00010269399999999693, 0.00010345800000000072, 0.0001031940000000009, 0.00010338900000000234, 0.00010293100000000055, 0.00010347200000000029, 0.00010299999999999893, 0.00010266700000000073, 0.00010294500000000012, 0.00010305600000000067, 0.00010338900000000234, 0.00010280600000000042, 0.0001031810000000008, 0.00010348599999999986, 0.00010267999999999736, 0.00010299999999999893, 0.00010256900000000027, 0.00010313899999999862, 0.00010330600000000092, 0.00010293000000000108, 0.00010330600000000092, 0.00010325000000000265, 0.00010330499999999798, 0.00010348599999999986, 0.00010270799999999997, 0.00010318000000000133, 0.00010344400000000115, 0.00010266700000000073, 0.00010319399999999743, 0.00010324999999999918, 0.00010269499999999987, 0.0001033200000000005, 0.00010293000000000108, 0.00010254199999999714, 0.00010274999999999868, 0.00010344400000000115, 0.00010262500000000202, 0.00010292999999999414, 0.00010344400000000115]</msg>
<status status="PASS" starttime="20201115 23:01:43.665" endtime="20201115 23:01:43.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.660" endtime="20201115 23:01:43.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.669" endtime="20201115 23:01:43.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:43.672" endtime="20201115 23:01:43.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.671" endtime="20201115 23:01:43.692"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.667" endtime="20201115 23:01:43.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.295" endtime="20201115 23:01:43.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.294" endtime="20201115 23:01:43.693"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.293" endtime="20201115 23:01:43.694"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.696" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.704" endtime="20201115 23:01:43.724"></status>
</kw>
<msg timestamp="20201115 23:01:43.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.703" endtime="20201115 23:01:43.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:43.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:43.725" endtime="20201115 23:01:43.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.728" endtime="20201115 23:01:43.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.700" endtime="20201115 23:01:43.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.698" endtime="20201115 23:01:43.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:43.737" endtime="20201115 23:01:44.021"></status>
</kw>
<msg timestamp="20201115 23:01:44.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:43.735" endtime="20201115 23:01:44.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023503667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023607778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.025" endtime="20201115 23:01:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.033" endtime="20201115 23:01:44.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.733" endtime="20201115 23:01:44.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.731" endtime="20201115 23:01:44.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.040" level="INFO">${RESULT} = [{'time': 0.023607778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010411100000000048, 'source_diff': 0.00010411100000000048}, {'time': 0.023773125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:44.036" endtime="20201115 23:01:44.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.053" level="INFO">${ACCURACY} = {'diff': [0.00010411100000000048, 0.0001042360000000006, 0.0001042360000000006, 0.00010355499999999823, 0.00010361199999999945, 0.00010366699999999826, 0.0001037360000000001, 0.0001043620000000002, 0....</msg>
<status status="PASS" starttime="20201115 23:01:44.041" endtime="20201115 23:01:44.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.057" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.056" endtime="20201115 23:01:44.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.060" level="INFO">VALUE: [0.00010411100000000048, 0.0001042360000000006, 0.0001042360000000006, 0.00010355499999999823, 0.00010361199999999945, 0.00010366699999999826, 0.0001037360000000001, 0.0001043620000000002, 0.00010376400000000272, 0.00010356900000000127, 0.00010444399999999868, 0.00010368000000000183, 0.00010433299999999812, 0.00010397199999999732, 0.00010392999999999861, 0.00010391700000000198, 0.0001036810000000013, 0.0001038879999999999, 0.00010394500000000112, 0.00010391699999999851, 0.00010405600000000167, 0.00010433300000000159, 0.00010393100000000155, 0.00010376400000000272, 0.00010441699999999901, 0.0001041810000000018, 0.0001040559999999982, 0.00010447300000000076, 0.00010416700000000223, 0.00010394399999999818, 0.00010398699999999983, 0.00010411100000000048, 0.00010443099999999858, 0.00010358299999999737, 0.00010372200000000054, 0.00010365300000000216, 0.00010388900000000284, 0.00010436100000000073, 0.000104514, 0.00010430600000000192, 0.00010380600000000142, 0.0001038749999999998, 0.00010357000000000074, 0.00010362499999999955, 0.0001043750000000003, 0.0001037360000000001, 0.0001040689999999983, 0.00010381900000000152, 0.00010392999999999861, 0.00010419500000000137]</msg>
<status status="PASS" starttime="20201115 23:01:44.058" endtime="20201115 23:01:44.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.054" endtime="20201115 23:01:44.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.063" endtime="20201115 23:01:44.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.066" endtime="20201115 23:01:44.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.065" endtime="20201115 23:01:44.086"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.061" endtime="20201115 23:01:44.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.697" endtime="20201115 23:01:44.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.695" endtime="20201115 23:01:44.087"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:43.694" endtime="20201115 23:01:44.088"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.090" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.099" endtime="20201115 23:01:44.118"></status>
</kw>
<msg timestamp="20201115 23:01:44.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.097" endtime="20201115 23:01:44.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.120" endtime="20201115 23:01:44.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.122" endtime="20201115 23:01:44.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.094" endtime="20201115 23:01:44.124"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.092" endtime="20201115 23:01:44.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.132" endtime="20201115 23:01:44.417"></status>
</kw>
<msg timestamp="20201115 23:01:44.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.130" endtime="20201115 23:01:44.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024436722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024542264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.421" endtime="20201115 23:01:44.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.429" endtime="20201115 23:01:44.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.127" endtime="20201115 23:01:44.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.125" endtime="20201115 23:01:44.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.436" level="INFO">${RESULT} = [{'time': 0.024542264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010554200000000014, 'source_diff': 0.00010554200000000014}, {'time': 0.024698653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:44.433" endtime="20201115 23:01:44.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.449" level="INFO">${ACCURACY} = {'diff': [0.00010554200000000014, 0.00010480600000000242, 0.00010479099999999991, 0.00010498600000000136, 0.00010523700000000108, 0.00010544499999999915, 0.00010544500000000262, 0.00010544499999999915...</msg>
<status status="PASS" starttime="20201115 23:01:44.437" endtime="20201115 23:01:44.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.453" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.452" endtime="20201115 23:01:44.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.456" level="INFO">VALUE: [0.00010554200000000014, 0.00010480600000000242, 0.00010479099999999991, 0.00010498600000000136, 0.00010523700000000108, 0.00010544499999999915, 0.00010544500000000262, 0.00010544499999999915, 0.00010456999999999828, 0.0001051810000000028, 0.00010486100000000123, 0.00010499999999999746, 0.00010547200000000229, 0.00010519399999999943, 0.00010548699999999786, 0.00010494399999999918, 0.00010547299999999829, 0.00010461099999999751, 0.00010536099999999826, 0.00010511099999999801, 0.00010472200000000154, 0.00010480600000000242, 0.00010463900000000012, 0.00010480500000000295, 0.00010525000000000118, 0.0001045689999999988, 0.00010516699999999976, 0.00010513900000000062, 0.00010494500000000212, 0.0001050140000000005, 0.00010530599999999946, 0.00010475000000000068, 0.00010456900000000227, 0.00010515300000000019, 0.00010481999999999853, 0.000105514000000001, 0.00010455600000000217, 0.00010543099999999958, 0.00010462500000000055, 0.00010481900000000252, 0.00010509800000000138, 0.0001053889999999974, 0.00010549999999999796, 0.00010462500000000402, 0.00010495799999999528, 0.0001045689999999988, 0.0001046810000000023, 0.00010525000000000118, 0.0001050140000000005, 0.00010480499999999948]</msg>
<status status="PASS" starttime="20201115 23:01:44.454" endtime="20201115 23:01:44.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.450" endtime="20201115 23:01:44.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.459" endtime="20201115 23:01:44.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.462" endtime="20201115 23:01:44.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.461" endtime="20201115 23:01:44.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.457" endtime="20201115 23:01:44.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.090" endtime="20201115 23:01:44.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.089" endtime="20201115 23:01:44.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.088" endtime="20201115 23:01:44.484"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.486" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.494" endtime="20201115 23:01:44.514"></status>
</kw>
<msg timestamp="20201115 23:01:44.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.493" endtime="20201115 23:01:44.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.515" endtime="20201115 23:01:44.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.518" endtime="20201115 23:01:44.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.490" endtime="20201115 23:01:44.520"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.488" endtime="20201115 23:01:44.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.527" endtime="20201115 23:01:44.811"></status>
</kw>
<msg timestamp="20201115 23:01:44.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023792181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023898, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:44.526" endtime="20201115 23:01:44.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023792181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023898, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:44.815" endtime="20201115 23:01:44.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.824" endtime="20201115 23:01:44.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.523" endtime="20201115 23:01:44.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.521" endtime="20201115 23:01:44.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:44.830" level="INFO">${RESULT} = [{'time': 0.023898, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010581900000000005, 'source_diff': 0.00010581900000000005}, {'time': 0.024068333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:01:44.827" endtime="20201115 23:01:44.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:44.843" level="INFO">${ACCURACY} = {'diff': [0.00010581900000000005, 0.00010561100000000198, 0.00010563900000000112, 0.00010636099999999926, 0.00010636099999999926, 0.00010608299999999987, 0.00010647199999999982, 0.00010572199999999907...</msg>
<status status="PASS" starttime="20201115 23:01:44.831" endtime="20201115 23:01:44.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.848" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201115 23:01:44.847" endtime="20201115 23:01:44.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.850" level="INFO">VALUE: [0.00010581900000000005, 0.00010561100000000198, 0.00010563900000000112, 0.00010636099999999926, 0.00010636099999999926, 0.00010608299999999987, 0.00010647199999999982, 0.00010572199999999907, 0.00010622199999999957, 0.00010580500000000048, 0.00010636100000000273, 0.0001062360000000026, 0.00010629199999999742, 0.00010555500000000023, 0.00010604100000000116, 0.00010649999999999896, 0.00010561200000000145, 0.00010612500000000205, 0.00010637499999999883, 0.00010604200000000064, 0.00010599999999999846, 0.00010579099999999744, 0.00010579200000000039, 0.00010554100000000066, 0.00010554099999999719, 0.00010565300000000069, 0.00010619399999999696, 0.00010583300000000309, 0.00010605500000000073, 0.00010595899999999922, 0.00010587499999999833, 0.00010641700000000101, 0.00010609799999999892, 0.00010626399999999828, 0.00010554200000000014, 0.00010629199999999742, 0.0001057360000000021, 0.00010579200000000039, 0.00010579200000000039, 0.00010613900000000162, 0.00010647299999999929, 0.00010619400000000043, 0.00010579200000000039, 0.00010636099999999926, 0.00010605499999999726, 0.00010579199999999692, 0.00010634699999999969, 0.00010643100000000405, 0.0001061810000000038, 0.00010618099999999686]</msg>
<status status="PASS" starttime="20201115 23:01:44.849" endtime="20201115 23:01:44.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.844" endtime="20201115 23:01:44.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.853" endtime="20201115 23:01:44.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:44.857" endtime="20201115 23:01:44.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.855" endtime="20201115 23:01:44.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.852" endtime="20201115 23:01:44.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.487" endtime="20201115 23:01:44.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.485" endtime="20201115 23:01:44.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.484" endtime="20201115 23:01:44.878"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.880" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.889" endtime="20201115 23:01:44.909"></status>
</kw>
<msg timestamp="20201115 23:01:44.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.887" endtime="20201115 23:01:44.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:44.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:44.911" endtime="20201115 23:01:44.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.913" endtime="20201115 23:01:44.915"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.885" endtime="20201115 23:01:44.916"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.882" endtime="20201115 23:01:44.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:44.922" endtime="20201115 23:01:45.208"></status>
</kw>
<msg timestamp="20201115 23:01:45.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:44.921" endtime="20201115 23:01:45.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025000972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.212" endtime="20201115 23:01:45.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.220" endtime="20201115 23:01:45.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.918" endtime="20201115 23:01:45.222"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.917" endtime="20201115 23:01:45.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.227" level="INFO">${RESULT} = [{'time': 0.025107639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010666700000000126, 'source_diff': 0.00010666700000000126}, {'time': 0.025265042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:45.224" endtime="20201115 23:01:45.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.241" level="INFO">${ACCURACY} = {'diff': [0.00010666700000000126, 0.0001068750000000028, 0.00010673699999999911, 0.00010649999999999896, 0.00010661099999999951, 0.00010716599999999882, 0.00010686099999999976, 0.00010679200000000139,...</msg>
<status status="PASS" starttime="20201115 23:01:45.228" endtime="20201115 23:01:45.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.246" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.245" endtime="20201115 23:01:45.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.248" level="INFO">VALUE: [0.00010666700000000126, 0.0001068750000000028, 0.00010673699999999911, 0.00010649999999999896, 0.00010661099999999951, 0.00010716599999999882, 0.00010686099999999976, 0.00010679200000000139, 0.00010695800000000075, 0.00010717999999999839, 0.00010665200000000222, 0.0001072499999999997, 0.00010661099999999951, 0.00010716700000000176, 0.00010662499999999908, 0.00010654200000000114, 0.00010707000000000078, 0.00010730600000000146, 0.00010661099999999951, 0.00010666700000000126, 0.00010666599999999832, 0.00010659699999999994, 0.00010712499999999958, 0.00010716700000000176, 0.00010680600000000096, 0.00010682000000000053, 0.00010743000000000211, 0.00010684700000000019, 0.00010649999999999896, 0.00010680499999999801, 0.00010680500000000148, 0.00010712500000000305, 0.00010679200000000139, 0.00010704199999999817, 0.00010686099999999976, 0.00010679200000000139, 0.0001067499999999992, 0.00010722200000000057, 0.00010711100000000001, 0.00010679199999999792, 0.00010680600000000096, 0.00010741699999999854, 0.00010694400000000465, 0.00010662499999999908, 0.00010654100000000166, 0.00010679200000000139, 0.00010654200000000114, 0.00010666699999999779, 0.0001072219999999971, 0.00010701399999999556]</msg>
<status status="PASS" starttime="20201115 23:01:45.247" endtime="20201115 23:01:45.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.242" endtime="20201115 23:01:45.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.251" endtime="20201115 23:01:45.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.255" endtime="20201115 23:01:45.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.253" endtime="20201115 23:01:45.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.250" endtime="20201115 23:01:45.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.881" endtime="20201115 23:01:45.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.879" endtime="20201115 23:01:45.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:44.878" endtime="20201115 23:01:45.276"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.279" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.287" endtime="20201115 23:01:45.306"></status>
</kw>
<msg timestamp="20201115 23:01:45.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.285" endtime="20201115 23:01:45.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.308" endtime="20201115 23:01:45.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.311" endtime="20201115 23:01:45.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.283" endtime="20201115 23:01:45.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.281" endtime="20201115 23:01:45.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.320" endtime="20201115 23:01:45.605"></status>
</kw>
<msg timestamp="20201115 23:01:45.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.318" endtime="20201115 23:01:45.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023558181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.609" endtime="20201115 23:01:45.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.617" endtime="20201115 23:01:45.618"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.315" endtime="20201115 23:01:45.619"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.314" endtime="20201115 23:01:45.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:45.623" level="INFO">${RESULT} = [{'time': 0.023665986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010780499999999901, 'source_diff': 0.00010780499999999901}, {'time': 0.023824375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:45.620" endtime="20201115 23:01:45.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:45.636" level="INFO">${ACCURACY} = {'diff': [0.00010780499999999901, 0.00010818099999999886, 0.00010848599999999792, 0.00010752699999999962, 0.00010754099999999919, 0.00010761100000000051, 0.00010798600000000089, 0.00010795899999999775...</msg>
<status status="PASS" starttime="20201115 23:01:45.624" endtime="20201115 23:01:45.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.641" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201115 23:01:45.640" endtime="20201115 23:01:45.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.643" level="INFO">VALUE: [0.00010780499999999901, 0.00010818099999999886, 0.00010848599999999792, 0.00010752699999999962, 0.00010754099999999919, 0.00010761100000000051, 0.00010798600000000089, 0.00010795899999999775, 0.00010840299999999997, 0.00010823600000000114, 0.00010784700000000119, 0.00010766700000000226, 0.00010830599999999899, 0.00010804199999999917, 0.00010822299999999757, 0.00010790299999999947, 0.00010820799999999853, 0.00010779200000000239, 0.00010797199999999785, 0.00010841699999999954, 0.00010854100000000019, 0.00010833299999999865, 0.00010829199999999942, 0.00010847300000000129, 0.00010791699999999904, 0.00010845799999999878, 0.00010797200000000132, 0.00010840299999999997, 0.00010847199999999835, 0.00010758300000000137, 0.00010832000000000203, 0.00010831899999999908, 0.00010816699999999929, 0.00010752800000000257, 0.00010772299999999707, 0.0001080279999999996, 0.00010809699999999797, 0.00010847200000000182, 0.0001082769999999969, 0.00010770799999999803, 0.00010777799999999935, 0.00010765299999999922, 0.00010790299999999947, 0.00010761099999999704, 0.00010834699999999822, 0.00010804099999999969, 0.00010812500000000058, 0.00010786100000000076, 0.00010759700000000094, 0.00010761199999999999]</msg>
<status status="PASS" starttime="20201115 23:01:45.642" endtime="20201115 23:01:45.644"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.637" endtime="20201115 23:01:45.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.647" endtime="20201115 23:01:45.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:45.650" endtime="20201115 23:01:45.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.649" endtime="20201115 23:01:45.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.645" endtime="20201115 23:01:45.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.279" endtime="20201115 23:01:45.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.277" endtime="20201115 23:01:45.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.277" endtime="20201115 23:01:45.671"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.674" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.682" endtime="20201115 23:01:45.702"></status>
</kw>
<msg timestamp="20201115 23:01:45.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.680" endtime="20201115 23:01:45.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:45.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:45.703" endtime="20201115 23:01:45.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.706" endtime="20201115 23:01:45.707"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.678" endtime="20201115 23:01:45.708"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.676" endtime="20201115 23:01:45.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:45.715" endtime="20201115 23:01:46.001"></status>
</kw>
<msg timestamp="20201115 23:01:46.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023695792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:45.713" endtime="20201115 23:01:46.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023586667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023695792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.004" endtime="20201115 23:01:46.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.012" endtime="20201115 23:01:46.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.711" endtime="20201115 23:01:46.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.709" endtime="20201115 23:01:46.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.019" level="INFO">${RESULT} = [{'time': 0.023695792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010912500000000158, 'source_diff': 0.00010912500000000158}, {'time': 0.023859181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:46.016" endtime="20201115 23:01:46.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.032" level="INFO">${ACCURACY} = {'diff': [0.00010912500000000158, 0.00010875000000000121, 0.00010872299999999807, 0.00010873600000000164, 0.00010929200000000042, 0.00010876400000000078, 0.0001090829999999994, 0.00010886099999999829,...</msg>
<status status="PASS" starttime="20201115 23:01:46.020" endtime="20201115 23:01:46.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.037" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.036" endtime="20201115 23:01:46.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.040" level="INFO">VALUE: [0.00010912500000000158, 0.00010875000000000121, 0.00010872299999999807, 0.00010873600000000164, 0.00010929200000000042, 0.00010876400000000078, 0.0001090829999999994, 0.00010886099999999829, 0.0001088890000000009, 0.0001090829999999994, 0.00010877700000000087, 0.00010884699999999872, 0.00010872299999999807, 0.00010856899999999933, 0.00010866699999999979, 0.00010886099999999829, 0.0001092219999999991, 0.00010898599999999842, 0.00010934699999999922, 0.00010899999999999799, 0.00010855499999999976, 0.00010876400000000078, 0.00010915300000000072, 0.00010911099999999854, 0.00010898599999999842, 0.00010931999999999956, 0.00010934700000000269, 0.00010908400000000235, 0.00010877800000000035, 0.0001090829999999994, 0.00010929200000000042, 0.00010927700000000137, 0.00010863900000000065, 0.00010929200000000042, 0.00010893000000000014, 0.00010865300000000022, 0.00010879199999999992, 0.00010867999999999989, 0.0001090829999999994, 0.00010943000000000064, 0.00010911100000000201, 0.00010904100000000069, 0.00010943000000000064, 0.00010879099999999697, 0.00010866600000000032, 0.00010947199999999935, 0.00010883399999999863, 0.00010873599999999817, 0.00010934800000000217, 0.00010884799999999473]</msg>
<status status="PASS" starttime="20201115 23:01:46.038" endtime="20201115 23:01:46.040"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.033" endtime="20201115 23:01:46.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.043" endtime="20201115 23:01:46.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.046" endtime="20201115 23:01:46.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.045" endtime="20201115 23:01:46.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.041" endtime="20201115 23:01:46.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.674" endtime="20201115 23:01:46.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.673" endtime="20201115 23:01:46.067"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:45.672" endtime="20201115 23:01:46.067"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.070" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.078" endtime="20201115 23:01:46.098"></status>
</kw>
<msg timestamp="20201115 23:01:46.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.076" endtime="20201115 23:01:46.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.099" endtime="20201115 23:01:46.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.102" endtime="20201115 23:01:46.103"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.074" endtime="20201115 23:01:46.104"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.072" endtime="20201115 23:01:46.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.111" endtime="20201115 23:01:46.396"></status>
</kw>
<msg timestamp="20201115 23:01:46.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023766097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.109" endtime="20201115 23:01:46.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023766097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.400" endtime="20201115 23:01:46.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.408" endtime="20201115 23:01:46.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.107" endtime="20201115 23:01:46.410"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.105" endtime="20201115 23:01:46.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.415" level="INFO">${RESULT} = [{'time': 0.023766097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011016599999999835, 'source_diff': 0.00011016599999999835}, {'time': 0.023934444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:46.411" endtime="20201115 23:01:46.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.428" level="INFO">${ACCURACY} = {'diff': [0.00011016599999999835, 0.00010983300000000015, 0.00010979100000000144, 0.00010961200000000199, 0.00010998599999999942, 0.00010984699999999972, 0.00010949999999999849, 0.00010984700000000319...</msg>
<status status="PASS" starttime="20201115 23:01:46.416" endtime="20201115 23:01:46.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.433" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.432" endtime="20201115 23:01:46.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.435" level="INFO">VALUE: [0.00011016599999999835, 0.00010983300000000015, 0.00010979100000000144, 0.00010961200000000199, 0.00010998599999999942, 0.00010984699999999972, 0.00010949999999999849, 0.00010984700000000319, 0.00011009699999999997, 0.00010973599999999917, 0.00011049999999999949, 0.00011004200000000117, 0.00010979200000000092, 0.00011011099999999954, 0.00011004100000000169, 0.00010979199999999745, 0.00011004100000000169, 0.00011006900000000083, 0.00010965299999999775, 0.00011027799999999838, 0.0001102220000000001, 0.0001095280000000011, 0.00011034700000000022, 0.00011048599999999992, 0.00010959699999999947, 0.00010982000000000006, 0.00011011199999999902, 0.00010968100000000036, 0.00010997199999999985, 0.00011043100000000111, 0.00010999999999999899, 0.00011018000000000139, 0.00010952799999999763, 0.00011016699999999782, 0.00010991600000000157, 0.00011004099999999822, 0.00010961100000000251, 0.00011043099999999764, 0.00011004099999999822, 0.00011006900000000083, 0.00011048599999999992, 0.00010991700000000104, 0.00011023599999999967, 0.00011032000000000056, 0.00010966700000000079, 0.00011015299999999825, 0.00010959700000000294, 0.00010958299999999643, 0.00010990300000000147, 0.00011034699999999675]</msg>
<status status="PASS" starttime="20201115 23:01:46.434" endtime="20201115 23:01:46.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.429" endtime="20201115 23:01:46.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.438" endtime="20201115 23:01:46.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.442" endtime="20201115 23:01:46.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.440" endtime="20201115 23:01:46.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.437" endtime="20201115 23:01:46.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.070" endtime="20201115 23:01:46.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.068" endtime="20201115 23:01:46.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.068" endtime="20201115 23:01:46.463"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.465" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.473" endtime="20201115 23:01:46.498"></status>
</kw>
<msg timestamp="20201115 23:01:46.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.472" endtime="20201115 23:01:46.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.500" endtime="20201115 23:01:46.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.502" endtime="20201115 23:01:46.504"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.469" endtime="20201115 23:01:46.505"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.467" endtime="20201115 23:01:46.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.512" endtime="20201115 23:01:46.797"></status>
</kw>
<msg timestamp="20201115 23:01:46.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024519181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.511" endtime="20201115 23:01:46.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024519181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.801" endtime="20201115 23:01:46.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.809" endtime="20201115 23:01:46.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.508" endtime="20201115 23:01:46.811"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.506" endtime="20201115 23:01:46.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:46.816" level="INFO">${RESULT} = [{'time': 0.024519181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011147300000000082, 'source_diff': 0.00011147300000000082}, {'time': 0.024680514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:46.813" endtime="20201115 23:01:46.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:46.830" level="INFO">${ACCURACY} = {'diff': [0.00011147300000000082, 0.00011049999999999949, 0.00011102799999999913, 0.00011145799999999831, 0.00011145900000000125, 0.0001114029999999995, 0.00011070800000000103, 0.00011127799999999938,...</msg>
<status status="PASS" starttime="20201115 23:01:46.817" endtime="20201115 23:01:46.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.835" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201115 23:01:46.834" endtime="20201115 23:01:46.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.837" level="INFO">VALUE: [0.00011147300000000082, 0.00011049999999999949, 0.00011102799999999913, 0.00011145799999999831, 0.00011145900000000125, 0.0001114029999999995, 0.00011070800000000103, 0.00011127799999999938, 0.00011086100000000029, 0.00011094400000000171, 0.00011099999999999999, 0.00011102799999999913, 0.0001110830000000014, 0.00011116699999999882, 0.00011133299999999818, 0.00011133299999999818, 0.00011058400000000038, 0.000110902999999999, 0.00011087499999999986, 0.0001105830000000009, 0.00011112500000000011, 0.0001110830000000014, 0.00011098599999999695, 0.00011126399999999981, 0.00011098599999999695, 0.00011059700000000047, 0.00011109700000000097, 0.0001108480000000002, 0.0001109159999999991, 0.00011138899999999993, 0.00011077799999999888, 0.0001105419999999982, 0.00011145799999999831, 0.0001114029999999995, 0.00011066700000000179, 0.00011091699999999857, 0.00011138899999999993, 0.00011144399999999874, 0.00011076399999999931, 0.00011127799999999938, 0.00011145799999999831, 0.00011138899999999993, 0.00011083299999999768, 0.00011115200000000325, 0.00011144500000000168, 0.0001112220000000011, 0.0001110549999999988, 0.00011059700000000394, 0.00011063900000000265, 0.00011088800000000343]</msg>
<status status="PASS" starttime="20201115 23:01:46.836" endtime="20201115 23:01:46.838"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.831" endtime="20201115 23:01:46.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.840" endtime="20201115 23:01:46.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:46.844" endtime="20201115 23:01:46.863"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.842" endtime="20201115 23:01:46.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.839" endtime="20201115 23:01:46.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.466" endtime="20201115 23:01:46.864"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.464" endtime="20201115 23:01:46.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.463" endtime="20201115 23:01:46.865"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.867" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.875" endtime="20201115 23:01:46.895"></status>
</kw>
<msg timestamp="20201115 23:01:46.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.874" endtime="20201115 23:01:46.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:46.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:46.897" endtime="20201115 23:01:46.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.899" endtime="20201115 23:01:46.901"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.871" endtime="20201115 23:01:46.902"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.869" endtime="20201115 23:01:46.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:46.909" endtime="20201115 23:01:47.194"></status>
</kw>
<msg timestamp="20201115 23:01:47.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023525542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023637694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:46.907" endtime="20201115 23:01:47.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023525542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023637694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.198" endtime="20201115 23:01:47.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.206" endtime="20201115 23:01:47.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.904" endtime="20201115 23:01:47.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.903" endtime="20201115 23:01:47.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.213" level="INFO">${RESULT} = [{'time': 0.023637694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011215200000000078, 'source_diff': 0.00011215200000000078}, {'time': 0.023809028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:47.209" endtime="20201115 23:01:47.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.226" level="INFO">${ACCURACY} = {'diff': [0.00011215200000000078, 0.0001124030000000005, 0.00011213900000000068, 0.00011165299999999975, 0.00011220799999999906, 0.00011245900000000225, 0.00011173600000000117, 0.00011165200000000028,...</msg>
<status status="PASS" starttime="20201115 23:01:47.213" endtime="20201115 23:01:47.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.230" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.229" endtime="20201115 23:01:47.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.233" level="INFO">VALUE: [0.00011215200000000078, 0.0001124030000000005, 0.00011213900000000068, 0.00011165299999999975, 0.00011220799999999906, 0.00011245900000000225, 0.00011173600000000117, 0.00011165200000000028, 0.00011206900000000283, 0.00011188900000000043, 0.00011233299999999918, 0.00011249999999999802, 0.00011197200000000185, 0.00011193099999999914, 0.00011197300000000132, 0.00011244399999999974, 0.00011194500000000218, 0.000111903, 0.00011166699999999932, 0.00011163900000000018, 0.00011197200000000185, 0.00011181999999999859, 0.00011208299999999893, 0.00011159700000000147, 0.00011161100000000104, 0.00011156899999999886, 0.00011151400000000006, 0.00011149999999999702, 0.00011212500000000111, 0.00011163900000000018, 0.00011230500000000004, 0.0001115830000000019, 0.00011211200000000102, 0.00011208299999999893, 0.00011170800000000203, 0.00011151300000000058, 0.00011225000000000124, 0.00011183299999999868, 0.00011163900000000018, 0.00011215300000000025, 0.00011169400000000246, 0.00011208299999999893, 0.00011225000000000124, 0.00011152700000000015, 0.00011222300000000157, 0.00011180600000000249, 0.0001115419999999992, 0.00011219500000000243, 0.00011247199999999541, 0.00011212499999999764]</msg>
<status status="PASS" starttime="20201115 23:01:47.231" endtime="20201115 23:01:47.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.227" endtime="20201115 23:01:47.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.236" endtime="20201115 23:01:47.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.239" endtime="20201115 23:01:47.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.238" endtime="20201115 23:01:47.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.234" endtime="20201115 23:01:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.868" endtime="20201115 23:01:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.866" endtime="20201115 23:01:47.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:46.865" endtime="20201115 23:01:47.260"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.263" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.271" endtime="20201115 23:01:47.291"></status>
</kw>
<msg timestamp="20201115 23:01:47.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.269" endtime="20201115 23:01:47.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.292" endtime="20201115 23:01:47.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.295" endtime="20201115 23:01:47.297"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.267" endtime="20201115 23:01:47.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.265" endtime="20201115 23:01:47.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.304" endtime="20201115 23:01:47.592"></status>
</kw>
<msg timestamp="20201115 23:01:47.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023569389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023682972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.303" endtime="20201115 23:01:47.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023569389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023682972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.596" endtime="20201115 23:01:47.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.604" endtime="20201115 23:01:47.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.300" endtime="20201115 23:01:47.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.299" endtime="20201115 23:01:47.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:47.611" level="INFO">${RESULT} = [{'time': 0.023682972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011358300000000043, 'source_diff': 0.00011358300000000043}, {'time': 0.023850306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:47.607" endtime="20201115 23:01:47.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:47.624" level="INFO">${ACCURACY} = {'diff': [0.00011358300000000043, 0.0001125700000000028, 0.00011256999999999934, 0.00011263899999999771, 0.00011287500000000186, 0.00011295799999999981, 0.00011262500000000161, 0.00011336099999999932,...</msg>
<status status="PASS" starttime="20201115 23:01:47.612" endtime="20201115 23:01:47.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.628" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201115 23:01:47.627" endtime="20201115 23:01:47.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.631" level="INFO">VALUE: [0.00011358300000000043, 0.0001125700000000028, 0.00011256999999999934, 0.00011263899999999771, 0.00011287500000000186, 0.00011295799999999981, 0.00011262500000000161, 0.00011336099999999932, 0.000112903000000001, 0.00011322199999999963, 0.00011255599999999977, 0.00011258299999999943, 0.00011269399999999999, 0.00011318100000000039, 0.00011304100000000122, 0.00011306999999999984, 0.00011256899999999986, 0.00011332000000000009, 0.00011270799999999956, 0.00011293100000000014, 0.00011322199999999963, 0.00011280500000000054, 0.00011324999999999877, 0.00011293100000000014, 0.00011345899999999978, 0.00011305600000000027, 0.00011306999999999984, 0.00011265299999999728, 0.00011294499999999971, 0.0001132359999999992, 0.00011263800000000171, 0.00011325000000000224, 0.00011315300000000125, 0.00011243000000000017, 0.00011299999999999852, 0.00011319400000000049, 0.00011344400000000074, 0.0001133749999999989, 0.00011284699999999925, 0.00011283299999999968, 0.00011290200000000153, 0.00011306999999999984, 0.000112596999999999, 0.0001132359999999992, 0.00011269399999999999, 0.00011299999999999852, 0.00011267999999999695, 0.00011262500000000508, 0.00011318000000000439, 0.00011320899999999606]</msg>
<status status="PASS" starttime="20201115 23:01:47.629" endtime="20201115 23:01:47.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.625" endtime="20201115 23:01:47.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.634" endtime="20201115 23:01:47.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:47.637" endtime="20201115 23:01:47.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.636" endtime="20201115 23:01:47.657"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.632" endtime="20201115 23:01:47.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.263" endtime="20201115 23:01:47.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.261" endtime="20201115 23:01:47.658"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.261" endtime="20201115 23:01:47.658"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.661" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.669" endtime="20201115 23:01:47.690"></status>
</kw>
<msg timestamp="20201115 23:01:47.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.668" endtime="20201115 23:01:47.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:47.691" endtime="20201115 23:01:47.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.694" endtime="20201115 23:01:47.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.665" endtime="20201115 23:01:47.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.663" endtime="20201115 23:01:47.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:47.703" endtime="20201115 23:01:47.989"></status>
</kw>
<msg timestamp="20201115 23:01:47.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024261583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.701" endtime="20201115 23:01:47.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:47.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024147194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024261583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:47.993" endtime="20201115 23:01:48.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.001" endtime="20201115 23:01:48.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.699" endtime="20201115 23:01:48.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.697" endtime="20201115 23:01:48.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.007" level="INFO">${RESULT} = [{'time': 0.024261583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011438899999999946, 'source_diff': 0.00011438899999999946}, {'time': 0.024435931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:48.004" endtime="20201115 23:01:48.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.020" level="INFO">${ACCURACY} = {'diff': [0.00011438899999999946, 0.00011416700000000182, 0.00011394500000000071, 0.00011395800000000081, 0.00011408300000000093, 0.00011420799999999759, 0.00011416599999999888, 0.00011363899999999871...</msg>
<status status="PASS" starttime="20201115 23:01:48.008" endtime="20201115 23:01:48.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.025" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.024" endtime="20201115 23:01:48.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.027" level="INFO">VALUE: [0.00011438899999999946, 0.00011416700000000182, 0.00011394500000000071, 0.00011395800000000081, 0.00011408300000000093, 0.00011420799999999759, 0.00011416599999999888, 0.00011363899999999871, 0.00011408299999999746, 0.00011407000000000084, 0.00011438899999999946, 0.00011363899999999871, 0.00011376400000000231, 0.00011430500000000204, 0.00011413799999999974, 0.00011413899999999921, 0.00011420800000000106, 0.0001135420000000012, 0.00011380500000000154, 0.00011427699999999943, 0.00011443000000000217, 0.00011376400000000231, 0.00011393100000000114, 0.00011388900000000243, 0.00011408300000000093, 0.00011356900000000086, 0.00011384700000000025, 0.00011370900000000003, 0.00011395800000000081, 0.00011438799999999999, 0.00011388900000000243, 0.00011358300000000043, 0.0001140689999999979, 0.00011433400000000066, 0.00011388900000000243, 0.00011356999999999687, 0.00011450000000000002, 0.00011401300000000308, 0.00011433300000000118, 0.00011365300000000175, 0.00011433400000000066, 0.0001142230000000001, 0.00011388899999999896, 0.00011394499999999724, 0.00011415299999999878, 0.00011388899999999896, 0.0001135550000000013, 0.00011401300000000308, 0.00011352800000000163, 0.00011440299999999903]</msg>
<status status="PASS" starttime="20201115 23:01:48.026" endtime="20201115 23:01:48.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.021" endtime="20201115 23:01:48.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.030" endtime="20201115 23:01:48.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.034" endtime="20201115 23:01:48.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.032" endtime="20201115 23:01:48.054"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.029" endtime="20201115 23:01:48.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.661" endtime="20201115 23:01:48.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.660" endtime="20201115 23:01:48.055"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:47.659" endtime="20201115 23:01:48.055"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.058" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.066" endtime="20201115 23:01:48.087"></status>
</kw>
<msg timestamp="20201115 23:01:48.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.064" endtime="20201115 23:01:48.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.088" endtime="20201115 23:01:48.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.091" endtime="20201115 23:01:48.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.062" endtime="20201115 23:01:48.093"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.060" endtime="20201115 23:01:48.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.100" endtime="20201115 23:01:48.386"></status>
</kw>
<msg timestamp="20201115 23:01:48.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024472597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024588028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.098" endtime="20201115 23:01:48.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024472597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024588028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.390" endtime="20201115 23:01:48.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.398" endtime="20201115 23:01:48.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.096" endtime="20201115 23:01:48.400"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.094" endtime="20201115 23:01:48.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.404" level="INFO">${RESULT} = [{'time': 0.024588028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011543100000000264, 'source_diff': 0.00011543100000000264}, {'time': 0.024759389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:48.401" endtime="20201115 23:01:48.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.419" level="INFO">${ACCURACY} = {'diff': [0.00011543100000000264, 0.00011533299999999871, 0.00011520799999999859, 0.00011466599999999938, 0.0001145689999999984, 0.00011519499999999849, 0.00011547199999999841, 0.00011458299999999796,...</msg>
<status status="PASS" starttime="20201115 23:01:48.405" endtime="20201115 23:01:48.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.423" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.422" endtime="20201115 23:01:48.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.426" level="INFO">VALUE: [0.00011543100000000264, 0.00011533299999999871, 0.00011520799999999859, 0.00011466599999999938, 0.0001145689999999984, 0.00011519499999999849, 0.00011547199999999841, 0.00011458299999999796, 0.00011526400000000034, 0.00011526300000000086, 0.00011513900000000021, 0.00011501400000000009, 0.00011516599999999988, 0.0001153750000000009, 0.0001145689999999984, 0.00011482000000000159, 0.0001147360000000007, 0.00011516699999999935, 0.0001147360000000007, 0.0001147909999999995, 0.00011451400000000306, 0.00011517999999999945, 0.00011517999999999945, 0.0001148750000000004, 0.00011543099999999917, 0.00011494400000000224, 0.00011529199999999948, 0.00011534700000000175, 0.00011523599999999773, 0.00011465299999999928, 0.0001147360000000007, 0.00011505600000000227, 0.0001154299999999997, 0.00011544399999999927, 0.00011523599999999773, 0.00011450000000000002, 0.00011525000000000077, 0.00011462500000000014, 0.00011504199999999923, 0.00011501399999999662, 0.00011475000000000374, 0.00011486100000000082, 0.00011512500000000064, 0.00011461100000000057, 0.0001149299999999992, 0.0001153750000000009, 0.00011469399999999852, 0.00011457000000000134, 0.00011450000000000349, 0.0001147629999999969]</msg>
<status status="PASS" starttime="20201115 23:01:48.424" endtime="20201115 23:01:48.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.420" endtime="20201115 23:01:48.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.433" endtime="20201115 23:01:48.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.436" endtime="20201115 23:01:48.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.435" endtime="20201115 23:01:48.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.431" endtime="20201115 23:01:48.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.058" endtime="20201115 23:01:48.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.056" endtime="20201115 23:01:48.457"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.056" endtime="20201115 23:01:48.458"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.460" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.468" endtime="20201115 23:01:48.488"></status>
</kw>
<msg timestamp="20201115 23:01:48.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.466" endtime="20201115 23:01:48.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.490" endtime="20201115 23:01:48.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.492" endtime="20201115 23:01:48.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.464" endtime="20201115 23:01:48.494"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.462" endtime="20201115 23:01:48.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.501" endtime="20201115 23:01:48.786"></status>
</kw>
<msg timestamp="20201115 23:01:48.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023599611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.500" endtime="20201115 23:01:48.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023599611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.791" endtime="20201115 23:01:48.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.799" endtime="20201115 23:01:48.800"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.497" endtime="20201115 23:01:48.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.495" endtime="20201115 23:01:48.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:48.805" level="INFO">${RESULT} = [{'time': 0.023716097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011648599999999898, 'source_diff': 0.00011648599999999898}, {'time': 0.023895417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:48.802" endtime="20201115 23:01:48.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:48.818" level="INFO">${ACCURACY} = {'diff': [0.00011648599999999898, 0.00011631999999999962, 0.00011565300000000028, 0.00011600000000000152, 0.00011575000000000127, 0.00011626399999999787, 0.00011595799999999934, 0.00011595800000000281...</msg>
<status status="PASS" starttime="20201115 23:01:48.806" endtime="20201115 23:01:48.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.823" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201115 23:01:48.822" endtime="20201115 23:01:48.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.826" level="INFO">VALUE: [0.00011648599999999898, 0.00011631999999999962, 0.00011565300000000028, 0.00011600000000000152, 0.00011575000000000127, 0.00011626399999999787, 0.00011595799999999934, 0.00011595800000000281, 0.00011595799999999934, 0.00011638900000000146, 0.00011594499999999924, 0.0001163750000000019, 0.00011640300000000103, 0.00011558300000000243, 0.00011547200000000188, 0.00011615299999999731, 0.00011645799999999984, 0.00011606999999999937, 0.00011586099999999835, 0.00011595800000000281, 0.00011598600000000195, 0.00011580500000000007, 0.00011566699999999985, 0.00011615299999999731, 0.00011551400000000059, 0.00011551400000000059, 0.00011612500000000164, 0.00011600000000000152, 0.00011568099999999942, 0.00011630500000000057, 0.00011615199999999784, 0.00011588900000000096, 0.00011600000000000152, 0.00011557000000000234, 0.00011551400000000059, 0.00011595799999999934, 0.00011618000000000045, 0.00011609699999999903, 0.00011565300000000028, 0.00011619499999999949, 0.00011644499999999974, 0.00011625000000000177, 0.00011600000000000152, 0.00011586100000000182, 0.00011594399999999977, 0.00011561100000000157, 0.00011601399999999762, 0.00011549999999999755, 0.00011563900000000071, 0.00011548600000000492]</msg>
<status status="PASS" starttime="20201115 23:01:48.824" endtime="20201115 23:01:48.826"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.819" endtime="20201115 23:01:48.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.829" endtime="20201115 23:01:48.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:48.832" endtime="20201115 23:01:48.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.831" endtime="20201115 23:01:48.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.827" endtime="20201115 23:01:48.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.460" endtime="20201115 23:01:48.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.459" endtime="20201115 23:01:48.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.458" endtime="20201115 23:01:48.853"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.856" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.864" endtime="20201115 23:01:48.884"></status>
</kw>
<msg timestamp="20201115 23:01:48.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.862" endtime="20201115 23:01:48.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:48.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:48.885" endtime="20201115 23:01:48.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.888" endtime="20201115 23:01:48.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.860" endtime="20201115 23:01:48.890"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.858" endtime="20201115 23:01:48.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:48.897" endtime="20201115 23:01:49.183"></status>
</kw>
<msg timestamp="20201115 23:01:49.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023512931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:48.895" endtime="20201115 23:01:49.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023512931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.187" endtime="20201115 23:01:49.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.195" endtime="20201115 23:01:49.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.893" endtime="20201115 23:01:49.197"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.891" endtime="20201115 23:01:49.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.202" level="INFO">${RESULT} = [{'time': 0.023630486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011755499999999836, 'source_diff': 0.00011755499999999836}, {'time': 0.023809819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:49.199" endtime="20201115 23:01:49.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.215" level="INFO">${ACCURACY} = {'diff': [0.00011755499999999836, 0.00011722200000000016, 0.0001165560000000003, 0.00011663900000000171, 0.0001165690000000004, 0.00011676300000000236, 0.00011665300000000128, 0.00011726399999999887, ...</msg>
<status status="PASS" starttime="20201115 23:01:49.203" endtime="20201115 23:01:49.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.220" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.219" endtime="20201115 23:01:49.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.222" level="INFO">VALUE: [0.00011755499999999836, 0.00011722200000000016, 0.0001165560000000003, 0.00011663900000000171, 0.0001165690000000004, 0.00011676300000000236, 0.00011665300000000128, 0.00011726399999999887, 0.00011694400000000077, 0.00011705500000000132, 0.00011726400000000234, 0.0001172499999999993, 0.0001165560000000003, 0.00011683300000000021, 0.00011693100000000067, 0.00011658299999999996, 0.00011707000000000037, 0.0001172499999999993, 0.0001168750000000024, 0.00011687499999999892, 0.00011727800000000191, 0.00011668000000000095, 0.00011723599999999973, 0.00011701400000000209, 0.00011720900000000006, 0.00011680500000000107, 0.00011720900000000006, 0.00011698599999999948, 0.000117388999999999, 0.00011716600000000188, 0.00011726399999999887, 0.00011701400000000209, 0.00011701399999999862, 0.00011659699999999953, 0.00011715300000000178, 0.00011651400000000159, 0.00011663899999999824, 0.00011649999999999855, 0.00011654200000000073, 0.00011651399999999812, 0.00011651399999999812, 0.0001167499999999988, 0.00011676300000000236, 0.0001167499999999988, 0.00011726400000000234, 0.00011652800000000116, 0.00011673599999999923, 0.00011744400000000127, 0.00011679199999999751, 0.00011691599999999469]</msg>
<status status="PASS" starttime="20201115 23:01:49.221" endtime="20201115 23:01:49.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.216" endtime="20201115 23:01:49.223"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.225" endtime="20201115 23:01:49.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.229" endtime="20201115 23:01:49.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.227" endtime="20201115 23:01:49.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.224" endtime="20201115 23:01:49.249"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.856" endtime="20201115 23:01:49.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.855" endtime="20201115 23:01:49.250"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:48.854" endtime="20201115 23:01:49.250"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.252" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.261" endtime="20201115 23:01:49.281"></status>
</kw>
<msg timestamp="20201115 23:01:49.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.259" endtime="20201115 23:01:49.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.282" endtime="20201115 23:01:49.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.285" endtime="20201115 23:01:49.286"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.256" endtime="20201115 23:01:49.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.254" endtime="20201115 23:01:49.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.294" endtime="20201115 23:01:49.580"></status>
</kw>
<msg timestamp="20201115 23:01:49.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023542875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023660694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.293" endtime="20201115 23:01:49.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023542875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023660694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.584" endtime="20201115 23:01:49.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.593" endtime="20201115 23:01:49.594"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.290" endtime="20201115 23:01:49.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.288" endtime="20201115 23:01:49.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.599" level="INFO">${RESULT} = [{'time': 0.023660694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011781899999999818, 'source_diff': 0.00011781899999999818}, {'time': 0.023836028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:49.596" endtime="20201115 23:01:49.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:49.613" level="INFO">${ACCURACY} = {'diff': [0.00011781899999999818, 0.0001182500000000003, 0.00011792999999999873, 0.00011806899999999843, 0.0001182089999999976, 0.00011751400000000259, 0.00011754199999999826, 0.00011836100000000085, ...</msg>
<status status="PASS" starttime="20201115 23:01:49.600" endtime="20201115 23:01:49.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.617" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201115 23:01:49.616" endtime="20201115 23:01:49.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.620" level="INFO">VALUE: [0.00011781899999999818, 0.0001182500000000003, 0.00011792999999999873, 0.00011806899999999843, 0.0001182089999999976, 0.00011751400000000259, 0.00011754199999999826, 0.00011836100000000085, 0.00011772199999999719, 0.0001181950000000015, 0.0001178889999999995, 0.0001184309999999987, 0.00011752800000000216, 0.00011840299999999956, 0.00011782000000000112, 0.00011781899999999818, 0.00011806899999999843, 0.00011787499999999992, 0.00011758300000000096, 0.00011837500000000042, 0.00011795900000000081, 0.00011791699999999863, 0.00011827799999999944, 0.00011794500000000124, 0.00011822200000000116, 0.00011749999999999955, 0.00011819399999999855, 0.00011833399999999772, 0.00011768100000000142, 0.00011838800000000052, 0.000117695000000001, 0.00011783299999999775, 0.00011798699999999995, 0.00011780600000000155, 0.00011819399999999855, 0.00011755500000000182, 0.00011751399999999912, 0.00011826399999999987, 0.0001177499999999998, 0.00011833300000000171, 0.00011807000000000137, 0.00011832000000000162, 0.00011831899999999868, 0.00011838800000000052, 0.00011813899999999974, 0.000118082999999998, 0.00011813900000000321, 0.00011748599999999998, 0.00011800000000000005, 0.00011759800000000348]</msg>
<status status="PASS" starttime="20201115 23:01:49.618" endtime="20201115 23:01:49.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.614" endtime="20201115 23:01:49.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.623" endtime="20201115 23:01:49.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:49.626" endtime="20201115 23:01:49.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.625" endtime="20201115 23:01:49.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.621" endtime="20201115 23:01:49.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.253" endtime="20201115 23:01:49.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.251" endtime="20201115 23:01:49.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.250" endtime="20201115 23:01:49.647"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.650" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.658" endtime="20201115 23:01:49.679"></status>
</kw>
<msg timestamp="20201115 23:01:49.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.656" endtime="20201115 23:01:49.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:49.680" endtime="20201115 23:01:49.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.683" endtime="20201115 23:01:49.684"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.654" endtime="20201115 23:01:49.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.652" endtime="20201115 23:01:49.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.692" endtime="20201115 23:01:49.978"></status>
</kw>
<msg timestamp="20201115 23:01:49.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.690" endtime="20201115 23:01:49.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:49.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:49.982" endtime="20201115 23:01:49.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:49.989" endtime="20201115 23:01:49.991"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.688" endtime="20201115 23:01:49.992"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.686" endtime="20201115 23:01:49.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:49.996" level="INFO">${RESULT} = [{'time': 0.024515722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011916600000000041, 'source_diff': 0.00011916600000000041}, {'time': 0.024684069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:49.993" endtime="20201115 23:01:49.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.011" level="INFO">${ACCURACY} = {'diff': [0.00011916600000000041, 0.00011856899999999893, 0.00011926400000000087, 0.0001189309999999992, 0.00011907000000000237, 0.00011884700000000178, 0.00011873600000000123, 0.00011855499999999936,...</msg>
<status status="PASS" starttime="20201115 23:01:49.997" endtime="20201115 23:01:50.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.015" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.014" endtime="20201115 23:01:50.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.018" level="INFO">VALUE: [0.00011916600000000041, 0.00011856899999999893, 0.00011926400000000087, 0.0001189309999999992, 0.00011907000000000237, 0.00011884700000000178, 0.00011873600000000123, 0.00011855499999999936, 0.0001185699999999984, 0.0001191249999999977, 0.00011881900000000264, 0.00011886199999999736, 0.0001191950000000025, 0.0001189309999999992, 0.00011945800000000284, 0.0001191249999999977, 0.000119389000000001, 0.00011901400000000062, 0.00011874999999999733, 0.00011862500000000067, 0.00011937499999999795, 0.00011904199999999976, 0.00011944499999999927, 0.0001193050000000001, 0.00011857000000000187, 0.00011927800000000044, 0.00011909699999999857, 0.0001192500000000013, 0.0001193050000000001, 0.00011887500000000092, 0.0001191110000000016, 0.00011912500000000117, 0.00011927700000000097, 0.00011850000000000055, 0.0001186110000000011, 0.000119082999999999, 0.00011933399999999872, 0.00011881899999999918, 0.00011909699999999857, 0.00011848600000000098, 0.00011943099999999623, 0.00011915299999999684, 0.00011895800000000234, 0.00011894500000000224, 0.00011851400000000012, 0.0001191379999999978, 0.00011882000000000559, 0.0001192500000000013, 0.0001189170000000031, 0.0001192370000000012]</msg>
<status status="PASS" starttime="20201115 23:01:50.016" endtime="20201115 23:01:50.018"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.012" endtime="20201115 23:01:50.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.021" endtime="20201115 23:01:50.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.024" endtime="20201115 23:01:50.043"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.022" endtime="20201115 23:01:50.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.019" endtime="20201115 23:01:50.044"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.650" endtime="20201115 23:01:50.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.649" endtime="20201115 23:01:50.045"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:49.648" endtime="20201115 23:01:50.045"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.047" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.056" endtime="20201115 23:01:50.076"></status>
</kw>
<msg timestamp="20201115 23:01:50.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.054" endtime="20201115 23:01:50.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.077" endtime="20201115 23:01:50.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.080" endtime="20201115 23:01:50.082"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.052" endtime="20201115 23:01:50.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.050" endtime="20201115 23:01:50.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.089" endtime="20201115 23:01:50.375"></status>
</kw>
<msg timestamp="20201115 23:01:50.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.088" endtime="20201115 23:01:50.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.379" endtime="20201115 23:01:50.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.387" endtime="20201115 23:01:50.388"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.085" endtime="20201115 23:01:50.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.084" endtime="20201115 23:01:50.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.393" level="INFO">${RESULT} = [{'time': 0.023716361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012022199999999969, 'source_diff': 0.00012022199999999969}, {'time': 0.023882708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:50.390" endtime="20201115 23:01:50.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.406" level="INFO">${ACCURACY} = {'diff': [0.00012022199999999969, 0.00011954099999999732, 0.00011962500000000167, 0.00011969400000000005, 0.00011961199999999811, 0.0001197500000000018, 0.00012037500000000242, 0.00011979200000000051,...</msg>
<status status="PASS" starttime="20201115 23:01:50.394" endtime="20201115 23:01:50.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.411" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.410" endtime="20201115 23:01:50.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.413" level="INFO">VALUE: [0.00012022199999999969, 0.00011954099999999732, 0.00011962500000000167, 0.00011969400000000005, 0.00011961199999999811, 0.0001197500000000018, 0.00012037500000000242, 0.00011979200000000051, 0.00012026400000000187, 0.00012015300000000131, 0.00012027800000000144, 0.00011987500000000192, 0.0001203050000000011, 0.0001204310000000007, 0.00011954200000000026, 0.00012043000000000123, 0.00012023600000000273, 0.00012023699999999873, 0.00012024999999999883, 0.00012034699999999982, 0.0001196110000000021, 0.00012033399999999972, 0.00012041700000000113, 0.00012034699999999982, 0.0001199029999999976, 0.0001198050000000006, 0.00011959799999999854, 0.00012022199999999969, 0.00011987499999999846, 0.0001196249999999982, 0.00012041700000000113, 0.00011957000000000287, 0.0001199440000000003, 0.00012018000000000098, 0.0001204310000000007, 0.00012043000000000123, 0.0001195699999999994, 0.0001196249999999982, 0.00011969499999999952, 0.00012041700000000113, 0.00011998599999999901, 0.00011997199999999944, 0.0001204440000000008, 0.00011981900000000018, 0.00011981999999999965, 0.00012036099999999939, 0.00012044399999999733, 0.00012022200000000316, 0.0001203750000000059, 0.00012006900000000043]</msg>
<status status="PASS" starttime="20201115 23:01:50.412" endtime="20201115 23:01:50.414"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.407" endtime="20201115 23:01:50.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.416" endtime="20201115 23:01:50.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.420" endtime="20201115 23:01:50.439"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.418" endtime="20201115 23:01:50.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.415" endtime="20201115 23:01:50.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.048" endtime="20201115 23:01:50.440"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.046" endtime="20201115 23:01:50.441"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.045" endtime="20201115 23:01:50.441"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.443" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.452" endtime="20201115 23:01:50.472"></status>
</kw>
<msg timestamp="20201115 23:01:50.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.450" endtime="20201115 23:01:50.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.474" endtime="20201115 23:01:50.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.476" endtime="20201115 23:01:50.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.448" endtime="20201115 23:01:50.478"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.445" endtime="20201115 23:01:50.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.485" endtime="20201115 23:01:50.770"></status>
</kw>
<msg timestamp="20201115 23:01:50.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024097861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024218986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.484" endtime="20201115 23:01:50.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024097861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024218986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.774" endtime="20201115 23:01:50.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.782" endtime="20201115 23:01:50.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.481" endtime="20201115 23:01:50.784"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.480" endtime="20201115 23:01:50.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:50.789" level="INFO">${RESULT} = [{'time': 0.024218986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001211249999999997, 'source_diff': 0.0001211249999999997}, {'time': 0.024392347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:50.786" endtime="20201115 23:01:50.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:50.802" level="INFO">${ACCURACY} = {'diff': [0.0001211249999999997, 0.00012083300000000075, 0.00012048599999999951, 0.0001206249999999992, 0.00012063899999999877, 0.00012102799999999872, 0.00012084700000000032, 0.00012131999999999768, ...</msg>
<status status="PASS" starttime="20201115 23:01:50.790" endtime="20201115 23:01:50.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.806" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201115 23:01:50.805" endtime="20201115 23:01:50.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.809" level="INFO">VALUE: [0.0001211249999999997, 0.00012083300000000075, 0.00012048599999999951, 0.0001206249999999992, 0.00012063899999999877, 0.00012102799999999872, 0.00012084700000000032, 0.00012131999999999768, 0.00012137499999999996, 0.00012059700000000007, 0.0001206249999999992, 0.00012074999999999933, 0.00012124999999999983, 0.00012070800000000062, 0.00012119499999999755, 0.00012136199999999986, 0.00012099999999999958, 0.00012130499999999864, 0.0001208189999999977, 0.00012056900000000093, 0.00012048599999999951, 0.00012123600000000026, 0.00012105500000000186, 0.00012123600000000026, 0.00012144500000000127, 0.00012099999999999958, 0.00012055599999999736, 0.00012088899999999903, 0.00012069500000000052, 0.00012102699999999925, 0.00012137499999999996, 0.0001208890000000025, 0.00012118100000000145, 0.00012063899999999877, 0.00012119400000000155, 0.0001209310000000012, 0.00012131900000000168, 0.00012138899999999953, 0.00012049999999999908, 0.00012097200000000044, 0.00012119399999999808, 0.00012098600000000348, 0.0001214300000000057, 0.00012069400000000452, 0.00012101399999999568, 0.00012104099999999535, 0.00012109700000000057, 0.00012093100000000467, 0.0001211249999999997, 0.00012123599999999679]</msg>
<status status="PASS" starttime="20201115 23:01:50.808" endtime="20201115 23:01:50.809"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.803" endtime="20201115 23:01:50.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.812" endtime="20201115 23:01:50.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:50.816" endtime="20201115 23:01:50.835"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.814" endtime="20201115 23:01:50.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.810" endtime="20201115 23:01:50.836"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.444" endtime="20201115 23:01:50.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.442" endtime="20201115 23:01:50.837"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.441" endtime="20201115 23:01:50.837"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.839" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.847" endtime="20201115 23:01:50.868"></status>
</kw>
<msg timestamp="20201115 23:01:50.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.846" endtime="20201115 23:01:50.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:50.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:50.870" endtime="20201115 23:01:50.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.872" endtime="20201115 23:01:50.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.843" endtime="20201115 23:01:50.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.841" endtime="20201115 23:01:50.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:50.881" endtime="20201115 23:01:51.166"></status>
</kw>
<msg timestamp="20201115 23:01:51.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023587764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:50.879" endtime="20201115 23:01:51.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023587764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023709625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.170" endtime="20201115 23:01:51.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.178" endtime="20201115 23:01:51.179"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.877" endtime="20201115 23:01:51.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.875" endtime="20201115 23:01:51.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.184" level="INFO">${RESULT} = [{'time': 0.023709625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012186100000000089, 'source_diff': 0.00012186100000000089}, {'time': 0.023885931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:51.181" endtime="20201115 23:01:51.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.197" level="INFO">${ACCURACY} = {'diff': [0.00012186100000000089, 0.00012173700000000023, 0.00012206999999999843, 0.00012166700000000238, 0.00012225000000000083, 0.00012213900000000028, 0.00012150000000000008, 0.00012192999999999926...</msg>
<status status="PASS" starttime="20201115 23:01:51.185" endtime="20201115 23:01:51.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.202" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.201" endtime="20201115 23:01:51.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.204" level="INFO">VALUE: [0.00012186100000000089, 0.00012173700000000023, 0.00012206999999999843, 0.00012166700000000238, 0.00012225000000000083, 0.00012213900000000028, 0.00012150000000000008, 0.00012192999999999926, 0.00012247200000000194, 0.00012194500000000177, 0.00012200000000000058, 0.00012200000000000058, 0.000122292000000003, 0.0001217639999999999, 0.00012150000000000008, 0.00012150000000000008, 0.00012144500000000127, 0.00012219400000000255, 0.00012179200000000251, 0.00012175000000000033, 0.00012183399999999775, 0.00012241699999999966, 0.00012237500000000096, 0.0001224160000000002, 0.00012183300000000175, 0.00012222199999999822, 0.0001224030000000001, 0.00012195900000000134, 0.0001221799999999995, 0.00012198600000000101, 0.0001222359999999978, 0.00012154200000000226, 0.00012238900000000053, 0.00012197200000000144, 0.0001221250000000007, 0.00012243099999999923, 0.00012236200000000086, 0.00012219500000000202, 0.00012211100000000114, 0.00012243099999999923, 0.00012148600000000051, 0.0001215839999999975, 0.00012244399999999933, 0.00012155599999999836, 0.00012233300000000225, 0.0001217370000000037, 0.00012237499999999402, 0.00012224999999999736, 0.00012169499999999805, 0.00012229100000000354]</msg>
<status status="PASS" starttime="20201115 23:01:51.203" endtime="20201115 23:01:51.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.198" endtime="20201115 23:01:51.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.208" endtime="20201115 23:01:51.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.211" endtime="20201115 23:01:51.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.210" endtime="20201115 23:01:51.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.206" endtime="20201115 23:01:51.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.840" endtime="20201115 23:01:51.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.838" endtime="20201115 23:01:51.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:50.837" endtime="20201115 23:01:51.232"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.243" endtime="20201115 23:01:51.264"></status>
</kw>
<msg timestamp="20201115 23:01:51.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.241" endtime="20201115 23:01:51.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.266" endtime="20201115 23:01:51.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.268" endtime="20201115 23:01:51.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.239" endtime="20201115 23:01:51.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.237" endtime="20201115 23:01:51.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.277" endtime="20201115 23:01:51.563"></status>
</kw>
<msg timestamp="20201115 23:01:51.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.276" endtime="20201115 23:01:51.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024438111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024561514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:51.567" endtime="20201115 23:01:51.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.575" endtime="20201115 23:01:51.577"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.273" endtime="20201115 23:01:51.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.272" endtime="20201115 23:01:51.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.582" level="INFO">${RESULT} = [{'time': 0.024561514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001234030000000011, 'source_diff': 0.0001234030000000011}, {'time': 0.024737833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:51.579" endtime="20201115 23:01:51.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.597" level="INFO">${ACCURACY} = {'diff': [0.0001234030000000011, 0.000122986000000002, 0.00012294399999999983, 0.0001228059999999996, 0.00012305500000000039, 0.00012337500000000196, 0.00012293000000000026, 0.00012302700000000125, 0....</msg>
<status status="PASS" starttime="20201115 23:01:51.584" endtime="20201115 23:01:51.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.602" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.601" endtime="20201115 23:01:51.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.605" level="INFO">VALUE: [0.0001234030000000011, 0.000122986000000002, 0.00012294399999999983, 0.0001228059999999996, 0.00012305500000000039, 0.00012337500000000196, 0.00012293000000000026, 0.00012302700000000125, 0.00012269399999999958, 0.00012297199999999897, 0.00012247299999999794, 0.0001234449999999998, 0.00012306999999999943, 0.0001232359999999988, 0.00012275000000000133, 0.00012255499999999989, 0.00012286100000000189, 0.00012313900000000128, 0.0001227229999999982, 0.0001231250000000017, 0.000122986000000002, 0.00012337499999999849, 0.00012250000000000108, 0.0001231800000000005, 0.000122986000000002, 0.00012343100000000023, 0.00012284699999999885, 0.0001227640000000009, 0.00012293099999999973, 0.00012327800000000097, 0.00012287500000000146, 0.00012345899999999937, 0.00012305500000000039, 0.00012250000000000108, 0.00012262499999999774, 0.00012281999999999918, 0.00012305500000000039, 0.00012261100000000164, 0.00012336100000000239, 0.00012263799999999436, 0.0001230689999999965, 0.00012279199999999657, 0.00012324999999999836, 0.0001228050000000036, 0.00012293099999999973, 0.00012276399999999743, 0.00012337500000000196, 0.00012326400000000487, 0.00012322199999999922, 0.0001225700000000024]</msg>
<status status="PASS" starttime="20201115 23:01:51.603" endtime="20201115 23:01:51.605"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.598" endtime="20201115 23:01:51.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.608" endtime="20201115 23:01:51.609"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:51.611" endtime="20201115 23:01:51.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.610" endtime="20201115 23:01:51.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.606" endtime="20201115 23:01:51.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.235" endtime="20201115 23:01:51.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.234" endtime="20201115 23:01:51.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.233" endtime="20201115 23:01:51.633"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.635" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.643" endtime="20201115 23:01:51.664"></status>
</kw>
<msg timestamp="20201115 23:01:51.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.641" endtime="20201115 23:01:51.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:51.665" endtime="20201115 23:01:51.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.668" endtime="20201115 23:01:51.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.639" endtime="20201115 23:01:51.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.637" endtime="20201115 23:01:51.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.677" endtime="20201115 23:01:51.961"></status>
</kw>
<msg timestamp="20201115 23:01:51.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023714, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:51.675" endtime="20201115 23:01:51.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023589722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023714, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201115 23:01:51.965" endtime="20201115 23:01:51.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:51.973" endtime="20201115 23:01:51.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.673" endtime="20201115 23:01:51.975"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.671" endtime="20201115 23:01:51.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:51.980" level="INFO">${RESULT} = [{'time': 0.023714, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001242779999999985, 'source_diff': 0.0001242779999999985}, {'time': 0.023895292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201115 23:01:51.977" endtime="20201115 23:01:51.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:51.993" level="INFO">${ACCURACY} = {'diff': [0.0001242779999999985, 0.0001244589999999969, 0.00012398599999999954, 0.00012436099999999992, 0.00012381899999999724, 0.0001236250000000022, 0.00012355600000000036, 0.00012355600000000036, 0...</msg>
<status status="PASS" starttime="20201115 23:01:51.981" endtime="20201115 23:01:51.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:51.998" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201115 23:01:51.997" endtime="20201115 23:01:51.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.000" level="INFO">VALUE: [0.0001242779999999985, 0.0001244589999999969, 0.00012398599999999954, 0.00012436099999999992, 0.00012381899999999724, 0.0001236250000000022, 0.00012355600000000036, 0.00012355600000000036, 0.00012405500000000139, 0.00012373699999999876, 0.00012394400000000083, 0.00012350000000000208, 0.00012350000000000208, 0.0001240970000000001, 0.0001239999999999991, 0.00012436099999999992, 0.00012398599999999954, 0.00012443099999999777, 0.00012404100000000182, 0.00012348599999999904, 0.00012434799999999982, 0.0001241800000000015, 0.00012397199999999997, 0.00012355499999999742, 0.00012369500000000005, 0.0001243060000000011, 0.00012351400000000165, 0.00012443000000000176, 0.00012420800000000065, 0.00012361099999999917, 0.00012381899999999724, 0.00012440199999999915, 0.00012361099999999917, 0.00012394400000000083, 0.00012384699999999985, 0.00012368099999999702, 0.00012429200000000154, 0.00012437499999999949, 0.00012427800000000197, 0.0001243190000000012, 0.00012393100000000074, 0.00012411099999999967, 0.00012379199999999757, 0.00012413900000000228, 0.00012352799999999775, 0.00012441599999999525, 0.0001236250000000022, 0.0001239580000000004, 0.00012422200000000022, 0.00012348599999999904]</msg>
<status status="PASS" starttime="20201115 23:01:51.999" endtime="20201115 23:01:52.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.994" endtime="20201115 23:01:52.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.004" endtime="20201115 23:01:52.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.007" endtime="20201115 23:01:52.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.005" endtime="20201115 23:01:52.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.002" endtime="20201115 23:01:52.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.635" endtime="20201115 23:01:52.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.634" endtime="20201115 23:01:52.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:51.633" endtime="20201115 23:01:52.028"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.039" endtime="20201115 23:01:52.059"></status>
</kw>
<msg timestamp="20201115 23:01:52.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.037" endtime="20201115 23:01:52.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.061" endtime="20201115 23:01:52.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.063" endtime="20201115 23:01:52.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.034" endtime="20201115 23:01:52.065"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.032" endtime="20201115 23:01:52.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.072" endtime="20201115 23:01:52.358"></status>
</kw>
<msg timestamp="20201115 23:01:52.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.071" endtime="20201115 23:01:52.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023578958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:52.362" endtime="20201115 23:01:52.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.370" endtime="20201115 23:01:52.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.068" endtime="20201115 23:01:52.372"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.066" endtime="20201115 23:01:52.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.376" level="INFO">${RESULT} = [{'time': 0.023703722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012476399999999943, 'source_diff': 0.00012476399999999943}, {'time': 0.023891042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:52.373" endtime="20201115 23:01:52.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.390" level="INFO">${ACCURACY} = {'diff': [0.00012476399999999943, 0.00012525000000000036, 0.00012495900000000087, 0.00012487499999999999, 0.00012473599999999682, 0.00012451400000000265, 0.0001245129999999997, 0.0001253199999999982, ...</msg>
<status status="PASS" starttime="20201115 23:01:52.378" endtime="20201115 23:01:52.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.394" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.393" endtime="20201115 23:01:52.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.397" level="INFO">VALUE: [0.00012476399999999943, 0.00012525000000000036, 0.00012495900000000087, 0.00012487499999999999, 0.00012473599999999682, 0.00012451400000000265, 0.0001245129999999997, 0.0001253199999999982, 0.00012483400000000075, 0.00012494399999999836, 0.00012512500000000024, 0.0001253329999999983, 0.00012447200000000047, 0.00012530599999999864, 0.00012487499999999999, 0.00012517999999999904, 0.00012487499999999999, 0.00012538900000000006, 0.00012515299999999938, 0.00012508300000000153, 0.0001249030000000026, 0.00012448600000000004, 0.00012538900000000006, 0.00012508300000000153, 0.0001250970000000011, 0.00012495900000000087, 0.00012452799999999875, 0.00012501399999999968, 0.0001251800000000025, 0.0001254299999999993, 0.00012488899999999956, 0.00012537500000000049, 0.00012518099999999852, 0.0001248060000000016, 0.00012462499999999974, 0.00012518100000000199, 0.00012451400000000265, 0.00012512500000000024, 0.00012540299999999963, 0.00012481899999999824, 0.00012543100000000224, 0.0001251800000000025, 0.00012462499999999627, 0.00012470900000000062, 0.0001248199999999977, 0.00012490299999999566, 0.00012506900000000543, 0.0001253889999999966, 0.00012516699999999548, 0.0001248879999999966]</msg>
<status status="PASS" starttime="20201115 23:01:52.395" endtime="20201115 23:01:52.397"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.391" endtime="20201115 23:01:52.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.400" endtime="20201115 23:01:52.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.403" endtime="20201115 23:01:52.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.402" endtime="20201115 23:01:52.423"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.398" endtime="20201115 23:01:52.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.031" endtime="20201115 23:01:52.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.029" endtime="20201115 23:01:52.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.028" endtime="20201115 23:01:52.424"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.427" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.435" endtime="20201115 23:01:52.455"></status>
</kw>
<msg timestamp="20201115 23:01:52.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.433" endtime="20201115 23:01:52.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.457" endtime="20201115 23:01:52.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.460" endtime="20201115 23:01:52.461"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.431" endtime="20201115 23:01:52.462"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.429" endtime="20201115 23:01:52.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.469" endtime="20201115 23:01:52.754"></status>
</kw>
<msg timestamp="20201115 23:01:52.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:52.467" endtime="20201115 23:01:52.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023684694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:01:52.758" endtime="20201115 23:01:52.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.766" endtime="20201115 23:01:52.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.464" endtime="20201115 23:01:52.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.463" endtime="20201115 23:01:52.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:52.773" level="INFO">${RESULT} = [{'time': 0.023684694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001261939999999996, 'source_diff': 0.0001261939999999996}, {'time': 0.023864014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:52.770" endtime="20201115 23:01:52.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:52.786" level="INFO">${ACCURACY} = {'diff': [0.0001261939999999996, 0.00012630599999999964, 0.00012630599999999964, 0.000125568999999999, 0.00012618000000000004, 0.0001262360000000018, 0.00012637499999999802, 0.0001256390000000003, 0.0...</msg>
<status status="PASS" starttime="20201115 23:01:52.774" endtime="20201115 23:01:52.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.790" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201115 23:01:52.789" endtime="20201115 23:01:52.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.793" level="INFO">VALUE: [0.0001261939999999996, 0.00012630599999999964, 0.00012630599999999964, 0.000125568999999999, 0.00012618000000000004, 0.0001262360000000018, 0.00012637499999999802, 0.0001256390000000003, 0.00012647299999999848, 0.0001260000000000011, 0.00012573599999999782, 0.00012562500000000074, 0.0001256390000000003, 0.00012548600000000104, 0.00012579199999999957, 0.0001255559999999989, 0.00012587499999999752, 0.00012573599999999782, 0.0001263620000000014, 0.00012569499999999859, 0.0001259719999999985, 0.00012623599999999832, 0.00012576400000000043, 0.00012544399999999886, 0.00012640300000000063, 0.00012586100000000142, 0.00012634699999999888, 0.0001262360000000018, 0.0001255130000000007, 0.00012625000000000136, 0.0001260979999999981, 0.0001260559999999994, 0.00012555499999999942, 0.00012630599999999964, 0.00012629200000000007, 0.00012588900000000056, 0.0001264300000000003, 0.00012606999999999896, 0.00012627799999999703, 0.00012604100000000035, 0.00012622299999999823, 0.00012569499999999859, 0.00012643099999999977, 0.00012630500000000017, 0.0001261109999999982, 0.00012587499999999752, 0.00012555600000000583, 0.0001260000000000011, 0.00012575000000000086, 0.000125568999999999]</msg>
<status status="PASS" starttime="20201115 23:01:52.791" endtime="20201115 23:01:52.793"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.787" endtime="20201115 23:01:52.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.796" endtime="20201115 23:01:52.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:52.800" endtime="20201115 23:01:52.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.798" endtime="20201115 23:01:52.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.794" endtime="20201115 23:01:52.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.427" endtime="20201115 23:01:52.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.426" endtime="20201115 23:01:52.821"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.425" endtime="20201115 23:01:52.822"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.824" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.832" endtime="20201115 23:01:52.854"></status>
</kw>
<msg timestamp="20201115 23:01:52.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.831" endtime="20201115 23:01:52.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:52.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:52.855" endtime="20201115 23:01:52.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.858" endtime="20201115 23:01:52.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.828" endtime="20201115 23:01:52.860"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.826" endtime="20201115 23:01:52.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:52.867" endtime="20201115 23:01:53.170"></status>
</kw>
<msg timestamp="20201115 23:01:53.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02477225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:52.866" endtime="20201115 23:01:53.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024645444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02477225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:01:53.179" endtime="20201115 23:01:53.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.193" endtime="20201115 23:01:53.194"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.863" endtime="20201115 23:01:53.195"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.861" endtime="20201115 23:01:53.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.199" level="INFO">${RESULT} = [{'time': 0.02477225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012680600000000014, 'source_diff': 0.00012680600000000014}, {'time': 0.024958528, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:53.196" endtime="20201115 23:01:53.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.214" level="INFO">${ACCURACY} = {'diff': [0.00012680600000000014, 0.0001270560000000004, 0.00012670900000000263, 0.00012655500000000042, 0.00012726399999999846, 0.00012666700000000045, 0.00012669499999999959, 0.00012705500000000092,...</msg>
<status status="PASS" starttime="20201115 23:01:53.200" endtime="20201115 23:01:53.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.218" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.217" endtime="20201115 23:01:53.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.221" level="INFO">VALUE: [0.00012680600000000014, 0.0001270560000000004, 0.00012670900000000263, 0.00012655500000000042, 0.00012726399999999846, 0.00012666700000000045, 0.00012669499999999959, 0.00012705500000000092, 0.000126471999999999, 0.0001271529999999979, 0.0001273330000000003, 0.00012695799999999993, 0.00012709699999999963, 0.00012715199999999843, 0.000126471999999999, 0.0001270269999999983, 0.00012734699999999988, 0.00012722199999999975, 0.0001267499999999984, 0.00012686199999999842, 0.00012698600000000254, 0.0001272919999999976, 0.0001274300000000013, 0.00012684699999999938, 0.00012684699999999938, 0.00012673599999999882, 0.00012662500000000174, 0.00012668100000000002, 0.00012698599999999907, 0.00012734699999999988, 0.00012681900000000024, 0.0001274170000000012, 0.0001272919999999976, 0.0001266520000000014, 0.00012666699999999698, 0.00012688900000000156, 0.0001265970000000026, 0.00012691599999999775, 0.0001274160000000052, 0.0001270560000000004, 0.00012718099999999705, 0.0001265559999999999, 0.00012698600000000254, 0.00012734699999999988, 0.00012709699999999963, 0.00012672200000000272, 0.00012724999999999542, 0.00012734799999999935, 0.00012691700000000417, 0.00012697199999999603]</msg>
<status status="PASS" starttime="20201115 23:01:53.220" endtime="20201115 23:01:53.221"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.215" endtime="20201115 23:01:53.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.224" endtime="20201115 23:01:53.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.227" endtime="20201115 23:01:53.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.226" endtime="20201115 23:01:53.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.222" endtime="20201115 23:01:53.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.825" endtime="20201115 23:01:53.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.823" endtime="20201115 23:01:53.248"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:52.822" endtime="20201115 23:01:53.249"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.251" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.260" endtime="20201115 23:01:53.280"></status>
</kw>
<msg timestamp="20201115 23:01:53.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.258" endtime="20201115 23:01:53.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.282" endtime="20201115 23:01:53.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.285" endtime="20201115 23:01:53.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.255" endtime="20201115 23:01:53.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.253" endtime="20201115 23:01:53.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.296" endtime="20201115 23:01:53.583"></status>
</kw>
<msg timestamp="20201115 23:01:53.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024365722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.294" endtime="20201115 23:01:53.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024365722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.588" endtime="20201115 23:01:53.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.597" endtime="20201115 23:01:53.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.291" endtime="20201115 23:01:53.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.289" endtime="20201115 23:01:53.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:53.605" level="INFO">${RESULT} = [{'time': 0.024365722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012804099999999888, 'source_diff': 0.00012804099999999888}, {'time': 0.024539056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:53.601" endtime="20201115 23:01:53.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:53.620" level="INFO">${ACCURACY} = {'diff': [0.00012804099999999888, 0.00012816699999999848, 0.00012797199999999703, 0.00012773599999999982, 0.00012818000000000204, 0.00012826399999999946, 0.000127472, 0.00012834800000000035, 0.0001279...</msg>
<status status="PASS" starttime="20201115 23:01:53.607" endtime="20201115 23:01:53.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.625" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201115 23:01:53.624" endtime="20201115 23:01:53.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.628" level="INFO">VALUE: [0.00012804099999999888, 0.00012816699999999848, 0.00012797199999999703, 0.00012773599999999982, 0.00012818000000000204, 0.00012826399999999946, 0.000127472, 0.00012834800000000035, 0.00012793100000000127, 0.00012787499999999952, 0.00012784700000000038, 0.0001281529999999989, 0.00012792999999999832, 0.00012749999999999914, 0.000127569000000001, 0.00012758300000000056, 0.00012805599999999792, 0.00012809700000000063, 0.00012758300000000056, 0.00012791699999999823, 0.00012786099999999995, 0.0001282079999999977, 0.00012767999999999807, 0.00012815300000000238, 0.0001277499999999994, 0.0001281110000000002, 0.00012797199999999703, 0.0001281529999999989, 0.00012834700000000088, 0.00012773599999999982, 0.0001282369999999998, 0.0001281110000000002, 0.00012831900000000174, 0.00012779200000000157, 0.00012762499999999927, 0.00012809700000000063, 0.00012817999999999857, 0.00012777700000000253, 0.00012783299999999734, 0.0001282079999999977, 0.00012830600000000164, 0.00012767999999999807, 0.00012799999999999617, 0.0001277910000000021, 0.0001279729999999965, 0.00012816700000000542, 0.00012774999999999592, 0.00012752800000000175, 0.0001279439999999979, 0.00012822200000000422]</msg>
<status status="PASS" starttime="20201115 23:01:53.627" endtime="20201115 23:01:53.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.621" endtime="20201115 23:01:53.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.632" endtime="20201115 23:01:53.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:53.641" endtime="20201115 23:01:53.660"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.635" endtime="20201115 23:01:53.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.630" endtime="20201115 23:01:53.661"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.252" endtime="20201115 23:01:53.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.250" endtime="20201115 23:01:53.662"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.249" endtime="20201115 23:01:53.662"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.664" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.672" endtime="20201115 23:01:53.693"></status>
</kw>
<msg timestamp="20201115 23:01:53.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.671" endtime="20201115 23:01:53.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:53.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:53.695" endtime="20201115 23:01:53.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.698" endtime="20201115 23:01:53.700"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.668" endtime="20201115 23:01:53.701"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.666" endtime="20201115 23:01:53.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:53.709" endtime="20201115 23:01:53.997"></status>
</kw>
<msg timestamp="20201115 23:01:54.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023766153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:53.707" endtime="20201115 23:01:54.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023766153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023895333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.001" endtime="20201115 23:01:54.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.011" endtime="20201115 23:01:54.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.704" endtime="20201115 23:01:54.013"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.702" endtime="20201115 23:01:54.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.019" level="INFO">${RESULT} = [{'time': 0.023895333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012917999999999957, 'source_diff': 0.00012917999999999957}, {'time': 0.024084625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.015" endtime="20201115 23:01:54.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.033" level="INFO">${ACCURACY} = {'diff': [0.00012917999999999957, 0.00012897199999999803, 0.00012918099999999905, 0.0001292769999999971, 0.0001293469999999984, 0.0001290270000000003, 0.00012941699999999973, 0.00012847300000000048, 0...</msg>
<status status="PASS" starttime="20201115 23:01:54.020" endtime="20201115 23:01:54.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.038" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.037" endtime="20201115 23:01:54.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.041" level="INFO">VALUE: [0.00012917999999999957, 0.00012897199999999803, 0.00012918099999999905, 0.0001292769999999971, 0.0001293469999999984, 0.0001290270000000003, 0.00012941699999999973, 0.00012847300000000048, 0.00012945899999999844, 0.00012907000000000196, 0.0001287500000000004, 0.00012891599999999975, 0.0001291110000000012, 0.00012850000000000014, 0.0001291940000000026, 0.00012922300000000123, 0.00012861099999999723, 0.00012926400000000046, 0.00012927800000000003, 0.00012858400000000103, 0.00012844500000000134, 0.00012886100000000095, 0.00012892999999999932, 0.00012902799999999978, 0.0001284590000000009, 0.0001286659999999995, 0.00012887500000000052, 0.00012887500000000052, 0.0001288469999999979, 0.00012884700000000138, 0.0001291529999999999, 0.00012858300000000156, 0.00012862500000000027, 0.00012890200000000018, 0.00012891699999999923, 0.00012920899999999819, 0.00012915200000000043, 0.0001290829999999986, 0.00012852799999999928, 0.00012906899999999902, 0.00012894400000000236, 0.00012926400000000393, 0.00012923599999999785, 0.00012884700000000138, 0.00012898700000000402, 0.00012902699999999684, 0.00012899999999999717, 0.00012873599999999735, 0.0001286659999999995, 0.00012920900000000513]</msg>
<status status="PASS" starttime="20201115 23:01:54.040" endtime="20201115 23:01:54.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.034" endtime="20201115 23:01:54.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.045" endtime="20201115 23:01:54.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.048" endtime="20201115 23:01:54.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.047" endtime="20201115 23:01:54.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.043" endtime="20201115 23:01:54.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.665" endtime="20201115 23:01:54.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.663" endtime="20201115 23:01:54.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:53.662" endtime="20201115 23:01:54.070"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.072" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.080" endtime="20201115 23:01:54.101"></status>
</kw>
<msg timestamp="20201115 23:01:54.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.079" endtime="20201115 23:01:54.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.102" endtime="20201115 23:01:54.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.105" endtime="20201115 23:01:54.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.076" endtime="20201115 23:01:54.108"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.074" endtime="20201115 23:01:54.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.117" endtime="20201115 23:01:54.404"></status>
</kw>
<msg timestamp="20201115 23:01:54.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023780944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.115" endtime="20201115 23:01:54.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023780944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.409" endtime="20201115 23:01:54.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.417" endtime="20201115 23:01:54.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.112" endtime="20201115 23:01:54.420"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.110" endtime="20201115 23:01:54.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.426" level="INFO">${RESULT} = [{'time': 0.023780944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012986099999999848, 'source_diff': 0.00012986099999999848}, {'time': 0.02397325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:01:54.422" endtime="20201115 23:01:54.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.439" level="INFO">${ACCURACY} = {'diff': [0.00012986099999999848, 0.00012980600000000314, 0.0001304440000000004, 0.000130263999999998, 0.00012972200000000225, 0.00012993000000000032, 0.0001296249999999978, 0.0001296660000000005, 0.0...</msg>
<status status="PASS" starttime="20201115 23:01:54.427" endtime="20201115 23:01:54.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.444" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.443" endtime="20201115 23:01:54.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.447" level="INFO">VALUE: [0.00012986099999999848, 0.00012980600000000314, 0.0001304440000000004, 0.000130263999999998, 0.00012972200000000225, 0.00012993000000000032, 0.0001296249999999978, 0.0001296660000000005, 0.0001302079999999997, 0.00012955499999999995, 0.00012956899999999952, 0.00013029199999999713, 0.0001300699999999995, 0.00012990200000000118, 0.0001302920000000006, 0.00012984700000000238, 0.00013041700000000073, 0.0001302920000000006, 0.00013022199999999928, 0.00012988899999999762, 0.0001299309999999998, 0.00013013900000000134, 0.00012995799999999946, 0.00012979099999999716, 0.0001300829999999996, 0.00013015200000000143, 0.00013016700000000048, 0.00013024999999999842, 0.00012990300000000066, 0.00012972199999999878, 0.00012961099999999823, 0.0001296660000000005, 0.00013022299999999876, 0.0001300140000000012, 0.00013037499999999855, 0.00013009699999999916, 0.00012972199999999878, 0.00012966699999999998, 0.000130166000000001, 0.0001300279999999973, 0.0001300829999999996, 0.00013008300000000306, 0.0001295560000000029, 0.00013034699999999594, 0.0001295409999999969, 0.00013029199999999713, 0.00012951399999999724, 0.00013036100000000245, 0.00013027799999999756, 0.0001299859999999986]</msg>
<status status="PASS" starttime="20201115 23:01:54.445" endtime="20201115 23:01:54.447"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.440" endtime="20201115 23:01:54.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.450" endtime="20201115 23:01:54.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.453" endtime="20201115 23:01:54.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.452" endtime="20201115 23:01:54.473"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.448" endtime="20201115 23:01:54.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.073" endtime="20201115 23:01:54.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.071" endtime="20201115 23:01:54.474"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.070" endtime="20201115 23:01:54.475"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.477" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.485" endtime="20201115 23:01:54.507"></status>
</kw>
<msg timestamp="20201115 23:01:54.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.484" endtime="20201115 23:01:54.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.509" endtime="20201115 23:01:54.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.511" endtime="20201115 23:01:54.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.481" endtime="20201115 23:01:54.513"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.479" endtime="20201115 23:01:54.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.520" endtime="20201115 23:01:54.806"></status>
</kw>
<msg timestamp="20201115 23:01:54.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.519" endtime="20201115 23:01:54.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024745542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024876514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.810" endtime="20201115 23:01:54.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.818" endtime="20201115 23:01:54.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.516" endtime="20201115 23:01:54.820"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.514" endtime="20201115 23:01:54.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:54.825" level="INFO">${RESULT} = [{'time': 0.024876514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013097200000000003, 'source_diff': 0.00013097200000000003}, {'time': 0.025067806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:54.822" endtime="20201115 23:01:54.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:54.840" level="INFO">${ACCURACY} = {'diff': [0.00013097200000000003, 0.0001307920000000011, 0.00013093099999999733, 0.000131166000000002, 0.0001308339999999998, 0.00013142999999999835, 0.00013054199999999738, 0.0001306660000000015, 0.0...</msg>
<status status="PASS" starttime="20201115 23:01:54.826" endtime="20201115 23:01:54.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.844" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201115 23:01:54.843" endtime="20201115 23:01:54.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.847" level="INFO">VALUE: [0.00013097200000000003, 0.0001307920000000011, 0.00013093099999999733, 0.000131166000000002, 0.0001308339999999998, 0.00013142999999999835, 0.00013054199999999738, 0.0001306660000000015, 0.00013123599999999985, 0.00013088899999999862, 0.00013097200000000003, 0.0001313189999999978, 0.00013118100000000105, 0.00013109700000000016, 0.00013129099999999866, 0.00013104200000000135, 0.00013066599999999803, 0.0001313470000000004, 0.0001308469999999999, 0.0001313340000000003, 0.0001307639999999985, 0.00013104200000000135, 0.00013127799999999856, 0.00013141599999999878, 0.00013116700000000148, 0.00013047199999999953, 0.00013076400000000196, 0.00013072199999999978, 0.00013109700000000016, 0.00013123599999999985, 0.00013136099999999998, 0.00013143099999999783, 0.00013062500000000227, 0.00013116700000000148, 0.00013109700000000016, 0.000131166000000002, 0.00013095899999999994, 0.0001313330000000043, 0.00013099999999999917, 0.0001306530000000014, 0.0001309729999999995, 0.00013066700000000098, 0.0001307089999999997, 0.00013052700000000528, 0.00013072199999999978, 0.00013090200000000218, 0.00013091700000000123, 0.00013077799999999806, 0.00013109799999999616, 0.0001306660000000015]</msg>
<status status="PASS" starttime="20201115 23:01:54.845" endtime="20201115 23:01:54.847"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.841" endtime="20201115 23:01:54.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.850" endtime="20201115 23:01:54.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:54.853" endtime="20201115 23:01:54.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.852" endtime="20201115 23:01:54.873"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.848" endtime="20201115 23:01:54.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.478" endtime="20201115 23:01:54.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.476" endtime="20201115 23:01:54.874"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.475" endtime="20201115 23:01:54.874"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SET for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.877" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SET for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.885" endtime="20201115 23:01:54.906"></status>
</kw>
<msg timestamp="20201115 23:01:54.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.883" endtime="20201115 23:01:54.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:54.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:54.908" endtime="20201115 23:01:54.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.910" endtime="20201115 23:01:54.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.881" endtime="20201115 23:01:54.912"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.879" endtime="20201115 23:01:54.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:54.919" endtime="20201115 23:01:55.204"></status>
</kw>
<msg timestamp="20201115 23:01:55.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023808417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023940292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:54.918" endtime="20201115 23:01:55.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023808417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023940292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.208" endtime="20201115 23:01:55.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.217" endtime="20201115 23:01:55.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.915" endtime="20201115 23:01:55.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.913" endtime="20201115 23:01:55.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.223" level="INFO">${RESULT} = [{'time': 0.023940292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013187500000000005, 'source_diff': 0.00013187500000000005}, {'time': 0.024136556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:55.220" endtime="20201115 23:01:55.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.236" level="INFO">${ACCURACY} = {'diff': [0.00013187500000000005, 0.0001317090000000007, 0.000132166999999999, 0.0001319029999999992, 0.00013201399999999974, 0.0001316799999999986, 0.00013205499999999898, 0.00013205600000000192, 0.0...</msg>
<status status="PASS" starttime="20201115 23:01:55.224" endtime="20201115 23:01:55.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.241" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.240" endtime="20201115 23:01:55.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.243" level="INFO">VALUE: [0.00013187500000000005, 0.0001317090000000007, 0.000132166999999999, 0.0001319029999999992, 0.00013201399999999974, 0.0001316799999999986, 0.00013205499999999898, 0.00013205600000000192, 0.00013177800000000253, 0.0001314579999999975, 0.00013163899999999937, 0.00013151399999999924, 0.00013229199999999913, 0.0001320409999999994, 0.00013233299999999837, 0.00013149999999999967, 0.0001323609999999975, 0.0001319440000000019, 0.00013144399999999792, 0.00013156899999999805, 0.00013149999999999967, 0.0001319860000000006, 0.00013237500000000055, 0.000132264, 0.0001319449999999979, 0.00013187500000000005, 0.00013241599999999978, 0.00013169399999999817, 0.00013223600000000085, 0.00013219500000000162, 0.0001317639999999995, 0.00013169399999999817, 0.0001318189999999983, 0.0001320830000000016, 0.0001322920000000026, 0.00013177799999999906, 0.0001316799999999986, 0.0001316249999999998, 0.00013174999999999992, 0.0001316249999999998, 0.00013158299999999762, 0.00013162499999999633, 0.0001314860000000001, 0.000132264, 0.00013174999999999992, 0.0001316939999999947, 0.00013222200000000128, 0.000132264, 0.00013144500000000087, 0.00013205599999999845]</msg>
<status status="PASS" starttime="20201115 23:01:55.242" endtime="20201115 23:01:55.244"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.237" endtime="20201115 23:01:55.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.247" endtime="20201115 23:01:55.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.250" endtime="20201115 23:01:55.269"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.249" endtime="20201115 23:01:55.270"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.245" endtime="20201115 23:01:55.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.877" endtime="20201115 23:01:55.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.876" endtime="20201115 23:01:55.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:54.875" endtime="20201115 23:01:55.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:15.620" endtime="20201115 23:01:55.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.276" endtime="20201115 23:01:55.295"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.274" endtime="20201115 23:01:55.296"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.273" endtime="20201115 23:01:55.296"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:15.551" endtime="20201115 23:01:55.297" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.304" endtime="20201115 23:01:55.324"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.303" endtime="20201115 23:01:55.324"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.338" endtime="20201115 23:01:55.350"></status>
</kw>
<msg timestamp="20201115 23:01:55.351" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.336" endtime="20201115 23:01:55.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.352" endtime="20201115 23:01:55.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.357" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201115 23:01:55.355" endtime="20201115 23:01:55.357"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:55.334" endtime="20201115 23:01:55.358"></status>
</kw>
<status status="FAIL" starttime="20201115 23:01:55.332" endtime="20201115 23:01:55.359"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.329" endtime="20201115 23:01:55.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201115 23:01:55.363" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201115 23:01:55.362" endtime="20201115 23:01:55.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.360" endtime="20201115 23:01:55.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.329" endtime="20201115 23:01:55.363"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.328" endtime="20201115 23:01:55.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.364" endtime="20201115 23:01:55.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.327" endtime="20201115 23:01:55.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.325" endtime="20201115 23:01:55.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.301" endtime="20201115 23:01:55.367"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.371" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 1">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.379" endtime="20201115 23:01:55.393"></status>
</kw>
<msg timestamp="20201115 23:01:55.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.377" endtime="20201115 23:01:55.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.395" endtime="20201115 23:01:55.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.397" endtime="20201115 23:01:55.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.375" endtime="20201115 23:01:55.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.373" endtime="20201115 23:01:55.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.407" endtime="20201115 23:01:55.692"></status>
</kw>
<msg timestamp="20201115 23:01:55.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066761375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066793681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.406" endtime="20201115 23:01:55.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066761375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066793681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.696" endtime="20201115 23:01:55.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.704" endtime="20201115 23:01:55.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.402" endtime="20201115 23:01:55.706"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.400" endtime="20201115 23:01:55.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:55.711" level="INFO">${RESULT} = [{'time': 0.066793681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.230599999999584e-05, 'source_diff': 3.230599999999584e-05}, {'time': 0.066849569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:55.708" endtime="20201115 23:01:55.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:55.725" level="INFO">${ACCURACY} = {'diff': [3.230599999999584e-05, 3.158300000000169e-05, 3.161100000000083e-05, 3.162500000000734e-05, 3.161100000000083e-05, 3.15979999999938e-05, 3.158300000000169e-05, 3.1598000000007676e-05, 3.1541...</msg>
<status status="PASS" starttime="20201115 23:01:55.712" endtime="20201115 23:01:55.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.729" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201115 23:01:55.728" endtime="20201115 23:01:55.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.732" level="INFO">VALUE: [3.230599999999584e-05, 3.158300000000169e-05, 3.161100000000083e-05, 3.162500000000734e-05, 3.161100000000083e-05, 3.15979999999938e-05, 3.158300000000169e-05, 3.1598000000007676e-05, 3.154100000000992e-05, 3.158399999998729e-05, 3.158400000000117e-05, 3.1612000000000307e-05, 3.158300000000169e-05, 3.1596999999994324e-05, 3.158300000000169e-05, 3.156900000000906e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.163899999999997e-05, 3.1598000000007676e-05, 3.1596999999994324e-05, 3.161100000000083e-05, 3.161100000000083e-05, 3.15970000000082e-05, 3.163899999999997e-05, 3.1598000000007676e-05, 3.1596999999994324e-05, 3.15979999999938e-05, 3.1596999999994324e-05, 3.1596999999994324e-05, 3.158400000000117e-05, 3.158300000000169e-05, 3.161100000000083e-05, 3.152800000000289e-05, 3.1568999999995184e-05, 3.156999999999466e-05, 3.158300000000169e-05, 3.161100000000083e-05, 3.156900000000906e-05, 3.158300000000169e-05, 3.152800000000289e-05, 3.1568999999995184e-05, 3.158300000000169e-05, 3.1596999999994324e-05, 3.1598000000007676e-05, 3.161100000000083e-05, 3.161100000000083e-05, 3.158400000000117e-05, 3.1596999999994324e-05, 3.1598000000007676e-05]</msg>
<status status="PASS" starttime="20201115 23:01:55.730" endtime="20201115 23:01:55.732"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.726" endtime="20201115 23:01:55.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.735" endtime="20201115 23:01:55.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:55.738" endtime="20201115 23:01:55.758"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.737" endtime="20201115 23:01:55.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.733" endtime="20201115 23:01:55.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.371" endtime="20201115 23:01:55.759"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.369" endtime="20201115 23:01:55.760"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.368" endtime="20201115 23:01:55.760"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.762" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 2">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.770" endtime="20201115 23:01:55.784"></status>
</kw>
<msg timestamp="20201115 23:01:55.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.769" endtime="20201115 23:01:55.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:55.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:55.786" endtime="20201115 23:01:55.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.789" endtime="20201115 23:01:55.790"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.766" endtime="20201115 23:01:55.791"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.764" endtime="20201115 23:01:55.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:55.798" endtime="20201115 23:01:56.084"></status>
</kw>
<msg timestamp="20201115 23:01:56.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023839528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023871861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:55.796" endtime="20201115 23:01:56.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023839528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023871861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.089" endtime="20201115 23:01:56.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.097" endtime="20201115 23:01:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.793" endtime="20201115 23:01:56.099"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.792" endtime="20201115 23:01:56.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.104" level="INFO">${RESULT} = [{'time': 0.023871861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.233300000000244e-05, 'source_diff': 3.233300000000244e-05}, {'time': 0.023926222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.100" endtime="20201115 23:01:56.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.117" level="INFO">${ACCURACY} = {'diff': [3.233300000000244e-05, 3.161100000000083e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.159700000000126e-05, 3.151399999999985e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.159...</msg>
<status status="PASS" starttime="20201115 23:01:56.105" endtime="20201115 23:01:56.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.122" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.121" endtime="20201115 23:01:56.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.124" level="INFO">VALUE: [3.233300000000244e-05, 3.161100000000083e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.159700000000126e-05, 3.151399999999985e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.1598000000000737e-05, 3.1610999999997363e-05, 3.159700000000126e-05, 3.158300000000169e-05, 3.156999999999813e-05, 3.1598000000000737e-05, 3.159799999999727e-05, 3.161100000000083e-05, 3.1582999999998224e-05, 3.158400000000117e-05, 3.15839999999977e-05, 3.159700000000126e-05, 3.1596999999997794e-05, 3.15700000000016e-05, 3.161100000000083e-05, 3.1568999999998654e-05, 3.161100000000083e-05, 3.158400000000117e-05, 3.158400000000117e-05, 3.1582999999998224e-05, 3.158400000000117e-05, 3.159700000000126e-05, 3.155599999999856e-05, 3.1582999999998224e-05, 3.161100000000083e-05, 3.1596999999997794e-05, 3.1596999999997794e-05, 3.158400000000117e-05, 3.165299999999954e-05, 3.1612000000000307e-05, 3.161100000000083e-05, 3.158300000000169e-05, 3.158300000000169e-05, 3.1598000000000737e-05, 3.159700000000126e-05, 3.159700000000126e-05, 3.16250000000004e-05, 3.159700000000126e-05, 3.1598000000000737e-05, 3.1596999999997794e-05, 3.161100000000083e-05, 3.159799999999727e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.123" endtime="20201115 23:01:56.125"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.118" endtime="20201115 23:01:56.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.127" endtime="20201115 23:01:56.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.131" endtime="20201115 23:01:56.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.129" endtime="20201115 23:01:56.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.126" endtime="20201115 23:01:56.151"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.763" endtime="20201115 23:01:56.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.761" endtime="20201115 23:01:56.152"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.760" endtime="20201115 23:01:56.152"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.154" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 3">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.163" endtime="20201115 23:01:56.177"></status>
</kw>
<msg timestamp="20201115 23:01:56.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.161" endtime="20201115 23:01:56.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.179" endtime="20201115 23:01:56.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.181" endtime="20201115 23:01:56.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.159" endtime="20201115 23:01:56.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.156" endtime="20201115 23:01:56.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.192" endtime="20201115 23:01:56.476"></status>
</kw>
<msg timestamp="20201115 23:01:56.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.189" endtime="20201115 23:01:56.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024035403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.480" endtime="20201115 23:01:56.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.488" endtime="20201115 23:01:56.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.187" endtime="20201115 23:01:56.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.184" endtime="20201115 23:01:56.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.495" level="INFO">${RESULT} = [{'time': 0.024035403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.233400000000192e-05, 'source_diff': 3.233400000000192e-05}, {'time': 0.024086333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:56.492" endtime="20201115 23:01:56.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.510" level="INFO">${ACCURACY} = {'diff': [3.233400000000192e-05, 3.161100000000083e-05, 3.1610999999997363e-05, 3.155500000000255e-05, 3.155500000000255e-05, 3.161100000000083e-05, 3.1568999999998654e-05, 3.158400000000117e-05, 3.15...</msg>
<status status="PASS" starttime="20201115 23:01:56.496" endtime="20201115 23:01:56.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.514" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.513" endtime="20201115 23:01:56.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.517" level="INFO">VALUE: [3.233400000000192e-05, 3.161100000000083e-05, 3.1610999999997363e-05, 3.155500000000255e-05, 3.155500000000255e-05, 3.161100000000083e-05, 3.1568999999998654e-05, 3.158400000000117e-05, 3.158300000000169e-05, 3.165299999999954e-05, 3.1596999999997794e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.15839999999977e-05, 3.1582999999998224e-05, 3.1610999999997363e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.1582999999998224e-05, 3.159700000000126e-05, 3.1596999999997794e-05, 3.156999999999813e-05, 3.158400000000117e-05, 3.159799999999727e-05, 3.158400000000117e-05, 3.158300000000169e-05, 3.1582999999998224e-05, 3.1513000000000374e-05, 3.1568999999998654e-05, 3.159700000000126e-05, 3.159700000000126e-05, 3.16250000000004e-05, 3.1568999999998654e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.1582999999998224e-05, 3.1582999999998224e-05, 3.161100000000083e-05, 3.161100000000083e-05, 3.156900000000212e-05, 3.159700000000126e-05, 3.168000000000268e-05, 3.159700000000126e-05, 3.159700000000126e-05, 3.15700000000016e-05, 3.1598000000000737e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.515" endtime="20201115 23:01:56.517"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.511" endtime="20201115 23:01:56.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.520" endtime="20201115 23:01:56.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.523" endtime="20201115 23:01:56.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.522" endtime="20201115 23:01:56.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.518" endtime="20201115 23:01:56.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.155" endtime="20201115 23:01:56.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.153" endtime="20201115 23:01:56.544"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.152" endtime="20201115 23:01:56.544"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.547" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 4">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.555" endtime="20201115 23:01:56.569"></status>
</kw>
<msg timestamp="20201115 23:01:56.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.553" endtime="20201115 23:01:56.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.571" endtime="20201115 23:01:56.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.574" endtime="20201115 23:01:56.575"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.551" endtime="20201115 23:01:56.576"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.549" endtime="20201115 23:01:56.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.583" endtime="20201115 23:01:56.869"></status>
</kw>
<msg timestamp="20201115 23:01:56.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.581" endtime="20201115 23:01:56.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.873" endtime="20201115 23:01:56.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.882" endtime="20201115 23:01:56.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.579" endtime="20201115 23:01:56.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.577" endtime="20201115 23:01:56.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:56.888" level="INFO">${RESULT} = [{'time': 0.023794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2362000000001057e-05, 'source_diff': 3.2362000000001057e-05}, {'time': 0.023842583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:56.885" endtime="20201115 23:01:56.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:56.902" level="INFO">${ACCURACY} = {'diff': [3.2362000000001057e-05, 3.161100000000083e-05, 3.152799999999942e-05, 3.15700000000016e-05, 3.1596999999997794e-05, 3.1610999999997363e-05, 3.165299999999954e-05, 3.159700000000126e-05, 3.15...</msg>
<status status="PASS" starttime="20201115 23:01:56.889" endtime="20201115 23:01:56.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.906" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201115 23:01:56.905" endtime="20201115 23:01:56.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.909" level="INFO">VALUE: [3.2362000000001057e-05, 3.161100000000083e-05, 3.152799999999942e-05, 3.15700000000016e-05, 3.1596999999997794e-05, 3.1610999999997363e-05, 3.165299999999954e-05, 3.159700000000126e-05, 3.158300000000169e-05, 3.158300000000169e-05, 3.158300000000169e-05, 3.1596999999997794e-05, 3.158400000000117e-05, 3.158300000000169e-05, 3.155500000000255e-05, 3.15839999999977e-05, 3.158400000000117e-05, 3.159700000000126e-05, 3.161100000000083e-05, 3.1582999999998224e-05, 3.159700000000126e-05, 3.15700000000016e-05, 3.159700000000126e-05, 3.166699999999911e-05, 3.162499999999693e-05, 3.163899999999997e-05, 3.159700000000126e-05, 3.158300000000169e-05, 3.1596999999997794e-05, 3.161100000000083e-05, 3.161100000000083e-05, 3.1554999999999084e-05, 3.16250000000004e-05, 3.1598000000000737e-05, 3.159700000000126e-05, 3.158300000000169e-05, 3.159700000000126e-05, 3.166599999999964e-05, 3.158300000000169e-05, 3.1598000000000737e-05, 3.161100000000083e-05, 3.1598000000000737e-05, 3.165299999999954e-05, 3.161100000000083e-05, 3.159700000000126e-05, 3.154199999999899e-05, 3.1568999999998654e-05, 3.15700000000016e-05, 3.1582999999998224e-05, 3.1596999999997794e-05]</msg>
<status status="PASS" starttime="20201115 23:01:56.907" endtime="20201115 23:01:56.909"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.903" endtime="20201115 23:01:56.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.912" endtime="20201115 23:01:56.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:56.915" endtime="20201115 23:01:56.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.914" endtime="20201115 23:01:56.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.910" endtime="20201115 23:01:56.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.547" endtime="20201115 23:01:56.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.546" endtime="20201115 23:01:56.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.545" endtime="20201115 23:01:56.936"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.939" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 5">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.947" endtime="20201115 23:01:56.962"></status>
</kw>
<msg timestamp="20201115 23:01:56.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.946" endtime="20201115 23:01:56.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:56.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:56.963" endtime="20201115 23:01:56.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.966" endtime="20201115 23:01:56.967"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.943" endtime="20201115 23:01:56.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.941" endtime="20201115 23:01:56.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:56.975" endtime="20201115 23:01:57.262"></status>
</kw>
<msg timestamp="20201115 23:01:57.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024440153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:56.973" endtime="20201115 23:01:57.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024407819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024440153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.266" endtime="20201115 23:01:57.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.274" endtime="20201115 23:01:57.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.971" endtime="20201115 23:01:57.277"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.969" endtime="20201115 23:01:57.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.281" level="INFO">${RESULT} = [{'time': 0.024440153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.233399999999845e-05, 'source_diff': 3.233399999999845e-05}, {'time': 0.024488292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:57.278" endtime="20201115 23:01:57.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.295" level="INFO">${ACCURACY} = {'diff': [3.233399999999845e-05, 3.162499999999693e-05, 3.1612000000000307e-05, 3.161100000000083e-05, 3.1596999999997794e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.158300000000169e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:01:57.282" endtime="20201115 23:01:57.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.299" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.298" endtime="20201115 23:01:57.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.302" level="INFO">VALUE: [3.233399999999845e-05, 3.162499999999693e-05, 3.1612000000000307e-05, 3.161100000000083e-05, 3.1596999999997794e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.158300000000169e-05, 3.1582999999998224e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.15839999999977e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.16250000000004e-05, 3.156900000000212e-05, 3.158400000000117e-05, 3.1582999999998224e-05, 3.1554999999999084e-05, 3.1582999999998224e-05, 3.1596999999997794e-05, 3.1582999999998224e-05, 3.16250000000004e-05, 3.1582999999998224e-05, 3.161100000000083e-05, 3.159700000000126e-05, 3.161100000000083e-05, 3.1598000000000737e-05, 3.1598000000000737e-05, 3.158300000000169e-05, 3.159799999999727e-05, 3.161100000000083e-05, 3.15700000000016e-05, 3.158300000000169e-05, 3.158400000000117e-05, 3.162499999999693e-05, 3.165299999999954e-05, 3.162499999999693e-05, 3.159700000000126e-05, 3.1598000000000737e-05, 3.163899999999997e-05, 3.156900000000212e-05, 3.1596999999997794e-05, 3.1612000000000307e-05, 3.165299999999954e-05, 3.152799999999942e-05, 3.158300000000169e-05, 3.1596999999997794e-05, 3.1610999999997363e-05, 3.159700000000126e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.300" endtime="20201115 23:01:57.302"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.296" endtime="20201115 23:01:57.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.305" endtime="20201115 23:01:57.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.309" endtime="20201115 23:01:57.328"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.307" endtime="20201115 23:01:57.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.303" endtime="20201115 23:01:57.329"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.940" endtime="20201115 23:01:57.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.938" endtime="20201115 23:01:57.330"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:56.937" endtime="20201115 23:01:57.330"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.332" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 6">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.340" endtime="20201115 23:01:57.355"></status>
</kw>
<msg timestamp="20201115 23:01:57.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.339" endtime="20201115 23:01:57.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.357" endtime="20201115 23:01:57.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.359" endtime="20201115 23:01:57.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.336" endtime="20201115 23:01:57.361"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.334" endtime="20201115 23:01:57.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.368" endtime="20201115 23:01:57.655"></status>
</kw>
<msg timestamp="20201115 23:01:57.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.367" endtime="20201115 23:01:57.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023822125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.659" endtime="20201115 23:01:57.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.668" endtime="20201115 23:01:57.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.364" endtime="20201115 23:01:57.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.362" endtime="20201115 23:01:57.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:57.675" level="INFO">${RESULT} = [{'time': 0.023859472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7347000000000075e-05, 'source_diff': 3.7347000000000075e-05}, {'time': 0.023914389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:57.671" endtime="20201115 23:01:57.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:57.689" level="INFO">${ACCURACY} = {'diff': [3.7347000000000075e-05, 3.655600000000009e-05, 3.161100000000083e-05, 3.656999999999966e-05, 3.648599999999877e-05, 3.6625000000001934e-05, 3.6597000000002794e-05, 3.6582999999999755e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:01:57.676" endtime="20201115 23:01:57.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.693" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201115 23:01:57.692" endtime="20201115 23:01:57.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.696" level="INFO">VALUE: [3.7347000000000075e-05, 3.655600000000009e-05, 3.161100000000083e-05, 3.656999999999966e-05, 3.648599999999877e-05, 3.6625000000001934e-05, 3.6597000000002794e-05, 3.6582999999999755e-05, 3.65979999999988e-05, 3.6597000000002794e-05, 3.649999999999834e-05, 3.655600000000009e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.158400000000117e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.652800000000095e-05, 3.655600000000009e-05, 3.154199999999899e-05, 3.6582999999999755e-05, 3.659800000000227e-05, 3.652799999999748e-05, 3.6582999999999755e-05, 3.1582999999998224e-05, 3.6597000000002794e-05, 3.6569000000000185e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.655600000000009e-05, 3.1582999999998224e-05, 3.656999999999966e-05, 3.6569000000000185e-05, 3.6555000000000615e-05, 3.6582999999999755e-05, 3.15839999999977e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.158300000000169e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.1568999999998654e-05, 3.655600000000009e-05, 3.654200000000052e-05, 3.1568999999998654e-05, 3.656999999999966e-05]</msg>
<status status="PASS" starttime="20201115 23:01:57.694" endtime="20201115 23:01:57.696"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.690" endtime="20201115 23:01:57.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.699" endtime="20201115 23:01:57.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:57.703" endtime="20201115 23:01:57.722"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.701" endtime="20201115 23:01:57.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.698" endtime="20201115 23:01:57.723"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.333" endtime="20201115 23:01:57.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.331" endtime="20201115 23:01:57.724"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.330" endtime="20201115 23:01:57.724"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.726" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 7">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.735" endtime="20201115 23:01:57.749"></status>
</kw>
<msg timestamp="20201115 23:01:57.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.733" endtime="20201115 23:01:57.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:57.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:57.751" endtime="20201115 23:01:57.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.753" endtime="20201115 23:01:57.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.731" endtime="20201115 23:01:57.755"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.728" endtime="20201115 23:01:57.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:57.762" endtime="20201115 23:01:58.049"></status>
</kw>
<msg timestamp="20201115 23:01:58.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:57.761" endtime="20201115 23:01:58.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023893444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.053" endtime="20201115 23:01:58.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.061" endtime="20201115 23:01:58.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.758" endtime="20201115 23:01:58.063"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.756" endtime="20201115 23:01:58.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.068" level="INFO">${RESULT} = [{'time': 0.023893444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7290999999998325e-05, 'source_diff': 3.7290999999998325e-05}, {'time': 0.023954944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:58.065" endtime="20201115 23:01:58.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.083" level="INFO">${ACCURACY} = {'diff': [3.7290999999998325e-05, 3.6582999999999755e-05, 3.655600000000009e-05, 3.656999999999966e-05, 3.6569000000000185e-05, 3.6540999999997575e-05, 3.6555000000000615e-05, 3.6569000000000185e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:58.069" endtime="20201115 23:01:58.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.088" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.086" endtime="20201115 23:01:58.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.091" level="INFO">VALUE: [3.7290999999998325e-05, 3.6582999999999755e-05, 3.655600000000009e-05, 3.656999999999966e-05, 3.6569000000000185e-05, 3.6540999999997575e-05, 3.6555000000000615e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.655600000000009e-05, 3.6582999999999755e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6624999999998464e-05, 3.655600000000009e-05, 3.6569000000000185e-05, 3.6625000000001934e-05, 3.656999999999966e-05, 3.6569000000000185e-05, 3.65840000000027e-05, 3.656999999999966e-05, 3.65840000000027e-05, 3.6569000000000185e-05, 3.6555000000000615e-05, 3.658399999999923e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.6582999999999755e-05, 3.656999999999966e-05, 3.6624999999998464e-05, 3.6569000000000185e-05, 3.6639000000001504e-05, 3.6569000000000185e-05, 3.6554999999997145e-05, 3.651399999999791e-05, 3.656999999999966e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.658399999999923e-05, 3.6638999999998034e-05, 3.655600000000009e-05, 3.654200000000052e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.6597000000002794e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.658399999999923e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.089" endtime="20201115 23:01:58.091"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.084" endtime="20201115 23:01:58.091"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.094" endtime="20201115 23:01:58.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.097" endtime="20201115 23:01:58.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.096" endtime="20201115 23:01:58.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.092" endtime="20201115 23:01:58.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.727" endtime="20201115 23:01:58.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.725" endtime="20201115 23:01:58.118"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:57.724" endtime="20201115 23:01:58.118"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.121" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 8">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.129" endtime="20201115 23:01:58.144"></status>
</kw>
<msg timestamp="20201115 23:01:58.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.127" endtime="20201115 23:01:58.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.145" endtime="20201115 23:01:58.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.148" endtime="20201115 23:01:58.149"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.125" endtime="20201115 23:01:58.150"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.123" endtime="20201115 23:01:58.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.157" endtime="20201115 23:01:58.444"></status>
</kw>
<msg timestamp="20201115 23:01:58.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023983847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024021181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.155" endtime="20201115 23:01:58.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023983847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024021181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.448" endtime="20201115 23:01:58.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.456" endtime="20201115 23:01:58.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.153" endtime="20201115 23:01:58.458"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.151" endtime="20201115 23:01:58.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.463" level="INFO">${RESULT} = [{'time': 0.024021181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.733399999999998e-05, 'source_diff': 3.733399999999998e-05}, {'time': 0.024084542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.459" endtime="20201115 23:01:58.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.477" level="INFO">${ACCURACY} = {'diff': [3.733399999999998e-05, 3.656999999999966e-05, 3.6596999999999325e-05, 3.651400000000138e-05, 3.654200000000052e-05, 3.6596999999999325e-05, 3.6582999999999755e-05, 3.6555000000000615e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:01:58.464" endtime="20201115 23:01:58.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.481" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.480" endtime="20201115 23:01:58.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.484" level="INFO">VALUE: [3.733399999999998e-05, 3.656999999999966e-05, 3.6596999999999325e-05, 3.651400000000138e-05, 3.654200000000052e-05, 3.6596999999999325e-05, 3.6582999999999755e-05, 3.6555000000000615e-05, 3.655600000000009e-05, 3.658399999999923e-05, 3.6569000000000185e-05, 3.6555000000000615e-05, 3.659800000000227e-05, 3.6527000000001475e-05, 3.6596999999999325e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.652800000000095e-05, 3.65979999999988e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.656999999999966e-05, 3.6554999999997145e-05, 3.6583000000003224e-05, 3.654200000000052e-05, 3.6596999999999325e-05, 3.655600000000009e-05, 3.6569000000000185e-05, 3.654199999999705e-05, 3.6582999999999755e-05, 3.655600000000009e-05, 3.651400000000138e-05, 3.6624999999998464e-05, 3.661200000000184e-05, 3.6569000000000185e-05, 3.65840000000027e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.654200000000052e-05, 3.656999999999966e-05, 3.658399999999923e-05, 3.651399999999791e-05, 3.6569000000000185e-05, 3.656999999999966e-05, 3.6569000000000185e-05, 3.6526999999998006e-05, 3.6569000000000185e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.482" endtime="20201115 23:01:58.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.478" endtime="20201115 23:01:58.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.487" endtime="20201115 23:01:58.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.490" endtime="20201115 23:01:58.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.489" endtime="20201115 23:01:58.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.485" endtime="20201115 23:01:58.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.121" endtime="20201115 23:01:58.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.120" endtime="20201115 23:01:58.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.119" endtime="20201115 23:01:58.511"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.514" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 9">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.522" endtime="20201115 23:01:58.537"></status>
</kw>
<msg timestamp="20201115 23:01:58.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.521" endtime="20201115 23:01:58.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.538" endtime="20201115 23:01:58.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.541" endtime="20201115 23:01:58.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.518" endtime="20201115 23:01:58.543"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.516" endtime="20201115 23:01:58.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.550" endtime="20201115 23:01:58.835"></status>
</kw>
<msg timestamp="20201115 23:01:58.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023930597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.548" endtime="20201115 23:01:58.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023893292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023930597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.839" endtime="20201115 23:01:58.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.851" endtime="20201115 23:01:58.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.546" endtime="20201115 23:01:58.853"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.544" endtime="20201115 23:01:58.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:58.858" level="INFO">${RESULT} = [{'time': 0.023930597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7305000000001365e-05, 'source_diff': 3.7305000000001365e-05}, {'time': 0.0239815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:01:58.855" endtime="20201115 23:01:58.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:58.872" level="INFO">${ACCURACY} = {'diff': [3.7305000000001365e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.657000000000313e-05, 3.650000000000181e-05, 3.6596999999999325e-05, 3.655600000000009e-05, 3....</msg>
<status status="PASS" starttime="20201115 23:01:58.859" endtime="20201115 23:01:58.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.876" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201115 23:01:58.875" endtime="20201115 23:01:58.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.879" level="INFO">VALUE: [3.7305000000001365e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.657000000000313e-05, 3.650000000000181e-05, 3.6596999999999325e-05, 3.655600000000009e-05, 3.6569000000000185e-05, 3.6624999999998464e-05, 3.6611000000002364e-05, 3.655600000000009e-05, 3.656999999999966e-05, 3.6610999999998894e-05, 3.6597000000002794e-05, 3.6555000000000615e-05, 3.656999999999966e-05, 3.6583000000003224e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.656999999999966e-05, 3.6583000000003224e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.6639000000001504e-05, 3.6541000000001045e-05, 3.6569000000000185e-05, 3.656999999999966e-05, 3.656999999999966e-05, 3.6624999999998464e-05, 3.6583000000003224e-05, 3.6596999999999325e-05, 3.657000000000313e-05, 3.6555000000000615e-05, 3.6555000000000615e-05, 3.6554999999997145e-05, 3.648600000000224e-05, 3.6569000000000185e-05, 3.656999999999966e-05, 3.656999999999966e-05]</msg>
<status status="PASS" starttime="20201115 23:01:58.877" endtime="20201115 23:01:58.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.872" endtime="20201115 23:01:58.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.882" endtime="20201115 23:01:58.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:58.885" endtime="20201115 23:01:58.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.884" endtime="20201115 23:01:58.905"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.880" endtime="20201115 23:01:58.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.514" endtime="20201115 23:01:58.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.513" endtime="20201115 23:01:58.906"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.512" endtime="20201115 23:01:58.906"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.909" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 10">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.917" endtime="20201115 23:01:58.932"></status>
</kw>
<msg timestamp="20201115 23:01:58.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.915" endtime="20201115 23:01:58.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:58.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:58.933" endtime="20201115 23:01:58.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.936" endtime="20201115 23:01:58.937"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.913" endtime="20201115 23:01:58.938"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.911" endtime="20201115 23:01:58.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:58.945" endtime="20201115 23:01:59.232"></status>
</kw>
<msg timestamp="20201115 23:01:59.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024103167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:58.943" endtime="20201115 23:01:59.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024103167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.236" endtime="20201115 23:01:59.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.245" endtime="20201115 23:01:59.246"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.941" endtime="20201115 23:01:59.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.939" endtime="20201115 23:01:59.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.251" level="INFO">${RESULT} = [{'time': 0.024140486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7318999999997465e-05, 'source_diff': 3.7318999999997465e-05}, {'time': 0.024200417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:59.248" endtime="20201115 23:01:59.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.265" level="INFO">${ACCURACY} = {'diff': [3.7318999999997465e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.656999999999966e-05, 3.6596999999999325e-05, 3.6667000000000644e-05, 3.657000000000313e-05, 3.6624999999998464e-05, 3...</msg>
<status status="PASS" starttime="20201115 23:01:59.252" endtime="20201115 23:01:59.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.270" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.268" endtime="20201115 23:01:59.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.272" level="INFO">VALUE: [3.7318999999997465e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.656999999999966e-05, 3.6596999999999325e-05, 3.6667000000000644e-05, 3.657000000000313e-05, 3.6624999999998464e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.658399999999923e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.6610999999998894e-05, 3.6582999999999755e-05, 3.6555000000000615e-05, 3.656999999999966e-05, 3.6569000000000185e-05, 3.6597000000002794e-05, 3.656999999999966e-05, 3.6610999999998894e-05, 3.6569000000000185e-05, 3.6582999999999755e-05, 3.6638999999998034e-05, 3.655600000000009e-05, 3.6569000000000185e-05, 3.6653000000001074e-05, 3.656999999999966e-05, 3.6555000000000615e-05, 3.6569000000000185e-05, 3.65979999999988e-05, 3.6569000000000185e-05, 3.658399999999923e-05, 3.6624999999998464e-05, 3.6596999999999325e-05, 3.65840000000027e-05, 3.6624999999998464e-05, 3.6569000000000185e-05, 3.6555000000000615e-05, 3.6569000000000185e-05, 3.655600000000009e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.6582999999999755e-05, 3.6569000000000185e-05, 3.6569000000000185e-05, 3.655600000000009e-05, 3.6624999999998464e-05, 3.6569000000000185e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.271" endtime="20201115 23:01:59.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.266" endtime="20201115 23:01:59.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.275" endtime="20201115 23:01:59.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.279" endtime="20201115 23:01:59.298"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.277" endtime="20201115 23:01:59.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.273" endtime="20201115 23:01:59.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.909" endtime="20201115 23:01:59.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.908" endtime="20201115 23:01:59.300"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:58.907" endtime="20201115 23:01:59.300"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.302" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 11">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.310" endtime="20201115 23:01:59.325"></status>
</kw>
<msg timestamp="20201115 23:01:59.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.309" endtime="20201115 23:01:59.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.327" endtime="20201115 23:01:59.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.330" endtime="20201115 23:01:59.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.306" endtime="20201115 23:01:59.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.304" endtime="20201115 23:01:59.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.339" endtime="20201115 23:01:59.626"></status>
</kw>
<msg timestamp="20201115 23:01:59.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.337" endtime="20201115 23:01:59.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023969667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.631" endtime="20201115 23:01:59.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.639" endtime="20201115 23:01:59.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.335" endtime="20201115 23:01:59.641"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.333" endtime="20201115 23:01:59.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:01:59.646" level="INFO">${RESULT} = [{'time': 0.024011986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2318999999998996e-05, 'source_diff': 4.2318999999998996e-05}, {'time': 0.024068444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:01:59.642" endtime="20201115 23:01:59.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:01:59.661" level="INFO">${ACCURACY} = {'diff': [4.2318999999998996e-05, 4.1541000000002576e-05, 3.6555000000000615e-05, 3.654200000000052e-05, 4.154199999999858e-05, 4.1540999999999106e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, ...</msg>
<status status="PASS" starttime="20201115 23:01:59.647" endtime="20201115 23:01:59.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.665" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201115 23:01:59.664" endtime="20201115 23:01:59.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.668" level="INFO">VALUE: [4.2318999999998996e-05, 4.1541000000002576e-05, 3.6555000000000615e-05, 3.654200000000052e-05, 4.154199999999858e-05, 4.1540999999999106e-05, 4.1568999999998246e-05, 4.1583000000001286e-05, 3.6582999999999755e-05, 4.154200000000205e-05, 4.1554999999998676e-05, 4.1554999999998676e-05, 4.1611000000000425e-05, 4.155599999999815e-05, 3.655600000000009e-05, 4.152799999999901e-05, 3.6596999999999325e-05, 4.1555000000002146e-05, 4.1639000000003035e-05, 4.1540999999999106e-05, 4.154199999999858e-05, 4.1597000000000856e-05, 4.1555000000002146e-05, 4.1554999999998676e-05, 4.1540999999999106e-05, 3.6555000000000615e-05, 4.1555000000002146e-05, 4.155600000000162e-05, 4.1554999999998676e-05, 4.157000000000119e-05, 4.149999999999987e-05, 4.1554999999998676e-05, 4.1569000000001716e-05, 4.1554999999998676e-05, 4.1541000000002576e-05, 4.1569000000001716e-05, 4.1554999999998676e-05, 4.156999999999772e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.149999999999987e-05, 4.1554999999998676e-05, 4.154199999999858e-05, 4.1555000000002146e-05, 4.158400000000076e-05, 4.1624999999999995e-05, 4.1526999999999537e-05, 4.1540999999999106e-05]</msg>
<status status="PASS" starttime="20201115 23:01:59.666" endtime="20201115 23:01:59.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.662" endtime="20201115 23:01:59.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.671" endtime="20201115 23:01:59.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:01:59.674" endtime="20201115 23:01:59.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.673" endtime="20201115 23:01:59.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.669" endtime="20201115 23:01:59.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.303" endtime="20201115 23:01:59.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.301" endtime="20201115 23:01:59.695"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.300" endtime="20201115 23:01:59.695"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.698" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 12">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.708" endtime="20201115 23:01:59.723"></status>
</kw>
<msg timestamp="20201115 23:01:59.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.706" endtime="20201115 23:01:59.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:01:59.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:01:59.725" endtime="20201115 23:01:59.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.727" endtime="20201115 23:01:59.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.703" endtime="20201115 23:01:59.729"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.700" endtime="20201115 23:01:59.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:01:59.736" endtime="20201115 23:02:00.022"></status>
</kw>
<msg timestamp="20201115 23:02:00.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025986653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026028958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:01:59.735" endtime="20201115 23:02:00.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025986653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026028958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.026" endtime="20201115 23:02:00.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.034" endtime="20201115 23:02:00.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.732" endtime="20201115 23:02:00.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.730" endtime="20201115 23:02:00.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.041" level="INFO">${RESULT} = [{'time': 0.026028958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2305000000002896e-05, 'source_diff': 4.2305000000002896e-05}, {'time': 0.026094194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:00.038" endtime="20201115 23:02:00.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.054" level="INFO">${ACCURACY} = {'diff': [4.2305000000002896e-05, 4.1512999999999967e-05, 4.1554999999998676e-05, 4.1526999999999537e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.1568999999998246e-05, 4.154199999999858e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:00.042" endtime="20201115 23:02:00.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.059" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.058" endtime="20201115 23:02:00.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.061" level="INFO">VALUE: [4.2305000000002896e-05, 4.1512999999999967e-05, 4.1554999999998676e-05, 4.1526999999999537e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.1568999999998246e-05, 4.154199999999858e-05, 4.152799999999901e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.154199999999858e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.157000000000119e-05, 4.159799999999686e-05, 4.154200000000205e-05, 4.152799999999901e-05, 4.1554999999998676e-05, 4.1554999999998676e-05, 4.1554999999998676e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.155599999999815e-05, 4.154199999999858e-05, 4.1568999999998246e-05, 4.154199999999858e-05, 4.1569000000001716e-05, 4.155600000000162e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.154199999999858e-05, 4.155599999999815e-05, 4.149999999999987e-05, 4.154199999999858e-05, 4.149999999999987e-05, 4.1526999999999537e-05, 4.1611000000000425e-05, 4.1568999999998246e-05, 4.1611000000000425e-05, 4.1597000000000856e-05, 4.1624999999999995e-05, 4.1568999999998246e-05, 4.155600000000162e-05, 4.1568999999998246e-05, 4.1541000000002576e-05, 4.1554999999998676e-05, 4.1569000000001716e-05, 4.1583000000001286e-05, 4.157000000000119e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.060" endtime="20201115 23:02:00.062"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.055" endtime="20201115 23:02:00.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.064" endtime="20201115 23:02:00.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.068" endtime="20201115 23:02:00.088"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.066" endtime="20201115 23:02:00.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.063" endtime="20201115 23:02:00.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.699" endtime="20201115 23:02:00.089"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.697" endtime="20201115 23:02:00.090"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:59.696" endtime="20201115 23:02:00.090"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.092" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 13">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.100" endtime="20201115 23:02:00.115"></status>
</kw>
<msg timestamp="20201115 23:02:00.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.099" endtime="20201115 23:02:00.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.117" endtime="20201115 23:02:00.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.119" endtime="20201115 23:02:00.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.096" endtime="20201115 23:02:00.122"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.094" endtime="20201115 23:02:00.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.128" endtime="20201115 23:02:00.415"></status>
</kw>
<msg timestamp="20201115 23:02:00.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024012139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.127" endtime="20201115 23:02:00.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024012139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.420" endtime="20201115 23:02:00.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.428" endtime="20201115 23:02:00.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.124" endtime="20201115 23:02:00.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.123" endtime="20201115 23:02:00.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.435" level="INFO">${RESULT} = [{'time': 0.024054389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.225000000000062e-05, 'source_diff': 4.225000000000062e-05}, {'time': 0.024128014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:00.431" endtime="20201115 23:02:00.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.448" level="INFO">${ACCURACY} = {'diff': [4.225000000000062e-05, 4.149999999999987e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.159800000000033e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.154200000000205e-05, 4.1...</msg>
<status status="PASS" starttime="20201115 23:02:00.436" endtime="20201115 23:02:00.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.453" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.452" endtime="20201115 23:02:00.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.455" level="INFO">VALUE: [4.225000000000062e-05, 4.149999999999987e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.159800000000033e-05, 4.1568999999998246e-05, 4.1569000000001716e-05, 4.154200000000205e-05, 4.155599999999815e-05, 4.157000000000119e-05, 4.154200000000205e-05, 4.1540999999999106e-05, 4.154199999999858e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.152800000000248e-05, 4.1554999999998676e-05, 4.1554999999998676e-05, 4.158399999999729e-05, 4.1569000000001716e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.151399999999944e-05, 4.1583000000001286e-05, 4.152799999999901e-05, 4.157000000000119e-05, 4.157000000000119e-05, 4.1554999999998676e-05, 4.158400000000076e-05, 4.154199999999858e-05, 4.156999999999772e-05, 4.1555000000002146e-05, 4.1583000000001286e-05, 4.1569000000001716e-05, 4.1541000000002576e-05, 4.1583000000001286e-05, 4.1540999999999106e-05, 4.155600000000162e-05, 4.155600000000162e-05, 4.1555000000002146e-05, 4.1569000000001716e-05, 4.157000000000119e-05, 4.159800000000033e-05, 4.1554999999998676e-05, 4.1597000000000856e-05, 4.1610999999996956e-05, 4.155600000000162e-05, 4.155599999999815e-05, 4.155600000000162e-05, 4.1583000000001286e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.454" endtime="20201115 23:02:00.456"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.449" endtime="20201115 23:02:00.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.459" endtime="20201115 23:02:00.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.462" endtime="20201115 23:02:00.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.461" endtime="20201115 23:02:00.482"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.457" endtime="20201115 23:02:00.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.093" endtime="20201115 23:02:00.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.091" endtime="20201115 23:02:00.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.090" endtime="20201115 23:02:00.483"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.486" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 14">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.494" endtime="20201115 23:02:00.509"></status>
</kw>
<msg timestamp="20201115 23:02:00.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.492" endtime="20201115 23:02:00.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.510" endtime="20201115 23:02:00.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.513" endtime="20201115 23:02:00.514"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.490" endtime="20201115 23:02:00.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.488" endtime="20201115 23:02:00.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.522" endtime="20201115 23:02:00.811"></status>
</kw>
<msg timestamp="20201115 23:02:00.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023937472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02397975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:00.520" endtime="20201115 23:02:00.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023937472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02397975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:00.815" endtime="20201115 23:02:00.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.823" endtime="20201115 23:02:00.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.518" endtime="20201115 23:02:00.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.516" endtime="20201115 23:02:00.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:00.830" level="INFO">${RESULT} = [{'time': 0.02397975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.227799999999976e-05, 'source_diff': 4.227799999999976e-05}, {'time': 0.024044361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:00.826" endtime="20201115 23:02:00.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:00.843" level="INFO">${ACCURACY} = {'diff': [4.227799999999976e-05, 4.151399999999944e-05, 4.154199999999858e-05, 4.152799999999901e-05, 4.154200000000205e-05, 4.1540999999999106e-05, 4.1569000000001716e-05, 4.1526999999999537e-05, 4.1...</msg>
<status status="PASS" starttime="20201115 23:02:00.831" endtime="20201115 23:02:00.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.848" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201115 23:02:00.847" endtime="20201115 23:02:00.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.851" level="INFO">VALUE: [4.227799999999976e-05, 4.151399999999944e-05, 4.154199999999858e-05, 4.152799999999901e-05, 4.154200000000205e-05, 4.1540999999999106e-05, 4.1569000000001716e-05, 4.1526999999999537e-05, 4.157000000000119e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.152799999999901e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.157000000000119e-05, 4.156999999999772e-05, 4.155599999999815e-05, 4.155600000000162e-05, 4.157000000000119e-05, 4.157000000000119e-05, 4.156999999999772e-05, 4.156999999999772e-05, 4.155599999999815e-05, 4.1569000000001716e-05, 4.149999999999987e-05, 4.1569000000001716e-05, 4.1568999999998246e-05, 4.1555000000002146e-05, 4.154200000000205e-05, 4.1582999999997816e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.154200000000205e-05, 4.155599999999815e-05, 4.154200000000205e-05, 4.155600000000162e-05, 4.155600000000162e-05, 4.1554999999998676e-05, 4.155599999999815e-05, 4.1611000000000425e-05, 4.156999999999772e-05, 4.155599999999815e-05, 4.1554999999998676e-05, 4.1597000000000856e-05, 4.156999999999772e-05, 4.158400000000076e-05, 4.155600000000162e-05, 4.157000000000119e-05, 4.1583000000001286e-05, 4.152799999999901e-05]</msg>
<status status="PASS" starttime="20201115 23:02:00.849" endtime="20201115 23:02:00.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.844" endtime="20201115 23:02:00.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.854" endtime="20201115 23:02:00.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:00.857" endtime="20201115 23:02:00.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.856" endtime="20201115 23:02:00.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.852" endtime="20201115 23:02:00.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.486" endtime="20201115 23:02:00.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.484" endtime="20201115 23:02:00.879"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.484" endtime="20201115 23:02:00.879"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.881" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 15">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.889" endtime="20201115 23:02:00.904"></status>
</kw>
<msg timestamp="20201115 23:02:00.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.888" endtime="20201115 23:02:00.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:00.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:00.906" endtime="20201115 23:02:00.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.908" endtime="20201115 23:02:00.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.885" endtime="20201115 23:02:00.910"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.883" endtime="20201115 23:02:00.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:00.917" endtime="20201115 23:02:01.205"></status>
</kw>
<msg timestamp="20201115 23:02:01.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024041417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:00.916" endtime="20201115 23:02:01.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023999125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024041417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.209" endtime="20201115 23:02:01.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.217" endtime="20201115 23:02:01.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.913" endtime="20201115 23:02:01.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.911" endtime="20201115 23:02:01.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.224" level="INFO">${RESULT} = [{'time': 0.024041417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.229199999999933e-05, 'source_diff': 4.229199999999933e-05}, {'time': 0.024097319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:01.221" endtime="20201115 23:02:01.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.239" level="INFO">${ACCURACY} = {'diff': [4.229199999999933e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.154199999999858e-05, 4.1555000000002146e-05, 4.155599999999815e-05, 4.156999999999772e-05, 4.1...</msg>
<status status="PASS" starttime="20201115 23:02:01.225" endtime="20201115 23:02:01.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.244" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.243" endtime="20201115 23:02:01.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.246" level="INFO">VALUE: [4.229199999999933e-05, 4.1568999999998246e-05, 4.158400000000076e-05, 4.1554999999998676e-05, 4.154199999999858e-05, 4.1555000000002146e-05, 4.155599999999815e-05, 4.156999999999772e-05, 4.152799999999901e-05, 4.159800000000033e-05, 4.1596999999997386e-05, 4.152799999999901e-05, 4.1555000000002146e-05, 4.154199999999858e-05, 4.1554999999998676e-05, 4.1568999999998246e-05, 4.1526999999999537e-05, 4.1541000000002576e-05, 4.1554999999998676e-05, 4.149999999999987e-05, 4.1554999999998676e-05, 4.1540999999999106e-05, 4.1611000000000425e-05, 4.157000000000119e-05, 4.1569000000001716e-05, 4.154200000000205e-05, 4.1540999999999106e-05, 4.152799999999901e-05, 4.1554999999998676e-05, 4.154200000000205e-05, 4.1541000000002576e-05, 4.1583000000001286e-05, 4.155599999999815e-05, 4.1568999999998246e-05, 4.155600000000162e-05, 4.1611000000000425e-05, 4.1554999999998676e-05, 4.159800000000033e-05, 4.1554999999998676e-05, 4.1569000000001716e-05, 4.1583000000001286e-05, 4.156999999999772e-05, 4.154200000000205e-05, 4.1540999999999106e-05, 4.152799999999901e-05, 4.1554999999998676e-05, 4.156999999999772e-05, 4.156999999999772e-05, 4.149999999999987e-05, 4.1611000000000425e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.245" endtime="20201115 23:02:01.247"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.240" endtime="20201115 23:02:01.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.250" endtime="20201115 23:02:01.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.253" endtime="20201115 23:02:01.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.251" endtime="20201115 23:02:01.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.248" endtime="20201115 23:02:01.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.882" endtime="20201115 23:02:01.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.880" endtime="20201115 23:02:01.274"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:00.879" endtime="20201115 23:02:01.274"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.276" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 16">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.285" endtime="20201115 23:02:01.300"></status>
</kw>
<msg timestamp="20201115 23:02:01.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.283" endtime="20201115 23:02:01.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.301" endtime="20201115 23:02:01.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.304" endtime="20201115 23:02:01.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.281" endtime="20201115 23:02:01.306"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.279" endtime="20201115 23:02:01.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.313" endtime="20201115 23:02:01.598"></status>
</kw>
<msg timestamp="20201115 23:02:01.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023942736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023990042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.311" endtime="20201115 23:02:01.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023942736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023990042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.603" endtime="20201115 23:02:01.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.611" endtime="20201115 23:02:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.309" endtime="20201115 23:02:01.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.307" endtime="20201115 23:02:01.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:01.618" level="INFO">${RESULT} = [{'time': 0.023990042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.730600000000043e-05, 'source_diff': 4.730600000000043e-05}, {'time': 0.024064903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:01.615" endtime="20201115 23:02:01.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:01.631" level="INFO">${ACCURACY} = {'diff': [4.730600000000043e-05, 4.654200000000011e-05, 4.157000000000119e-05, 4.654200000000011e-05, 4.655500000000021e-05, 4.154199999999858e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.6569...</msg>
<status status="PASS" starttime="20201115 23:02:01.619" endtime="20201115 23:02:01.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.636" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201115 23:02:01.635" endtime="20201115 23:02:01.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.638" level="INFO">VALUE: [4.730600000000043e-05, 4.654200000000011e-05, 4.157000000000119e-05, 4.654200000000011e-05, 4.655500000000021e-05, 4.154199999999858e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.656999999999925e-05, 4.654100000000064e-05, 4.157000000000119e-05, 4.1568999999998246e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.155600000000162e-05, 4.1555000000002146e-05, 4.654200000000011e-05, 4.654100000000064e-05, 4.656899999999978e-05, 4.65269999999976e-05, 4.652700000000107e-05, 4.655500000000021e-05, 4.655599999999968e-05, 4.1597000000000856e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.65000000000014e-05, 4.656899999999978e-05, 4.656999999999925e-05, 4.657000000000272e-05, 4.149999999999987e-05, 4.157000000000119e-05, 4.654100000000064e-05, 4.654100000000064e-05, 4.649999999999793e-05, 4.1568999999998246e-05, 4.1624999999999995e-05, 4.655599999999968e-05, 4.654100000000064e-05, 4.661099999999849e-05, 4.656899999999978e-05, 4.1583000000001286e-05, 4.655500000000021e-05, 4.655599999999968e-05, 4.656899999999978e-05, 4.655599999999968e-05, 4.652799999999707e-05, 4.655500000000021e-05, 4.654200000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:02:01.637" endtime="20201115 23:02:01.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.632" endtime="20201115 23:02:01.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.641" endtime="20201115 23:02:01.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:01.645" endtime="20201115 23:02:01.664"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.643" endtime="20201115 23:02:01.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.640" endtime="20201115 23:02:01.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.277" endtime="20201115 23:02:01.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.275" endtime="20201115 23:02:01.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.274" endtime="20201115 23:02:01.666"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.668" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 17">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.677" endtime="20201115 23:02:01.692"></status>
</kw>
<msg timestamp="20201115 23:02:01.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.675" endtime="20201115 23:02:01.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:01.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:01.693" endtime="20201115 23:02:01.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.696" endtime="20201115 23:02:01.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.673" endtime="20201115 23:02:01.698"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.670" endtime="20201115 23:02:01.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:01.705" endtime="20201115 23:02:01.994"></status>
</kw>
<msg timestamp="20201115 23:02:01.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.703" endtime="20201115 23:02:01.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024082833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:01.998" endtime="20201115 23:02:02.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.006" endtime="20201115 23:02:02.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.701" endtime="20201115 23:02:02.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.699" endtime="20201115 23:02:02.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.013" level="INFO">${RESULT} = [{'time': 0.024130125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729199999999739e-05, 'source_diff': 4.729199999999739e-05}, {'time': 0.024198181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.010" endtime="20201115 23:02:02.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.027" level="INFO">${ACCURACY} = {'diff': [4.729199999999739e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652700000000107e-05, 4.654099999999717e-05, 4.655500000000021e-05, 4.6541...</msg>
<status status="PASS" starttime="20201115 23:02:02.014" endtime="20201115 23:02:02.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.031" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.030" endtime="20201115 23:02:02.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.034" level="INFO">VALUE: [4.729199999999739e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652700000000107e-05, 4.654099999999717e-05, 4.655500000000021e-05, 4.654199999999664e-05, 4.654099999999717e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.655599999999968e-05, 4.655500000000021e-05, 4.65269999999976e-05, 4.654100000000064e-05, 4.652800000000054e-05, 4.651400000000097e-05, 4.651400000000097e-05, 4.652700000000107e-05, 4.655500000000021e-05, 4.652800000000054e-05, 4.647200000000226e-05, 4.655600000000315e-05, 4.652799999999707e-05, 4.654200000000011e-05, 4.654100000000064e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.654100000000064e-05, 4.654100000000064e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.656999999999925e-05, 4.656999999999925e-05, 4.654200000000011e-05, 4.648600000000183e-05, 4.654200000000011e-05, 4.654099999999717e-05, 4.655599999999968e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654100000000064e-05, 4.651400000000097e-05, 4.654200000000011e-05, 4.654099999999717e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.032" endtime="20201115 23:02:02.034"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.028" endtime="20201115 23:02:02.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.037" endtime="20201115 23:02:02.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.040" endtime="20201115 23:02:02.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.039" endtime="20201115 23:02:02.060"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.035" endtime="20201115 23:02:02.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.669" endtime="20201115 23:02:02.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.667" endtime="20201115 23:02:02.061"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:01.666" endtime="20201115 23:02:02.062"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.064" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 18">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.072" endtime="20201115 23:02:02.087"></status>
</kw>
<msg timestamp="20201115 23:02:02.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.071" endtime="20201115 23:02:02.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.089" endtime="20201115 23:02:02.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.092" endtime="20201115 23:02:02.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.068" endtime="20201115 23:02:02.094"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.066" endtime="20201115 23:02:02.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.101" endtime="20201115 23:02:02.388"></status>
</kw>
<msg timestamp="20201115 23:02:02.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024064903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024112194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.099" endtime="20201115 23:02:02.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024064903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024112194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.392" endtime="20201115 23:02:02.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.400" endtime="20201115 23:02:02.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.097" endtime="20201115 23:02:02.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.095" endtime="20201115 23:02:02.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.407" level="INFO">${RESULT} = [{'time': 0.024112194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729100000000139e-05, 'source_diff': 4.729100000000139e-05}, {'time': 0.024179903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.404" endtime="20201115 23:02:02.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.420" level="INFO">${ACCURACY} = {'diff': [4.729100000000139e-05, 4.652800000000054e-05, 4.654100000000064e-05, 4.648599999999836e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.649999999999793e-05, 4.654200000000011e-05, 4.6514...</msg>
<status status="PASS" starttime="20201115 23:02:02.408" endtime="20201115 23:02:02.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.425" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.424" endtime="20201115 23:02:02.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.428" level="INFO">VALUE: [4.729100000000139e-05, 4.652800000000054e-05, 4.654100000000064e-05, 4.648599999999836e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.649999999999793e-05, 4.654200000000011e-05, 4.651400000000097e-05, 4.654100000000064e-05, 4.654100000000064e-05, 4.648599999999836e-05, 4.654100000000064e-05, 4.654200000000011e-05, 4.658299999999935e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652799999999707e-05, 4.655599999999968e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.6487000000001305e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.65269999999976e-05, 4.654100000000064e-05, 4.654100000000064e-05, 4.656999999999925e-05, 4.649999999999793e-05, 4.655599999999968e-05, 4.655599999999968e-05, 4.6597000000002387e-05, 4.655599999999968e-05, 4.655599999999968e-05, 4.656899999999978e-05, 4.652800000000054e-05, 4.654100000000064e-05, 4.654100000000064e-05, 4.654200000000011e-05, 4.656899999999978e-05, 4.651400000000097e-05, 4.656999999999925e-05, 4.655499999999674e-05, 4.655500000000021e-05, 4.651400000000097e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.65139999999975e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.426" endtime="20201115 23:02:02.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.421" endtime="20201115 23:02:02.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.431" endtime="20201115 23:02:02.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.434" endtime="20201115 23:02:02.453"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.433" endtime="20201115 23:02:02.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.429" endtime="20201115 23:02:02.454"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.064" endtime="20201115 23:02:02.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.063" endtime="20201115 23:02:02.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.062" endtime="20201115 23:02:02.455"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.458" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 19">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.466" endtime="20201115 23:02:02.482"></status>
</kw>
<msg timestamp="20201115 23:02:02.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.465" endtime="20201115 23:02:02.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.483" endtime="20201115 23:02:02.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.486" endtime="20201115 23:02:02.487"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.462" endtime="20201115 23:02:02.488"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.460" endtime="20201115 23:02:02.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.495" endtime="20201115 23:02:02.782"></status>
</kw>
<msg timestamp="20201115 23:02:02.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024659764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.493" endtime="20201115 23:02:02.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024659764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.786" endtime="20201115 23:02:02.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.795" endtime="20201115 23:02:02.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.491" endtime="20201115 23:02:02.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.489" endtime="20201115 23:02:02.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:02.801" level="INFO">${RESULT} = [{'time': 0.024659764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729200000000086e-05, 'source_diff': 4.729200000000086e-05}, {'time': 0.024736847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:02.798" endtime="20201115 23:02:02.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:02.816" level="INFO">${ACCURACY} = {'diff': [4.729200000000086e-05, 4.656899999999978e-05, 4.654200000000011e-05, 4.65269999999976e-05, 4.652800000000054e-05, 4.65000000000014e-05, 4.65139999999975e-05, 4.65000000000014e-05, 4.65280000...</msg>
<status status="PASS" starttime="20201115 23:02:02.802" endtime="20201115 23:02:02.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.821" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201115 23:02:02.820" endtime="20201115 23:02:02.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.823" level="INFO">VALUE: [4.729200000000086e-05, 4.656899999999978e-05, 4.654200000000011e-05, 4.65269999999976e-05, 4.652800000000054e-05, 4.65000000000014e-05, 4.65139999999975e-05, 4.65000000000014e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.65269999999976e-05, 4.652800000000054e-05, 4.654100000000064e-05, 4.65130000000015e-05, 4.654200000000011e-05, 4.652799999999707e-05, 4.65269999999976e-05, 4.655500000000021e-05, 4.655500000000021e-05, 4.652800000000054e-05, 4.655500000000021e-05, 4.655600000000315e-05, 4.65000000000014e-05, 4.647199999999879e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.655599999999968e-05, 4.654100000000064e-05, 4.655599999999968e-05, 4.654100000000064e-05, 4.6458999999998696e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.655599999999968e-05, 4.645799999999922e-05, 4.658399999999882e-05, 4.655599999999968e-05, 4.656899999999978e-05, 4.647199999999879e-05, 4.65139999999975e-05, 4.655500000000021e-05]</msg>
<status status="PASS" starttime="20201115 23:02:02.822" endtime="20201115 23:02:02.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.817" endtime="20201115 23:02:02.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.826" endtime="20201115 23:02:02.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:02.830" endtime="20201115 23:02:02.849"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.829" endtime="20201115 23:02:02.850"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.825" endtime="20201115 23:02:02.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.458" endtime="20201115 23:02:02.851"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.456" endtime="20201115 23:02:02.852"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.456" endtime="20201115 23:02:02.852"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.854" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 20">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.862" endtime="20201115 23:02:02.878"></status>
</kw>
<msg timestamp="20201115 23:02:02.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.861" endtime="20201115 23:02:02.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:02.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:02.879" endtime="20201115 23:02:02.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.882" endtime="20201115 23:02:02.883"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.858" endtime="20201115 23:02:02.884"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.856" endtime="20201115 23:02:02.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:02.891" endtime="20201115 23:02:03.176"></status>
</kw>
<msg timestamp="20201115 23:02:03.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024441125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:02.889" endtime="20201115 23:02:03.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024441125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024488431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.180" endtime="20201115 23:02:03.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.188" endtime="20201115 23:02:03.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.886" endtime="20201115 23:02:03.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.885" endtime="20201115 23:02:03.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.195" level="INFO">${RESULT} = [{'time': 0.024488431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.730600000000043e-05, 'source_diff': 4.730600000000043e-05}, {'time': 0.024548347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.192" endtime="20201115 23:02:03.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.208" level="INFO">${ACCURACY} = {'diff': [4.730600000000043e-05, 4.652800000000054e-05, 4.654099999999717e-05, 4.652800000000054e-05, 4.652700000000107e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.655500000000021e-05, 4.6500...</msg>
<status status="PASS" starttime="20201115 23:02:03.196" endtime="20201115 23:02:03.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.213" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.212" endtime="20201115 23:02:03.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.215" level="INFO">VALUE: [4.730600000000043e-05, 4.652800000000054e-05, 4.654099999999717e-05, 4.652800000000054e-05, 4.652700000000107e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.655500000000021e-05, 4.65000000000014e-05, 4.654200000000011e-05, 4.654099999999717e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.65139999999975e-05, 4.651400000000097e-05, 4.65139999999975e-05, 4.652800000000054e-05, 4.655500000000021e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.654200000000011e-05, 4.652700000000107e-05, 4.654200000000011e-05, 4.65269999999976e-05, 4.652800000000054e-05, 4.652799999999707e-05, 4.65000000000014e-05, 4.65000000000014e-05, 4.65000000000014e-05, 4.654200000000011e-05, 4.652700000000107e-05, 4.654100000000064e-05, 4.655600000000315e-05, 4.654100000000064e-05, 4.654200000000011e-05, 4.652800000000054e-05, 4.65130000000015e-05, 4.655500000000021e-05, 4.654200000000011e-05, 4.659699999999892e-05, 4.654100000000064e-05, 4.655599999999968e-05, 4.655500000000021e-05, 4.652800000000054e-05, 4.655500000000021e-05, 4.654200000000011e-05, 4.654200000000011e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.214" endtime="20201115 23:02:03.216"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.209" endtime="20201115 23:02:03.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.219" endtime="20201115 23:02:03.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.222" endtime="20201115 23:02:03.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.221" endtime="20201115 23:02:03.242"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.217" endtime="20201115 23:02:03.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.855" endtime="20201115 23:02:03.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.853" endtime="20201115 23:02:03.243"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:02.852" endtime="20201115 23:02:03.243"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.246" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 21">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.254" endtime="20201115 23:02:03.269"></status>
</kw>
<msg timestamp="20201115 23:02:03.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.252" endtime="20201115 23:02:03.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.271" endtime="20201115 23:02:03.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.273" endtime="20201115 23:02:03.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.250" endtime="20201115 23:02:03.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.248" endtime="20201115 23:02:03.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.282" endtime="20201115 23:02:03.569"></status>
</kw>
<msg timestamp="20201115 23:02:03.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024014333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.281" endtime="20201115 23:02:03.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024014333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.573" endtime="20201115 23:02:03.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.581" endtime="20201115 23:02:03.583"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.278" endtime="20201115 23:02:03.584"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.277" endtime="20201115 23:02:03.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.588" level="INFO">${RESULT} = [{'time': 0.024014333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729099999999792e-05, 'source_diff': 4.729099999999792e-05}, {'time': 0.024092653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.585" endtime="20201115 23:02:03.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:03.601" level="INFO">${ACCURACY} = {'diff': [4.729099999999792e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.154200000000164e-05, 4.652700000000107e-05, 5.155600000000121e-05, 5.151399999999903e-05, 5.154100000000217e-05, 5.15000...</msg>
<status status="PASS" starttime="20201115 23:02:03.589" endtime="20201115 23:02:03.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.606" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201115 23:02:03.605" endtime="20201115 23:02:03.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.609" level="INFO">VALUE: [4.729099999999792e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.154200000000164e-05, 4.652700000000107e-05, 5.155600000000121e-05, 5.151399999999903e-05, 5.154100000000217e-05, 5.150000000000293e-05, 4.654200000000011e-05, 5.155500000000174e-05, 5.159699999999698e-05, 4.654100000000064e-05, 5.15409999999987e-05, 5.151399999999903e-05, 4.654200000000011e-05, 4.655599999999968e-05, 4.656999999999925e-05, 5.151399999999903e-05, 5.152800000000207e-05, 5.152800000000207e-05, 5.152800000000207e-05, 5.15279999999986e-05, 4.655500000000021e-05, 4.654200000000011e-05, 5.154200000000164e-05, 5.152800000000207e-05, 5.151300000000303e-05, 5.152800000000207e-05, 4.651299999999803e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.152800000000207e-05, 5.15140000000025e-05, 5.15409999999987e-05, 4.654100000000064e-05, 5.158300000000088e-05, 4.654200000000011e-05, 5.151299999999956e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.152699999999913e-05, 5.155600000000121e-05, 5.152800000000207e-05, 5.158400000000035e-05, 5.152800000000207e-05, 5.15270000000026e-05, 5.15279999999986e-05, 5.150000000000293e-05]</msg>
<status status="PASS" starttime="20201115 23:02:03.607" endtime="20201115 23:02:03.609"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.602" endtime="20201115 23:02:03.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.612" endtime="20201115 23:02:03.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:03.615" endtime="20201115 23:02:03.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.614" endtime="20201115 23:02:03.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.610" endtime="20201115 23:02:03.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.246" endtime="20201115 23:02:03.636"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.245" endtime="20201115 23:02:03.637"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.244" endtime="20201115 23:02:03.637"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.639" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 22">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.647" endtime="20201115 23:02:03.663"></status>
</kw>
<msg timestamp="20201115 23:02:03.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.646" endtime="20201115 23:02:03.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:03.664" endtime="20201115 23:02:03.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.667" endtime="20201115 23:02:03.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.643" endtime="20201115 23:02:03.669"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.641" endtime="20201115 23:02:03.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.676" endtime="20201115 23:02:03.963"></status>
</kw>
<msg timestamp="20201115 23:02:03.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.674" endtime="20201115 23:02:03.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:03.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024076958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:03.967" endtime="20201115 23:02:03.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:03.975" endtime="20201115 23:02:03.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.672" endtime="20201115 23:02:03.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.670" endtime="20201115 23:02:03.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:03.982" level="INFO">${RESULT} = [{'time': 0.024129319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236100000000077e-05, 'source_diff': 5.236100000000077e-05}, {'time': 0.024199139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:03.979" endtime="20201115 23:02:03.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.002" level="INFO">${ACCURACY} = {'diff': [5.236100000000077e-05, 5.152800000000207e-05, 5.15140000000025e-05, 5.15279999999986e-05, 5.155500000000174e-05, 5.15409999999987e-05, 5.15140000000025e-05, 5.15279999999986e-05, 5.152800000...</msg>
<status status="PASS" starttime="20201115 23:02:03.989" endtime="20201115 23:02:04.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.006" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.005" endtime="20201115 23:02:04.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.009" level="INFO">VALUE: [5.236100000000077e-05, 5.152800000000207e-05, 5.15140000000025e-05, 5.15279999999986e-05, 5.155500000000174e-05, 5.15409999999987e-05, 5.15140000000025e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.152800000000207e-05, 5.151399999999903e-05, 5.147200000000032e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.15140000000025e-05, 5.151399999999903e-05, 5.145800000000075e-05, 5.151399999999903e-05, 5.152699999999913e-05, 5.15140000000025e-05, 5.147200000000032e-05, 5.152800000000207e-05, 5.152699999999913e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.152699999999913e-05, 5.157000000000078e-05, 5.154199999999817e-05, 5.149999999999946e-05, 5.144499999999719e-05, 5.154100000000217e-05, 5.15409999999987e-05, 5.15140000000025e-05, 5.148599999999989e-05, 5.152699999999913e-05, 5.151399999999903e-05, 5.155600000000121e-05, 5.152699999999913e-05, 5.15279999999986e-05, 5.15140000000025e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.152699999999913e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.007" endtime="20201115 23:02:04.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.003" endtime="20201115 23:02:04.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.012" endtime="20201115 23:02:04.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.015" endtime="20201115 23:02:04.035"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.014" endtime="20201115 23:02:04.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.010" endtime="20201115 23:02:04.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.640" endtime="20201115 23:02:04.036"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.638" endtime="20201115 23:02:04.037"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:03.637" endtime="20201115 23:02:04.037"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.039" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 23">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.047" endtime="20201115 23:02:04.063"></status>
</kw>
<msg timestamp="20201115 23:02:04.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.046" endtime="20201115 23:02:04.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.064" endtime="20201115 23:02:04.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.067" endtime="20201115 23:02:04.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.043" endtime="20201115 23:02:04.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.041" endtime="20201115 23:02:04.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.076" endtime="20201115 23:02:04.362"></status>
</kw>
<msg timestamp="20201115 23:02:04.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024110125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024162417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.074" endtime="20201115 23:02:04.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024110125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024162417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.367" endtime="20201115 23:02:04.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.375" endtime="20201115 23:02:04.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.072" endtime="20201115 23:02:04.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.070" endtime="20201115 23:02:04.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.382" level="INFO">${RESULT} = [{'time': 0.024162417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.229199999999892e-05, 'source_diff': 5.229199999999892e-05}, {'time': 0.024228889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.379" endtime="20201115 23:02:04.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.397" level="INFO">${ACCURACY} = {'diff': [5.229199999999892e-05, 5.15279999999986e-05, 5.154199999999817e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.151399999999903e-05, 5.154199999999817e-05, 5.152800...</msg>
<status status="PASS" starttime="20201115 23:02:04.383" endtime="20201115 23:02:04.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.401" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.400" endtime="20201115 23:02:04.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.404" level="INFO">VALUE: [5.229199999999892e-05, 5.15279999999986e-05, 5.154199999999817e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.151399999999903e-05, 5.154199999999817e-05, 5.152800000000207e-05, 5.148599999999989e-05, 5.154100000000217e-05, 5.15279999999986e-05, 5.154199999999817e-05, 5.158300000000088e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.154100000000217e-05, 5.152800000000207e-05, 5.154200000000164e-05, 5.154199999999817e-05, 5.148599999999989e-05, 5.152699999999913e-05, 5.152699999999913e-05, 5.151299999999956e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.155500000000174e-05, 5.15270000000026e-05, 5.152800000000207e-05, 5.15140000000025e-05, 5.152800000000207e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.151299999999956e-05, 5.154200000000164e-05, 5.151399999999903e-05, 5.148599999999989e-05, 5.156900000000131e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.149999999999946e-05, 5.156900000000131e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.402" endtime="20201115 23:02:04.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.398" endtime="20201115 23:02:04.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.407" endtime="20201115 23:02:04.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.410" endtime="20201115 23:02:04.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.409" endtime="20201115 23:02:04.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.405" endtime="20201115 23:02:04.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.040" endtime="20201115 23:02:04.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.038" endtime="20201115 23:02:04.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.037" endtime="20201115 23:02:04.432"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.434" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 24">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.442" endtime="20201115 23:02:04.458"></status>
</kw>
<msg timestamp="20201115 23:02:04.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.441" endtime="20201115 23:02:04.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.459" endtime="20201115 23:02:04.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.462" endtime="20201115 23:02:04.463"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.438" endtime="20201115 23:02:04.464"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.436" endtime="20201115 23:02:04.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.471" endtime="20201115 23:02:04.757"></status>
</kw>
<msg timestamp="20201115 23:02:04.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024019667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.469" endtime="20201115 23:02:04.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024019667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.761" endtime="20201115 23:02:04.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.770" endtime="20201115 23:02:04.771"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.467" endtime="20201115 23:02:04.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.465" endtime="20201115 23:02:04.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:04.776" level="INFO">${RESULT} = [{'time': 0.024019667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.227800000000282e-05, 'source_diff': 5.227800000000282e-05}, {'time': 0.024086125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:04.773" endtime="20201115 23:02:04.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:04.791" level="INFO">${ACCURACY} = {'diff': [5.227800000000282e-05, 5.147200000000032e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.145800000000075e-05, 5.15140000000025e-05, 5.151399999999903e-05, 5.1513999...</msg>
<status status="PASS" starttime="20201115 23:02:04.778" endtime="20201115 23:02:04.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.795" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201115 23:02:04.794" endtime="20201115 23:02:04.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.798" level="INFO">VALUE: [5.227800000000282e-05, 5.147200000000032e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.145800000000075e-05, 5.15140000000025e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.155499999999827e-05, 5.152699999999913e-05, 5.15279999999986e-05, 5.143000000000161e-05, 5.151399999999903e-05, 5.155600000000121e-05, 5.149999999999946e-05, 5.151399999999903e-05, 5.149999999999946e-05, 5.151399999999903e-05, 5.149999999999946e-05, 5.151399999999903e-05, 5.15140000000025e-05, 5.151399999999903e-05, 5.154199999999817e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.149999999999946e-05, 5.152800000000207e-05, 5.15279999999986e-05, 5.151299999999956e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.152800000000207e-05, 5.154200000000164e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.15140000000025e-05, 5.147200000000032e-05, 5.15279999999986e-05, 5.149999999999946e-05, 5.15140000000025e-05, 5.155600000000121e-05, 5.149999999999946e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.15140000000025e-05, 5.147200000000032e-05, 5.15140000000025e-05]</msg>
<status status="PASS" starttime="20201115 23:02:04.796" endtime="20201115 23:02:04.798"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.792" endtime="20201115 23:02:04.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.801" endtime="20201115 23:02:04.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:04.804" endtime="20201115 23:02:04.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.803" endtime="20201115 23:02:04.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.799" endtime="20201115 23:02:04.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.435" endtime="20201115 23:02:04.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.433" endtime="20201115 23:02:04.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.432" endtime="20201115 23:02:04.826"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.828" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 25">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.836" endtime="20201115 23:02:04.852"></status>
</kw>
<msg timestamp="20201115 23:02:04.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.835" endtime="20201115 23:02:04.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:04.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:04.853" endtime="20201115 23:02:04.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.856" endtime="20201115 23:02:04.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.832" endtime="20201115 23:02:04.858"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.830" endtime="20201115 23:02:04.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:04.865" endtime="20201115 23:02:05.151"></status>
</kw>
<msg timestamp="20201115 23:02:05.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024169611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:04.864" endtime="20201115 23:02:05.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024169611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.156" endtime="20201115 23:02:05.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.164" endtime="20201115 23:02:05.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.861" endtime="20201115 23:02:05.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.859" endtime="20201115 23:02:05.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.171" level="INFO">${RESULT} = [{'time': 0.024169611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.225000000000021e-05, 'source_diff': 5.225000000000021e-05}, {'time': 0.024253194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:05.167" endtime="20201115 23:02:05.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.184" level="INFO">${ACCURACY} = {'diff': [5.225000000000021e-05, 5.151299999999956e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.152699999999913e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.1555999...</msg>
<status status="PASS" starttime="20201115 23:02:05.172" endtime="20201115 23:02:05.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.189" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.187" endtime="20201115 23:02:05.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.191" level="INFO">VALUE: [5.225000000000021e-05, 5.151299999999956e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.154200000000164e-05, 5.152699999999913e-05, 5.15279999999986e-05, 5.152800000000207e-05, 5.155599999999774e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.144500000000066e-05, 5.152800000000207e-05, 5.152699999999913e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.152800000000207e-05, 5.149999999999946e-05, 5.15279999999986e-05, 5.15140000000025e-05, 5.151399999999903e-05, 5.151399999999903e-05, 5.155599999999774e-05, 5.151399999999903e-05, 5.145900000000023e-05, 5.15140000000025e-05, 5.151399999999903e-05, 5.15279999999986e-05, 5.152699999999913e-05, 5.159700000000045e-05, 5.15140000000025e-05, 5.15279999999986e-05, 5.152699999999913e-05, 5.151299999999956e-05, 5.15140000000025e-05, 5.154199999999817e-05, 5.154200000000164e-05, 5.15279999999986e-05, 5.15279999999986e-05, 5.151399999999903e-05, 5.154199999999817e-05, 5.15279999999986e-05, 5.15270000000026e-05, 5.15279999999986e-05, 5.149999999999946e-05, 5.15140000000025e-05, 5.154199999999817e-05, 5.15270000000026e-05, 5.15279999999986e-05, 5.15279999999986e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.190" endtime="20201115 23:02:05.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.185" endtime="20201115 23:02:05.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.194" endtime="20201115 23:02:05.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.198" endtime="20201115 23:02:05.217"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.196" endtime="20201115 23:02:05.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.192" endtime="20201115 23:02:05.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.829" endtime="20201115 23:02:05.218"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.827" endtime="20201115 23:02:05.219"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:04.826" endtime="20201115 23:02:05.219"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.221" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 26">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.230" endtime="20201115 23:02:05.246"></status>
</kw>
<msg timestamp="20201115 23:02:05.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.228" endtime="20201115 23:02:05.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.247" endtime="20201115 23:02:05.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.250" endtime="20201115 23:02:05.251"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.225" endtime="20201115 23:02:05.252"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.223" endtime="20201115 23:02:05.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.259" endtime="20201115 23:02:05.546"></status>
</kw>
<msg timestamp="20201115 23:02:05.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024566208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.257" endtime="20201115 23:02:05.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024566208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024623458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.550" endtime="20201115 23:02:05.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.559" endtime="20201115 23:02:05.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.255" endtime="20201115 23:02:05.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.253" endtime="20201115 23:02:05.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.565" level="INFO">${RESULT} = [{'time': 0.024623458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7250000000001744e-05, 'source_diff': 5.7250000000001744e-05}, {'time': 0.024710806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.562" endtime="20201115 23:02:05.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.579" level="INFO">${ACCURACY} = {'diff': [5.7250000000001744e-05, 5.6499999999997524e-05, 5.658300000000241e-05, 5.154100000000217e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6471999999998385e-05, 5.6514000000000564e-05, ...</msg>
<status status="PASS" starttime="20201115 23:02:05.566" endtime="20201115 23:02:05.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.583" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.582" endtime="20201115 23:02:05.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.586" level="INFO">VALUE: [5.7250000000001744e-05, 5.6499999999997524e-05, 5.658300000000241e-05, 5.154100000000217e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6471999999998385e-05, 5.6514000000000564e-05, 5.15409999999987e-05, 5.152800000000207e-05, 5.6500000000000994e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.654099999999676e-05, 5.15279999999986e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6485999999997955e-05, 5.6514000000000564e-05, 5.152699999999913e-05, 5.6514000000000564e-05, 5.6513999999997094e-05, 5.656899999999937e-05, 5.15279999999986e-05, 5.6528000000000134e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.151399999999903e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.1487000000002836e-05, 5.6528000000000134e-05, 5.644499999999872e-05, 5.6528000000000134e-05, 5.6499999999997524e-05, 5.6499999999997524e-05, 5.149999999999946e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.15279999999986e-05, 5.651300000000109e-05, 5.6499999999997524e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.152800000000207e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.584" endtime="20201115 23:02:05.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.580" endtime="20201115 23:02:05.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.589" endtime="20201115 23:02:05.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.592" endtime="20201115 23:02:05.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.591" endtime="20201115 23:02:05.612"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.587" endtime="20201115 23:02:05.613"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.222" endtime="20201115 23:02:05.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.220" endtime="20201115 23:02:05.614"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.219" endtime="20201115 23:02:05.614"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.616" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 27">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.624" endtime="20201115 23:02:05.641"></status>
</kw>
<msg timestamp="20201115 23:02:05.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.623" endtime="20201115 23:02:05.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:05.642" endtime="20201115 23:02:05.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.644" endtime="20201115 23:02:05.646"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.620" endtime="20201115 23:02:05.647"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.618" endtime="20201115 23:02:05.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.653" endtime="20201115 23:02:05.940"></status>
</kw>
<msg timestamp="20201115 23:02:05.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024492083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.652" endtime="20201115 23:02:05.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024492083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024549333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:05.944" endtime="20201115 23:02:05.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.953" endtime="20201115 23:02:05.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.649" endtime="20201115 23:02:05.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.648" endtime="20201115 23:02:05.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:05.959" level="INFO">${RESULT} = [{'time': 0.024549333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7249999999998274e-05, 'source_diff': 5.7249999999998274e-05}, {'time': 0.024631708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:05.956" endtime="20201115 23:02:05.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:05.974" level="INFO">${ACCURACY} = {'diff': [5.7249999999998274e-05, 5.6513999999997094e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6528000000000134e-05, 5.6486000000001424e-05, 5.6443999999999245e-05, 5.6500000000000994e-05...</msg>
<status status="PASS" starttime="20201115 23:02:05.960" endtime="20201115 23:02:05.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.979" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201115 23:02:05.978" endtime="20201115 23:02:05.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:05.981" level="INFO">VALUE: [5.7249999999998274e-05, 5.6513999999997094e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6528000000000134e-05, 5.6486000000001424e-05, 5.6443999999999245e-05, 5.6500000000000994e-05, 5.6486000000001424e-05, 5.65549999999998e-05, 5.6457999999998815e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.65549999999998e-05, 5.6486000000001424e-05, 5.6472000000001854e-05, 5.6514000000000564e-05, 5.6513999999997094e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.644499999999872e-05, 5.6485999999997955e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6499999999997524e-05, 5.645900000000176e-05, 5.64870000000009e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.647300000000133e-05, 5.6514000000000564e-05, 5.652700000000066e-05, 5.6528000000000134e-05, 5.6500000000000994e-05, 5.6485999999997955e-05, 5.6486000000001424e-05, 5.6486000000001424e-05, 5.6514000000000564e-05, 5.6513999999997094e-05, 5.6500000000000994e-05, 5.643099999999915e-05, 5.6499999999997524e-05, 5.643099999999915e-05, 5.6555999999999274e-05, 5.648699999999743e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6499999999997524e-05]</msg>
<status status="PASS" starttime="20201115 23:02:05.980" endtime="20201115 23:02:05.982"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.975" endtime="20201115 23:02:05.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:05.985" endtime="20201115 23:02:05.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:05.988" endtime="20201115 23:02:06.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.987" endtime="20201115 23:02:06.008"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.983" endtime="20201115 23:02:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.617" endtime="20201115 23:02:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.615" endtime="20201115 23:02:06.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:05.614" endtime="20201115 23:02:06.010"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.012" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 28">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.020" endtime="20201115 23:02:06.036"></status>
</kw>
<msg timestamp="20201115 23:02:06.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.019" endtime="20201115 23:02:06.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.038" endtime="20201115 23:02:06.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.040" endtime="20201115 23:02:06.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.016" endtime="20201115 23:02:06.042"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.014" endtime="20201115 23:02:06.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.049" endtime="20201115 23:02:06.334"></status>
</kw>
<msg timestamp="20201115 23:02:06.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024106306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024163556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.048" endtime="20201115 23:02:06.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024106306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024163556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.338" endtime="20201115 23:02:06.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.347" endtime="20201115 23:02:06.348"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.045" endtime="20201115 23:02:06.349"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.043" endtime="20201115 23:02:06.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.353" level="INFO">${RESULT} = [{'time': 0.024163556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7249999999998274e-05, 'source_diff': 5.7249999999998274e-05}, {'time': 0.024243736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:06.350" endtime="20201115 23:02:06.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.367" level="INFO">${ACCURACY} = {'diff': [5.7249999999998274e-05, 5.6485999999997955e-05, 5.6528000000000134e-05, 5.656899999999937e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6499999999997524e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:06.354" endtime="20201115 23:02:06.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.371" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.370" endtime="20201115 23:02:06.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.374" level="INFO">VALUE: [5.7249999999998274e-05, 5.6485999999997955e-05, 5.6528000000000134e-05, 5.656899999999937e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6513999999997094e-05, 5.6514000000000564e-05, 5.6485999999997955e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6555999999999274e-05, 5.6457999999998815e-05, 5.6513999999997094e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.6514000000000564e-05, 5.6499999999997524e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6485999999997955e-05, 5.6500000000000994e-05, 5.6499999999997524e-05, 5.6499999999997524e-05, 5.6485999999997955e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6499999999997524e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.644499999999872e-05, 5.6486000000001424e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.6541999999999704e-05, 5.6471999999998385e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.373" endtime="20201115 23:02:06.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.368" endtime="20201115 23:02:06.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.378" endtime="20201115 23:02:06.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.381" endtime="20201115 23:02:06.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.380" endtime="20201115 23:02:06.401"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.376" endtime="20201115 23:02:06.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.013" endtime="20201115 23:02:06.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.011" endtime="20201115 23:02:06.402"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.010" endtime="20201115 23:02:06.402"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.405" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 29">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.413" endtime="20201115 23:02:06.429"></status>
</kw>
<msg timestamp="20201115 23:02:06.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.411" endtime="20201115 23:02:06.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.430" endtime="20201115 23:02:06.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.433" endtime="20201115 23:02:06.434"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.409" endtime="20201115 23:02:06.435"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.407" endtime="20201115 23:02:06.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.442" endtime="20201115 23:02:06.728"></status>
</kw>
<msg timestamp="20201115 23:02:06.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02410775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:06.440" endtime="20201115 23:02:06.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02410775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:06.732" endtime="20201115 23:02:06.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.741" endtime="20201115 23:02:06.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.438" endtime="20201115 23:02:06.743"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.436" endtime="20201115 23:02:06.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:06.747" level="INFO">${RESULT} = [{'time': 0.02410775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7264000000001314e-05, 'source_diff': 5.7264000000001314e-05}, {'time': 0.024180125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:06.744" endtime="20201115 23:02:06.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:06.761" level="INFO">${ACCURACY} = {'diff': [5.7264000000001314e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6527999999996664e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6500000000000994e-05...</msg>
<status status="PASS" starttime="20201115 23:02:06.749" endtime="20201115 23:02:06.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.766" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201115 23:02:06.765" endtime="20201115 23:02:06.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.768" level="INFO">VALUE: [5.7264000000001314e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6527999999996664e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6485999999997955e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6541999999999704e-05, 5.6499999999997524e-05, 5.6499999999997524e-05, 5.6528000000000134e-05, 5.6528000000000134e-05, 5.6485999999997955e-05, 5.655500000000327e-05, 5.6500000000000994e-05, 5.657000000000231e-05, 5.6528000000000134e-05, 5.6500000000000994e-05, 5.6555999999999274e-05, 5.6486000000001424e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6485999999997955e-05, 5.6513999999997094e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6499999999997524e-05, 5.6500000000000994e-05, 5.652699999999719e-05, 5.656899999999937e-05, 5.6528000000000134e-05, 5.644500000000219e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6500000000000994e-05]</msg>
<status status="PASS" starttime="20201115 23:02:06.767" endtime="20201115 23:02:06.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.762" endtime="20201115 23:02:06.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.772" endtime="20201115 23:02:06.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:06.775" endtime="20201115 23:02:06.794"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.773" endtime="20201115 23:02:06.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.770" endtime="20201115 23:02:06.795"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.405" endtime="20201115 23:02:06.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.403" endtime="20201115 23:02:06.796"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.403" endtime="20201115 23:02:06.796"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.799" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 30">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.807" endtime="20201115 23:02:06.823"></status>
</kw>
<msg timestamp="20201115 23:02:06.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.805" endtime="20201115 23:02:06.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:06.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:06.825" endtime="20201115 23:02:06.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.827" endtime="20201115 23:02:06.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.803" endtime="20201115 23:02:06.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.801" endtime="20201115 23:02:06.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:06.836" endtime="20201115 23:02:07.123"></status>
</kw>
<msg timestamp="20201115 23:02:07.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024492694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:06.835" endtime="20201115 23:02:07.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024435444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024492694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.127" endtime="20201115 23:02:07.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.136" endtime="20201115 23:02:07.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.832" endtime="20201115 23:02:07.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.831" endtime="20201115 23:02:07.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.143" level="INFO">${RESULT} = [{'time': 0.024492694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7249999999998274e-05, 'source_diff': 5.7249999999998274e-05}, {'time': 0.024575667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:07.140" endtime="20201115 23:02:07.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.156" level="INFO">${ACCURACY} = {'diff': [5.7249999999998274e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.655600000000274e-05, 5.6528000000000134e-05,...</msg>
<status status="PASS" starttime="20201115 23:02:07.144" endtime="20201115 23:02:07.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.161" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.160" endtime="20201115 23:02:07.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.163" level="INFO">VALUE: [5.7249999999998274e-05, 5.6514000000000564e-05, 5.6486000000001424e-05, 5.6499999999997524e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 5.655600000000274e-05, 5.6528000000000134e-05, 5.6555999999999274e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6541999999999704e-05, 5.6500000000000994e-05, 5.644499999999872e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.6499999999997524e-05, 5.6486000000001424e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.651299999999762e-05, 5.6499999999997524e-05, 5.6569999999998843e-05, 5.6528000000000134e-05, 5.6513999999997094e-05, 5.6499999999997524e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.6485999999997955e-05, 5.6486000000001424e-05, 5.652700000000066e-05, 5.6458000000002284e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6528000000000134e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6443999999999245e-05, 5.6514000000000564e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.6541999999999704e-05, 5.6500000000000994e-05, 5.6555999999999274e-05, 5.6486000000001424e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.162" endtime="20201115 23:02:07.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.157" endtime="20201115 23:02:07.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.166" endtime="20201115 23:02:07.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.170" endtime="20201115 23:02:07.189"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.168" endtime="20201115 23:02:07.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.165" endtime="20201115 23:02:07.190"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.799" endtime="20201115 23:02:07.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.797" endtime="20201115 23:02:07.191"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:06.796" endtime="20201115 23:02:07.191"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.193" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 31">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.202" endtime="20201115 23:02:07.218"></status>
</kw>
<msg timestamp="20201115 23:02:07.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.200" endtime="20201115 23:02:07.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.219" endtime="20201115 23:02:07.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.222" endtime="20201115 23:02:07.223"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.198" endtime="20201115 23:02:07.224"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.195" endtime="20201115 23:02:07.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.231" endtime="20201115 23:02:07.518"></status>
</kw>
<msg timestamp="20201115 23:02:07.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024082028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.229" endtime="20201115 23:02:07.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024082028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.522" endtime="20201115 23:02:07.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.531" endtime="20201115 23:02:07.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.226" endtime="20201115 23:02:07.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.225" endtime="20201115 23:02:07.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.538" level="INFO">${RESULT} = [{'time': 0.024082028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.223599999999677e-05, 'source_diff': 6.223599999999677e-05}, {'time': 0.024169069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.534" endtime="20201115 23:02:07.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.552" level="INFO">${ACCURACY} = {'diff': [6.223599999999677e-05, 6.147199999999992e-05, 6.152800000000166e-05, 6.147199999999992e-05, 6.147300000000286e-05, 6.149999999999906e-05, 5.6514000000000564e-05, 6.141600000000164e-05, 6.149...</msg>
<status status="PASS" starttime="20201115 23:02:07.539" endtime="20201115 23:02:07.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.557" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.556" endtime="20201115 23:02:07.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.560" level="INFO">VALUE: [6.223599999999677e-05, 6.147199999999992e-05, 6.152800000000166e-05, 6.147199999999992e-05, 6.147300000000286e-05, 6.149999999999906e-05, 5.6514000000000564e-05, 6.141600000000164e-05, 6.149999999999906e-05, 5.6514000000000564e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.15140000000021e-05, 6.148599999999949e-05, 6.150000000000252e-05, 6.151399999999863e-05, 6.148599999999949e-05, 6.148599999999949e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.6514000000000564e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.145799999999688e-05, 6.150000000000252e-05, 5.6514000000000564e-05, 6.148699999999896e-05, 6.151399999999863e-05, 6.149999999999906e-05, 5.6514000000000564e-05, 5.6514000000000564e-05, 5.6528000000000134e-05, 5.658299999999894e-05, 5.651299999999762e-05, 5.6528000000000134e-05, 5.6443999999999245e-05, 6.150000000000252e-05, 6.145800000000035e-05, 6.150000000000252e-05, 5.6528000000000134e-05, 6.15140000000021e-05, 5.6485999999997955e-05, 6.149999999999906e-05, 5.6555999999999274e-05, 5.6514000000000564e-05, 6.15279999999982e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.145800000000035e-05, 6.144400000000078e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.558" endtime="20201115 23:02:07.560"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.553" endtime="20201115 23:02:07.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.563" endtime="20201115 23:02:07.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.566" endtime="20201115 23:02:07.585"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.565" endtime="20201115 23:02:07.586"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.561" endtime="20201115 23:02:07.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.194" endtime="20201115 23:02:07.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.192" endtime="20201115 23:02:07.587"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.191" endtime="20201115 23:02:07.587"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.590" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 32">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.598" endtime="20201115 23:02:07.614"></status>
</kw>
<msg timestamp="20201115 23:02:07.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.596" endtime="20201115 23:02:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.615" endtime="20201115 23:02:07.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.618" endtime="20201115 23:02:07.620"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.594" endtime="20201115 23:02:07.621"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.592" endtime="20201115 23:02:07.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.628" endtime="20201115 23:02:07.914"></status>
</kw>
<msg timestamp="20201115 23:02:07.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.626" endtime="20201115 23:02:07.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023984736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024046972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:07.918" endtime="20201115 23:02:07.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.926" endtime="20201115 23:02:07.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.623" endtime="20201115 23:02:07.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.622" endtime="20201115 23:02:07.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:07.933" level="INFO">${RESULT} = [{'time': 0.024046972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.223600000000024e-05, 'source_diff': 6.223600000000024e-05}, {'time': 0.024127444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:07.930" endtime="20201115 23:02:07.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:07.947" level="INFO">${ACCURACY} = {'diff': [6.223600000000024e-05, 6.144400000000078e-05, 6.145800000000035e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.152800000000166e-05, 6.149999999999906e-05, 6.152800000000166e-05, 6.1458...</msg>
<status status="PASS" starttime="20201115 23:02:07.934" endtime="20201115 23:02:07.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.951" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201115 23:02:07.950" endtime="20201115 23:02:07.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.954" level="INFO">VALUE: [6.223600000000024e-05, 6.144400000000078e-05, 6.145800000000035e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.152800000000166e-05, 6.149999999999906e-05, 6.152800000000166e-05, 6.145800000000035e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.144400000000078e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.150000000000252e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.154100000000176e-05, 6.150000000000252e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.143099999999721e-05, 6.148599999999949e-05, 6.147299999999939e-05, 6.149999999999906e-05, 6.152699999999872e-05, 6.148599999999949e-05, 6.147299999999939e-05, 6.152800000000166e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.141700000000111e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.152800000000166e-05, 6.151399999999863e-05, 6.147199999999992e-05, 6.141699999999764e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.144400000000078e-05, 6.147199999999992e-05, 6.147199999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:02:07.952" endtime="20201115 23:02:07.954"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.948" endtime="20201115 23:02:07.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.957" endtime="20201115 23:02:07.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:07.960" endtime="20201115 23:02:07.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.959" endtime="20201115 23:02:07.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.955" endtime="20201115 23:02:07.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.590" endtime="20201115 23:02:07.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.588" endtime="20201115 23:02:07.981"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.588" endtime="20201115 23:02:07.981"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:07.984" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 33">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:07.992" endtime="20201115 23:02:08.009"></status>
</kw>
<msg timestamp="20201115 23:02:08.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:07.991" endtime="20201115 23:02:08.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.010" endtime="20201115 23:02:08.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.013" endtime="20201115 23:02:08.014"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.988" endtime="20201115 23:02:08.015"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.986" endtime="20201115 23:02:08.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.022" endtime="20201115 23:02:08.306"></status>
</kw>
<msg timestamp="20201115 23:02:08.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024510736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024572972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.020" endtime="20201115 23:02:08.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024510736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024572972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.311" endtime="20201115 23:02:08.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.319" endtime="20201115 23:02:08.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.018" endtime="20201115 23:02:08.321"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.016" endtime="20201115 23:02:08.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.326" level="INFO">${RESULT} = [{'time': 0.024572972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.223599999999677e-05, 'source_diff': 6.223599999999677e-05}, {'time': 0.024647222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.322" endtime="20201115 23:02:08.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.339" level="INFO">${ACCURACY} = {'diff': [6.223599999999677e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.15279999999982e-05, 6.148699999999896e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.15000...</msg>
<status status="PASS" starttime="20201115 23:02:08.327" endtime="20201115 23:02:08.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.344" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.343" endtime="20201115 23:02:08.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.346" level="INFO">VALUE: [6.223599999999677e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.15279999999982e-05, 6.148699999999896e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.150000000000252e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.147300000000286e-05, 6.150000000000252e-05, 6.145899999999982e-05, 6.149999999999906e-05, 6.145800000000035e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.144500000000025e-05, 6.149999999999906e-05, 6.147299999999939e-05, 6.148599999999949e-05, 6.15279999999982e-05, 6.148699999999896e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.150000000000252e-05, 6.144400000000078e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.148700000000243e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.147299999999939e-05, 6.148599999999949e-05, 6.148699999999896e-05, 6.150000000000252e-05, 6.144400000000078e-05, 6.149999999999906e-05, 6.148600000000295e-05, 6.149999999999906e-05, 6.151399999999863e-05, 6.141700000000111e-05, 6.150000000000252e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.145800000000035e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.345" endtime="20201115 23:02:08.347"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.340" endtime="20201115 23:02:08.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.349" endtime="20201115 23:02:08.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.353" endtime="20201115 23:02:08.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.351" endtime="20201115 23:02:08.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.348" endtime="20201115 23:02:08.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.984" endtime="20201115 23:02:08.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.983" endtime="20201115 23:02:08.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:07.982" endtime="20201115 23:02:08.374"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.377" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 34">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.385" endtime="20201115 23:02:08.401"></status>
</kw>
<msg timestamp="20201115 23:02:08.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.384" endtime="20201115 23:02:08.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.403" endtime="20201115 23:02:08.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.405" endtime="20201115 23:02:08.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.381" endtime="20201115 23:02:08.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.379" endtime="20201115 23:02:08.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.414" endtime="20201115 23:02:08.701"></status>
</kw>
<msg timestamp="20201115 23:02:08.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024032889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.412" endtime="20201115 23:02:08.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024032889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.705" endtime="20201115 23:02:08.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.714" endtime="20201115 23:02:08.715"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.410" endtime="20201115 23:02:08.716"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.408" endtime="20201115 23:02:08.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:08.721" level="INFO">${RESULT} = [{'time': 0.024095097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.220799999999763e-05, 'source_diff': 6.220799999999763e-05}, {'time': 0.024173722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:08.717" endtime="20201115 23:02:08.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:08.734" level="INFO">${ACCURACY} = {'diff': [6.220799999999763e-05, 6.148600000000295e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.148600000000295e-05, 6.143100000000068e-05, 6.1556...</msg>
<status status="PASS" starttime="20201115 23:02:08.722" endtime="20201115 23:02:08.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.739" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201115 23:02:08.738" endtime="20201115 23:02:08.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.741" level="INFO">VALUE: [6.220799999999763e-05, 6.148600000000295e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.148600000000295e-05, 6.143100000000068e-05, 6.15560000000008e-05, 6.148599999999949e-05, 6.144500000000025e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.152699999999872e-05, 6.147299999999939e-05, 6.148699999999896e-05, 6.15560000000008e-05, 6.148600000000295e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.145800000000035e-05, 6.154200000000123e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.142999999999774e-05, 6.148599999999949e-05, 6.143100000000068e-05, 6.158300000000047e-05, 6.144400000000078e-05, 6.148700000000243e-05, 6.151399999999863e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.155499999999786e-05, 6.15560000000008e-05, 6.15140000000021e-05, 6.150000000000252e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.15140000000021e-05, 6.147199999999992e-05]</msg>
<status status="PASS" starttime="20201115 23:02:08.740" endtime="20201115 23:02:08.742"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.735" endtime="20201115 23:02:08.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.745" endtime="20201115 23:02:08.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:08.748" endtime="20201115 23:02:08.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.746" endtime="20201115 23:02:08.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.743" endtime="20201115 23:02:08.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.377" endtime="20201115 23:02:08.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.376" endtime="20201115 23:02:08.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.375" endtime="20201115 23:02:08.769"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.772" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 35">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.780" endtime="20201115 23:02:08.796"></status>
</kw>
<msg timestamp="20201115 23:02:08.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.778" endtime="20201115 23:02:08.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:08.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:08.798" endtime="20201115 23:02:08.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.800" endtime="20201115 23:02:08.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.776" endtime="20201115 23:02:08.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.774" endtime="20201115 23:02:08.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:08.809" endtime="20201115 23:02:09.095"></status>
</kw>
<msg timestamp="20201115 23:02:09.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024089458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:08.807" endtime="20201115 23:02:09.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024089458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.100" endtime="20201115 23:02:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.108" endtime="20201115 23:02:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.805" endtime="20201115 23:02:09.110"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.803" endtime="20201115 23:02:09.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.115" level="INFO">${RESULT} = [{'time': 0.024089458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.227699999999947e-05, 'source_diff': 6.227699999999947e-05}, {'time': 0.024166528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.111" endtime="20201115 23:02:09.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.130" level="INFO">${ACCURACY} = {'diff': [6.227699999999947e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.150000000000252e-05, 6.149999999999906e-05, 6.147199999999992e-05, 6.147199999999992e-05, 6.148600000000295e-05, 6.15139...</msg>
<status status="PASS" starttime="20201115 23:02:09.116" endtime="20201115 23:02:09.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.134" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.133" endtime="20201115 23:02:09.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.141" level="INFO">VALUE: [6.227699999999947e-05, 6.15279999999982e-05, 6.147199999999992e-05, 6.150000000000252e-05, 6.149999999999906e-05, 6.147199999999992e-05, 6.147199999999992e-05, 6.148600000000295e-05, 6.151399999999863e-05, 6.149999999999906e-05, 6.141699999999764e-05, 6.145800000000035e-05, 6.149999999999906e-05, 6.152699999999872e-05, 6.147299999999939e-05, 6.147299999999939e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.145800000000035e-05, 6.148599999999949e-05, 6.15560000000008e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.141700000000111e-05, 6.152800000000166e-05, 6.148599999999949e-05, 6.150000000000252e-05, 6.148599999999949e-05, 6.144400000000078e-05, 6.149999999999906e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.148600000000295e-05, 6.149999999999906e-05, 6.149999999999906e-05, 6.151399999999863e-05, 6.148599999999949e-05, 6.144500000000025e-05, 6.149999999999906e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.147199999999992e-05, 6.149999999999906e-05, 6.143100000000068e-05, 6.145800000000035e-05, 6.148599999999949e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.135" endtime="20201115 23:02:09.141"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.130" endtime="20201115 23:02:09.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.144" endtime="20201115 23:02:09.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.147" endtime="20201115 23:02:09.167"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.146" endtime="20201115 23:02:09.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.142" endtime="20201115 23:02:09.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.772" endtime="20201115 23:02:09.168"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.770" endtime="20201115 23:02:09.169"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:08.770" endtime="20201115 23:02:09.169"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.171" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 36">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.179" endtime="20201115 23:02:09.196"></status>
</kw>
<msg timestamp="20201115 23:02:09.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.178" endtime="20201115 23:02:09.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.197" endtime="20201115 23:02:09.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.200" endtime="20201115 23:02:09.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.175" endtime="20201115 23:02:09.202"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.173" endtime="20201115 23:02:09.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.209" endtime="20201115 23:02:09.495"></status>
</kw>
<msg timestamp="20201115 23:02:09.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024211194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.207" endtime="20201115 23:02:09.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024143972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024211194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.499" endtime="20201115 23:02:09.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.507" endtime="20201115 23:02:09.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.205" endtime="20201115 23:02:09.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.203" endtime="20201115 23:02:09.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.514" level="INFO">${RESULT} = [{'time': 0.024211194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722199999999873e-05, 'source_diff': 6.722199999999873e-05}, {'time': 0.024307889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.510" endtime="20201115 23:02:09.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.528" level="INFO">${ACCURACY} = {'diff': [6.722199999999873e-05, 6.648599999999755e-05, 6.647200000000145e-05, 6.647300000000092e-05, 6.645899999999788e-05, 6.647199999999798e-05, 6.645800000000188e-05, 6.645800000000188e-05, 6.6527...</msg>
<status status="PASS" starttime="20201115 23:02:09.515" endtime="20201115 23:02:09.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.532" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.531" endtime="20201115 23:02:09.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.535" level="INFO">VALUE: [6.722199999999873e-05, 6.648599999999755e-05, 6.647200000000145e-05, 6.647300000000092e-05, 6.645899999999788e-05, 6.647199999999798e-05, 6.645800000000188e-05, 6.645800000000188e-05, 6.652799999999973e-05, 6.149999999999906e-05, 6.64440000000023e-05, 6.645799999999841e-05, 6.647200000000145e-05, 6.652799999999973e-05, 6.647299999999745e-05, 6.647199999999798e-05, 6.644399999999884e-05, 6.648600000000102e-05, 6.647200000000145e-05, 6.645799999999841e-05, 6.648600000000102e-05, 6.644399999999884e-05, 6.645799999999841e-05, 6.647200000000145e-05, 6.645799999999841e-05, 6.648599999999755e-05, 6.648600000000102e-05, 6.644399999999884e-05, 6.647200000000145e-05, 6.645900000000135e-05, 6.647200000000145e-05, 6.647300000000092e-05, 6.645800000000188e-05, 6.147199999999992e-05, 6.645799999999841e-05, 6.644500000000178e-05, 6.649999999999712e-05, 6.647300000000092e-05, 6.638900000000003e-05, 6.648600000000102e-05, 6.645800000000188e-05, 6.148699999999896e-05, 6.647199999999798e-05, 6.647199999999798e-05, 6.648600000000102e-05, 6.648599999999755e-05, 6.645799999999841e-05, 6.643000000000274e-05, 6.148699999999896e-05, 6.643099999999874e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.533" endtime="20201115 23:02:09.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.529" endtime="20201115 23:02:09.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.538" endtime="20201115 23:02:09.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.541" endtime="20201115 23:02:09.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.540" endtime="20201115 23:02:09.561"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.536" endtime="20201115 23:02:09.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.172" endtime="20201115 23:02:09.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.170" endtime="20201115 23:02:09.562"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.169" endtime="20201115 23:02:09.562"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.565" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 37">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.573" endtime="20201115 23:02:09.589"></status>
</kw>
<msg timestamp="20201115 23:02:09.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.571" endtime="20201115 23:02:09.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.591" endtime="20201115 23:02:09.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.593" endtime="20201115 23:02:09.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.569" endtime="20201115 23:02:09.595"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.567" endtime="20201115 23:02:09.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.602" endtime="20201115 23:02:09.889"></status>
</kw>
<msg timestamp="20201115 23:02:09.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024053819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.601" endtime="20201115 23:02:09.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023986611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024053819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.893" endtime="20201115 23:02:09.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.902" endtime="20201115 23:02:09.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.598" endtime="20201115 23:02:09.904"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.596" endtime="20201115 23:02:09.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:09.909" level="INFO">${RESULT} = [{'time': 0.024053819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.720799999999916e-05, 'source_diff': 6.720799999999916e-05}, {'time': 0.024138028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:09.905" endtime="20201115 23:02:09.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:09.922" level="INFO">${ACCURACY} = {'diff': [6.720799999999916e-05, 6.647199999999798e-05, 6.644499999999831e-05, 6.647199999999798e-05, 6.644499999999831e-05, 6.650000000000059e-05, 6.64029999999996e-05, 6.647199999999798e-05, 6.64720...</msg>
<status status="PASS" starttime="20201115 23:02:09.910" endtime="20201115 23:02:09.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.927" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201115 23:02:09.926" endtime="20201115 23:02:09.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.929" level="INFO">VALUE: [6.720799999999916e-05, 6.647199999999798e-05, 6.644499999999831e-05, 6.647199999999798e-05, 6.644499999999831e-05, 6.650000000000059e-05, 6.64029999999996e-05, 6.647199999999798e-05, 6.647200000000145e-05, 6.647200000000145e-05, 6.644500000000178e-05, 6.647299999999745e-05, 6.647199999999798e-05, 6.648600000000102e-05, 6.647300000000092e-05, 6.647200000000145e-05, 6.645800000000188e-05, 6.642999999999927e-05, 6.64440000000023e-05, 6.645799999999841e-05, 6.644399999999884e-05, 6.645800000000188e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.64440000000023e-05, 6.645799999999841e-05, 6.647200000000145e-05, 6.645799999999841e-05, 6.645800000000188e-05, 6.641699999999917e-05, 6.647200000000145e-05, 6.648600000000102e-05, 6.648599999999755e-05, 6.647199999999798e-05, 6.645799999999841e-05, 6.645800000000188e-05, 6.648599999999755e-05, 6.64440000000023e-05, 6.647200000000145e-05, 6.644500000000178e-05, 6.644499999999831e-05, 6.64029999999996e-05, 6.647199999999798e-05, 6.652799999999973e-05, 6.651400000000016e-05, 6.645900000000135e-05, 6.647200000000145e-05, 6.648600000000102e-05, 6.644499999999831e-05, 6.645799999999841e-05]</msg>
<status status="PASS" starttime="20201115 23:02:09.928" endtime="20201115 23:02:09.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.923" endtime="20201115 23:02:09.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.933" endtime="20201115 23:02:09.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:09.936" endtime="20201115 23:02:09.955"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.935" endtime="20201115 23:02:09.956"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.931" endtime="20201115 23:02:09.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.565" endtime="20201115 23:02:09.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.564" endtime="20201115 23:02:09.957"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.563" endtime="20201115 23:02:09.957"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.960" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 38">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.968" endtime="20201115 23:02:09.984"></status>
</kw>
<msg timestamp="20201115 23:02:09.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.966" endtime="20201115 23:02:09.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:09.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:09.986" endtime="20201115 23:02:09.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.988" endtime="20201115 23:02:09.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.964" endtime="20201115 23:02:09.990"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.962" endtime="20201115 23:02:09.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:09.997" endtime="20201115 23:02:10.284"></status>
</kw>
<msg timestamp="20201115 23:02:10.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024022431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:09.995" endtime="20201115 23:02:10.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023955208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024022431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.289" endtime="20201115 23:02:10.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.297" endtime="20201115 23:02:10.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.993" endtime="20201115 23:02:10.299"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.991" endtime="20201115 23:02:10.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.304" level="INFO">${RESULT} = [{'time': 0.024022431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722300000000167e-05, 'source_diff': 6.722300000000167e-05}, {'time': 0.024101667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.300" endtime="20201115 23:02:10.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.317" level="INFO">${ACCURACY} = {'diff': [6.722300000000167e-05, 6.647300000000092e-05, 6.645899999999788e-05, 6.648599999999755e-05, 6.648700000000049e-05, 6.645800000000188e-05, 6.645799999999841e-05, 6.647199999999798e-05, 6.6472...</msg>
<status status="PASS" starttime="20201115 23:02:10.305" endtime="20201115 23:02:10.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.322" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.321" endtime="20201115 23:02:10.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.324" level="INFO">VALUE: [6.722300000000167e-05, 6.647300000000092e-05, 6.645899999999788e-05, 6.648599999999755e-05, 6.648700000000049e-05, 6.645800000000188e-05, 6.645799999999841e-05, 6.647199999999798e-05, 6.647200000000145e-05, 6.647199999999798e-05, 6.647199999999798e-05, 6.652799999999973e-05, 6.647200000000145e-05, 6.648600000000102e-05, 6.647300000000092e-05, 6.645899999999788e-05, 6.647200000000145e-05, 6.645799999999841e-05, 6.644399999999884e-05, 6.644399999999884e-05, 6.647200000000145e-05, 6.648600000000102e-05, 6.647199999999798e-05, 6.645899999999788e-05, 6.645799999999841e-05, 6.647200000000145e-05, 6.648699999999702e-05, 6.651400000000016e-05, 6.648600000000102e-05, 6.647200000000145e-05, 6.647200000000145e-05, 6.648600000000102e-05, 6.647200000000145e-05, 6.648599999999755e-05, 6.645800000000188e-05, 6.644499999999831e-05, 6.644399999999884e-05, 6.647200000000145e-05, 6.648599999999755e-05, 6.647199999999798e-05, 6.645800000000188e-05, 6.647200000000145e-05, 6.64159999999997e-05, 6.647200000000145e-05, 6.647199999999798e-05, 6.647300000000092e-05, 6.647199999999798e-05, 6.652799999999973e-05, 6.647200000000145e-05, 6.647300000000092e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.323" endtime="20201115 23:02:10.325"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.318" endtime="20201115 23:02:10.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.327" endtime="20201115 23:02:10.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.331" endtime="20201115 23:02:10.350"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.329" endtime="20201115 23:02:10.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.326" endtime="20201115 23:02:10.351"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.960" endtime="20201115 23:02:10.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.958" endtime="20201115 23:02:10.352"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:09.958" endtime="20201115 23:02:10.352"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.354" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 39">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.363" endtime="20201115 23:02:10.379"></status>
</kw>
<msg timestamp="20201115 23:02:10.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.361" endtime="20201115 23:02:10.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.380" endtime="20201115 23:02:10.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.383" endtime="20201115 23:02:10.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.358" endtime="20201115 23:02:10.385"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.356" endtime="20201115 23:02:10.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.392" endtime="20201115 23:02:10.680"></status>
</kw>
<msg timestamp="20201115 23:02:10.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024032944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024100139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.391" endtime="20201115 23:02:10.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024032944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024100139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.684" endtime="20201115 23:02:10.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.692" endtime="20201115 23:02:10.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.388" endtime="20201115 23:02:10.694"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.386" endtime="20201115 23:02:10.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:10.699" level="INFO">${RESULT} = [{'time': 0.024100139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.719499999999906e-05, 'source_diff': 6.719499999999906e-05}, {'time': 0.024196194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:10.696" endtime="20201115 23:02:10.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:10.714" level="INFO">${ACCURACY} = {'diff': [6.719499999999906e-05, 6.647200000000145e-05, 6.645800000000188e-05, 6.645800000000188e-05, 6.647199999999798e-05, 6.645900000000135e-05, 6.645900000000135e-05, 6.651400000000016e-05, 6.6457...</msg>
<status status="PASS" starttime="20201115 23:02:10.700" endtime="20201115 23:02:10.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.718" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201115 23:02:10.717" endtime="20201115 23:02:10.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.721" level="INFO">VALUE: [6.719499999999906e-05, 6.647200000000145e-05, 6.645800000000188e-05, 6.645800000000188e-05, 6.647199999999798e-05, 6.645900000000135e-05, 6.645900000000135e-05, 6.651400000000016e-05, 6.645799999999841e-05, 6.644499999999831e-05, 6.645800000000188e-05, 6.645799999999841e-05, 6.647200000000145e-05, 6.647200000000145e-05, 6.647200000000145e-05, 6.644500000000178e-05, 6.645799999999841e-05, 6.645900000000135e-05, 6.647200000000145e-05, 6.643099999999874e-05, 6.648700000000049e-05, 6.647300000000092e-05, 6.647299999999745e-05, 6.650000000000059e-05, 6.64440000000023e-05, 6.644499999999831e-05, 6.64440000000023e-05, 6.647200000000145e-05, 6.648700000000049e-05, 6.648599999999755e-05, 6.647199999999798e-05, 6.647199999999798e-05, 6.650000000000059e-05, 6.645900000000135e-05, 6.647199999999798e-05, 6.645799999999841e-05, 6.645799999999841e-05, 6.647200000000145e-05, 6.641699999999917e-05, 6.642999999999927e-05, 6.647199999999798e-05, 6.647199999999798e-05, 6.644399999999884e-05, 6.647199999999798e-05, 6.645799999999841e-05, 6.65419999999993e-05, 6.644499999999831e-05, 6.645899999999788e-05, 6.647200000000145e-05, 6.651400000000016e-05]</msg>
<status status="PASS" starttime="20201115 23:02:10.720" endtime="20201115 23:02:10.721"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.715" endtime="20201115 23:02:10.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.724" endtime="20201115 23:02:10.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:10.727" endtime="20201115 23:02:10.747"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.726" endtime="20201115 23:02:10.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.722" endtime="20201115 23:02:10.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.355" endtime="20201115 23:02:10.748"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.353" endtime="20201115 23:02:10.749"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.352" endtime="20201115 23:02:10.749"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.751" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 40">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.760" endtime="20201115 23:02:10.779"></status>
</kw>
<msg timestamp="20201115 23:02:10.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.758" endtime="20201115 23:02:10.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:10.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:10.781" endtime="20201115 23:02:10.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.783" endtime="20201115 23:02:10.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.755" endtime="20201115 23:02:10.785"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.753" endtime="20201115 23:02:10.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:10.792" endtime="20201115 23:02:11.078"></status>
</kw>
<msg timestamp="20201115 23:02:11.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024452611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024583611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:10.791" endtime="20201115 23:02:11.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024452611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024583611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.082" endtime="20201115 23:02:11.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.090" endtime="20201115 23:02:11.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.788" endtime="20201115 23:02:11.092"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.786" endtime="20201115 23:02:11.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.097" level="INFO">${RESULT} = [{'time': 0.024583611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013099999999999917, 'source_diff': 0.00013099999999999917}, {'time': 0.024744917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.094" endtime="20201115 23:02:11.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.110" level="INFO">${ACCURACY} = {'diff': [0.00013099999999999917, 0.0001302920000000006, 0.00013031900000000027, 0.0001303059999999967, 0.00013031900000000027, 0.0001302920000000006, 0.00013030600000000017, 0.00013033400000000278, 0...</msg>
<status status="PASS" starttime="20201115 23:02:11.098" endtime="20201115 23:02:11.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.115" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.114" endtime="20201115 23:02:11.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.117" level="INFO">VALUE: [0.00013099999999999917, 0.0001302920000000006, 0.00013031900000000027, 0.0001303059999999967, 0.00013031900000000027, 0.0001302920000000006, 0.00013030600000000017, 0.00013033400000000278, 0.00013033299999999984, 0.00013031900000000027, 0.00013031999999999974, 0.00013033299999999984, 0.00013033299999999984, 0.00013034700000000288, 0.00013030600000000017, 0.0001303339999999993, 0.00013026400000000146, 0.00013031999999999974, 0.00013036100000000245, 0.00013034799999999888, 0.0001304310000000003, 0.00013033299999999984, 0.0001302920000000006, 0.00013031999999999974, 0.00013044499999999987, 0.00013034700000000288, 0.00013033299999999984, 0.00013033299999999984, 0.0001303339999999993, 0.00013031900000000027, 0.00013036100000000245, 0.00013031900000000027, 0.00013034799999999888, 0.00013040300000000116, 0.0001302920000000006, 0.00013038899999999812, 0.0001302920000000006, 0.00013031900000000027, 0.00013045799999999996, 0.00013031900000000027, 0.00013033299999999984, 0.00013030499999999723, 0.00013029100000000113, 0.00013031900000000027, 0.0001303200000000032, 0.00013034700000000288, 0.00013030600000000364, 0.00013136199999999598, 0.00013031999999999627, 0.00013029199999999713]</msg>
<status status="PASS" starttime="20201115 23:02:11.116" endtime="20201115 23:02:11.117"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.111" endtime="20201115 23:02:11.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.120" endtime="20201115 23:02:11.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.124" endtime="20201115 23:02:11.143"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.122" endtime="20201115 23:02:11.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.119" endtime="20201115 23:02:11.144"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.752" endtime="20201115 23:02:11.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.750" endtime="20201115 23:02:11.145"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:10.749" endtime="20201115 23:02:11.145"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.148" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 41">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.156" endtime="20201115 23:02:11.175"></status>
</kw>
<msg timestamp="20201115 23:02:11.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.154" endtime="20201115 23:02:11.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.177" endtime="20201115 23:02:11.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.179" endtime="20201115 23:02:11.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.152" endtime="20201115 23:02:11.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.150" endtime="20201115 23:02:11.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.188" endtime="20201115 23:02:11.475"></status>
</kw>
<msg timestamp="20201115 23:02:11.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024433653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024565653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.187" endtime="20201115 23:02:11.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024433653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024565653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.479" endtime="20201115 23:02:11.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.487" endtime="20201115 23:02:11.489"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.184" endtime="20201115 23:02:11.490"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.183" endtime="20201115 23:02:11.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.494" level="INFO">${RESULT} = [{'time': 0.024565653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013200000000000017, 'source_diff': 0.00013200000000000017}, {'time': 0.024728125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.491" endtime="20201115 23:02:11.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.507" level="INFO">${ACCURACY} = {'diff': [0.00013200000000000017, 0.0001317639999999995, 0.0001321250000000003, 0.00013211100000000073, 0.00013173699999999983, 0.0001314440000000014, 0.00013225000000000042, 0.00013163899999999937, 0...</msg>
<status status="PASS" starttime="20201115 23:02:11.495" endtime="20201115 23:02:11.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.512" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.511" endtime="20201115 23:02:11.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.514" level="INFO">VALUE: [0.00013200000000000017, 0.0001317639999999995, 0.0001321250000000003, 0.00013211100000000073, 0.00013173699999999983, 0.0001314440000000014, 0.00013225000000000042, 0.00013163899999999937, 0.00013191600000000275, 0.00013201399999999974, 0.00013187500000000005, 0.00013211100000000073, 0.0001321250000000003, 0.00013231900000000227, 0.00013213899999999987, 0.000131570000000001, 0.00013182000000000124, 0.00013141699999999826, 0.00013187500000000005, 0.00013149999999999967, 0.00013242999999999935, 0.0001318059999999982, 0.00013156900000000152, 0.00013206900000000202, 0.00013206899999999855, 0.00013204199999999888, 0.00013237500000000055, 0.00013173600000000035, 0.00013151399999999924, 0.00013218000000000257, 0.00013188800000000014, 0.0001318189999999983, 0.0001322229999999973, 0.00013180600000000167, 0.00013244500000000187, 0.00013138799999999964, 0.00013152800000000228, 0.00013238900000000012, 0.00013173600000000035, 0.00013156900000000152, 0.0001322090000000012, 0.00013187500000000005, 0.00013169500000000112, 0.00013186100000000048, 0.00013244399999999892, 0.00013184700000000438, 0.0001316809999999946, 0.00013168000000000207, 0.00013149999999999967, 0.00013225000000000042]</msg>
<status status="PASS" starttime="20201115 23:02:11.513" endtime="20201115 23:02:11.515"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.508" endtime="20201115 23:02:11.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.518" endtime="20201115 23:02:11.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.521" endtime="20201115 23:02:11.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.520" endtime="20201115 23:02:11.541"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.516" endtime="20201115 23:02:11.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.148" endtime="20201115 23:02:11.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.146" endtime="20201115 23:02:11.542"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.146" endtime="20201115 23:02:11.543"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.545" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 42">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.553" endtime="20201115 23:02:11.573"></status>
</kw>
<msg timestamp="20201115 23:02:11.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.552" endtime="20201115 23:02:11.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.574" endtime="20201115 23:02:11.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.577" endtime="20201115 23:02:11.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.549" endtime="20201115 23:02:11.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.547" endtime="20201115 23:02:11.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.586" endtime="20201115 23:02:11.873"></status>
</kw>
<msg timestamp="20201115 23:02:11.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023982611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.584" endtime="20201115 23:02:11.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023982611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.877" endtime="20201115 23:02:11.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.885" endtime="20201115 23:02:11.887"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.582" endtime="20201115 23:02:11.888"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.580" endtime="20201115 23:02:11.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:11.893" level="INFO">${RESULT} = [{'time': 0.024115528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013291699999999976, 'source_diff': 0.00013291699999999976}, {'time': 0.024266917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:11.889" endtime="20201115 23:02:11.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:11.906" level="INFO">${ACCURACY} = {'diff': [0.00013291699999999976, 0.00013312499999999783, 0.00013334699999999894, 0.00013266600000000003, 0.0001325409999999999, 0.00013323599999999838, 0.000133167, 0.00013241700000000273, 0.00013248...</msg>
<status status="PASS" starttime="20201115 23:02:11.894" endtime="20201115 23:02:11.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.911" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201115 23:02:11.910" endtime="20201115 23:02:11.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.914" level="INFO">VALUE: [0.00013291699999999976, 0.00013312499999999783, 0.00013334699999999894, 0.00013266600000000003, 0.0001325409999999999, 0.00013323599999999838, 0.000133167, 0.00013241700000000273, 0.0001324860000000011, 0.00013262499999999733, 0.00013297200000000203, 0.0001329730000000015, 0.0001331380000000014, 0.00013320799999999924, 0.00013329200000000013, 0.0001329030000000002, 0.00013334800000000188, 0.00013269499999999865, 0.00013277800000000006, 0.00013277800000000006, 0.00013275000000000092, 0.00013301400000000074, 0.0001328189999999993, 0.00013251400000000024, 0.00013325000000000142, 0.0001327080000000022, 0.0001329030000000002, 0.0001324869999999971, 0.00013323599999999838, 0.00013256900000000252, 0.000132957999999999, 0.0001329440000000029, 0.00013336199999999798, 0.00013251400000000024, 0.0001326250000000008, 0.00013288800000000114, 0.00013256899999999905, 0.00013297199999999856, 0.00013334800000000188, 0.00013265299999999994, 0.00013327800000000056, 0.00013331999999999927, 0.0001326669999999995, 0.00013277800000000006, 0.00013288900000000062, 0.0001331800000000001, 0.00013269400000000264, 0.000133167, 0.00013325000000000142, 0.0001332080000000027]</msg>
<status status="PASS" starttime="20201115 23:02:11.912" endtime="20201115 23:02:11.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.907" endtime="20201115 23:02:11.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.917" endtime="20201115 23:02:11.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:11.921" endtime="20201115 23:02:11.940"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.919" endtime="20201115 23:02:11.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.915" endtime="20201115 23:02:11.941"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.546" endtime="20201115 23:02:11.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.544" endtime="20201115 23:02:11.942"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.543" endtime="20201115 23:02:11.942"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.945" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 43">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.953" endtime="20201115 23:02:11.973"></status>
</kw>
<msg timestamp="20201115 23:02:11.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.951" endtime="20201115 23:02:11.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:11.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:11.974" endtime="20201115 23:02:11.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.977" endtime="20201115 23:02:11.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.949" endtime="20201115 23:02:11.979"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.947" endtime="20201115 23:02:11.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:11.986" endtime="20201115 23:02:12.273"></status>
</kw>
<msg timestamp="20201115 23:02:12.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024425903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:11.984" endtime="20201115 23:02:12.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024425903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.277" endtime="20201115 23:02:12.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.285" endtime="20201115 23:02:12.287"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.982" endtime="20201115 23:02:12.288"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.980" endtime="20201115 23:02:12.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.292" level="INFO">${RESULT} = [{'time': 0.024425903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001340969999999997, 'source_diff': 0.0001340969999999997}, {'time': 0.024573444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:12.289" endtime="20201115 23:02:12.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.307" level="INFO">${ACCURACY} = {'diff': [0.0001340969999999997, 0.00013430500000000123, 0.00013432000000000027, 0.0001336800000000006, 0.0001341389999999984, 0.00013404200000000088, 0.0001339449999999999, 0.00013388900000000162, 0....</msg>
<status status="PASS" starttime="20201115 23:02:12.293" endtime="20201115 23:02:12.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.312" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.311" endtime="20201115 23:02:12.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.314" level="INFO">VALUE: [0.0001340969999999997, 0.00013430500000000123, 0.00013432000000000027, 0.0001336800000000006, 0.0001341389999999984, 0.00013404200000000088, 0.0001339449999999999, 0.00013388900000000162, 0.00013358299999999962, 0.00013429100000000166, 0.00013401400000000174, 0.00013424999999999895, 0.00013402799999999784, 0.0001341519999999985, 0.00013338899999999765, 0.00013405500000000098, 0.00013377800000000106, 0.000134264000000002, 0.0001337640000000015, 0.00013397199999999956, 0.00013374999999999845, 0.00013393000000000085, 0.0001339999999999987, 0.00013418100000000058, 0.0001340839999999996, 0.0001340419999999974, 0.00013334699999999894, 0.0001338479999999989, 0.00013406900000000055, 0.00013351399999999777, 0.00013412499999999883, 0.00013405500000000098, 0.00013406900000000055, 0.0001343329999999969, 0.0001333609999999985, 0.00013405600000000045, 0.00013388900000000162, 0.00013391599999999781, 0.00013394399999999695, 0.00013337500000000155, 0.0001339169999999973, 0.00013394400000000042, 0.00013433399999999984, 0.0001343060000000007, 0.00013419400000000067, 0.00013424999999999548, 0.0001339440000000039, 0.0001338890000000051, 0.00013350000000000167, 0.00013438799999999917]</msg>
<status status="PASS" starttime="20201115 23:02:12.313" endtime="20201115 23:02:12.314"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.308" endtime="20201115 23:02:12.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.317" endtime="20201115 23:02:12.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.321" endtime="20201115 23:02:12.340"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.319" endtime="20201115 23:02:12.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.315" endtime="20201115 23:02:12.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.945" endtime="20201115 23:02:12.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.943" endtime="20201115 23:02:12.342"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:11.943" endtime="20201115 23:02:12.342"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.344" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 44">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.352" endtime="20201115 23:02:12.372"></status>
</kw>
<msg timestamp="20201115 23:02:12.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.351" endtime="20201115 23:02:12.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.374" endtime="20201115 23:02:12.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.376" endtime="20201115 23:02:12.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.348" endtime="20201115 23:02:12.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.346" endtime="20201115 23:02:12.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.385" endtime="20201115 23:02:12.671"></status>
</kw>
<msg timestamp="20201115 23:02:12.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.384" endtime="20201115 23:02:12.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024092542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024227417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.675" endtime="20201115 23:02:12.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.683" endtime="20201115 23:02:12.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.381" endtime="20201115 23:02:12.685"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.380" endtime="20201115 23:02:12.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:12.690" level="INFO">${RESULT} = [{'time': 0.024227417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013487499999999958, 'source_diff': 0.00013487499999999958}, {'time': 0.024382, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:12.687" endtime="20201115 23:02:12.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:12.703" level="INFO">${ACCURACY} = {'diff': [0.00013487499999999958, 0.00013538899999999965, 0.00013482000000000077, 0.0001347770000000026, 0.00013513799999999992, 0.00013474999999999945, 0.00013544400000000192, 0.000134861, 0.00013494...</msg>
<status status="PASS" starttime="20201115 23:02:12.691" endtime="20201115 23:02:12.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.708" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201115 23:02:12.707" endtime="20201115 23:02:12.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.710" level="INFO">VALUE: [0.00013487499999999958, 0.00013538899999999965, 0.00013482000000000077, 0.0001347770000000026, 0.00013513799999999992, 0.00013474999999999945, 0.00013544400000000192, 0.000134861, 0.00013494399999999795, 0.00013476399999999902, 0.00013513900000000287, 0.000134554999999998, 0.0001346809999999976, 0.0001344999999999992, 0.00013524999999999995, 0.0001353199999999978, 0.00013501400000000274, 0.00013448599999999963, 0.00013524999999999995, 0.00013461100000000323, 0.00013530599999999823, 0.00013473599999999988, 0.00013451400000000224, 0.0001344030000000017, 0.00013443100000000083, 0.00013441700000000126, 0.0001345970000000002, 0.00013493000000000185, 0.00013505599999999798, 0.0001350840000000006, 0.0001351120000000032, 0.0001349999999999997, 0.00013524999999999995, 0.00013476399999999902, 0.0001351120000000032, 0.00013523699999999986, 0.00013457000000000052, 0.00013457000000000052, 0.00013455600000000095, 0.00013534700000000094, 0.00013482000000000077, 0.00013506900000000155, 0.00013487499999999958, 0.0001346389999999989, 0.0001349999999999997, 0.00013543099999999836, 0.00013482000000000077, 0.00013495799999999752, 0.00013500000000000317, 0.00013511199999999973]</msg>
<status status="PASS" starttime="20201115 23:02:12.709" endtime="20201115 23:02:12.710"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.704" endtime="20201115 23:02:12.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.713" endtime="20201115 23:02:12.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:12.717" endtime="20201115 23:02:12.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.715" endtime="20201115 23:02:12.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.712" endtime="20201115 23:02:12.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.345" endtime="20201115 23:02:12.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.343" endtime="20201115 23:02:12.738"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.342" endtime="20201115 23:02:12.738"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.740" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 45">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.749" endtime="20201115 23:02:12.768"></status>
</kw>
<msg timestamp="20201115 23:02:12.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.747" endtime="20201115 23:02:12.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:12.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:12.770" endtime="20201115 23:02:12.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.772" endtime="20201115 23:02:12.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.744" endtime="20201115 23:02:12.774"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.742" endtime="20201115 23:02:12.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:12.782" endtime="20201115 23:02:13.069"></status>
</kw>
<msg timestamp="20201115 23:02:13.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:12.780" endtime="20201115 23:02:13.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024159319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.074" endtime="20201115 23:02:13.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.082" endtime="20201115 23:02:13.083"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.777" endtime="20201115 23:02:13.084"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.775" endtime="20201115 23:02:13.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.088" level="INFO">${RESULT} = [{'time': 0.024295444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013612500000000083, 'source_diff': 0.00013612500000000083}, {'time': 0.024459861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.085" endtime="20201115 23:02:13.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.101" level="INFO">${ACCURACY} = {'diff': [0.00013612500000000083, 0.00013558299999999815, 0.00013598600000000113, 0.00013637500000000108, 0.00013580499999999926, 0.00013551399999999977, 0.00013612499999999736, 0.000135554999999999, ...</msg>
<status status="PASS" starttime="20201115 23:02:13.089" endtime="20201115 23:02:13.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.106" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.105" endtime="20201115 23:02:13.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.108" level="INFO">VALUE: [0.00013612500000000083, 0.00013558299999999815, 0.00013598600000000113, 0.00013637500000000108, 0.00013580499999999926, 0.00013551399999999977, 0.00013612499999999736, 0.000135554999999999, 0.00013551399999999977, 0.00013607000000000202, 0.00013573600000000088, 0.00013633300000000237, 0.00013588899999999668, 0.00013630599999999923, 0.00013545799999999802, 0.00013562500000000033, 0.00013612500000000083, 0.00013616600000000006, 0.00013625000000000095, 0.0001363199999999988, 0.0001355000000000002, 0.00013569400000000217, 0.00013575000000000045, 0.00013622199999999834, 0.00013584700000000144, 0.00013608300000000212, 0.0001361939999999992, 0.00013582000000000177, 0.00013611100000000126, 0.00013554099999999944, 0.00013625000000000095, 0.00013623600000000138, 0.0001360419999999994, 0.00013568100000000208, 0.00013541599999999931, 0.0001360970000000017, 0.00013566699999999904, 0.00013573600000000088, 0.0001353610000000005, 0.00013572200000000131, 0.00013566699999999904, 0.00013587500000000058, 0.0001362780000000001, 0.00013626400000000052, 0.00013638900000000065, 0.00013613899999999346, 0.00013586200000000048, 0.00013555500000000248, 0.00013554199999999544, 0.00013549999999999673]</msg>
<status status="PASS" starttime="20201115 23:02:13.107" endtime="20201115 23:02:13.109"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.102" endtime="20201115 23:02:13.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.112" endtime="20201115 23:02:13.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.115" endtime="20201115 23:02:13.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.113" endtime="20201115 23:02:13.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.110" endtime="20201115 23:02:13.135"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.741" endtime="20201115 23:02:13.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.739" endtime="20201115 23:02:13.136"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:12.738" endtime="20201115 23:02:13.136"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.139" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 46">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.148" endtime="20201115 23:02:13.169"></status>
</kw>
<msg timestamp="20201115 23:02:13.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.146" endtime="20201115 23:02:13.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.170" endtime="20201115 23:02:13.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.173" endtime="20201115 23:02:13.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.143" endtime="20201115 23:02:13.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.141" endtime="20201115 23:02:13.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.182" endtime="20201115 23:02:13.470"></status>
</kw>
<msg timestamp="20201115 23:02:13.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025981111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026118472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.181" endtime="20201115 23:02:13.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025981111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026118472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.474" endtime="20201115 23:02:13.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.482" endtime="20201115 23:02:13.483"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.178" endtime="20201115 23:02:13.484"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.176" endtime="20201115 23:02:13.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.488" level="INFO">${RESULT} = [{'time': 0.026118472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013736099999999904, 'source_diff': 0.00013736099999999904}, {'time': 0.026280931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:13.485" endtime="20201115 23:02:13.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.501" level="INFO">${ACCURACY} = {'diff': [0.00013736099999999904, 0.00013640300000000022, 0.0001370000000000017, 0.00013659699999999872, 0.00013724999999999848, 0.00013683399999999887, 0.00013666600000000056, 0.00013725000000000195,...</msg>
<status status="PASS" starttime="20201115 23:02:13.489" endtime="20201115 23:02:13.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.506" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.505" endtime="20201115 23:02:13.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.508" level="INFO">VALUE: [0.00013736099999999904, 0.00013640300000000022, 0.0001370000000000017, 0.00013659699999999872, 0.00013724999999999848, 0.00013683399999999887, 0.00013666600000000056, 0.00013725000000000195, 0.0001371390000000014, 0.0001372910000000012, 0.00013666700000000004, 0.00013691600000000081, 0.0001370000000000017, 0.00013644400000000292, 0.00013716600000000106, 0.00013709699999999922, 0.0001370970000000027, 0.00013673599999999841, 0.00013708299999999965, 0.0001373199999999998, 0.00013724999999999848, 0.0001364719999999986, 0.00013666700000000004, 0.00013662500000000133, 0.00013680599999999973, 0.00013705599999999998, 0.00013681899999999983, 0.00013643100000000283, 0.00013706900000000008, 0.00013684700000000244, 0.00013649999999999773, 0.00013687500000000158, 0.00013687500000000158, 0.0001365970000000022, 0.0001369719999999991, 0.0001367640000000045, 0.0001366809999999996, 0.0001364589999999985, 0.00013705599999999651, 0.0001373049999999973, 0.0001366939999999997, 0.00013681999999999583, 0.0001371810000000001, 0.00013648599999999816, 0.00013733300000000337, 0.00013719499999999968, 0.00013654200000000338, 0.00013744499999999993, 0.00013712500000000183, 0.0001366939999999997]</msg>
<status status="PASS" starttime="20201115 23:02:13.507" endtime="20201115 23:02:13.509"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.502" endtime="20201115 23:02:13.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.512" endtime="20201115 23:02:13.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.515" endtime="20201115 23:02:13.534"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.513" endtime="20201115 23:02:13.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.510" endtime="20201115 23:02:13.535"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.139" endtime="20201115 23:02:13.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.137" endtime="20201115 23:02:13.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.136" endtime="20201115 23:02:13.536"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.539" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 47">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.547" endtime="20201115 23:02:13.567"></status>
</kw>
<msg timestamp="20201115 23:02:13.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.546" endtime="20201115 23:02:13.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.569" endtime="20201115 23:02:13.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.571" endtime="20201115 23:02:13.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.543" endtime="20201115 23:02:13.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.541" endtime="20201115 23:02:13.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.580" endtime="20201115 23:02:13.868"></status>
</kw>
<msg timestamp="20201115 23:02:13.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024771347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024908972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.579" endtime="20201115 23:02:13.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024771347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024908972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.872" endtime="20201115 23:02:13.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.880" endtime="20201115 23:02:13.881"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.576" endtime="20201115 23:02:13.882"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.575" endtime="20201115 23:02:13.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:13.886" level="INFO">${RESULT} = [{'time': 0.024908972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013762500000000233, 'source_diff': 0.00013762500000000233}, {'time': 0.0250795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:13.883" endtime="20201115 23:02:13.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:13.901" level="INFO">${ACCURACY} = {'diff': [0.00013762500000000233, 0.00013826400000000252, 0.00013831900000000133, 0.00013799999999999923, 0.00013824999999999948, 0.00013773599999999941, 0.00013788899999999868, 0.00013754099999999797...</msg>
<status status="PASS" starttime="20201115 23:02:13.887" endtime="20201115 23:02:13.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.905" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201115 23:02:13.904" endtime="20201115 23:02:13.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.908" level="INFO">VALUE: [0.00013762500000000233, 0.00013826400000000252, 0.00013831900000000133, 0.00013799999999999923, 0.00013824999999999948, 0.00013773599999999941, 0.00013788899999999868, 0.00013754099999999797, 0.0001381109999999998, 0.00013794500000000043, 0.00013777799999999812, 0.00013767999999999767, 0.00013744499999999993, 0.00013780600000000073, 0.00013807000000000055, 0.00013748599999999916, 0.0001378749999999991, 0.00013812499999999936, 0.00013795800000000052, 0.0001376810000000006, 0.0001381659999999986, 0.00013816700000000154, 0.00013737500000000208, 0.00013823599999999991, 0.0001375000000000022, 0.00013748600000000263, 0.00013805600000000098, 0.0001382919999999982, 0.0001383749999999996, 0.00013784699999999997, 0.00013766700000000104, 0.0001377780000000016, 0.00013818000000000163, 0.00013773599999999941, 0.00013766600000000156, 0.00013769500000000018, 0.00013818099999999764, 0.00013777699999999865, 0.00013808400000000012, 0.00013759699999999972, 0.00013763899999999843, 0.00013766600000000156, 0.00013811100000000326, 0.00013743000000000088, 0.0001380280000000053, 0.00013824999999999948, 0.00013841599999999538, 0.0001374170000000008, 0.000138346999999997, 0.000137861000000003]</msg>
<status status="PASS" starttime="20201115 23:02:13.907" endtime="20201115 23:02:13.908"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.902" endtime="20201115 23:02:13.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.911" endtime="20201115 23:02:13.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:13.915" endtime="20201115 23:02:13.934"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.913" endtime="20201115 23:02:13.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.909" endtime="20201115 23:02:13.935"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.539" endtime="20201115 23:02:13.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.537" endtime="20201115 23:02:13.936"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.537" endtime="20201115 23:02:13.936"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.939" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 48">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.947" endtime="20201115 23:02:13.967"></status>
</kw>
<msg timestamp="20201115 23:02:13.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.945" endtime="20201115 23:02:13.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:13.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:13.969" endtime="20201115 23:02:13.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.971" endtime="20201115 23:02:13.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.943" endtime="20201115 23:02:13.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.941" endtime="20201115 23:02:13.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:13.980" endtime="20201115 23:02:14.266"></status>
</kw>
<msg timestamp="20201115 23:02:14.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024529944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:13.979" endtime="20201115 23:02:14.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024391056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024529944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.270" endtime="20201115 23:02:14.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.278" endtime="20201115 23:02:14.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.976" endtime="20201115 23:02:14.280"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.974" endtime="20201115 23:02:14.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.285" level="INFO">${RESULT} = [{'time': 0.024529944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001388880000000002, 'source_diff': 0.0001388880000000002}, {'time': 0.024700375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:14.281" endtime="20201115 23:02:14.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.298" level="INFO">${ACCURACY} = {'diff': [0.0001388880000000002, 0.00013845800000000102, 0.00013908300000000165, 0.00013849999999999973, 0.00013890199999999978, 0.00013898600000000066, 0.00013857000000000105, 0.00013845800000000102,...</msg>
<status status="PASS" starttime="20201115 23:02:14.286" endtime="20201115 23:02:14.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.302" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.301" endtime="20201115 23:02:14.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.305" level="INFO">VALUE: [0.0001388880000000002, 0.00013845800000000102, 0.00013908300000000165, 0.00013849999999999973, 0.00013890199999999978, 0.00013898600000000066, 0.00013857000000000105, 0.00013845800000000102, 0.00013915200000000003, 0.00013925000000000048, 0.00013917999999999917, 0.00013876399999999955, 0.00013857000000000105, 0.00013852799999999887, 0.00013867999999999867, 0.00013861099999999682, 0.0001390980000000007, 0.00013879200000000216, 0.00013926400000000005, 0.00013924999999999702, 0.00013894399999999849, 0.00013884700000000097, 0.00013862499999999986, 0.0001390689999999986, 0.0001386110000000003, 0.00013925000000000048, 0.0001391249999999969, 0.00013918000000000263, 0.00013879099999999922, 0.0001387919999999987, 0.0001391249999999969, 0.00013874999999999998, 0.00013886100000000054, 0.00013880599999999826, 0.0001385139999999993, 0.0001386949999999977, 0.0001389170000000023, 0.00013840299999999875, 0.00013873600000000041, 0.00013931899999999886, 0.0001384170000000018, 0.00013863899999999943, 0.0001388339999999974, 0.00013898600000000066, 0.00013874999999999998, 0.00013868000000000213, 0.00013848600000000016, 0.0001388480000000039, 0.00013931999999999833, 0.00013854099999999897]</msg>
<status status="PASS" starttime="20201115 23:02:14.304" endtime="20201115 23:02:14.311"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.299" endtime="20201115 23:02:14.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.314" endtime="20201115 23:02:14.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.318" endtime="20201115 23:02:14.337"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.316" endtime="20201115 23:02:14.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.313" endtime="20201115 23:02:14.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.939" endtime="20201115 23:02:14.338"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.937" endtime="20201115 23:02:14.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:13.937" endtime="20201115 23:02:14.339"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.341" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 49">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.350" endtime="20201115 23:02:14.369"></status>
</kw>
<msg timestamp="20201115 23:02:14.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.348" endtime="20201115 23:02:14.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.371" endtime="20201115 23:02:14.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.373" endtime="20201115 23:02:14.375"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.345" endtime="20201115 23:02:14.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.343" endtime="20201115 23:02:14.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.383" endtime="20201115 23:02:14.669"></status>
</kw>
<msg timestamp="20201115 23:02:14.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.381" endtime="20201115 23:02:14.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024114847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.673" endtime="20201115 23:02:14.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.681" endtime="20201115 23:02:14.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.378" endtime="20201115 23:02:14.683"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.377" endtime="20201115 23:02:14.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:14.688" level="INFO">${RESULT} = [{'time': 0.024254639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013979200000000316, 'source_diff': 0.00013979200000000316}, {'time': 0.024421139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:14.684" endtime="20201115 23:02:14.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:14.701" level="INFO">${ACCURACY} = {'diff': [0.00013979200000000316, 0.00014013900000000093, 0.00013992999999999992, 0.00013941599999999985, 0.00013966699999999957, 0.00014023600000000191, 0.00013956999999999858, 0.00013966699999999957...</msg>
<status status="PASS" starttime="20201115 23:02:14.689" endtime="20201115 23:02:14.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.705" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201115 23:02:14.704" endtime="20201115 23:02:14.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.708" level="INFO">VALUE: [0.00013979200000000316, 0.00014013900000000093, 0.00013992999999999992, 0.00013941599999999985, 0.00013966699999999957, 0.00014023600000000191, 0.00013956999999999858, 0.00013966699999999957, 0.00013951300000000083, 0.00013958299999999868, 0.00013976400000000055, 0.0001395140000000003, 0.00013995799999999906, 0.00013965200000000053, 0.00014002800000000037, 0.00013954199999999944, 0.00014011200000000126, 0.00013936100000000104, 0.0001398049999999998, 0.000139653, 0.00013986100000000154, 0.00013986100000000154, 0.00013997199999999863, 0.00013973599999999795, 0.0001395689999999991, 0.000140346999999999, 0.00014023600000000191, 0.00013981999999999883, 0.00013959700000000172, 0.00014005500000000004, 0.00013969399999999924, 0.0001399859999999982, 0.00014009700000000222, 0.00014013900000000093, 0.00013991699999999982, 0.00013936099999999757, 0.0001401249999999979, 0.0001395270000000004, 0.00013977700000000065, 0.00014004199999999994, 0.00014009699999999875, 0.00014000000000000123, 0.00013934700000000147, 0.00014011099999999832, 0.000140346999999999, 0.00013980599999999926, 0.00013986099999999807, 0.0001398469999999985, 0.0001398889999999972, 0.00013952799999999987]</msg>
<status status="PASS" starttime="20201115 23:02:14.706" endtime="20201115 23:02:14.709"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.702" endtime="20201115 23:02:14.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.711" endtime="20201115 23:02:14.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:14.715" endtime="20201115 23:02:14.734"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.713" endtime="20201115 23:02:14.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.710" endtime="20201115 23:02:14.735"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.342" endtime="20201115 23:02:14.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.340" endtime="20201115 23:02:14.736"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.339" endtime="20201115 23:02:14.736"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.738" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 50">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.747" endtime="20201115 23:02:14.767"></status>
</kw>
<msg timestamp="20201115 23:02:14.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.745" endtime="20201115 23:02:14.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:14.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:14.768" endtime="20201115 23:02:14.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.771" endtime="20201115 23:02:14.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.743" endtime="20201115 23:02:14.773"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.740" endtime="20201115 23:02:14.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:14.780" endtime="20201115 23:02:15.067"></status>
</kw>
<msg timestamp="20201115 23:02:15.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024144472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024284917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:14.778" endtime="20201115 23:02:15.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024144472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024284917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.071" endtime="20201115 23:02:15.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.079" endtime="20201115 23:02:15.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.776" endtime="20201115 23:02:15.081"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.774" endtime="20201115 23:02:15.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.086" level="INFO">${RESULT} = [{'time': 0.024284917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014044499999999946, 'source_diff': 0.00014044499999999946}, {'time': 0.024454375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.083" endtime="20201115 23:02:15.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.100" level="INFO">${ACCURACY} = {'diff': [0.00014044499999999946, 0.00014127800000000162, 0.00014063899999999796, 0.00014104200000000094, 0.0001412920000000012, 0.00014076400000000155, 0.00014061099999999882, 0.00014059799999999872,...</msg>
<status status="PASS" starttime="20201115 23:02:15.087" endtime="20201115 23:02:15.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.104" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.103" endtime="20201115 23:02:15.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.106" level="INFO">VALUE: [0.00014044499999999946, 0.00014127800000000162, 0.00014063899999999796, 0.00014104200000000094, 0.0001412920000000012, 0.00014076400000000155, 0.00014061099999999882, 0.00014059799999999872, 0.00014059699999999925, 0.0001410279999999979, 0.00014095899999999953, 0.00014115199999999856, 0.00014109699999999975, 0.00014091700000000082, 0.0001407370000000019, 0.00014059699999999925, 0.00014043000000000042, 0.00014132000000000033, 0.00014079099999999775, 0.0001408889999999982, 0.00014044399999999999, 0.00014065199999999806, 0.00014101399999999834, 0.0001407920000000007, 0.00014072199999999938, 0.00014076400000000155, 0.0001407079999999998, 0.00014095800000000006, 0.00014052800000000087, 0.00014058299999999968, 0.0001412080000000003, 0.00014129100000000172, 0.0001411249999999989, 0.00014094400000000049, 0.00014097199999999963, 0.00014058299999999968, 0.0001405140000000013, 0.00014102800000000137, 0.00014047199999999913, 0.00014047199999999913, 0.00014068100000000014, 0.00014130499999999782, 0.00014073600000000241, 0.00014130600000000076, 0.0001412920000000012, 0.00014130600000000076, 0.00014040299999999728, 0.00014059699999999925, 0.00014109699999999975, 0.00014048600000000216]</msg>
<status status="PASS" starttime="20201115 23:02:15.105" endtime="20201115 23:02:15.107"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.101" endtime="20201115 23:02:15.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.110" endtime="20201115 23:02:15.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.113" endtime="20201115 23:02:15.132"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.112" endtime="20201115 23:02:15.133"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.108" endtime="20201115 23:02:15.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.739" endtime="20201115 23:02:15.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.737" endtime="20201115 23:02:15.134"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:14.736" endtime="20201115 23:02:15.134"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.137" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 51">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.145" endtime="20201115 23:02:15.165"></status>
</kw>
<msg timestamp="20201115 23:02:15.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.143" endtime="20201115 23:02:15.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.167" endtime="20201115 23:02:15.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.169" endtime="20201115 23:02:15.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.141" endtime="20201115 23:02:15.171"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.139" endtime="20201115 23:02:15.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.178" endtime="20201115 23:02:15.465"></status>
</kw>
<msg timestamp="20201115 23:02:15.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024144056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.177" endtime="20201115 23:02:15.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024144056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024285944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.469" endtime="20201115 23:02:15.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.477" endtime="20201115 23:02:15.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.174" endtime="20201115 23:02:15.479"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.172" endtime="20201115 23:02:15.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.484" level="INFO">${RESULT} = [{'time': 0.024285944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014188799999999974, 'source_diff': 0.00014188799999999974}, {'time': 0.024449403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.481" endtime="20201115 23:02:15.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.499" level="INFO">${ACCURACY} = {'diff': [0.00014188799999999974, 0.00014177800000000212, 0.00014190299999999878, 0.00014140299999999828, 0.0001418889999999992, 0.00014143000000000142, 0.00014176400000000255, 0.00014226400000000305,...</msg>
<status status="PASS" starttime="20201115 23:02:15.485" endtime="20201115 23:02:15.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.503" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.502" endtime="20201115 23:02:15.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.505" level="INFO">VALUE: [0.00014188799999999974, 0.00014177800000000212, 0.00014190299999999878, 0.00014140299999999828, 0.0001418889999999992, 0.00014143000000000142, 0.00014176400000000255, 0.00014226400000000305, 0.000142347999999997, 0.00014136099999999957, 0.000142347000000001, 0.00014209700000000075, 0.00014173599999999995, 0.0001415279999999984, 0.00014181900000000136, 0.00014154100000000197, 0.0001422080000000013, 0.00014207000000000108, 0.00014194399999999802, 0.000141347, 0.00014225000000000002, 0.00014211100000000032, 0.00014177799999999866, 0.00014187499999999964, 0.00014152699999999893, 0.00014170900000000028, 0.00014197200000000063, 0.00014199999999999977, 0.00014226399999999959, 0.0001418889999999992, 0.00014141600000000185, 0.00014190299999999878, 0.00014177799999999866, 0.00014197200000000063, 0.00014191599999999888, 0.00014165299999999853, 0.00014168099999999767, 0.00014209700000000075, 0.0001418470000000005, 0.00014130600000000076, 0.00014152800000000187, 0.00014179100000000222, 0.00014131900000000086, 0.0001420690000000016, 0.00014233300000000143, 0.00014158300000000068, 0.00014201399999999587, 0.00014154100000000197, 0.00014215299999999903, 0.0001419999999999963]</msg>
<status status="PASS" starttime="20201115 23:02:15.504" endtime="20201115 23:02:15.506"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.499" endtime="20201115 23:02:15.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.509" endtime="20201115 23:02:15.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.512" endtime="20201115 23:02:15.531"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.510" endtime="20201115 23:02:15.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.507" endtime="20201115 23:02:15.532"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.137" endtime="20201115 23:02:15.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.135" endtime="20201115 23:02:15.533"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.135" endtime="20201115 23:02:15.533"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.536" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 52">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.544" endtime="20201115 23:02:15.564"></status>
</kw>
<msg timestamp="20201115 23:02:15.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.542" endtime="20201115 23:02:15.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.566" endtime="20201115 23:02:15.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.568" endtime="20201115 23:02:15.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.540" endtime="20201115 23:02:15.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.538" endtime="20201115 23:02:15.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.578" endtime="20201115 23:02:15.863"></status>
</kw>
<msg timestamp="20201115 23:02:15.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.576" endtime="20201115 23:02:15.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024101139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024243931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.867" endtime="20201115 23:02:15.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.875" endtime="20201115 23:02:15.877"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.573" endtime="20201115 23:02:15.878"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.571" endtime="20201115 23:02:15.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:15.882" level="INFO">${RESULT} = [{'time': 0.024243931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014279199999999923, 'source_diff': 0.00014279199999999923}, {'time': 0.024412278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:15.879" endtime="20201115 23:02:15.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:15.895" level="INFO">${ACCURACY} = {'diff': [0.00014279199999999923, 0.00014323599999999798, 0.00014280600000000226, 0.00014323600000000145, 0.0001431250000000009, 0.00014319499999999874, 0.00014313900000000046, 0.00014329199999999973,...</msg>
<status status="PASS" starttime="20201115 23:02:15.883" endtime="20201115 23:02:15.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.900" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201115 23:02:15.899" endtime="20201115 23:02:15.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.902" level="INFO">VALUE: [0.00014279199999999923, 0.00014323599999999798, 0.00014280600000000226, 0.00014323600000000145, 0.0001431250000000009, 0.00014319499999999874, 0.00014313900000000046, 0.00014329199999999973, 0.00014305499999999957, 0.00014236100000000057, 0.00014273600000000095, 0.0001425829999999982, 0.0001431250000000009, 0.00014286100000000107, 0.00014277799999999966, 0.00014279099999999975, 0.0001427219999999979, 0.00014323600000000145, 0.00014251399999999984, 0.00014305599999999905, 0.0001428059999999988, 0.00014300000000000077, 0.00014276400000000009, 0.00014233399999999743, 0.00014295900000000153, 0.00014311099999999785, 0.00014277799999999966, 0.00014311100000000132, 0.00014286100000000107, 0.00014290299999999978, 0.0001426669999999991, 0.00014323600000000145, 0.00014316600000000013, 0.00014290299999999978, 0.00014269400000000224, 0.00014286100000000107, 0.00014254199999999898, 0.00014297200000000163, 0.00014251399999999984, 0.0001433059999999993, 0.00014291599999999988, 0.0001426669999999991, 0.00014329100000000025, 0.00014273600000000095, 0.000143041999999996, 0.0001424590000000045, 0.0001425969999999943, 0.00014295800000000553, 0.00014266700000000604, 0.0001430969999999948]</msg>
<status status="PASS" starttime="20201115 23:02:15.901" endtime="20201115 23:02:15.903"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.896" endtime="20201115 23:02:15.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.905" endtime="20201115 23:02:15.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:15.909" endtime="20201115 23:02:15.928"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.907" endtime="20201115 23:02:15.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.904" endtime="20201115 23:02:15.929"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.536" endtime="20201115 23:02:15.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.534" endtime="20201115 23:02:15.930"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.534" endtime="20201115 23:02:15.930"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.932" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 53">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.941" endtime="20201115 23:02:15.961"></status>
</kw>
<msg timestamp="20201115 23:02:15.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.939" endtime="20201115 23:02:15.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:15.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:15.963" endtime="20201115 23:02:15.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.966" endtime="20201115 23:02:15.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.936" endtime="20201115 23:02:15.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.934" endtime="20201115 23:02:15.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:15.975" endtime="20201115 23:02:16.262"></status>
</kw>
<msg timestamp="20201115 23:02:16.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024173125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:15.973" endtime="20201115 23:02:16.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024173125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.266" endtime="20201115 23:02:16.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.274" endtime="20201115 23:02:16.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.971" endtime="20201115 23:02:16.276"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.969" endtime="20201115 23:02:16.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.281" level="INFO">${RESULT} = [{'time': 0.024173125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014350000000000127, 'source_diff': 0.00014350000000000127}, {'time': 0.024336583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.278" endtime="20201115 23:02:16.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.298" level="INFO">${ACCURACY} = {'diff': [0.00014350000000000127, 0.00014426399999999812, 0.00014376400000000109, 0.00014384699999999903, 0.00014351400000000084, 0.00014426400000000159, 0.00014416600000000113, 0.00014340300000000028...</msg>
<status status="PASS" starttime="20201115 23:02:16.282" endtime="20201115 23:02:16.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.302" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.301" endtime="20201115 23:02:16.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.305" level="INFO">VALUE: [0.00014350000000000127, 0.00014426399999999812, 0.00014376400000000109, 0.00014384699999999903, 0.00014351400000000084, 0.00014426400000000159, 0.00014416600000000113, 0.00014340300000000028, 0.00014344399999999952, 0.0001440280000000009, 0.00014420900000000278, 0.00014345799999999909, 0.00014344500000000246, 0.00014345899999999856, 0.00014416600000000113, 0.00014369399999999977, 0.00014350000000000127, 0.00014400000000000177, 0.00014334800000000147, 0.00014397200000000263, 0.0001441670000000006, 0.00014352700000000093, 0.0001438470000000025, 0.0001434860000000017, 0.0001434860000000017, 0.00014391700000000035, 0.0001437080000000028, 0.00014409699999999928, 0.0001438479999999985, 0.00014404200000000048, 0.00014354199999999998, 0.00014423599999999898, 0.0001442219999999994, 0.00014420799999999984, 0.00014398599999999873, 0.00014427799999999769, 0.00014393099999999992, 0.0001435829999999992, 0.00014379200000000023, 0.00014429200000000073, 0.00014340300000000028, 0.0001443060000000003, 0.00014413900000000146, 0.00014373599999999848, 0.00014398599999999873, 0.00014390300000000078, 0.00014408399999999572, 0.00014370799999999934, 0.00014406899999999667, 0.00014358299999999574]</msg>
<status status="PASS" starttime="20201115 23:02:16.303" endtime="20201115 23:02:16.305"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.299" endtime="20201115 23:02:16.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.308" endtime="20201115 23:02:16.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.311" endtime="20201115 23:02:16.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.310" endtime="20201115 23:02:16.331"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.306" endtime="20201115 23:02:16.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.933" endtime="20201115 23:02:16.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.931" endtime="20201115 23:02:16.332"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:15.930" endtime="20201115 23:02:16.333"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.335" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 54">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.344" endtime="20201115 23:02:16.364"></status>
</kw>
<msg timestamp="20201115 23:02:16.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.342" endtime="20201115 23:02:16.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.366" endtime="20201115 23:02:16.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.368" endtime="20201115 23:02:16.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.340" endtime="20201115 23:02:16.370"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.337" endtime="20201115 23:02:16.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.377" endtime="20201115 23:02:16.664"></status>
</kw>
<msg timestamp="20201115 23:02:16.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024924014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.376" endtime="20201115 23:02:16.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024924014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.668" endtime="20201115 23:02:16.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.676" endtime="20201115 23:02:16.678"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.373" endtime="20201115 23:02:16.679"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.371" endtime="20201115 23:02:16.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:16.683" level="INFO">${RESULT} = [{'time': 0.024924014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014470800000000034, 'source_diff': 0.00014470800000000034}, {'time': 0.025095444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:16.680" endtime="20201115 23:02:16.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:16.696" level="INFO">${ACCURACY} = {'diff': [0.00014470800000000034, 0.00014445800000000009, 0.00014495800000000059, 0.00014424999999999855, 0.00014494400000000102, 0.00014501399999999887, 0.00014530499999999835, 0.00014452700000000193...</msg>
<status status="PASS" starttime="20201115 23:02:16.684" endtime="20201115 23:02:16.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.701" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201115 23:02:16.700" endtime="20201115 23:02:16.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.703" level="INFO">VALUE: [0.00014470800000000034, 0.00014445800000000009, 0.00014495800000000059, 0.00014424999999999855, 0.00014494400000000102, 0.00014501399999999887, 0.00014530499999999835, 0.00014452700000000193, 0.00014501399999999887, 0.00014426400000000159, 0.000144445, 0.00014438899999999824, 0.00014455599999999708, 0.00014450000000000227, 0.00014502799999999844, 0.00014465299999999806, 0.0001442769999999982, 0.0001452220000000004, 0.0001444860000000027, 0.000145041999999998, 0.0001447219999999999, 0.00014484700000000003, 0.00014522299999999988, 0.00014502799999999844, 0.0001449999999999993, 0.00014515299999999856, 0.00014430500000000082, 0.00014527799999999869, 0.00014491700000000135, 0.00014533400000000044, 0.00014451300000000236, 0.00014477799999999819, 0.00014440300000000128, 0.00014451400000000184, 0.00014456900000000064, 0.00014512499999999942, 0.00014472299999999938, 0.0001445830000000002, 0.00014479200000000123, 0.0001447089999999998, 0.00014440300000000128, 0.00014448599999999923, 0.00014463900000000196, 0.0001449450000000005, 0.00014508399999999672, 0.0001447089999999998, 0.00014493100000000092, 0.0001443890000000017, 0.0001444999999999988, 0.00014469500000000024]</msg>
<status status="PASS" starttime="20201115 23:02:16.702" endtime="20201115 23:02:16.704"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.697" endtime="20201115 23:02:16.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.706" endtime="20201115 23:02:16.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:16.710" endtime="20201115 23:02:16.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.708" endtime="20201115 23:02:16.730"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.705" endtime="20201115 23:02:16.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.336" endtime="20201115 23:02:16.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.334" endtime="20201115 23:02:16.731"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.333" endtime="20201115 23:02:16.731"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.734" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 55">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.742" endtime="20201115 23:02:16.763"></status>
</kw>
<msg timestamp="20201115 23:02:16.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.741" endtime="20201115 23:02:16.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:16.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:16.764" endtime="20201115 23:02:16.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.767" endtime="20201115 23:02:16.768"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.738" endtime="20201115 23:02:16.769"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.736" endtime="20201115 23:02:16.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:16.775" endtime="20201115 23:02:17.063"></status>
</kw>
<msg timestamp="20201115 23:02:17.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024119306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:16.774" endtime="20201115 23:02:17.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024119306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.067" endtime="20201115 23:02:17.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.075" endtime="20201115 23:02:17.077"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.771" endtime="20201115 23:02:17.078"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.770" endtime="20201115 23:02:17.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.082" level="INFO">${RESULT} = [{'time': 0.024265736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014642999999999948, 'source_diff': 0.00014642999999999948}, {'time': 0.024443181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:17.079" endtime="20201115 23:02:17.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.139" level="INFO">${ACCURACY} = {'diff': [0.00014642999999999948, 0.00014611200000000032, 0.0001455549999999986, 0.0001460000000000003, 0.0001458480000000005, 0.0001455280000000024, 0.0001458480000000005, 0.00014559800000000025, 0.0...</msg>
<status status="PASS" starttime="20201115 23:02:17.083" endtime="20201115 23:02:17.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.144" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.143" endtime="20201115 23:02:17.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.146" level="INFO">VALUE: [0.00014642999999999948, 0.00014611200000000032, 0.0001455549999999986, 0.0001460000000000003, 0.0001458480000000005, 0.0001455280000000024, 0.0001458480000000005, 0.00014559800000000025, 0.00014555600000000155, 0.00014598600000000073, 0.00014543099999999795, 0.0001457220000000009, 0.0001453890000000027, 0.00014601399999999987, 0.00014538899999999924, 0.00014583300000000146, 0.00014608400000000119, 0.000146139, 0.00014540300000000228, 0.00014584799999999704, 0.00014576399999999962, 0.00014566699999999863, 0.0001455419999999985, 0.00014543100000000142, 0.0001456519999999996, 0.0001462090000000013, 0.00014575000000000005, 0.00014611100000000085, 0.00014544399999999805, 0.00014572300000000038, 0.00014615299999999956, 0.0001460000000000003, 0.00014611100000000085, 0.00014598599999999726, 0.00014577799999999919, 0.00014609700000000128, 0.00014558400000000069, 0.0001458480000000005, 0.0001456670000000021, 0.0001457220000000009, 0.0001459020000000033, 0.00014566699999999863, 0.00014590299999999584, 0.00014602799999999944, 0.00014609700000000475, 0.00014584799999999704, 0.00014565300000000253, 0.00014527799999999869, 0.00014552799999999894, 0.00014634699999999806]</msg>
<status status="PASS" starttime="20201115 23:02:17.145" endtime="20201115 23:02:17.147"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.140" endtime="20201115 23:02:17.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.150" endtime="20201115 23:02:17.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.153" endtime="20201115 23:02:17.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.152" endtime="20201115 23:02:17.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.148" endtime="20201115 23:02:17.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.734" endtime="20201115 23:02:17.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.733" endtime="20201115 23:02:17.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:16.732" endtime="20201115 23:02:17.174"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.177" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 56">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.185" endtime="20201115 23:02:17.206"></status>
</kw>
<msg timestamp="20201115 23:02:17.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.184" endtime="20201115 23:02:17.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.208" endtime="20201115 23:02:17.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.210" endtime="20201115 23:02:17.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.181" endtime="20201115 23:02:17.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.179" endtime="20201115 23:02:17.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.219" endtime="20201115 23:02:17.505"></status>
</kw>
<msg timestamp="20201115 23:02:17.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024524667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024671375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.218" endtime="20201115 23:02:17.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024524667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024671375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.509" endtime="20201115 23:02:17.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.517" endtime="20201115 23:02:17.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.215" endtime="20201115 23:02:17.519"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.213" endtime="20201115 23:02:17.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.524" level="INFO">${RESULT} = [{'time': 0.024671375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014670799999999887, 'source_diff': 0.00014670799999999887}, {'time': 0.024850764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:17.521" endtime="20201115 23:02:17.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.537" level="INFO">${ACCURACY} = {'diff': [0.00014670799999999887, 0.00014680599999999933, 0.00014658299999999874, 0.00014669499999999877, 0.0001463610000000011, 0.00014723700000000145, 0.00014651400000000037, 0.00014706899999999967,...</msg>
<status status="PASS" starttime="20201115 23:02:17.525" endtime="20201115 23:02:17.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.541" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.540" endtime="20201115 23:02:17.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.544" level="INFO">VALUE: [0.00014670799999999887, 0.00014680599999999933, 0.00014658299999999874, 0.00014669499999999877, 0.0001463610000000011, 0.00014723700000000145, 0.00014651400000000037, 0.00014706899999999967, 0.00014666600000000016, 0.000147139000000001, 0.0001471939999999998, 0.00014681899999999942, 0.00014716700000000013, 0.00014655599999999908, 0.0001471529999999971, 0.00014666600000000016, 0.0001471939999999998, 0.00014687500000000117, 0.00014709700000000228, 0.0001466809999999992, 0.00014656999999999865, 0.0001469160000000004, 0.00014638900000000024, 0.00014724999999999808, 0.00014641699999999938, 0.0001463749999999972, 0.00014654200000000298, 0.00014645799999999862, 0.00014694399999999955, 0.00014718100000000317, 0.00014651400000000037, 0.00014719400000000327, 0.0001470969999999988, 0.00014627799999999969, 0.00014704100000000053, 0.00014658299999999874, 0.00014657000000000212, 0.00014702800000000044, 0.0001468199999999989, 0.00014688900000000074, 0.00014681899999999942, 0.00014673600000000148, 0.00014655599999999908, 0.00014713899999999752, 0.000146445000000002, 0.00014638899999999677, 0.00014711100000000532, 0.00014715199999999762, 0.00014697200000000216, 0.00014638899999999677]</msg>
<status status="PASS" starttime="20201115 23:02:17.543" endtime="20201115 23:02:17.545"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.538" endtime="20201115 23:02:17.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.548" endtime="20201115 23:02:17.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.551" endtime="20201115 23:02:17.570"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.549" endtime="20201115 23:02:17.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.546" endtime="20201115 23:02:17.571"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.178" endtime="20201115 23:02:17.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.176" endtime="20201115 23:02:17.572"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.175" endtime="20201115 23:02:17.572"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.575" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 57">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.584" endtime="20201115 23:02:17.604"></status>
</kw>
<msg timestamp="20201115 23:02:17.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.582" endtime="20201115 23:02:17.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.606" endtime="20201115 23:02:17.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.608" endtime="20201115 23:02:17.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.580" endtime="20201115 23:02:17.610"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.576" endtime="20201115 23:02:17.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.617" endtime="20201115 23:02:17.903"></status>
</kw>
<msg timestamp="20201115 23:02:17.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024893431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.616" endtime="20201115 23:02:17.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024893431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025041375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:17.907" endtime="20201115 23:02:17.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.915" endtime="20201115 23:02:17.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.613" endtime="20201115 23:02:17.917"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.611" endtime="20201115 23:02:17.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:17.922" level="INFO">${RESULT} = [{'time': 0.025041375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014794400000000055, 'source_diff': 0.00014794400000000055}, {'time': 0.025215806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:17.918" endtime="20201115 23:02:17.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:17.935" level="INFO">${ACCURACY} = {'diff': [0.00014794400000000055, 0.00014737500000000167, 0.0001479589999999996, 0.00014793099999999698, 0.00014794400000000055, 0.00014805499999999763, 0.00014784699999999956, 0.00014825000000000255,...</msg>
<status status="PASS" starttime="20201115 23:02:17.923" endtime="20201115 23:02:17.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.940" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201115 23:02:17.939" endtime="20201115 23:02:17.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.942" level="INFO">VALUE: [0.00014794400000000055, 0.00014737500000000167, 0.0001479589999999996, 0.00014793099999999698, 0.00014794400000000055, 0.00014805499999999763, 0.00014784699999999956, 0.00014825000000000255, 0.00014807000000000015, 0.0001474589999999991, 0.00014744400000000005, 0.0001478749999999987, 0.00014790199999999837, 0.00014812500000000242, 0.00014780500000000085, 0.0001473610000000021, 0.00014819500000000027, 0.00014820800000000037, 0.00014780500000000085, 0.00014780600000000033, 0.00014824999999999908, 0.00014779200000000076, 0.0001480550000000011, 0.00014744499999999952, 0.00014783399999999947, 0.000147735999999999, 0.00014816699999999766, 0.0001479719999999997, 0.00014769499999999977, 0.0001476940000000003, 0.00014774999999999858, 0.00014788899999999827, 0.00014731899999999992, 0.00014831900000000092, 0.0001483200000000004, 0.00014788899999999827, 0.0001476940000000003, 0.00014787500000000217, 0.00014787500000000564, 0.00014794499999999655, 0.00014812499999999895, 0.0001478749999999987, 0.00014802700000000196, 0.00014759799999999879, 0.0001476380000000055, 0.0001476800000000042, 0.00014748600000000223, 0.0001473199999999994, 0.00014819500000000374, 0.00014819500000000374]</msg>
<status status="PASS" starttime="20201115 23:02:17.941" endtime="20201115 23:02:17.943"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.936" endtime="20201115 23:02:17.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.945" endtime="20201115 23:02:17.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:17.949" endtime="20201115 23:02:17.968"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.947" endtime="20201115 23:02:17.969"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.944" endtime="20201115 23:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.575" endtime="20201115 23:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.573" endtime="20201115 23:02:17.970"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.573" endtime="20201115 23:02:17.970"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:17.973" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 58">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:17.982" endtime="20201115 23:02:18.003"></status>
</kw>
<msg timestamp="20201115 23:02:18.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:17.980" endtime="20201115 23:02:18.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.004" endtime="20201115 23:02:18.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.007" endtime="20201115 23:02:18.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.977" endtime="20201115 23:02:18.009"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.975" endtime="20201115 23:02:18.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.016" endtime="20201115 23:02:18.301"></status>
</kw>
<msg timestamp="20201115 23:02:18.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025362708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025511847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.014" endtime="20201115 23:02:18.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025362708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025511847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.305" endtime="20201115 23:02:18.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.314" endtime="20201115 23:02:18.315"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.012" endtime="20201115 23:02:18.316"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.010" endtime="20201115 23:02:18.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.320" level="INFO">${RESULT} = [{'time': 0.025511847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014913899999999952, 'source_diff': 0.00014913899999999952}, {'time': 0.025675361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:18.317" endtime="20201115 23:02:18.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.334" level="INFO">${ACCURACY} = {'diff': [0.00014913899999999952, 0.0001493330000000015, 0.00014849999999999933, 0.0001483749999999992, 0.0001485139999999989, 0.00014876399999999915, 0.00014894399999999808, 0.00014898600000000026, 0...</msg>
<status status="PASS" starttime="20201115 23:02:18.321" endtime="20201115 23:02:18.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.338" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.337" endtime="20201115 23:02:18.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.341" level="INFO">VALUE: [0.00014913899999999952, 0.0001493330000000015, 0.00014849999999999933, 0.0001483749999999992, 0.0001485139999999989, 0.00014876399999999915, 0.00014894399999999808, 0.00014898600000000026, 0.00014858300000000074, 0.00014845800000000062, 0.0001490559999999981, 0.0001491810000000017, 0.00014913899999999952, 0.00014884700000000056, 0.0001488749999999997, 0.00014897199999999722, 0.00014852799999999847, 0.00014883400000000047, 0.00014848600000000323, 0.00014888899999999927, 0.00014862499999999945, 0.00014856900000000117, 0.00014895800000000112, 0.00014916700000000213, 0.0001491529999999991, 0.0001491520000000031, 0.0001490689999999982, 0.0001486390000000025, 0.0001489030000000023, 0.00014894399999999808, 0.00014876399999999915, 0.0001489169999999984, 0.00014858300000000074, 0.0001485139999999989, 0.00014844400000000105, 0.00014863899999999902, 0.00014869399999999783, 0.00014915300000000603, 0.00014895899999999712, 0.00014906900000000167, 0.00014888899999999927, 0.00014894399999999808, 0.0001490000000000033, 0.00014895900000000406, 0.00014884700000000056, 0.00014858400000000022, 0.00014912499999999995, 0.00014926399999999618, 0.0001493330000000015, 0.00014891599999999894]</msg>
<status status="PASS" starttime="20201115 23:02:18.339" endtime="20201115 23:02:18.341"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.334" endtime="20201115 23:02:18.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.344" endtime="20201115 23:02:18.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.347" endtime="20201115 23:02:18.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.346" endtime="20201115 23:02:18.367"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.342" endtime="20201115 23:02:18.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.973" endtime="20201115 23:02:18.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.971" endtime="20201115 23:02:18.368"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:17.971" endtime="20201115 23:02:18.368"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.371" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 59">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.380" endtime="20201115 23:02:18.400"></status>
</kw>
<msg timestamp="20201115 23:02:18.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.377" endtime="20201115 23:02:18.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.402" endtime="20201115 23:02:18.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.404" endtime="20201115 23:02:18.406"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.375" endtime="20201115 23:02:18.407"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.373" endtime="20201115 23:02:18.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.414" endtime="20201115 23:02:18.700"></status>
</kw>
<msg timestamp="20201115 23:02:18.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024951806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.412" endtime="20201115 23:02:18.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024951806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025101472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.704" endtime="20201115 23:02:18.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.712" endtime="20201115 23:02:18.713"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.409" endtime="20201115 23:02:18.714"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.408" endtime="20201115 23:02:18.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:18.718" level="INFO">${RESULT} = [{'time': 0.025101472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001496659999999997, 'source_diff': 0.0001496659999999997}, {'time': 0.025269972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:18.715" endtime="20201115 23:02:18.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:18.733" level="INFO">${ACCURACY} = {'diff': [0.0001496659999999997, 0.00014994400000000255, 0.0001495139999999999, 0.00015007000000000215, 0.0001496529999999996, 0.0001499030000000033, 0.00015027800000000022, 0.00014984700000000156, 0....</msg>
<status status="PASS" starttime="20201115 23:02:18.719" endtime="20201115 23:02:18.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.737" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201115 23:02:18.736" endtime="20201115 23:02:18.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.740" level="INFO">VALUE: [0.0001496659999999997, 0.00014994400000000255, 0.0001495139999999999, 0.00015007000000000215, 0.0001496529999999996, 0.0001499030000000033, 0.00015027800000000022, 0.00014984700000000156, 0.0001501660000000002, 0.00015005499999999963, 0.00015013900000000052, 0.0001495689999999987, 0.00014926399999999965, 0.0001501530000000001, 0.00014961100000000088, 0.00014962500000000045, 0.00014983299999999852, 0.00015006900000000267, 0.000149736000000001, 0.00014944499999999805, 0.00014969500000000177, 0.00015027800000000022, 0.00015026400000000065, 0.00015025000000000108, 0.00014954099999999956, 0.00015013900000000052, 0.00015018099999999923, 0.00015019500000000227, 0.00014991599999999994, 0.00015000000000000083, 0.0001494720000000012, 0.00014940299999999934, 0.00014970800000000187, 0.00014970800000000187, 0.00014963900000000002, 0.0001496529999999996, 0.00014977799999999972, 0.00014944399999999858, 0.0001500970000000018, 0.00015020899999999837, 0.00015025000000000455, 0.00014990299999999984, 0.00015022199999999847, 0.00015030500000000335, 0.0001501949999999988, 0.00014952699999999652, 0.00014967999999999926, 0.00014952700000000346, 0.00015001400000000387, 0.0001498200000000019]</msg>
<status status="PASS" starttime="20201115 23:02:18.738" endtime="20201115 23:02:18.740"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.734" endtime="20201115 23:02:18.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.743" endtime="20201115 23:02:18.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:18.746" endtime="20201115 23:02:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.745" endtime="20201115 23:02:18.766"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.741" endtime="20201115 23:02:18.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.371" endtime="20201115 23:02:18.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.370" endtime="20201115 23:02:18.767"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.369" endtime="20201115 23:02:18.767"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.770" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 60">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.778" endtime="20201115 23:02:18.799"></status>
</kw>
<msg timestamp="20201115 23:02:18.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.776" endtime="20201115 23:02:18.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:18.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:18.801" endtime="20201115 23:02:18.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.804" endtime="20201115 23:02:18.805"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.774" endtime="20201115 23:02:18.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.772" endtime="20201115 23:02:18.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:18.813" endtime="20201115 23:02:19.099"></status>
</kw>
<msg timestamp="20201115 23:02:19.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024783542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:18.811" endtime="20201115 23:02:19.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024783542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024934139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.103" endtime="20201115 23:02:19.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.111" endtime="20201115 23:02:19.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.809" endtime="20201115 23:02:19.113"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.807" endtime="20201115 23:02:19.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.118" level="INFO">${RESULT} = [{'time': 0.024934139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001505970000000023, 'source_diff': 0.0001505970000000023}, {'time': 0.025111542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:19.115" endtime="20201115 23:02:19.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.131" level="INFO">${ACCURACY} = {'diff': [0.0001505970000000023, 0.00015043099999999948, 0.00015100000000000183, 0.00015031899999999945, 0.0001511799999999973, 0.00015081899999999995, 0.00015080599999999986, 0.00015052800000000047, ...</msg>
<status status="PASS" starttime="20201115 23:02:19.119" endtime="20201115 23:02:19.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.136" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.135" endtime="20201115 23:02:19.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.138" level="INFO">VALUE: [0.0001505970000000023, 0.00015043099999999948, 0.00015100000000000183, 0.00015031899999999945, 0.0001511799999999973, 0.00015081899999999995, 0.00015080599999999986, 0.00015052800000000047, 0.00015056999999999918, 0.0001504720000000022, 0.0001511109999999989, 0.0001512079999999999, 0.0001506109999999984, 0.00015069500000000277, 0.0001508469999999991, 0.00015044399999999958, 0.0001510690000000002, 0.0001510970000000028, 0.00015059799999999832, 0.00015077700000000124, 0.00015125000000000208, 0.00015113900000000152, 0.0001510270000000015, 0.0001504720000000022, 0.00015040300000000034, 0.00015076399999999768, 0.0001503339999999985, 0.00015112499999999848, 0.00015058300000000274, 0.00015063800000000155, 0.00015045799999999915, 0.00015063899999999755, 0.00015076400000000115, 0.0001511669999999972, 0.0001507230000000019, 0.0001510690000000002, 0.0001507910000000008, 0.00015044400000000305, 0.00015104199999999707, 0.00015088900000000127, 0.00015056900000000317, 0.00015076399999999768, 0.0001507499999999981, 0.00015091600000000094, 0.00015044399999999958, 0.0001510279999999975, 0.00015062500000000145, 0.00015076399999999768, 0.00015047199999999872, 0.00015038900000000077]</msg>
<status status="PASS" starttime="20201115 23:02:19.137" endtime="20201115 23:02:19.138"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.132" endtime="20201115 23:02:19.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.141" endtime="20201115 23:02:19.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.145" endtime="20201115 23:02:19.164"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.143" endtime="20201115 23:02:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.139" endtime="20201115 23:02:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.770" endtime="20201115 23:02:19.165"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.769" endtime="20201115 23:02:19.166"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:18.768" endtime="20201115 23:02:19.166"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.168" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 61">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.177" endtime="20201115 23:02:19.197"></status>
</kw>
<msg timestamp="20201115 23:02:19.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.175" endtime="20201115 23:02:19.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.199" endtime="20201115 23:02:19.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.202" endtime="20201115 23:02:19.203"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.173" endtime="20201115 23:02:19.204"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.170" endtime="20201115 23:02:19.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.211" endtime="20201115 23:02:19.496"></status>
</kw>
<msg timestamp="20201115 23:02:19.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.209" endtime="20201115 23:02:19.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024465347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024616986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.501" endtime="20201115 23:02:19.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.509" endtime="20201115 23:02:19.510"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.206" endtime="20201115 23:02:19.511"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.205" endtime="20201115 23:02:19.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.515" level="INFO">${RESULT} = [{'time': 0.024616986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015163900000000202, 'source_diff': 0.00015163900000000202}, {'time': 0.024786486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:19.512" endtime="20201115 23:02:19.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.528" level="INFO">${ACCURACY} = {'diff': [0.00015163900000000202, 0.00015219400000000133, 0.00015188900000000227, 0.00015151399999999843, 0.00015131999999999993, 0.00015177800000000172, 0.00015166700000000116, 0.0001517080000000004,...</msg>
<status status="PASS" starttime="20201115 23:02:19.516" endtime="20201115 23:02:19.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.533" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.532" endtime="20201115 23:02:19.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.535" level="INFO">VALUE: [0.00015163900000000202, 0.00015219400000000133, 0.00015188900000000227, 0.00015151399999999843, 0.00015131999999999993, 0.00015177800000000172, 0.00015166700000000116, 0.0001517080000000004, 0.00015233300000000102, 0.000151527999999998, 0.00015182000000000043, 0.00015188799999999933, 0.00015158300000000027, 0.0001521669999999982, 0.0001514170000000009, 0.00015190300000000184, 0.00015147199999999972, 0.00015151399999999843, 0.00015191699999999794, 0.0001516950000000003, 0.00015142999999999754, 0.00015158300000000027, 0.00015145899999999962, 0.0001515140000000019, 0.00015216700000000166, 0.00015140299999999787, 0.00015165299999999812, 0.0001519300000000015, 0.00015163799999999908, 0.00015208300000000077, 0.0001513469999999996, 0.0001516669999999977, 0.0001515560000000006, 0.00015220900000000037, 0.00015158300000000027, 0.00015213899999999905, 0.00015212499999999948, 0.000151430000000001, 0.000152221999999997, 0.00015158300000000027, 0.0001520829999999973, 0.00015162500000000245, 0.00015149999999999886, 0.00015158399999999628, 0.00015206899999999773, 0.00015188900000000227, 0.0001518200000000039, 0.0001517080000000004, 0.0001513750000000022, 0.0001521660000000022]</msg>
<status status="PASS" starttime="20201115 23:02:19.534" endtime="20201115 23:02:19.536"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.529" endtime="20201115 23:02:19.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.538" endtime="20201115 23:02:19.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.547" endtime="20201115 23:02:19.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.540" endtime="20201115 23:02:19.567"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.537" endtime="20201115 23:02:19.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.169" endtime="20201115 23:02:19.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.167" endtime="20201115 23:02:19.568"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.166" endtime="20201115 23:02:19.569"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.571" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 62">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.579" endtime="20201115 23:02:19.601"></status>
</kw>
<msg timestamp="20201115 23:02:19.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.578" endtime="20201115 23:02:19.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.602" endtime="20201115 23:02:19.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.605" endtime="20201115 23:02:19.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.575" endtime="20201115 23:02:19.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.573" endtime="20201115 23:02:19.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.614" endtime="20201115 23:02:19.899"></status>
</kw>
<msg timestamp="20201115 23:02:19.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024945403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.612" endtime="20201115 23:02:19.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024945403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025097875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:19.903" endtime="20201115 23:02:19.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.911" endtime="20201115 23:02:19.913"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.610" endtime="20201115 23:02:19.914"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.608" endtime="20201115 23:02:19.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:19.918" level="INFO">${RESULT} = [{'time': 0.025097875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015247199999999725, 'source_diff': 0.00015247199999999725}, {'time': 0.025264403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:19.915" endtime="20201115 23:02:19.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:19.931" level="INFO">${ACCURACY} = {'diff': [0.00015247199999999725, 0.00015263899999999955, 0.00015241599999999897, 0.00015263899999999955, 0.00015237499999999973, 0.00015237499999999973, 0.00015311099999999744, 0.0001524439999999981,...</msg>
<status status="PASS" starttime="20201115 23:02:19.919" endtime="20201115 23:02:19.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.936" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201115 23:02:19.935" endtime="20201115 23:02:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.938" level="INFO">VALUE: [0.00015247199999999725, 0.00015263899999999955, 0.00015241599999999897, 0.00015263899999999955, 0.00015237499999999973, 0.00015237499999999973, 0.00015311099999999744, 0.0001524439999999981, 0.00015329199999999932, 0.00015273600000000054, 0.0001524860000000003, 0.00015248699999999976, 0.0001528889999999998, 0.00015318099999999876, 0.00015280500000000238, 0.00015231899999999798, 0.000152430000000002, 0.00015236100000000016, 0.0001532080000000019, 0.00015308399999999778, 0.00015326400000000018, 0.00015308399999999778, 0.0001527080000000014, 0.0001524439999999981, 0.00015255499999999866, 0.0001523889999999993, 0.00015247200000000072, 0.00015241699999999844, 0.00015229099999999884, 0.00015298599999999732, 0.0001529860000000008, 0.00015316700000000266, 0.00015291699999999894, 0.00015331900000000245, 0.0001530560000000021, 0.00015290299999999937, 0.00015269399999999836, 0.00015273600000000054, 0.00015269400000000183, 0.0001529860000000008, 0.00015316700000000266, 0.00015276399999999968, 0.00015274999999999317, 0.00015286100000000413, 0.00015269400000000183, 0.000152833000000005, 0.0001530699999999982, 0.00015304199999999907, 0.00015288899999999633, 0.00015304199999999907]</msg>
<status status="PASS" starttime="20201115 23:02:19.937" endtime="20201115 23:02:19.939"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.932" endtime="20201115 23:02:19.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.942" endtime="20201115 23:02:19.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:19.945" endtime="20201115 23:02:19.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.944" endtime="20201115 23:02:19.965"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.940" endtime="20201115 23:02:19.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.572" endtime="20201115 23:02:19.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.570" endtime="20201115 23:02:19.966"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.569" endtime="20201115 23:02:19.966"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:19.969" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 63">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:19.977" endtime="20201115 23:02:19.999"></status>
</kw>
<msg timestamp="20201115 23:02:19.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:19.975" endtime="20201115 23:02:19.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.000" endtime="20201115 23:02:20.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.003" endtime="20201115 23:02:20.004"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.973" endtime="20201115 23:02:20.005"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.971" endtime="20201115 23:02:20.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.012" endtime="20201115 23:02:20.298"></status>
</kw>
<msg timestamp="20201115 23:02:20.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.010" endtime="20201115 23:02:20.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024894069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025048417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.302" endtime="20201115 23:02:20.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.310" endtime="20201115 23:02:20.312"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.008" endtime="20201115 23:02:20.313"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.006" endtime="20201115 23:02:20.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.317" level="INFO">${RESULT} = [{'time': 0.025048417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001543479999999986, 'source_diff': 0.0001543479999999986}, {'time': 0.025217792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:20.314" endtime="20201115 23:02:20.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.331" level="INFO">${ACCURACY} = {'diff': [0.0001543479999999986, 0.00015331999999999846, 0.00015336100000000116, 0.00015355499999999966, 0.0001537500000000011, 0.0001536799999999998, 0.00015362500000000098, 0.00015334699999999812, 0...</msg>
<status status="PASS" starttime="20201115 23:02:20.318" endtime="20201115 23:02:20.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.336" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.335" endtime="20201115 23:02:20.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.339" level="INFO">VALUE: [0.0001543479999999986, 0.00015331999999999846, 0.00015336100000000116, 0.00015355499999999966, 0.0001537500000000011, 0.0001536799999999998, 0.00015362500000000098, 0.00015334699999999812, 0.0001541110000000019, 0.00015336100000000116, 0.00015354199999999957, 0.00015348599999999782, 0.00015340299999999987, 0.0001543059999999999, 0.00015351400000000043, 0.000153737000000001, 0.0001537219999999985, 0.0001535410000000001, 0.00015340299999999987, 0.0001537080000000024, 0.00015361099999999794, 0.0001537639999999972, 0.00015377800000000025, 0.0001540280000000005, 0.00015412499999999801, 0.00015369399999999936, 0.0001536110000000014, 0.00015334699999999812, 0.0001536110000000014, 0.0001533609999999977, 0.00015393000000000004, 0.00015394499999999908, 0.0001536799999999998, 0.0001538890000000008, 0.00015413900000000105, 0.0001536799999999998, 0.00015348600000000476, 0.00015419400000000333, 0.00015381999999999896, 0.00015423600000000204, 0.0001540829999999993, 0.0001536939999999959, 0.0001536379999999976, 0.00015390200000000437, 0.00015413899999999758, 0.00015351400000000043, 0.0001541939999999964, 0.00015417999999999682, 0.0001542500000000016, 0.00015381899999999948]</msg>
<status status="PASS" starttime="20201115 23:02:20.337" endtime="20201115 23:02:20.339"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.332" endtime="20201115 23:02:20.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.342" endtime="20201115 23:02:20.343"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.345" endtime="20201115 23:02:20.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.344" endtime="20201115 23:02:20.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.340" endtime="20201115 23:02:20.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.970" endtime="20201115 23:02:20.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.968" endtime="20201115 23:02:20.366"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:19.967" endtime="20201115 23:02:20.367"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.369" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 64">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.377" endtime="20201115 23:02:20.399"></status>
</kw>
<msg timestamp="20201115 23:02:20.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.376" endtime="20201115 23:02:20.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.400" endtime="20201115 23:02:20.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.403" endtime="20201115 23:02:20.404"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.373" endtime="20201115 23:02:20.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.371" endtime="20201115 23:02:20.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.412" endtime="20201115 23:02:20.698"></status>
</kw>
<msg timestamp="20201115 23:02:20.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024976083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.410" endtime="20201115 23:02:20.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024976083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.702" endtime="20201115 23:02:20.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.710" endtime="20201115 23:02:20.711"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.408" endtime="20201115 23:02:20.712"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.406" endtime="20201115 23:02:20.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:20.716" level="INFO">${RESULT} = [{'time': 0.024976083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015534700000000012, 'source_diff': 0.00015534700000000012}, {'time': 0.025151528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:20.713" endtime="20201115 23:02:20.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:20.730" level="INFO">${ACCURACY} = {'diff': [0.00015534700000000012, 0.00015501399999999846, 0.0001552500000000026, 0.0001549999999999989, 0.0001549999999999989, 0.00015484699999999962, 0.00015473599999999907, 0.0001549860000000028, 0....</msg>
<status status="PASS" starttime="20201115 23:02:20.718" endtime="20201115 23:02:20.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.735" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201115 23:02:20.734" endtime="20201115 23:02:20.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.737" level="INFO">VALUE: [0.00015534700000000012, 0.00015501399999999846, 0.0001552500000000026, 0.0001549999999999989, 0.0001549999999999989, 0.00015484699999999962, 0.00015473599999999907, 0.0001549860000000028, 0.0001549029999999979, 0.0001547630000000022, 0.00015484699999999962, 0.00015505500000000116, 0.00015455500000000066, 0.0001551110000000029, 0.00015463899999999808, 0.00015462500000000198, 0.0001548060000000004, 0.0001553060000000009, 0.00015487500000000223, 0.00015513899999999858, 0.0001551110000000029, 0.00015515300000000162, 0.00015533400000000003, 0.00015440300000000087, 0.00015433299999999955, 0.000154528000000001, 0.00015430500000000041, 0.0001544999999999984, 0.00015512499999999901, 0.00015451399999999796, 0.0001552089999999999, 0.00015505500000000116, 0.00015462499999999851, 0.00015491600000000147, 0.00015486100000000266, 0.0001551110000000029, 0.00015474999999999864, 0.00015430499999999348, 0.00015505500000000116, 0.00015465299999999765, 0.00015532000000000046, 0.0001546950000000033, 0.0001547229999999955, 0.00015444400000000358, 0.00015461099999999894, 0.00015512499999999901, 0.00015472199999999603, 0.00015515299999999815, 0.0001545699999999997, 0.00015493100000000398]</msg>
<status status="PASS" starttime="20201115 23:02:20.736" endtime="20201115 23:02:20.737"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.731" endtime="20201115 23:02:20.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.740" endtime="20201115 23:02:20.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:20.744" endtime="20201115 23:02:20.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.742" endtime="20201115 23:02:20.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.739" endtime="20201115 23:02:20.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.370" endtime="20201115 23:02:20.764"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.368" endtime="20201115 23:02:20.765"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.367" endtime="20201115 23:02:20.765"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.767" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 65">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.775" endtime="20201115 23:02:20.796"></status>
</kw>
<msg timestamp="20201115 23:02:20.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.774" endtime="20201115 23:02:20.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:20.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:20.798" endtime="20201115 23:02:20.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.800" endtime="20201115 23:02:20.802"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.771" endtime="20201115 23:02:20.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.769" endtime="20201115 23:02:20.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:20.809" endtime="20201115 23:02:21.106"></status>
</kw>
<msg timestamp="20201115 23:02:21.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:20.808" endtime="20201115 23:02:21.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023995861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.110" endtime="20201115 23:02:21.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.119" endtime="20201115 23:02:21.120"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.805" endtime="20201115 23:02:21.121"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.804" endtime="20201115 23:02:21.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.125" level="INFO">${RESULT} = [{'time': 0.024151736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015587499999999976, 'source_diff': 0.00015587499999999976}, {'time': 0.024329139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:21.122" endtime="20201115 23:02:21.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.139" level="INFO">${ACCURACY} = {'diff': [0.00015587499999999976, 0.0001557220000000005, 0.0001562359999999971, 0.0001559999999999999, 0.00015565200000000265, 0.0001553890000000023, 0.00015629100000000284, 0.0001554440000000011, 0.0...</msg>
<status status="PASS" starttime="20201115 23:02:21.126" endtime="20201115 23:02:21.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.143" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.142" endtime="20201115 23:02:21.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.146" level="INFO">VALUE: [0.00015587499999999976, 0.0001557220000000005, 0.0001562359999999971, 0.0001559999999999999, 0.00015565200000000265, 0.0001553890000000023, 0.00015629100000000284, 0.0001554440000000011, 0.00015592999999999857, 0.0001561670000000022, 0.0001560419999999986, 0.00015537500000000273, 0.00015579200000000182, 0.00015597199999999728, 0.0001559310000000015, 0.00015568100000000126, 0.00015573699999999954, 0.00015555500000000166, 0.00015570800000000093, 0.00015579199999999835, 0.00015543099999999754, 0.00015595800000000118, 0.0001557639999999992, 0.00015601399999999946, 0.00015548599999999982, 0.00015573600000000007, 0.000155528000000002, 0.000155431000000001, 0.00015623700000000004, 0.00015541700000000144, 0.00015606899999999826, 0.0001558610000000002, 0.0001561670000000022, 0.0001554029999999984, 0.00015597199999999728, 0.00015625000000000014, 0.00015569500000000083, 0.0001560410000000026, 0.00015572299999999997, 0.0001560969999999974, 0.00015536099999999622, 0.00015533300000000055, 0.00015617999999999882, 0.00015534800000000654, 0.0001560280000000025, 0.00015597199999999728, 0.00015570799999999746, 0.0001560559999999947, 0.00015583300000000105, 0.0001560830000000013]</msg>
<status status="PASS" starttime="20201115 23:02:21.144" endtime="20201115 23:02:21.146"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.140" endtime="20201115 23:02:21.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.149" endtime="20201115 23:02:21.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.153" endtime="20201115 23:02:21.172"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.151" endtime="20201115 23:02:21.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.147" endtime="20201115 23:02:21.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.768" endtime="20201115 23:02:21.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.766" endtime="20201115 23:02:21.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:20.765" endtime="20201115 23:02:21.174"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.176" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 66">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.184" endtime="20201115 23:02:21.205"></status>
</kw>
<msg timestamp="20201115 23:02:21.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.183" endtime="20201115 23:02:21.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.207" endtime="20201115 23:02:21.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.210" endtime="20201115 23:02:21.211"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.180" endtime="20201115 23:02:21.212"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.178" endtime="20201115 23:02:21.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.219" endtime="20201115 23:02:21.525"></status>
</kw>
<msg timestamp="20201115 23:02:21.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.217" endtime="20201115 23:02:21.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024139583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.534" endtime="20201115 23:02:21.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.545" endtime="20201115 23:02:21.547"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.215" endtime="20201115 23:02:21.548"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.213" endtime="20201115 23:02:21.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.552" level="INFO">${RESULT} = [{'time': 0.024296319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015673600000000107, 'source_diff': 0.00015673600000000107}, {'time': 0.024484708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:21.549" endtime="20201115 23:02:21.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.565" level="INFO">${ACCURACY} = {'diff': [0.00015673600000000107, 0.00015675000000000064, 0.00015637500000000026, 0.0001569029999999999, 0.00015636099999999722, 0.00015634700000000112, 0.00015673600000000107, 0.00015637500000000026,...</msg>
<status status="PASS" starttime="20201115 23:02:21.553" endtime="20201115 23:02:21.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.570" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.569" endtime="20201115 23:02:21.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.572" level="INFO">VALUE: [0.00015673600000000107, 0.00015675000000000064, 0.00015637500000000026, 0.0001569029999999999, 0.00015636099999999722, 0.00015634700000000112, 0.00015673600000000107, 0.00015637500000000026, 0.0001565000000000004, 0.00015730499999999994, 0.00015643099999999854, 0.00015686099999999772, 0.00015675000000000064, 0.00015662500000000051, 0.00015692999999999957, 0.00015684699999999815, 0.00015694500000000208, 0.00015670899999999793, 0.00015690200000000043, 0.00015720799999999896, 0.00015665299999999965, 0.00015641699999999897, 0.00015648599999999735, 0.00015697199999999828, 0.0001564029999999994, 0.00015709700000000187, 0.00015675000000000064, 0.0001570839999999983, 0.00015637500000000026, 0.00015720899999999843, 0.00015687500000000076, 0.00015648600000000082, 0.00015637500000000026, 0.00015722199999999853, 0.00015665300000000312, 0.0001565419999999991, 0.00015647300000000072, 0.00015633300000000155, 0.0001565549999999992, 0.00015652799999999953, 0.0001568060000000024, 0.00015709699999999494, 0.0001566809999999988, 0.0001566809999999988, 0.00015659700000000137, 0.00015712500000000101, 0.00015643099999999854, 0.00015649999999999692, 0.00015643099999999854, 0.0001571939999999994]</msg>
<status status="PASS" starttime="20201115 23:02:21.571" endtime="20201115 23:02:21.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.566" endtime="20201115 23:02:21.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.576" endtime="20201115 23:02:21.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.579" endtime="20201115 23:02:21.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.578" endtime="20201115 23:02:21.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.574" endtime="20201115 23:02:21.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.177" endtime="20201115 23:02:21.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.175" endtime="20201115 23:02:21.600"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.174" endtime="20201115 23:02:21.600"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.603" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 67">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.611" endtime="20201115 23:02:21.633"></status>
</kw>
<msg timestamp="20201115 23:02:21.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.609" endtime="20201115 23:02:21.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:21.634" endtime="20201115 23:02:21.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.637" endtime="20201115 23:02:21.639"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.607" endtime="20201115 23:02:21.640"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.605" endtime="20201115 23:02:21.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.646" endtime="20201115 23:02:21.932"></status>
</kw>
<msg timestamp="20201115 23:02:21.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.645" endtime="20201115 23:02:21.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024936264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:21.936" endtime="20201115 23:02:21.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.945" endtime="20201115 23:02:21.946"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.642" endtime="20201115 23:02:21.947"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.641" endtime="20201115 23:02:21.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:21.951" level="INFO">${RESULT} = [{'time': 0.025093778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015751400000000096, 'source_diff': 0.00015751400000000096}, {'time': 0.025277181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:21.948" endtime="20201115 23:02:21.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:21.966" level="INFO">${ACCURACY} = {'diff': [0.00015751400000000096, 0.00015733399999999856, 0.00015808299999999983, 0.0001575000000000014, 0.00015729199999999985, 0.0001576809999999998, 0.00015808299999999983, 0.00015788900000000133, ...</msg>
<status status="PASS" starttime="20201115 23:02:21.952" endtime="20201115 23:02:21.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.971" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201115 23:02:21.969" endtime="20201115 23:02:21.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:21.973" level="INFO">VALUE: [0.00015751400000000096, 0.00015733399999999856, 0.00015808299999999983, 0.0001575000000000014, 0.00015729199999999985, 0.0001576809999999998, 0.00015808299999999983, 0.00015788900000000133, 0.00015740200000000093, 0.0001575969999999989, 0.00015756899999999976, 0.00015822199999999953, 0.00015773600000000207, 0.0001580550000000007, 0.00015806900000000026, 0.0001580420000000006, 0.00015761099999999847, 0.00015748600000000182, 0.0001580420000000006, 0.0001577909999999974, 0.0001578480000000021, 0.00015798599999999885, 0.00015786099999999872, 0.00015769499999999936, 0.0001575969999999989, 0.00015768000000000032, 0.00015765300000000065, 0.0001580000000000019, 0.00015774999999999817, 0.00015797199999999928, 0.0001574579999999992, 0.00015790200000000143, 0.00015777699999999784, 0.00015783300000000305, 0.00015815300000000115, 0.00015812500000000201, 0.00015787499999999483, 0.00015813900000000158, 0.0001580979999999954, 0.0001578610000000022, 0.00015737500000000126, 0.00015815300000000115, 0.00015733400000000203, 0.00015799999999999842, 0.000157528000000004, 0.0001576809999999998, 0.0001574030000000004, 0.00015752799999999706, 0.00015727800000000375, 0.0001579030000000009]</msg>
<status status="PASS" starttime="20201115 23:02:21.972" endtime="20201115 23:02:21.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.967" endtime="20201115 23:02:21.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:21.976" endtime="20201115 23:02:21.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:21.980" endtime="20201115 23:02:21.999"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.978" endtime="20201115 23:02:22.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.974" endtime="20201115 23:02:22.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.603" endtime="20201115 23:02:22.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.602" endtime="20201115 23:02:22.001"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:21.601" endtime="20201115 23:02:22.001"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.003" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 68">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.012" endtime="20201115 23:02:22.033"></status>
</kw>
<msg timestamp="20201115 23:02:22.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.011" endtime="20201115 23:02:22.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.035" endtime="20201115 23:02:22.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.037" endtime="20201115 23:02:22.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.008" endtime="20201115 23:02:22.039"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.005" endtime="20201115 23:02:22.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.046" endtime="20201115 23:02:22.350"></status>
</kw>
<msg timestamp="20201115 23:02:22.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.045" endtime="20201115 23:02:22.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024736917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.354" endtime="20201115 23:02:22.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.362" endtime="20201115 23:02:22.364"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.042" endtime="20201115 23:02:22.365"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.041" endtime="20201115 23:02:22.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.369" level="INFO">${RESULT} = [{'time': 0.024895458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015854099999999816, 'source_diff': 0.00015854099999999816}, {'time': 0.025081944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:22.366" endtime="20201115 23:02:22.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.382" level="INFO">${ACCURACY} = {'diff': [0.00015854099999999816, 0.0001588879999999994, 0.0001592640000000027, 0.00015843000000000107, 0.00015873600000000307, 0.00015881900000000101, 0.00015902699999999909, 0.00015862500000000251, ...</msg>
<status status="PASS" starttime="20201115 23:02:22.370" endtime="20201115 23:02:22.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.387" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.386" endtime="20201115 23:02:22.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.389" level="INFO">VALUE: [0.00015854099999999816, 0.0001588879999999994, 0.0001592640000000027, 0.00015843000000000107, 0.00015873600000000307, 0.00015881900000000101, 0.00015902699999999909, 0.00015862500000000251, 0.00015858300000000033, 0.00015874999999999917, 0.00015830500000000094, 0.00015886099999999972, 0.00015912499999999954, 0.00015869399999999742, 0.00015883299999999712, 0.0001588749999999993, 0.00015901400000000246, 0.00015872200000000003, 0.00015915300000000215, 0.00015838900000000183, 0.0001586949999999969, 0.00015857000000000024, 0.00015865299999999818, 0.00015924999999999967, 0.00015847199999999978, 0.00015865300000000165, 0.0001590420000000016, 0.00015886099999999972, 0.0001589580000000007, 0.00015902799999999856, 0.00015899999999999942, 0.00015912499999999954, 0.00015862500000000251, 0.0001585139999999985, 0.00015886099999999972, 0.00015843100000000054, 0.00015862500000000251, 0.0001591109999999965, 0.0001590689999999978, 0.00015874999999999917, 0.00015930599999999795, 0.00015919500000000086, 0.0001588610000000032, 0.0001586940000000009, 0.0001583889999999949, 0.00015930599999999795, 0.00015901299999999952, 0.00015841699999999403, 0.0001584160000000015, 0.00015834699999999619]</msg>
<status status="PASS" starttime="20201115 23:02:22.388" endtime="20201115 23:02:22.389"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.383" endtime="20201115 23:02:22.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.392" endtime="20201115 23:02:22.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.396" endtime="20201115 23:02:22.415"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.394" endtime="20201115 23:02:22.416"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.391" endtime="20201115 23:02:22.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.004" endtime="20201115 23:02:22.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.002" endtime="20201115 23:02:22.417"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.001" endtime="20201115 23:02:22.417"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.420" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 69">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.428" endtime="20201115 23:02:22.449"></status>
</kw>
<msg timestamp="20201115 23:02:22.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.426" endtime="20201115 23:02:22.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.450" endtime="20201115 23:02:22.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.453" endtime="20201115 23:02:22.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.424" endtime="20201115 23:02:22.455"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.422" endtime="20201115 23:02:22.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.462" endtime="20201115 23:02:22.748"></status>
</kw>
<msg timestamp="20201115 23:02:22.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023904111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.460" endtime="20201115 23:02:22.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023904111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024064083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:22.753" endtime="20201115 23:02:22.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.761" endtime="20201115 23:02:22.762"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.458" endtime="20201115 23:02:22.763"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.456" endtime="20201115 23:02:22.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:22.767" level="INFO">${RESULT} = [{'time': 0.024064083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015997200000000128, 'source_diff': 0.00015997200000000128}, {'time': 0.024254486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:22.764" endtime="20201115 23:02:22.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:22.781" level="INFO">${ACCURACY} = {'diff': [0.00015997200000000128, 0.00015967999999999885, 0.00015936100000000022, 0.0001595550000000022, 0.00015949999999999992, 0.00015988899999999986, 0.0001595559999999982, 0.0001598750000000003, 0...</msg>
<status status="PASS" starttime="20201115 23:02:22.768" endtime="20201115 23:02:22.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.785" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201115 23:02:22.784" endtime="20201115 23:02:22.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.788" level="INFO">VALUE: [0.00015997200000000128, 0.00015967999999999885, 0.00015936100000000022, 0.0001595550000000022, 0.00015949999999999992, 0.00015988899999999986, 0.0001595559999999982, 0.0001598750000000003, 0.0001599580000000017, 0.00015965299999999918, 0.00015951300000000002, 0.00016006999999999827, 0.00016015299999999968, 0.0001598750000000003, 0.000159320000000001, 0.00015936100000000022, 0.0001602360000000011, 0.00015963899999999961, 0.00016013900000000011, 0.00016012500000000054, 0.00015998600000000085, 0.00015934700000000065, 0.00015966699999999875, 0.00016012500000000054, 0.00016016699999999925, 0.0001600559999999987, 0.00015938899999999936, 0.00015949999999999992, 0.0001595139999999995, 0.00015993100000000204, 0.0001598750000000003, 0.0001595139999999995, 0.00015969500000000136, 0.00015998600000000085, 0.00016025000000000067, 0.00015944400000000164, 0.00015976399999999974, 0.00015977699999999984, 0.00015966699999999875, 0.00015934699999999719, 0.00015936100000000022, 0.00016015199999999674, 0.00016008299999999837, 0.0001601810000000023, 0.00016019500000000186, 0.00015973599999999366, 0.00015993100000000204, 0.0001593610000000037, 0.00015948600000000035, 0.0001601810000000023]</msg>
<status status="PASS" starttime="20201115 23:02:22.786" endtime="20201115 23:02:22.788"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.782" endtime="20201115 23:02:22.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.791" endtime="20201115 23:02:22.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:22.795" endtime="20201115 23:02:22.814"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.793" endtime="20201115 23:02:22.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.790" endtime="20201115 23:02:22.815"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.420" endtime="20201115 23:02:22.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.418" endtime="20201115 23:02:22.816"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.418" endtime="20201115 23:02:22.816"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.818" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 70">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.827" endtime="20201115 23:02:22.848"></status>
</kw>
<msg timestamp="20201115 23:02:22.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.825" endtime="20201115 23:02:22.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:22.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:22.850" endtime="20201115 23:02:22.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.852" endtime="20201115 23:02:22.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.823" endtime="20201115 23:02:22.854"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.820" endtime="20201115 23:02:22.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:22.861" endtime="20201115 23:02:23.166"></status>
</kw>
<msg timestamp="20201115 23:02:23.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02435925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024520361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:22.860" endtime="20201115 23:02:23.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02435925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024520361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:23.171" endtime="20201115 23:02:23.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.179" endtime="20201115 23:02:23.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.857" endtime="20201115 23:02:23.181"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.855" endtime="20201115 23:02:23.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.185" level="INFO">${RESULT} = [{'time': 0.024520361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016111100000000197, 'source_diff': 0.00016111100000000197}, {'time': 0.024713694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:23.182" endtime="20201115 23:02:23.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.199" level="INFO">${ACCURACY} = {'diff': [0.00016111100000000197, 0.00016075000000000117, 0.00016098700000000132, 0.00016095799999999924, 0.0001605559999999992, 0.00016080599999999945, 0.00016056900000000277, 0.0001612780000000008, ...</msg>
<status status="PASS" starttime="20201115 23:02:23.186" endtime="20201115 23:02:23.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.203" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.202" endtime="20201115 23:02:23.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.206" level="INFO">VALUE: [0.00016111100000000197, 0.00016075000000000117, 0.00016098700000000132, 0.00016095799999999924, 0.0001605559999999992, 0.00016080599999999945, 0.00016056900000000277, 0.0001612780000000008, 0.00016036100000000122, 0.00016091600000000053, 0.00016037499999999733, 0.00016122199999999906, 0.0001610689999999998, 0.00016061200000000095, 0.00016038900000000036, 0.000160917, 0.00016098599999999838, 0.00016122200000000253, 0.00016113800000000164, 0.0001604719999999983, 0.00016084799999999816, 0.00016065300000000018, 0.00016112500000000154, 0.0001604169999999995, 0.0001607230000000015, 0.000160917, 0.0001605689999999993, 0.00016030500000000295, 0.00016030499999999948, 0.00016081999999999902, 0.00016048599999999788, 0.0001611949999999994, 0.00016076400000000074, 0.00016079199999999988, 0.0001611949999999994, 0.00016112500000000154, 0.00016111100000000197, 0.00016118000000000382, 0.00016038900000000383, 0.00016080499999999998, 0.00016065300000000365, 0.00016093100000000304, 0.0001609030000000039, 0.00016034699999999819, 0.00016037499999999733, 0.00016102800000000056, 0.00016119499999999592, 0.00016063900000000408, 0.000160610999999998, 0.00016037499999999733]</msg>
<status status="PASS" starttime="20201115 23:02:23.204" endtime="20201115 23:02:23.206"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.199" endtime="20201115 23:02:23.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.209" endtime="20201115 23:02:23.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.213" endtime="20201115 23:02:23.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.211" endtime="20201115 23:02:23.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.208" endtime="20201115 23:02:23.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.819" endtime="20201115 23:02:23.233"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.817" endtime="20201115 23:02:23.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:22.816" endtime="20201115 23:02:23.234"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.236" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 71">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.244" endtime="20201115 23:02:23.266"></status>
</kw>
<msg timestamp="20201115 23:02:23.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.243" endtime="20201115 23:02:23.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.268" endtime="20201115 23:02:23.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.270" endtime="20201115 23:02:23.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.240" endtime="20201115 23:02:23.273"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.238" endtime="20201115 23:02:23.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.279" endtime="20201115 23:02:23.565"></status>
</kw>
<msg timestamp="20201115 23:02:23.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.278" endtime="20201115 23:02:23.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024824167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.569" endtime="20201115 23:02:23.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.577" endtime="20201115 23:02:23.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.275" endtime="20201115 23:02:23.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.274" endtime="20201115 23:02:23.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.584" level="INFO">${RESULT} = [{'time': 0.024986083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016191599999999806, 'source_diff': 0.00016191599999999806}, {'time': 0.025168542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:23.581" endtime="20201115 23:02:23.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.599" level="INFO">${ACCURACY} = {'diff': [0.00016191599999999806, 0.00016201399999999852, 0.00016148599999999888, 0.00016186099999999926, 0.00016186099999999926, 0.0001617499999999987, 0.00016165299999999772, 0.00016180600000000045,...</msg>
<status status="PASS" starttime="20201115 23:02:23.585" endtime="20201115 23:02:23.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.603" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.602" endtime="20201115 23:02:23.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.606" level="INFO">VALUE: [0.00016191599999999806, 0.00016201399999999852, 0.00016148599999999888, 0.00016186099999999926, 0.00016186099999999926, 0.0001617499999999987, 0.00016165299999999772, 0.00016180600000000045, 0.00016134799999999866, 0.00016159699999999944, 0.00016223700000000257, 0.00016173599999999913, 0.000162014000000002, 0.0001621109999999995, 0.00016188900000000186, 0.0001612499999999982, 0.00016201399999999852, 0.000161610999999999, 0.00016150000000000192, 0.00016212499999999908, 0.0001615979999999989, 0.0001619300000000011, 0.00016216700000000125, 0.00016136099999999876, 0.00016172199999999956, 0.00016190300000000143, 0.00016215300000000168, 0.00016215299999999822, 0.00016156999999999977, 0.00016151399999999802, 0.00016202699999999862, 0.00016198600000000285, 0.00016116699999999679, 0.00016136099999999876, 0.00016140300000000093, 0.00016187500000000576, 0.00016159699999999944, 0.00016188799999999892, 0.00016212499999999908, 0.0001617780000000013, 0.00016159699999999944, 0.00016191699999999754, 0.00016190299999999797, 0.00016170900000000293, 0.0001618339999999996, 0.00016159699999999944, 0.00016204100000000166, 0.00016197200000000328, 0.00016166699999999729, 0.00016209699999999994]</msg>
<status status="PASS" starttime="20201115 23:02:23.604" endtime="20201115 23:02:23.606"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.600" endtime="20201115 23:02:23.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.609" endtime="20201115 23:02:23.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:23.612" endtime="20201115 23:02:23.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.611" endtime="20201115 23:02:23.632"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.607" endtime="20201115 23:02:23.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.237" endtime="20201115 23:02:23.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.235" endtime="20201115 23:02:23.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.234" endtime="20201115 23:02:23.634"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.636" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 72">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.644" endtime="20201115 23:02:23.665"></status>
</kw>
<msg timestamp="20201115 23:02:23.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.643" endtime="20201115 23:02:23.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:23.667" endtime="20201115 23:02:23.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.670" endtime="20201115 23:02:23.671"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.640" endtime="20201115 23:02:23.672"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.638" endtime="20201115 23:02:23.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.679" endtime="20201115 23:02:23.963"></status>
</kw>
<msg timestamp="20201115 23:02:23.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024040611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024203319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.677" endtime="20201115 23:02:23.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:23.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024040611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024203319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:23.967" endtime="20201115 23:02:23.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:23.976" endtime="20201115 23:02:23.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.674" endtime="20201115 23:02:23.978"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.673" endtime="20201115 23:02:23.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:23.982" level="INFO">${RESULT} = [{'time': 0.024203319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000162708000000001, 'source_diff': 0.000162708000000001}, {'time': 0.024398681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201115 23:02:23.979" endtime="20201115 23:02:23.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:23.996" level="INFO">${ACCURACY} = {'diff': [0.000162708000000001, 0.00016280599999999798, 0.000162611, 0.00016234700000000019, 0.00016268000000000185, 0.0001627919999999984, 0.00016265299999999872, 0.00016265299999999872, 0.0001626670...</msg>
<status status="PASS" starttime="20201115 23:02:23.983" endtime="20201115 23:02:23.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.000" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201115 23:02:23.999" endtime="20201115 23:02:24.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.003" level="INFO">VALUE: [0.000162708000000001, 0.00016280599999999798, 0.000162611, 0.00016234700000000019, 0.00016268000000000185, 0.0001627919999999984, 0.00016265299999999872, 0.00016265299999999872, 0.00016266700000000175, 0.00016291699999999854, 0.00016234700000000019, 0.00016286199999999973, 0.0001628889999999994, 0.00016326400000000324, 0.00016323600000000063, 0.00016298600000000038, 0.0001629439999999982, 0.00016318099999999836, 0.00016255599999999773, 0.00016297300000000028, 0.0001624300000000016, 0.0001624300000000016, 0.00016230500000000148, 0.00016326399999999977, 0.0001628340000000006, 0.000162611, 0.00016327799999999934, 0.00016276400000000274, 0.0001627499999999997, 0.000162708000000001, 0.0001629720000000008, 0.0001623889999999989, 0.00016280599999999798, 0.00016287499999999983, 0.00016277799999999884, 0.0001632500000000002, 0.00016236199999999923, 0.00016302699999999962, 0.00016286100000000026, 0.00016248600000000335, 0.0001629859999999969, 0.0001624030000000054, 0.00016297200000000428, 0.00016301299999999658, 0.00016280600000000145, 0.00016306899999999486, 0.00016302700000000309, 0.0001624580000000042, 0.00016242999999999813, 0.0001629309999999981]</msg>
<status status="PASS" starttime="20201115 23:02:24.001" endtime="20201115 23:02:24.003"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.996" endtime="20201115 23:02:24.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.006" endtime="20201115 23:02:24.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.009" endtime="20201115 23:02:24.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.008" endtime="20201115 23:02:24.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.004" endtime="20201115 23:02:24.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.637" endtime="20201115 23:02:24.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.635" endtime="20201115 23:02:24.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:23.634" endtime="20201115 23:02:24.030"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.033" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 73">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.041" endtime="20201115 23:02:24.062"></status>
</kw>
<msg timestamp="20201115 23:02:24.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.039" endtime="20201115 23:02:24.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.064" endtime="20201115 23:02:24.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.066" endtime="20201115 23:02:24.068"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.037" endtime="20201115 23:02:24.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.035" endtime="20201115 23:02:24.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.076" endtime="20201115 23:02:24.366"></status>
</kw>
<msg timestamp="20201115 23:02:24.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023957611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024121653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.074" endtime="20201115 23:02:24.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023957611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024121653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.370" endtime="20201115 23:02:24.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.378" endtime="20201115 23:02:24.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.071" endtime="20201115 23:02:24.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.070" endtime="20201115 23:02:24.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.385" level="INFO">${RESULT} = [{'time': 0.024121653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016404199999999966, 'source_diff': 0.00016404199999999966}, {'time': 0.024309028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:24.381" endtime="20201115 23:02:24.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.398" level="INFO">${ACCURACY} = {'diff': [0.00016404199999999966, 0.00016416699999999979, 0.00016423600000000163, 0.00016387500000000083, 0.00016415300000000022, 0.00016395799999999877, 0.0001640280000000001, 0.0001636950000000019, ...</msg>
<status status="PASS" starttime="20201115 23:02:24.386" endtime="20201115 23:02:24.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.403" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.401" endtime="20201115 23:02:24.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.405" level="INFO">VALUE: [0.00016404199999999966, 0.00016416699999999979, 0.00016423600000000163, 0.00016387500000000083, 0.00016415300000000022, 0.00016395799999999877, 0.0001640280000000001, 0.0001636950000000019, 0.00016412500000000108, 0.00016433399999999862, 0.00016379099999999994, 0.0001636659999999998, 0.00016419499999999893, 0.00016373599999999766, 0.0001641110000000015, 0.00016419499999999893, 0.00016341599999999956, 0.00016340299999999947, 0.00016383399999999812, 0.00016373600000000113, 0.00016391699999999954, 0.00016387500000000083, 0.00016386100000000126, 0.00016351400000000002, 0.00016413899999999718, 0.00016415200000000074, 0.00016419499999999893, 0.00016368099999999886, 0.00016379099999999994, 0.0001640410000000002, 0.00016334699999999772, 0.00016422200000000206, 0.00016356899999999883, 0.00016419399999999945, 0.00016366699999999929, 0.0001637219999999981, 0.0001638340000000016, 0.00016415200000000074, 0.00016334800000000413, 0.0001641660000000003, 0.00016330500000000248, 0.00016381900000000255, 0.00016380500000000298, 0.00016345799999999827, 0.00016345799999999827, 0.0001641389999999937, 0.00016368099999999886, 0.00016372200000000503, 0.00016334700000000119, 0.00016337500000000033]</msg>
<status status="PASS" starttime="20201115 23:02:24.404" endtime="20201115 23:02:24.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.399" endtime="20201115 23:02:24.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.408" endtime="20201115 23:02:24.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.412" endtime="20201115 23:02:24.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.410" endtime="20201115 23:02:24.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.406" endtime="20201115 23:02:24.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.033" endtime="20201115 23:02:24.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.032" endtime="20201115 23:02:24.433"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.031" endtime="20201115 23:02:24.433"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 74">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.443" endtime="20201115 23:02:24.465"></status>
</kw>
<msg timestamp="20201115 23:02:24.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.442" endtime="20201115 23:02:24.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.466" endtime="20201115 23:02:24.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.469" endtime="20201115 23:02:24.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.439" endtime="20201115 23:02:24.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.437" endtime="20201115 23:02:24.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.478" endtime="20201115 23:02:24.764"></status>
</kw>
<msg timestamp="20201115 23:02:24.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023954194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.477" endtime="20201115 23:02:24.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023954194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024119042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.768" endtime="20201115 23:02:24.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.776" endtime="20201115 23:02:24.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.474" endtime="20201115 23:02:24.778"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.472" endtime="20201115 23:02:24.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:24.783" level="INFO">${RESULT} = [{'time': 0.024119042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001648479999999987, 'source_diff': 0.0001648479999999987}, {'time': 0.024306458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:24.779" endtime="20201115 23:02:24.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:24.796" level="INFO">${ACCURACY} = {'diff': [0.0001648479999999987, 0.0001644859999999984, 0.0001651110000000025, 0.0001644309999999996, 0.000164611000000002, 0.00016436099999999829, 0.00016486200000000173, 0.00016512500000000208, 0.00...</msg>
<status status="PASS" starttime="20201115 23:02:24.783" endtime="20201115 23:02:24.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.800" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201115 23:02:24.799" endtime="20201115 23:02:24.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.803" level="INFO">VALUE: [0.0001648479999999987, 0.0001644859999999984, 0.0001651110000000025, 0.0001644309999999996, 0.000164611000000002, 0.00016436099999999829, 0.00016486200000000173, 0.00016512500000000208, 0.00016509699999999947, 0.0001647920000000004, 0.00016454200000000016, 0.000164611000000002, 0.00016506900000000033, 0.00016457000000000277, 0.00016511099999999904, 0.0001650410000000012, 0.00016491600000000106, 0.00016501399999999805, 0.00016523599999999916, 0.000164708999999999, 0.00016473600000000213, 0.00016436199999999776, 0.00016509699999999947, 0.00016505500000000076, 0.0001649159999999976, 0.0001648050000000005, 0.0001646950000000029, 0.00016480599999999998, 0.0001647920000000004, 0.00016454200000000016, 0.00016523599999999916, 0.00016505600000000023, 0.00016466700000000029, 0.00016493000000000063, 0.0001649859999999989, 0.00016491600000000106, 0.00016480599999999998, 0.0001649029999999975, 0.00016466700000000029, 0.00016449999999999798, 0.00016479200000000388, 0.0001644859999999984, 0.00016522299999999907, 0.00016486100000000226, 0.00016518000000000088, 0.00016433399999999515, 0.00016493000000000063, 0.00016466700000000029, 0.00016462500000000158, 0.0001650419999999972]</msg>
<status status="PASS" starttime="20201115 23:02:24.801" endtime="20201115 23:02:24.803"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.797" endtime="20201115 23:02:24.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.806" endtime="20201115 23:02:24.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:24.809" endtime="20201115 23:02:24.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.808" endtime="20201115 23:02:24.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.804" endtime="20201115 23:02:24.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.436" endtime="20201115 23:02:24.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.434" endtime="20201115 23:02:24.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.433" endtime="20201115 23:02:24.831"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.833" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 75">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.847" endtime="20201115 23:02:24.869"></status>
</kw>
<msg timestamp="20201115 23:02:24.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.846" endtime="20201115 23:02:24.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:24.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:24.871" endtime="20201115 23:02:24.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.873" endtime="20201115 23:02:24.875"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.843" endtime="20201115 23:02:24.876"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.835" endtime="20201115 23:02:24.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:24.882" endtime="20201115 23:02:25.168"></status>
</kw>
<msg timestamp="20201115 23:02:25.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030980847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031146264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:24.881" endtime="20201115 23:02:25.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030980847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031146264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.172" endtime="20201115 23:02:25.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.180" endtime="20201115 23:02:25.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.878" endtime="20201115 23:02:25.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.877" endtime="20201115 23:02:25.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.187" level="INFO">${RESULT} = [{'time': 0.031146264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016541700000000104, 'source_diff': 0.00016541700000000104}, {'time': 0.031327653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.184" endtime="20201115 23:02:25.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.201" level="INFO">${ACCURACY} = {'diff': [0.00016541700000000104, 0.00016566699999999782, 0.000165611000000003, 0.00016591700000000154, 0.00016529200000000438, 0.000165611000000003, 0.0001654169999999941, 0.00016547199999999984, 0.0...</msg>
<status status="PASS" starttime="20201115 23:02:25.188" endtime="20201115 23:02:25.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.206" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.205" endtime="20201115 23:02:25.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.209" level="INFO">VALUE: [0.00016541700000000104, 0.00016566699999999782, 0.000165611000000003, 0.00016591700000000154, 0.00016529200000000438, 0.000165611000000003, 0.0001654169999999941, 0.00016547199999999984, 0.000166096999999997, 0.00016581999999999708, 0.0001660839999999969, 0.0001654859999999994, 0.00016601399999999905, 0.00016547299999999932, 0.00016572299999999957, 0.00016534800000000266, 0.0001655839999999964, 0.0001654859999999994, 0.0001657769999999989, 0.0001657769999999989, 0.00016601399999999905, 0.00016597200000000034, 0.00016601399999999905, 0.00016577799999999837, 0.00016593000000000163, 0.00016541600000000156, 0.00016569400000000095, 0.0001654169999999941, 0.00016549999999999898, 0.00016606899999999786, 0.00016579199999999794, 0.0001662220000000006, 0.0001654310000000006, 0.000166096999999997, 0.00016618099999999442, 0.00016545899999999975, 0.00016623600000000016, 0.00016604099999999872, 0.00016555599999999726, 0.0001662220000000006, 0.00016623600000000016, 0.00016551399999999855, 0.00016547199999999984, 0.00016541700000000104, 0.00016591700000000154, 0.00016551299999999908, 0.0001661110000000035, 0.0001659440000000012, 0.00016605599999999776, 0.00016558300000000387]</msg>
<status status="PASS" starttime="20201115 23:02:25.207" endtime="20201115 23:02:25.209"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.202" endtime="20201115 23:02:25.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.212" endtime="20201115 23:02:25.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.216" endtime="20201115 23:02:25.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.214" endtime="20201115 23:02:25.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.210" endtime="20201115 23:02:25.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.834" endtime="20201115 23:02:25.236"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.832" endtime="20201115 23:02:25.237"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:24.831" endtime="20201115 23:02:25.237"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.239" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 76">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.247" endtime="20201115 23:02:25.269"></status>
</kw>
<msg timestamp="20201115 23:02:25.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.246" endtime="20201115 23:02:25.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.270" endtime="20201115 23:02:25.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.273" endtime="20201115 23:02:25.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.243" endtime="20201115 23:02:25.275"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.241" endtime="20201115 23:02:25.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.282" endtime="20201115 23:02:25.568"></status>
</kw>
<msg timestamp="20201115 23:02:25.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023973625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.281" endtime="20201115 23:02:25.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023973625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024140625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.572" endtime="20201115 23:02:25.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.580" endtime="20201115 23:02:25.581"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.278" endtime="20201115 23:02:25.582"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.276" endtime="20201115 23:02:25.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.586" level="INFO">${RESULT} = [{'time': 0.024140625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016700000000000048, 'source_diff': 0.00016700000000000048}, {'time': 0.024325056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:25.583" endtime="20201115 23:02:25.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.600" level="INFO">${ACCURACY} = {'diff': [0.00016700000000000048, 0.00016647300000000032, 0.00016691699999999907, 0.00016672300000000057, 0.00016656999999999783, 0.00016676400000000327, 0.00016658299999999793, 0.00016633400000000062...</msg>
<status status="PASS" starttime="20201115 23:02:25.587" endtime="20201115 23:02:25.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.604" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201115 23:02:25.603" endtime="20201115 23:02:25.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.607" level="INFO">VALUE: [0.00016700000000000048, 0.00016647300000000032, 0.00016691699999999907, 0.00016672300000000057, 0.00016656999999999783, 0.00016676400000000327, 0.00016658299999999793, 0.00016633400000000062, 0.00016694500000000168, 0.00016688899999999993, 0.00016637499999999986, 0.00016647200000000084, 0.00016644500000000118, 0.00016700000000000048, 0.00016670800000000152, 0.0001670419999999992, 0.0001668189999999986, 0.00016675000000000023, 0.0001668610000000008, 0.0001669029999999995, 0.00016709800000000094, 0.0001664440000000017, 0.0001667220000000011, 0.0001667639999999998, 0.00016661100000000054, 0.000166402999999999, 0.0001665419999999987, 0.00016727799999999987, 0.00016677799999999937, 0.00016627700000000287, 0.00016665299999999925, 0.00016634700000000072, 0.0001671799999999994, 0.00016658400000000087, 0.00016673600000000066, 0.00016719399999999898, 0.00016700000000000048, 0.00016716699999999932, 0.00016688899999999646, 0.00016663900000000315, 0.00016709700000000494, 0.0001668340000000046, 0.0001669440000000022, 0.00016723600000000116, 0.00016666700000000229, 0.00016701400000000005, 0.00016684799999999722, 0.0001671519999999968, 0.0001665969999999975, 0.00016701400000000005]</msg>
<status status="PASS" starttime="20201115 23:02:25.605" endtime="20201115 23:02:25.607"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.601" endtime="20201115 23:02:25.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.610" endtime="20201115 23:02:25.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:25.614" endtime="20201115 23:02:25.633"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.612" endtime="20201115 23:02:25.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.609" endtime="20201115 23:02:25.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.240" endtime="20201115 23:02:25.634"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.238" endtime="20201115 23:02:25.635"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.237" endtime="20201115 23:02:25.635"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.637" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 77">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.645" endtime="20201115 23:02:25.667"></status>
</kw>
<msg timestamp="20201115 23:02:25.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.644" endtime="20201115 23:02:25.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:25.668" endtime="20201115 23:02:25.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.671" endtime="20201115 23:02:25.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.641" endtime="20201115 23:02:25.673"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.639" endtime="20201115 23:02:25.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.680" endtime="20201115 23:02:25.966"></status>
</kw>
<msg timestamp="20201115 23:02:25.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023973972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.678" endtime="20201115 23:02:25.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:25.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023973972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024142097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:25.970" endtime="20201115 23:02:25.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:25.978" endtime="20201115 23:02:25.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.676" endtime="20201115 23:02:25.980"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.674" endtime="20201115 23:02:25.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:25.985" level="INFO">${RESULT} = [{'time': 0.024142097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001681250000000016, 'source_diff': 0.0001681250000000016}, {'time': 0.024333417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:25.981" endtime="20201115 23:02:25.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:25.998" level="INFO">${ACCURACY} = {'diff': [0.0001681250000000016, 0.00016775000000000123, 0.00016747199999999837, 0.00016819500000000293, 0.00016777800000000037, 0.00016791599999999712, 0.00016786200000000126, 0.00016727799999999987,...</msg>
<status status="PASS" starttime="20201115 23:02:25.986" endtime="20201115 23:02:25.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.003" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.002" endtime="20201115 23:02:26.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.006" level="INFO">VALUE: [0.0001681250000000016, 0.00016775000000000123, 0.00016747199999999837, 0.00016819500000000293, 0.00016777800000000037, 0.00016791599999999712, 0.00016786200000000126, 0.00016727799999999987, 0.00016824999999999826, 0.00016800000000000148, 0.0001672770000000004, 0.00016783300000000265, 0.00016768099999999939, 0.00016784700000000222, 0.00016766699999999982, 0.00016787500000000136, 0.00016772199999999862, 0.00016816700000000032, 0.000168096999999999, 0.00016777800000000037, 0.00016765300000000025, 0.00016769499999999896, 0.00016797199999999887, 0.00016747199999999837, 0.00016752700000000065, 0.00016769399999999948, 0.000167999999999998, 0.0001678610000000018, 0.0001674579999999988, 0.00016758299999999893, 0.00016734700000000172, 0.00016773600000000166, 0.00016788900000000093, 0.0001674160000000001, 0.00016806999999999933, 0.0001674449999999987, 0.00016795800000000277, 0.0001677220000000021, 0.00016776299999999786, 0.0001673189999999991, 0.00016795800000000277, 0.00016731999999999858, 0.00016777799999999343, 0.00016823600000000216, 0.00016752800000000012, 0.0001680839999999989, 0.00016737500000000433, 0.000167709000000002, 0.0001681389999999977, 0.0001674310000000026]</msg>
<status status="PASS" starttime="20201115 23:02:26.004" endtime="20201115 23:02:26.006"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.999" endtime="20201115 23:02:26.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.009" endtime="20201115 23:02:26.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.012" endtime="20201115 23:02:26.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.011" endtime="20201115 23:02:26.032"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.007" endtime="20201115 23:02:26.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.638" endtime="20201115 23:02:26.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.636" endtime="20201115 23:02:26.033"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:25.635" endtime="20201115 23:02:26.033"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.036" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 78">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.044" endtime="20201115 23:02:26.065"></status>
</kw>
<msg timestamp="20201115 23:02:26.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.042" endtime="20201115 23:02:26.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.067" endtime="20201115 23:02:26.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.070" endtime="20201115 23:02:26.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.040" endtime="20201115 23:02:26.072"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.038" endtime="20201115 23:02:26.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.079" endtime="20201115 23:02:26.365"></status>
</kw>
<msg timestamp="20201115 23:02:26.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024150014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.077" endtime="20201115 23:02:26.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023981694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024150014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.369" endtime="20201115 23:02:26.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.377" endtime="20201115 23:02:26.379"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.075" endtime="20201115 23:02:26.380"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.073" endtime="20201115 23:02:26.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.384" level="INFO">${RESULT} = [{'time': 0.024150014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016831999999999958, 'source_diff': 0.00016831999999999958}, {'time': 0.024335417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.381" endtime="20201115 23:02:26.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.398" level="INFO">${ACCURACY} = {'diff': [0.00016831999999999958, 0.000168403000000001, 0.00016840299999999753, 0.00016844400000000023, 0.00016827800000000087, 0.00016865299999999778, 0.00016876399999999833, 0.00016829200000000044, ...</msg>
<status status="PASS" starttime="20201115 23:02:26.385" endtime="20201115 23:02:26.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.402" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.401" endtime="20201115 23:02:26.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.405" level="INFO">VALUE: [0.00016831999999999958, 0.000168403000000001, 0.00016840299999999753, 0.00016844400000000023, 0.00016827800000000087, 0.00016865299999999778, 0.00016876399999999833, 0.00016829200000000044, 0.0001690550000000013, 0.00016827800000000087, 0.00016874999999999876, 0.0001691519999999988, 0.00016883300000000018, 0.00016926399999999883, 0.0001685969999999995, 0.000168403000000001, 0.00016866700000000082, 0.00016851400000000155, 0.00016913900000000218, 0.0001688190000000006, 0.00016917999999999794, 0.00016850000000000198, 0.00016865299999999778, 0.00016861100000000254, 0.00016858299999999993, 0.00016863900000000168, 0.00016913799999999923, 0.00016833299999999968, 0.00016876299999999886, 0.00016845899999999928, 0.00016875000000000223, 0.00016844400000000023, 0.00016915299999999828, 0.00016863900000000168, 0.00016833299999999968, 0.00016836099999999882, 0.0001691939999999975, 0.0001683749999999984, 0.00016850000000000198, 0.000168791999999994, 0.0001684719999999959, 0.00016902800000000162, 0.0001692499999999958, 0.0001684589999999958, 0.00016902800000000162, 0.00016852800000000112, 0.0001692220000000036, 0.0001684169999999971, 0.00016899999999999554, 0.0001692640000000023]</msg>
<status status="PASS" starttime="20201115 23:02:26.403" endtime="20201115 23:02:26.405"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.399" endtime="20201115 23:02:26.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.408" endtime="20201115 23:02:26.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.411" endtime="20201115 23:02:26.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.410" endtime="20201115 23:02:26.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.406" endtime="20201115 23:02:26.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.036" endtime="20201115 23:02:26.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.035" endtime="20201115 23:02:26.432"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.034" endtime="20201115 23:02:26.433"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.435" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 79">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.443" endtime="20201115 23:02:26.465"></status>
</kw>
<msg timestamp="20201115 23:02:26.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.442" endtime="20201115 23:02:26.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.467" endtime="20201115 23:02:26.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.470" endtime="20201115 23:02:26.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.439" endtime="20201115 23:02:26.472"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.437" endtime="20201115 23:02:26.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.479" endtime="20201115 23:02:26.765"></status>
</kw>
<msg timestamp="20201115 23:02:26.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024997208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.477" endtime="20201115 23:02:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024827583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024997208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.769" endtime="20201115 23:02:26.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.777" endtime="20201115 23:02:26.779"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.475" endtime="20201115 23:02:26.780"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.473" endtime="20201115 23:02:26.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:26.784" level="INFO">${RESULT} = [{'time': 0.024997208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016962499999999964, 'source_diff': 0.00016962499999999964}, {'time': 0.025198556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:26.781" endtime="20201115 23:02:26.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:26.798" level="INFO">${ACCURACY} = {'diff': [0.00016962499999999964, 0.0001693749999999994, 0.00016956900000000136, 0.00016961100000000007, 0.00016938899999999896, 0.00016933399999999668, 0.00016993100000000164, 0.00016968099999999792,...</msg>
<status status="PASS" starttime="20201115 23:02:26.785" endtime="20201115 23:02:26.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.803" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201115 23:02:26.802" endtime="20201115 23:02:26.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.805" level="INFO">VALUE: [0.00016962499999999964, 0.0001693749999999994, 0.00016956900000000136, 0.00016961100000000007, 0.00016938899999999896, 0.00016933399999999668, 0.00016993100000000164, 0.00016968099999999792, 0.0001699030000000025, 0.00016930599999999754, 0.00017005499999999882, 0.0001696389999999992, 0.00017004199999999872, 0.00017007000000000133, 0.00016969400000000148, 0.0001700550000000023, 0.00016980499999999857, 0.00016952800000000212, 0.00016948599999999994, 0.00016963900000000268, 0.00017012500000000014, 0.00016955499999999832, 0.00016956900000000136, 0.0001694580000000008, 0.0001694450000000007, 0.00016956999999999736, 0.00016963900000000268, 0.000170097000000001, 0.0001697779999999989, 0.0001695970000000005, 0.0001696519999999993, 0.000169693999999998, 0.00016933400000000015, 0.0001702499999999968, 0.00016925000000000273, 0.00017018099999999842, 0.00017011100000000057, 0.0001698190000000016, 0.0001696949999999975, 0.00016944500000000418, 0.00016988899999999946, 0.00016984800000000022, 0.00017000000000000348, 0.00016976399999999586, 0.00016956900000000136, 0.00016962499999999964, 0.00016950000000000298, 0.0001694860000000034, 0.0001699310000000051, 0.0001700840000000009]</msg>
<status status="PASS" starttime="20201115 23:02:26.804" endtime="20201115 23:02:26.806"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.799" endtime="20201115 23:02:26.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.808" endtime="20201115 23:02:26.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:26.812" endtime="20201115 23:02:26.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.810" endtime="20201115 23:02:26.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.807" endtime="20201115 23:02:26.832"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.436" endtime="20201115 23:02:26.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.434" endtime="20201115 23:02:26.833"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.433" endtime="20201115 23:02:26.833"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.835" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 80">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.844" endtime="20201115 23:02:26.865"></status>
</kw>
<msg timestamp="20201115 23:02:26.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.842" endtime="20201115 23:02:26.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:26.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:26.867" endtime="20201115 23:02:26.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.869" endtime="20201115 23:02:26.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.840" endtime="20201115 23:02:26.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.837" endtime="20201115 23:02:26.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:26.879" endtime="20201115 23:02:27.166"></status>
</kw>
<msg timestamp="20201115 23:02:27.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024133806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:26.877" endtime="20201115 23:02:27.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023962722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024133806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.170" endtime="20201115 23:02:27.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.178" endtime="20201115 23:02:27.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.874" endtime="20201115 23:02:27.180"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.873" endtime="20201115 23:02:27.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.185" level="INFO">${RESULT} = [{'time': 0.024133806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001710840000000019, 'source_diff': 0.0001710840000000019}, {'time': 0.024337194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.181" endtime="20201115 23:02:27.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.198" level="INFO">${ACCURACY} = {'diff': [0.0001710840000000019, 0.00017112500000000114, 0.00017118099999999942, 0.0001704169999999991, 0.00017080599999999904, 0.00017058299999999846, 0.00017058399999999793, 0.0001704719999999979, 0...</msg>
<status status="PASS" starttime="20201115 23:02:27.186" endtime="20201115 23:02:27.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.202" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.201" endtime="20201115 23:02:27.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.205" level="INFO">VALUE: [0.0001710840000000019, 0.00017112500000000114, 0.00017118099999999942, 0.0001704169999999991, 0.00017080599999999904, 0.00017058299999999846, 0.00017058399999999793, 0.0001704719999999979, 0.00017048599999999747, 0.00017109699999999853, 0.00017029199999999897, 0.00017115300000000028, 0.00017098599999999797, 0.00017095799999999883, 0.00017068099999999892, 0.00017095799999999883, 0.0001704169999999991, 0.0001702499999999968, 0.0001711520000000008, 0.00017109699999999853, 0.00017072200000000162, 0.0001705000000000005, 0.00017084699999999828, 0.00017101400000000058, 0.0001711390000000007, 0.0001708199999999986, 0.0001709169999999996, 0.00017040299999999953, 0.00017079199999999947, 0.0001702779999999994, 0.00017029200000000244, 0.00017070900000000153, 0.00017080499999999957, 0.0001709719999999984, 0.0001707779999999999, 0.00017083399999999818, 0.00017041599999999962, 0.00017118100000000289, 0.00017076300000000433, 0.00017049999999999704, 0.00017111200000000104, 0.0001712640000000043, 0.0001712220000000056, 0.0001705550000000028, 0.00017072199999999815, 0.00017084700000000175, 0.00017079100000000347, 0.00017045900000000475, 0.00017112500000000114, 0.00017038899999999996]</msg>
<status status="PASS" starttime="20201115 23:02:27.203" endtime="20201115 23:02:27.205"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.199" endtime="20201115 23:02:27.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.208" endtime="20201115 23:02:27.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.211" endtime="20201115 23:02:27.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.210" endtime="20201115 23:02:27.231"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.206" endtime="20201115 23:02:27.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.836" endtime="20201115 23:02:27.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.834" endtime="20201115 23:02:27.232"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:26.833" endtime="20201115 23:02:27.233"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.235" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 81">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.243" endtime="20201115 23:02:27.265"></status>
</kw>
<msg timestamp="20201115 23:02:27.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.242" endtime="20201115 23:02:27.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.266" endtime="20201115 23:02:27.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.269" endtime="20201115 23:02:27.271"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.239" endtime="20201115 23:02:27.272"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.237" endtime="20201115 23:02:27.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.278" endtime="20201115 23:02:27.564"></status>
</kw>
<msg timestamp="20201115 23:02:27.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024053472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.277" endtime="20201115 23:02:27.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024053472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.568" endtime="20201115 23:02:27.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.576" endtime="20201115 23:02:27.578"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.274" endtime="20201115 23:02:27.579"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.273" endtime="20201115 23:02:27.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.583" level="INFO">${RESULT} = [{'time': 0.024225403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017193100000000017, 'source_diff': 0.00017193100000000017}, {'time': 0.024417764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:27.580" endtime="20201115 23:02:27.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.596" level="INFO">${ACCURACY} = {'diff': [0.00017193100000000017, 0.00017132000000000258, 0.0001718750000000019, 0.0001717499999999983, 0.00017163799999999826, 0.00017131899999999964, 0.00017151400000000108, 0.00017162500000000164, ...</msg>
<status status="PASS" starttime="20201115 23:02:27.584" endtime="20201115 23:02:27.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.601" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.600" endtime="20201115 23:02:27.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.603" level="INFO">VALUE: [0.00017193100000000017, 0.00017132000000000258, 0.0001718750000000019, 0.0001717499999999983, 0.00017163799999999826, 0.00017131899999999964, 0.00017151400000000108, 0.00017162500000000164, 0.00017172199999999915, 0.00017165300000000078, 0.0001714589999999988, 0.00017158299999999946, 0.00017170800000000305, 0.00017229200000000097, 0.00017126400000000083, 0.00017211100000000257, 0.00017184699999999928, 0.00017156999999999936, 0.00017133399999999868, 0.00017140300000000053, 0.00017190299999999756, 0.0001717780000000009, 0.00017158299999999946, 0.00017220800000000008, 0.00017227799999999793, 0.00017125000000000126, 0.000172000000000002, 0.00017136099999999835, 0.00017159699999999903, 0.0001718329999999997, 0.00017151400000000108, 0.00017159699999999903, 0.00017222199999999965, 0.00017190300000000103, 0.00017134700000000225, 0.0001719170000000006, 0.00017208299999999996, 0.00017202799999999768, 0.00017136100000000182, 0.0001715139999999976, 0.00017172199999999915, 0.00017136100000000182, 0.00017159699999999556, 0.00017184700000000275, 0.00017183299999999624, 0.0001721669999999939, 0.00017204199999999725, 0.00017193100000000017, 0.00017144499999999924, 0.00017193100000000017]</msg>
<status status="PASS" starttime="20201115 23:02:27.602" endtime="20201115 23:02:27.604"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.597" endtime="20201115 23:02:27.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.606" endtime="20201115 23:02:27.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:27.610" endtime="20201115 23:02:27.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.608" endtime="20201115 23:02:27.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.605" endtime="20201115 23:02:27.630"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.236" endtime="20201115 23:02:27.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.234" endtime="20201115 23:02:27.631"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.233" endtime="20201115 23:02:27.631"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.633" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 82">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.642" endtime="20201115 23:02:27.664"></status>
</kw>
<msg timestamp="20201115 23:02:27.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.641" endtime="20201115 23:02:27.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:27.665" endtime="20201115 23:02:27.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.668" endtime="20201115 23:02:27.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.638" endtime="20201115 23:02:27.670"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.635" endtime="20201115 23:02:27.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.677" endtime="20201115 23:02:27.963"></status>
</kw>
<msg timestamp="20201115 23:02:27.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024474222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.675" endtime="20201115 23:02:27.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024474222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:27.967" endtime="20201115 23:02:27.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:27.975" endtime="20201115 23:02:27.976"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.673" endtime="20201115 23:02:27.977"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.671" endtime="20201115 23:02:27.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:27.981" level="INFO">${RESULT} = [{'time': 0.024646611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001723889999999985, 'source_diff': 0.0001723889999999985}, {'time': 0.024844889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:27.978" endtime="20201115 23:02:27.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:27.995" level="INFO">${ACCURACY} = {'diff': [0.0001723889999999985, 0.00017319499999999752, 0.00017269499999999702, 0.00017298699999999945, 0.00017281900000000114, 0.00017276400000000233, 0.0001730699999999974, 0.0001726109999999996, 0...</msg>
<status status="PASS" starttime="20201115 23:02:27.982" endtime="20201115 23:02:27.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:27.999" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201115 23:02:27.998" endtime="20201115 23:02:28.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.002" level="INFO">VALUE: [0.0001723889999999985, 0.00017319499999999752, 0.00017269499999999702, 0.00017298699999999945, 0.00017281900000000114, 0.00017276400000000233, 0.0001730699999999974, 0.0001726109999999996, 0.00017287499999999942, 0.00017320799999999761, 0.00017225000000000226, 0.00017299999999999954, 0.00017298599999999997, 0.00017295800000000083, 0.00017258300000000046, 0.0001728330000000007, 0.00017305499999999835, 0.0001730139999999991, 0.0001725139999999986, 0.0001730560000000013, 0.00017315300000000228, 0.00017262499999999917, 0.00017252799999999818, 0.0001722780000000014, 0.0001728200000000006, 0.00017266699999999788, 0.0001731940000000015, 0.00017290299999999856, 0.0001725690000000009, 0.00017256899999999742, 0.00017298699999999945, 0.00017304199999999825, 0.00017290299999999856, 0.00017242999999999772, 0.00017230600000000054, 0.00017280500000000504, 0.00017288800000000298, 0.00017232000000000358, 0.00017277699999999896, 0.00017322200000000065, 0.00017326399999999936, 0.00017259699999999656, 0.0001729170000000016, 0.00017238900000000196, 0.00017229200000000444, 0.00017269399999999407, 0.0001730699999999974, 0.0001723339999999962, 0.00017238900000000196, 0.000172582999999997]</msg>
<status status="PASS" starttime="20201115 23:02:28.000" endtime="20201115 23:02:28.002"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.996" endtime="20201115 23:02:28.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.005" endtime="20201115 23:02:28.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.009" endtime="20201115 23:02:28.028"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.007" endtime="20201115 23:02:28.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.003" endtime="20201115 23:02:28.029"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.634" endtime="20201115 23:02:28.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.632" endtime="20201115 23:02:28.030"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:27.631" endtime="20201115 23:02:28.030"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.032" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 83">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.041" endtime="20201115 23:02:28.063"></status>
</kw>
<msg timestamp="20201115 23:02:28.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.039" endtime="20201115 23:02:28.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.065" endtime="20201115 23:02:28.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.067" endtime="20201115 23:02:28.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.036" endtime="20201115 23:02:28.069"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.034" endtime="20201115 23:02:28.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.076" endtime="20201115 23:02:28.362"></status>
</kw>
<msg timestamp="20201115 23:02:28.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025030861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.075" endtime="20201115 23:02:28.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024857319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025030861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.366" endtime="20201115 23:02:28.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.374" endtime="20201115 23:02:28.376"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.072" endtime="20201115 23:02:28.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.070" endtime="20201115 23:02:28.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.381" level="INFO">${RESULT} = [{'time': 0.025030861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017354200000000222, 'source_diff': 0.00017354200000000222}, {'time': 0.02522225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201115 23:02:28.378" endtime="20201115 23:02:28.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.395" level="INFO">${ACCURACY} = {'diff': [0.00017354200000000222, 0.0001737780000000029, 0.00017340299999999906, 0.00017384700000000128, 0.00017340299999999906, 0.0001733889999999995, 0.0001734590000000008, 0.00017413900000000024, 0...</msg>
<status status="PASS" starttime="20201115 23:02:28.382" endtime="20201115 23:02:28.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.400" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.399" endtime="20201115 23:02:28.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.402" level="INFO">VALUE: [0.00017354200000000222, 0.0001737780000000029, 0.00017340299999999906, 0.00017384700000000128, 0.00017340299999999906, 0.0001733889999999995, 0.0001734590000000008, 0.00017413900000000024, 0.00017363899999999974, 0.0001737500000000003, 0.000173791999999999, 0.00017372199999999768, 0.00017347300000000038, 0.00017327699999999946, 0.0001736110000000006, 0.00017390299999999956, 0.00017333400000000068, 0.00017384700000000128, 0.00017390299999999956, 0.00017376399999999986, 0.00017388800000000051, 0.00017380600000000204, 0.000173582999999998, 0.00017402699999999674, 0.00017398600000000097, 0.00017365199999999983, 0.00017387499999999695, 0.00017336100000000035, 0.00017369399999999854, 0.00017320799999999761, 0.00017416699999999938, 0.00017391599999999965, 0.00017370799999999811, 0.00017365299999999584, 0.00017383299999999824, 0.00017388899999999652, 0.00017387499999999695, 0.00017361100000000407, 0.00017376399999999986, 0.0001740699999999984, 0.0001737500000000003, 0.00017408300000000543, 0.00017334700000000425, 0.00017377799999999943, 0.00017406899999999892, 0.00017395800000000183, 0.00017365300000000278, 0.0001735970000000045, 0.00017359699999999756, 0.0001734720000000009]</msg>
<status status="PASS" starttime="20201115 23:02:28.401" endtime="20201115 23:02:28.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.396" endtime="20201115 23:02:28.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.406" endtime="20201115 23:02:28.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.410" endtime="20201115 23:02:28.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.408" endtime="20201115 23:02:28.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.404" endtime="20201115 23:02:28.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.033" endtime="20201115 23:02:28.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.031" endtime="20201115 23:02:28.431"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.030" endtime="20201115 23:02:28.431"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 84">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.441" endtime="20201115 23:02:28.463"></status>
</kw>
<msg timestamp="20201115 23:02:28.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.440" endtime="20201115 23:02:28.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.465" endtime="20201115 23:02:28.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.467" endtime="20201115 23:02:28.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.437" endtime="20201115 23:02:28.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.435" endtime="20201115 23:02:28.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.476" endtime="20201115 23:02:28.762"></status>
</kw>
<msg timestamp="20201115 23:02:28.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024195042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.475" endtime="20201115 23:02:28.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024195042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.766" endtime="20201115 23:02:28.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.774" endtime="20201115 23:02:28.775"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.472" endtime="20201115 23:02:28.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.470" endtime="20201115 23:02:28.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:28.780" level="INFO">${RESULT} = [{'time': 0.024195042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017523599999999875, 'source_diff': 0.00017523599999999875}, {'time': 0.024392417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:28.777" endtime="20201115 23:02:28.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:28.794" level="INFO">${ACCURACY} = {'diff': [0.00017523599999999875, 0.00017508399999999896, 0.0001745140000000006, 0.0001751249999999982, 0.00017484800000000175, 0.00017500000000000154, 0.0001751249999999982, 0.00017468099999999945, 0...</msg>
<status status="PASS" starttime="20201115 23:02:28.781" endtime="20201115 23:02:28.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.798" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201115 23:02:28.797" endtime="20201115 23:02:28.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.801" level="INFO">VALUE: [0.00017523599999999875, 0.00017508399999999896, 0.0001745140000000006, 0.0001751249999999982, 0.00017484800000000175, 0.00017500000000000154, 0.0001751249999999982, 0.00017468099999999945, 0.0001746110000000016, 0.00017520799999999961, 0.00017455499999999985, 0.00017481899999999967, 0.000175179999999997, 0.00017495899999999884, 0.00017520800000000308, 0.00017429100000000003, 0.00017505500000000035, 0.00017431899999999917, 0.00017470799999999911, 0.00017437500000000092, 0.00017445799999999886, 0.00017520799999999961, 0.00017483299999999924, 0.00017426400000000036, 0.00017490300000000056, 0.00017454199999999975, 0.0001746110000000016, 0.00017461200000000107, 0.0001745560000000028, 0.000174889000000001, 0.0001745140000000006, 0.0001749590000000023, 0.0001746950000000025, 0.00017455499999999985, 0.0001750829999999995, 0.00017481999999999914, 0.0001745130000000046, 0.0001744170000000031, 0.00017518000000000394, 0.0001744720000000019, 0.0001750140000000011, 0.00017511099999999863, 0.00017512500000000514, 0.00017481999999999914, 0.00017465299999999684, 0.00017433300000000568, 0.00017497199999999546, 0.00017436199999999735, 0.00017509699999999906, 0.00017506899999999992]</msg>
<status status="PASS" starttime="20201115 23:02:28.799" endtime="20201115 23:02:28.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.795" endtime="20201115 23:02:28.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.804" endtime="20201115 23:02:28.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:28.808" endtime="20201115 23:02:28.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.806" endtime="20201115 23:02:28.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.803" endtime="20201115 23:02:28.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.434" endtime="20201115 23:02:28.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.432" endtime="20201115 23:02:28.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.431" endtime="20201115 23:02:28.829"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 85">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.840" endtime="20201115 23:02:28.861"></status>
</kw>
<msg timestamp="20201115 23:02:28.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.838" endtime="20201115 23:02:28.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:28.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:28.863" endtime="20201115 23:02:28.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.865" endtime="20201115 23:02:28.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.835" endtime="20201115 23:02:28.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.833" endtime="20201115 23:02:28.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:28.875" endtime="20201115 23:02:29.160"></status>
</kw>
<msg timestamp="20201115 23:02:29.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023988569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024164417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:28.873" endtime="20201115 23:02:29.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023988569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024164417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.165" endtime="20201115 23:02:29.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.173" endtime="20201115 23:02:29.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.870" endtime="20201115 23:02:29.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.869" endtime="20201115 23:02:29.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.180" level="INFO">${RESULT} = [{'time': 0.024164417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017584799999999928, 'source_diff': 0.00017584799999999928}, {'time': 0.024360639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:29.176" endtime="20201115 23:02:29.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.194" level="INFO">${ACCURACY} = {'diff': [0.00017584799999999928, 0.00017545799999999986, 0.00017615199999999887, 0.00017584799999999928, 0.00017588899999999852, 0.00017613900000000224, 0.000175583, 0.00017577799999999796, 0.0001760...</msg>
<status status="PASS" starttime="20201115 23:02:29.181" endtime="20201115 23:02:29.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.198" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.197" endtime="20201115 23:02:29.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.201" level="INFO">VALUE: [0.00017584799999999928, 0.00017545799999999986, 0.00017615199999999887, 0.00017584799999999928, 0.00017588899999999852, 0.00017613900000000224, 0.000175583, 0.00017577799999999796, 0.0001760830000000005, 0.00017541700000000063, 0.00017587499999999895, 0.0001761119999999991, 0.0001757639999999984, 0.00017558399999999946, 0.00017599999999999907, 0.00017523600000000222, 0.00017604100000000178, 0.0001753890000000015, 0.0001760830000000005, 0.000175792000000001, 0.00017550000000000204, 0.0001758050000000011, 0.00017597199999999993, 0.0001755409999999978, 0.00017554199999999728, 0.00017566700000000088, 0.00017573599999999925, 0.0001753469999999993, 0.00017569400000000054, 0.00017545899999999934, 0.00017549999999999857, 0.0001758469999999998, 0.00017590300000000156, 0.0001754440000000003, 0.00017624999999999932, 0.00017588899999999852, 0.00017577799999999796, 0.00017580600000000057, 0.0001752920000000005, 0.00017601300000000264, 0.00017520800000000308, 0.00017576400000000186, 0.00017573599999999578, 0.00017622300000000313, 0.00017615299999999834, 0.00017548599999999553, 0.00017541699999999716, 0.00017622199999999671, 0.00017615300000000528, 0.000175792000000001]</msg>
<status status="PASS" starttime="20201115 23:02:29.199" endtime="20201115 23:02:29.201"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.195" endtime="20201115 23:02:29.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.204" endtime="20201115 23:02:29.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.207" endtime="20201115 23:02:29.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.206" endtime="20201115 23:02:29.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.202" endtime="20201115 23:02:29.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.832" endtime="20201115 23:02:29.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.830" endtime="20201115 23:02:29.229"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:28.829" endtime="20201115 23:02:29.229"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.231" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 86">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.239" endtime="20201115 23:02:29.261"></status>
</kw>
<msg timestamp="20201115 23:02:29.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.238" endtime="20201115 23:02:29.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.263" endtime="20201115 23:02:29.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.265" endtime="20201115 23:02:29.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.235" endtime="20201115 23:02:29.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.233" endtime="20201115 23:02:29.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.274" endtime="20201115 23:02:29.559"></status>
</kw>
<msg timestamp="20201115 23:02:29.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024010153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.273" endtime="20201115 23:02:29.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024010153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.564" endtime="20201115 23:02:29.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.572" endtime="20201115 23:02:29.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.270" endtime="20201115 23:02:29.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.268" endtime="20201115 23:02:29.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.579" level="INFO">${RESULT} = [{'time': 0.024187167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017701399999999964, 'source_diff': 0.00017701399999999964}, {'time': 0.024392486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:29.575" endtime="20201115 23:02:29.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.592" level="INFO">${ACCURACY} = {'diff': [0.00017701399999999964, 0.000176486, 0.0001762920000000015, 0.00017643099999999773, 0.00017715299999999934, 0.00017720799999999814, 0.00017701399999999964, 0.0001769440000000018, 0.000176903...</msg>
<status status="PASS" starttime="20201115 23:02:29.580" endtime="20201115 23:02:29.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.596" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.595" endtime="20201115 23:02:29.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.599" level="INFO">VALUE: [0.00017701399999999964, 0.000176486, 0.0001762920000000015, 0.00017643099999999773, 0.00017715299999999934, 0.00017720799999999814, 0.00017701399999999964, 0.0001769440000000018, 0.00017690300000000256, 0.00017620800000000061, 0.0001769310000000017, 0.0001765409999999988, 0.00017645800000000086, 0.00017662500000000317, 0.00017725000000000032, 0.00017662500000000317, 0.0001770830000000015, 0.0001769029999999991, 0.0001769999999999966, 0.00017694500000000127, 0.00017666599999999893, 0.00017701399999999964, 0.00017644399999999782, 0.00017673600000000025, 0.00017661100000000013, 0.00017709700000000106, 0.00017700000000000007, 0.00017643000000000172, 0.00017644500000000077, 0.00017661100000000013, 0.00017644399999999782, 0.00017645800000000086, 0.00017702799999999921, 0.0001767090000000006, 0.00017693000000000222, 0.0001764440000000013, 0.00017659800000000003, 0.00017686100000000038, 0.00017722300000000413, 0.00017682000000000114, 0.00017713899999999977, 0.00017688899999999952, 0.0001769579999999979, 0.00017637499999999945, 0.00017709700000000106, 0.0001771669999999989, 0.0001771250000000002, 0.0001768470000000008, 0.0001768470000000008, 0.00017687499999999995]</msg>
<status status="PASS" starttime="20201115 23:02:29.598" endtime="20201115 23:02:29.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.593" endtime="20201115 23:02:29.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.602" endtime="20201115 23:02:29.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:29.605" endtime="20201115 23:02:29.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.604" endtime="20201115 23:02:29.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.600" endtime="20201115 23:02:29.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.232" endtime="20201115 23:02:29.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.230" endtime="20201115 23:02:29.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.229" endtime="20201115 23:02:29.627"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.629" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 87">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.637" endtime="20201115 23:02:29.660"></status>
</kw>
<msg timestamp="20201115 23:02:29.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.636" endtime="20201115 23:02:29.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:29.662" endtime="20201115 23:02:29.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.664" endtime="20201115 23:02:29.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.633" endtime="20201115 23:02:29.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.631" endtime="20201115 23:02:29.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.674" endtime="20201115 23:02:29.959"></status>
</kw>
<msg timestamp="20201115 23:02:29.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024959319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025136722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.672" endtime="20201115 23:02:29.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024959319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025136722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:29.963" endtime="20201115 23:02:29.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:29.971" endtime="20201115 23:02:29.973"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.669" endtime="20201115 23:02:29.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.667" endtime="20201115 23:02:29.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:29.978" level="INFO">${RESULT} = [{'time': 0.025136722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001774029999999996, 'source_diff': 0.0001774029999999996}, {'time': 0.025336056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:29.975" endtime="20201115 23:02:29.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:29.993" level="INFO">${ACCURACY} = {'diff': [0.0001774029999999996, 0.0001776120000000006, 0.00017813900000000077, 0.0001777090000000016, 0.00017763900000000027, 0.00017820800000000261, 0.00017813900000000077, 0.00017786100000000138, 0...</msg>
<status status="PASS" starttime="20201115 23:02:29.979" endtime="20201115 23:02:29.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:29.997" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201115 23:02:29.996" endtime="20201115 23:02:29.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.000" level="INFO">VALUE: [0.0001774029999999996, 0.0001776120000000006, 0.00017813900000000077, 0.0001777090000000016, 0.00017763900000000027, 0.00017820800000000261, 0.00017813900000000077, 0.00017786100000000138, 0.00017750000000000057, 0.0001778189999999992, 0.00017792999999999976, 0.00017761100000000113, 0.00017815300000000034, 0.00017761100000000113, 0.00017769399999999907, 0.00017801400000000064, 0.00017787500000000095, 0.0001777640000000004, 0.00017822200000000218, 0.00017727799999999946, 0.00017745899999999787, 0.00017769400000000254, 0.00017763900000000027, 0.00017747199999999796, 0.00017737499999999698, 0.00017729099999999956, 0.00017750000000000057, 0.00017800000000000107, 0.0001777640000000004, 0.00017805599999999935, 0.00017755499999999938, 0.00017775000000000082, 0.0001778329999999953, 0.00017776399999999692, 0.00017792999999999976, 0.00017741599999999969, 0.00017756900000000242, 0.0001776669999999994, 0.00017768000000000644, 0.00017748599999999753, 0.0001779579999999989, 0.0001776250000000007, 0.0001776250000000007, 0.0001774590000000048, 0.00017736200000000035, 0.00017763900000000027, 0.00017758399999999452, 0.00017792999999999976, 0.00017740200000000012, 0.0001774579999999984]</msg>
<status status="PASS" starttime="20201115 23:02:29.998" endtime="20201115 23:02:30.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.994" endtime="20201115 23:02:30.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.003" endtime="20201115 23:02:30.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.006" endtime="20201115 23:02:30.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.005" endtime="20201115 23:02:30.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.001" endtime="20201115 23:02:30.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.630" endtime="20201115 23:02:30.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.628" endtime="20201115 23:02:30.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:29.627" endtime="20201115 23:02:30.027"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.030" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 88">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.038" endtime="20201115 23:02:30.060"></status>
</kw>
<msg timestamp="20201115 23:02:30.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.036" endtime="20201115 23:02:30.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.061" endtime="20201115 23:02:30.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.069" endtime="20201115 23:02:30.070"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.034" endtime="20201115 23:02:30.071"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.032" endtime="20201115 23:02:30.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.078" endtime="20201115 23:02:30.363"></status>
</kw>
<msg timestamp="20201115 23:02:30.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023932194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.076" endtime="20201115 23:02:30.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023932194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024111389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.367" endtime="20201115 23:02:30.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.376" endtime="20201115 23:02:30.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.074" endtime="20201115 23:02:30.378"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.072" endtime="20201115 23:02:30.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.382" level="INFO">${RESULT} = [{'time': 0.024111389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017919500000000005, 'source_diff': 0.00017919500000000005}, {'time': 0.024305792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:30.379" endtime="20201115 23:02:30.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.395" level="INFO">${ACCURACY} = {'diff': [0.00017919500000000005, 0.000179277999999998, 0.00017883399999999924, 0.00017920800000000014, 0.00017836199999999788, 0.0001783609999999984, 0.0001786250000000017, 0.00017876399999999792, 0....</msg>
<status status="PASS" starttime="20201115 23:02:30.383" endtime="20201115 23:02:30.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.400" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.399" endtime="20201115 23:02:30.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.402" level="INFO">VALUE: [0.00017919500000000005, 0.000179277999999998, 0.00017883399999999924, 0.00017920800000000014, 0.00017836199999999788, 0.0001783609999999984, 0.0001786250000000017, 0.00017876399999999792, 0.00017894400000000033, 0.0001784030000000006, 0.0001784579999999994, 0.00017876399999999792, 0.00017865299999999737, 0.00017902800000000121, 0.00017858299999999952, 0.0001786389999999978, 0.00017888900000000152, 0.0001784449999999993, 0.00017883299999999977, 0.00017873600000000225, 0.00017852799999999724, 0.00017829200000000003, 0.00017861199999999813, 0.00017877699999999802, 0.0001789579999999999, 0.00017870899999999912, 0.00017838900000000102, 0.00017919500000000005, 0.00017915300000000134, 0.00017870799999999964, 0.00017862499999999823, 0.00017920800000000014, 0.00017848599999999853, 0.00017913900000000177, 0.00017879200000000053, 0.00017833299999999927, 0.00017838900000000102, 0.000178277999999997, 0.0001790700000000034, 0.0001785700000000029, 0.00017852699999999777, 0.0001783340000000022, 0.00017827700000000446, 0.00017843099999999973, 0.00017848599999999853, 0.00017926399999999842, 0.00017873599999999878, 0.00017891600000000119, 0.00017834699999999537, 0.0001790140000000051]</msg>
<status status="PASS" starttime="20201115 23:02:30.401" endtime="20201115 23:02:30.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.396" endtime="20201115 23:02:30.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.406" endtime="20201115 23:02:30.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.409" endtime="20201115 23:02:30.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.408" endtime="20201115 23:02:30.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.404" endtime="20201115 23:02:30.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.030" endtime="20201115 23:02:30.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.029" endtime="20201115 23:02:30.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.028" endtime="20201115 23:02:30.430"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 89">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.441" endtime="20201115 23:02:30.463"></status>
</kw>
<msg timestamp="20201115 23:02:30.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.440" endtime="20201115 23:02:30.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.465" endtime="20201115 23:02:30.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.467" endtime="20201115 23:02:30.469"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.437" endtime="20201115 23:02:30.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.435" endtime="20201115 23:02:30.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.476" endtime="20201115 23:02:30.762"></status>
</kw>
<msg timestamp="20201115 23:02:30.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024518778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024699028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.475" endtime="20201115 23:02:30.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024518778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024699028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:30.766" endtime="20201115 23:02:30.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.774" endtime="20201115 23:02:30.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.472" endtime="20201115 23:02:30.776"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.471" endtime="20201115 23:02:30.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:30.781" level="INFO">${RESULT} = [{'time': 0.024699028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018024999999999985, 'source_diff': 0.00018024999999999985}, {'time': 0.024902375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:30.777" endtime="20201115 23:02:30.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:30.794" level="INFO">${ACCURACY} = {'diff': [0.00018024999999999985, 0.00017948599999999953, 0.0001799999999999996, 0.00017918100000000048, 0.00017938900000000202, 0.0001799999999999996, 0.00017998600000000003, 0.00017956900000000095, ...</msg>
<status status="PASS" starttime="20201115 23:02:30.782" endtime="20201115 23:02:30.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.798" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201115 23:02:30.797" endtime="20201115 23:02:30.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.801" level="INFO">VALUE: [0.00018024999999999985, 0.00017948599999999953, 0.0001799999999999996, 0.00017918100000000048, 0.00017938900000000202, 0.0001799999999999996, 0.00017998600000000003, 0.00017956900000000095, 0.00017973599999999978, 0.00017932000000000017, 0.0001799450000000008, 0.00017987499999999948, 0.00017951399999999867, 0.00017956899999999748, 0.00017994400000000133, 0.00017993100000000123, 0.0001801389999999993, 0.00017975000000000282, 0.00017938899999999855, 0.00017957000000000042, 0.00017984700000000034, 0.00018002699999999927, 0.0001795410000000018, 0.0001799030000000021, 0.00017933300000000027, 0.00017969400000000108, 0.00017981899999999773, 0.0001796800000000015, 0.00017951400000000214, 0.00017997200000000046, 0.0001801109999999967, 0.00017956900000000095, 0.00017923599999999928, 0.00018004200000000178, 0.00017979199999999806, 0.00017974999999999935, 0.00018016699999999497, 0.0001799309999999943, 0.00017983399999999677, 0.0001795700000000039, 0.00017984800000000328, 0.00017976399999999892, 0.00017972199999999328, 0.00017951399999999867, 0.0001796250000000027, 0.00018008400000000396, 0.00017934699999999637, 0.0001799580000000009, 0.0001796800000000015, 0.0001794999999999991]</msg>
<status status="PASS" starttime="20201115 23:02:30.799" endtime="20201115 23:02:30.801"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.795" endtime="20201115 23:02:30.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.804" endtime="20201115 23:02:30.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:30.808" endtime="20201115 23:02:30.827"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.806" endtime="20201115 23:02:30.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.802" endtime="20201115 23:02:30.828"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.433" endtime="20201115 23:02:30.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.431" endtime="20201115 23:02:30.829"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.431" endtime="20201115 23:02:30.829"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.831" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 90">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.840" endtime="20201115 23:02:30.862"></status>
</kw>
<msg timestamp="20201115 23:02:30.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.838" endtime="20201115 23:02:30.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:30.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:30.863" endtime="20201115 23:02:30.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.866" endtime="20201115 23:02:30.867"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.836" endtime="20201115 23:02:30.868"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.833" endtime="20201115 23:02:30.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:30.875" endtime="20201115 23:02:31.160"></status>
</kw>
<msg timestamp="20201115 23:02:31.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024018056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02419925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:30.873" endtime="20201115 23:02:31.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024018056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02419925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:31.164" endtime="20201115 23:02:31.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.173" endtime="20201115 23:02:31.174"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.871" endtime="20201115 23:02:31.175"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.869" endtime="20201115 23:02:31.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.179" level="INFO">${RESULT} = [{'time': 0.02419925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001811939999999991, 'source_diff': 0.0001811939999999991}, {'time': 0.024399597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:31.176" endtime="20201115 23:02:31.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.192" level="INFO">${ACCURACY} = {'diff': [0.0001811939999999991, 0.00018052799999999924, 0.00018116699999999944, 0.00018098600000000103, 0.00018116599999999997, 0.00018088900000000005, 0.00018069500000000155, 0.00018048600000000053,...</msg>
<status status="PASS" starttime="20201115 23:02:31.180" endtime="20201115 23:02:31.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.197" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.196" endtime="20201115 23:02:31.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.199" level="INFO">VALUE: [0.0001811939999999991, 0.00018052799999999924, 0.00018116699999999944, 0.00018098600000000103, 0.00018116599999999997, 0.00018088900000000005, 0.00018069500000000155, 0.00018048600000000053, 0.00018090200000000015, 0.00018052800000000271, 0.00018079199999999906, 0.00018062500000000023, 0.00018065299999999937, 0.0001811390000000003, 0.00018052799999999924, 0.0001810130000000007, 0.00018044400000000183, 0.00018072200000000122, 0.0001803060000000016, 0.0001810549999999994, 0.00018107000000000192, 0.00018094499999999833, 0.0001804580000000014, 0.00018119499999999858, 0.00018073600000000078, 0.00018056999999999795, 0.00018067999999999904, 0.00018051400000000314, 0.00018055599999999838, 0.00018066599999999947, 0.00018106899999999898, 0.0001805000000000001, 0.00018113800000000083, 0.00018038899999999955, 0.00018105599999999888, 0.00018040200000000312, 0.0001809580000000019, 0.00018090299999999615, 0.00018081899999999873, 0.0001805549999999989, 0.00018080499999999916, 0.0001811109999999977, 0.00018038900000000302, 0.00018079199999999906, 0.00018026399999999942, 0.0001803329999999978, 0.00018075000000000035, 0.00018080499999999916, 0.0001810000000000006, 0.00018106899999999898]</msg>
<status status="PASS" starttime="20201115 23:02:31.198" endtime="20201115 23:02:31.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.193" endtime="20201115 23:02:31.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.203" endtime="20201115 23:02:31.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.206" endtime="20201115 23:02:31.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.205" endtime="20201115 23:02:31.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.201" endtime="20201115 23:02:31.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.832" endtime="20201115 23:02:31.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.830" endtime="20201115 23:02:31.228"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:30.829" endtime="20201115 23:02:31.228"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.230" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 91">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.238" endtime="20201115 23:02:31.261"></status>
</kw>
<msg timestamp="20201115 23:02:31.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.237" endtime="20201115 23:02:31.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.263" endtime="20201115 23:02:31.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.266" endtime="20201115 23:02:31.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.234" endtime="20201115 23:02:31.268"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.232" endtime="20201115 23:02:31.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.275" endtime="20201115 23:02:31.560"></status>
</kw>
<msg timestamp="20201115 23:02:31.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025054111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025235667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.273" endtime="20201115 23:02:31.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025054111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025235667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.564" endtime="20201115 23:02:31.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.572" endtime="20201115 23:02:31.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.271" endtime="20201115 23:02:31.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.269" endtime="20201115 23:02:31.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.579" level="INFO">${RESULT} = [{'time': 0.025235667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018155599999999938, 'source_diff': 0.00018155599999999938}, {'time': 0.025432069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.576" endtime="20201115 23:02:31.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.593" level="INFO">${ACCURACY} = {'diff': [0.00018155599999999938, 0.00018126300000000095, 0.00018131899999999923, 0.00018209699999999912, 0.00018145900000000187, 0.00018148599999999807, 0.00018183399999999877, 0.00018145799999999893...</msg>
<status status="PASS" starttime="20201115 23:02:31.580" endtime="20201115 23:02:31.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.598" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.597" endtime="20201115 23:02:31.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.601" level="INFO">VALUE: [0.00018155599999999938, 0.00018126300000000095, 0.00018131899999999923, 0.00018209699999999912, 0.00018145900000000187, 0.00018148599999999807, 0.00018183399999999877, 0.00018145799999999893, 0.0001816809999999995, 0.0001816390000000008, 0.00018183400000000224, 0.00018130499999999966, 0.00018199999999999814, 0.00018126400000000042, 0.00018199999999999814, 0.00018216700000000044, 0.00018187500000000148, 0.00018172200000000222, 0.0001820000000000016, 0.00018149999999999764, 0.00018129200000000303, 0.00018199999999999814, 0.00018187500000000148, 0.00018165300000000037, 0.00018198600000000204, 0.0001821940000000001, 0.00018202800000000074, 0.0001812910000000001, 0.00018162499999999776, 0.00018186099999999844, 0.0001816670000000034, 0.00018212499999999826, 0.00018193100000000323, 0.00018154199999999981, 0.0001815000000000011, 0.00018176400000000092, 0.00018126399999999349, 0.00018119399999999564, 0.0001821109999999987, 0.0001813749999999975, 0.00018180500000000016, 0.00018194400000000333, 0.00018201400000000117, 0.0001815000000000011, 0.0001816109999999982, 0.00018206999999999945, 0.00018183399999999877, 0.00018162499999999776, 0.00018156999999999895, 0.00018152800000000024]</msg>
<status status="PASS" starttime="20201115 23:02:31.599" endtime="20201115 23:02:31.601"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.594" endtime="20201115 23:02:31.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.604" endtime="20201115 23:02:31.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:31.608" endtime="20201115 23:02:31.627"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.606" endtime="20201115 23:02:31.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.602" endtime="20201115 23:02:31.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.231" endtime="20201115 23:02:31.628"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.229" endtime="20201115 23:02:31.629"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.228" endtime="20201115 23:02:31.629"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.631" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 92">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.639" endtime="20201115 23:02:31.662"></status>
</kw>
<msg timestamp="20201115 23:02:31.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.638" endtime="20201115 23:02:31.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:31.663" endtime="20201115 23:02:31.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.666" endtime="20201115 23:02:31.667"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.635" endtime="20201115 23:02:31.668"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.633" endtime="20201115 23:02:31.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.675" endtime="20201115 23:02:31.960"></status>
</kw>
<msg timestamp="20201115 23:02:31.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.673" endtime="20201115 23:02:31.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024265764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:31.964" endtime="20201115 23:02:31.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:31.972" endtime="20201115 23:02:31.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.671" endtime="20201115 23:02:31.974"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.669" endtime="20201115 23:02:31.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:31.979" level="INFO">${RESULT} = [{'time': 0.024265764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018266699999999747, 'source_diff': 0.00018266699999999747}, {'time': 0.024467069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:31.975" endtime="20201115 23:02:31.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:31.992" level="INFO">${ACCURACY} = {'diff': [0.00018266699999999747, 0.0001824719999999995, 0.0001822369999999983, 0.00018294500000000033, 0.00018302800000000174, 0.0001826390000000018, 0.000182874999999999, 0.00018226400000000142, 0.0...</msg>
<status status="PASS" starttime="20201115 23:02:31.980" endtime="20201115 23:02:31.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.997" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201115 23:02:31.996" endtime="20201115 23:02:31.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:31.999" level="INFO">VALUE: [0.00018266699999999747, 0.0001824719999999995, 0.0001822369999999983, 0.00018294500000000033, 0.00018302800000000174, 0.0001826390000000018, 0.000182874999999999, 0.00018226400000000142, 0.0001826109999999992, 0.000182874999999999, 0.00018262499999999876, 0.0001826109999999992, 0.00018308300000000055, 0.00018305600000000088, 0.00018229200000000056, 0.00018316600000000197, 0.00018245799999999993, 0.00018236099999999894, 0.00018234699999999937, 0.00018223599999999882, 0.0001826109999999992, 0.00018259699999999962, 0.0001829170000000012, 0.0001830000000000026, 0.00018273599999999932, 0.0001826940000000006, 0.00018266600000000147, 0.00018240300000000112, 0.00018272200000000322, 0.00018247299999999897, 0.00018259699999999962, 0.00018251400000000167, 0.00018284700000000334, 0.00018280599999999717, 0.00018236099999999894, 0.00018308300000000055, 0.0001828330000000003, 0.00018238899999999808, 0.00018298600000000304, 0.00018306900000000098, 0.00018294400000000433, 0.00018234699999999937, 0.00018240299999999765, 0.0001826109999999992, 0.00018258399999999952, 0.0001826109999999992, 0.00018312499999999926, 0.00018238899999999808, 0.00018313899999999883, 0.00018268099999999704]</msg>
<status status="PASS" starttime="20201115 23:02:31.998" endtime="20201115 23:02:32.000"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.993" endtime="20201115 23:02:32.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.002" endtime="20201115 23:02:32.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.006" endtime="20201115 23:02:32.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.004" endtime="20201115 23:02:32.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.001" endtime="20201115 23:02:32.026"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.632" endtime="20201115 23:02:32.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.630" endtime="20201115 23:02:32.027"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:31.629" endtime="20201115 23:02:32.027"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.029" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 93">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.038" endtime="20201115 23:02:32.060"></status>
</kw>
<msg timestamp="20201115 23:02:32.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.036" endtime="20201115 23:02:32.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.061" endtime="20201115 23:02:32.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.064" endtime="20201115 23:02:32.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.034" endtime="20201115 23:02:32.066"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.031" endtime="20201115 23:02:32.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.073" endtime="20201115 23:02:32.359"></status>
</kw>
<msg timestamp="20201115 23:02:32.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024188319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.072" endtime="20201115 23:02:32.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024188319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024372083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.363" endtime="20201115 23:02:32.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.371" endtime="20201115 23:02:32.373"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.069" endtime="20201115 23:02:32.374"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.067" endtime="20201115 23:02:32.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.378" level="INFO">${RESULT} = [{'time': 0.024372083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018376399999999946, 'source_diff': 0.00018376399999999946}, {'time': 0.024578444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.375" endtime="20201115 23:02:32.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.391" level="INFO">${ACCURACY} = {'diff': [0.00018376399999999946, 0.00018406900000000198, 0.00018381900000000173, 0.00018400000000000014, 0.00018386199999999991, 0.00018355600000000138, 0.00018358299999999758, 0.00018386199999999991...</msg>
<status status="PASS" starttime="20201115 23:02:32.379" endtime="20201115 23:02:32.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.396" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.395" endtime="20201115 23:02:32.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.399" level="INFO">VALUE: [0.00018376399999999946, 0.00018406900000000198, 0.00018381900000000173, 0.00018400000000000014, 0.00018386199999999991, 0.00018355600000000138, 0.00018358299999999758, 0.00018386199999999991, 0.0001837919999999986, 0.00018330500000000166, 0.00018406999999999799, 0.00018415199999999993, 0.00018369399999999814, 0.00018336099999999994, 0.00018358299999999758, 0.00018380500000000216, 0.00018366700000000194, 0.0001841110000000007, 0.0001840689999999985, 0.00018324999999999939, 0.0001838330000000013, 0.00018326399999999896, 0.0001840980000000006, 0.00018326399999999896, 0.00018392999999999882, 0.00018404199999999885, 0.00018355599999999792, 0.00018323599999999982, 0.0001838469999999974, 0.0001841119999999967, 0.00018386100000000044, 0.0001836810000000015, 0.00018334700000000037, 0.0001833749999999995, 0.00018394500000000133, 0.00018391699999999872, 0.0001839859999999971, 0.00018376400000000293, 0.0001833749999999995, 0.0001836949999999976, 0.00018356900000000148, 0.00018406900000000198, 0.00018397199999999753, 0.00018369399999999814, 0.00018376400000000293, 0.0001833200000000007, 0.00018399999999999667, 0.00018423600000000429, 0.0001833749999999995, 0.00018352800000000224]</msg>
<status status="PASS" starttime="20201115 23:02:32.397" endtime="20201115 23:02:32.399"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.392" endtime="20201115 23:02:32.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.402" endtime="20201115 23:02:32.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.405" endtime="20201115 23:02:32.424"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.403" endtime="20201115 23:02:32.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.400" endtime="20201115 23:02:32.425"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.030" endtime="20201115 23:02:32.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.028" endtime="20201115 23:02:32.426"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.027" endtime="20201115 23:02:32.426"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.429" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 94">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.437" endtime="20201115 23:02:32.459"></status>
</kw>
<msg timestamp="20201115 23:02:32.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.435" endtime="20201115 23:02:32.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.461" endtime="20201115 23:02:32.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.463" endtime="20201115 23:02:32.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.433" endtime="20201115 23:02:32.465"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.431" endtime="20201115 23:02:32.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.473" endtime="20201115 23:02:32.758"></status>
</kw>
<msg timestamp="20201115 23:02:32.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024031389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.471" endtime="20201115 23:02:32.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024031389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024215931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.762" endtime="20201115 23:02:32.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.770" endtime="20201115 23:02:32.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.468" endtime="20201115 23:02:32.772"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.466" endtime="20201115 23:02:32.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:32.777" level="INFO">${RESULT} = [{'time': 0.024215931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018454199999999935, 'source_diff': 0.00018454199999999935}, {'time': 0.024424417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:32.774" endtime="20201115 23:02:32.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:32.790" level="INFO">${ACCURACY} = {'diff': [0.00018454199999999935, 0.00018491699999999972, 0.00018431899999999876, 0.00018455499999999944, 0.000184666, 0.00018491699999999972, 0.00018443100000000226, 0.0001843049999999992, 0.00018465...</msg>
<status status="PASS" starttime="20201115 23:02:32.778" endtime="20201115 23:02:32.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.795" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201115 23:02:32.794" endtime="20201115 23:02:32.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.797" level="INFO">VALUE: [0.00018454199999999935, 0.00018491699999999972, 0.00018431899999999876, 0.00018455499999999944, 0.000184666, 0.00018491699999999972, 0.00018443100000000226, 0.0001843049999999992, 0.0001846529999999999, 0.00018467999999999957, 0.00018505499999999994, 0.00018484800000000134, 0.0001845140000000002, 0.00018440299999999965, 0.00018473600000000132, 0.00018468099999999904, 0.00018486100000000144, 0.00018423599999999735, 0.00018476400000000046, 0.00018438900000000008, 0.00018481899999999926, 0.00018511099999999822, 0.000184568999999999, 0.00018449999999999717, 0.00018454200000000281, 0.00018513900000000083, 0.00018450000000000064, 0.000184568999999999, 0.0001845140000000002, 0.0001852079999999992, 0.0001843750000000005, 0.00018486099999999797, 0.00018506999999999899, 0.00018425000000000039, 0.00018455600000000238, 0.00018449999999999717, 0.000184875000000001, 0.00018488900000000058, 0.00018426399999999649, 0.0001843330000000018, 0.0001847079999999987, 0.00018465200000000043, 0.00018480499999999622, 0.0001850000000000046, 0.00018430499999999572, 0.00018455499999999597, 0.00018459700000000162, 0.0001849859999999981, 0.00018473600000000479, 0.00018443100000000573]</msg>
<status status="PASS" starttime="20201115 23:02:32.796" endtime="20201115 23:02:32.797"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.791" endtime="20201115 23:02:32.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.800" endtime="20201115 23:02:32.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:32.804" endtime="20201115 23:02:32.823"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.802" endtime="20201115 23:02:32.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.799" endtime="20201115 23:02:32.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.429" endtime="20201115 23:02:32.824"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.427" endtime="20201115 23:02:32.825"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.427" endtime="20201115 23:02:32.825"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.827" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 95">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.835" endtime="20201115 23:02:32.859"></status>
</kw>
<msg timestamp="20201115 23:02:32.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.834" endtime="20201115 23:02:32.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:32.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:32.860" endtime="20201115 23:02:32.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.863" endtime="20201115 23:02:32.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.831" endtime="20201115 23:02:32.865"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.829" endtime="20201115 23:02:32.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:32.872" endtime="20201115 23:02:33.159"></status>
</kw>
<msg timestamp="20201115 23:02:33.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024867819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025053597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:32.871" endtime="20201115 23:02:33.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024867819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025053597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.163" endtime="20201115 23:02:33.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.171" endtime="20201115 23:02:33.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.868" endtime="20201115 23:02:33.173"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.866" endtime="20201115 23:02:33.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.178" level="INFO">${RESULT} = [{'time': 0.025053597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018577800000000103, 'source_diff': 0.00018577800000000103}, {'time': 0.025256972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:33.174" endtime="20201115 23:02:33.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.192" level="INFO">${ACCURACY} = {'diff': [0.00018577800000000103, 0.00018605499999999747, 0.00018597199999999953, 0.00018630600000000067, 0.00018555500000000044, 0.00018536099999999847, 0.00018606899999999704, 0.0001859859999999991,...</msg>
<status status="PASS" starttime="20201115 23:02:33.179" endtime="20201115 23:02:33.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.197" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.196" endtime="20201115 23:02:33.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.199" level="INFO">VALUE: [0.00018577800000000103, 0.00018605499999999747, 0.00018597199999999953, 0.00018630600000000067, 0.00018555500000000044, 0.00018536099999999847, 0.00018606899999999704, 0.0001859859999999991, 0.00018563900000000133, 0.00018599999999999867, 0.00018549999999999817, 0.00018595799999999996, 0.00018575000000000189, 0.00018563899999999786, 0.00018590200000000168, 0.0001862080000000002, 0.00018543000000000032, 0.0001856949999999996, 0.00018602800000000128, 0.00018570899999999918, 0.0001860270000000018, 0.00018566700000000047, 0.0001853050000000002, 0.00018558299999999958, 0.00018568000000000057, 0.00018581900000000026, 0.00018588900000000158, 0.00018543000000000032, 0.00018591599999999778, 0.0001856949999999996, 0.00018536100000000194, 0.00018599999999999867, 0.00018612499999999532, 0.00018601399999999824, 0.00018594399999999345, 0.0001858330000000033, 0.00018556899999999654, 0.00018544499999999936, 0.00018523599999999835, 0.00018568100000000004, 0.0001857780000000045, 0.0001854439999999999, 0.00018611099999999575, 0.0001859310000000003, 0.00018608300000000355, 0.0001854729999999985, 0.0001854859999999986, 0.0001860409999999979, 0.00018559700000000262, 0.00018572199999999928]</msg>
<status status="PASS" starttime="20201115 23:02:33.198" endtime="20201115 23:02:33.200"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.193" endtime="20201115 23:02:33.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.202" endtime="20201115 23:02:33.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.206" endtime="20201115 23:02:33.225"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.204" endtime="20201115 23:02:33.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.201" endtime="20201115 23:02:33.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.828" endtime="20201115 23:02:33.226"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.826" endtime="20201115 23:02:33.227"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:32.825" endtime="20201115 23:02:33.227"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.229" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 96">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.238" endtime="20201115 23:02:33.260"></status>
</kw>
<msg timestamp="20201115 23:02:33.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.236" endtime="20201115 23:02:33.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.262" endtime="20201115 23:02:33.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.265" endtime="20201115 23:02:33.266"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.234" endtime="20201115 23:02:33.267"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.231" endtime="20201115 23:02:33.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.274" endtime="20201115 23:02:33.559"></status>
</kw>
<msg timestamp="20201115 23:02:33.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024454042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02464125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:33.272" endtime="20201115 23:02:33.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024454042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02464125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201115 23:02:33.563" endtime="20201115 23:02:33.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.571" endtime="20201115 23:02:33.573"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.270" endtime="20201115 23:02:33.574"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.268" endtime="20201115 23:02:33.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.578" level="INFO">${RESULT} = [{'time': 0.02464125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001872080000000012, 'source_diff': 0.0001872080000000012}, {'time': 0.024842569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201115 23:02:33.575" endtime="20201115 23:02:33.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.591" level="INFO">${ACCURACY} = {'diff': [0.0001872080000000012, 0.0001871249999999998, 0.00018659700000000015, 0.00018675000000000289, 0.0001869579999999975, 0.00018624999999999892, 0.00018723600000000035, 0.0001864859999999996, 0....</msg>
<status status="PASS" starttime="20201115 23:02:33.579" endtime="20201115 23:02:33.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.596" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.595" endtime="20201115 23:02:33.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.598" level="INFO">VALUE: [0.0001872080000000012, 0.0001871249999999998, 0.00018659700000000015, 0.00018675000000000289, 0.0001869579999999975, 0.00018624999999999892, 0.00018723600000000035, 0.0001864859999999996, 0.0001871669999999985, 0.00018630600000000067, 0.00018649999999999917, 0.00018641700000000122, 0.00018655600000000092, 0.00018637499999999904, 0.00018670799999999724, 0.00018699999999999967, 0.00018674999999999942, 0.00018701399999999924, 0.00018669400000000114, 0.0001867080000000007, 0.00018651399999999874, 0.0001868189999999978, 0.0001867920000000016, 0.0001866530000000019, 0.00018662500000000276, 0.00018702800000000228, 0.00018676400000000246, 0.0001863469999999999, 0.0001863469999999999, 0.00018623699999999882, 0.00018691700000000172, 0.00018679199999999813, 0.0001863469999999999, 0.00018623599999999935, 0.00018647200000000003, 0.00018647200000000003, 0.00018622199999999978, 0.00018655499999999797, 0.00018647200000000003, 0.00018629200000000457, 0.00018672200000000028, 0.00018687499999999607, 0.00018634699999999643, 0.00018626399999999849, 0.00018637499999999557, 0.00018625000000000586, 0.00018643000000000132, 0.0001863189999999973, 0.00018656899999999754, 0.00018629099999999815]</msg>
<status status="PASS" starttime="20201115 23:02:33.597" endtime="20201115 23:02:33.599"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.592" endtime="20201115 23:02:33.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.602" endtime="20201115 23:02:33.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:33.605" endtime="20201115 23:02:33.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.603" endtime="20201115 23:02:33.625"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.600" endtime="20201115 23:02:33.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.230" endtime="20201115 23:02:33.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.228" endtime="20201115 23:02:33.626"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.227" endtime="20201115 23:02:33.627"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.629" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 97">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.637" endtime="20201115 23:02:33.660"></status>
</kw>
<msg timestamp="20201115 23:02:33.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.636" endtime="20201115 23:02:33.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:33.661" endtime="20201115 23:02:33.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.664" endtime="20201115 23:02:33.665"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.633" endtime="20201115 23:02:33.666"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.631" endtime="20201115 23:02:33.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.673" endtime="20201115 23:02:33.958"></status>
</kw>
<msg timestamp="20201115 23:02:33.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.671" endtime="20201115 23:02:33.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024050139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024237556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:33.962" endtime="20201115 23:02:33.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:33.970" endtime="20201115 23:02:33.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.669" endtime="20201115 23:02:33.972"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.667" endtime="20201115 23:02:33.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:33.977" level="INFO">${RESULT} = [{'time': 0.024237556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018741699999999875, 'source_diff': 0.00018741699999999875}, {'time': 0.024441917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:33.973" endtime="20201115 23:02:33.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:33.990" level="INFO">${ACCURACY} = {'diff': [0.00018741699999999875, 0.00018734800000000038, 0.00018729199999999863, 0.00018759700000000115, 0.00018779099999999965, 0.00018743099999999832, 0.0001881389999999969, 0.00018748700000000007,...</msg>
<status status="PASS" starttime="20201115 23:02:33.978" endtime="20201115 23:02:33.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.994" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201115 23:02:33.993" endtime="20201115 23:02:33.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:33.997" level="INFO">VALUE: [0.00018741699999999875, 0.00018734800000000038, 0.00018729199999999863, 0.00018759700000000115, 0.00018779099999999965, 0.00018743099999999832, 0.0001881389999999969, 0.00018748700000000007, 0.00018776299999999704, 0.0001878890000000001, 0.00018741699999999875, 0.00018766599999999953, 0.0001873050000000022, 0.0001874860000000006, 0.0001872080000000012, 0.0001874019999999997, 0.00018794500000000186, 0.0001874449999999979, 0.0001875279999999993, 0.00018775000000000042, 0.00018792999999999935, 0.00018723600000000035, 0.00018815299999999993, 0.00018815299999999993, 0.0001879999999999972, 0.00018773600000000085, 0.00018761099999999725, 0.00018809700000000165, 0.0001880279999999998, 0.00018759800000000063, 0.00018731900000000176, 0.0001881950000000021, 0.00018752699999999983, 0.00018793099999999882, 0.0001876110000000042, 0.000187360999999997, 0.00018730500000000566, 0.00018773600000000085, 0.00018773600000000085, 0.00018745800000000146, 0.00018766700000000247, 0.00018752699999999983, 0.0001878330000000053, 0.00018727799999999906, 0.00018729199999999863, 0.00018729200000000557, 0.00018812500000000426, 0.00018747200000000103, 0.00018811099999999775, 0.00018718100000000154]</msg>
<status status="PASS" starttime="20201115 23:02:33.995" endtime="20201115 23:02:33.998"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.991" endtime="20201115 23:02:33.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.001" endtime="20201115 23:02:34.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.004" endtime="20201115 23:02:34.023"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.002" endtime="20201115 23:02:34.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.999" endtime="20201115 23:02:34.024"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.630" endtime="20201115 23:02:34.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.628" endtime="20201115 23:02:34.025"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:33.627" endtime="20201115 23:02:34.025"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.028" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 98">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.036" endtime="20201115 23:02:34.058"></status>
</kw>
<msg timestamp="20201115 23:02:34.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.034" endtime="20201115 23:02:34.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.060" endtime="20201115 23:02:34.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.062" endtime="20201115 23:02:34.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.032" endtime="20201115 23:02:34.064"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.030" endtime="20201115 23:02:34.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.071" endtime="20201115 23:02:34.363"></status>
</kw>
<msg timestamp="20201115 23:02:34.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024272708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.070" endtime="20201115 23:02:34.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024272708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.367" endtime="20201115 23:02:34.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.375" endtime="20201115 23:02:34.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.067" endtime="20201115 23:02:34.377"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.066" endtime="20201115 23:02:34.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.382" level="INFO">${RESULT} = [{'time': 0.024272708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018879100000000065, 'source_diff': 0.00018879100000000065}, {'time': 0.024480083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201115 23:02:34.378" endtime="20201115 23:02:34.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.395" level="INFO">${ACCURACY} = {'diff': [0.00018879100000000065, 0.00018880500000000022, 0.0001882219999999983, 0.00018902700000000133, 0.00018861100000000172, 0.00018890300000000068, 0.0001889159999999973, 0.000188764000000001, 0....</msg>
<status status="PASS" starttime="20201115 23:02:34.383" endtime="20201115 23:02:34.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.400" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.398" endtime="20201115 23:02:34.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.402" level="INFO">VALUE: [0.00018879100000000065, 0.00018880500000000022, 0.0001882219999999983, 0.00018902700000000133, 0.00018861100000000172, 0.00018890300000000068, 0.0001889159999999973, 0.000188764000000001, 0.00018840300000000018, 0.00018851399999999727, 0.00018869399999999967, 0.00018886100000000197, 0.0001891670000000005, 0.00018837500000000104, 0.000188360999999998, 0.00018879100000000065, 0.00018873700000000132, 0.00018873599999999838, 0.00018834699999999843, 0.0001889449999999994, 0.00018875000000000142, 0.00018863900000000086, 0.00018906900000000004, 0.00018919400000000017, 0.00018893000000000035, 0.00018842999999999985, 0.00018862499999999782, 0.00018919400000000017, 0.0001891389999999979, 0.00018887500000000154, 0.00018824999999999745, 0.00018855499999999997, 0.00018848599999999813, 0.00018918100000000354, 0.0001888059999999997, 0.00018873600000000185, 0.0001883750000000045, 0.00018919499999999617, 0.00018873600000000185, 0.0001882640000000005, 0.00018887499999999807, 0.00018861099999999825, 0.0001883059999999992, 0.00018866700000000347, 0.00018911099999999875, 0.0001888059999999997, 0.0001888189999999998, 0.00018847200000000203, 0.00018891700000000372, 0.00018873600000000185]</msg>
<status status="PASS" starttime="20201115 23:02:34.401" endtime="20201115 23:02:34.403"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.396" endtime="20201115 23:02:34.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.406" endtime="20201115 23:02:34.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.409" endtime="20201115 23:02:34.428"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.408" endtime="20201115 23:02:34.429"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.404" endtime="20201115 23:02:34.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.028" endtime="20201115 23:02:34.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.026" endtime="20201115 23:02:34.430"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.025" endtime="20201115 23:02:34.430"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.433" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 99">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.441" endtime="20201115 23:02:34.464"></status>
</kw>
<msg timestamp="20201115 23:02:34.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.439" endtime="20201115 23:02:34.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.466" endtime="20201115 23:02:34.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.468" endtime="20201115 23:02:34.470"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.437" endtime="20201115 23:02:34.471"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.435" endtime="20201115 23:02:34.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.477" endtime="20201115 23:02:34.763"></status>
</kw>
<msg timestamp="20201115 23:02:34.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.476" endtime="20201115 23:02:34.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024889722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025079583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201115 23:02:34.767" endtime="20201115 23:02:34.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.775" endtime="20201115 23:02:34.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.473" endtime="20201115 23:02:34.777"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.472" endtime="20201115 23:02:34.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:34.782" level="INFO">${RESULT} = [{'time': 0.025079583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001898609999999995, 'source_diff': 0.0001898609999999995}, {'time': 0.025301958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:34.778" endtime="20201115 23:02:34.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:34.797" level="INFO">${ACCURACY} = {'diff': [0.0001898609999999995, 0.00018980499999999775, 0.00018942999999999738, 0.00019015300000000193, 0.00018955600000000045, 0.00018941700000000075, 0.00018973599999999938, 0.0001898609999999995, ...</msg>
<status status="PASS" starttime="20201115 23:02:34.783" endtime="20201115 23:02:34.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.801" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201115 23:02:34.800" endtime="20201115 23:02:34.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.804" level="INFO">VALUE: [0.0001898609999999995, 0.00018980499999999775, 0.00018942999999999738, 0.00019015300000000193, 0.00018955600000000045, 0.00018941700000000075, 0.00018973599999999938, 0.0001898609999999995, 0.00018984699999999993, 0.0001897779999999981, 0.0001896389999999984, 0.00019004200000000138, 0.0001900830000000006, 0.00018933399999999934, 0.00018929200000000063, 0.0001893190000000003, 0.00019009700000000018, 0.00018975000000000242, 0.00018963900000000186, 0.00018977800000000156, 0.0001898329999999969, 0.0001901389999999989, 0.000189458, 0.00018991600000000178, 0.00018961100000000272, 0.00018959699999999968, 0.00018956900000000054, 0.00018970800000000024, 0.00018959699999999968, 0.00018922299999999878, 0.00018979100000000165, 0.0001898060000000007, 0.00019002700000000233, 0.00018972300000000275, 0.00018950000000000217, 0.0001894860000000026, 0.00018933299999999986, 0.00018961099999999925, 0.00018984699999999993, 0.00018979100000000165, 0.00018922300000000225, 0.00018984699999999993, 0.0001901809999999976, 0.00019016699999999803, 0.00018993000000000482, 0.0001895269999999949, 0.00019016700000000497, 0.00018965299999999796, 0.00018965200000000543, 0.00018979200000000113]</msg>
<status status="PASS" starttime="20201115 23:02:34.802" endtime="20201115 23:02:34.804"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.798" endtime="20201115 23:02:34.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.807" endtime="20201115 23:02:34.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:34.810" endtime="20201115 23:02:34.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.809" endtime="20201115 23:02:34.830"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.805" endtime="20201115 23:02:34.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.433" endtime="20201115 23:02:34.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.431" endtime="20201115 23:02:34.831"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.431" endtime="20201115 23:02:34.831"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>${repeat}</arg>
<arg>Measure Sleep Accuracy with TIMER_SLEEP for ${duration}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.834" level="INFO">Repeating keyword, round 1/1.</msg>
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for 100">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.842" endtime="20201115 23:02:34.865"></status>
</kw>
<msg timestamp="20201115 23:02:34.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.840" endtime="20201115 23:02:34.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:34.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201115 23:02:34.866" endtime="20201115 23:02:34.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.869" endtime="20201115 23:02:34.870"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.838" endtime="20201115 23:02:34.871"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.836" endtime="20201115 23:02:34.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:34.878" endtime="20201115 23:02:35.164"></status>
</kw>
<msg timestamp="20201115 23:02:35.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024094347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:34.876" endtime="20201115 23:02:35.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024094347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0242855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201115 23:02:35.168" endtime="20201115 23:02:35.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.181" endtime="20201115 23:02:35.182"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.874" endtime="20201115 23:02:35.183"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.872" endtime="20201115 23:02:35.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201115 23:02:35.187" level="INFO">${RESULT} = [{'time': 0.0242855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019115300000000293, 'source_diff': 0.00019115300000000293}, {'time': 0.024500875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201115 23:02:35.184" endtime="20201115 23:02:35.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201115 23:02:35.201" level="INFO">${ACCURACY} = {'diff': [0.00019115300000000293, 0.00019023599999999988, 0.00019097200000000106, 0.00019047200000000056, 0.0001903890000000026, 0.00019051399999999927, 0.00019095900000000096, 0.00019033300000000086,...</msg>
<status status="PASS" starttime="20201115 23:02:35.188" endtime="20201115 23:02:35.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.205" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201115 23:02:35.204" endtime="20201115 23:02:35.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201115 23:02:35.208" level="INFO">VALUE: [0.00019115300000000293, 0.00019023599999999988, 0.00019097200000000106, 0.00019047200000000056, 0.0001903890000000026, 0.00019051399999999927, 0.00019095900000000096, 0.00019033300000000086, 0.00019102699999999986, 0.00019066699999999853, 0.00019109700000000118, 0.00019034699999999696, 0.000190361, 0.00019051399999999927, 0.00019076399999999952, 0.00019052799999999884, 0.00019051400000000274, 0.00019109700000000118, 0.00019051399999999927, 0.0001903479999999999, 0.0001907220000000008, 0.00019076399999999952, 0.00019033399999999687, 0.00019059800000000016, 0.00019102799999999934, 0.0001908060000000017, 0.00019056999999999755, 0.00019048600000000013, 0.00019062499999999982, 0.0001911389999999999, 0.00019057000000000102, 0.000190361, 0.00019108299999999814, 0.000190667000000002, 0.00019044399999999795, 0.00019065299999999896, 0.00019109700000000118, 0.00019083299999999442, 0.0001902080000000042, 0.00019075000000000342, 0.0001908480000000004, 0.00019056900000000154, 0.00019094499999999792, 0.00019106900000000204, 0.00019101400000000324, 0.00019037499999999957, 0.00019105499999999553, 0.00019033300000000086, 0.00019109700000000118, 0.00019022199999999684]</msg>
<status status="PASS" starttime="20201115 23:02:35.206" endtime="20201115 23:02:35.208"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.202" endtime="20201115 23:02:35.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201115 23:02:35.211" endtime="20201115 23:02:35.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.214" endtime="20201115 23:02:35.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.213" endtime="20201115 23:02:35.234"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.209" endtime="20201115 23:02:35.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.834" endtime="20201115 23:02:35.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.833" endtime="20201115 23:02:35.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:34.832" endtime="20201115 23:02:35.235"></status>
</kw>
<status status="PASS" starttime="20201115 23:01:55.368" endtime="20201115 23:02:35.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201115 23:02:35.240" endtime="20201115 23:02:35.259"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.238" endtime="20201115 23:02:35.260"></status>
</kw>
<status status="PASS" starttime="20201115 23:02:35.237" endtime="20201115 23:02:35.260"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201115 23:01:55.299" endtime="20201115 23:02:35.261" critical="yes"></status>
</test>
<status status="PASS" starttime="20201115 23:01:14.003" endtime="20201115 23:02:35.265"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201115 23:01:11.837" endtime="20201115 23:02:35.278"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="3" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="3" fail="0">BOARD_saml10-xpro</stat>
<stat pass="3" fail="0">dev</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="2" fail="0" id="s1-s2" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
